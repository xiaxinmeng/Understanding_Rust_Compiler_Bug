{"sha": "c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3NzQ3Y2M3NzJmNGI0YzMwZWRlMzYxNjY3OGQ3YTNiYzJjODliZjc=", "commit": {"author": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2020-10-05T23:36:10Z"}, "committer": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2020-11-06T02:24:12Z"}, "message": "Rust coverage before splitting instrument_coverage.rs", "tree": {"sha": "196eccbbe916834b056aef3a78c06d8065a02542", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/196eccbbe916834b056aef3a78c06d8065a02542"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "html_url": "https://github.com/rust-lang/rust/commit/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/comments", "author": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d78d1d02761b906038ba4d54c5f3427f920f5fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d78d1d02761b906038ba4d54c5f3427f920f5fb", "html_url": "https://github.com/rust-lang/rust/commit/9d78d1d02761b906038ba4d54c5f3427f920f5fb"}], "stats": {"total": 11064, "additions": 9821, "deletions": 1243}, "files": [{"sha": "41827a91ba4be27c0a66b86c42813c5a473eeb0e", "filename": "compiler/rustc_codegen_llvm/src/coverageinfo/mapgen.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -129,7 +129,7 @@ impl CoverageMapGenerator {\n                 let (filenames_index, _) = self.filenames.insert_full(c_filename);\n                 virtual_file_mapping.push(filenames_index as u32);\n             }\n-            debug!(\"Adding counter {:?} to map for {:?}\", counter, region,);\n+            debug!(\"Adding counter {:?} to map for {:?}\", counter, region);\n             mapping_regions.push(CounterMappingRegion::code_region(\n                 counter,\n                 current_file_id,"}, {"sha": "c4b4032fd478cceb7c7576f5a94549c50843b93e", "filename": "compiler/rustc_codegen_llvm/src/coverageinfo/mod.rs", "status": "modified", "additions": 37, "deletions": 27, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmod.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -12,7 +12,7 @@ use rustc_codegen_ssa::traits::{\n use rustc_data_structures::fx::FxHashMap;\n use rustc_llvm::RustString;\n use rustc_middle::mir::coverage::{\n-    CodeRegion, CounterValueReference, ExpressionOperandId, InjectedExpressionIndex, Op,\n+    CodeRegion, CounterValueReference, ExpressionOperandId, InjectedExpressionId, Op,\n };\n use rustc_middle::ty::Instance;\n \n@@ -27,16 +27,16 @@ const COVMAP_VAR_ALIGN_BYTES: usize = 8;\n \n /// A context object for maintaining all state needed by the coverageinfo module.\n pub struct CrateCoverageContext<'tcx> {\n-    // Coverage region data for each instrumented function identified by DefId.\n-    pub(crate) function_coverage_map: RefCell<FxHashMap<Instance<'tcx>, FunctionCoverage>>,\n+    // Coverage data for each instrumented function identified by DefId.\n+    pub(crate) function_coverage_map: RefCell<FxHashMap<Instance<'tcx>, FunctionCoverage<'tcx>>>,\n }\n \n impl<'tcx> CrateCoverageContext<'tcx> {\n     pub fn new() -> Self {\n         Self { function_coverage_map: Default::default() }\n     }\n \n-    pub fn take_function_coverage_map(&self) -> FxHashMap<Instance<'tcx>, FunctionCoverage> {\n+    pub fn take_function_coverage_map(&self) -> FxHashMap<Instance<'tcx>, FunctionCoverage<'tcx>> {\n         self.function_coverage_map.replace(FxHashMap::default())\n     }\n }\n@@ -58,7 +58,23 @@ impl CoverageInfoBuilderMethods<'tcx> for Builder<'a, 'll, 'tcx> {\n         unsafe { llvm::LLVMRustCoverageCreatePGOFuncNameVar(llfn, mangled_fn_name.as_ptr()) }\n     }\n \n-    fn add_counter_region(\n+    fn set_function_source_hash(&mut self, instance: Instance<'tcx>, function_source_hash: u64) -> bool {\n+        if let Some(coverage_context) = self.coverage_context() {\n+            debug!(\n+                \"ensuring function source hash is set for instance={:?}; function_source_hash={}\",\n+                instance, function_source_hash,\n+            );\n+            let mut coverage_map = coverage_context.function_coverage_map.borrow_mut();\n+            coverage_map\n+                .entry(instance)\n+                .or_insert_with(|| FunctionCoverage::new(self.tcx, instance))\n+                .set_function_source_hash(function_source_hash);\n+        } else {\n+            false\n+        }\n+    }\n+\n+    fn add_coverage_counter(\n         &mut self,\n         instance: Instance<'tcx>,\n         function_source_hash: u64,\n@@ -67,59 +83,53 @@ impl CoverageInfoBuilderMethods<'tcx> for Builder<'a, 'll, 'tcx> {\n     ) -> bool {\n         if let Some(coverage_context) = self.coverage_context() {\n             debug!(\n-                \"adding counter to coverage_regions: instance={:?}, function_source_hash={}, id={:?}, \\\n+                \"adding counter to coverage_map: instance={:?}, function_source_hash={}, id={:?}, \\\n                 at {:?}\",\n                 instance, function_source_hash, id, region,\n             );\n-            let mut coverage_regions = coverage_context.function_coverage_map.borrow_mut();\n-            coverage_regions\n+            let mut coverage_map = coverage_context.function_coverage_map.borrow_mut();\n+            coverage_map\n                 .entry(instance)\n                 .or_insert_with(|| FunctionCoverage::new(self.tcx, instance))\n                 .add_counter(function_source_hash, id, region);\n-            true\n         } else {\n             false\n         }\n     }\n \n-    fn add_counter_expression_region(\n+    fn add_coverage_counter_expression(\n         &mut self,\n         instance: Instance<'tcx>,\n-        id: InjectedExpressionIndex,\n+        id: InjectedExpressionId,\n         lhs: ExpressionOperandId,\n         op: Op,\n         rhs: ExpressionOperandId,\n-        region: CodeRegion,\n-    ) -> bool {\n-        if let Some(coverage_context) = self.coverage_context() {\n+        region: Option<CodeRegion>,\n+    ) {\n+        if let Some(coverage_context) = self.coverage_context() -> bool {\n             debug!(\n-                \"adding counter expression to coverage_regions: instance={:?}, id={:?}, {:?} {:?} {:?}, \\\n-                at {:?}\",\n+                \"adding counter expression to coverage_map: instance={:?}, id={:?}, {:?} {:?} {:?}; \\\n+                region: {:?}\",\n                 instance, id, lhs, op, rhs, region,\n             );\n-            let mut coverage_regions = coverage_context.function_coverage_map.borrow_mut();\n-            coverage_regions\n+            let mut coverage_map = coverage_context.function_coverage_map.borrow_mut();\n+            coverage_map\n                 .entry(instance)\n                 .or_insert_with(|| FunctionCoverage::new(self.tcx, instance))\n                 .add_counter_expression(id, lhs, op, rhs, region);\n-            true\n         } else {\n             false\n         }\n     }\n \n-    fn add_unreachable_region(&mut self, instance: Instance<'tcx>, region: CodeRegion) -> bool {\n+    fn add_coverage_unreachable(&mut self, instance: Instance<'tcx>, region: CodeRegion) -> bool {\n         if let Some(coverage_context) = self.coverage_context() {\n-            debug!(\n-                \"adding unreachable code to coverage_regions: instance={:?}, at {:?}\",\n-                instance, region,\n-            );\n-            let mut coverage_regions = coverage_context.function_coverage_map.borrow_mut();\n-            coverage_regions\n+            debug!(\"adding unreachable code to coverage_map: instance={:?}, at {:?}\", instance, region,);\n+            let mut coverage_map = coverage_context.function_coverage_map.borrow_mut();\n+            coverage_map\n                 .entry(instance)\n                 .or_insert_with(|| FunctionCoverage::new(self.tcx, instance))\n                 .add_unreachable_region(region);\n-            true\n         } else {\n             false\n         }"}, {"sha": "bcac2c90fdc20a1c12a3486da5087d968c2f4968", "filename": "compiler/rustc_codegen_ssa/src/coverageinfo/ffi.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcoverageinfo%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcoverageinfo%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcoverageinfo%2Fffi.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -3,7 +3,7 @@ use rustc_middle::mir::coverage::{CounterValueReference, MappedExpressionIndex};\n /// Aligns with [llvm::coverage::Counter::CounterKind](https://github.com/rust-lang/llvm-project/blob/rustc/10.0-2020-05-05/llvm/include/llvm/ProfileData/Coverage/CoverageMapping.h#L91)\n #[derive(Copy, Clone, Debug)]\n #[repr(C)]\n-enum CounterKind {\n+pub enum CounterKind {\n     Zero = 0,\n     CounterValueReference = 1,\n     Expression = 2,\n@@ -23,8 +23,8 @@ enum CounterKind {\n #[repr(C)]\n pub struct Counter {\n     // Important: The layout (order and types of fields) must match its C++ counterpart.\n-    kind: CounterKind,\n-    id: u32,\n+    pub kind: CounterKind,\n+    pub id: u32,\n }\n \n impl Counter {\n@@ -55,9 +55,9 @@ pub enum ExprKind {\n #[derive(Copy, Clone, Debug)]\n #[repr(C)]\n pub struct CounterExpression {\n-    kind: ExprKind,\n-    lhs: Counter,\n-    rhs: Counter,\n+    pub kind: ExprKind,\n+    pub lhs: Counter,\n+    pub rhs: Counter,\n }\n \n impl CounterExpression {"}, {"sha": "006d6662196a0db385d2f4ea8e47f526ec6741b9", "filename": "compiler/rustc_codegen_ssa/src/coverageinfo/map.rs", "status": "modified", "additions": 76, "deletions": 35, "changes": 111, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcoverageinfo%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcoverageinfo%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcoverageinfo%2Fmap.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -2,18 +2,18 @@ pub use super::ffi::*;\n \n use rustc_index::vec::IndexVec;\n use rustc_middle::mir::coverage::{\n-    CodeRegion, CounterValueReference, ExpressionOperandId, InjectedExpressionIndex,\n-    MappedExpressionIndex, Op,\n+    CodeRegion, CounterValueReference, ExpressionOperandId, InjectedExpressionId,\n+    InjectedExpressionIndex, MappedExpressionIndex, Op,\n };\n use rustc_middle::ty::Instance;\n use rustc_middle::ty::TyCtxt;\n \n #[derive(Clone, Debug)]\n-pub struct ExpressionRegion {\n+pub struct Expression {\n     lhs: ExpressionOperandId,\n     op: Op,\n     rhs: ExpressionOperandId,\n-    region: CodeRegion,\n+    region: Option<CodeRegion>,\n }\n \n /// Collects all of the coverage regions associated with (a) injected counters, (b) counter\n@@ -28,24 +28,43 @@ pub struct ExpressionRegion {\n /// only whitespace or comments). According to LLVM Code Coverage Mapping documentation, \"A count\n /// for a gap area is only used as the line execution count if there are no other regions on a\n /// line.\"\n-pub struct FunctionCoverage {\n+pub struct FunctionCoverage<'tcx> {\n+    instance: Instance<'tcx>,\n     source_hash: u64,\n     counters: IndexVec<CounterValueReference, Option<CodeRegion>>,\n-    expressions: IndexVec<InjectedExpressionIndex, Option<ExpressionRegion>>,\n+    expressions: IndexVec<InjectedExpressionIndex, Option<Expression>>,\n     unreachable_regions: Vec<CodeRegion>,\n }\n \n-impl FunctionCoverage {\n-    pub fn new<'tcx>(tcx: TyCtxt<'tcx>, instance: Instance<'tcx>) -> Self {\n+impl<'tcx> FunctionCoverage<'tcx> {\n+    pub fn new(tcx: TyCtxt<'tcx>, instance: Instance<'tcx>) -> Self {\n         let coverageinfo = tcx.coverageinfo(instance.def_id());\n+        debug!(\n+            \"FunctionCoverage::new(instance={:?}) has coverageinfo={:?}\",\n+            instance, coverageinfo\n+        );\n         Self {\n+            instance,\n             source_hash: 0, // will be set with the first `add_counter()`\n             counters: IndexVec::from_elem_n(None, coverageinfo.num_counters as usize),\n             expressions: IndexVec::from_elem_n(None, coverageinfo.num_expressions as usize),\n             unreachable_regions: Vec::new(),\n         }\n     }\n \n+    /// Although every function should have at least one `Counter`, the `Counter` isn't required to\n+    /// have a `CodeRegion`. (The `CodeRegion` may be associated only with `Expressions`.) This\n+    /// method supports the ability to ensure the `function_source_hash` is set from `Counters` that\n+    /// do not trigger the call to `add_counter()` because they don't have an associated\n+    /// `CodeRegion` to add.\n+    pub fn set_function_source_hash(&mut self, source_hash: u64) {\n+        if self.source_hash == 0 {\n+            self.source_hash = source_hash;\n+        } else {\n+            debug_assert_eq!(source_hash, self.source_hash);\n+        }\n+    }\n+\n     /// Adds a code region to be counted by an injected counter intrinsic.\n     /// The source_hash (computed during coverage instrumentation) should also be provided, and\n     /// should be the same for all counters in a given function.\n@@ -74,15 +93,19 @@ impl FunctionCoverage {\n     /// counters and expressions have been added.\n     pub fn add_counter_expression(\n         &mut self,\n-        expression_id: InjectedExpressionIndex,\n+        expression_id: InjectedExpressionId,\n         lhs: ExpressionOperandId,\n         op: Op,\n         rhs: ExpressionOperandId,\n-        region: CodeRegion,\n+        region: Option<CodeRegion>,\n     ) {\n+        debug!(\n+            \"add_counter_expression({:?}, lhs={:?}, op={:?}, rhs={:?} at {:?}\",\n+            expression_id, lhs, op, rhs, region\n+        );\n         let expression_index = self.expression_index(u32::from(expression_id));\n         self.expressions[expression_index]\n-            .replace(ExpressionRegion { lhs, op, rhs, region })\n+            .replace(Expression { lhs, op, rhs, region })\n             .expect_none(\"add_counter_expression called with duplicate `id_descending_from_max`\");\n     }\n \n@@ -103,7 +126,11 @@ impl FunctionCoverage {\n     pub fn get_expressions_and_counter_regions<'a>(\n         &'a self,\n     ) -> (Vec<CounterExpression>, impl Iterator<Item = (Counter, &'a CodeRegion)>) {\n-        assert!(self.source_hash != 0);\n+        assert!(\n+            self.source_hash != 0,\n+            \"No counters provided the source_hash for function: {:?}\",\n+            self.instance\n+        );\n \n         let counter_regions = self.counter_regions();\n         let (counter_expressions, expression_regions) = self.expressions_with_regions();\n@@ -129,54 +156,60 @@ impl FunctionCoverage {\n     ) -> (Vec<CounterExpression>, impl Iterator<Item = (Counter, &'a CodeRegion)>) {\n         let mut counter_expressions = Vec::with_capacity(self.expressions.len());\n         let mut expression_regions = Vec::with_capacity(self.expressions.len());\n-        let mut new_indexes =\n-            IndexVec::from_elem_n(MappedExpressionIndex::from(u32::MAX), self.expressions.len());\n-        // Note, the initial value shouldn't matter since every index in use in `self.expressions`\n-        // will be set, and after that, `new_indexes` will only be accessed using those same\n-        // indexes.\n-\n-        // Note that an `ExpressionRegion`s at any given index can include other expressions as\n+        let mut new_indexes = IndexVec::from_elem_n(None, self.expressions.len());\n+        // Note that an `Expression`s at any given index can include other expressions as\n         // operands, but expression operands can only come from the subset of expressions having\n-        // `expression_index`s lower than the referencing `ExpressionRegion`. Therefore, it is\n+        // `expression_index`s lower than the referencing `Expression`. Therefore, it is\n         // reasonable to look up the new index of an expression operand while the `new_indexes`\n         // vector is only complete up to the current `ExpressionIndex`.\n         let id_to_counter =\n-            |new_indexes: &IndexVec<InjectedExpressionIndex, MappedExpressionIndex>,\n+            |new_indexes: &IndexVec<InjectedExpressionIndex, Option<MappedExpressionIndex>>,\n              id: ExpressionOperandId| {\n                 if id == ExpressionOperandId::ZERO {\n                     Some(Counter::zero())\n                 } else if id.index() < self.counters.len() {\n+                    // Note: Some codegen-injected Counters may be only referenced by `Expression`s,\n+                    // and may not have their own `CodeRegion`s,\n                     let index = CounterValueReference::from(id.index());\n-                    self.counters\n-                        .get(index)\n-                        .unwrap() // pre-validated\n-                        .as_ref()\n-                        .map(|_| Counter::counter_value_reference(index))\n+                    Some(Counter::counter_value_reference(index))\n                 } else {\n                     let index = self.expression_index(u32::from(id));\n                     self.expressions\n                         .get(index)\n                         .expect(\"expression id is out of range\")\n                         .as_ref()\n-                        .map(|_| Counter::expression(new_indexes[index]))\n+                        // If an expression was optimized out, assume it would have produced a count\n+                        // of zero. This ensures that expressions dependent on optimized-out\n+                        // expressions are still valid.\n+                        .map_or(Some(Counter::zero()), |_| {\n+                            new_indexes[index].map(|new_index| Counter::expression(new_index))\n+                        })\n                 }\n             };\n \n-        for (original_index, expression_region) in\n+        for (original_index, expression) in\n             self.expressions.iter_enumerated().filter_map(|(original_index, entry)| {\n                 // Option::map() will return None to filter out missing expressions. This may happen\n                 // if, for example, a MIR-instrumented expression is removed during an optimization.\n-                entry.as_ref().map(|region| (original_index, region))\n+                entry.as_ref().map(|expression| (original_index, expression))\n             })\n         {\n-            let region = &expression_region.region;\n-            let ExpressionRegion { lhs, op, rhs, .. } = *expression_region;\n+            let optional_region = &expression.region;\n+            let Expression { lhs, op, rhs, .. } = *expression;\n \n             if let Some(Some((lhs_counter, rhs_counter))) =\n                 id_to_counter(&new_indexes, lhs).map(|lhs_counter| {\n                     id_to_counter(&new_indexes, rhs).map(|rhs_counter| (lhs_counter, rhs_counter))\n                 })\n             {\n+                debug_assert!(\n+                    (lhs_counter.id as usize)\n+                        < usize::max(self.counters.len(), self.expressions.len())\n+                );\n+                debug_assert!(\n+                    (rhs_counter.id as usize)\n+                        < usize::max(self.counters.len(), self.expressions.len())\n+                );\n                 // Both operands exist. `Expression` operands exist in `self.expressions` and have\n                 // been assigned a `new_index`.\n                 let mapped_expression_index =\n@@ -190,12 +223,20 @@ impl FunctionCoverage {\n                     rhs_counter,\n                 );\n                 debug!(\n-                    \"Adding expression {:?} = {:?} at {:?}\",\n-                    mapped_expression_index, expression, region\n+                    \"Adding expression {:?} = {:?}, region: {:?}\",\n+                    mapped_expression_index, expression, optional_region\n                 );\n                 counter_expressions.push(expression);\n-                new_indexes[original_index] = mapped_expression_index;\n-                expression_regions.push((Counter::expression(mapped_expression_index), region));\n+                new_indexes[original_index] = Some(mapped_expression_index);\n+                if let Some(region) = optional_region {\n+                    expression_regions.push((Counter::expression(mapped_expression_index), region));\n+                }\n+            } else {\n+                debug!(\n+                    \"Ignoring expression with one or more missing operands: \\\n+                    original_index={:?}, lhs={:?}, op={:?}, rhs={:?}, region={:?}\",\n+                    original_index, lhs, op, rhs, optional_region,\n+                )\n             }\n         }\n         (counter_expressions, expression_regions.into_iter())"}, {"sha": "e52f952e93278efb3babe7a5ac7682df73d3b3cc", "filename": "compiler/rustc_codegen_ssa/src/mir/coverageinfo.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fcoverageinfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fcoverageinfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fcoverageinfo.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -10,7 +10,15 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n         let Coverage { kind, code_region } = coverage;\n         match kind {\n             CoverageKind::Counter { function_source_hash, id } => {\n-                if bx.add_counter_region(self.instance, function_source_hash, id, code_region) {\n+                let covmap_updated = if let Some(code_region) = code_region {\n+                    // Note: Some counters do not have code regions, but may still be referenced from\n+                    // expressions.\n+                    bx.add_coverage_counter(self.instance, function_source_hash, id, code_region)\n+                } else {\n+                    bx.set_function_source_hash(self.instance, function_source_hash)\n+                };\n+\n+                if covmap_updated {\n                     let coverageinfo = bx.tcx().coverageinfo(self.instance.def_id());\n \n                     let fn_name = bx.create_pgo_func_name_var(self.instance);\n@@ -21,14 +29,17 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                         \"codegen intrinsic instrprof.increment(fn_name={:?}, hash={:?}, num_counters={:?}, index={:?})\",\n                         fn_name, hash, num_counters, id,\n                     );\n-                    bx.instrprof_increment(fn_name, hash, num_counters, id);\n+                    bx.instrprof_increment(fn_name, hash, num_counters, index);\n                 }\n             }\n             CoverageKind::Expression { id, lhs, op, rhs } => {\n-                bx.add_counter_expression_region(self.instance, id, lhs, op, rhs, code_region);\n+                bx.add_coverage_counter_expression(self.instance, id, lhs, op, rhs, code_region);\n             }\n             CoverageKind::Unreachable => {\n-                bx.add_unreachable_region(self.instance, code_region);\n+                bx.add_coverage_unreachable(\n+                    self.instance,\n+                    code_region.expect(\"unreachable regions always have code regions\"),\n+                );\n             }\n         }\n     }"}, {"sha": "5aa0950b399e361ec04c8852333ec1f6acb2d930", "filename": "compiler/rustc_codegen_ssa/src/traits/coverageinfo.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fcoverageinfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fcoverageinfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fcoverageinfo.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -9,9 +9,13 @@ pub trait CoverageInfoMethods: BackendTypes {\n pub trait CoverageInfoBuilderMethods<'tcx>: BackendTypes {\n     fn create_pgo_func_name_var(&self, instance: Instance<'tcx>) -> Self::Value;\n \n+    /// Returns true if the function source hash was added to the coverage map; false if\n+    /// `-Z instrument-coverage` is not enabled (a coverage map is not being generated).\n+    fn set_function_source_hash(&mut self, instance: Instance<'tcx>, function_source_hash: u64) -> bool;\n+\n     /// Returns true if the counter was added to the coverage map; false if `-Z instrument-coverage`\n     /// is not enabled (a coverage map is not being generated).\n-    fn add_counter_region(\n+    fn add_coverage_counter(\n         &mut self,\n         instance: Instance<'tcx>,\n         function_source_hash: u64,\n@@ -21,17 +25,17 @@ pub trait CoverageInfoBuilderMethods<'tcx>: BackendTypes {\n \n     /// Returns true if the expression was added to the coverage map; false if\n     /// `-Z instrument-coverage` is not enabled (a coverage map is not being generated).\n-    fn add_counter_expression_region(\n+    fn add_coverage_counter_expression(\n         &mut self,\n         instance: Instance<'tcx>,\n-        id: InjectedExpressionIndex,\n+        id: InjectedExpressionId,\n         lhs: ExpressionOperandId,\n         op: Op,\n         rhs: ExpressionOperandId,\n-        region: CodeRegion,\n-    ) -> bool;\n+        region: Option<CodeRegion>,\n+    );\n \n     /// Returns true if the region was added to the coverage map; false if `-Z instrument-coverage`\n     /// is not enabled (a coverage map is not being generated).\n-    fn add_unreachable_region(&mut self, instance: Instance<'tcx>, region: CodeRegion) -> bool;\n+    fn add_coverage_unreachable(&mut self, instance: Instance<'tcx>, region: CodeRegion) -> bool;\n }"}, {"sha": "9653ff022f19246a71a79eecceda2d89106356c3", "filename": "compiler/rustc_graphviz/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_graphviz%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_graphviz%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_graphviz%2Fsrc%2Flib.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -643,6 +643,7 @@ where\n     }\n     if options.contains(&RenderOption::DarkTheme) {\n         graph_attrs.push(r#\"bgcolor=\"black\"\"#);\n+        graph_attrs.push(r#\"fontcolor=\"white\"\"#);\n         content_attrs.push(r#\"color=\"white\"\"#);\n         content_attrs.push(r#\"fontcolor=\"white\"\"#);\n     }"}, {"sha": "ad0ba292d0241df4166bfa3d7db7a1d30610fce9", "filename": "compiler/rustc_middle/src/mir/coverage.rs", "status": "modified", "additions": 79, "deletions": 9, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fcoverage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fcoverage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fcoverage.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -7,6 +7,10 @@ use std::cmp::Ord;\n use std::fmt::{self, Debug, Formatter};\n \n rustc_index::newtype_index! {\n+    /// An ExpressionOperandId value is assigned directly from either a\n+    /// CounterValueReference.as_u32() (which ascend from 1) or an ExpressionOperandId.as_u32()\n+    /// (which _*descend*_ from u32::MAX). Id value `0` (zero) represents a virtual counter with a\n+    /// constant value of `0`.\n     pub struct ExpressionOperandId {\n         derive [HashStable]\n         DEBUG_FORMAT = \"ExpressionOperandId({})\",\n@@ -42,6 +46,20 @@ impl CounterValueReference {\n }\n \n rustc_index::newtype_index! {\n+    /// InjectedExpressionId.as_u32() converts to ExpressionOperandId.as_u32()\n+    ///\n+    /// Values descend from u32::MAX.\n+    pub struct InjectedExpressionId {\n+        derive [HashStable]\n+        DEBUG_FORMAT = \"InjectedExpressionId({})\",\n+        MAX = 0xFFFF_FFFF,\n+    }\n+}\n+\n+rustc_index::newtype_index! {\n+    /// InjectedExpressionIndex.as_u32() translates to u32::MAX - ExpressionOperandId.as_u32()\n+    ///\n+    /// Values ascend from 0.\n     pub struct InjectedExpressionIndex {\n         derive [HashStable]\n         DEBUG_FORMAT = \"InjectedExpressionIndex({})\",\n@@ -50,6 +68,9 @@ rustc_index::newtype_index! {\n }\n \n rustc_index::newtype_index! {\n+    /// MappedExpressionIndex values ascend from zero, and are recalculated indexes based on their\n+    /// array position in the LLVM coverage map \"Expressions\" array, which is assembled during the\n+    /// \"mapgen\" process. They cannot be computed algorithmically, from the other `newtype_index`s.\n     pub struct MappedExpressionIndex {\n         derive [HashStable]\n         DEBUG_FORMAT = \"MappedExpressionIndex({})\",\n@@ -64,21 +85,35 @@ impl From<CounterValueReference> for ExpressionOperandId {\n     }\n }\n \n-impl From<InjectedExpressionIndex> for ExpressionOperandId {\n+impl From<&mut CounterValueReference> for ExpressionOperandId {\n     #[inline]\n-    fn from(v: InjectedExpressionIndex) -> ExpressionOperandId {\n+    fn from(v: &mut CounterValueReference) -> ExpressionOperandId {\n         ExpressionOperandId::from(v.as_u32())\n     }\n }\n \n-#[derive(Clone, Debug, PartialEq, TyEncodable, TyDecodable, HashStable, TypeFoldable)]\n+impl From<InjectedExpressionId> for ExpressionOperandId {\n+    #[inline]\n+    fn from(v: InjectedExpressionId) -> ExpressionOperandId {\n+        ExpressionOperandId::from(v.as_u32())\n+    }\n+}\n+\n+impl From<&mut InjectedExpressionId> for ExpressionOperandId {\n+    #[inline]\n+    fn from(v: &mut InjectedExpressionId) -> ExpressionOperandId {\n+        ExpressionOperandId::from(v.as_u32())\n+    }\n+}\n+\n+#[derive(Clone, PartialEq, TyEncodable, TyDecodable, HashStable, TypeFoldable)]\n pub enum CoverageKind {\n     Counter {\n         function_source_hash: u64,\n         id: CounterValueReference,\n     },\n     Expression {\n-        id: InjectedExpressionIndex,\n+        id: InjectedExpressionId,\n         lhs: ExpressionOperandId,\n         op: Op,\n         rhs: ExpressionOperandId,\n@@ -88,12 +123,47 @@ pub enum CoverageKind {\n \n impl CoverageKind {\n     pub fn as_operand_id(&self) -> ExpressionOperandId {\n+        use CoverageKind::*;\n         match *self {\n-            CoverageKind::Counter { id, .. } => ExpressionOperandId::from(id),\n-            CoverageKind::Expression { id, .. } => ExpressionOperandId::from(id),\n-            CoverageKind::Unreachable => {\n-                bug!(\"Unreachable coverage cannot be part of an expression\")\n-            }\n+            Counter { id, .. } => ExpressionOperandId::from(id),\n+            Expression { id, .. } => ExpressionOperandId::from(id),\n+            Unreachable => bug!(\"Unreachable coverage cannot be part of an expression\"),\n+        }\n+    }\n+\n+    pub fn is_counter(&self) -> bool {\n+        match self {\n+            Self::Counter { .. } => true,\n+            _ => false,\n+        }\n+    }\n+\n+    pub fn is_expression(&self) -> bool {\n+        match self {\n+            Self::Expression { .. } => true,\n+            _ => false,\n+        }\n+    }\n+\n+    pub fn is_unreachable(&self) -> bool {\n+        *self == Self::Unreachable\n+    }\n+}\n+\n+impl Debug for CoverageKind {\n+    fn fmt(&self, fmt: &mut Formatter<'_>) -> fmt::Result {\n+        use CoverageKind::*;\n+        match self {\n+            Counter { id, .. } => write!(fmt, \"Counter({:?})\", id.index()),\n+            Expression { id, lhs, op, rhs } => write!(\n+                fmt,\n+                \"Expression({:?}) = {} {} {}\",\n+                id.index(),\n+                lhs.index(),\n+                if *op == Op::Add { \"+\" } else { \"-\" },\n+                rhs.index(),\n+            ),\n+            Unreachable => write!(fmt, \"Unreachable\"),\n         }\n     }\n }"}, {"sha": "5fe7b0f647dcdae7fd8c85153cdeb0e05dc43dae", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -1585,21 +1585,10 @@ impl Debug for Statement<'_> {\n                 write!(fmt, \"AscribeUserType({:?}, {:?}, {:?})\", place, variance, c_ty)\n             }\n             Coverage(box ref coverage) => {\n-                let rgn = &coverage.code_region;\n-                match coverage.kind {\n-                    CoverageKind::Counter { id, .. } => {\n-                        write!(fmt, \"Coverage::Counter({:?}) for {:?}\", id.index(), rgn)\n-                    }\n-                    CoverageKind::Expression { id, lhs, op, rhs } => write!(\n-                        fmt,\n-                        \"Coverage::Expression({:?}) = {} {} {} for {:?}\",\n-                        id.index(),\n-                        lhs.index(),\n-                        if op == coverage::Op::Add { \"+\" } else { \"-\" },\n-                        rhs.index(),\n-                        rgn\n-                    ),\n-                    CoverageKind::Unreachable => write!(fmt, \"Coverage::Unreachable for {:?}\", rgn),\n+                if let Some(rgn) = &coverage.code_region {\n+                    write!(fmt, \"Coverage::{:?} for {:?}\", coverage.kind, rgn)\n+                } else {\n+                    write!(fmt, \"Coverage::{:?}\", coverage.kind)\n                 }\n             }\n             Nop => write!(fmt, \"nop\"),\n@@ -1610,7 +1599,7 @@ impl Debug for Statement<'_> {\n #[derive(Clone, Debug, PartialEq, TyEncodable, TyDecodable, HashStable, TypeFoldable)]\n pub struct Coverage {\n     pub kind: CoverageKind,\n-    pub code_region: CodeRegion,\n+    pub code_region: Option<CodeRegion>,\n }\n \n ///////////////////////////////////////////////////////////////////////////"}, {"sha": "89fd803fe51400bd2aaab905867071e8b9e87faf", "filename": "compiler/rustc_middle/src/ty/structural_impls.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -300,6 +300,7 @@ CloneTypeFoldableAndLiftImpls! {\n     ::rustc_target::spec::abi::Abi,\n     crate::mir::coverage::ExpressionOperandId,\n     crate::mir::coverage::CounterValueReference,\n+    crate::mir::coverage::InjectedExpressionId,\n     crate::mir::coverage::InjectedExpressionIndex,\n     crate::mir::coverage::MappedExpressionIndex,\n     crate::mir::Local,"}, {"sha": "cb6798f2ee75e335b63aa67a2237ed39cede8931", "filename": "compiler/rustc_mir/src/transform/instrument_coverage.rs", "status": "modified", "additions": 525, "deletions": 320, "changes": 845, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finstrument_coverage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finstrument_coverage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finstrument_coverage.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -1,9 +1,10 @@\n use crate::transform::MirPass;\n use crate::util::pretty;\n-use crate::util::spanview::{self, SpanViewable};\n+use crate::util::spanview::{self, source_range_no_file, SpanViewable};\n \n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::graph::dominators::Dominators;\n+use rustc_data_structures::graph::WithNumNodes;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::sync::Lrc;\n use rustc_index::bit_set::BitSet;\n@@ -16,7 +17,7 @@ use rustc_middle::mir::coverage::*;\n use rustc_middle::mir::visit::Visitor;\n use rustc_middle::mir::{\n     AggregateKind, BasicBlock, BasicBlockData, Coverage, CoverageInfo, FakeReadCause, Location,\n-    Rvalue, SourceInfo, Statement, StatementKind, Terminator, TerminatorKind,\n+    Rvalue, Statement, StatementKind, Terminator, TerminatorKind,\n };\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::TyCtxt;\n@@ -28,11 +29,6 @@ use std::cmp::Ordering;\n \n const ID_SEPARATOR: &str = \",\";\n \n-/// Inserts `StatementKind::Coverage` statements that either instrument the binary with injected\n-/// counters, via intrinsic `llvm.instrprof.increment`, and/or inject metadata used during codegen\n-/// to construct the coverage map.\n-pub struct InstrumentCoverage;\n-\n /// The `query` provider for `CoverageInfo`, requested by `codegen_coverage()` (to inject each\n /// counter) and `FunctionCoverage::new()` (to extract the coverage map metadata from the MIR).\n pub(crate) fn provide(providers: &mut Providers) {\n@@ -54,69 +50,131 @@ pub(crate) fn provide(providers: &mut Providers) {\n /// are still included in the total `num_counters` or `num_expressions`.) Simply counting the\n /// calls may not work; but computing the number of counters or expressions by adding `1` to the\n /// highest ID (for a given instrumented function) is valid.\n+///\n+/// This visitor runs twice, first with `add_missing_operands` set to `false`, to find the maximum\n+/// counter ID and maximum expression ID based on their enum variant `id` fields; then, as a\n+/// safeguard, with `add_missing_operands` set to `true`, to find any other counter or expression\n+/// IDs referenced by expression operands, if not already seen.\n+///\n+/// Ideally, every expression operand in the MIR will have a corresponding Counter or Expression,\n+/// but since current or future MIR optimizations can theoretically optimize out segments of a\n+/// MIR, it may not be possible to guarantee this, so the second pass ensures the `CoverageInfo`\n+/// counts include all referenced IDs.\n struct CoverageVisitor {\n     info: CoverageInfo,\n+    add_missing_operands: bool,\n+}\n+\n+impl CoverageVisitor {\n+    // If an expression operand is encountered with an ID outside the range of known counters and\n+    // expressions, the only way to determine if the ID is a counter ID or an expression ID is to\n+    // assume a maximum possible counter ID value.\n+    const MAX_COUNTER_GUARD: u32 = (u32::MAX / 2) + 1;\n+\n+    #[inline(always)]\n+    fn update_num_counters(&mut self, counter_id: u32) {\n+        self.info.num_counters = std::cmp::max(self.info.num_counters, counter_id + 1);\n+    }\n+\n+    #[inline(always)]\n+    fn update_num_expressions(&mut self, expression_id: u32) {\n+        let expression_index = u32::MAX - expression_id;\n+        self.info.num_expressions = std::cmp::max(self.info.num_expressions, expression_index + 1);\n+    }\n+\n+    fn update_from_expression_operand(&mut self, operand_id: u32) {\n+        if operand_id >= self.info.num_counters {\n+            let operand_as_expression_index = u32::MAX - operand_id;\n+            if operand_as_expression_index >= self.info.num_expressions {\n+                if operand_id <= Self::MAX_COUNTER_GUARD {\n+                    self.update_num_counters(operand_id)\n+                } else {\n+                    self.update_num_expressions(operand_id)\n+                }\n+            }\n+        }\n+    }\n }\n \n impl Visitor<'_> for CoverageVisitor {\n     fn visit_coverage(&mut self, coverage: &Coverage, _location: Location) {\n-        match coverage.kind {\n-            CoverageKind::Counter { id, .. } => {\n-                let counter_id = u32::from(id);\n-                self.info.num_counters = std::cmp::max(self.info.num_counters, counter_id + 1);\n+        if self.add_missing_operands {\n+            match coverage.kind {\n+                CoverageKind::Expression { lhs, rhs, .. } => {\n+                    self.update_from_expression_operand(u32::from(lhs));\n+                    self.update_from_expression_operand(u32::from(rhs));\n+                }\n+                _ => {}\n             }\n-            CoverageKind::Expression { id, .. } => {\n-                let expression_index = u32::MAX - u32::from(id);\n-                self.info.num_expressions =\n-                    std::cmp::max(self.info.num_expressions, expression_index + 1);\n+        } else {\n+            match coverage.kind {\n+                CoverageKind::Counter { id, .. } => {\n+                    self.update_num_counters(u32::from(id));\n+                }\n+                CoverageKind::Expression { id, .. } => {\n+                    self.update_num_expressions(u32::from(id));\n+                }\n+                _ => {}\n             }\n-            _ => {}\n         }\n     }\n }\n \n fn coverageinfo_from_mir<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> CoverageInfo {\n     let mir_body = tcx.optimized_mir(def_id);\n \n-    let mut coverage_visitor =\n-        CoverageVisitor { info: CoverageInfo { num_counters: 0, num_expressions: 0 } };\n+    let mut coverage_visitor = CoverageVisitor {\n+        info: CoverageInfo { num_counters: 0, num_expressions: 0 },\n+        add_missing_operands: false,\n+    };\n \n     coverage_visitor.visit_body(mir_body);\n+\n+    coverage_visitor.add_missing_operands = true;\n+    coverage_visitor.visit_body(mir_body);\n+\n     coverage_visitor.info\n }\n+/// Inserts `StatementKind::Coverage` statements that either instrument the binary with injected\n+/// counters, via intrinsic `llvm.instrprof.increment`, and/or inject metadata used during codegen\n+/// to construct the coverage map.\n+pub struct InstrumentCoverage;\n \n impl<'tcx> MirPass<'tcx> for InstrumentCoverage {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, mir_body: &mut mir::Body<'tcx>) {\n+        let mir_source = mir_body.source;\n+\n         // If the InstrumentCoverage pass is called on promoted MIRs, skip them.\n         // See: https://github.com/rust-lang/rust/pull/73011#discussion_r438317601\n-        if mir_body.source.promoted.is_some() {\n+        if mir_source.promoted.is_some() {\n             trace!(\n                 \"InstrumentCoverage skipped for {:?} (already promoted for Miri evaluation)\",\n-                mir_body.source.def_id()\n+                mir_source.def_id()\n             );\n             return;\n         }\n \n-        let hir_id = tcx.hir().local_def_id_to_hir_id(mir_body.source.def_id().expect_local());\n+        let hir_id = tcx.hir().local_def_id_to_hir_id(mir_source.def_id().expect_local());\n         let is_fn_like = FnLikeNode::from_node(tcx.hir().get(hir_id)).is_some();\n \n         // Only instrument functions, methods, and closures (not constants since they are evaluated\n         // at compile time by Miri).\n-        // FIXME(#73156): Handle source code coverage in const eval\n+        // FIXME(#73156): Handle source code coverage in const eval, but note, if and when const\n+        // expressions get coverage spans, we will probably have to \"carve out\" space for const\n+        // expressions from coverage spans in enclosing MIR's, like we do for closures. (That might\n+        // be tricky if const expressions have no corresponding statements in the enclosing MIR.\n+        // Closures are carved out by their initial `Assign` statement.)\n         if !is_fn_like {\n-            trace!(\n-                \"InstrumentCoverage skipped for {:?} (not an FnLikeNode)\",\n-                mir_body.source.def_id(),\n-            );\n+            trace!(\"InstrumentCoverage skipped for {:?} (not an FnLikeNode)\", mir_source.def_id());\n             return;\n         }\n         // FIXME(richkadel): By comparison, the MIR pass `ConstProp` includes associated constants,\n         // with functions, methods, and closures. I assume Miri is used for associated constants as\n         // well. If not, we may need to include them here too.\n \n-        trace!(\"InstrumentCoverage starting for {:?}\", mir_body.source.def_id());\n+        trace!(\"InstrumentCoverage starting for {:?}\", mir_source.def_id());\n         Instrumentor::new(&self.name(), tcx, mir_body).inject_counters();\n-        trace!(\"InstrumentCoverage starting for {:?}\", mir_body.source.def_id());\n+        trace!(\"InstrumentCoverage starting for {:?}\", mir_source.def_id());\n     }\n }\n \n@@ -184,12 +242,16 @@ impl BasicCoverageBlocks {\n     }\n \n     pub fn iter(&self) -> impl Iterator<Item = &BasicCoverageBlock> {\n-        self.vec.iter().filter_map(|option| option.as_ref())\n+        self.vec.iter().filter_map(|bcb| bcb.as_ref())\n+    }\n+\n+    pub fn num_nodes(&self) -> usize {\n+        self.vec.len()\n     }\n \n-    fn extract_from_mir(&mut self, mir_body: &mir::Body<'tcx>) {\n+    pub fn extract_from_mir(&mut self, mir_body: &mir::Body<'tcx>) {\n         // Traverse the CFG but ignore anything following an `unwind`\n-        let cfg_without_unwind = ShortCircuitPreorder::new(mir_body, |term_kind| {\n+        let cfg_without_unwind = ShortCircuitPreorder::new(&mir_body, |term_kind| {\n             let mut successors = term_kind.successors();\n             match &term_kind {\n                 // SwitchInt successors are never unwind, and all of them should be traversed.\n@@ -337,20 +399,20 @@ impl CoverageStatement {\n     pub fn format(&self, tcx: TyCtxt<'tcx>, mir_body: &'a mir::Body<'tcx>) -> String {\n         match *self {\n             Self::Statement(bb, span, stmt_index) => {\n-                let stmt = &mir_body.basic_blocks()[bb].statements[stmt_index];\n+                let stmt = &mir_body[bb].statements[stmt_index];\n                 format!(\n                     \"{}: @{}[{}]: {:?}\",\n-                    spanview::source_range_no_file(tcx, &span),\n+                    source_range_no_file(tcx, &span),\n                     bb.index(),\n                     stmt_index,\n                     stmt\n                 )\n             }\n             Self::Terminator(bb, span) => {\n-                let term = mir_body.basic_blocks()[bb].terminator();\n+                let term = mir_body[bb].terminator();\n                 format!(\n                     \"{}: @{}.{}: {:?}\",\n-                    spanview::source_range_no_file(tcx, &span),\n+                    source_range_no_file(tcx, &span),\n                     bb.index(),\n                     term_type(&term.kind),\n                     term.kind\n@@ -366,6 +428,8 @@ impl CoverageStatement {\n     }\n }\n \n+/// Returns a simple string representation of a `TerminatorKind` variant, indenpendent of any\n+/// values it might hold.\n fn term_type(kind: &TerminatorKind<'tcx>) -> &'static str {\n     match kind {\n         TerminatorKind::Goto { .. } => \"Goto\",\n@@ -398,10 +462,10 @@ fn term_type(kind: &TerminatorKind<'tcx>) -> &'static str {\n /// `is_dominated_by()` the `BasicBlock`s in this `CoverageSpan`.\n #[derive(Debug, Clone)]\n struct CoverageSpan {\n-    span: Span,\n-    bcb_leader_bb: BasicBlock,\n-    coverage_statements: Vec<CoverageStatement>,\n-    is_closure: bool,\n+    pub span: Span,\n+    pub bcb_leader_bb: BasicBlock,\n+    pub coverage_statements: Vec<CoverageStatement>,\n+    pub is_closure: bool,\n }\n \n impl CoverageSpan {\n@@ -428,7 +492,7 @@ impl CoverageSpan {\n         }\n     }\n \n-    pub fn for_terminator(span: Span, bcb: &'a BasicCoverageBlock, bb: BasicBlock) -> Self {\n+    pub fn for_terminator(span: Span, bcb: &BasicCoverageBlock, bb: BasicBlock) -> Self {\n         Self {\n             span,\n             bcb_leader_bb: bcb.leader_bb(),\n@@ -455,132 +519,119 @@ impl CoverageSpan {\n         }\n     }\n \n-    pub fn is_dominated_by(\n-        &self,\n-        other: &CoverageSpan,\n-        dominators: &Dominators<BasicBlock>,\n-    ) -> bool {\n-        debug_assert!(!self.is_in_same_bcb(other));\n-        dominators.is_dominated_by(self.bcb_leader_bb, other.bcb_leader_bb)\n-    }\n-\n+    #[inline]\n     pub fn is_mergeable(&self, other: &Self) -> bool {\n         self.is_in_same_bcb(other) && !(self.is_closure || other.is_closure)\n     }\n \n+    #[inline]\n     pub fn is_in_same_bcb(&self, other: &Self) -> bool {\n         self.bcb_leader_bb == other.bcb_leader_bb\n     }\n+\n+    pub fn format_coverage_statements(\n+        &self,\n+        tcx: TyCtxt<'tcx>,\n+        mir_body: &'a mir::Body<'tcx>,\n+    ) -> String {\n+        let mut sorted_coverage_statements = self.coverage_statements.clone();\n+        sorted_coverage_statements.sort_unstable_by_key(|covstmt| match *covstmt {\n+            CoverageStatement::Statement(bb, _, index) => (bb, index),\n+            CoverageStatement::Terminator(bb, _) => (bb, usize::MAX),\n+        });\n+        sorted_coverage_statements\n+            .iter()\n+            .map(|covstmt| covstmt.format(tcx, mir_body))\n+            .collect::<Vec<_>>()\n+            .join(\"\\n\")\n+    }\n }\n \n struct Instrumentor<'a, 'tcx> {\n     pass_name: &'a str,\n     tcx: TyCtxt<'tcx>,\n     mir_body: &'a mut mir::Body<'tcx>,\n-    hir_body: &'tcx rustc_hir::Body<'tcx>,\n-    dominators: Option<Dominators<BasicBlock>>,\n-    basic_coverage_blocks: Option<BasicCoverageBlocks>,\n-    function_source_hash: Option<u64>,\n-    next_counter_id: u32,\n-    num_expressions: u32,\n+    body_span: Span,\n+    basic_coverage_blocks: BasicCoverageBlocks,\n+    coverage_counters: CoverageCounters,\n }\n \n impl<'a, 'tcx> Instrumentor<'a, 'tcx> {\n     fn new(pass_name: &'a str, tcx: TyCtxt<'tcx>, mir_body: &'a mut mir::Body<'tcx>) -> Self {\n         let hir_body = hir_body(tcx, mir_body.source.def_id());\n+        let body_span = hir_body.value.span;\n+        let function_source_hash = hash_mir_source(tcx, hir_body);\n+        let basic_coverage_blocks = BasicCoverageBlocks::from_mir(mir_body);\n         Self {\n             pass_name,\n             tcx,\n             mir_body,\n-            hir_body,\n-            dominators: None,\n-            basic_coverage_blocks: None,\n-            function_source_hash: None,\n-            next_counter_id: CounterValueReference::START.as_u32(),\n-            num_expressions: 0,\n+            body_span,\n+            basic_coverage_blocks,\n+            coverage_counters: CoverageCounters::new(function_source_hash),\n         }\n     }\n \n-    /// Counter IDs start from one and go up.\n-    fn next_counter(&mut self) -> CounterValueReference {\n-        assert!(self.next_counter_id < u32::MAX - self.num_expressions);\n-        let next = self.next_counter_id;\n-        self.next_counter_id += 1;\n-        CounterValueReference::from(next)\n-    }\n-\n-    /// Expression IDs start from u32::MAX and go down because a CounterExpression can reference\n-    /// (add or subtract counts) of both Counter regions and CounterExpression regions. The counter\n-    /// expression operand IDs must be unique across both types.\n-    fn next_expression(&mut self) -> InjectedExpressionIndex {\n-        assert!(self.next_counter_id < u32::MAX - self.num_expressions);\n-        let next = u32::MAX - self.num_expressions;\n-        self.num_expressions += 1;\n-        InjectedExpressionIndex::from(next)\n-    }\n+    fn inject_counters(&'a mut self) {\n+        let tcx = self.tcx;\n+        let source_map = tcx.sess.source_map();\n+        let mir_source = self.mir_body.source;\n+        let def_id = mir_source.def_id();\n+        let body_span = self.body_span;\n \n-    fn dominators(&self) -> &Dominators<BasicBlock> {\n-        self.dominators.as_ref().expect(\"dominators must be initialized before calling\")\n-    }\n+        debug!(\"instrumenting {:?}, span: {}\", def_id, source_map.span_to_string(body_span));\n \n-    fn basic_coverage_blocks(&self) -> &BasicCoverageBlocks {\n-        self.basic_coverage_blocks\n-            .as_ref()\n-            .expect(\"basic_coverage_blocks must be initialized before calling\")\n-    }\n+        ////////////////////////////////////////////////////\n+        // Compute `CoverageSpan`s from the `BasicCoverageBlocks`.\n+        let coverage_spans = CoverageSpans::generate_coverage_spans(\n+            &self.mir_body,\n+            body_span,\n+            &self.basic_coverage_blocks,\n+        );\n \n-    fn function_source_hash(&mut self) -> u64 {\n-        match self.function_source_hash {\n-            Some(hash) => hash,\n-            None => {\n-                let hash = hash_mir_source(self.tcx, self.hir_body);\n-                self.function_source_hash.replace(hash);\n-                hash\n-            }\n+        if pretty::dump_enabled(tcx, self.pass_name, def_id) {\n+            dump_coverage_spanview(\n+                tcx,\n+                self.mir_body,\n+                &self.basic_coverage_blocks,\n+                self.pass_name,\n+                &coverage_spans,\n+            );\n         }\n+\n+        self.inject_coverage_span_counters(coverage_spans);\n     }\n \n-    fn inject_counters(&mut self) {\n+    /// Inject a counter for each `CoverageSpan`. There can be multiple `CoverageSpan`s for a given\n+    /// BCB, but only one actual counter needs to be incremented per BCB. `bcb_counters` maps each\n+    /// `bcb` to its `Counter`, when injected. Subsequent `CoverageSpan`s for a BCB that already has\n+    /// a `Counter` will inject an `Expression` instead, and compute its value by adding `ZERO` to\n+    /// the BCB `Counter` value.\n+    fn inject_coverage_span_counters(&mut self, coverage_spans: Vec<CoverageSpan>) {\n         let tcx = self.tcx;\n         let source_map = tcx.sess.source_map();\n-        let def_id = self.mir_body.source.def_id();\n-        let mir_body = &self.mir_body;\n-        let body_span = self.body_span();\n+        let body_span = self.body_span;\n         let source_file = source_map.lookup_source_file(body_span.lo());\n         let file_name = Symbol::intern(&source_file.name.to_string());\n \n-        debug!(\"instrumenting {:?}, span: {}\", def_id, source_map.span_to_string(body_span));\n-\n-        self.dominators.replace(mir_body.dominators());\n-        self.basic_coverage_blocks.replace(BasicCoverageBlocks::from_mir(mir_body));\n-\n-        let coverage_spans = self.coverage_spans();\n-\n-        let span_viewables = if pretty::dump_enabled(tcx, self.pass_name, def_id) {\n-            Some(self.span_viewables(&coverage_spans))\n-        } else {\n-            None\n-        };\n-\n-        // Inject a counter for each `CoverageSpan`. There can be multiple `CoverageSpan`s for a\n-        // given BCB, but only one actual counter needs to be incremented per BCB. `bb_counters`\n-        // maps each `bcb_leader_bb` to its `Counter`, when injected. Subsequent `CoverageSpan`s\n-        // for a BCB that already has a `Counter` will inject a `CounterExpression` instead, and\n-        // compute its value by adding `ZERO` to the BCB `Counter` value.\n-        let mut bb_counters = IndexVec::from_elem_n(None, mir_body.basic_blocks().len());\n+        let mut bb_counters = IndexVec::from_elem_n(None, self.mir_body.basic_blocks().len());\n         for CoverageSpan { span, bcb_leader_bb: bb, .. } in coverage_spans {\n             if let Some(&counter_operand) = bb_counters[bb].as_ref() {\n-                let expression =\n-                    self.make_expression(counter_operand, Op::Add, ExpressionOperandId::ZERO);\n+                let expression = self.coverage_counters.make_expression(\n+                    counter_operand,\n+                    Op::Add,\n+                    ExpressionOperandId::ZERO,\n+                );\n                 debug!(\n                     \"Injecting counter expression {:?} at: {:?}:\\n{}\\n==========\",\n                     expression,\n                     span,\n                     source_map.span_to_snippet(span).expect(\"Error getting source for span\"),\n                 );\n-                self.inject_statement(file_name, &source_file, expression, span, bb);\n+                let code_region = make_code_region(file_name, &source_file, span, body_span);\n+                inject_statement(self.mir_body, expression, bb, Some(code_region));\n             } else {\n-                let counter = self.make_counter();\n+                let counter = self.coverage_counters.make_counter();\n                 debug!(\n                     \"Injecting counter {:?} at: {:?}:\\n{}\\n==========\",\n                     counter,\n@@ -589,126 +640,212 @@ impl<'a, 'tcx> Instrumentor<'a, 'tcx> {\n                 );\n                 let counter_operand = counter.as_operand_id();\n                 bb_counters[bb] = Some(counter_operand);\n-                self.inject_statement(file_name, &source_file, counter, span, bb);\n+                let code_region = make_code_region(file_name, &source_file, span, body_span);\n+                inject_statement(self.mir_body, counter, bb, Some(code_region));\n             }\n         }\n+    }\n+}\n \n-        if let Some(span_viewables) = span_viewables {\n-            let mut file = pretty::create_dump_file(\n-                tcx,\n-                \"html\",\n-                None,\n-                self.pass_name,\n-                &0,\n-                self.mir_body.source,\n-            )\n-            .expect(\"Unexpected error creating MIR spanview HTML file\");\n-            let crate_name = tcx.crate_name(def_id.krate);\n-            let item_name = tcx.def_path(def_id).to_filename_friendly_no_crate();\n-            let title = format!(\"{}.{} - Coverage Spans\", crate_name, item_name);\n-            spanview::write_document(tcx, def_id, span_viewables, &title, &mut file)\n-                .expect(\"Unexpected IO error dumping coverage spans as HTML\");\n+/// Generates the MIR pass `CoverageSpan`-specific spanview dump file.\n+fn dump_coverage_spanview(\n+    tcx: TyCtxt<'tcx>,\n+    mir_body: &mir::Body<'tcx>,\n+    basic_coverage_blocks: &BasicCoverageBlocks,\n+    pass_name: &str,\n+    coverage_spans: &Vec<CoverageSpan>,\n+) {\n+    let mir_source = mir_body.source;\n+    let def_id = mir_source.def_id();\n+\n+    let span_viewables = span_viewables(tcx, mir_body, basic_coverage_blocks, &coverage_spans);\n+    let mut file = pretty::create_dump_file(tcx, \"html\", None, pass_name, &0, mir_source)\n+        .expect(\"Unexpected error creating MIR spanview HTML file\");\n+    let crate_name = tcx.crate_name(def_id.krate);\n+    let item_name = tcx.def_path(def_id).to_filename_friendly_no_crate();\n+    let title = format!(\"{}.{} - Coverage Spans\", crate_name, item_name);\n+    spanview::write_document(tcx, def_id, span_viewables, &title, &mut file)\n+        .expect(\"Unexpected IO error dumping coverage spans as HTML\");\n+}\n+\n+/// Converts the computed `BasicCoverageBlock`s into `SpanViewable`s.\n+fn span_viewables(\n+    tcx: TyCtxt<'tcx>,\n+    mir_body: &mir::Body<'tcx>,\n+    basic_coverage_blocks: &BasicCoverageBlocks,\n+    coverage_spans: &Vec<CoverageSpan>,\n+) -> Vec<SpanViewable> {\n+    let mut span_viewables = Vec::new();\n+    for coverage_span in coverage_spans {\n+        let tooltip = coverage_span.format_coverage_statements(tcx, mir_body);\n+        let CoverageSpan { span, bcb_leader_bb: bb, .. } = coverage_span;\n+        let bcb = &basic_coverage_blocks[*bb];\n+        let id = bcb.id();\n+        let leader_bb = bcb.leader_bb();\n+        span_viewables.push(SpanViewable { bb: leader_bb, span: *span, id, tooltip });\n+    }\n+    span_viewables\n+}\n+\n+/// Manages the counter and expression indexes/IDs to generate `CoverageKind` components for MIR\n+/// `Coverage` statements.\n+struct CoverageCounters {\n+    function_source_hash: u64,\n+    next_counter_id: u32,\n+    num_expressions: u32,\n+}\n+\n+impl CoverageCounters {\n+    pub fn new(function_source_hash: u64) -> Self {\n+        Self {\n+            function_source_hash,\n+            next_counter_id: CounterValueReference::START.as_u32(),\n+            num_expressions: 0,\n         }\n     }\n \n-    fn make_counter(&mut self) -> CoverageKind {\n+    pub fn make_counter(&mut self) -> CoverageKind {\n         CoverageKind::Counter {\n-            function_source_hash: self.function_source_hash(),\n+            function_source_hash: self.function_source_hash,\n             id: self.next_counter(),\n         }\n     }\n \n-    fn make_expression(\n+    pub fn make_expression(\n         &mut self,\n         lhs: ExpressionOperandId,\n         op: Op,\n         rhs: ExpressionOperandId,\n     ) -> CoverageKind {\n-        CoverageKind::Expression { id: self.next_expression(), lhs, op, rhs }\n+        let id = self.next_expression();\n+        CoverageKind::Expression { id, lhs, op, rhs }\n     }\n \n-    fn inject_statement(\n-        &mut self,\n-        file_name: Symbol,\n-        source_file: &Lrc<SourceFile>,\n-        coverage_kind: CoverageKind,\n-        span: Span,\n-        block: BasicBlock,\n-    ) {\n-        let code_region = make_code_region(file_name, source_file, span);\n-        debug!(\"  injecting statement {:?} covering {:?}\", coverage_kind, code_region);\n-\n-        let data = &mut self.mir_body[block];\n-        let source_info = data.terminator().source_info;\n-        let statement = Statement {\n-            source_info,\n-            kind: StatementKind::Coverage(box Coverage { kind: coverage_kind, code_region }),\n-        };\n-        data.statements.push(statement);\n+    /// Counter IDs start from one and go up.\n+    fn next_counter(&mut self) -> CounterValueReference {\n+        assert!(self.next_counter_id < u32::MAX - self.num_expressions);\n+        let next = self.next_counter_id;\n+        self.next_counter_id += 1;\n+        CounterValueReference::from(next)\n     }\n \n-    /// Converts the computed `BasicCoverageBlock`s into `SpanViewable`s.\n-    fn span_viewables(&self, coverage_spans: &Vec<CoverageSpan>) -> Vec<SpanViewable> {\n-        let tcx = self.tcx;\n-        let mir_body = &self.mir_body;\n-        let mut span_viewables = Vec::new();\n-        for coverage_span in coverage_spans {\n-            let bcb = self.bcb_from_coverage_span(coverage_span);\n-            let CoverageSpan { span, bcb_leader_bb: bb, coverage_statements, .. } = coverage_span;\n-            let id = bcb.id();\n-            let mut sorted_coverage_statements = coverage_statements.clone();\n-            sorted_coverage_statements.sort_unstable_by_key(|covstmt| match *covstmt {\n-                CoverageStatement::Statement(bb, _, index) => (bb, index),\n-                CoverageStatement::Terminator(bb, _) => (bb, usize::MAX),\n-            });\n-            let tooltip = sorted_coverage_statements\n-                .iter()\n-                .map(|covstmt| covstmt.format(tcx, mir_body))\n-                .collect::<Vec<_>>()\n-                .join(\"\\n\");\n-            span_viewables.push(SpanViewable { bb: *bb, span: *span, id, tooltip });\n-        }\n-        span_viewables\n+    /// Expression IDs start from u32::MAX and go down because a Expression can reference\n+    /// (add or subtract counts) of both Counter regions and Expression regions. The counter\n+    /// expression operand IDs must be unique across both types.\n+    fn next_expression(&mut self) -> InjectedExpressionId {\n+        assert!(self.next_counter_id < u32::MAX - self.num_expressions);\n+        let next = u32::MAX - self.num_expressions;\n+        self.num_expressions += 1;\n+        InjectedExpressionId::from(next)\n     }\n+}\n+fn inject_statement(\n+    mir_body: &mut mir::Body<'tcx>,\n+    counter_kind: CoverageKind,\n+    bb: BasicBlock,\n+    some_code_region: Option<CodeRegion>,\n+) {\n+    debug!(\n+        \"  injecting statement {:?} for {:?} at code region: {:?}\",\n+        counter_kind, bb, some_code_region\n+    );\n+    let data = &mut mir_body[bb];\n+    let source_info = data.terminator().source_info;\n+    let statement = Statement {\n+        source_info,\n+        kind: StatementKind::Coverage(box Coverage {\n+            kind: counter_kind,\n+            code_region: some_code_region,\n+        }),\n+    };\n+    data.statements.push(statement);\n+}\n \n-    #[inline(always)]\n-    fn bcb_from_coverage_span(&self, coverage_span: &CoverageSpan) -> &BasicCoverageBlock {\n-        &self.basic_coverage_blocks()[coverage_span.bcb_leader_bb]\n-    }\n+/// Converts the initial set of `CoverageSpan`s (one per MIR `Statement` or `Terminator`) into a\n+/// minimal set of `CoverageSpan`s, using the BCB CFG to determine where it is safe and useful to:\n+///\n+///  * Remove duplicate source code coverage regions\n+///  * Merge spans that represent continuous (both in source code and control flow), non-branching\n+///    execution\n+///  * Carve out (leave uncovered) any span that will be counted by another MIR (notably, closures)\n+pub struct CoverageSpans<'a, 'tcx> {\n+    /// The MIR, used to look up `BasicBlockData`.\n+    mir_body: &'a mir::Body<'tcx>,\n+\n+    /// A snapshot of the MIR CFG dominators before injecting any coverage statements.\n+    dominators: Dominators<BasicBlock>,\n+\n+    /// A `Span` covering the function body of the MIR (typically from left curly brace to right\n+    /// curly brace).\n+    body_span: Span,\n+\n+    /// The BasicCoverageBlock Control Flow Graph (BCB CFG).\n+    basic_coverage_blocks: &'a BasicCoverageBlocks,\n+\n+    /// The initial set of `CoverageSpan`s, sorted by `Span` (`lo` and `hi`) and by relative\n+    /// dominance between the `BasicCoverageBlock`s of equal `Span`s.\n+    sorted_spans_iter: Option<std::vec::IntoIter<CoverageSpan>>,\n+\n+    /// The current `CoverageSpan` to compare to its `prev`, to possibly merge, discard, force the\n+    /// discard of the `prev` (and or `pending_dups`), or keep both (with `prev` moved to\n+    /// `pending_dups`). If `curr` is not discarded or merged, it becomes `prev` for the next\n+    /// iteration.\n+    some_curr: Option<CoverageSpan>,\n \n-    #[inline(always)]\n-    fn body_span(&self) -> Span {\n-        self.hir_body.value.span\n-    }\n+    /// The original `span` for `curr`, in case the `curr` span is modified.\n+    curr_original_span: Span,\n \n-    // Generate a set of `CoverageSpan`s from the filtered set of `Statement`s and `Terminator`s of\n-    // the `BasicBlock`(s) in the given `BasicCoverageBlock`. One `CoverageSpan` is generated for\n-    // each `Statement` and `Terminator`. (Note that subsequent stages of coverage analysis will\n-    // merge some `CoverageSpan`s, at which point a `CoverageSpan` may represent multiple\n-    // `Statement`s and/or `Terminator`s.)\n-    fn extract_spans(&self, bcb: &'a BasicCoverageBlock) -> Vec<CoverageSpan> {\n-        let body_span = self.body_span();\n-        let mir_basic_blocks = self.mir_body.basic_blocks();\n-        bcb.blocks\n-            .iter()\n-            .map(|bbref| {\n-                let bb = *bbref;\n-                let data = &mir_basic_blocks[bb];\n-                data.statements\n-                    .iter()\n-                    .enumerate()\n-                    .filter_map(move |(index, statement)| {\n-                        filtered_statement_span(statement, body_span).map(|span| {\n-                            CoverageSpan::for_statement(statement, span, bcb, bb, index)\n-                        })\n-                    })\n-                    .chain(\n-                        filtered_terminator_span(data.terminator(), body_span)\n-                            .map(|span| CoverageSpan::for_terminator(span, bcb, bb)),\n-                    )\n-            })\n-            .flatten()\n-            .collect()\n+    /// The CoverageSpan from a prior iteration; typically assigned from that iteration's `curr`.\n+    /// If that `curr` was discarded, `prev` retains its value from the previous iteration.\n+    some_prev: Option<CoverageSpan>,\n+\n+    /// Assigned from `curr_original_span` from the previous iteration.\n+    prev_original_span: Span,\n+\n+    /// One or more `CoverageSpan`s with the same `Span` but different `BasicCoverageBlock`s, and\n+    /// no `BasicCoverageBlock` in this list dominates another `BasicCoverageBlock` in the list.\n+    /// If a new `curr` span also fits this criteria (compared to an existing list of\n+    /// `pending_dups`), that `curr` `CoverageSpan` moves to `prev` before possibly being added to\n+    /// the `pending_dups` list, on the next iteration. As a result, if `prev` and `pending_dups`\n+    /// have the same `Span`, the criteria for `pending_dups` holds for `prev` as well: a `prev`\n+    /// with a matching `Span` does not dominate any `pending_dup` and no `pending_dup` dominates a\n+    /// `prev` with a matching `Span`)\n+    pending_dups: Vec<CoverageSpan>,\n+\n+    /// The final `CoverageSpan`s to add to the coverage map. A `Counter` or `Expression`\n+    /// will also be injected into the MIR for each `CoverageSpan`.\n+    refined_spans: Vec<CoverageSpan>,\n+}\n+\n+impl<'a, 'tcx> CoverageSpans<'a, 'tcx> {\n+    fn generate_coverage_spans(\n+        mir_body: &'a mir::Body<'tcx>,\n+        body_span: Span,\n+        basic_coverage_blocks: &'a BasicCoverageBlocks,\n+    ) -> Vec<CoverageSpan> {\n+        let dominators = mir_body.dominators();\n+        let mut coverage_spans = CoverageSpans {\n+            mir_body,\n+            dominators,\n+            body_span,\n+            basic_coverage_blocks,\n+            sorted_spans_iter: None,\n+            refined_spans: Vec::with_capacity(basic_coverage_blocks.num_nodes() * 2),\n+            some_curr: None,\n+            curr_original_span: Span::with_root_ctxt(BytePos(0), BytePos(0)),\n+            some_prev: None,\n+            prev_original_span: Span::with_root_ctxt(BytePos(0), BytePos(0)),\n+            pending_dups: Vec::new(),\n+        };\n+\n+        let sorted_spans = coverage_spans.mir_to_initial_sorted_coverage_spans();\n+\n+        coverage_spans.sorted_spans_iter = Some(sorted_spans.into_iter());\n+        coverage_spans.some_prev = coverage_spans.sorted_spans_iter.as_mut().unwrap().next();\n+        coverage_spans.prev_original_span =\n+            coverage_spans.some_prev.as_ref().expect(\"at least one span\").span;\n+\n+        coverage_spans.to_refined_spans()\n     }\n \n     /// Generate a minimal set of `CoverageSpan`s, each representing a contiguous code region to be\n@@ -732,11 +869,10 @@ impl<'a, 'tcx> Instrumentor<'a, 'tcx> {\n     ///\n     /// Note the resulting vector of `CoverageSpan`s does may not be fully sorted (and does not need\n     /// to be).\n-    fn coverage_spans(&self) -> Vec<CoverageSpan> {\n-        let mut initial_spans =\n-            Vec::<CoverageSpan>::with_capacity(self.mir_body.basic_blocks().len() * 2);\n-        for bcb in self.basic_coverage_blocks().iter() {\n-            for coverage_span in self.extract_spans(bcb) {\n+    fn mir_to_initial_sorted_coverage_spans(&self) -> Vec<CoverageSpan> {\n+        let mut initial_spans = Vec::<CoverageSpan>::with_capacity(self.mir_body.num_nodes() * 2);\n+        for bcb in self.basic_coverage_blocks.iter() {\n+            for coverage_span in self.bcb_to_initial_coverage_spans(bcb) {\n                 initial_spans.push(coverage_span);\n             }\n         }\n@@ -757,14 +893,14 @@ impl<'a, 'tcx> Instrumentor<'a, 'tcx> {\n                         // dominators always come after the dominated equal spans). When later\n                         // comparing two spans in order, the first will either dominate the second,\n                         // or they will have no dominator relationship.\n-                        self.dominators().rank_partial_cmp(b.bcb_leader_bb, a.bcb_leader_bb)\n+                        self.dominators.rank_partial_cmp(b.bcb_leader_bb, a.bcb_leader_bb)\n                     }\n                 } else {\n                     // Sort hi() in reverse order so shorter spans are attempted after longer spans.\n-                    // This guarantees that, if a `prev` span overlaps, and is not equal to, a `curr`\n-                    // span, the prev span either extends further left of the curr span, or they\n-                    // start at the same position and the prev span extends further right of the end\n-                    // of the curr span.\n+                    // This guarantees that, if a `prev` span overlaps, and is not equal to, a\n+                    // `curr` span, the prev span either extends further left of the curr span, or\n+                    // they start at the same position and the prev span extends further right of\n+                    // the end of the curr span.\n                     b.span.hi().partial_cmp(&a.span.hi())\n                 }\n             } else {\n@@ -773,41 +909,7 @@ impl<'a, 'tcx> Instrumentor<'a, 'tcx> {\n             .unwrap()\n         });\n \n-        let refinery = CoverageSpanRefinery::from_sorted_spans(initial_spans, self.dominators());\n-        refinery.to_refined_spans()\n-    }\n-}\n-\n-struct CoverageSpanRefinery<'a> {\n-    sorted_spans_iter: std::vec::IntoIter<CoverageSpan>,\n-    dominators: &'a Dominators<BasicBlock>,\n-    some_curr: Option<CoverageSpan>,\n-    curr_original_span: Span,\n-    some_prev: Option<CoverageSpan>,\n-    prev_original_span: Span,\n-    pending_dups: Vec<CoverageSpan>,\n-    refined_spans: Vec<CoverageSpan>,\n-}\n-\n-impl<'a> CoverageSpanRefinery<'a> {\n-    fn from_sorted_spans(\n-        sorted_spans: Vec<CoverageSpan>,\n-        dominators: &'a Dominators<BasicBlock>,\n-    ) -> Self {\n-        let refined_spans = Vec::with_capacity(sorted_spans.len());\n-        let mut sorted_spans_iter = sorted_spans.into_iter();\n-        let prev = sorted_spans_iter.next().expect(\"at least one span\");\n-        let prev_original_span = prev.span;\n-        Self {\n-            sorted_spans_iter,\n-            dominators,\n-            refined_spans,\n-            some_curr: None,\n-            curr_original_span: Span::with_root_ctxt(BytePos(0), BytePos(0)),\n-            some_prev: Some(prev),\n-            prev_original_span,\n-            pending_dups: Vec::new(),\n-        }\n+        initial_spans\n     }\n \n     /// Iterate through the sorted `CoverageSpan`s, and return the refined list of merged and\n@@ -826,7 +928,7 @@ impl<'a> CoverageSpanRefinery<'a> {\n                     self.prev()\n                 );\n                 let prev = self.take_prev();\n-                self.add_refined_span(prev);\n+                self.refined_spans.push(prev);\n             } else if self.prev().is_closure {\n                 // drop any equal or overlapping span (`curr`) and keep `prev` to test again in the\n                 // next iter\n@@ -839,38 +941,72 @@ impl<'a> CoverageSpanRefinery<'a> {\n             } else if self.curr().is_closure {\n                 self.carve_out_span_for_closure();\n             } else if self.prev_original_span == self.curr().span {\n+                // Note that this compares the new span to `prev_original_span`, which may not\n+                // be the full `prev.span` (if merged during the previous iteration).\n                 self.hold_pending_dups_unless_dominated();\n             } else {\n                 self.cutoff_prev_at_overlapping_curr();\n             }\n         }\n+\n         debug!(\"    AT END, adding last prev={:?}\", self.prev());\n-        let pending_dups = self.pending_dups.split_off(0);\n-        for dup in pending_dups.into_iter() {\n+        let prev = self.take_prev();\n+        let CoverageSpans {\n+            mir_body, basic_coverage_blocks, pending_dups, mut refined_spans, ..\n+        } = self;\n+        for dup in pending_dups {\n             debug!(\"    ...adding at least one pending dup={:?}\", dup);\n-            self.add_refined_span(dup);\n+            refined_spans.push(dup);\n         }\n-        let prev = self.take_prev();\n-        self.add_refined_span(prev);\n-\n-        // FIXME(richkadel): Replace some counters with expressions if they can be calculated based\n-        // on branching. (For example, one branch of a SwitchInt can be computed from the counter\n-        // for the CoverageSpan just prior to the SwitchInt minus the sum of the counters of all\n-        // other branches).\n-\n-        self.to_refined_spans_without_closures()\n-    }\n+        refined_spans.push(prev);\n+\n+        // Remove `CoverageSpan`s with empty spans ONLY if the empty `CoverageSpan`s BCB also has at\n+        // least one other non-empty `CoverageSpan`.\n+        let mut has_coverage = BitSet::new_empty(basic_coverage_blocks.num_nodes());\n+        for covspan in &refined_spans {\n+            if !covspan.span.is_empty() {\n+                has_coverage.insert(covspan.bcb_leader_bb);\n+            }\n+        }\n+        refined_spans.retain(|covspan| {\n+            !(covspan.span.is_empty()\n+                && is_goto(&mir_body[covspan.bcb_leader_bb].terminator().kind)\n+                && has_coverage.contains(covspan.bcb_leader_bb))\n+        });\n \n-    fn add_refined_span(&mut self, coverage_span: CoverageSpan) {\n-        self.refined_spans.push(coverage_span);\n+        // Remove `CoverageSpan`s derived from closures, originally added to ensure the coverage\n+        // regions for the current function leave room for the closure's own coverage regions\n+        // (injected separately, from the closure's own MIR).\n+        refined_spans.retain(|covspan| !covspan.is_closure);\n+        refined_spans\n     }\n \n-    /// Remove `CoverageSpan`s derived from closures, originally added to ensure the coverage\n-    /// regions for the current function leave room for the closure's own coverage regions\n-    /// (injected separately, from the closure's own MIR).\n-    fn to_refined_spans_without_closures(mut self) -> Vec<CoverageSpan> {\n-        self.refined_spans.retain(|covspan| !covspan.is_closure);\n-        self.refined_spans\n+    // Generate a set of `CoverageSpan`s from the filtered set of `Statement`s and `Terminator`s of\n+    // the `BasicBlock`(s) in the given `BasicCoverageBlock`. One `CoverageSpan` is generated\n+    // for each `Statement` and `Terminator`. (Note that subsequent stages of coverage analysis will\n+    // merge some `CoverageSpan`s, at which point a `CoverageSpan` may represent multiple\n+    // `Statement`s and/or `Terminator`s.)\n+    fn bcb_to_initial_coverage_spans(&self, bcb: &BasicCoverageBlock) -> Vec<CoverageSpan> {\n+        bcb.blocks\n+            .iter()\n+            .map(|bbref| {\n+                let bb = *bbref;\n+                let data = &self.mir_body[bb];\n+                data.statements\n+                    .iter()\n+                    .enumerate()\n+                    .filter_map(move |(index, statement)| {\n+                        filtered_statement_span(statement, self.body_span).map(|span| {\n+                            CoverageSpan::for_statement(statement, span, bcb, bb, index)\n+                        })\n+                    })\n+                    .chain(\n+                        filtered_terminator_span(data.terminator(), self.body_span)\n+                            .map(|span| CoverageSpan::for_terminator(span, bcb, bb)),\n+                    )\n+            })\n+            .flatten()\n+            .collect()\n     }\n \n     fn curr(&self) -> &CoverageSpan {\n@@ -904,9 +1040,10 @@ impl<'a> CoverageSpanRefinery<'a> {\n     /// If there are `pending_dups` but `prev` is not a matching dup (`prev.span` doesn't match the\n     /// `pending_dups` spans), then one of the following two things happened during the previous\n     /// iteration:\n-    ///   * the `span` of prev was modified (by `curr_mut().merge_from(prev)`); or\n-    ///   * the `span` of prev advanced past the end of the span of pending_dups\n-    ///     (`prev().span.hi() <= curr().span.lo()`)\n+    ///   * the previous `curr` span (which is now `prev`) was not a duplicate of the pending_dups\n+    ///     (in which case there should be at least two spans in `pending_dups`); or\n+    ///   * the `span` of `prev` was modified by `curr_mut().merge_from(prev)` (in which case\n+    ///     `pending_dups` could have as few as one span)\n     /// In either case, no more spans will match the span of `pending_dups`, so\n     /// add the `pending_dups` if they don't overlap `curr`, and clear the list.\n     fn check_pending_dups(&mut self) {\n@@ -920,7 +1057,7 @@ impl<'a> CoverageSpanRefinery<'a> {\n                     let pending_dups = self.pending_dups.split_off(0);\n                     for dup in pending_dups.into_iter() {\n                         debug!(\"    ...adding at least one pending={:?}\", dup);\n-                        self.add_refined_span(dup);\n+                        self.refined_spans.push(dup);\n                     }\n                 } else {\n                     self.pending_dups.clear();\n@@ -935,7 +1072,7 @@ impl<'a> CoverageSpanRefinery<'a> {\n             self.some_prev = Some(curr);\n             self.prev_original_span = self.curr_original_span;\n         }\n-        while let Some(curr) = self.sorted_spans_iter.next() {\n+        while let Some(curr) = self.sorted_spans_iter.as_mut().unwrap().next() {\n             debug!(\"FOR curr={:?}\", curr);\n             if self.prev_starts_after_next(&curr) {\n                 debug!(\n@@ -994,10 +1131,10 @@ impl<'a> CoverageSpanRefinery<'a> {\n                 for mut dup in pending_dups.iter().cloned() {\n                     dup.span = dup.span.with_hi(left_cutoff);\n                     debug!(\"    ...and at least one pre_closure dup={:?}\", dup);\n-                    self.add_refined_span(dup);\n+                    self.refined_spans.push(dup);\n                 }\n             }\n-            self.add_refined_span(pre_closure);\n+            self.refined_spans.push(pre_closure);\n         }\n         if has_post_closure_span {\n             // Update prev.span to start after the closure (and discard curr)\n@@ -1013,33 +1150,56 @@ impl<'a> CoverageSpanRefinery<'a> {\n         }\n     }\n \n+    /// Called if `curr.span` equals `prev_original_span` (and potentially equal to all\n+    /// `pending_dups` spans, if any); but keep in mind, `prev.span` may start at a `Span.lo()` that\n+    /// is less than (further left of) `prev_original_span.lo()`.\n+    ///\n     /// When two `CoverageSpan`s have the same `Span`, dominated spans can be discarded; but if\n     /// neither `CoverageSpan` dominates the other, both (or possibly more than two) are held,\n     /// until their disposition is determined. In this latter case, the `prev` dup is moved into\n     /// `pending_dups` so the new `curr` dup can be moved to `prev` for the next iteration.\n     fn hold_pending_dups_unless_dominated(&mut self) {\n-        // equal coverage spans are ordered by dominators before dominated (if any)\n-        debug_assert!(!self.prev().is_dominated_by(self.curr(), self.dominators));\n-\n-        if self.curr().is_dominated_by(&self.prev(), self.dominators) {\n-            // If one span dominates the other, assocate the span with the dominator only.\n-            //\n-            // For example:\n-            //     match somenum {\n-            //         x if x < 1 => { ... }\n-            //     }...\n-            // The span for the first `x` is referenced by both the pattern block (every\n-            // time it is evaluated) and the arm code (only when matched). The counter\n-            // will be applied only to the dominator block.\n-            //\n-            // The dominator's (`prev`) execution count may be higher than the dominated\n-            // block's execution count, so drop `curr`.\n+        // Equal coverage spans are ordered by dominators before dominated (if any), so it should be\n+        // impossible for `curr` to dominate any previous `CoverageSpan`.\n+        debug_assert!(!self.span_bcb_is_dominated_by(self.prev(), self.curr()));\n+\n+        let initial_pending_count = self.pending_dups.len();\n+        if initial_pending_count > 0 {\n+            let mut pending_dups = self.pending_dups.split_off(0);\n+            pending_dups.retain(|dup| !self.span_bcb_is_dominated_by(self.curr(), dup));\n+            self.pending_dups.append(&mut pending_dups);\n+            if self.pending_dups.len() < initial_pending_count {\n+                debug!(\n+                    \"  discarded {} of {} pending_dups that dominated curr\",\n+                    initial_pending_count - self.pending_dups.len(),\n+                    initial_pending_count\n+                );\n+            }\n+        }\n+\n+        if self.span_bcb_is_dominated_by(self.curr(), self.prev()) {\n             debug!(\n-                \"  different bcbs but SAME spans, and prev dominates curr. Drop curr and \\\n-                keep prev for next iter. prev={:?}\",\n+                \"  different bcbs but SAME spans, and prev dominates curr. Discard prev={:?}\",\n                 self.prev()\n             );\n-            self.discard_curr();\n+            self.cutoff_prev_at_overlapping_curr();\n+        // If one span dominates the other, assocate the span with the code from the dominated\n+        // block only (`curr`), and discard the overlapping portion of the `prev` span. (Note\n+        // that if `prev.span` is wider than `prev_original_span`, a `CoverageSpan` will still\n+        // be created for `prev`s block, for the non-overlapping portion, left of `curr.span`.)\n+        //\n+        // For example:\n+        //     match somenum {\n+        //         x if x < 1 => { ... }\n+        //     }...\n+        //\n+        // The span for the first `x` is referenced by both the pattern block (every time it is\n+        // evaluated) and the arm code (only when matched). The counter will be applied only to\n+        // the dominated block. This allows coverage to track and highlight things like the\n+        // assignment of `x` above, if the branch is matched, making `x` available to the arm\n+        // code; and to track and highlight the question mark `?` \"try\" operator at the end of\n+        // a function call returning a `Result`, so the `?` is covered when the function returns\n+        // an `Err`, and not counted as covered if the function always returns `Ok`.\n         } else {\n             // Save `prev` in `pending_dups`. (`curr` will become `prev` in the next iteration.)\n             // If the `curr` CoverageSpan is later discarded, `pending_dups` can be discarded as\n@@ -1064,7 +1224,7 @@ impl<'a> CoverageSpanRefinery<'a> {\n     fn cutoff_prev_at_overlapping_curr(&mut self) {\n         debug!(\n             \"  different bcbs, overlapping spans, so ignore/drop pending and only add prev \\\n-            if it has statements that end before curr={:?}\",\n+            if it has statements that end before curr; prev={:?}\",\n             self.prev()\n         );\n         if self.pending_dups.is_empty() {\n@@ -1075,13 +1235,17 @@ impl<'a> CoverageSpanRefinery<'a> {\n             } else {\n                 debug!(\"  ... adding modified prev={:?}\", self.prev());\n                 let prev = self.take_prev();\n-                self.add_refined_span(prev);\n+                self.refined_spans.push(prev);\n             }\n         } else {\n             // with `pending_dups`, `prev` cannot have any statements that don't overlap\n             self.pending_dups.clear();\n         }\n     }\n+\n+    fn span_bcb_is_dominated_by(&self, covspan: &CoverageSpan, dom_covspan: &CoverageSpan) -> bool {\n+        self.dominators.is_dominated_by(covspan.bcb_leader_bb, dom_covspan.bcb_leader_bb)\n+    }\n }\n \n fn filtered_statement_span(statement: &'a Statement<'tcx>, body_span: Span) -> Option<Span> {\n@@ -1126,7 +1290,7 @@ fn filtered_statement_span(statement: &'a Statement<'tcx>, body_span: Span) -> O\n         | StatementKind::LlvmInlineAsm(_)\n         | StatementKind::Retag(_, _)\n         | StatementKind::AscribeUserType(_, _) => {\n-            Some(source_info_span(&statement.source_info, body_span))\n+            Some(function_source_span(statement.source_info.span, body_span))\n         }\n     }\n }\n@@ -1138,15 +1302,43 @@ fn filtered_terminator_span(terminator: &'a Terminator<'tcx>, body_span: Span) -\n         // an `if condition { block }` has a span that includes the executed block, if true,\n         // but for coverage, the code region executed, up to *and* through the SwitchInt,\n         // actually stops before the if's block.)\n-        TerminatorKind::Unreachable // Unreachable blocks are not connected to the CFG\n+        TerminatorKind::Unreachable // Unreachable blocks are not connected to the MIR CFG\n         | TerminatorKind::Assert { .. }\n         | TerminatorKind::Drop { .. }\n         | TerminatorKind::DropAndReplace { .. }\n         | TerminatorKind::SwitchInt { .. }\n-        | TerminatorKind::Goto { .. }\n         // For `FalseEdge`, only the `real` branch is taken, so it is similar to a `Goto`.\n+        // FIXME(richkadel): Note that `Goto` was moved to it's own match arm, for the reasons\n+        // described below. Add tests to confirm whether or not similar cases also apply to\n+        // `FalseEdge`.\n         | TerminatorKind::FalseEdge { .. } => None,\n \n+        // FIXME(richkadel): Note that `Goto` was initially filtered out (by returning `None`, as\n+        // with the `TerminatorKind`s above) because its `Span` was way to broad to be beneficial,\n+        // and, at the time, `Goto` didn't seem to provide any additional contributions to the\n+        // coverage analysis. Upon further review, `Goto` terminated blocks do appear to benefit\n+        // the coverage analysis, and the BCB CFG. To overcome the issues with the `Spans`, the\n+        // coverage algorithms--and the final coverage map generation--include some exceptional\n+        // behaviors.\n+        //\n+        // `Goto`s are often the targets of `SwitchInt` branches, and certain important\n+        // optimizations to replace some `Counter`s with `Expression`s require a separate\n+        // `BasicCoverageBlock` for each branch, to support the `Counter`, when needed.\n+        //\n+        // Also, some test cases showed that `Goto` terminators, and to some degree their `Span`s,\n+        // provided useful context for coverage, such as to count and show when `if` blocks\n+        // _without_ `else` blocks execute the `false` case (counting when the body of the `if`\n+        // was _not_ taken). In these cases, the `Goto` span is ultimately given a `CoverageSpan`\n+        // of 1 character, at the end of it's original `Span`.\n+        //\n+        // However, in other cases, a visible `CoverageSpan` is not wanted, but the `Goto`\n+        // block must still be counted (for example, to contribute its count to an `Expression`\n+        // that reports the execution count for some other block). In these cases, the code region\n+        // is set to `None`.\n+        TerminatorKind::Goto { .. } => {\n+            Some(function_source_span(terminator.source_info.span.shrink_to_hi(), body_span))\n+        }\n+\n         // Retain spans from all other terminators\n         TerminatorKind::Resume\n         | TerminatorKind::Abort\n@@ -1156,25 +1348,38 @@ fn filtered_terminator_span(terminator: &'a Terminator<'tcx>, body_span: Span) -\n         | TerminatorKind::GeneratorDrop\n         | TerminatorKind::FalseUnwind { .. }\n         | TerminatorKind::InlineAsm { .. } => {\n-            Some(source_info_span(&terminator.source_info, body_span))\n+            Some(function_source_span(terminator.source_info.span, body_span))\n         }\n     }\n }\n \n #[inline(always)]\n-fn source_info_span(source_info: &SourceInfo, body_span: Span) -> Span {\n-    let span = original_sp(source_info.span, body_span).with_ctxt(SyntaxContext::root());\n+fn function_source_span(span: Span, body_span: Span) -> Span {\n+    let span = original_sp(span, body_span).with_ctxt(SyntaxContext::root());\n     if body_span.contains(span) { span } else { body_span }\n }\n \n+#[inline(always)]\n+fn is_goto(term_kind: &TerminatorKind<'tcx>) -> bool {\n+    match term_kind {\n+        TerminatorKind::Goto { .. } => true,\n+        _ => false,\n+    }\n+}\n+\n /// Convert the Span into its file name, start line and column, and end line and column\n-fn make_code_region(file_name: Symbol, source_file: &Lrc<SourceFile>, span: Span) -> CodeRegion {\n+fn make_code_region(\n+    file_name: Symbol,\n+    source_file: &Lrc<SourceFile>,\n+    span: Span,\n+    body_span: Span,\n+) -> CodeRegion {\n     let (start_line, mut start_col) = source_file.lookup_file_pos(span.lo());\n     let (end_line, end_col) = if span.hi() == span.lo() {\n         let (end_line, mut end_col) = (start_line, start_col);\n         // Extend an empty span by one character so the region will be counted.\n         let CharPos(char_pos) = start_col;\n-        if char_pos > 0 {\n+        if span.hi() == body_span.hi() {\n             start_col = CharPos(char_pos - 1);\n         } else {\n             end_col = CharPos(char_pos + 1);"}, {"sha": "625f1a3e6844e1354bea9fb94d729fae65f6ec84", "filename": "compiler/rustc_mir/src/util/graphviz.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_mir%2Fsrc%2Futil%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/compiler%2Frustc_mir%2Fsrc%2Futil%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Futil%2Fgraphviz.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -62,6 +62,7 @@ where\n     let dark_mode = tcx.sess.opts.debugging_opts.graphviz_dark_mode;\n     if dark_mode {\n         graph_attrs.push(r#\"bgcolor=\"black\"\"#);\n+        graph_attrs.push(r#\"fontcolor=\"white\"\"#);\n         content_attrs.push(r#\"color=\"white\"\"#);\n         content_attrs.push(r#\"fontcolor=\"white\"\"#);\n     }\n@@ -112,7 +113,8 @@ where\n \n     // Basic block number at the top.\n     let (blk, bgcolor) = if data.is_cleanup {\n-        (format!(\"{} (cleanup)\", block.index()), \"lightblue\")\n+        let color = if dark_mode { \"royalblue\" } else { \"lightblue\" };\n+        (format!(\"{} (cleanup)\", block.index()), color)\n     } else {\n         let color = if dark_mode { \"dimgray\" } else { \"gray\" };\n         (format!(\"{}\", block.index()), color)"}, {"sha": "ddc65085e80935d3051b70eb8b600a736cb22168", "filename": "src/test/mir-opt/instrument_coverage.main.InstrumentCoverage.diff", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Fmir-opt%2Finstrument_coverage.main.InstrumentCoverage.diff", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Fmir-opt%2Finstrument_coverage.main.InstrumentCoverage.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finstrument_coverage.main.InstrumentCoverage.diff?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -26,13 +26,15 @@\n       }\n   \n       bb3: {\n-+         Coverage::Counter(2) for /the/src/instrument_coverage.rs:13:13 - 16:2; // scope 0 at /the/src/instrument_coverage.rs:12:9: 14:10\n++         Coverage::Counter(2) for /the/src/instrument_coverage.rs:13:13 - 13:18; // scope 0 at /the/src/instrument_coverage.rs:12:9: 14:10\n++         Coverage::Expression(4294967295) = 2 + 0 for /the/src/instrument_coverage.rs:16:1 - 16:2; // scope 0 at /the/src/instrument_coverage.rs:12:9: 14:10\n           falseEdge -> [real: bb5, imaginary: bb4]; // scope 0 at /the/src/instrument_coverage.rs:12:9: 14:10\n       }\n   \n       bb4: {\n           _1 = const ();                   // scope 0 at /the/src/instrument_coverage.rs:12:9: 14:10\n           StorageDead(_2);                 // scope 0 at /the/src/instrument_coverage.rs:15:5: 15:6\n++         Coverage::Counter(3) for /the/src/instrument_coverage.rs:15:6 - 15:7; // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n           goto -> bb0;                     // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n       }\n   "}, {"sha": "18863edac97e49815f1f803ede41583adb99622b", "filename": "src/test/mir-opt/instrument_coverage.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Fmir-opt%2Finstrument_coverage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Fmir-opt%2Finstrument_coverage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finstrument_coverage.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -1,10 +1,10 @@\n-// Test that the initial version of Rust coverage injects Coverage statements at the top of each\n-// function. The Coverage Counter statements are later converted into LLVM instrprof.increment\n-// intrinsics, during codegen.\n+// Test that `-Z instrument-coverage` injects Coverage statements. The Coverage Counter statements\n+// are later converted into LLVM instrprof.increment intrinsics, during codegen.\n \n // needs-profiler-support\n // ignore-windows\n-// compile-flags: -Zinstrument-coverage --remap-path-prefix={{src-base}}=/the/src\n+// compile-flags: -Z instrument-coverage --remap-path-prefix={{src-base}}=/the/src\n+\n // EMIT_MIR instrument_coverage.main.InstrumentCoverage.diff\n // EMIT_MIR instrument_coverage.bar.InstrumentCoverage.diff\n fn main() {"}, {"sha": "bd2a2475d9e1050c4e39591692997f8556a358f9", "filename": "src/test/run-make-fulldeps/coverage-llvmir-base/filecheck.testprog.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir-base%2Ffilecheck.testprog.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir-base%2Ffilecheck.testprog.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir-base%2Ffilecheck.testprog.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -34,7 +34,7 @@ CHECK-SAME:   section \"llvm.metadata\"\n \n CHECK:        [[DEFINE_INTERNAL]] { {{.*}} } @_R{{[a-zA-Z0-9_]+}}testprog14will_be_called() unnamed_addr #{{[0-9]+}} {\n CHECK-NEXT:   start:\n-CHECK-NOT:    bb{{[0-9]+}}:\n+CHECK-NOT:    [[DEFINE_INTERNAL]]\n CHECK:        %pgocount = load i64, i64* getelementptr inbounds\n CHECK-SAME:   * @__profc__R{{[a-zA-Z0-9_]+}}testprog14will_be_called,\n "}, {"sha": "bfecc5fd7f557c82f65e8be9fb1c2b54ac0761eb", "filename": "src/test/run-make-fulldeps/coverage-reports-base/Makefile", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2FMakefile?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -21,6 +21,7 @@ clear_expected_if_blessed:\n ifdef RUSTC_BLESS_TEST\n \trm -f expected_export_coverage.*.json\n \trm -f expected_show_coverage.*.txt\n+\trm -f expected_show_coverage_counters.*.txt\n endif\n \n -include clear_expected_if_blessed\n@@ -54,14 +55,19 @@ endif\n \t# when comparing the JSON `export`, the `show` output may be useful when\n \t# debugging.\n \t\"$(LLVM_BIN_DIR)\"/llvm-cov show \\\n+\t\t\t--debug \\\n \t\t\t--Xdemangler=\"$(RUST_DEMANGLER)\" \\\n \t\t\t--show-line-counts-or-regions \\\n \t\t\t--instr-profile=\"$(TMPDIR)\"/$@.profdata \\\n \t\t\t$(call BIN,\"$(TMPDIR)\"/$@) \\\n-\t\t> \"$(TMPDIR)\"/actual_show_coverage.$@.txt\n+\t\t> \"$(TMPDIR)\"/actual_show_coverage.$@.txt \\\n+\t\t2> \"$(TMPDIR)\"/actual_show_coverage_counters.$@.txt\n \n ifdef RUSTC_BLESS_TEST\n-\tcp \"$(TMPDIR)\"/actual_show_coverage.$@.txt expected_show_coverage.$@.txt\n+\tcp \"$(TMPDIR)\"/actual_show_coverage.$@.txt \\\n+\t\t\texpected_show_coverage.$@.txt\n+\tcp \"$(TMPDIR)\"/actual_show_coverage_counters.$@.txt \\\n+\t\t\texpected_show_coverage_counters.$@.txt\n else\n \t# Compare the show coverage output (`--bless` refreshes `typical` files)\n \t# Note `llvm-cov show` output for some programs can vary, but can be ignored\n@@ -75,6 +81,14 @@ else\n \t\t\tfalse \\\n \t\t)\n \n+\t$(DIFF) expected_show_coverage_counters.$@.txt \"$(TMPDIR)\"/actual_show_coverage_counters.$@.txt || \\\n+\t\t( grep -q '^\\/\\/ ignore-llvm-cov-show-diffs' $(SOURCEDIR)/$@.rs && \\\n+\t\t\t>&2 echo 'diff failed, but suppressed with `// ignore-llvm-cov-show-diffs` in $(SOURCEDIR)/$@.rs' \\\n+\t\t) || \\\n+\t\t( >&2 echo 'diff failed, and not suppressed without `// ignore-llvm-cov-show-diffs` in $(SOURCEDIR)/$@.rs'; \\\n+\t\t\tfalse \\\n+\t\t)\n+\n endif\n \n \t# Generate a coverage report in JSON, using `llvm-cov export`, and fail if"}, {"sha": "bff55300b3ca3d210ad1d4f3e47976a4457e586a", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.closure.json", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.closure.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.closure.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.closure.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -17,14 +17,14 @@\n             },\n             \"lines\": {\n               \"count\": 91,\n-              \"covered\": 75,\n-              \"percent\": 82.41758241758241\n+              \"covered\": 77,\n+              \"percent\": 84.61538461538461\n             },\n             \"regions\": {\n-              \"count\": 21,\n-              \"covered\": 11,\n-              \"notcovered\": 10,\n-              \"percent\": 52.38095238095239\n+              \"count\": 25,\n+              \"covered\": 13,\n+              \"notcovered\": 12,\n+              \"percent\": 52\n             }\n           }\n         }\n@@ -42,14 +42,14 @@\n         },\n         \"lines\": {\n           \"count\": 91,\n-          \"covered\": 75,\n-          \"percent\": 82.41758241758241\n+          \"covered\": 77,\n+          \"percent\": 84.61538461538461\n         },\n         \"regions\": {\n-          \"count\": 21,\n-          \"covered\": 11,\n-          \"notcovered\": 10,\n-          \"percent\": 52.38095238095239\n+          \"count\": 25,\n+          \"covered\": 13,\n+          \"notcovered\": 12,\n+          \"percent\": 52\n         }\n       }\n     }"}, {"sha": "7a7e4c04f001814bdb104a7510a87420bf45a6b8", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.drop_trait.json", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.drop_trait.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.drop_trait.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.drop_trait.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -21,8 +21,8 @@\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 5,\n-              \"covered\": 5,\n+              \"count\": 6,\n+              \"covered\": 6,\n               \"notcovered\": 0,\n               \"percent\": 100\n             }\n@@ -46,8 +46,8 @@\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 5,\n-          \"covered\": 5,\n+          \"count\": 6,\n+          \"covered\": 6,\n           \"notcovered\": 0,\n           \"percent\": 100\n         }"}, {"sha": "1025cd3de80d2c240f10d40afa3d021db77d8d07", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.generics.json", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.generics.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.generics.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.generics.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -21,8 +21,8 @@\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 6,\n-              \"covered\": 6,\n+              \"count\": 7,\n+              \"covered\": 7,\n               \"notcovered\": 0,\n               \"percent\": 100\n             }\n@@ -46,8 +46,8 @@\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 6,\n-          \"covered\": 6,\n+          \"count\": 7,\n+          \"covered\": 7,\n           \"notcovered\": 0,\n           \"percent\": 100\n         }"}, {"sha": "84dcc251f3f4b11f7cdfba0ea194e979a232a158", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.if.json", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.if.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.if.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.if.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -21,10 +21,10 @@\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 4,\n+              \"count\": 5,\n               \"covered\": 4,\n-              \"notcovered\": 0,\n-              \"percent\": 100\n+              \"notcovered\": 1,\n+              \"percent\": 80\n             }\n           }\n         }\n@@ -46,10 +46,10 @@\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 4,\n+          \"count\": 5,\n           \"covered\": 4,\n-          \"notcovered\": 0,\n-          \"percent\": 100\n+          \"notcovered\": 1,\n+          \"percent\": 80\n         }\n       }\n     }"}, {"sha": "2d2ad1dbe3f713a4f82df216fe7d2d736964f379", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.if_else.json", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.if_else.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.if_else.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.if_else.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 28,\n-              \"covered\": 19,\n-              \"percent\": 67.85714285714286\n+              \"count\": 29,\n+              \"covered\": 21,\n+              \"percent\": 72.41379310344827\n             },\n             \"regions\": {\n-              \"count\": 7,\n-              \"covered\": 5,\n+              \"count\": 9,\n+              \"covered\": 7,\n               \"notcovered\": 2,\n-              \"percent\": 71.42857142857143\n+              \"percent\": 77.77777777777779\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 28,\n-          \"covered\": 19,\n-          \"percent\": 67.85714285714286\n+          \"count\": 29,\n+          \"covered\": 21,\n+          \"percent\": 72.41379310344827\n         },\n         \"regions\": {\n-          \"count\": 7,\n-          \"covered\": 5,\n+          \"count\": 9,\n+          \"covered\": 7,\n           \"notcovered\": 2,\n-          \"percent\": 71.42857142857143\n+          \"percent\": 77.77777777777779\n         }\n       }\n     }"}, {"sha": "c178e7f93476f097fcaa839652a6ac762127d69e", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.inner_items.json", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.inner_items.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.inner_items.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.inner_items.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -21,10 +21,10 @@\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 13,\n+              \"count\": 15,\n               \"covered\": 13,\n-              \"notcovered\": 0,\n-              \"percent\": 100\n+              \"notcovered\": 2,\n+              \"percent\": 86.66666666666667\n             }\n           }\n         }\n@@ -46,10 +46,10 @@\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 13,\n+          \"count\": 15,\n           \"covered\": 13,\n-          \"notcovered\": 0,\n-          \"percent\": 100\n+          \"notcovered\": 2,\n+          \"percent\": 86.66666666666667\n         }\n       }\n     }"}, {"sha": "95a1dcd3b8eee447b617fff592ec3e577f187431", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.lazy_boolean.json", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.lazy_boolean.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.lazy_boolean.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.lazy_boolean.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 21,\n-              \"covered\": 19,\n-              \"percent\": 90.47619047619048\n+              \"count\": 40,\n+              \"covered\": 32,\n+              \"percent\": 80\n             },\n             \"regions\": {\n-              \"count\": 16,\n-              \"covered\": 14,\n-              \"notcovered\": 2,\n-              \"percent\": 87.5\n+              \"count\": 39,\n+              \"covered\": 28,\n+              \"notcovered\": 11,\n+              \"percent\": 71.7948717948718\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 21,\n-          \"covered\": 19,\n-          \"percent\": 90.47619047619048\n+          \"count\": 40,\n+          \"covered\": 32,\n+          \"percent\": 80\n         },\n         \"regions\": {\n-          \"count\": 16,\n-          \"covered\": 14,\n-          \"notcovered\": 2,\n-          \"percent\": 87.5\n+          \"count\": 39,\n+          \"covered\": 28,\n+          \"notcovered\": 11,\n+          \"percent\": 71.7948717948718\n         }\n       }\n     }"}, {"sha": "aec85cd0329cbb2dfccd52044ca0abf7adb00de6", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.loops_and_branches.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.loops_and_branches.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.loops_and_branches.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.loops_and_branches.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/loops_and_branches.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 11,\n+              \"covered\": 11,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 10,\n+              \"covered\": 8,\n+              \"notcovered\": 2,\n+              \"percent\": 80\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 11,\n+          \"covered\": 11,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 10,\n+          \"covered\": 8,\n+          \"notcovered\": 2,\n+          \"percent\": 80\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "dbe4f9ca6fd1738f2471e0e0b5cb96fe07ba9fc7", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.nested_loops.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.nested_loops.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.nested_loops.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.nested_loops.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/nested_loops.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 21,\n+              \"covered\": 17,\n+              \"percent\": 80.95238095238095\n+            },\n+            \"regions\": {\n+              \"count\": 20,\n+              \"covered\": 16,\n+              \"notcovered\": 4,\n+              \"percent\": 80\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 21,\n+          \"covered\": 17,\n+          \"percent\": 80.95238095238095\n+        },\n+        \"regions\": {\n+          \"count\": 20,\n+          \"covered\": 16,\n+          \"notcovered\": 4,\n+          \"percent\": 80\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "8081fba9e22ee59ea07e4341fc84a297e434c945", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.partial_eq_counter_without_region.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.partial_eq_counter_without_region.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.partial_eq_counter_without_region.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.partial_eq_counter_without_region.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/partial_eq_counter_without_region.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 5,\n+              \"covered\": 5,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 5,\n+              \"covered\": 5,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 15,\n+              \"covered\": 15,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 6,\n+              \"covered\": 6,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 5,\n+          \"covered\": 5,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 5,\n+          \"covered\": 5,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 15,\n+          \"covered\": 15,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 6,\n+          \"covered\": 6,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "ada6bb062dd1eaf04d076a8dc2931361441840c0", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.simple_loop.json", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.simple_loop.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.simple_loop.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.simple_loop.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 18,\n-              \"covered\": 18,\n+              \"count\": 19,\n+              \"covered\": 19,\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 7,\n-              \"covered\": 7,\n-              \"notcovered\": 0,\n-              \"percent\": 100\n+              \"count\": 9,\n+              \"covered\": 8,\n+              \"notcovered\": 1,\n+              \"percent\": 88.88888888888889\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 18,\n-          \"covered\": 18,\n+          \"count\": 19,\n+          \"covered\": 19,\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 7,\n-          \"covered\": 7,\n-          \"notcovered\": 0,\n-          \"percent\": 100\n+          \"count\": 9,\n+          \"covered\": 8,\n+          \"notcovered\": 1,\n+          \"percent\": 88.88888888888889\n         }\n       }\n     }"}, {"sha": "63d1ae74c5f5d51759f22c7f82f7799ecc11c590", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.simple_match.json", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.simple_match.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.simple_match.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.simple_match.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 26,\n-              \"covered\": 26,\n+              \"count\": 24,\n+              \"covered\": 24,\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 9,\n-              \"covered\": 9,\n-              \"notcovered\": 0,\n-              \"percent\": 100\n+              \"count\": 15,\n+              \"covered\": 14,\n+              \"notcovered\": 1,\n+              \"percent\": 93.33333333333333\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 26,\n-          \"covered\": 26,\n+          \"count\": 24,\n+          \"covered\": 24,\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 9,\n-          \"covered\": 9,\n-          \"notcovered\": 0,\n-          \"percent\": 100\n+          \"count\": 15,\n+          \"covered\": 14,\n+          \"notcovered\": 1,\n+          \"percent\": 93.33333333333333\n         }\n       }\n     }"}, {"sha": "3fa6821cd1df925cb22fca64fbdda2a51545ccd6", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.tight_infinite_loop.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.tight_infinite_loop.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.tight_infinite_loop.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.tight_infinite_loop.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/tight_infinite_loop.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "e845ee29fa452305323a7e9c050f74e4fc148515", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.try_error_result.json", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.try_error_result.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.try_error_result.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.try_error_result.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 16,\n-              \"covered\": 15,\n-              \"percent\": 93.75\n+              \"count\": 20,\n+              \"covered\": 19,\n+              \"percent\": 95\n             },\n             \"regions\": {\n-              \"count\": 13,\n-              \"covered\": 12,\n-              \"notcovered\": 1,\n-              \"percent\": 92.3076923076923\n+              \"count\": 20,\n+              \"covered\": 17,\n+              \"notcovered\": 3,\n+              \"percent\": 85\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 16,\n-          \"covered\": 15,\n-          \"percent\": 93.75\n+          \"count\": 20,\n+          \"covered\": 19,\n+          \"percent\": 95\n         },\n         \"regions\": {\n-          \"count\": 13,\n-          \"covered\": 12,\n-          \"notcovered\": 1,\n-          \"percent\": 92.3076923076923\n+          \"count\": 20,\n+          \"covered\": 17,\n+          \"notcovered\": 3,\n+          \"percent\": 85\n         }\n       }\n     }"}, {"sha": "464bb614ea1b11a6f0a7325e499c7c3d56479533", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.various_conditions.json", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.various_conditions.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.various_conditions.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.various_conditions.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -21,10 +21,10 @@\n               \"percent\": 46.93877551020408\n             },\n             \"regions\": {\n-              \"count\": 51,\n+              \"count\": 70,\n               \"covered\": 19,\n-              \"notcovered\": 32,\n-              \"percent\": 37.254901960784316\n+              \"notcovered\": 51,\n+              \"percent\": 27.142857142857142\n             }\n           }\n         }\n@@ -46,10 +46,10 @@\n           \"percent\": 46.93877551020408\n         },\n         \"regions\": {\n-          \"count\": 51,\n+          \"count\": 70,\n           \"covered\": 19,\n-          \"notcovered\": 32,\n-          \"percent\": 37.254901960784316\n+          \"notcovered\": 51,\n+          \"percent\": 27.142857142857142\n         }\n       }\n     }"}, {"sha": "27862087ed567a4ff6c228cccfd57839e5ca498a", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.while.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.while.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.while.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.while.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/while.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 4,\n+              \"covered\": 3,\n+              \"percent\": 75\n+            },\n+            \"regions\": {\n+              \"count\": 5,\n+              \"covered\": 3,\n+              \"notcovered\": 2,\n+              \"percent\": 60\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 4,\n+          \"covered\": 3,\n+          \"percent\": 75\n+        },\n+        \"regions\": {\n+          \"count\": 5,\n+          \"covered\": 3,\n+          \"notcovered\": 2,\n+          \"percent\": 60\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "555ac745d53718c499b7e00ed7214b7d5c5f73f4", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.while_early_return.json", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.while_early_return.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.while_early_return.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.while_early_return.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -17,14 +17,14 @@\n             },\n             \"lines\": {\n               \"count\": 18,\n-              \"covered\": 16,\n-              \"percent\": 88.88888888888889\n+              \"covered\": 15,\n+              \"percent\": 83.33333333333334\n             },\n             \"regions\": {\n-              \"count\": 9,\n-              \"covered\": 7,\n-              \"notcovered\": 2,\n-              \"percent\": 77.77777777777779\n+              \"count\": 11,\n+              \"covered\": 8,\n+              \"notcovered\": 3,\n+              \"percent\": 72.72727272727273\n             }\n           }\n         }\n@@ -42,14 +42,14 @@\n         },\n         \"lines\": {\n           \"count\": 18,\n-          \"covered\": 16,\n-          \"percent\": 88.88888888888889\n+          \"covered\": 15,\n+          \"percent\": 83.33333333333334\n         },\n         \"regions\": {\n-          \"count\": 9,\n-          \"covered\": 7,\n-          \"notcovered\": 2,\n-          \"percent\": 77.77777777777779\n+          \"count\": 11,\n+          \"covered\": 8,\n+          \"notcovered\": 3,\n+          \"percent\": 72.72727272727273\n         }\n       }\n     }"}, {"sha": "aef26a62e25fba8229ef1df99653976796419d4d", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.closure.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.closure.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.closure.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.closure.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -62,7 +62,7 @@\n    62|      1|                let mut countdown = 0;\n    63|      1|                if is_false {\n    64|      0|                    countdown = 10;\n-   65|      0|                }\n+   65|      1|                }\n    66|      1|                \"alt string 3\".to_owned()\n    67|      1|            }\n    68|      1|        )\n@@ -77,7 +77,7 @@\n    77|      1|        let mut countdown = 0;\n    78|      1|        if is_false {\n    79|      0|            countdown = 10;\n-   80|      0|        }\n+   80|      1|        }\n    81|      1|        \"alt string 4\".to_owned()\n    82|      1|    };\n    83|      1|    println!("}, {"sha": "43592df1059aa4083841d3088ed532c62f05066d", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.drop_trait.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.drop_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.drop_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.drop_trait.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -24,7 +24,7 @@\n    24|       |    let _ = Firework { strength: 1000 };\n    25|       |\n    26|       |    Ok(())\n-   27|      1|}\n+   27|      2|}\n    28|       |\n    29|       |// Expected program output:\n    30|       |//   Exiting with error..."}, {"sha": "11dc0aa65e2d1d81c6c3a4ff90948ccfaa636c89", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.generics.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.generics.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.generics.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.generics.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -57,7 +57,7 @@\n    35|       |    let _ = Firework { strength: 1000 };\n    36|       |\n    37|       |    Ok(())\n-   38|      1|}\n+   38|      2|}\n    39|       |\n    40|       |// Expected program output:\n    41|       |//   Exiting with error..."}, {"sha": "85e6440ab3729f1275552d93d570d6ff6fc2f242", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.if.txt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.if.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.if.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.if.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -25,5 +25,6 @@\n    25|      1|            10\n    26|      1|        ;\n    27|      1|    }\n+                   ^0\n    28|      1|}\n "}, {"sha": "64cbc262521bf6fdb8d564b4f5967cf40b3172da", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.if_else.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.if_else.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.if_else.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.if_else.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -20,7 +20,7 @@\n    20|      0|        countdown\n    21|      0|        =\n    22|      0|            100\n-   23|       |    }\n+   23|      1|    }\n    24|       |\n    25|       |    if\n    26|      1|        is_true\n@@ -36,6 +36,6 @@\n    36|      0|        =\n    37|      0|            100\n    38|      0|        ;\n-   39|      0|    }\n+   39|      1|    }\n    40|      1|}\n "}, {"sha": "4a51f842a4bb22cbea878a2e0944013823dc42b6", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.inner_items.txt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.inner_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.inner_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.inner_items.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -10,6 +10,7 @@\n    10|      1|    if is_true {\n    11|      1|        countdown = 10;\n    12|      1|    }\n+                   ^0\n    13|       |\n    14|       |    mod in_mod {\n    15|       |        const IN_MOD_CONST: u32 = 1000;\n@@ -48,6 +49,7 @@\n    48|      1|    if is_true {\n    49|      1|        in_func(countdown);\n    50|      1|    }\n+                   ^0\n    51|       |\n    52|      1|    let mut val = InStruct {\n    53|      1|        in_struct_field: 101,"}, {"sha": "f01f69f2496ee76ee52de02eb013135f34009095", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.lazy_boolean.txt", "status": "modified", "additions": 37, "deletions": 16, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.lazy_boolean.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.lazy_boolean.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.lazy_boolean.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -12,12 +12,14 @@\n    12|      1|        b = 10;\n    13|      1|        c = 100;\n    14|      1|    }\n+                   ^0\n    15|       |    let\n    16|      1|        somebool\n    17|       |        =\n    18|      1|            a < b\n    19|       |        ||\n-   20|      0|            b < c\n+   20|      1|            b < c\n+                          ^0\n    21|       |    ;\n    22|       |    let\n    23|      1|        somebool\n@@ -26,19 +28,38 @@\n    26|       |        ||\n    27|      1|            b < c\n    28|       |    ;\n-   29|       |    let\n-   30|      1|        somebool\n-   31|       |        =\n-   32|      1|            a < b\n-   33|       |        &&\n-   34|      1|            b < c\n-   35|       |    ;\n-   36|       |    let\n-   37|      1|        somebool\n-   38|       |        =\n-   39|      1|            b < a\n-   40|       |        &&\n-   41|      0|            b < c\n-   42|       |    ;\n-   43|      1|}\n+   29|      1|    let somebool = a < b && b < c;\n+   30|      1|    let somebool = b < a && b < c;\n+                                          ^0\n+   31|       |\n+   32|       |    if\n+   33|      1|        !\n+   34|      1|        is_true\n+   35|      0|    {\n+   36|      0|        a = 2\n+   37|      0|        ;\n+   38|      1|    }\n+   39|       |\n+   40|       |    if\n+   41|      1|        is_true\n+   42|      1|    {\n+   43|      1|        b = 30\n+   44|      1|        ;\n+   45|      1|    }\n+   46|       |    else\n+   47|      0|    {\n+   48|      0|        c = 400\n+   49|      0|        ;\n+   50|      1|    }\n+   51|       |\n+   52|      1|    if !is_true {\n+   53|      0|        a = 2;\n+   54|      1|    }\n+   55|       |\n+   56|      1|    if is_true {\n+   57|      1|        b = 30;\n+   58|      1|    } else {\n+   59|      0|        c = 400;\n+   60|      1|    }\n+   61|      1|}\n "}, {"sha": "3a969a6b89869366e1bc2fd3a9defc1743e08861", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.loops_and_branches.txt", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.loops_and_branches.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.loops_and_branches.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.loops_and_branches.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,38 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |\n+    3|       |// This test confirms an earlier problem was resolved, supporting the MIR graph generated by the\n+    4|       |// structure of this `fmt` function.\n+    5|       |\n+    6|       |struct DebugTest;\n+    7|       |\n+    8|       |impl std::fmt::Debug for DebugTest {\n+    9|       |    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {\n+   10|      1|        if true {\n+   11|      1|            if false {\n+   12|       |                while true {\n+   13|       |                }\n+   14|      1|            }\n+   15|      1|            write!(f, \"error\")?;\n+                                            ^0\n+   16|       |        } else {\n+   17|      1|        }\n+   18|      1|        Ok(())\n+   19|      1|    }\n+   20|       |}\n+   21|       |\n+   22|      1|fn main() {\n+   23|      1|    let debug_test = DebugTest;\n+   24|      1|    println!(\"{:?}\", debug_test);\n+   25|      1|}\n+   26|       |\n+   27|       |/*\n+   28|       |\n+   29|       |This is the error message generated, before the issue was fixed:\n+   30|       |\n+   31|       |error: internal compiler error: compiler/rustc_mir/src/transform/coverage/mod.rs:374:42:\n+   32|       |Error processing: DefId(0:6 ~ bug_incomplete_cov_graph_traversal_simplified[317d]::{impl#0}::fmt):\n+   33|       |Error { message: \"`TraverseCoverageGraphWithLoops` missed some `BasicCoverageBlock`s:\n+   34|       |[bcb6, bcb7, bcb9]\" }\n+   35|       |\n+   36|       |*/\n+"}, {"sha": "e0545c76f780f7bff8b01d05bbafe304738e6546", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.nested_loops.txt", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.nested_loops.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.nested_loops.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.nested_loops.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,26 @@\n+    1|       |fn main() {\n+    2|      1|    let is_true = std::env::args().len() == 1;\n+    3|      1|    let mut countdown = 10;\n+    4|       |\n+    5|      1|    'outer: while countdown > 0 {\n+    6|      1|        let mut a = 100;\n+    7|      1|        let mut b = 100;\n+    8|      3|        for _ in 0..50 {\n+    9|      3|            if a < 30 {\n+   10|      0|                break;\n+   11|       |            }\n+   12|      3|            a -= 5;\n+   13|      3|            b -= 5;\n+   14|      3|            if b < 90 {\n+   15|      1|                a -= 10;\n+   16|      1|                if is_true {\n+   17|      1|                    break 'outer;\n+   18|       |                } else {\n+   19|      0|                    a -= 2;\n+   20|      0|                }\n+   21|      2|            }\n+   22|      3|        }\n+   23|      0|        countdown -= 1;\n+   24|      1|    }\n+   25|      1|}\n+"}, {"sha": "310bf13a695af396ef4e1dc1433200831cee5ea4", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.partial_eq_counter_without_region.txt", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.partial_eq_counter_without_region.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.partial_eq_counter_without_region.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.partial_eq_counter_without_region.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,101 @@\n+    1|       |// This test confirms an earlier problem was resolved, supporting the MIR graph generated by the\n+    2|       |// structure of this test.\n+    3|       |\n+    4|      2|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+                                                    ^1       ^1\n+    5|       |pub struct Version {\n+    6|       |    major: usize,\n+    7|      1|    minor: usize,\n+    8|       |    patch: usize,\n+    9|       |}\n+   10|       |\n+   11|       |impl Version {\n+   12|       |    pub fn new(major: usize, minor: usize, patch: usize) -> Self {\n+   13|      2|        Self {\n+   14|      2|            major,\n+   15|      2|            minor,\n+   16|      2|            patch,\n+   17|      2|        }\n+   18|      2|    }\n+   19|       |}\n+   20|       |\n+   21|      1|fn main() {\n+   22|      1|    let version_3_2_1 = Version::new(3, 2, 1);\n+   23|      1|    let version_3_3_0 = Version::new(3, 3, 0);\n+   24|      1|\n+   25|      1|    println!(\"{:?} < {:?} = {}\", version_3_2_1, version_3_3_0, version_3_2_1 < version_3_3_0);\n+   26|      1|}\n+   27|       |\n+   28|       |/*\n+   29|       |\n+   30|       |This test verifies a bug was fixed that otherwise generated this error:\n+   31|       |\n+   32|       |thread 'rustc' panicked at 'No counters provided the source_hash for function:\n+   33|       |    Instance {\n+   34|       |        def: Item(WithOptConstParam {\n+   35|       |            did: DefId(0:101 ~ autocfg[c44a]::version::{impl#2}::partial_cmp),\n+   36|       |            const_param_did: None\n+   37|       |        }),\n+   38|       |        substs: []\n+   39|       |    }'\n+   40|       |The `PartialOrd` derived by `Version` happened to generate a MIR that generated coverage\n+   41|       |without a code region associated with any `Counter`. Code regions were associated with at least\n+   42|       |one expression, which is allowed, but the `function_source_hash` was only passed to the codegen\n+   43|       |(coverage mapgen) phase from a `Counter`s code region. A new method was added to pass the\n+   44|       |`function_source_hash` without a code region, if necessary.\n+   45|       |\n+   46|       |*/\n+   47|       |\n+   48|       |// FIXME(richkadel): It may be worth investigating why the coverage report for this test produces\n+   49|       |// the following results:\n+   50|       |\n+   51|       |/*\n+   52|       |\n+   53|       |1. Why are their two counts below different characters (first and last) of `PartialOrd`, on line 17?\n+   54|       |\n+   55|       |2. Line 17 is counted twice, but the `::lt` instance shows a line count of 1? Is there a missing\n+   56|       |   line count with a different instance? Or was it really only called once?\n+   57|       |\n+   58|       |3. Line 20 shows another line count (of 1) for a line within a `struct` declaration (on only one of\n+   59|       |   its 3 fields). I doubt the specific field (`minor`) is relevant, but rather I suspect there's a\n+   60|       |   problem computing the file position here, for some reason.\n+   61|       |\n+   62|       |<snip>\n+   63|       |   16|       |\n+   64|       |   17|      2|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+   65|       |                                                    ^1       ^1\n+   66|       |------------------\n+   67|       ||Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::gt\n+   68|       |------------------\n+   69|       ||Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::le\n+   70|       |------------------\n+   71|       ||Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::ge\n+   72|       |------------------\n+   73|       ||<partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::lt:\n+   74|       ||  17|      1|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+   75|       |------------------\n+   76|       |   18|       |pub struct Version {\n+   77|       |   19|       |    major: usize,\n+   78|       |   20|      1|    minor: usize,\n+   79|       |   21|       |    patch: usize,\n+   80|       |   22|       |}\n+   81|       |   23|       |\n+   82|       |   24|       |impl Version {\n+   83|       |   25|       |    pub fn new(major: usize, minor: usize, patch: usize) -> Self {\n+   84|       |   26|      2|        Version {\n+   85|       |   27|      2|            major,\n+   86|       |   28|      2|            minor,\n+   87|       |   29|      2|            patch,\n+   88|       |   30|      2|        }\n+   89|       |   31|      2|    }\n+   90|       |   32|       |}\n+   91|       |   33|       |\n+   92|       |   34|      1|fn main() {\n+   93|       |   35|      1|    let version_3_2_1 = Version::new(3, 2, 1);\n+   94|       |   36|      1|    let version_3_3_0 = Version::new(3, 3, 0);\n+   95|       |   37|      1|\n+   96|       |   38|      1|    println!(\"{:?} < {:?} = {}\", version_3_2_1, version_3_3_0, version_3_2_1 < version\n+   97|       |_3_3_0);\n+   98|       |   39|      1|}\n+   99|       |*/\n+"}, {"sha": "064930dd75c93a4f4b1e83c228f155c38db36d3d", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.simple_loop.txt", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.simple_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.simple_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.simple_loop.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -16,6 +16,7 @@\n    16|      1|            10\n    17|      1|        ;\n    18|      1|    }\n+                   ^0\n    19|       |\n    20|       |    loop\n    21|       |    {\n@@ -31,6 +32,6 @@\n    31|     10|        -=\n    32|     10|        1\n    33|       |        ;\n-   34|       |    }\n+   34|      1|    }\n    35|      1|}\n "}, {"sha": "1f7e71d3eb0e7bad42393553b43b6acac9b50222", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.simple_match.txt", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.simple_match.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.simple_match.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.simple_match.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -10,22 +10,24 @@\n    10|      1|    if is_true {\n    11|      1|        countdown = 0;\n    12|      1|    }\n+                   ^0\n    13|       |\n-   14|      3|    for\n-   15|      3|        _\n+   14|       |    for\n+   15|      2|        _\n    16|       |    in\n-   17|      1|        0..2\n+   17|      3|        0..2\n    18|       |    {\n    19|       |        let z\n    20|       |        ;\n    21|       |        match\n    22|      2|            countdown\n-   23|      2|        {\n-   24|      2|            x\n-   25|      2|            if\n+   23|       |        {\n+   24|      1|            x\n+   25|       |            if\n    26|      2|                x\n    27|      2|                    <\n    28|      2|                1\n+                               ^1\n    29|       |            =>\n    30|      1|            {\n    31|      1|                z = countdown\n@@ -39,6 +41,6 @@\n    39|       |            =>\n    40|      1|            {}\n    41|       |        }\n-   42|       |    }\n+   42|      3|    }\n    43|      1|}\n "}, {"sha": "e02eac03a6b1574c6c10534081581d67e120d0e0", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.tight_infinite_loop.txt", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.tight_infinite_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.tight_infinite_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.tight_infinite_loop.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,6 @@\n+    1|       |fn main() {\n+    2|      1|    if false {\n+    3|       |        loop {}\n+    4|       |    }\n+    5|      1|}\n+"}, {"sha": "05d72d0de46e60ec6222cc47b3da9876ce85c30a", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.try_error_result.txt", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.try_error_result.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.try_error_result.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.try_error_result.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -6,31 +6,32 @@\n     6|      1|        Err(())\n     7|       |    } else {\n     8|      5|        Ok(())\n-    9|       |    }\n+    9|      1|    }\n    10|      6|}\n    11|       |\n    12|       |fn main() -> Result<(),()> {\n    13|      1|    let mut\n    14|      1|        countdown = 10\n    15|       |    ;\n-   16|      6|    for\n+   16|       |    for\n    17|      6|        _\n    18|       |    in\n-   19|      1|        0..10\n+   19|      6|        0..10\n    20|       |    {\n    21|      6|        countdown\n    22|      6|            -= 1\n-   23|       |        ;\n-   24|       |        if\n+   23|      6|        ;\n+   24|      6|        if\n    25|      6|            countdown < 5\n    26|       |        {\n    27|      1|            call(/*return_error=*/ true)?;\n    28|       |        }\n    29|       |        else\n    30|       |        {\n    31|      5|            call(/*return_error=*/ false)?;\n-   32|       |        }\n-   33|       |    }\n+                                                       ^0\n+   32|      5|        }\n+   33|      6|    }\n    34|      0|    Ok(())\n-   35|      1|}\n+   35|      2|}\n "}, {"sha": "e0efe75043d4a7229217c5e75bfff06268eec721", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.various_conditions.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.various_conditions.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.various_conditions.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.various_conditions.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -65,5 +65,5 @@\n    64|       |    } else {\n    65|      0|        return;\n    66|       |    };\n-   67|      1|}\n+   67|      2|}\n "}, {"sha": "194325b6b9ecaac6c23117102cd38678ccecc704", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.while.txt", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.while.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.while.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.while.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,6 @@\n+    1|       |fn main() {\n+    2|      1|    let num = 9;\n+    3|      1|    while num >= 10 {\n+    4|      0|    }\n+    5|      1|}\n+"}, {"sha": "2e0c4022bedb8b1a1b76d9768cf0642097a814ce", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.while_early_return.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.while_early_return.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.while_early_return.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.while_early_return.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -3,7 +3,7 @@\n     3|       |\n     4|       |fn main() -> Result<(),u8> {\n     5|      1|    let mut countdown = 10;\n-    6|      7|    while\n+    6|       |    while\n     7|      7|        countdown\n     8|      7|            >\n     9|      7|        0\n@@ -24,7 +24,7 @@\n    24|       |                else\n    25|       |                {\n    26|      1|                    Err(1)\n-   27|       |                }\n+   27|      0|                }\n    28|       |                ;\n    29|       |        }\n    30|      6|        countdown\n@@ -33,7 +33,7 @@\n    33|       |        ;\n    34|       |    }\n    35|      0|    Ok(())\n-   36|      1|}\n+   36|      2|}\n    37|       |\n    38|       |// ISSUE(77553): Originally, this test had `Err(1)` on line 22 (instead of `Ok(())`) and\n    39|       |// `std::process::exit(2)` on line 26 (instead of `Err(1)`); and this worked as expected on Linux"}, {"sha": "3eb07757c0da5b396c4d897b5903711383b57333", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.closure.txt", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.closure.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.closure.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.closure.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,95 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/closure.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/closure \n+Counter in file 0 20:21 -> 20:38, #1\n+Counter in file 0 21:20 -> 21:28, (#1 + 0)\n+Counter in file 0 21:29 -> 23:18, #2\n+Counter in file 0 23:18 -> 23:19, #3\n+Counter in file 0 24:17 -> 25:14, #4\n+Counter in file 0 3:11 -> 18:13, #1\n+Counter in file 0 25:14 -> 33:9, (#1 + 0)\n+Counter in file 0 40:6 -> 60:13, (#1 + 0)\n+Counter in file 0 67:14 -> 75:9, (#1 + 0)\n+Counter in file 0 82:6 -> 93:2, (#1 + 0)\n+Counter in file 0 77:13 -> 77:30, #1\n+Counter in file 0 78:12 -> 78:20, (#1 + 0)\n+Counter in file 0 78:21 -> 80:10, #2\n+Counter in file 0 80:10 -> 80:11, #3\n+Counter in file 0 81:9 -> 82:6, #4\n+Counter in file 0 62:21 -> 62:38, #1\n+Counter in file 0 63:20 -> 63:28, (#1 + 0)\n+Counter in file 0 63:29 -> 65:18, #2\n+Counter in file 0 65:18 -> 65:19, #3\n+Counter in file 0 66:17 -> 67:14, #4\n+Counter in file 0 35:13 -> 35:30, #1\n+Counter in file 0 36:12 -> 36:20, (#1 + 0)\n+Counter in file 0 36:21 -> 38:10, #2\n+Counter in file 0 38:10 -> 38:11, #3\n+Counter in file 0 39:9 -> 40:6, #4\n+Emitting segments for file: ../coverage/closure.rs\n+Combined regions:\n+  3:11 -> 18:13 (count=1)\n+  20:21 -> 20:38 (count=0)\n+  21:20 -> 21:28 (count=0)\n+  21:29 -> 23:18 (count=0)\n+  23:18 -> 23:19 (count=0)\n+  24:17 -> 25:14 (count=0)\n+  25:14 -> 33:9 (count=1)\n+  35:13 -> 35:30 (count=0)\n+  36:12 -> 36:20 (count=0)\n+  36:21 -> 38:10 (count=0)\n+  38:10 -> 38:11 (count=0)\n+  39:9 -> 40:6 (count=0)\n+  40:6 -> 60:13 (count=1)\n+  62:21 -> 62:38 (count=1)\n+  63:20 -> 63:28 (count=1)\n+  63:29 -> 65:18 (count=0)\n+  65:18 -> 65:19 (count=1)\n+  66:17 -> 67:14 (count=1)\n+  67:14 -> 75:9 (count=1)\n+  77:13 -> 77:30 (count=1)\n+  78:12 -> 78:20 (count=1)\n+  78:21 -> 80:10 (count=0)\n+  80:10 -> 80:11 (count=1)\n+  81:9 -> 82:6 (count=1)\n+  82:6 -> 93:2 (count=1)\n+Segment at 3:11 (count = 1), RegionEntry\n+Segment at 18:13 (count = 0), Skipped\n+Segment at 20:21 (count = 0), RegionEntry\n+Segment at 20:38 (count = 0), Skipped\n+Segment at 21:20 (count = 0), RegionEntry\n+Segment at 21:28 (count = 0), Skipped\n+Segment at 21:29 (count = 0), RegionEntry\n+Segment at 23:18 (count = 0), RegionEntry\n+Segment at 23:19 (count = 0), Skipped\n+Segment at 24:17 (count = 0), RegionEntry\n+Segment at 25:14 (count = 1), RegionEntry\n+Segment at 33:9 (count = 0), Skipped\n+Segment at 35:13 (count = 0), RegionEntry\n+Segment at 35:30 (count = 0), Skipped\n+Segment at 36:12 (count = 0), RegionEntry\n+Segment at 36:20 (count = 0), Skipped\n+Segment at 36:21 (count = 0), RegionEntry\n+Segment at 38:10 (count = 0), RegionEntry\n+Segment at 38:11 (count = 0), Skipped\n+Segment at 39:9 (count = 0), RegionEntry\n+Segment at 40:6 (count = 1), RegionEntry\n+Segment at 60:13 (count = 0), Skipped\n+Segment at 62:21 (count = 1), RegionEntry\n+Segment at 62:38 (count = 0), Skipped\n+Segment at 63:20 (count = 1), RegionEntry\n+Segment at 63:28 (count = 0), Skipped\n+Segment at 63:29 (count = 0), RegionEntry\n+Segment at 65:18 (count = 1), RegionEntry\n+Segment at 65:19 (count = 0), Skipped\n+Segment at 66:17 (count = 1), RegionEntry\n+Segment at 67:14 (count = 1), RegionEntry\n+Segment at 75:9 (count = 0), Skipped\n+Segment at 77:13 (count = 1), RegionEntry\n+Segment at 77:30 (count = 0), Skipped\n+Segment at 78:12 (count = 1), RegionEntry\n+Segment at 78:20 (count = 0), Skipped\n+Segment at 78:21 (count = 0), RegionEntry\n+Segment at 80:10 (count = 1), RegionEntry\n+Segment at 80:11 (count = 0), Skipped\n+Segment at 81:9 (count = 1), RegionEntry\n+Segment at 82:6 (count = 1), RegionEntry\n+Segment at 93:2 (count = 0), Skipped"}, {"sha": "447c3c895623068beb221dab1c5c7f9ccdcefd87", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.drop_trait.txt", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.drop_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.drop_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.drop_trait.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,24 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/drop_trait.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/drop_trait \n+Counter in file 0 9:24 -> 11:6, #1\n+Counter in file 0 15:9 -> 17:42, #1\n+Counter in file 0 19:8 -> 19:12, (#1 + 0)\n+Counter in file 0 20:9 -> 21:22, #2\n+Counter in file 0 27:1 -> 27:2, #4\n+Counter in file 0 27:1 -> 27:2, (#2 + 0)\n+Emitting segments for file: ../coverage/drop_trait.rs\n+Combined regions:\n+  9:24 -> 11:6 (count=2)\n+  15:9 -> 17:42 (count=1)\n+  19:8 -> 19:12 (count=1)\n+  20:9 -> 21:22 (count=1)\n+  27:1 -> 27:2 (count=2)\n+Segment at 9:24 (count = 2), RegionEntry\n+Segment at 11:6 (count = 0), Skipped\n+Segment at 15:9 (count = 1), RegionEntry\n+Segment at 17:42 (count = 0), Skipped\n+Segment at 19:8 (count = 1), RegionEntry\n+Segment at 19:12 (count = 0), Skipped\n+Segment at 20:9 (count = 1), RegionEntry\n+Segment at 21:22 (count = 0), Skipped\n+Segment at 27:1 (count = 2), RegionEntry\n+Segment at 27:2 (count = 0), Skipped"}, {"sha": "5843b9175883ff14a09d9d2e5991900da86ee905", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.generics.txt", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.generics.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.generics.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.generics.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,50 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/generics.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/generics \n+Counter in file 0 17:24 -> 19:6, #1\n+Counter in file 0 17:24 -> 19:6, #1\n+Counter in file 0 23:9 -> 28:28, #1\n+Counter in file 0 30:8 -> 30:12, (#1 + 0)\n+Counter in file 0 31:9 -> 32:22, #2\n+Counter in file 0 38:1 -> 38:2, #4\n+Counter in file 0 38:1 -> 38:2, (#2 + 0)\n+Counter in file 0 10:49 -> 12:6, #1\n+Counter in file 0 10:49 -> 12:6, #1\n+Emitting segments for file: ../coverage/generics.rs\n+Combined regions:\n+  10:49 -> 12:6 (count=3)\n+  17:24 -> 19:6 (count=2)\n+  23:9 -> 28:28 (count=1)\n+  30:8 -> 30:12 (count=1)\n+  31:9 -> 32:22 (count=1)\n+  38:1 -> 38:2 (count=2)\n+Segment at 10:49 (count = 3), RegionEntry\n+Segment at 12:6 (count = 0), Skipped\n+Segment at 17:24 (count = 2), RegionEntry\n+Segment at 19:6 (count = 0), Skipped\n+Segment at 23:9 (count = 1), RegionEntry\n+Segment at 28:28 (count = 0), Skipped\n+Segment at 30:8 (count = 1), RegionEntry\n+Segment at 30:12 (count = 0), Skipped\n+Segment at 31:9 (count = 1), RegionEntry\n+Segment at 32:22 (count = 0), Skipped\n+Segment at 38:1 (count = 2), RegionEntry\n+Segment at 38:2 (count = 0), Skipped\n+Emitting segments for function: _RNvMCs4fqI2P2rA04_8genericsINtB2_8FireworkdE12set_strengthB2_\n+Combined regions:\n+  10:49 -> 12:6 (count=2)\n+Segment at 10:49 (count = 2), RegionEntry\n+Segment at 12:6 (count = 0), Skipped\n+Emitting segments for function: _RNvMCs4fqI2P2rA04_8genericsINtB2_8FireworklE12set_strengthB2_\n+Combined regions:\n+  10:49 -> 12:6 (count=1)\n+Segment at 10:49 (count = 1), RegionEntry\n+Segment at 12:6 (count = 0), Skipped\n+Emitting segments for function: _RNvXs_Cs4fqI2P2rA04_8genericsINtB4_8FireworklENtNtNtCs7f2nZg1zwMz_4core3ops4drop4Drop4dropB4_\n+Combined regions:\n+  17:24 -> 19:6 (count=1)\n+Segment at 17:24 (count = 1), RegionEntry\n+Segment at 19:6 (count = 0), Skipped\n+Emitting segments for function: _RNvXs_Cs4fqI2P2rA04_8genericsINtB4_8FireworkdENtNtNtCs7f2nZg1zwMz_4core3ops4drop4Drop4dropB4_\n+Combined regions:\n+  17:24 -> 19:6 (count=1)\n+Segment at 17:24 (count = 1), RegionEntry\n+Segment at 19:6 (count = 0), Skipped"}, {"sha": "2f063de5a39597a0b216de159e50b7c7b7634844", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.if.txt", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.if.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.if.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.if.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,22 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/if.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/if \n+Counter in file 0 8:5 -> 18:10, #1\n+Counter in file 0 21:9 -> 21:16, (#1 + 0)\n+Counter in file 0 22:5 -> 27:6, #2\n+Counter in file 0 27:6 -> 27:7, #3\n+Counter in file 0 28:1 -> 28:2, #4\n+Emitting segments for file: ../coverage/if.rs\n+Combined regions:\n+  8:5 -> 18:10 (count=1)\n+  21:9 -> 21:16 (count=1)\n+  22:5 -> 27:6 (count=1)\n+  27:6 -> 27:7 (count=0)\n+  28:1 -> 28:2 (count=1)\n+Segment at 8:5 (count = 1), RegionEntry\n+Segment at 18:10 (count = 0), Skipped\n+Segment at 21:9 (count = 1), RegionEntry\n+Segment at 21:16 (count = 0), Skipped\n+Segment at 22:5 (count = 1), RegionEntry\n+Segment at 27:6 (count = 0), RegionEntry\n+Segment at 27:7 (count = 0), Skipped\n+Segment at 28:1 (count = 1), RegionEntry\n+Segment at 28:2 (count = 0), Skipped"}, {"sha": "660e85f91f52bcdf59fc2a6dd8da9d85791d32c3", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.if_else.txt", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.if_else.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.if_else.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.if_else.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,38 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/if_else.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/if_else \n+Counter in file 0 7:9 -> 11:16, #1\n+Counter in file 0 12:5 -> 17:6, #2\n+Counter in file 0 20:9 -> 22:16, #3\n+Counter in file 0 23:6 -> 23:7, (#2 + 0)\n+Counter in file 0 26:9 -> 26:16, #4\n+Counter in file 0 27:5 -> 32:6, #5\n+Counter in file 0 34:5 -> 39:6, #6\n+Counter in file 0 39:6 -> 39:7, (#5 + 0)\n+Counter in file 0 40:1 -> 40:2, #7\n+Emitting segments for file: ../coverage/if_else.rs\n+Combined regions:\n+  7:9 -> 11:16 (count=1)\n+  12:5 -> 17:6 (count=1)\n+  20:9 -> 22:16 (count=0)\n+  23:6 -> 23:7 (count=1)\n+  26:9 -> 26:16 (count=1)\n+  27:5 -> 32:6 (count=1)\n+  34:5 -> 39:6 (count=0)\n+  39:6 -> 39:7 (count=1)\n+  40:1 -> 40:2 (count=1)\n+Segment at 7:9 (count = 1), RegionEntry\n+Segment at 11:16 (count = 0), Skipped\n+Segment at 12:5 (count = 1), RegionEntry\n+Segment at 17:6 (count = 0), Skipped\n+Segment at 20:9 (count = 0), RegionEntry\n+Segment at 22:16 (count = 0), Skipped\n+Segment at 23:6 (count = 1), RegionEntry\n+Segment at 23:7 (count = 0), Skipped\n+Segment at 26:9 (count = 1), RegionEntry\n+Segment at 26:16 (count = 0), Skipped\n+Segment at 27:5 (count = 1), RegionEntry\n+Segment at 32:6 (count = 0), Skipped\n+Segment at 34:5 (count = 0), RegionEntry\n+Segment at 39:6 (count = 1), RegionEntry\n+Segment at 39:7 (count = 0), Skipped\n+Segment at 40:1 (count = 1), RegionEntry\n+Segment at 40:2 (count = 0), Skipped"}, {"sha": "fb863c73a63664a6c7251f4f7805d4600ed63ed0", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.inner_items.txt", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.inner_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.inner_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.inner_items.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,61 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/inner_items.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/inner_items \n+Counter in file 0 19:13 -> 19:18, #1\n+Counter in file 0 20:13 -> 20:14, #2\n+Counter in file 0 20:17 -> 20:22, (#1 + 0)\n+Counter in file 0 21:9 -> 22:6, (#2 + 0)\n+Counter in file 0 7:9 -> 9:26, #1\n+Counter in file 0 10:8 -> 10:15, (#1 + 0)\n+Counter in file 0 10:16 -> 12:6, #2\n+Counter in file 0 12:6 -> 12:7, #3\n+Counter in file 0 48:8 -> 48:15, #4\n+Counter in file 0 48:16 -> 50:6, #5\n+Counter in file 0 50:6 -> 50:7, #6\n+Counter in file 0 52:9 -> 57:2, #7\n+Counter in file 0 33:42 -> 36:10, #1\n+Counter in file 0 41:37 -> 41:41, #1\n+Counter in file 0 42:13 -> 43:10, #2\n+Emitting segments for file: ../coverage/inner_items.rs\n+Combined regions:\n+  7:9 -> 9:26 (count=1)\n+  10:8 -> 10:15 (count=1)\n+  10:16 -> 12:6 (count=1)\n+  12:6 -> 12:7 (count=0)\n+  19:13 -> 19:18 (count=3)\n+  20:13 -> 20:14 (count=3)\n+  20:17 -> 20:22 (count=3)\n+  21:9 -> 22:6 (count=3)\n+  33:42 -> 36:10 (count=1)\n+  41:37 -> 41:41 (count=1)\n+  42:13 -> 43:10 (count=1)\n+  48:8 -> 48:15 (count=1)\n+  48:16 -> 50:6 (count=1)\n+  50:6 -> 50:7 (count=0)\n+  52:9 -> 57:2 (count=1)\n+Segment at 7:9 (count = 1), RegionEntry\n+Segment at 9:26 (count = 0), Skipped\n+Segment at 10:8 (count = 1), RegionEntry\n+Segment at 10:15 (count = 0), Skipped\n+Segment at 10:16 (count = 1), RegionEntry\n+Segment at 12:6 (count = 0), RegionEntry\n+Segment at 12:7 (count = 0), Skipped\n+Segment at 19:13 (count = 3), RegionEntry\n+Segment at 19:18 (count = 0), Skipped\n+Segment at 20:13 (count = 3), RegionEntry\n+Segment at 20:14 (count = 0), Skipped\n+Segment at 20:17 (count = 3), RegionEntry\n+Segment at 20:22 (count = 0), Skipped\n+Segment at 21:9 (count = 3), RegionEntry\n+Segment at 22:6 (count = 0), Skipped\n+Segment at 33:42 (count = 1), RegionEntry\n+Segment at 36:10 (count = 0), Skipped\n+Segment at 41:37 (count = 1), RegionEntry\n+Segment at 41:41 (count = 0), Skipped\n+Segment at 42:13 (count = 1), RegionEntry\n+Segment at 43:10 (count = 0), Skipped\n+Segment at 48:8 (count = 1), RegionEntry\n+Segment at 48:15 (count = 0), Skipped\n+Segment at 48:16 (count = 1), RegionEntry\n+Segment at 50:6 (count = 0), RegionEntry\n+Segment at 50:7 (count = 0), Skipped\n+Segment at 52:9 (count = 1), RegionEntry\n+Segment at 57:2 (count = 0), Skipped"}, {"sha": "dd93c3a9392c935b4b41ca0e8839f017556af092", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.lazy_boolean.txt", "status": "added", "additions": 138, "deletions": 0, "changes": 138, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.lazy_boolean.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.lazy_boolean.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.lazy_boolean.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,138 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/lazy_boolean.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/lazy_boolean \n+Counter in file 0 7:9 -> 9:42, #1\n+Counter in file 0 10:8 -> 10:15, (#1 + 0)\n+Counter in file 0 10:16 -> 14:6, #2\n+Counter in file 0 14:6 -> 14:7, #3\n+Counter in file 0 16:9 -> 16:17, #4\n+Counter in file 0 18:13 -> 18:18, #5\n+Counter in file 0 20:13 -> 20:18, #6\n+Counter in file 0 20:18 -> 20:19, #7\n+Counter in file 0 20:18 -> 20:19, #8\n+Counter in file 0 23:9 -> 23:17, #9\n+Counter in file 0 25:13 -> 25:18, (#4 + 0)\n+Counter in file 0 27:13 -> 27:18, #10\n+Counter in file 0 27:18 -> 27:19, #11\n+Counter in file 0 27:18 -> 27:19, #12\n+Counter in file 0 29:9 -> 29:17, #13\n+Counter in file 0 29:20 -> 29:25, (#9 + 0)\n+Counter in file 0 29:29 -> 29:34, #14\n+Counter in file 0 29:34 -> 29:35, #15\n+Counter in file 0 29:34 -> 29:35, #16\n+Counter in file 0 30:9 -> 30:17, #17\n+Counter in file 0 30:20 -> 30:25, (#13 + 0)\n+Counter in file 0 30:29 -> 30:34, #18\n+Counter in file 0 30:34 -> 30:35, #19\n+Counter in file 0 30:34 -> 30:35, #20\n+Counter in file 0 33:9 -> 34:16, (#17 + 0)\n+Counter in file 0 35:5 -> 38:6, #21\n+Counter in file 0 38:6 -> 38:7, #22\n+Counter in file 0 41:9 -> 41:16, #23\n+Counter in file 0 42:5 -> 45:6, #24\n+Counter in file 0 47:5 -> 50:6, #25\n+Counter in file 0 50:6 -> 50:7, (#24 + 0)\n+Counter in file 0 52:8 -> 52:16, #26\n+Counter in file 0 52:17 -> 54:6, #27\n+Counter in file 0 54:6 -> 54:7, #28\n+Counter in file 0 56:8 -> 56:15, #29\n+Counter in file 0 56:16 -> 58:6, #30\n+Counter in file 0 58:12 -> 60:6, #31\n+Counter in file 0 60:6 -> 60:7, (#30 + 0)\n+Counter in file 0 61:1 -> 61:2, #32\n+Emitting segments for file: ../coverage/lazy_boolean.rs\n+Combined regions:\n+  7:9 -> 9:42 (count=1)\n+  10:8 -> 10:15 (count=1)\n+  10:16 -> 14:6 (count=1)\n+  14:6 -> 14:7 (count=0)\n+  16:9 -> 16:17 (count=1)\n+  18:13 -> 18:18 (count=1)\n+  20:13 -> 20:18 (count=0)\n+  20:18 -> 20:19 (count=1)\n+  23:9 -> 23:17 (count=1)\n+  25:13 -> 25:18 (count=1)\n+  27:13 -> 27:18 (count=1)\n+  27:18 -> 27:19 (count=1)\n+  29:9 -> 29:17 (count=1)\n+  29:20 -> 29:25 (count=1)\n+  29:29 -> 29:34 (count=1)\n+  29:34 -> 29:35 (count=1)\n+  30:9 -> 30:17 (count=1)\n+  30:20 -> 30:25 (count=1)\n+  30:29 -> 30:34 (count=0)\n+  30:34 -> 30:35 (count=1)\n+  33:9 -> 34:16 (count=1)\n+  35:5 -> 38:6 (count=0)\n+  38:6 -> 38:7 (count=1)\n+  41:9 -> 41:16 (count=1)\n+  42:5 -> 45:6 (count=1)\n+  47:5 -> 50:6 (count=0)\n+  50:6 -> 50:7 (count=1)\n+  52:8 -> 52:16 (count=1)\n+  52:17 -> 54:6 (count=0)\n+  54:6 -> 54:7 (count=1)\n+  56:8 -> 56:15 (count=1)\n+  56:16 -> 58:6 (count=1)\n+  58:12 -> 60:6 (count=0)\n+  60:6 -> 60:7 (count=1)\n+  61:1 -> 61:2 (count=1)\n+Segment at 7:9 (count = 1), RegionEntry\n+Segment at 9:42 (count = 0), Skipped\n+Segment at 10:8 (count = 1), RegionEntry\n+Segment at 10:15 (count = 0), Skipped\n+Segment at 10:16 (count = 1), RegionEntry\n+Segment at 14:6 (count = 0), RegionEntry\n+Segment at 14:7 (count = 0), Skipped\n+Segment at 16:9 (count = 1), RegionEntry\n+Segment at 16:17 (count = 0), Skipped\n+Segment at 18:13 (count = 1), RegionEntry\n+Segment at 18:18 (count = 0), Skipped\n+Segment at 20:13 (count = 0), RegionEntry\n+Segment at 20:18 (count = 1), RegionEntry\n+Segment at 20:19 (count = 0), Skipped\n+Segment at 23:9 (count = 1), RegionEntry\n+Segment at 23:17 (count = 0), Skipped\n+Segment at 25:13 (count = 1), RegionEntry\n+Segment at 25:18 (count = 0), Skipped\n+Segment at 27:13 (count = 1), RegionEntry\n+Segment at 27:18 (count = 1), RegionEntry\n+Segment at 27:19 (count = 0), Skipped\n+Segment at 29:9 (count = 1), RegionEntry\n+Segment at 29:17 (count = 0), Skipped\n+Segment at 29:20 (count = 1), RegionEntry\n+Segment at 29:25 (count = 0), Skipped\n+Segment at 29:29 (count = 1), RegionEntry\n+Segment at 29:34 (count = 1), RegionEntry\n+Segment at 29:35 (count = 0), Skipped\n+Segment at 30:9 (count = 1), RegionEntry\n+Segment at 30:17 (count = 0), Skipped\n+Segment at 30:20 (count = 1), RegionEntry\n+Segment at 30:25 (count = 0), Skipped\n+Segment at 30:29 (count = 0), RegionEntry\n+Segment at 30:34 (count = 1), RegionEntry\n+Segment at 30:35 (count = 0), Skipped\n+Segment at 33:9 (count = 1), RegionEntry\n+Segment at 34:16 (count = 0), Skipped\n+Segment at 35:5 (count = 0), RegionEntry\n+Segment at 38:6 (count = 1), RegionEntry\n+Segment at 38:7 (count = 0), Skipped\n+Segment at 41:9 (count = 1), RegionEntry\n+Segment at 41:16 (count = 0), Skipped\n+Segment at 42:5 (count = 1), RegionEntry\n+Segment at 45:6 (count = 0), Skipped\n+Segment at 47:5 (count = 0), RegionEntry\n+Segment at 50:6 (count = 1), RegionEntry\n+Segment at 50:7 (count = 0), Skipped\n+Segment at 52:8 (count = 1), RegionEntry\n+Segment at 52:16 (count = 0), Skipped\n+Segment at 52:17 (count = 0), RegionEntry\n+Segment at 54:6 (count = 1), RegionEntry\n+Segment at 54:7 (count = 0), Skipped\n+Segment at 56:8 (count = 1), RegionEntry\n+Segment at 56:15 (count = 0), Skipped\n+Segment at 56:16 (count = 1), RegionEntry\n+Segment at 58:6 (count = 0), Skipped\n+Segment at 58:12 (count = 0), RegionEntry\n+Segment at 60:6 (count = 1), RegionEntry\n+Segment at 60:7 (count = 0), Skipped\n+Segment at 61:1 (count = 1), RegionEntry\n+Segment at 61:2 (count = 0), Skipped"}, {"sha": "df16c54617c430f38bfcf03a0633654bff713a84", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.loop_break_value.txt", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.loop_break_value.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.loop_break_value.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.loop_break_value.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,7 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/loop_break_value.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/loop_break_value \n+Counter in file 0 3:11 -> 13:2, #1\n+Emitting segments for file: ../coverage/loop_break_value.rs\n+Combined regions:\n+  3:11 -> 13:2 (count=1)\n+Segment at 3:11 (count = 1), RegionEntry\n+Segment at 13:2 (count = 0), Skipped"}, {"sha": "d6e4403268a1d8b373b1323f8cea9e21f0b0fc7f", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.loops_and_branches.txt", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.loops_and_branches.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.loops_and_branches.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.loops_and_branches.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,39 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/loops_and_branches.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/loops_and_branches \n+Counter in file 0 10:12 -> 10:16, #1\n+Counter in file 0 11:16 -> 11:21, #2\n+Counter in file 0 14:14 -> 14:15, #6\n+Counter in file 0 15:13 -> 15:31, #7\n+Counter in file 0 15:31 -> 15:32, #8\n+Counter in file 0 17:10 -> 17:11, #10\n+Counter in file 0 18:9 -> 18:15, #11\n+Counter in file 0 19:5 -> 19:6, #12\n+Counter in file 0 19:5 -> 19:6, (#8 + 0)\n+Counter in file 0 22:11 -> 25:2, #1\n+Emitting segments for file: ../coverage/loops_and_branches.rs\n+Combined regions:\n+  10:12 -> 10:16 (count=1)\n+  11:16 -> 11:21 (count=1)\n+  14:14 -> 14:15 (count=1)\n+  15:13 -> 15:31 (count=1)\n+  15:31 -> 15:32 (count=0)\n+  17:10 -> 17:11 (count=1)\n+  18:9 -> 18:15 (count=1)\n+  19:5 -> 19:6 (count=1)\n+  22:11 -> 25:2 (count=1)\n+Segment at 10:12 (count = 1), RegionEntry\n+Segment at 10:16 (count = 0), Skipped\n+Segment at 11:16 (count = 1), RegionEntry\n+Segment at 11:21 (count = 0), Skipped\n+Segment at 14:14 (count = 1), RegionEntry\n+Segment at 14:15 (count = 0), Skipped\n+Segment at 15:13 (count = 1), RegionEntry\n+Segment at 15:31 (count = 0), RegionEntry\n+Segment at 15:32 (count = 0), Skipped\n+Segment at 17:10 (count = 1), RegionEntry\n+Segment at 17:11 (count = 0), Skipped\n+Segment at 18:9 (count = 1), RegionEntry\n+Segment at 18:15 (count = 0), Skipped\n+Segment at 19:5 (count = 1), RegionEntry\n+Segment at 19:6 (count = 0), Skipped\n+Segment at 22:11 (count = 1), RegionEntry\n+Segment at 25:2 (count = 0), Skipped"}, {"sha": "eec4aec79e6b5fb54af5377def233a6f9d67e0e7", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.nested_loops.txt", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.nested_loops.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.nested_loops.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.nested_loops.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,76 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/nested_loops.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/nested_loops \n+Counter in file 0 2:9 -> 3:27, #1\n+Counter in file 0 5:19 -> 5:32, #2\n+Counter in file 0 6:13 -> 7:24, #3\n+Counter in file 0 8:13 -> 8:14, #4\n+Counter in file 0 8:18 -> 8:23, #5\n+Counter in file 0 9:16 -> 9:22, (#4 + 0)\n+Counter in file 0 10:17 -> 10:22, #6\n+Counter in file 0 12:13 -> 12:19, #7\n+Counter in file 0 13:13 -> 13:19, #8\n+Counter in file 0 14:16 -> 14:22, (#8 + 0)\n+Counter in file 0 15:17 -> 16:27, #9\n+Counter in file 0 17:21 -> 17:33, #10\n+Counter in file 0 19:21 -> 21:14, #11\n+Counter in file 0 21:14 -> 21:15, #12\n+Counter in file 0 22:10 -> 22:11, #13\n+Counter in file 0 22:10 -> 22:11, (#3 + 0)\n+Counter in file 0 23:9 -> 23:23, #14\n+Counter in file 0 24:6 -> 24:7, #15\n+Counter in file 0 24:6 -> 24:7, (#1 + 0)\n+Counter in file 0 25:1 -> 25:2, #16\n+Emitting segments for file: ../coverage/nested_loops.rs\n+Combined regions:\n+  2:9 -> 3:27 (count=1)\n+  5:19 -> 5:32 (count=1)\n+  6:13 -> 7:24 (count=1)\n+  8:13 -> 8:14 (count=3)\n+  8:18 -> 8:23 (count=3)\n+  9:16 -> 9:22 (count=3)\n+  10:17 -> 10:22 (count=0)\n+  12:13 -> 12:19 (count=3)\n+  13:13 -> 13:19 (count=3)\n+  14:16 -> 14:22 (count=3)\n+  15:17 -> 16:27 (count=1)\n+  17:21 -> 17:33 (count=1)\n+  19:21 -> 21:14 (count=0)\n+  21:14 -> 21:15 (count=2)\n+  22:10 -> 22:11 (count=3)\n+  23:9 -> 23:23 (count=0)\n+  24:6 -> 24:7 (count=1)\n+  25:1 -> 25:2 (count=1)\n+Segment at 2:9 (count = 1), RegionEntry\n+Segment at 3:27 (count = 0), Skipped\n+Segment at 5:19 (count = 1), RegionEntry\n+Segment at 5:32 (count = 0), Skipped\n+Segment at 6:13 (count = 1), RegionEntry\n+Segment at 7:24 (count = 0), Skipped\n+Segment at 8:13 (count = 3), RegionEntry\n+Segment at 8:14 (count = 0), Skipped\n+Segment at 8:18 (count = 3), RegionEntry\n+Segment at 8:23 (count = 0), Skipped\n+Segment at 9:16 (count = 3), RegionEntry\n+Segment at 9:22 (count = 0), Skipped\n+Segment at 10:17 (count = 0), RegionEntry\n+Segment at 10:22 (count = 0), Skipped\n+Segment at 12:13 (count = 3), RegionEntry\n+Segment at 12:19 (count = 0), Skipped\n+Segment at 13:13 (count = 3), RegionEntry\n+Segment at 13:19 (count = 0), Skipped\n+Segment at 14:16 (count = 3), RegionEntry\n+Segment at 14:22 (count = 0), Skipped\n+Segment at 15:17 (count = 1), RegionEntry\n+Segment at 16:27 (count = 0), Skipped\n+Segment at 17:21 (count = 1), RegionEntry\n+Segment at 17:33 (count = 0), Skipped\n+Segment at 19:21 (count = 0), RegionEntry\n+Segment at 21:14 (count = 2), RegionEntry\n+Segment at 21:15 (count = 0), Skipped\n+Segment at 22:10 (count = 3), RegionEntry\n+Segment at 22:11 (count = 0), Skipped\n+Segment at 23:9 (count = 0), RegionEntry\n+Segment at 23:23 (count = 0), Skipped\n+Segment at 24:6 (count = 1), RegionEntry\n+Segment at 24:7 (count = 0), Skipped\n+Segment at 25:1 (count = 1), RegionEntry\n+Segment at 25:2 (count = 0), Skipped"}, {"sha": "d2a68ab32022d9fac32735e311bfc077b502fb22", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.partial_eq_counter_without_region.txt", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.partial_eq_counter_without_region.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.partial_eq_counter_without_region.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.partial_eq_counter_without_region.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,28 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/partial_eq_counter_without_region.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/partial_eq_counter_without_region \n+Counter in file 0 7:5 -> 7:6, #1\n+Counter in file 0 21:11 -> 26:2, #1\n+Counter in file 0 4:17 -> 4:22, #1\n+Counter in file 0 13:9 -> 18:6, #1\n+Counter in file 0 4:39 -> 4:40, #1\n+Counter in file 0 4:48 -> 4:49, (#1 + 0)\n+Counter in file 0 8:5 -> 8:17, #1\n+Emitting segments for file: ../coverage/partial_eq_counter_without_region.rs\n+Combined regions:\n+  4:17 -> 4:22 (count=2)\n+  4:39 -> 4:40 (count=1)\n+  4:48 -> 4:49 (count=1)\n+  7:5 -> 7:6 (count=1)\n+  13:9 -> 18:6 (count=2)\n+  21:11 -> 26:2 (count=1)\n+Segment at 4:17 (count = 2), RegionEntry\n+Segment at 4:22 (count = 0), Skipped\n+Segment at 4:39 (count = 1), RegionEntry\n+Segment at 4:40 (count = 0), Skipped\n+Segment at 4:48 (count = 1), RegionEntry\n+Segment at 4:49 (count = 0), Skipped\n+Segment at 7:5 (count = 1), RegionEntry\n+Segment at 7:6 (count = 0), Skipped\n+Segment at 13:9 (count = 2), RegionEntry\n+Segment at 18:6 (count = 0), Skipped\n+Segment at 21:11 (count = 1), RegionEntry\n+Segment at 26:2 (count = 0), Skipped"}, {"sha": "d828e40ca3fa66a6323433e1ab12e2f0326fd37d", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.simple_loop.txt", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.simple_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.simple_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.simple_loop.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,38 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/simple_loop.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/simple_loop \n+Counter in file 0 7:9 -> 9:26, #1\n+Counter in file 0 12:9 -> 12:16, (#1 + 0)\n+Counter in file 0 13:5 -> 18:6, #2\n+Counter in file 0 18:6 -> 18:7, #3\n+Counter in file 0 23:13 -> 25:14, #4\n+Counter in file 0 27:13 -> 27:18, #5\n+Counter in file 0 30:9 -> 32:10, #6\n+Counter in file 0 34:6 -> 34:7, #7\n+Counter in file 0 35:1 -> 35:2, (#5 + 0)\n+Emitting segments for file: ../coverage/simple_loop.rs\n+Combined regions:\n+  7:9 -> 9:26 (count=1)\n+  12:9 -> 12:16 (count=1)\n+  13:5 -> 18:6 (count=1)\n+  18:6 -> 18:7 (count=0)\n+  23:13 -> 25:14 (count=11)\n+  27:13 -> 27:18 (count=1)\n+  30:9 -> 32:10 (count=10)\n+  34:6 -> 34:7 (count=1)\n+  35:1 -> 35:2 (count=1)\n+Segment at 7:9 (count = 1), RegionEntry\n+Segment at 9:26 (count = 0), Skipped\n+Segment at 12:9 (count = 1), RegionEntry\n+Segment at 12:16 (count = 0), Skipped\n+Segment at 13:5 (count = 1), RegionEntry\n+Segment at 18:6 (count = 0), RegionEntry\n+Segment at 18:7 (count = 0), Skipped\n+Segment at 23:13 (count = 11), RegionEntry\n+Segment at 25:14 (count = 0), Skipped\n+Segment at 27:13 (count = 1), RegionEntry\n+Segment at 27:18 (count = 0), Skipped\n+Segment at 30:9 (count = 10), RegionEntry\n+Segment at 32:10 (count = 0), Skipped\n+Segment at 34:6 (count = 1), RegionEntry\n+Segment at 34:7 (count = 0), Skipped\n+Segment at 35:1 (count = 1), RegionEntry\n+Segment at 35:2 (count = 0), Skipped"}, {"sha": "e7932e0be047350313c1e9126fb6d6c23f6b62ee", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.simple_match.txt", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.simple_match.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.simple_match.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.simple_match.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,58 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/simple_match.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/simple_match \n+Counter in file 0 7:9 -> 9:26, #1\n+Counter in file 0 10:8 -> 10:15, (#1 + 0)\n+Counter in file 0 10:16 -> 12:6, #2\n+Counter in file 0 12:6 -> 12:7, #3\n+Counter in file 0 15:9 -> 15:10, #4\n+Counter in file 0 17:9 -> 17:13, #5\n+Counter in file 0 22:13 -> 22:22, (#4 + 0)\n+Counter in file 0 24:13 -> 24:14, #6\n+Counter in file 0 26:17 -> 28:18, (#4 + 0)\n+Counter in file 0 28:18 -> 28:19, #7\n+Counter in file 0 30:13 -> 37:14, (#6 + 0)\n+Counter in file 0 40:13 -> 40:15, #8\n+Counter in file 0 42:6 -> 42:7, #9\n+Counter in file 0 42:6 -> 42:7, #10\n+Counter in file 0 43:1 -> 43:2, #11\n+Emitting segments for file: ../coverage/simple_match.rs\n+Combined regions:\n+  7:9 -> 9:26 (count=1)\n+  10:8 -> 10:15 (count=1)\n+  10:16 -> 12:6 (count=1)\n+  12:6 -> 12:7 (count=0)\n+  15:9 -> 15:10 (count=2)\n+  17:9 -> 17:13 (count=3)\n+  22:13 -> 22:22 (count=2)\n+  24:13 -> 24:14 (count=1)\n+  26:17 -> 28:18 (count=2)\n+  28:18 -> 28:19 (count=1)\n+  30:13 -> 37:14 (count=1)\n+  40:13 -> 40:15 (count=1)\n+  42:6 -> 42:7 (count=3)\n+  43:1 -> 43:2 (count=1)\n+Segment at 7:9 (count = 1), RegionEntry\n+Segment at 9:26 (count = 0), Skipped\n+Segment at 10:8 (count = 1), RegionEntry\n+Segment at 10:15 (count = 0), Skipped\n+Segment at 10:16 (count = 1), RegionEntry\n+Segment at 12:6 (count = 0), RegionEntry\n+Segment at 12:7 (count = 0), Skipped\n+Segment at 15:9 (count = 2), RegionEntry\n+Segment at 15:10 (count = 0), Skipped\n+Segment at 17:9 (count = 3), RegionEntry\n+Segment at 17:13 (count = 0), Skipped\n+Segment at 22:13 (count = 2), RegionEntry\n+Segment at 22:22 (count = 0), Skipped\n+Segment at 24:13 (count = 1), RegionEntry\n+Segment at 24:14 (count = 0), Skipped\n+Segment at 26:17 (count = 2), RegionEntry\n+Segment at 28:18 (count = 1), RegionEntry\n+Segment at 28:19 (count = 0), Skipped\n+Segment at 30:13 (count = 1), RegionEntry\n+Segment at 37:14 (count = 0), Skipped\n+Segment at 40:13 (count = 1), RegionEntry\n+Segment at 40:15 (count = 0), Skipped\n+Segment at 42:6 (count = 3), RegionEntry\n+Segment at 42:7 (count = 0), Skipped\n+Segment at 43:1 (count = 1), RegionEntry\n+Segment at 43:2 (count = 0), Skipped"}, {"sha": "a690874e3c00762ed2e5f761194d2bc5e7450205", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.tight_infinite_loop.txt", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.tight_infinite_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.tight_infinite_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.tight_infinite_loop.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,11 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/tight_infinite_loop.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/tight_infinite_loop \n+Counter in file 0 2:8 -> 2:13, #1\n+Counter in file 0 5:1 -> 5:2, #4\n+Emitting segments for file: ../coverage/tight_infinite_loop.rs\n+Combined regions:\n+  2:8 -> 2:13 (count=1)\n+  5:1 -> 5:2 (count=1)\n+Segment at 2:8 (count = 1), RegionEntry\n+Segment at 2:13 (count = 0), Skipped\n+Segment at 5:1 (count = 1), RegionEntry\n+Segment at 5:2 (count = 0), Skipped"}, {"sha": "d510223417aac2e3ad4b3c7fa5da5fcbd0af57fc", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.try_error_result.txt", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.try_error_result.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.try_error_result.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.try_error_result.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,72 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/try_error_result.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/try_error_result \n+Counter in file 0 13:9 -> 14:23, #1\n+Counter in file 0 17:9 -> 17:10, #2\n+Counter in file 0 19:9 -> 19:14, #3\n+Counter in file 0 21:9 -> 25:26, #4\n+Counter in file 0 27:13 -> 27:41, #5\n+Counter in file 0 27:41 -> 27:42, #6\n+Counter in file 0 31:13 -> 31:42, #7\n+Counter in file 0 31:42 -> 31:43, #8\n+Counter in file 0 32:10 -> 32:11, #9\n+Counter in file 0 32:10 -> 32:11, #10\n+Counter in file 0 33:6 -> 33:7, #11\n+Counter in file 0 33:6 -> 33:7, (#1 + 0)\n+Counter in file 0 34:5 -> 34:11, #12\n+Counter in file 0 35:1 -> 35:2, #13\n+Counter in file 0 35:1 -> 35:2, #14\n+Counter in file 0 5:8 -> 5:20, #1\n+Counter in file 0 6:9 -> 6:16, #2\n+Counter in file 0 8:9 -> 8:15, #3\n+Counter in file 0 9:6 -> 9:7, (#2 + 0)\n+Counter in file 0 10:1 -> 10:2, #4\n+Emitting segments for file: ../coverage/try_error_result.rs\n+Combined regions:\n+  5:8 -> 5:20 (count=6)\n+  6:9 -> 6:16 (count=1)\n+  8:9 -> 8:15 (count=5)\n+  9:6 -> 9:7 (count=1)\n+  10:1 -> 10:2 (count=6)\n+  13:9 -> 14:23 (count=1)\n+  17:9 -> 17:10 (count=6)\n+  19:9 -> 19:14 (count=6)\n+  21:9 -> 25:26 (count=6)\n+  27:13 -> 27:41 (count=1)\n+  27:41 -> 27:42 (count=1)\n+  31:13 -> 31:42 (count=5)\n+  31:42 -> 31:43 (count=0)\n+  32:10 -> 32:11 (count=5)\n+  33:6 -> 33:7 (count=6)\n+  34:5 -> 34:11 (count=0)\n+  35:1 -> 35:2 (count=2)\n+Segment at 5:8 (count = 6), RegionEntry\n+Segment at 5:20 (count = 0), Skipped\n+Segment at 6:9 (count = 1), RegionEntry\n+Segment at 6:16 (count = 0), Skipped\n+Segment at 8:9 (count = 5), RegionEntry\n+Segment at 8:15 (count = 0), Skipped\n+Segment at 9:6 (count = 1), RegionEntry\n+Segment at 9:7 (count = 0), Skipped\n+Segment at 10:1 (count = 6), RegionEntry\n+Segment at 10:2 (count = 0), Skipped\n+Segment at 13:9 (count = 1), RegionEntry\n+Segment at 14:23 (count = 0), Skipped\n+Segment at 17:9 (count = 6), RegionEntry\n+Segment at 17:10 (count = 0), Skipped\n+Segment at 19:9 (count = 6), RegionEntry\n+Segment at 19:14 (count = 0), Skipped\n+Segment at 21:9 (count = 6), RegionEntry\n+Segment at 25:26 (count = 0), Skipped\n+Segment at 27:13 (count = 1), RegionEntry\n+Segment at 27:41 (count = 1), RegionEntry\n+Segment at 27:42 (count = 0), Skipped\n+Segment at 31:13 (count = 5), RegionEntry\n+Segment at 31:42 (count = 0), RegionEntry\n+Segment at 31:43 (count = 0), Skipped\n+Segment at 32:10 (count = 5), RegionEntry\n+Segment at 32:11 (count = 0), Skipped\n+Segment at 33:6 (count = 6), RegionEntry\n+Segment at 33:7 (count = 0), Skipped\n+Segment at 34:5 (count = 0), RegionEntry\n+Segment at 34:11 (count = 0), Skipped\n+Segment at 35:1 (count = 2), RegionEntry\n+Segment at 35:2 (count = 0), Skipped"}, {"sha": "0fb135b2cc994eb125315f0d5f325b519f95be05", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.various_conditions.txt", "status": "added", "additions": 240, "deletions": 0, "changes": 240, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.various_conditions.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.various_conditions.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.various_conditions.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,240 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/various_conditions.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/various_conditions \n+Counter in file 0 4:9 -> 4:26, #1\n+Counter in file 0 5:8 -> 5:12, (#1 + 0)\n+Counter in file 0 5:13 -> 7:6, #2\n+Counter in file 0 10:9 -> 10:10, #4\n+Counter in file 0 10:16 -> 10:29, #5\n+Counter in file 0 11:9 -> 12:10, #6\n+Counter in file 0 13:15 -> 13:28, #7\n+Counter in file 0 14:12 -> 14:25, #8\n+Counter in file 0 14:29 -> 14:42, #9\n+Counter in file 0 14:42 -> 14:43, #10\n+Counter in file 0 14:42 -> 14:43, #11\n+Counter in file 0 14:46 -> 14:60, #12\n+Counter in file 0 14:60 -> 14:61, #13\n+Counter in file 0 14:60 -> 14:61, #14\n+Counter in file 0 14:61 -> 16:10, #15\n+Counter in file 0 16:10 -> 16:11, #16\n+Counter in file 0 17:9 -> 18:18, #17\n+Counter in file 0 20:9 -> 20:15, #18\n+Counter in file 0 23:9 -> 23:26, (#4 + 0)\n+Counter in file 0 24:8 -> 24:12, (#4 + 0)\n+Counter in file 0 24:13 -> 26:6, #19\n+Counter in file 0 28:8 -> 28:21, #21\n+Counter in file 0 29:9 -> 29:23, #22\n+Counter in file 0 30:15 -> 30:28, #23\n+Counter in file 0 31:12 -> 31:25, #24\n+Counter in file 0 31:29 -> 31:42, #25\n+Counter in file 0 31:42 -> 31:43, #26\n+Counter in file 0 31:42 -> 31:43, #27\n+Counter in file 0 31:46 -> 31:60, #28\n+Counter in file 0 31:60 -> 31:61, #29\n+Counter in file 0 31:60 -> 31:61, #30\n+Counter in file 0 31:61 -> 33:10, #31\n+Counter in file 0 33:10 -> 33:11, #32\n+Counter in file 0 34:9 -> 34:23, #33\n+Counter in file 0 36:9 -> 36:15, #34\n+Counter in file 0 39:9 -> 39:26, #35\n+Counter in file 0 40:8 -> 40:12, (#35 + 0)\n+Counter in file 0 40:13 -> 42:6, #36\n+Counter in file 0 44:9 -> 44:10, #38\n+Counter in file 0 44:16 -> 44:29, #39\n+Counter in file 0 45:9 -> 45:23, #40\n+Counter in file 0 46:15 -> 46:28, #41\n+Counter in file 0 47:12 -> 47:25, #42\n+Counter in file 0 47:29 -> 47:42, #43\n+Counter in file 0 47:42 -> 47:43, #44\n+Counter in file 0 47:42 -> 47:43, #45\n+Counter in file 0 47:46 -> 47:60, #46\n+Counter in file 0 47:60 -> 47:61, #47\n+Counter in file 0 47:60 -> 47:61, #48\n+Counter in file 0 47:61 -> 49:10, #49\n+Counter in file 0 49:10 -> 49:11, #50\n+Counter in file 0 50:9 -> 50:23, #51\n+Counter in file 0 52:13 -> 54:15, #52\n+Counter in file 0 57:9 -> 57:10, #53\n+Counter in file 0 57:16 -> 57:29, (#38 + 0)\n+Counter in file 0 58:9 -> 58:23, #54\n+Counter in file 0 59:15 -> 59:28, #55\n+Counter in file 0 60:12 -> 60:25, #56\n+Counter in file 0 60:29 -> 60:42, #57\n+Counter in file 0 60:42 -> 60:43, #58\n+Counter in file 0 60:42 -> 60:43, #59\n+Counter in file 0 60:46 -> 60:60, #60\n+Counter in file 0 60:60 -> 60:61, #61\n+Counter in file 0 60:60 -> 60:61, #62\n+Counter in file 0 60:61 -> 62:10, #63\n+Counter in file 0 62:10 -> 62:11, #64\n+Counter in file 0 63:9 -> 63:23, #65\n+Counter in file 0 65:9 -> 65:15, #66\n+Counter in file 0 67:1 -> 67:2, #67\n+Counter in file 0 67:1 -> 67:2, #68\n+Emitting segments for file: ../coverage/various_conditions.rs\n+Combined regions:\n+  4:9 -> 4:26 (count=1)\n+  5:8 -> 5:12 (count=1)\n+  5:13 -> 7:6 (count=1)\n+  10:9 -> 10:10 (count=1)\n+  10:16 -> 10:29 (count=1)\n+  11:9 -> 12:10 (count=1)\n+  13:15 -> 13:28 (count=0)\n+  14:12 -> 14:25 (count=0)\n+  14:29 -> 14:42 (count=0)\n+  14:42 -> 14:43 (count=0)\n+  14:46 -> 14:60 (count=0)\n+  14:60 -> 14:61 (count=0)\n+  14:61 -> 16:10 (count=0)\n+  16:10 -> 16:11 (count=0)\n+  17:9 -> 18:18 (count=0)\n+  20:9 -> 20:15 (count=0)\n+  23:9 -> 23:26 (count=1)\n+  24:8 -> 24:12 (count=1)\n+  24:13 -> 26:6 (count=1)\n+  28:8 -> 28:21 (count=1)\n+  29:9 -> 29:23 (count=1)\n+  30:15 -> 30:28 (count=0)\n+  31:12 -> 31:25 (count=0)\n+  31:29 -> 31:42 (count=0)\n+  31:42 -> 31:43 (count=0)\n+  31:46 -> 31:60 (count=0)\n+  31:60 -> 31:61 (count=0)\n+  31:61 -> 33:10 (count=0)\n+  33:10 -> 33:11 (count=0)\n+  34:9 -> 34:23 (count=0)\n+  36:9 -> 36:15 (count=0)\n+  39:9 -> 39:26 (count=1)\n+  40:8 -> 40:12 (count=1)\n+  40:13 -> 42:6 (count=1)\n+  44:9 -> 44:10 (count=0)\n+  44:16 -> 44:29 (count=1)\n+  45:9 -> 45:23 (count=0)\n+  46:15 -> 46:28 (count=1)\n+  47:12 -> 47:25 (count=0)\n+  47:29 -> 47:42 (count=0)\n+  47:42 -> 47:43 (count=0)\n+  47:46 -> 47:60 (count=0)\n+  47:60 -> 47:61 (count=0)\n+  47:61 -> 49:10 (count=0)\n+  49:10 -> 49:11 (count=0)\n+  50:9 -> 50:23 (count=0)\n+  52:13 -> 54:15 (count=1)\n+  57:9 -> 57:10 (count=0)\n+  57:16 -> 57:29 (count=0)\n+  58:9 -> 58:23 (count=0)\n+  59:15 -> 59:28 (count=0)\n+  60:12 -> 60:25 (count=0)\n+  60:29 -> 60:42 (count=0)\n+  60:42 -> 60:43 (count=0)\n+  60:46 -> 60:60 (count=0)\n+  60:60 -> 60:61 (count=0)\n+  60:61 -> 62:10 (count=0)\n+  62:10 -> 62:11 (count=0)\n+  63:9 -> 63:23 (count=0)\n+  65:9 -> 65:15 (count=0)\n+  67:1 -> 67:2 (count=2)\n+Segment at 4:9 (count = 1), RegionEntry\n+Segment at 4:26 (count = 0), Skipped\n+Segment at 5:8 (count = 1), RegionEntry\n+Segment at 5:12 (count = 0), Skipped\n+Segment at 5:13 (count = 1), RegionEntry\n+Segment at 7:6 (count = 0), Skipped\n+Segment at 10:9 (count = 1), RegionEntry\n+Segment at 10:10 (count = 0), Skipped\n+Segment at 10:16 (count = 1), RegionEntry\n+Segment at 10:29 (count = 0), Skipped\n+Segment at 11:9 (count = 1), RegionEntry\n+Segment at 12:10 (count = 0), Skipped\n+Segment at 13:15 (count = 0), RegionEntry\n+Segment at 13:28 (count = 0), Skipped\n+Segment at 14:12 (count = 0), RegionEntry\n+Segment at 14:25 (count = 0), Skipped\n+Segment at 14:29 (count = 0), RegionEntry\n+Segment at 14:42 (count = 0), RegionEntry\n+Segment at 14:43 (count = 0), Skipped\n+Segment at 14:46 (count = 0), RegionEntry\n+Segment at 14:60 (count = 0), RegionEntry\n+Segment at 14:61 (count = 0), RegionEntry\n+Segment at 16:10 (count = 0), RegionEntry\n+Segment at 16:11 (count = 0), Skipped\n+Segment at 17:9 (count = 0), RegionEntry\n+Segment at 18:18 (count = 0), Skipped\n+Segment at 20:9 (count = 0), RegionEntry\n+Segment at 20:15 (count = 0), Skipped\n+Segment at 23:9 (count = 1), RegionEntry\n+Segment at 23:26 (count = 0), Skipped\n+Segment at 24:8 (count = 1), RegionEntry\n+Segment at 24:12 (count = 0), Skipped\n+Segment at 24:13 (count = 1), RegionEntry\n+Segment at 26:6 (count = 0), Skipped\n+Segment at 28:8 (count = 1), RegionEntry\n+Segment at 28:21 (count = 0), Skipped\n+Segment at 29:9 (count = 1), RegionEntry\n+Segment at 29:23 (count = 0), Skipped\n+Segment at 30:15 (count = 0), RegionEntry\n+Segment at 30:28 (count = 0), Skipped\n+Segment at 31:12 (count = 0), RegionEntry\n+Segment at 31:25 (count = 0), Skipped\n+Segment at 31:29 (count = 0), RegionEntry\n+Segment at 31:42 (count = 0), RegionEntry\n+Segment at 31:43 (count = 0), Skipped\n+Segment at 31:46 (count = 0), RegionEntry\n+Segment at 31:60 (count = 0), RegionEntry\n+Segment at 31:61 (count = 0), RegionEntry\n+Segment at 33:10 (count = 0), RegionEntry\n+Segment at 33:11 (count = 0), Skipped\n+Segment at 34:9 (count = 0), RegionEntry\n+Segment at 34:23 (count = 0), Skipped\n+Segment at 36:9 (count = 0), RegionEntry\n+Segment at 36:15 (count = 0), Skipped\n+Segment at 39:9 (count = 1), RegionEntry\n+Segment at 39:26 (count = 0), Skipped\n+Segment at 40:8 (count = 1), RegionEntry\n+Segment at 40:12 (count = 0), Skipped\n+Segment at 40:13 (count = 1), RegionEntry\n+Segment at 42:6 (count = 0), Skipped\n+Segment at 44:9 (count = 0), RegionEntry\n+Segment at 44:10 (count = 0), Skipped\n+Segment at 44:16 (count = 1), RegionEntry\n+Segment at 44:29 (count = 0), Skipped\n+Segment at 45:9 (count = 0), RegionEntry\n+Segment at 45:23 (count = 0), Skipped\n+Segment at 46:15 (count = 1), RegionEntry\n+Segment at 46:28 (count = 0), Skipped\n+Segment at 47:12 (count = 0), RegionEntry\n+Segment at 47:25 (count = 0), Skipped\n+Segment at 47:29 (count = 0), RegionEntry\n+Segment at 47:42 (count = 0), RegionEntry\n+Segment at 47:43 (count = 0), Skipped\n+Segment at 47:46 (count = 0), RegionEntry\n+Segment at 47:60 (count = 0), RegionEntry\n+Segment at 47:61 (count = 0), RegionEntry\n+Segment at 49:10 (count = 0), RegionEntry\n+Segment at 49:11 (count = 0), Skipped\n+Segment at 50:9 (count = 0), RegionEntry\n+Segment at 50:23 (count = 0), Skipped\n+Segment at 52:13 (count = 1), RegionEntry\n+Segment at 54:15 (count = 0), Skipped\n+Segment at 57:9 (count = 0), RegionEntry\n+Segment at 57:10 (count = 0), Skipped\n+Segment at 57:16 (count = 0), RegionEntry\n+Segment at 57:29 (count = 0), Skipped\n+Segment at 58:9 (count = 0), RegionEntry\n+Segment at 58:23 (count = 0), Skipped\n+Segment at 59:15 (count = 0), RegionEntry\n+Segment at 59:28 (count = 0), Skipped\n+Segment at 60:12 (count = 0), RegionEntry\n+Segment at 60:25 (count = 0), Skipped\n+Segment at 60:29 (count = 0), RegionEntry\n+Segment at 60:42 (count = 0), RegionEntry\n+Segment at 60:43 (count = 0), Skipped\n+Segment at 60:46 (count = 0), RegionEntry\n+Segment at 60:60 (count = 0), RegionEntry\n+Segment at 60:61 (count = 0), RegionEntry\n+Segment at 62:10 (count = 0), RegionEntry\n+Segment at 62:11 (count = 0), Skipped\n+Segment at 63:9 (count = 0), RegionEntry\n+Segment at 63:23 (count = 0), Skipped\n+Segment at 65:9 (count = 0), RegionEntry\n+Segment at 65:15 (count = 0), Skipped\n+Segment at 67:1 (count = 2), RegionEntry\n+Segment at 67:2 (count = 0), Skipped"}, {"sha": "52c809b53255cbbdf551f89ad5b56fe0ec9ae8d5", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.while.txt", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.while.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.while.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.while.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,22 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/while.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/while \n+Counter in file 0 2:9 -> 2:16, #1\n+Counter in file 0 3:11 -> 3:20, #2\n+Counter in file 0 3:21 -> 4:6, #3\n+Counter in file 0 4:6 -> 4:7, (#3 + 0)\n+Counter in file 0 5:1 -> 5:2, #4\n+Emitting segments for file: ../coverage/while.rs\n+Combined regions:\n+  2:9 -> 2:16 (count=1)\n+  3:11 -> 3:20 (count=1)\n+  3:21 -> 4:6 (count=0)\n+  4:6 -> 4:7 (count=0)\n+  5:1 -> 5:2 (count=1)\n+Segment at 2:9 (count = 1), RegionEntry\n+Segment at 2:16 (count = 0), Skipped\n+Segment at 3:11 (count = 1), RegionEntry\n+Segment at 3:20 (count = 0), Skipped\n+Segment at 3:21 (count = 0), RegionEntry\n+Segment at 4:6 (count = 0), RegionEntry\n+Segment at 4:7 (count = 0), Skipped\n+Segment at 5:1 (count = 1), RegionEntry\n+Segment at 5:2 (count = 0), Skipped"}, {"sha": "30d14f4f987f798e5cf8e1343351882cf95b11e7", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.while_early_return.txt", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.while_early_return.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.while_early_return.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.while_early_return.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,44 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/while_early_return.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-base/coverage-reports-base/while_early_return \n+Counter in file 0 5:9 -> 5:27, #1\n+Counter in file 0 7:9 -> 9:10, #2\n+Counter in file 0 12:13 -> 14:14, #3\n+Counter in file 0 18:21 -> 20:22, #4\n+Counter in file 0 22:21 -> 22:27, #5\n+Counter in file 0 26:21 -> 26:27, #6\n+Counter in file 0 27:18 -> 27:19, (#5 + 0)\n+Counter in file 0 30:9 -> 32:10, #7\n+Counter in file 0 35:5 -> 35:11, #8\n+Counter in file 0 36:1 -> 36:2, #9\n+Counter in file 0 36:1 -> 36:2, #10\n+Emitting segments for file: ../coverage/while_early_return.rs\n+Combined regions:\n+  5:9 -> 5:27 (count=1)\n+  7:9 -> 9:10 (count=7)\n+  12:13 -> 14:14 (count=7)\n+  18:21 -> 20:22 (count=1)\n+  22:21 -> 22:27 (count=0)\n+  26:21 -> 26:27 (count=1)\n+  27:18 -> 27:19 (count=0)\n+  30:9 -> 32:10 (count=6)\n+  35:5 -> 35:11 (count=0)\n+  36:1 -> 36:2 (count=2)\n+Segment at 5:9 (count = 1), RegionEntry\n+Segment at 5:27 (count = 0), Skipped\n+Segment at 7:9 (count = 7), RegionEntry\n+Segment at 9:10 (count = 0), Skipped\n+Segment at 12:13 (count = 7), RegionEntry\n+Segment at 14:14 (count = 0), Skipped\n+Segment at 18:21 (count = 1), RegionEntry\n+Segment at 20:22 (count = 0), Skipped\n+Segment at 22:21 (count = 0), RegionEntry\n+Segment at 22:27 (count = 0), Skipped\n+Segment at 26:21 (count = 1), RegionEntry\n+Segment at 26:27 (count = 0), Skipped\n+Segment at 27:18 (count = 0), RegionEntry\n+Segment at 27:19 (count = 0), Skipped\n+Segment at 30:9 (count = 6), RegionEntry\n+Segment at 32:10 (count = 0), Skipped\n+Segment at 35:5 (count = 0), RegionEntry\n+Segment at 35:11 (count = 0), Skipped\n+Segment at 36:1 (count = 2), RegionEntry\n+Segment at 36:2 (count = 0), Skipped"}, {"sha": "bff55300b3ca3d210ad1d4f3e47976a4457e586a", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.closure.json", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.closure.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.closure.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.closure.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -17,14 +17,14 @@\n             },\n             \"lines\": {\n               \"count\": 91,\n-              \"covered\": 75,\n-              \"percent\": 82.41758241758241\n+              \"covered\": 77,\n+              \"percent\": 84.61538461538461\n             },\n             \"regions\": {\n-              \"count\": 21,\n-              \"covered\": 11,\n-              \"notcovered\": 10,\n-              \"percent\": 52.38095238095239\n+              \"count\": 25,\n+              \"covered\": 13,\n+              \"notcovered\": 12,\n+              \"percent\": 52\n             }\n           }\n         }\n@@ -42,14 +42,14 @@\n         },\n         \"lines\": {\n           \"count\": 91,\n-          \"covered\": 75,\n-          \"percent\": 82.41758241758241\n+          \"covered\": 77,\n+          \"percent\": 84.61538461538461\n         },\n         \"regions\": {\n-          \"count\": 21,\n-          \"covered\": 11,\n-          \"notcovered\": 10,\n-          \"percent\": 52.38095238095239\n+          \"count\": 25,\n+          \"covered\": 13,\n+          \"notcovered\": 12,\n+          \"percent\": 52\n         }\n       }\n     }"}, {"sha": "7a7e4c04f001814bdb104a7510a87420bf45a6b8", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.drop_trait.json", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.drop_trait.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.drop_trait.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.drop_trait.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -21,8 +21,8 @@\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 5,\n-              \"covered\": 5,\n+              \"count\": 6,\n+              \"covered\": 6,\n               \"notcovered\": 0,\n               \"percent\": 100\n             }\n@@ -46,8 +46,8 @@\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 5,\n-          \"covered\": 5,\n+          \"count\": 6,\n+          \"covered\": 6,\n           \"notcovered\": 0,\n           \"percent\": 100\n         }"}, {"sha": "1025cd3de80d2c240f10d40afa3d021db77d8d07", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.generics.json", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.generics.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.generics.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.generics.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -21,8 +21,8 @@\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 6,\n-              \"covered\": 6,\n+              \"count\": 7,\n+              \"covered\": 7,\n               \"notcovered\": 0,\n               \"percent\": 100\n             }\n@@ -46,8 +46,8 @@\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 6,\n-          \"covered\": 6,\n+          \"count\": 7,\n+          \"covered\": 7,\n           \"notcovered\": 0,\n           \"percent\": 100\n         }"}, {"sha": "84dcc251f3f4b11f7cdfba0ea194e979a232a158", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.if.json", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.if.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.if.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.if.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -21,10 +21,10 @@\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 4,\n+              \"count\": 5,\n               \"covered\": 4,\n-              \"notcovered\": 0,\n-              \"percent\": 100\n+              \"notcovered\": 1,\n+              \"percent\": 80\n             }\n           }\n         }\n@@ -46,10 +46,10 @@\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 4,\n+          \"count\": 5,\n           \"covered\": 4,\n-          \"notcovered\": 0,\n-          \"percent\": 100\n+          \"notcovered\": 1,\n+          \"percent\": 80\n         }\n       }\n     }"}, {"sha": "2d2ad1dbe3f713a4f82df216fe7d2d736964f379", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.if_else.json", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.if_else.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.if_else.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.if_else.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 28,\n-              \"covered\": 19,\n-              \"percent\": 67.85714285714286\n+              \"count\": 29,\n+              \"covered\": 21,\n+              \"percent\": 72.41379310344827\n             },\n             \"regions\": {\n-              \"count\": 7,\n-              \"covered\": 5,\n+              \"count\": 9,\n+              \"covered\": 7,\n               \"notcovered\": 2,\n-              \"percent\": 71.42857142857143\n+              \"percent\": 77.77777777777779\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 28,\n-          \"covered\": 19,\n-          \"percent\": 67.85714285714286\n+          \"count\": 29,\n+          \"covered\": 21,\n+          \"percent\": 72.41379310344827\n         },\n         \"regions\": {\n-          \"count\": 7,\n-          \"covered\": 5,\n+          \"count\": 9,\n+          \"covered\": 7,\n           \"notcovered\": 2,\n-          \"percent\": 71.42857142857143\n+          \"percent\": 77.77777777777779\n         }\n       }\n     }"}, {"sha": "c178e7f93476f097fcaa839652a6ac762127d69e", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.inner_items.json", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.inner_items.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.inner_items.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.inner_items.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -21,10 +21,10 @@\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 13,\n+              \"count\": 15,\n               \"covered\": 13,\n-              \"notcovered\": 0,\n-              \"percent\": 100\n+              \"notcovered\": 2,\n+              \"percent\": 86.66666666666667\n             }\n           }\n         }\n@@ -46,10 +46,10 @@\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 13,\n+          \"count\": 15,\n           \"covered\": 13,\n-          \"notcovered\": 0,\n-          \"percent\": 100\n+          \"notcovered\": 2,\n+          \"percent\": 86.66666666666667\n         }\n       }\n     }"}, {"sha": "95a1dcd3b8eee447b617fff592ec3e577f187431", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.lazy_boolean.json", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.lazy_boolean.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.lazy_boolean.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.lazy_boolean.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 21,\n-              \"covered\": 19,\n-              \"percent\": 90.47619047619048\n+              \"count\": 40,\n+              \"covered\": 32,\n+              \"percent\": 80\n             },\n             \"regions\": {\n-              \"count\": 16,\n-              \"covered\": 14,\n-              \"notcovered\": 2,\n-              \"percent\": 87.5\n+              \"count\": 39,\n+              \"covered\": 28,\n+              \"notcovered\": 11,\n+              \"percent\": 71.7948717948718\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 21,\n-          \"covered\": 19,\n-          \"percent\": 90.47619047619048\n+          \"count\": 40,\n+          \"covered\": 32,\n+          \"percent\": 80\n         },\n         \"regions\": {\n-          \"count\": 16,\n-          \"covered\": 14,\n-          \"notcovered\": 2,\n-          \"percent\": 87.5\n+          \"count\": 39,\n+          \"covered\": 28,\n+          \"notcovered\": 11,\n+          \"percent\": 71.7948717948718\n         }\n       }\n     }"}, {"sha": "aec85cd0329cbb2dfccd52044ca0abf7adb00de6", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.loops_and_branches.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.loops_and_branches.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.loops_and_branches.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.loops_and_branches.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/loops_and_branches.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 11,\n+              \"covered\": 11,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 10,\n+              \"covered\": 8,\n+              \"notcovered\": 2,\n+              \"percent\": 80\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 11,\n+          \"covered\": 11,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 10,\n+          \"covered\": 8,\n+          \"notcovered\": 2,\n+          \"percent\": 80\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "dbe4f9ca6fd1738f2471e0e0b5cb96fe07ba9fc7", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.nested_loops.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.nested_loops.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.nested_loops.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.nested_loops.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/nested_loops.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 21,\n+              \"covered\": 17,\n+              \"percent\": 80.95238095238095\n+            },\n+            \"regions\": {\n+              \"count\": 20,\n+              \"covered\": 16,\n+              \"notcovered\": 4,\n+              \"percent\": 80\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 21,\n+          \"covered\": 17,\n+          \"percent\": 80.95238095238095\n+        },\n+        \"regions\": {\n+          \"count\": 20,\n+          \"covered\": 16,\n+          \"notcovered\": 4,\n+          \"percent\": 80\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "779bfe9904ced180590ee0ed71b9323c8d243adf", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.partial_eq_counter_without_region.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.partial_eq_counter_without_region.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.partial_eq_counter_without_region.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.partial_eq_counter_without_region.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/partial_eq_counter_without_region.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 5,\n+              \"covered\": 5,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 8,\n+              \"covered\": 5,\n+              \"percent\": 62.5\n+            },\n+            \"lines\": {\n+              \"count\": 15,\n+              \"covered\": 15,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 6,\n+              \"covered\": 6,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 5,\n+          \"covered\": 5,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 8,\n+          \"covered\": 5,\n+          \"percent\": 62.5\n+        },\n+        \"lines\": {\n+          \"count\": 15,\n+          \"covered\": 15,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 6,\n+          \"covered\": 6,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "ada6bb062dd1eaf04d076a8dc2931361441840c0", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.simple_loop.json", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.simple_loop.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.simple_loop.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.simple_loop.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 18,\n-              \"covered\": 18,\n+              \"count\": 19,\n+              \"covered\": 19,\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 7,\n-              \"covered\": 7,\n-              \"notcovered\": 0,\n-              \"percent\": 100\n+              \"count\": 9,\n+              \"covered\": 8,\n+              \"notcovered\": 1,\n+              \"percent\": 88.88888888888889\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 18,\n-          \"covered\": 18,\n+          \"count\": 19,\n+          \"covered\": 19,\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 7,\n-          \"covered\": 7,\n-          \"notcovered\": 0,\n-          \"percent\": 100\n+          \"count\": 9,\n+          \"covered\": 8,\n+          \"notcovered\": 1,\n+          \"percent\": 88.88888888888889\n         }\n       }\n     }"}, {"sha": "63d1ae74c5f5d51759f22c7f82f7799ecc11c590", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.simple_match.json", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.simple_match.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.simple_match.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.simple_match.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 26,\n-              \"covered\": 26,\n+              \"count\": 24,\n+              \"covered\": 24,\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 9,\n-              \"covered\": 9,\n-              \"notcovered\": 0,\n-              \"percent\": 100\n+              \"count\": 15,\n+              \"covered\": 14,\n+              \"notcovered\": 1,\n+              \"percent\": 93.33333333333333\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 26,\n-          \"covered\": 26,\n+          \"count\": 24,\n+          \"covered\": 24,\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 9,\n-          \"covered\": 9,\n-          \"notcovered\": 0,\n-          \"percent\": 100\n+          \"count\": 15,\n+          \"covered\": 14,\n+          \"notcovered\": 1,\n+          \"percent\": 93.33333333333333\n         }\n       }\n     }"}, {"sha": "3fa6821cd1df925cb22fca64fbdda2a51545ccd6", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.tight_infinite_loop.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.tight_infinite_loop.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.tight_infinite_loop.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.tight_infinite_loop.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/tight_infinite_loop.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "e845ee29fa452305323a7e9c050f74e4fc148515", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.try_error_result.json", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.try_error_result.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.try_error_result.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.try_error_result.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 16,\n-              \"covered\": 15,\n-              \"percent\": 93.75\n+              \"count\": 20,\n+              \"covered\": 19,\n+              \"percent\": 95\n             },\n             \"regions\": {\n-              \"count\": 13,\n-              \"covered\": 12,\n-              \"notcovered\": 1,\n-              \"percent\": 92.3076923076923\n+              \"count\": 20,\n+              \"covered\": 17,\n+              \"notcovered\": 3,\n+              \"percent\": 85\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 16,\n-          \"covered\": 15,\n-          \"percent\": 93.75\n+          \"count\": 20,\n+          \"covered\": 19,\n+          \"percent\": 95\n         },\n         \"regions\": {\n-          \"count\": 13,\n-          \"covered\": 12,\n-          \"notcovered\": 1,\n-          \"percent\": 92.3076923076923\n+          \"count\": 20,\n+          \"covered\": 17,\n+          \"notcovered\": 3,\n+          \"percent\": 85\n         }\n       }\n     }"}, {"sha": "464bb614ea1b11a6f0a7325e499c7c3d56479533", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.various_conditions.json", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.various_conditions.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.various_conditions.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.various_conditions.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -21,10 +21,10 @@\n               \"percent\": 46.93877551020408\n             },\n             \"regions\": {\n-              \"count\": 51,\n+              \"count\": 70,\n               \"covered\": 19,\n-              \"notcovered\": 32,\n-              \"percent\": 37.254901960784316\n+              \"notcovered\": 51,\n+              \"percent\": 27.142857142857142\n             }\n           }\n         }\n@@ -46,10 +46,10 @@\n           \"percent\": 46.93877551020408\n         },\n         \"regions\": {\n-          \"count\": 51,\n+          \"count\": 70,\n           \"covered\": 19,\n-          \"notcovered\": 32,\n-          \"percent\": 37.254901960784316\n+          \"notcovered\": 51,\n+          \"percent\": 27.142857142857142\n         }\n       }\n     }"}, {"sha": "27862087ed567a4ff6c228cccfd57839e5ca498a", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.while.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.while.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.while.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.while.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/while.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 4,\n+              \"covered\": 3,\n+              \"percent\": 75\n+            },\n+            \"regions\": {\n+              \"count\": 5,\n+              \"covered\": 3,\n+              \"notcovered\": 2,\n+              \"percent\": 60\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 4,\n+          \"covered\": 3,\n+          \"percent\": 75\n+        },\n+        \"regions\": {\n+          \"count\": 5,\n+          \"covered\": 3,\n+          \"notcovered\": 2,\n+          \"percent\": 60\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "555ac745d53718c499b7e00ed7214b7d5c5f73f4", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.while_early_return.json", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.while_early_return.json", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.while_early_return.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.while_early_return.json?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -17,14 +17,14 @@\n             },\n             \"lines\": {\n               \"count\": 18,\n-              \"covered\": 16,\n-              \"percent\": 88.88888888888889\n+              \"covered\": 15,\n+              \"percent\": 83.33333333333334\n             },\n             \"regions\": {\n-              \"count\": 9,\n-              \"covered\": 7,\n-              \"notcovered\": 2,\n-              \"percent\": 77.77777777777779\n+              \"count\": 11,\n+              \"covered\": 8,\n+              \"notcovered\": 3,\n+              \"percent\": 72.72727272727273\n             }\n           }\n         }\n@@ -42,14 +42,14 @@\n         },\n         \"lines\": {\n           \"count\": 18,\n-          \"covered\": 16,\n-          \"percent\": 88.88888888888889\n+          \"covered\": 15,\n+          \"percent\": 83.33333333333334\n         },\n         \"regions\": {\n-          \"count\": 9,\n-          \"covered\": 7,\n-          \"notcovered\": 2,\n-          \"percent\": 77.77777777777779\n+          \"count\": 11,\n+          \"covered\": 8,\n+          \"notcovered\": 3,\n+          \"percent\": 72.72727272727273\n         }\n       }\n     }"}, {"sha": "aef26a62e25fba8229ef1df99653976796419d4d", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.closure.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.closure.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.closure.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.closure.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -62,7 +62,7 @@\n    62|      1|                let mut countdown = 0;\n    63|      1|                if is_false {\n    64|      0|                    countdown = 10;\n-   65|      0|                }\n+   65|      1|                }\n    66|      1|                \"alt string 3\".to_owned()\n    67|      1|            }\n    68|      1|        )\n@@ -77,7 +77,7 @@\n    77|      1|        let mut countdown = 0;\n    78|      1|        if is_false {\n    79|      0|            countdown = 10;\n-   80|      0|        }\n+   80|      1|        }\n    81|      1|        \"alt string 4\".to_owned()\n    82|      1|    };\n    83|      1|    println!("}, {"sha": "43592df1059aa4083841d3088ed532c62f05066d", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.drop_trait.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.drop_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.drop_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.drop_trait.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -24,7 +24,7 @@\n    24|       |    let _ = Firework { strength: 1000 };\n    25|       |\n    26|       |    Ok(())\n-   27|      1|}\n+   27|      2|}\n    28|       |\n    29|       |// Expected program output:\n    30|       |//   Exiting with error..."}, {"sha": "11dc0aa65e2d1d81c6c3a4ff90948ccfaa636c89", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.generics.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.generics.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.generics.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.generics.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -57,7 +57,7 @@\n    35|       |    let _ = Firework { strength: 1000 };\n    36|       |\n    37|       |    Ok(())\n-   38|      1|}\n+   38|      2|}\n    39|       |\n    40|       |// Expected program output:\n    41|       |//   Exiting with error..."}, {"sha": "85e6440ab3729f1275552d93d570d6ff6fc2f242", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.if.txt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.if.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.if.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.if.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -25,5 +25,6 @@\n    25|      1|            10\n    26|      1|        ;\n    27|      1|    }\n+                   ^0\n    28|      1|}\n "}, {"sha": "64cbc262521bf6fdb8d564b4f5967cf40b3172da", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.if_else.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.if_else.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.if_else.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.if_else.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -20,7 +20,7 @@\n    20|      0|        countdown\n    21|      0|        =\n    22|      0|            100\n-   23|       |    }\n+   23|      1|    }\n    24|       |\n    25|       |    if\n    26|      1|        is_true\n@@ -36,6 +36,6 @@\n    36|      0|        =\n    37|      0|            100\n    38|      0|        ;\n-   39|      0|    }\n+   39|      1|    }\n    40|      1|}\n "}, {"sha": "4a51f842a4bb22cbea878a2e0944013823dc42b6", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.inner_items.txt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.inner_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.inner_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.inner_items.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -10,6 +10,7 @@\n    10|      1|    if is_true {\n    11|      1|        countdown = 10;\n    12|      1|    }\n+                   ^0\n    13|       |\n    14|       |    mod in_mod {\n    15|       |        const IN_MOD_CONST: u32 = 1000;\n@@ -48,6 +49,7 @@\n    48|      1|    if is_true {\n    49|      1|        in_func(countdown);\n    50|      1|    }\n+                   ^0\n    51|       |\n    52|      1|    let mut val = InStruct {\n    53|      1|        in_struct_field: 101,"}, {"sha": "f01f69f2496ee76ee52de02eb013135f34009095", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.lazy_boolean.txt", "status": "modified", "additions": 37, "deletions": 16, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.lazy_boolean.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.lazy_boolean.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.lazy_boolean.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -12,12 +12,14 @@\n    12|      1|        b = 10;\n    13|      1|        c = 100;\n    14|      1|    }\n+                   ^0\n    15|       |    let\n    16|      1|        somebool\n    17|       |        =\n    18|      1|            a < b\n    19|       |        ||\n-   20|      0|            b < c\n+   20|      1|            b < c\n+                          ^0\n    21|       |    ;\n    22|       |    let\n    23|      1|        somebool\n@@ -26,19 +28,38 @@\n    26|       |        ||\n    27|      1|            b < c\n    28|       |    ;\n-   29|       |    let\n-   30|      1|        somebool\n-   31|       |        =\n-   32|      1|            a < b\n-   33|       |        &&\n-   34|      1|            b < c\n-   35|       |    ;\n-   36|       |    let\n-   37|      1|        somebool\n-   38|       |        =\n-   39|      1|            b < a\n-   40|       |        &&\n-   41|      0|            b < c\n-   42|       |    ;\n-   43|      1|}\n+   29|      1|    let somebool = a < b && b < c;\n+   30|      1|    let somebool = b < a && b < c;\n+                                          ^0\n+   31|       |\n+   32|       |    if\n+   33|      1|        !\n+   34|      1|        is_true\n+   35|      0|    {\n+   36|      0|        a = 2\n+   37|      0|        ;\n+   38|      1|    }\n+   39|       |\n+   40|       |    if\n+   41|      1|        is_true\n+   42|      1|    {\n+   43|      1|        b = 30\n+   44|      1|        ;\n+   45|      1|    }\n+   46|       |    else\n+   47|      0|    {\n+   48|      0|        c = 400\n+   49|      0|        ;\n+   50|      1|    }\n+   51|       |\n+   52|      1|    if !is_true {\n+   53|      0|        a = 2;\n+   54|      1|    }\n+   55|       |\n+   56|      1|    if is_true {\n+   57|      1|        b = 30;\n+   58|      1|    } else {\n+   59|      0|        c = 400;\n+   60|      1|    }\n+   61|      1|}\n "}, {"sha": "3a969a6b89869366e1bc2fd3a9defc1743e08861", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.loops_and_branches.txt", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.loops_and_branches.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.loops_and_branches.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.loops_and_branches.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,38 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |\n+    3|       |// This test confirms an earlier problem was resolved, supporting the MIR graph generated by the\n+    4|       |// structure of this `fmt` function.\n+    5|       |\n+    6|       |struct DebugTest;\n+    7|       |\n+    8|       |impl std::fmt::Debug for DebugTest {\n+    9|       |    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {\n+   10|      1|        if true {\n+   11|      1|            if false {\n+   12|       |                while true {\n+   13|       |                }\n+   14|      1|            }\n+   15|      1|            write!(f, \"error\")?;\n+                                            ^0\n+   16|       |        } else {\n+   17|      1|        }\n+   18|      1|        Ok(())\n+   19|      1|    }\n+   20|       |}\n+   21|       |\n+   22|      1|fn main() {\n+   23|      1|    let debug_test = DebugTest;\n+   24|      1|    println!(\"{:?}\", debug_test);\n+   25|      1|}\n+   26|       |\n+   27|       |/*\n+   28|       |\n+   29|       |This is the error message generated, before the issue was fixed:\n+   30|       |\n+   31|       |error: internal compiler error: compiler/rustc_mir/src/transform/coverage/mod.rs:374:42:\n+   32|       |Error processing: DefId(0:6 ~ bug_incomplete_cov_graph_traversal_simplified[317d]::{impl#0}::fmt):\n+   33|       |Error { message: \"`TraverseCoverageGraphWithLoops` missed some `BasicCoverageBlock`s:\n+   34|       |[bcb6, bcb7, bcb9]\" }\n+   35|       |\n+   36|       |*/\n+"}, {"sha": "e0545c76f780f7bff8b01d05bbafe304738e6546", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.nested_loops.txt", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.nested_loops.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.nested_loops.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.nested_loops.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,26 @@\n+    1|       |fn main() {\n+    2|      1|    let is_true = std::env::args().len() == 1;\n+    3|      1|    let mut countdown = 10;\n+    4|       |\n+    5|      1|    'outer: while countdown > 0 {\n+    6|      1|        let mut a = 100;\n+    7|      1|        let mut b = 100;\n+    8|      3|        for _ in 0..50 {\n+    9|      3|            if a < 30 {\n+   10|      0|                break;\n+   11|       |            }\n+   12|      3|            a -= 5;\n+   13|      3|            b -= 5;\n+   14|      3|            if b < 90 {\n+   15|      1|                a -= 10;\n+   16|      1|                if is_true {\n+   17|      1|                    break 'outer;\n+   18|       |                } else {\n+   19|      0|                    a -= 2;\n+   20|      0|                }\n+   21|      2|            }\n+   22|      3|        }\n+   23|      0|        countdown -= 1;\n+   24|      1|    }\n+   25|      1|}\n+"}, {"sha": "e7e4dfb5a86c4704d0e631a4739a9c70a4733ef6", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.partial_eq_counter_without_region.txt", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.partial_eq_counter_without_region.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.partial_eq_counter_without_region.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.partial_eq_counter_without_region.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,111 @@\n+    1|       |// This test confirms an earlier problem was resolved, supporting the MIR graph generated by the\n+    2|       |// structure of this test.\n+    3|       |\n+    4|      2|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+                                                    ^1       ^1\n+  ------------------\n+  | Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::gt\n+  ------------------\n+  | Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::le\n+  ------------------\n+  | Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::ge\n+  ------------------\n+  | <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::lt:\n+  |    4|      1|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+  ------------------\n+    5|       |pub struct Version {\n+    6|       |    major: usize,\n+    7|      1|    minor: usize,\n+    8|       |    patch: usize,\n+    9|       |}\n+   10|       |\n+   11|       |impl Version {\n+   12|       |    pub fn new(major: usize, minor: usize, patch: usize) -> Self {\n+   13|      2|        Self {\n+   14|      2|            major,\n+   15|      2|            minor,\n+   16|      2|            patch,\n+   17|      2|        }\n+   18|      2|    }\n+   19|       |}\n+   20|       |\n+   21|      1|fn main() {\n+   22|      1|    let version_3_2_1 = Version::new(3, 2, 1);\n+   23|      1|    let version_3_3_0 = Version::new(3, 3, 0);\n+   24|      1|\n+   25|      1|    println!(\"{:?} < {:?} = {}\", version_3_2_1, version_3_3_0, version_3_2_1 < version_3_3_0);\n+   26|      1|}\n+   27|       |\n+   28|       |/*\n+   29|       |\n+   30|       |This test verifies a bug was fixed that otherwise generated this error:\n+   31|       |\n+   32|       |thread 'rustc' panicked at 'No counters provided the source_hash for function:\n+   33|       |    Instance {\n+   34|       |        def: Item(WithOptConstParam {\n+   35|       |            did: DefId(0:101 ~ autocfg[c44a]::version::{impl#2}::partial_cmp),\n+   36|       |            const_param_did: None\n+   37|       |        }),\n+   38|       |        substs: []\n+   39|       |    }'\n+   40|       |The `PartialOrd` derived by `Version` happened to generate a MIR that generated coverage\n+   41|       |without a code region associated with any `Counter`. Code regions were associated with at least\n+   42|       |one expression, which is allowed, but the `function_source_hash` was only passed to the codegen\n+   43|       |(coverage mapgen) phase from a `Counter`s code region. A new method was added to pass the\n+   44|       |`function_source_hash` without a code region, if necessary.\n+   45|       |\n+   46|       |*/\n+   47|       |\n+   48|       |// FIXME(richkadel): It may be worth investigating why the coverage report for this test produces\n+   49|       |// the following results:\n+   50|       |\n+   51|       |/*\n+   52|       |\n+   53|       |1. Why are their two counts below different characters (first and last) of `PartialOrd`, on line 17?\n+   54|       |\n+   55|       |2. Line 17 is counted twice, but the `::lt` instance shows a line count of 1? Is there a missing\n+   56|       |   line count with a different instance? Or was it really only called once?\n+   57|       |\n+   58|       |3. Line 20 shows another line count (of 1) for a line within a `struct` declaration (on only one of\n+   59|       |   its 3 fields). I doubt the specific field (`minor`) is relevant, but rather I suspect there's a\n+   60|       |   problem computing the file position here, for some reason.\n+   61|       |\n+   62|       |<snip>\n+   63|       |   16|       |\n+   64|       |   17|      2|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+   65|       |                                                    ^1       ^1\n+   66|       |------------------\n+   67|       ||Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::gt\n+   68|       |------------------\n+   69|       ||Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::le\n+   70|       |------------------\n+   71|       ||Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::ge\n+   72|       |------------------\n+   73|       ||<partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::lt:\n+   74|       ||  17|      1|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+   75|       |------------------\n+   76|       |   18|       |pub struct Version {\n+   77|       |   19|       |    major: usize,\n+   78|       |   20|      1|    minor: usize,\n+   79|       |   21|       |    patch: usize,\n+   80|       |   22|       |}\n+   81|       |   23|       |\n+   82|       |   24|       |impl Version {\n+   83|       |   25|       |    pub fn new(major: usize, minor: usize, patch: usize) -> Self {\n+   84|       |   26|      2|        Version {\n+   85|       |   27|      2|            major,\n+   86|       |   28|      2|            minor,\n+   87|       |   29|      2|            patch,\n+   88|       |   30|      2|        }\n+   89|       |   31|      2|    }\n+   90|       |   32|       |}\n+   91|       |   33|       |\n+   92|       |   34|      1|fn main() {\n+   93|       |   35|      1|    let version_3_2_1 = Version::new(3, 2, 1);\n+   94|       |   36|      1|    let version_3_3_0 = Version::new(3, 3, 0);\n+   95|       |   37|      1|\n+   96|       |   38|      1|    println!(\"{:?} < {:?} = {}\", version_3_2_1, version_3_3_0, version_3_2_1 < version\n+   97|       |_3_3_0);\n+   98|       |   39|      1|}\n+   99|       |*/\n+"}, {"sha": "064930dd75c93a4f4b1e83c228f155c38db36d3d", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.simple_loop.txt", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.simple_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.simple_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.simple_loop.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -16,6 +16,7 @@\n    16|      1|            10\n    17|      1|        ;\n    18|      1|    }\n+                   ^0\n    19|       |\n    20|       |    loop\n    21|       |    {\n@@ -31,6 +32,6 @@\n    31|     10|        -=\n    32|     10|        1\n    33|       |        ;\n-   34|       |    }\n+   34|      1|    }\n    35|      1|}\n "}, {"sha": "1f7e71d3eb0e7bad42393553b43b6acac9b50222", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.simple_match.txt", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.simple_match.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.simple_match.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.simple_match.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -10,22 +10,24 @@\n    10|      1|    if is_true {\n    11|      1|        countdown = 0;\n    12|      1|    }\n+                   ^0\n    13|       |\n-   14|      3|    for\n-   15|      3|        _\n+   14|       |    for\n+   15|      2|        _\n    16|       |    in\n-   17|      1|        0..2\n+   17|      3|        0..2\n    18|       |    {\n    19|       |        let z\n    20|       |        ;\n    21|       |        match\n    22|      2|            countdown\n-   23|      2|        {\n-   24|      2|            x\n-   25|      2|            if\n+   23|       |        {\n+   24|      1|            x\n+   25|       |            if\n    26|      2|                x\n    27|      2|                    <\n    28|      2|                1\n+                               ^1\n    29|       |            =>\n    30|      1|            {\n    31|      1|                z = countdown\n@@ -39,6 +41,6 @@\n    39|       |            =>\n    40|      1|            {}\n    41|       |        }\n-   42|       |    }\n+   42|      3|    }\n    43|      1|}\n "}, {"sha": "e02eac03a6b1574c6c10534081581d67e120d0e0", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.tight_infinite_loop.txt", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.tight_infinite_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.tight_infinite_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.tight_infinite_loop.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,6 @@\n+    1|       |fn main() {\n+    2|      1|    if false {\n+    3|       |        loop {}\n+    4|       |    }\n+    5|      1|}\n+"}, {"sha": "05d72d0de46e60ec6222cc47b3da9876ce85c30a", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.try_error_result.txt", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.try_error_result.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.try_error_result.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.try_error_result.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -6,31 +6,32 @@\n     6|      1|        Err(())\n     7|       |    } else {\n     8|      5|        Ok(())\n-    9|       |    }\n+    9|      1|    }\n    10|      6|}\n    11|       |\n    12|       |fn main() -> Result<(),()> {\n    13|      1|    let mut\n    14|      1|        countdown = 10\n    15|       |    ;\n-   16|      6|    for\n+   16|       |    for\n    17|      6|        _\n    18|       |    in\n-   19|      1|        0..10\n+   19|      6|        0..10\n    20|       |    {\n    21|      6|        countdown\n    22|      6|            -= 1\n-   23|       |        ;\n-   24|       |        if\n+   23|      6|        ;\n+   24|      6|        if\n    25|      6|            countdown < 5\n    26|       |        {\n    27|      1|            call(/*return_error=*/ true)?;\n    28|       |        }\n    29|       |        else\n    30|       |        {\n    31|      5|            call(/*return_error=*/ false)?;\n-   32|       |        }\n-   33|       |    }\n+                                                       ^0\n+   32|      5|        }\n+   33|      6|    }\n    34|      0|    Ok(())\n-   35|      1|}\n+   35|      2|}\n "}, {"sha": "e0efe75043d4a7229217c5e75bfff06268eec721", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.various_conditions.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.various_conditions.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.various_conditions.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.various_conditions.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -65,5 +65,5 @@\n    64|       |    } else {\n    65|      0|        return;\n    66|       |    };\n-   67|      1|}\n+   67|      2|}\n "}, {"sha": "194325b6b9ecaac6c23117102cd38678ccecc704", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.while.txt", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.while.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.while.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.while.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,6 @@\n+    1|       |fn main() {\n+    2|      1|    let num = 9;\n+    3|      1|    while num >= 10 {\n+    4|      0|    }\n+    5|      1|}\n+"}, {"sha": "2e0c4022bedb8b1a1b76d9768cf0642097a814ce", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.while_early_return.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.while_early_return.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.while_early_return.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.while_early_return.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -3,7 +3,7 @@\n     3|       |\n     4|       |fn main() -> Result<(),u8> {\n     5|      1|    let mut countdown = 10;\n-    6|      7|    while\n+    6|       |    while\n     7|      7|        countdown\n     8|      7|            >\n     9|      7|        0\n@@ -24,7 +24,7 @@\n    24|       |                else\n    25|       |                {\n    26|      1|                    Err(1)\n-   27|       |                }\n+   27|      0|                }\n    28|       |                ;\n    29|       |        }\n    30|      6|        countdown\n@@ -33,7 +33,7 @@\n    33|       |        ;\n    34|       |    }\n    35|      0|    Ok(())\n-   36|      1|}\n+   36|      2|}\n    37|       |\n    38|       |// ISSUE(77553): Originally, this test had `Err(1)` on line 22 (instead of `Ok(())`) and\n    39|       |// `std::process::exit(2)` on line 26 (instead of `Err(1)`); and this worked as expected on Linux"}, {"sha": "39bf7bad9a1a2ac475dc22b5b208094cb7f451ac", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.closure.txt", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.closure.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.closure.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.closure.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,95 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/closure.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/closure \n+Counter in file 0 20:21 -> 20:38, #1\n+Counter in file 0 21:20 -> 21:28, (#1 + 0)\n+Counter in file 0 21:29 -> 23:18, #2\n+Counter in file 0 23:18 -> 23:19, #3\n+Counter in file 0 24:17 -> 25:14, #4\n+Counter in file 0 3:11 -> 18:13, #1\n+Counter in file 0 25:14 -> 33:9, (#1 + 0)\n+Counter in file 0 40:6 -> 60:13, (#1 + 0)\n+Counter in file 0 67:14 -> 75:9, (#1 + 0)\n+Counter in file 0 82:6 -> 93:2, (#1 + 0)\n+Counter in file 0 77:13 -> 77:30, #1\n+Counter in file 0 78:12 -> 78:20, (#1 + 0)\n+Counter in file 0 78:21 -> 80:10, #2\n+Counter in file 0 80:10 -> 80:11, #3\n+Counter in file 0 81:9 -> 82:6, #4\n+Counter in file 0 62:21 -> 62:38, #1\n+Counter in file 0 63:20 -> 63:28, (#1 + 0)\n+Counter in file 0 63:29 -> 65:18, #2\n+Counter in file 0 65:18 -> 65:19, #3\n+Counter in file 0 66:17 -> 67:14, #4\n+Counter in file 0 35:13 -> 35:30, #1\n+Counter in file 0 36:12 -> 36:20, (#1 + 0)\n+Counter in file 0 36:21 -> 38:10, #2\n+Counter in file 0 38:10 -> 38:11, #3\n+Counter in file 0 39:9 -> 40:6, #4\n+Emitting segments for file: ../coverage/closure.rs\n+Combined regions:\n+  3:11 -> 18:13 (count=1)\n+  20:21 -> 20:38 (count=0)\n+  21:20 -> 21:28 (count=0)\n+  21:29 -> 23:18 (count=0)\n+  23:18 -> 23:19 (count=0)\n+  24:17 -> 25:14 (count=0)\n+  25:14 -> 33:9 (count=1)\n+  35:13 -> 35:30 (count=0)\n+  36:12 -> 36:20 (count=0)\n+  36:21 -> 38:10 (count=0)\n+  38:10 -> 38:11 (count=0)\n+  39:9 -> 40:6 (count=0)\n+  40:6 -> 60:13 (count=1)\n+  62:21 -> 62:38 (count=1)\n+  63:20 -> 63:28 (count=1)\n+  63:29 -> 65:18 (count=0)\n+  65:18 -> 65:19 (count=1)\n+  66:17 -> 67:14 (count=1)\n+  67:14 -> 75:9 (count=1)\n+  77:13 -> 77:30 (count=1)\n+  78:12 -> 78:20 (count=1)\n+  78:21 -> 80:10 (count=0)\n+  80:10 -> 80:11 (count=1)\n+  81:9 -> 82:6 (count=1)\n+  82:6 -> 93:2 (count=1)\n+Segment at 3:11 (count = 1), RegionEntry\n+Segment at 18:13 (count = 0), Skipped\n+Segment at 20:21 (count = 0), RegionEntry\n+Segment at 20:38 (count = 0), Skipped\n+Segment at 21:20 (count = 0), RegionEntry\n+Segment at 21:28 (count = 0), Skipped\n+Segment at 21:29 (count = 0), RegionEntry\n+Segment at 23:18 (count = 0), RegionEntry\n+Segment at 23:19 (count = 0), Skipped\n+Segment at 24:17 (count = 0), RegionEntry\n+Segment at 25:14 (count = 1), RegionEntry\n+Segment at 33:9 (count = 0), Skipped\n+Segment at 35:13 (count = 0), RegionEntry\n+Segment at 35:30 (count = 0), Skipped\n+Segment at 36:12 (count = 0), RegionEntry\n+Segment at 36:20 (count = 0), Skipped\n+Segment at 36:21 (count = 0), RegionEntry\n+Segment at 38:10 (count = 0), RegionEntry\n+Segment at 38:11 (count = 0), Skipped\n+Segment at 39:9 (count = 0), RegionEntry\n+Segment at 40:6 (count = 1), RegionEntry\n+Segment at 60:13 (count = 0), Skipped\n+Segment at 62:21 (count = 1), RegionEntry\n+Segment at 62:38 (count = 0), Skipped\n+Segment at 63:20 (count = 1), RegionEntry\n+Segment at 63:28 (count = 0), Skipped\n+Segment at 63:29 (count = 0), RegionEntry\n+Segment at 65:18 (count = 1), RegionEntry\n+Segment at 65:19 (count = 0), Skipped\n+Segment at 66:17 (count = 1), RegionEntry\n+Segment at 67:14 (count = 1), RegionEntry\n+Segment at 75:9 (count = 0), Skipped\n+Segment at 77:13 (count = 1), RegionEntry\n+Segment at 77:30 (count = 0), Skipped\n+Segment at 78:12 (count = 1), RegionEntry\n+Segment at 78:20 (count = 0), Skipped\n+Segment at 78:21 (count = 0), RegionEntry\n+Segment at 80:10 (count = 1), RegionEntry\n+Segment at 80:11 (count = 0), Skipped\n+Segment at 81:9 (count = 1), RegionEntry\n+Segment at 82:6 (count = 1), RegionEntry\n+Segment at 93:2 (count = 0), Skipped"}, {"sha": "e416a84820a3082a7a7ee77711d90911d70eb7c3", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.drop_trait.txt", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.drop_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.drop_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.drop_trait.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,24 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/drop_trait.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/drop_trait \n+Counter in file 0 9:24 -> 11:6, #1\n+Counter in file 0 15:9 -> 17:42, #1\n+Counter in file 0 19:8 -> 19:12, (#1 + 0)\n+Counter in file 0 20:9 -> 21:22, #2\n+Counter in file 0 27:1 -> 27:2, #4\n+Counter in file 0 27:1 -> 27:2, (#2 + 0)\n+Emitting segments for file: ../coverage/drop_trait.rs\n+Combined regions:\n+  9:24 -> 11:6 (count=2)\n+  15:9 -> 17:42 (count=1)\n+  19:8 -> 19:12 (count=1)\n+  20:9 -> 21:22 (count=1)\n+  27:1 -> 27:2 (count=2)\n+Segment at 9:24 (count = 2), RegionEntry\n+Segment at 11:6 (count = 0), Skipped\n+Segment at 15:9 (count = 1), RegionEntry\n+Segment at 17:42 (count = 0), Skipped\n+Segment at 19:8 (count = 1), RegionEntry\n+Segment at 19:12 (count = 0), Skipped\n+Segment at 20:9 (count = 1), RegionEntry\n+Segment at 21:22 (count = 0), Skipped\n+Segment at 27:1 (count = 2), RegionEntry\n+Segment at 27:2 (count = 0), Skipped"}, {"sha": "9e33b48fc29c0a9dfdc9bd7a3f474a55b31bc9ad", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.generics.txt", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.generics.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.generics.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.generics.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,50 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/generics.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/generics \n+Counter in file 0 17:24 -> 19:6, #1\n+Counter in file 0 17:24 -> 19:6, #1\n+Counter in file 0 23:9 -> 28:28, #1\n+Counter in file 0 30:8 -> 30:12, (#1 + 0)\n+Counter in file 0 31:9 -> 32:22, #2\n+Counter in file 0 38:1 -> 38:2, #4\n+Counter in file 0 38:1 -> 38:2, (#2 + 0)\n+Counter in file 0 10:49 -> 12:6, #1\n+Counter in file 0 10:49 -> 12:6, #1\n+Emitting segments for file: ../coverage/generics.rs\n+Combined regions:\n+  10:49 -> 12:6 (count=3)\n+  17:24 -> 19:6 (count=2)\n+  23:9 -> 28:28 (count=1)\n+  30:8 -> 30:12 (count=1)\n+  31:9 -> 32:22 (count=1)\n+  38:1 -> 38:2 (count=2)\n+Segment at 10:49 (count = 3), RegionEntry\n+Segment at 12:6 (count = 0), Skipped\n+Segment at 17:24 (count = 2), RegionEntry\n+Segment at 19:6 (count = 0), Skipped\n+Segment at 23:9 (count = 1), RegionEntry\n+Segment at 28:28 (count = 0), Skipped\n+Segment at 30:8 (count = 1), RegionEntry\n+Segment at 30:12 (count = 0), Skipped\n+Segment at 31:9 (count = 1), RegionEntry\n+Segment at 32:22 (count = 0), Skipped\n+Segment at 38:1 (count = 2), RegionEntry\n+Segment at 38:2 (count = 0), Skipped\n+Emitting segments for function: _RNvMCs4fqI2P2rA04_8genericsINtB2_8FireworkdE12set_strengthB2_\n+Combined regions:\n+  10:49 -> 12:6 (count=2)\n+Segment at 10:49 (count = 2), RegionEntry\n+Segment at 12:6 (count = 0), Skipped\n+Emitting segments for function: _RNvMCs4fqI2P2rA04_8genericsINtB2_8FireworklE12set_strengthB2_\n+Combined regions:\n+  10:49 -> 12:6 (count=1)\n+Segment at 10:49 (count = 1), RegionEntry\n+Segment at 12:6 (count = 0), Skipped\n+Emitting segments for function: _RNvXs_Cs4fqI2P2rA04_8genericsINtB4_8FireworklENtNtNtCs7f2nZg1zwMz_4core3ops4drop4Drop4dropB4_\n+Combined regions:\n+  17:24 -> 19:6 (count=1)\n+Segment at 17:24 (count = 1), RegionEntry\n+Segment at 19:6 (count = 0), Skipped\n+Emitting segments for function: _RNvXs_Cs4fqI2P2rA04_8genericsINtB4_8FireworkdENtNtNtCs7f2nZg1zwMz_4core3ops4drop4Drop4dropB4_\n+Combined regions:\n+  17:24 -> 19:6 (count=1)\n+Segment at 17:24 (count = 1), RegionEntry\n+Segment at 19:6 (count = 0), Skipped"}, {"sha": "325e6985e3041d3b3463d9365f7460b19c753b5c", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.if.txt", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.if.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.if.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.if.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,22 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/if.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/if \n+Counter in file 0 8:5 -> 18:10, #1\n+Counter in file 0 21:9 -> 21:16, (#1 + 0)\n+Counter in file 0 22:5 -> 27:6, #2\n+Counter in file 0 27:6 -> 27:7, #3\n+Counter in file 0 28:1 -> 28:2, #4\n+Emitting segments for file: ../coverage/if.rs\n+Combined regions:\n+  8:5 -> 18:10 (count=1)\n+  21:9 -> 21:16 (count=1)\n+  22:5 -> 27:6 (count=1)\n+  27:6 -> 27:7 (count=0)\n+  28:1 -> 28:2 (count=1)\n+Segment at 8:5 (count = 1), RegionEntry\n+Segment at 18:10 (count = 0), Skipped\n+Segment at 21:9 (count = 1), RegionEntry\n+Segment at 21:16 (count = 0), Skipped\n+Segment at 22:5 (count = 1), RegionEntry\n+Segment at 27:6 (count = 0), RegionEntry\n+Segment at 27:7 (count = 0), Skipped\n+Segment at 28:1 (count = 1), RegionEntry\n+Segment at 28:2 (count = 0), Skipped"}, {"sha": "a620bf8ae4a62b0572afcb29bb3dd4f090cbffa7", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.if_else.txt", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.if_else.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.if_else.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.if_else.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,38 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/if_else.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/if_else \n+Counter in file 0 7:9 -> 11:16, #1\n+Counter in file 0 12:5 -> 17:6, #2\n+Counter in file 0 20:9 -> 22:16, #3\n+Counter in file 0 23:6 -> 23:7, (#2 + 0)\n+Counter in file 0 26:9 -> 26:16, #4\n+Counter in file 0 27:5 -> 32:6, #5\n+Counter in file 0 34:5 -> 39:6, #6\n+Counter in file 0 39:6 -> 39:7, (#5 + 0)\n+Counter in file 0 40:1 -> 40:2, #7\n+Emitting segments for file: ../coverage/if_else.rs\n+Combined regions:\n+  7:9 -> 11:16 (count=1)\n+  12:5 -> 17:6 (count=1)\n+  20:9 -> 22:16 (count=0)\n+  23:6 -> 23:7 (count=1)\n+  26:9 -> 26:16 (count=1)\n+  27:5 -> 32:6 (count=1)\n+  34:5 -> 39:6 (count=0)\n+  39:6 -> 39:7 (count=1)\n+  40:1 -> 40:2 (count=1)\n+Segment at 7:9 (count = 1), RegionEntry\n+Segment at 11:16 (count = 0), Skipped\n+Segment at 12:5 (count = 1), RegionEntry\n+Segment at 17:6 (count = 0), Skipped\n+Segment at 20:9 (count = 0), RegionEntry\n+Segment at 22:16 (count = 0), Skipped\n+Segment at 23:6 (count = 1), RegionEntry\n+Segment at 23:7 (count = 0), Skipped\n+Segment at 26:9 (count = 1), RegionEntry\n+Segment at 26:16 (count = 0), Skipped\n+Segment at 27:5 (count = 1), RegionEntry\n+Segment at 32:6 (count = 0), Skipped\n+Segment at 34:5 (count = 0), RegionEntry\n+Segment at 39:6 (count = 1), RegionEntry\n+Segment at 39:7 (count = 0), Skipped\n+Segment at 40:1 (count = 1), RegionEntry\n+Segment at 40:2 (count = 0), Skipped"}, {"sha": "ea6db9452a75cd322b7d625b791a3182f0c4c8d3", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.inner_items.txt", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.inner_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.inner_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.inner_items.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,61 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/inner_items.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/inner_items \n+Counter in file 0 19:13 -> 19:18, #1\n+Counter in file 0 20:13 -> 20:14, #2\n+Counter in file 0 20:17 -> 20:22, (#1 + 0)\n+Counter in file 0 21:9 -> 22:6, (#2 + 0)\n+Counter in file 0 7:9 -> 9:26, #1\n+Counter in file 0 10:8 -> 10:15, (#1 + 0)\n+Counter in file 0 10:16 -> 12:6, #2\n+Counter in file 0 12:6 -> 12:7, #3\n+Counter in file 0 48:8 -> 48:15, #4\n+Counter in file 0 48:16 -> 50:6, #5\n+Counter in file 0 50:6 -> 50:7, #6\n+Counter in file 0 52:9 -> 57:2, #7\n+Counter in file 0 33:42 -> 36:10, #1\n+Counter in file 0 41:37 -> 41:41, #1\n+Counter in file 0 42:13 -> 43:10, #2\n+Emitting segments for file: ../coverage/inner_items.rs\n+Combined regions:\n+  7:9 -> 9:26 (count=1)\n+  10:8 -> 10:15 (count=1)\n+  10:16 -> 12:6 (count=1)\n+  12:6 -> 12:7 (count=0)\n+  19:13 -> 19:18 (count=3)\n+  20:13 -> 20:14 (count=3)\n+  20:17 -> 20:22 (count=3)\n+  21:9 -> 22:6 (count=3)\n+  33:42 -> 36:10 (count=1)\n+  41:37 -> 41:41 (count=1)\n+  42:13 -> 43:10 (count=1)\n+  48:8 -> 48:15 (count=1)\n+  48:16 -> 50:6 (count=1)\n+  50:6 -> 50:7 (count=0)\n+  52:9 -> 57:2 (count=1)\n+Segment at 7:9 (count = 1), RegionEntry\n+Segment at 9:26 (count = 0), Skipped\n+Segment at 10:8 (count = 1), RegionEntry\n+Segment at 10:15 (count = 0), Skipped\n+Segment at 10:16 (count = 1), RegionEntry\n+Segment at 12:6 (count = 0), RegionEntry\n+Segment at 12:7 (count = 0), Skipped\n+Segment at 19:13 (count = 3), RegionEntry\n+Segment at 19:18 (count = 0), Skipped\n+Segment at 20:13 (count = 3), RegionEntry\n+Segment at 20:14 (count = 0), Skipped\n+Segment at 20:17 (count = 3), RegionEntry\n+Segment at 20:22 (count = 0), Skipped\n+Segment at 21:9 (count = 3), RegionEntry\n+Segment at 22:6 (count = 0), Skipped\n+Segment at 33:42 (count = 1), RegionEntry\n+Segment at 36:10 (count = 0), Skipped\n+Segment at 41:37 (count = 1), RegionEntry\n+Segment at 41:41 (count = 0), Skipped\n+Segment at 42:13 (count = 1), RegionEntry\n+Segment at 43:10 (count = 0), Skipped\n+Segment at 48:8 (count = 1), RegionEntry\n+Segment at 48:15 (count = 0), Skipped\n+Segment at 48:16 (count = 1), RegionEntry\n+Segment at 50:6 (count = 0), RegionEntry\n+Segment at 50:7 (count = 0), Skipped\n+Segment at 52:9 (count = 1), RegionEntry\n+Segment at 57:2 (count = 0), Skipped"}, {"sha": "0f54f4904b054d1307df2b96557da7de9f6c4285", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.lazy_boolean.txt", "status": "added", "additions": 138, "deletions": 0, "changes": 138, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.lazy_boolean.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.lazy_boolean.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.lazy_boolean.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,138 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/lazy_boolean.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/lazy_boolean \n+Counter in file 0 7:9 -> 9:42, #1\n+Counter in file 0 10:8 -> 10:15, (#1 + 0)\n+Counter in file 0 10:16 -> 14:6, #2\n+Counter in file 0 14:6 -> 14:7, #3\n+Counter in file 0 16:9 -> 16:17, #4\n+Counter in file 0 18:13 -> 18:18, #5\n+Counter in file 0 20:13 -> 20:18, #6\n+Counter in file 0 20:18 -> 20:19, #7\n+Counter in file 0 20:18 -> 20:19, #8\n+Counter in file 0 23:9 -> 23:17, #9\n+Counter in file 0 25:13 -> 25:18, (#4 + 0)\n+Counter in file 0 27:13 -> 27:18, #10\n+Counter in file 0 27:18 -> 27:19, #11\n+Counter in file 0 27:18 -> 27:19, #12\n+Counter in file 0 29:9 -> 29:17, #13\n+Counter in file 0 29:20 -> 29:25, (#9 + 0)\n+Counter in file 0 29:29 -> 29:34, #14\n+Counter in file 0 29:34 -> 29:35, #15\n+Counter in file 0 29:34 -> 29:35, #16\n+Counter in file 0 30:9 -> 30:17, #17\n+Counter in file 0 30:20 -> 30:25, (#13 + 0)\n+Counter in file 0 30:29 -> 30:34, #18\n+Counter in file 0 30:34 -> 30:35, #19\n+Counter in file 0 30:34 -> 30:35, #20\n+Counter in file 0 33:9 -> 34:16, (#17 + 0)\n+Counter in file 0 35:5 -> 38:6, #21\n+Counter in file 0 38:6 -> 38:7, #22\n+Counter in file 0 41:9 -> 41:16, #23\n+Counter in file 0 42:5 -> 45:6, #24\n+Counter in file 0 47:5 -> 50:6, #25\n+Counter in file 0 50:6 -> 50:7, (#24 + 0)\n+Counter in file 0 52:8 -> 52:16, #26\n+Counter in file 0 52:17 -> 54:6, #27\n+Counter in file 0 54:6 -> 54:7, #28\n+Counter in file 0 56:8 -> 56:15, #29\n+Counter in file 0 56:16 -> 58:6, #30\n+Counter in file 0 58:12 -> 60:6, #31\n+Counter in file 0 60:6 -> 60:7, (#30 + 0)\n+Counter in file 0 61:1 -> 61:2, #32\n+Emitting segments for file: ../coverage/lazy_boolean.rs\n+Combined regions:\n+  7:9 -> 9:42 (count=1)\n+  10:8 -> 10:15 (count=1)\n+  10:16 -> 14:6 (count=1)\n+  14:6 -> 14:7 (count=0)\n+  16:9 -> 16:17 (count=1)\n+  18:13 -> 18:18 (count=1)\n+  20:13 -> 20:18 (count=0)\n+  20:18 -> 20:19 (count=1)\n+  23:9 -> 23:17 (count=1)\n+  25:13 -> 25:18 (count=1)\n+  27:13 -> 27:18 (count=1)\n+  27:18 -> 27:19 (count=1)\n+  29:9 -> 29:17 (count=1)\n+  29:20 -> 29:25 (count=1)\n+  29:29 -> 29:34 (count=1)\n+  29:34 -> 29:35 (count=1)\n+  30:9 -> 30:17 (count=1)\n+  30:20 -> 30:25 (count=1)\n+  30:29 -> 30:34 (count=0)\n+  30:34 -> 30:35 (count=1)\n+  33:9 -> 34:16 (count=1)\n+  35:5 -> 38:6 (count=0)\n+  38:6 -> 38:7 (count=1)\n+  41:9 -> 41:16 (count=1)\n+  42:5 -> 45:6 (count=1)\n+  47:5 -> 50:6 (count=0)\n+  50:6 -> 50:7 (count=1)\n+  52:8 -> 52:16 (count=1)\n+  52:17 -> 54:6 (count=0)\n+  54:6 -> 54:7 (count=1)\n+  56:8 -> 56:15 (count=1)\n+  56:16 -> 58:6 (count=1)\n+  58:12 -> 60:6 (count=0)\n+  60:6 -> 60:7 (count=1)\n+  61:1 -> 61:2 (count=1)\n+Segment at 7:9 (count = 1), RegionEntry\n+Segment at 9:42 (count = 0), Skipped\n+Segment at 10:8 (count = 1), RegionEntry\n+Segment at 10:15 (count = 0), Skipped\n+Segment at 10:16 (count = 1), RegionEntry\n+Segment at 14:6 (count = 0), RegionEntry\n+Segment at 14:7 (count = 0), Skipped\n+Segment at 16:9 (count = 1), RegionEntry\n+Segment at 16:17 (count = 0), Skipped\n+Segment at 18:13 (count = 1), RegionEntry\n+Segment at 18:18 (count = 0), Skipped\n+Segment at 20:13 (count = 0), RegionEntry\n+Segment at 20:18 (count = 1), RegionEntry\n+Segment at 20:19 (count = 0), Skipped\n+Segment at 23:9 (count = 1), RegionEntry\n+Segment at 23:17 (count = 0), Skipped\n+Segment at 25:13 (count = 1), RegionEntry\n+Segment at 25:18 (count = 0), Skipped\n+Segment at 27:13 (count = 1), RegionEntry\n+Segment at 27:18 (count = 1), RegionEntry\n+Segment at 27:19 (count = 0), Skipped\n+Segment at 29:9 (count = 1), RegionEntry\n+Segment at 29:17 (count = 0), Skipped\n+Segment at 29:20 (count = 1), RegionEntry\n+Segment at 29:25 (count = 0), Skipped\n+Segment at 29:29 (count = 1), RegionEntry\n+Segment at 29:34 (count = 1), RegionEntry\n+Segment at 29:35 (count = 0), Skipped\n+Segment at 30:9 (count = 1), RegionEntry\n+Segment at 30:17 (count = 0), Skipped\n+Segment at 30:20 (count = 1), RegionEntry\n+Segment at 30:25 (count = 0), Skipped\n+Segment at 30:29 (count = 0), RegionEntry\n+Segment at 30:34 (count = 1), RegionEntry\n+Segment at 30:35 (count = 0), Skipped\n+Segment at 33:9 (count = 1), RegionEntry\n+Segment at 34:16 (count = 0), Skipped\n+Segment at 35:5 (count = 0), RegionEntry\n+Segment at 38:6 (count = 1), RegionEntry\n+Segment at 38:7 (count = 0), Skipped\n+Segment at 41:9 (count = 1), RegionEntry\n+Segment at 41:16 (count = 0), Skipped\n+Segment at 42:5 (count = 1), RegionEntry\n+Segment at 45:6 (count = 0), Skipped\n+Segment at 47:5 (count = 0), RegionEntry\n+Segment at 50:6 (count = 1), RegionEntry\n+Segment at 50:7 (count = 0), Skipped\n+Segment at 52:8 (count = 1), RegionEntry\n+Segment at 52:16 (count = 0), Skipped\n+Segment at 52:17 (count = 0), RegionEntry\n+Segment at 54:6 (count = 1), RegionEntry\n+Segment at 54:7 (count = 0), Skipped\n+Segment at 56:8 (count = 1), RegionEntry\n+Segment at 56:15 (count = 0), Skipped\n+Segment at 56:16 (count = 1), RegionEntry\n+Segment at 58:6 (count = 0), Skipped\n+Segment at 58:12 (count = 0), RegionEntry\n+Segment at 60:6 (count = 1), RegionEntry\n+Segment at 60:7 (count = 0), Skipped\n+Segment at 61:1 (count = 1), RegionEntry\n+Segment at 61:2 (count = 0), Skipped"}, {"sha": "3f5fc4a4401647d8f6528cd4b36c873927ec58ab", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.loop_break_value.txt", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.loop_break_value.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.loop_break_value.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.loop_break_value.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,7 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/loop_break_value.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/loop_break_value \n+Counter in file 0 3:11 -> 13:2, #1\n+Emitting segments for file: ../coverage/loop_break_value.rs\n+Combined regions:\n+  3:11 -> 13:2 (count=1)\n+Segment at 3:11 (count = 1), RegionEntry\n+Segment at 13:2 (count = 0), Skipped"}, {"sha": "ca3b1d613433332f08c08ec9e1ba4af744822d87", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.loops_and_branches.txt", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.loops_and_branches.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.loops_and_branches.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.loops_and_branches.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,39 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/loops_and_branches.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/loops_and_branches \n+Counter in file 0 10:12 -> 10:16, #1\n+Counter in file 0 11:16 -> 11:21, #2\n+Counter in file 0 14:14 -> 14:15, #6\n+Counter in file 0 15:13 -> 15:31, #7\n+Counter in file 0 15:31 -> 15:32, #8\n+Counter in file 0 17:10 -> 17:11, #10\n+Counter in file 0 18:9 -> 18:15, #11\n+Counter in file 0 19:5 -> 19:6, #12\n+Counter in file 0 19:5 -> 19:6, (#8 + 0)\n+Counter in file 0 22:11 -> 25:2, #1\n+Emitting segments for file: ../coverage/loops_and_branches.rs\n+Combined regions:\n+  10:12 -> 10:16 (count=1)\n+  11:16 -> 11:21 (count=1)\n+  14:14 -> 14:15 (count=1)\n+  15:13 -> 15:31 (count=1)\n+  15:31 -> 15:32 (count=0)\n+  17:10 -> 17:11 (count=1)\n+  18:9 -> 18:15 (count=1)\n+  19:5 -> 19:6 (count=1)\n+  22:11 -> 25:2 (count=1)\n+Segment at 10:12 (count = 1), RegionEntry\n+Segment at 10:16 (count = 0), Skipped\n+Segment at 11:16 (count = 1), RegionEntry\n+Segment at 11:21 (count = 0), Skipped\n+Segment at 14:14 (count = 1), RegionEntry\n+Segment at 14:15 (count = 0), Skipped\n+Segment at 15:13 (count = 1), RegionEntry\n+Segment at 15:31 (count = 0), RegionEntry\n+Segment at 15:32 (count = 0), Skipped\n+Segment at 17:10 (count = 1), RegionEntry\n+Segment at 17:11 (count = 0), Skipped\n+Segment at 18:9 (count = 1), RegionEntry\n+Segment at 18:15 (count = 0), Skipped\n+Segment at 19:5 (count = 1), RegionEntry\n+Segment at 19:6 (count = 0), Skipped\n+Segment at 22:11 (count = 1), RegionEntry\n+Segment at 25:2 (count = 0), Skipped"}, {"sha": "9c9c46a083404cc389f96d875ec8d06a9de70c04", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.nested_loops.txt", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.nested_loops.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.nested_loops.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.nested_loops.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,76 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/nested_loops.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/nested_loops \n+Counter in file 0 2:9 -> 3:27, #1\n+Counter in file 0 5:19 -> 5:32, #2\n+Counter in file 0 6:13 -> 7:24, #3\n+Counter in file 0 8:13 -> 8:14, #4\n+Counter in file 0 8:18 -> 8:23, #5\n+Counter in file 0 9:16 -> 9:22, (#4 + 0)\n+Counter in file 0 10:17 -> 10:22, #6\n+Counter in file 0 12:13 -> 12:19, #7\n+Counter in file 0 13:13 -> 13:19, #8\n+Counter in file 0 14:16 -> 14:22, (#8 + 0)\n+Counter in file 0 15:17 -> 16:27, #9\n+Counter in file 0 17:21 -> 17:33, #10\n+Counter in file 0 19:21 -> 21:14, #11\n+Counter in file 0 21:14 -> 21:15, #12\n+Counter in file 0 22:10 -> 22:11, #13\n+Counter in file 0 22:10 -> 22:11, (#3 + 0)\n+Counter in file 0 23:9 -> 23:23, #14\n+Counter in file 0 24:6 -> 24:7, #15\n+Counter in file 0 24:6 -> 24:7, (#1 + 0)\n+Counter in file 0 25:1 -> 25:2, #16\n+Emitting segments for file: ../coverage/nested_loops.rs\n+Combined regions:\n+  2:9 -> 3:27 (count=1)\n+  5:19 -> 5:32 (count=1)\n+  6:13 -> 7:24 (count=1)\n+  8:13 -> 8:14 (count=3)\n+  8:18 -> 8:23 (count=3)\n+  9:16 -> 9:22 (count=3)\n+  10:17 -> 10:22 (count=0)\n+  12:13 -> 12:19 (count=3)\n+  13:13 -> 13:19 (count=3)\n+  14:16 -> 14:22 (count=3)\n+  15:17 -> 16:27 (count=1)\n+  17:21 -> 17:33 (count=1)\n+  19:21 -> 21:14 (count=0)\n+  21:14 -> 21:15 (count=2)\n+  22:10 -> 22:11 (count=3)\n+  23:9 -> 23:23 (count=0)\n+  24:6 -> 24:7 (count=1)\n+  25:1 -> 25:2 (count=1)\n+Segment at 2:9 (count = 1), RegionEntry\n+Segment at 3:27 (count = 0), Skipped\n+Segment at 5:19 (count = 1), RegionEntry\n+Segment at 5:32 (count = 0), Skipped\n+Segment at 6:13 (count = 1), RegionEntry\n+Segment at 7:24 (count = 0), Skipped\n+Segment at 8:13 (count = 3), RegionEntry\n+Segment at 8:14 (count = 0), Skipped\n+Segment at 8:18 (count = 3), RegionEntry\n+Segment at 8:23 (count = 0), Skipped\n+Segment at 9:16 (count = 3), RegionEntry\n+Segment at 9:22 (count = 0), Skipped\n+Segment at 10:17 (count = 0), RegionEntry\n+Segment at 10:22 (count = 0), Skipped\n+Segment at 12:13 (count = 3), RegionEntry\n+Segment at 12:19 (count = 0), Skipped\n+Segment at 13:13 (count = 3), RegionEntry\n+Segment at 13:19 (count = 0), Skipped\n+Segment at 14:16 (count = 3), RegionEntry\n+Segment at 14:22 (count = 0), Skipped\n+Segment at 15:17 (count = 1), RegionEntry\n+Segment at 16:27 (count = 0), Skipped\n+Segment at 17:21 (count = 1), RegionEntry\n+Segment at 17:33 (count = 0), Skipped\n+Segment at 19:21 (count = 0), RegionEntry\n+Segment at 21:14 (count = 2), RegionEntry\n+Segment at 21:15 (count = 0), Skipped\n+Segment at 22:10 (count = 3), RegionEntry\n+Segment at 22:11 (count = 0), Skipped\n+Segment at 23:9 (count = 0), RegionEntry\n+Segment at 23:23 (count = 0), Skipped\n+Segment at 24:6 (count = 1), RegionEntry\n+Segment at 24:7 (count = 0), Skipped\n+Segment at 25:1 (count = 1), RegionEntry\n+Segment at 25:2 (count = 0), Skipped"}, {"sha": "dbcaa57b4b2964ff5cefc6dbc3394ff2c11dd7b0", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.partial_eq_counter_without_region.txt", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.partial_eq_counter_without_region.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.partial_eq_counter_without_region.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.partial_eq_counter_without_region.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,68 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/partial_eq_counter_without_region.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/partial_eq_counter_without_region \n+Counter in file 0 4:39 -> 4:49, #1\n+Counter in file 0 4:39 -> 4:49, #2\n+Counter in file 0 4:39 -> 4:49, #3\n+Counter in file 0 4:39 -> 4:49, #4\n+Counter in file 0 4:48 -> 4:49, #5\n+Counter in file 0 8:5 -> 8:17, #1\n+Counter in file 0 21:11 -> 26:2, #1\n+Counter in file 0 4:39 -> 4:40, #1\n+Counter in file 0 4:48 -> 4:49, (#1 + 0)\n+Counter in file 0 7:5 -> 7:6, #1\n+Counter in file 0 8:5 -> 8:17, #1\n+Counter in file 0 4:39 -> 4:40, #1\n+Counter in file 0 4:48 -> 4:49, (#1 + 0)\n+Counter in file 0 4:24 -> 4:33, #1\n+Counter in file 0 4:24 -> 4:33, #2\n+Counter in file 0 4:24 -> 4:33, #3\n+Counter in file 0 4:24 -> 4:33, #4\n+Counter in file 0 4:32 -> 4:33, #5\n+Counter in file 0 4:51 -> 4:54, #1\n+Counter in file 0 4:51 -> 4:54, #2\n+Counter in file 0 4:51 -> 4:54, #3\n+Counter in file 0 4:51 -> 4:54, #4\n+Counter in file 0 4:53 -> 4:54, #5\n+Counter in file 0 13:9 -> 18:6, #1\n+Counter in file 0 7:5 -> 7:6, #1\n+Counter in file 0 4:39 -> 4:40, #1\n+Counter in file 0 4:48 -> 4:49, (#1 + 0)\n+Counter in file 0 7:5 -> 7:6, #1\n+Counter in file 0 4:10 -> 4:15, #1\n+Counter in file 0 4:35 -> 4:37, #1\n+Counter in file 0 7:5 -> 7:6, #1\n+Counter in file 0 8:5 -> 8:17, #1\n+Counter in file 0 4:17 -> 4:22, #1\n+Counter in file 0 8:5 -> 8:17, #1\n+Counter in file 0 4:39 -> 4:40, #1\n+Counter in file 0 4:48 -> 4:49, (#1 + 0)\n+Counter in file 0 4:24 -> 4:33, #1\n+Counter in file 0 4:24 -> 4:33, #2\n+Counter in file 0 4:32 -> 4:33, #3\n+Emitting segments for file: ../coverage/partial_eq_counter_without_region.rs\n+Combined regions:\n+  4:17 -> 4:22 (count=2)\n+  4:39 -> 4:40 (count=1)\n+  4:48 -> 4:49 (count=1)\n+  7:5 -> 7:6 (count=1)\n+  13:9 -> 18:6 (count=2)\n+  21:11 -> 26:2 (count=1)\n+Segment at 4:17 (count = 2), RegionEntry\n+Segment at 4:22 (count = 0), Skipped\n+Segment at 4:39 (count = 1), RegionEntry\n+Segment at 4:40 (count = 0), Skipped\n+Segment at 4:48 (count = 1), RegionEntry\n+Segment at 4:49 (count = 0), Skipped\n+Segment at 7:5 (count = 1), RegionEntry\n+Segment at 7:6 (count = 0), Skipped\n+Segment at 13:9 (count = 2), RegionEntry\n+Segment at 18:6 (count = 0), Skipped\n+Segment at 21:11 (count = 1), RegionEntry\n+Segment at 26:2 (count = 0), Skipped\n+Emitting segments for function: _RNvXs0_Cs4fqI2P2rA04_33partial_eq_counter_without_regionNtB5_7VersionNtNtCs7f2nZg1zwMz_4core3cmp10PartialOrd2ltB5_\n+Combined regions:\n+  4:39 -> 4:40 (count=1)\n+  4:48 -> 4:49 (count=1)\n+Segment at 4:39 (count = 1), RegionEntry\n+Segment at 4:40 (count = 0), Skipped\n+Segment at 4:48 (count = 1), RegionEntry\n+Segment at 4:49 (count = 0), Skipped"}, {"sha": "90e09099dcc4f26798a7fe4a0ec693f8c8737771", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.simple_loop.txt", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.simple_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.simple_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.simple_loop.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,38 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/simple_loop.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/simple_loop \n+Counter in file 0 7:9 -> 9:26, #1\n+Counter in file 0 12:9 -> 12:16, (#1 + 0)\n+Counter in file 0 13:5 -> 18:6, #2\n+Counter in file 0 18:6 -> 18:7, #3\n+Counter in file 0 23:13 -> 25:14, #4\n+Counter in file 0 27:13 -> 27:18, #5\n+Counter in file 0 30:9 -> 32:10, #6\n+Counter in file 0 34:6 -> 34:7, #7\n+Counter in file 0 35:1 -> 35:2, (#5 + 0)\n+Emitting segments for file: ../coverage/simple_loop.rs\n+Combined regions:\n+  7:9 -> 9:26 (count=1)\n+  12:9 -> 12:16 (count=1)\n+  13:5 -> 18:6 (count=1)\n+  18:6 -> 18:7 (count=0)\n+  23:13 -> 25:14 (count=11)\n+  27:13 -> 27:18 (count=1)\n+  30:9 -> 32:10 (count=10)\n+  34:6 -> 34:7 (count=1)\n+  35:1 -> 35:2 (count=1)\n+Segment at 7:9 (count = 1), RegionEntry\n+Segment at 9:26 (count = 0), Skipped\n+Segment at 12:9 (count = 1), RegionEntry\n+Segment at 12:16 (count = 0), Skipped\n+Segment at 13:5 (count = 1), RegionEntry\n+Segment at 18:6 (count = 0), RegionEntry\n+Segment at 18:7 (count = 0), Skipped\n+Segment at 23:13 (count = 11), RegionEntry\n+Segment at 25:14 (count = 0), Skipped\n+Segment at 27:13 (count = 1), RegionEntry\n+Segment at 27:18 (count = 0), Skipped\n+Segment at 30:9 (count = 10), RegionEntry\n+Segment at 32:10 (count = 0), Skipped\n+Segment at 34:6 (count = 1), RegionEntry\n+Segment at 34:7 (count = 0), Skipped\n+Segment at 35:1 (count = 1), RegionEntry\n+Segment at 35:2 (count = 0), Skipped"}, {"sha": "39a986332cd9fea2182a55878c811d3d426e9d6b", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.simple_match.txt", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.simple_match.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.simple_match.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.simple_match.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,58 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/simple_match.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/simple_match \n+Counter in file 0 7:9 -> 9:26, #1\n+Counter in file 0 10:8 -> 10:15, (#1 + 0)\n+Counter in file 0 10:16 -> 12:6, #2\n+Counter in file 0 12:6 -> 12:7, #3\n+Counter in file 0 15:9 -> 15:10, #4\n+Counter in file 0 17:9 -> 17:13, #5\n+Counter in file 0 22:13 -> 22:22, (#4 + 0)\n+Counter in file 0 24:13 -> 24:14, #6\n+Counter in file 0 26:17 -> 28:18, (#4 + 0)\n+Counter in file 0 28:18 -> 28:19, #7\n+Counter in file 0 30:13 -> 37:14, (#6 + 0)\n+Counter in file 0 40:13 -> 40:15, #8\n+Counter in file 0 42:6 -> 42:7, #9\n+Counter in file 0 42:6 -> 42:7, #10\n+Counter in file 0 43:1 -> 43:2, #11\n+Emitting segments for file: ../coverage/simple_match.rs\n+Combined regions:\n+  7:9 -> 9:26 (count=1)\n+  10:8 -> 10:15 (count=1)\n+  10:16 -> 12:6 (count=1)\n+  12:6 -> 12:7 (count=0)\n+  15:9 -> 15:10 (count=2)\n+  17:9 -> 17:13 (count=3)\n+  22:13 -> 22:22 (count=2)\n+  24:13 -> 24:14 (count=1)\n+  26:17 -> 28:18 (count=2)\n+  28:18 -> 28:19 (count=1)\n+  30:13 -> 37:14 (count=1)\n+  40:13 -> 40:15 (count=1)\n+  42:6 -> 42:7 (count=3)\n+  43:1 -> 43:2 (count=1)\n+Segment at 7:9 (count = 1), RegionEntry\n+Segment at 9:26 (count = 0), Skipped\n+Segment at 10:8 (count = 1), RegionEntry\n+Segment at 10:15 (count = 0), Skipped\n+Segment at 10:16 (count = 1), RegionEntry\n+Segment at 12:6 (count = 0), RegionEntry\n+Segment at 12:7 (count = 0), Skipped\n+Segment at 15:9 (count = 2), RegionEntry\n+Segment at 15:10 (count = 0), Skipped\n+Segment at 17:9 (count = 3), RegionEntry\n+Segment at 17:13 (count = 0), Skipped\n+Segment at 22:13 (count = 2), RegionEntry\n+Segment at 22:22 (count = 0), Skipped\n+Segment at 24:13 (count = 1), RegionEntry\n+Segment at 24:14 (count = 0), Skipped\n+Segment at 26:17 (count = 2), RegionEntry\n+Segment at 28:18 (count = 1), RegionEntry\n+Segment at 28:19 (count = 0), Skipped\n+Segment at 30:13 (count = 1), RegionEntry\n+Segment at 37:14 (count = 0), Skipped\n+Segment at 40:13 (count = 1), RegionEntry\n+Segment at 40:15 (count = 0), Skipped\n+Segment at 42:6 (count = 3), RegionEntry\n+Segment at 42:7 (count = 0), Skipped\n+Segment at 43:1 (count = 1), RegionEntry\n+Segment at 43:2 (count = 0), Skipped"}, {"sha": "a0687815fb96788248af4ea72c16a5a717e24172", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.tight_infinite_loop.txt", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.tight_infinite_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.tight_infinite_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.tight_infinite_loop.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,11 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/tight_infinite_loop.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/tight_infinite_loop \n+Counter in file 0 2:8 -> 2:13, #1\n+Counter in file 0 5:1 -> 5:2, #4\n+Emitting segments for file: ../coverage/tight_infinite_loop.rs\n+Combined regions:\n+  2:8 -> 2:13 (count=1)\n+  5:1 -> 5:2 (count=1)\n+Segment at 2:8 (count = 1), RegionEntry\n+Segment at 2:13 (count = 0), Skipped\n+Segment at 5:1 (count = 1), RegionEntry\n+Segment at 5:2 (count = 0), Skipped"}, {"sha": "10fc52354b9b535e8da6c2062f980ac8317a51ca", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.try_error_result.txt", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.try_error_result.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.try_error_result.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.try_error_result.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,72 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/try_error_result.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/try_error_result \n+Counter in file 0 13:9 -> 14:23, #1\n+Counter in file 0 17:9 -> 17:10, #2\n+Counter in file 0 19:9 -> 19:14, #3\n+Counter in file 0 21:9 -> 25:26, #4\n+Counter in file 0 27:13 -> 27:41, #5\n+Counter in file 0 27:41 -> 27:42, #6\n+Counter in file 0 31:13 -> 31:42, #7\n+Counter in file 0 31:42 -> 31:43, #8\n+Counter in file 0 32:10 -> 32:11, #9\n+Counter in file 0 32:10 -> 32:11, #10\n+Counter in file 0 33:6 -> 33:7, #11\n+Counter in file 0 33:6 -> 33:7, (#1 + 0)\n+Counter in file 0 34:5 -> 34:11, #12\n+Counter in file 0 35:1 -> 35:2, #13\n+Counter in file 0 35:1 -> 35:2, #14\n+Counter in file 0 5:8 -> 5:20, #1\n+Counter in file 0 6:9 -> 6:16, #2\n+Counter in file 0 8:9 -> 8:15, #3\n+Counter in file 0 9:6 -> 9:7, (#2 + 0)\n+Counter in file 0 10:1 -> 10:2, #4\n+Emitting segments for file: ../coverage/try_error_result.rs\n+Combined regions:\n+  5:8 -> 5:20 (count=6)\n+  6:9 -> 6:16 (count=1)\n+  8:9 -> 8:15 (count=5)\n+  9:6 -> 9:7 (count=1)\n+  10:1 -> 10:2 (count=6)\n+  13:9 -> 14:23 (count=1)\n+  17:9 -> 17:10 (count=6)\n+  19:9 -> 19:14 (count=6)\n+  21:9 -> 25:26 (count=6)\n+  27:13 -> 27:41 (count=1)\n+  27:41 -> 27:42 (count=1)\n+  31:13 -> 31:42 (count=5)\n+  31:42 -> 31:43 (count=0)\n+  32:10 -> 32:11 (count=5)\n+  33:6 -> 33:7 (count=6)\n+  34:5 -> 34:11 (count=0)\n+  35:1 -> 35:2 (count=2)\n+Segment at 5:8 (count = 6), RegionEntry\n+Segment at 5:20 (count = 0), Skipped\n+Segment at 6:9 (count = 1), RegionEntry\n+Segment at 6:16 (count = 0), Skipped\n+Segment at 8:9 (count = 5), RegionEntry\n+Segment at 8:15 (count = 0), Skipped\n+Segment at 9:6 (count = 1), RegionEntry\n+Segment at 9:7 (count = 0), Skipped\n+Segment at 10:1 (count = 6), RegionEntry\n+Segment at 10:2 (count = 0), Skipped\n+Segment at 13:9 (count = 1), RegionEntry\n+Segment at 14:23 (count = 0), Skipped\n+Segment at 17:9 (count = 6), RegionEntry\n+Segment at 17:10 (count = 0), Skipped\n+Segment at 19:9 (count = 6), RegionEntry\n+Segment at 19:14 (count = 0), Skipped\n+Segment at 21:9 (count = 6), RegionEntry\n+Segment at 25:26 (count = 0), Skipped\n+Segment at 27:13 (count = 1), RegionEntry\n+Segment at 27:41 (count = 1), RegionEntry\n+Segment at 27:42 (count = 0), Skipped\n+Segment at 31:13 (count = 5), RegionEntry\n+Segment at 31:42 (count = 0), RegionEntry\n+Segment at 31:43 (count = 0), Skipped\n+Segment at 32:10 (count = 5), RegionEntry\n+Segment at 32:11 (count = 0), Skipped\n+Segment at 33:6 (count = 6), RegionEntry\n+Segment at 33:7 (count = 0), Skipped\n+Segment at 34:5 (count = 0), RegionEntry\n+Segment at 34:11 (count = 0), Skipped\n+Segment at 35:1 (count = 2), RegionEntry\n+Segment at 35:2 (count = 0), Skipped"}, {"sha": "567c8cd9b6df039ad6a3f1b6330bb60c8a80bd25", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.various_conditions.txt", "status": "added", "additions": 240, "deletions": 0, "changes": 240, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.various_conditions.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.various_conditions.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.various_conditions.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,240 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/various_conditions.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/various_conditions \n+Counter in file 0 4:9 -> 4:26, #1\n+Counter in file 0 5:8 -> 5:12, (#1 + 0)\n+Counter in file 0 5:13 -> 7:6, #2\n+Counter in file 0 10:9 -> 10:10, #4\n+Counter in file 0 10:16 -> 10:29, #5\n+Counter in file 0 11:9 -> 12:10, #6\n+Counter in file 0 13:15 -> 13:28, #7\n+Counter in file 0 14:12 -> 14:25, #8\n+Counter in file 0 14:29 -> 14:42, #9\n+Counter in file 0 14:42 -> 14:43, #10\n+Counter in file 0 14:42 -> 14:43, #11\n+Counter in file 0 14:46 -> 14:60, #12\n+Counter in file 0 14:60 -> 14:61, #13\n+Counter in file 0 14:60 -> 14:61, #14\n+Counter in file 0 14:61 -> 16:10, #15\n+Counter in file 0 16:10 -> 16:11, #16\n+Counter in file 0 17:9 -> 18:18, #17\n+Counter in file 0 20:9 -> 20:15, #18\n+Counter in file 0 23:9 -> 23:26, (#4 + 0)\n+Counter in file 0 24:8 -> 24:12, (#4 + 0)\n+Counter in file 0 24:13 -> 26:6, #19\n+Counter in file 0 28:8 -> 28:21, #21\n+Counter in file 0 29:9 -> 29:23, #22\n+Counter in file 0 30:15 -> 30:28, #23\n+Counter in file 0 31:12 -> 31:25, #24\n+Counter in file 0 31:29 -> 31:42, #25\n+Counter in file 0 31:42 -> 31:43, #26\n+Counter in file 0 31:42 -> 31:43, #27\n+Counter in file 0 31:46 -> 31:60, #28\n+Counter in file 0 31:60 -> 31:61, #29\n+Counter in file 0 31:60 -> 31:61, #30\n+Counter in file 0 31:61 -> 33:10, #31\n+Counter in file 0 33:10 -> 33:11, #32\n+Counter in file 0 34:9 -> 34:23, #33\n+Counter in file 0 36:9 -> 36:15, #34\n+Counter in file 0 39:9 -> 39:26, #35\n+Counter in file 0 40:8 -> 40:12, (#35 + 0)\n+Counter in file 0 40:13 -> 42:6, #36\n+Counter in file 0 44:9 -> 44:10, #38\n+Counter in file 0 44:16 -> 44:29, #39\n+Counter in file 0 45:9 -> 45:23, #40\n+Counter in file 0 46:15 -> 46:28, #41\n+Counter in file 0 47:12 -> 47:25, #42\n+Counter in file 0 47:29 -> 47:42, #43\n+Counter in file 0 47:42 -> 47:43, #44\n+Counter in file 0 47:42 -> 47:43, #45\n+Counter in file 0 47:46 -> 47:60, #46\n+Counter in file 0 47:60 -> 47:61, #47\n+Counter in file 0 47:60 -> 47:61, #48\n+Counter in file 0 47:61 -> 49:10, #49\n+Counter in file 0 49:10 -> 49:11, #50\n+Counter in file 0 50:9 -> 50:23, #51\n+Counter in file 0 52:13 -> 54:15, #52\n+Counter in file 0 57:9 -> 57:10, #53\n+Counter in file 0 57:16 -> 57:29, (#38 + 0)\n+Counter in file 0 58:9 -> 58:23, #54\n+Counter in file 0 59:15 -> 59:28, #55\n+Counter in file 0 60:12 -> 60:25, #56\n+Counter in file 0 60:29 -> 60:42, #57\n+Counter in file 0 60:42 -> 60:43, #58\n+Counter in file 0 60:42 -> 60:43, #59\n+Counter in file 0 60:46 -> 60:60, #60\n+Counter in file 0 60:60 -> 60:61, #61\n+Counter in file 0 60:60 -> 60:61, #62\n+Counter in file 0 60:61 -> 62:10, #63\n+Counter in file 0 62:10 -> 62:11, #64\n+Counter in file 0 63:9 -> 63:23, #65\n+Counter in file 0 65:9 -> 65:15, #66\n+Counter in file 0 67:1 -> 67:2, #67\n+Counter in file 0 67:1 -> 67:2, #68\n+Emitting segments for file: ../coverage/various_conditions.rs\n+Combined regions:\n+  4:9 -> 4:26 (count=1)\n+  5:8 -> 5:12 (count=1)\n+  5:13 -> 7:6 (count=1)\n+  10:9 -> 10:10 (count=1)\n+  10:16 -> 10:29 (count=1)\n+  11:9 -> 12:10 (count=1)\n+  13:15 -> 13:28 (count=0)\n+  14:12 -> 14:25 (count=0)\n+  14:29 -> 14:42 (count=0)\n+  14:42 -> 14:43 (count=0)\n+  14:46 -> 14:60 (count=0)\n+  14:60 -> 14:61 (count=0)\n+  14:61 -> 16:10 (count=0)\n+  16:10 -> 16:11 (count=0)\n+  17:9 -> 18:18 (count=0)\n+  20:9 -> 20:15 (count=0)\n+  23:9 -> 23:26 (count=1)\n+  24:8 -> 24:12 (count=1)\n+  24:13 -> 26:6 (count=1)\n+  28:8 -> 28:21 (count=1)\n+  29:9 -> 29:23 (count=1)\n+  30:15 -> 30:28 (count=0)\n+  31:12 -> 31:25 (count=0)\n+  31:29 -> 31:42 (count=0)\n+  31:42 -> 31:43 (count=0)\n+  31:46 -> 31:60 (count=0)\n+  31:60 -> 31:61 (count=0)\n+  31:61 -> 33:10 (count=0)\n+  33:10 -> 33:11 (count=0)\n+  34:9 -> 34:23 (count=0)\n+  36:9 -> 36:15 (count=0)\n+  39:9 -> 39:26 (count=1)\n+  40:8 -> 40:12 (count=1)\n+  40:13 -> 42:6 (count=1)\n+  44:9 -> 44:10 (count=0)\n+  44:16 -> 44:29 (count=1)\n+  45:9 -> 45:23 (count=0)\n+  46:15 -> 46:28 (count=1)\n+  47:12 -> 47:25 (count=0)\n+  47:29 -> 47:42 (count=0)\n+  47:42 -> 47:43 (count=0)\n+  47:46 -> 47:60 (count=0)\n+  47:60 -> 47:61 (count=0)\n+  47:61 -> 49:10 (count=0)\n+  49:10 -> 49:11 (count=0)\n+  50:9 -> 50:23 (count=0)\n+  52:13 -> 54:15 (count=1)\n+  57:9 -> 57:10 (count=0)\n+  57:16 -> 57:29 (count=0)\n+  58:9 -> 58:23 (count=0)\n+  59:15 -> 59:28 (count=0)\n+  60:12 -> 60:25 (count=0)\n+  60:29 -> 60:42 (count=0)\n+  60:42 -> 60:43 (count=0)\n+  60:46 -> 60:60 (count=0)\n+  60:60 -> 60:61 (count=0)\n+  60:61 -> 62:10 (count=0)\n+  62:10 -> 62:11 (count=0)\n+  63:9 -> 63:23 (count=0)\n+  65:9 -> 65:15 (count=0)\n+  67:1 -> 67:2 (count=2)\n+Segment at 4:9 (count = 1), RegionEntry\n+Segment at 4:26 (count = 0), Skipped\n+Segment at 5:8 (count = 1), RegionEntry\n+Segment at 5:12 (count = 0), Skipped\n+Segment at 5:13 (count = 1), RegionEntry\n+Segment at 7:6 (count = 0), Skipped\n+Segment at 10:9 (count = 1), RegionEntry\n+Segment at 10:10 (count = 0), Skipped\n+Segment at 10:16 (count = 1), RegionEntry\n+Segment at 10:29 (count = 0), Skipped\n+Segment at 11:9 (count = 1), RegionEntry\n+Segment at 12:10 (count = 0), Skipped\n+Segment at 13:15 (count = 0), RegionEntry\n+Segment at 13:28 (count = 0), Skipped\n+Segment at 14:12 (count = 0), RegionEntry\n+Segment at 14:25 (count = 0), Skipped\n+Segment at 14:29 (count = 0), RegionEntry\n+Segment at 14:42 (count = 0), RegionEntry\n+Segment at 14:43 (count = 0), Skipped\n+Segment at 14:46 (count = 0), RegionEntry\n+Segment at 14:60 (count = 0), RegionEntry\n+Segment at 14:61 (count = 0), RegionEntry\n+Segment at 16:10 (count = 0), RegionEntry\n+Segment at 16:11 (count = 0), Skipped\n+Segment at 17:9 (count = 0), RegionEntry\n+Segment at 18:18 (count = 0), Skipped\n+Segment at 20:9 (count = 0), RegionEntry\n+Segment at 20:15 (count = 0), Skipped\n+Segment at 23:9 (count = 1), RegionEntry\n+Segment at 23:26 (count = 0), Skipped\n+Segment at 24:8 (count = 1), RegionEntry\n+Segment at 24:12 (count = 0), Skipped\n+Segment at 24:13 (count = 1), RegionEntry\n+Segment at 26:6 (count = 0), Skipped\n+Segment at 28:8 (count = 1), RegionEntry\n+Segment at 28:21 (count = 0), Skipped\n+Segment at 29:9 (count = 1), RegionEntry\n+Segment at 29:23 (count = 0), Skipped\n+Segment at 30:15 (count = 0), RegionEntry\n+Segment at 30:28 (count = 0), Skipped\n+Segment at 31:12 (count = 0), RegionEntry\n+Segment at 31:25 (count = 0), Skipped\n+Segment at 31:29 (count = 0), RegionEntry\n+Segment at 31:42 (count = 0), RegionEntry\n+Segment at 31:43 (count = 0), Skipped\n+Segment at 31:46 (count = 0), RegionEntry\n+Segment at 31:60 (count = 0), RegionEntry\n+Segment at 31:61 (count = 0), RegionEntry\n+Segment at 33:10 (count = 0), RegionEntry\n+Segment at 33:11 (count = 0), Skipped\n+Segment at 34:9 (count = 0), RegionEntry\n+Segment at 34:23 (count = 0), Skipped\n+Segment at 36:9 (count = 0), RegionEntry\n+Segment at 36:15 (count = 0), Skipped\n+Segment at 39:9 (count = 1), RegionEntry\n+Segment at 39:26 (count = 0), Skipped\n+Segment at 40:8 (count = 1), RegionEntry\n+Segment at 40:12 (count = 0), Skipped\n+Segment at 40:13 (count = 1), RegionEntry\n+Segment at 42:6 (count = 0), Skipped\n+Segment at 44:9 (count = 0), RegionEntry\n+Segment at 44:10 (count = 0), Skipped\n+Segment at 44:16 (count = 1), RegionEntry\n+Segment at 44:29 (count = 0), Skipped\n+Segment at 45:9 (count = 0), RegionEntry\n+Segment at 45:23 (count = 0), Skipped\n+Segment at 46:15 (count = 1), RegionEntry\n+Segment at 46:28 (count = 0), Skipped\n+Segment at 47:12 (count = 0), RegionEntry\n+Segment at 47:25 (count = 0), Skipped\n+Segment at 47:29 (count = 0), RegionEntry\n+Segment at 47:42 (count = 0), RegionEntry\n+Segment at 47:43 (count = 0), Skipped\n+Segment at 47:46 (count = 0), RegionEntry\n+Segment at 47:60 (count = 0), RegionEntry\n+Segment at 47:61 (count = 0), RegionEntry\n+Segment at 49:10 (count = 0), RegionEntry\n+Segment at 49:11 (count = 0), Skipped\n+Segment at 50:9 (count = 0), RegionEntry\n+Segment at 50:23 (count = 0), Skipped\n+Segment at 52:13 (count = 1), RegionEntry\n+Segment at 54:15 (count = 0), Skipped\n+Segment at 57:9 (count = 0), RegionEntry\n+Segment at 57:10 (count = 0), Skipped\n+Segment at 57:16 (count = 0), RegionEntry\n+Segment at 57:29 (count = 0), Skipped\n+Segment at 58:9 (count = 0), RegionEntry\n+Segment at 58:23 (count = 0), Skipped\n+Segment at 59:15 (count = 0), RegionEntry\n+Segment at 59:28 (count = 0), Skipped\n+Segment at 60:12 (count = 0), RegionEntry\n+Segment at 60:25 (count = 0), Skipped\n+Segment at 60:29 (count = 0), RegionEntry\n+Segment at 60:42 (count = 0), RegionEntry\n+Segment at 60:43 (count = 0), Skipped\n+Segment at 60:46 (count = 0), RegionEntry\n+Segment at 60:60 (count = 0), RegionEntry\n+Segment at 60:61 (count = 0), RegionEntry\n+Segment at 62:10 (count = 0), RegionEntry\n+Segment at 62:11 (count = 0), Skipped\n+Segment at 63:9 (count = 0), RegionEntry\n+Segment at 63:23 (count = 0), Skipped\n+Segment at 65:9 (count = 0), RegionEntry\n+Segment at 65:15 (count = 0), Skipped\n+Segment at 67:1 (count = 2), RegionEntry\n+Segment at 67:2 (count = 0), Skipped"}, {"sha": "1aad1a3c83b85fc5aedfb9efb700998e9bb86b0f", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.while.txt", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.while.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.while.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.while.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,22 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/while.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/while \n+Counter in file 0 2:9 -> 2:16, #1\n+Counter in file 0 3:11 -> 3:20, #2\n+Counter in file 0 3:21 -> 4:6, #3\n+Counter in file 0 4:6 -> 4:7, (#3 + 0)\n+Counter in file 0 5:1 -> 5:2, #4\n+Emitting segments for file: ../coverage/while.rs\n+Combined regions:\n+  2:9 -> 2:16 (count=1)\n+  3:11 -> 3:20 (count=1)\n+  3:21 -> 4:6 (count=0)\n+  4:6 -> 4:7 (count=0)\n+  5:1 -> 5:2 (count=1)\n+Segment at 2:9 (count = 1), RegionEntry\n+Segment at 2:16 (count = 0), Skipped\n+Segment at 3:11 (count = 1), RegionEntry\n+Segment at 3:20 (count = 0), Skipped\n+Segment at 3:21 (count = 0), RegionEntry\n+Segment at 4:6 (count = 0), RegionEntry\n+Segment at 4:7 (count = 0), Skipped\n+Segment at 5:1 (count = 1), RegionEntry\n+Segment at 5:2 (count = 0), Skipped"}, {"sha": "7c24ea22d67e1cdc96f6c6dddc7d1a2713825a34", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.while_early_return.txt", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.while_early_return.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.while_early_return.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.while_early_return.txt?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,44 @@\n+Args: /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/llvm/build/bin/llvm-cov show --debug --Xdemangler=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/rust-demangler --show-line-counts-or-regions --instr-profile=/usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/while_early_return.profdata /usr/local/google/home/richkadel/rust/build/x86_64-unknown-linux-gnu/test/run-make-fulldeps/coverage-reports-deadcode/coverage-reports-deadcode/while_early_return \n+Counter in file 0 5:9 -> 5:27, #1\n+Counter in file 0 7:9 -> 9:10, #2\n+Counter in file 0 12:13 -> 14:14, #3\n+Counter in file 0 18:21 -> 20:22, #4\n+Counter in file 0 22:21 -> 22:27, #5\n+Counter in file 0 26:21 -> 26:27, #6\n+Counter in file 0 27:18 -> 27:19, (#5 + 0)\n+Counter in file 0 30:9 -> 32:10, #7\n+Counter in file 0 35:5 -> 35:11, #8\n+Counter in file 0 36:1 -> 36:2, #9\n+Counter in file 0 36:1 -> 36:2, #10\n+Emitting segments for file: ../coverage/while_early_return.rs\n+Combined regions:\n+  5:9 -> 5:27 (count=1)\n+  7:9 -> 9:10 (count=7)\n+  12:13 -> 14:14 (count=7)\n+  18:21 -> 20:22 (count=1)\n+  22:21 -> 22:27 (count=0)\n+  26:21 -> 26:27 (count=1)\n+  27:18 -> 27:19 (count=0)\n+  30:9 -> 32:10 (count=6)\n+  35:5 -> 35:11 (count=0)\n+  36:1 -> 36:2 (count=2)\n+Segment at 5:9 (count = 1), RegionEntry\n+Segment at 5:27 (count = 0), Skipped\n+Segment at 7:9 (count = 7), RegionEntry\n+Segment at 9:10 (count = 0), Skipped\n+Segment at 12:13 (count = 7), RegionEntry\n+Segment at 14:14 (count = 0), Skipped\n+Segment at 18:21 (count = 1), RegionEntry\n+Segment at 20:22 (count = 0), Skipped\n+Segment at 22:21 (count = 0), RegionEntry\n+Segment at 22:27 (count = 0), Skipped\n+Segment at 26:21 (count = 1), RegionEntry\n+Segment at 26:27 (count = 0), Skipped\n+Segment at 27:18 (count = 0), RegionEntry\n+Segment at 27:19 (count = 0), Skipped\n+Segment at 30:9 (count = 6), RegionEntry\n+Segment at 32:10 (count = 0), Skipped\n+Segment at 35:5 (count = 0), RegionEntry\n+Segment at 35:11 (count = 0), Skipped\n+Segment at 36:1 (count = 2), RegionEntry\n+Segment at 36:2 (count = 0), Skipped"}, {"sha": "0f076a93c0977f0832a326bbf976633f2014c30e", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.closure/closure.main-{closure#0}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -65,16 +65,19 @@\n 35:13-35:26: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n 36:12-36:20: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n-36:21-38:10: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+36:21-38:10: @3[1]: _3 = const ()\n+38:10-38:10: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n-36:21-38:10: @3[1]: _3 = const ()\">            countdown = 10;</span></span>\n+36:21-38:10: @3[1]: _3 = const ()\n+38:10-38:10: @3.Goto: goto -&gt; bb4\">            countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n-36:21-38:10: @3[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"39:9-39:23: @4[4]: _6 = const &quot;alt string 2&quot;\n+36:21-38:10: @3[1]: _3 = const ()\n+38:10-38:10: @3.Goto: goto -&gt; bb4\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"38:10-38:10: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:9-39:23: @4[4]: _6 = const &quot;alt string 2&quot;\n 39:9-39:23: @4[5]: _5 = &amp;(*_6)\n 39:9-39:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n 40:6-40:6: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 2\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"39:9-39:23: @4[4]: _6 = const &quot;alt string 2&quot;\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"39:9-39:23: @4[4]: _6 = const &quot;alt string 2&quot;\n 39:9-39:23: @4[5]: _5 = &amp;(*_6)\n 39:9-39:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n 40:6-40:6: @5.Return: return\">    }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>"}, {"sha": "bc78a604e311e82edb8de43155dc40b0da586dac", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.closure/closure.main-{closure#1}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -65,16 +65,19 @@\n 77:13-77:26: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n 78:12-78:20: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n-78:21-80:10: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+78:21-80:10: @3[1]: _3 = const ()\n+80:10-80:10: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n-78:21-80:10: @3[1]: _3 = const ()\">            countdown = 10;</span></span>\n+78:21-80:10: @3[1]: _3 = const ()\n+80:10-80:10: @3.Goto: goto -&gt; bb4\">            countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n-78:21-80:10: @3[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"81:9-81:23: @4[4]: _6 = const &quot;alt string 4&quot;\n+78:21-80:10: @3[1]: _3 = const ()\n+80:10-80:10: @3.Goto: goto -&gt; bb4\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"80:10-80:10: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"81:9-81:23: @4[4]: _6 = const &quot;alt string 4&quot;\n 81:9-81:23: @4[5]: _5 = &amp;(*_6)\n 81:9-81:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n 82:6-82:6: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 4\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"81:9-81:23: @4[4]: _6 = const &quot;alt string 4&quot;\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"81:9-81:23: @4[4]: _6 = const &quot;alt string 4&quot;\n 81:9-81:23: @4[5]: _5 = &amp;(*_6)\n 81:9-81:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n 82:6-82:6: @5.Return: return\">    }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>"}, {"sha": "b0db2311730b0a9510b6ab4489b7fa5088d9e936", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.closure/closure.main-{closure#2}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -65,16 +65,19 @@\n 20:21-20:34: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n 21:20-21:28: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n-21:29-23:18: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+21:29-23:18: @3[1]: _3 = const ()\n+23:18-23:18: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n-21:29-23:18: @3[1]: _3 = const ()\">                    countdown = 10;</span></span>\n+21:29-23:18: @3[1]: _3 = const ()\n+23:18-23:18: @3.Goto: goto -&gt; bb4\">                    countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n-21:29-23:18: @3[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:17-24:31: @4[4]: _6 = const &quot;alt string 1&quot;\n+21:29-23:18: @3[1]: _3 = const ()\n+23:18-23:18: @3.Goto: goto -&gt; bb4\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:18-23:18: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:17-24:31: @4[4]: _6 = const &quot;alt string 1&quot;\n 24:17-24:31: @4[5]: _5 = &amp;(*_6)\n 24:17-24:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n 25:14-25:14: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 1\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"24:17-24:31: @4[4]: _6 = const &quot;alt string 1&quot;\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"24:17-24:31: @4[4]: _6 = const &quot;alt string 1&quot;\n 24:17-24:31: @4[5]: _5 = &amp;(*_6)\n 24:17-24:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n 25:14-25:14: @5.Return: return\">            }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>"}, {"sha": "ca07a8d3ce5b8facc9f2cf3f8f9f5a9ef1a2804c", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.closure/closure.main-{closure#3}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -65,16 +65,19 @@\n 62:21-62:34: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n 63:20-63:28: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n-63:29-65:18: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+63:29-65:18: @3[1]: _3 = const ()\n+65:18-65:18: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n-63:29-65:18: @3[1]: _3 = const ()\">                    countdown = 10;</span></span>\n+63:29-65:18: @3[1]: _3 = const ()\n+65:18-65:18: @3.Goto: goto -&gt; bb4\">                    countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n-63:29-65:18: @3[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"66:17-66:31: @4[4]: _6 = const &quot;alt string 3&quot;\n+63:29-65:18: @3[1]: _3 = const ()\n+65:18-65:18: @3.Goto: goto -&gt; bb4\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"65:18-65:18: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"66:17-66:31: @4[4]: _6 = const &quot;alt string 3&quot;\n 66:17-66:31: @4[5]: _5 = &amp;(*_6)\n 66:17-66:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n 67:14-67:14: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 3\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"66:17-66:31: @4[4]: _6 = const &quot;alt string 3&quot;\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"66:17-66:31: @4[4]: _6 = const &quot;alt string 3&quot;\n 66:17-66:31: @4[5]: _5 = &amp;(*_6)\n 66:17-66:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n 67:14-67:14: @5.Return: return\">            }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>"}, {"sha": "325b6c64345a40949acf913962b3adc128b4c85a", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.drop_trait/drop_trait.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -114,6 +114,6 @@\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n 26:8-26:10: @6[2]: _19 = ()\n 26:5-26:11: @6[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\">    Ok(())<span class=\"annotation\">\u2989@2,6,7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:2-27:2: @11.Return: return\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:2-27:2: @10.Goto: goto -&gt; bb11\"><span class=\"annotation\">@1,3,4,5,9,10\u298a</span>\u2038<span class=\"annotation\">\u2989@1,3,4,5,9,10</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:2-27:2: @8.Goto: goto -&gt; bb11\"><span class=\"annotation\">@2,6,7,8\u298a</span>\u2038<span class=\"annotation\">\u2989@2,6,7,8</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:2-27:2: @11.Return: return\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "55d7e8bfbae1856d54be62a4e232155fa167bc38", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.generics/generics.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -162,6 +162,6 @@\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:13-35:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n 37:8-37:10: @9[2]: _25 = ()\n 37:5-37:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">    Ok(())<span class=\"annotation\">\u2989@5,9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:2-38:2: @14.Return: return\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:2-38:2: @13.Goto: goto -&gt; bb14\"><span class=\"annotation\">@4,6,7,8,12,13\u298a</span>\u2038<span class=\"annotation\">\u2989@4,6,7,8,12,13</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"38:2-38:2: @11.Goto: goto -&gt; bb14\"><span class=\"annotation\">@5,9,10,11\u298a</span>\u2038<span class=\"annotation\">\u2989@5,9,10,11</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:2-38:2: @14.Return: return\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "0d4b940214e398e4af2b1689cad50b6d6192803d", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.if/if.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -146,17 +146,23 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:9-21:16: @3[5]: _6 = _1\n 21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+22:5-27:6: @6[1]: _0 = const ()\n+27:6-27:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\">        countdown</span></span>\n+22:5-27:6: @6[1]: _0 = const ()\n+27:6-27:6: @6.Goto: goto -&gt; bb7\">        countdown</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\">        =</span></span>\n+22:5-27:6: @6[1]: _0 = const ()\n+27:6-27:6: @6.Goto: goto -&gt; bb7\">        =</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\">            10</span></span>\n+22:5-27:6: @6[1]: _0 = const ()\n+27:6-27:6: @6.Goto: goto -&gt; bb7\">            10</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\">        ;</span></span>\n+22:5-27:6: @6[1]: _0 = const ()\n+27:6-27:6: @6.Goto: goto -&gt; bb7\">        ;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:2-28:2: @7.Return: return\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span></span></div>\n+22:5-27:6: @6[1]: _0 = const ()\n+27:6-27:6: @6.Goto: goto -&gt; bb7\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:6-27:6: @5.Goto: goto -&gt; bb7\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:2-28:2: @7.Return: return\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "094dacde9868d5e46865ba01140cc366461de725", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.if_else/if_else.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -128,36 +128,36 @@\n 20:9-22:16: @5[1]: _6 = const ()\">        =</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"20:9-22:16: @5[0]: _5 = const 100_i32\n 20:9-22:16: @5[1]: _6 = const ()\">            100<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:6-23:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>\u2038<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:9-26:16: @7[3]: _8 = _1\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"26:9-26:16: @7[3]: _8 = _1\n 26:9-26:16: @7[4]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@7\u298a</span>is_true<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n 27:5-32:6: @10[1]: _0 = const ()\"><span class=\"annotation\">@8,10\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n 27:5-32:6: @10[1]: _0 = const ()\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n 27:5-32:6: @10[1]: _0 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n 27:5-32:6: @10[1]: _0 = const ()\">            10</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n 27:5-32:6: @10[1]: _0 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n 27:5-32:6: @10[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@8,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    else</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n 34:5-39:6: @9[1]: _0 = const ()\"><span class=\"annotation\">@9\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n 34:5-39:6: @9[1]: _0 = const ()\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n 34:5-39:6: @9[1]: _0 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n 34:5-39:6: @9[1]: _0 = const ()\">            100</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n 34:5-39:6: @9[1]: _0 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n-34:5-39:6: @9[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+34:5-39:6: @9[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@9</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:6-39:6: @10.Goto: goto -&gt; bb11\"><span class=\"annotation\">@8,10\u298a</span>\u2038<span class=\"annotation\">\u2989@8,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:2-40:2: @11.Return: return\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "7f1262a6abf0a0ab940ac39402d8f057db589bee", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.inner_items/inner_items.main-in_func.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -63,8 +63,7 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n 19:13-19:14: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>b = 1<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:13-20:14: @1[3]: FakeRead(ForLet, _3)\"><span class=\"annotation\">@1,2,3,4\u298a</span>c<span class=\"annotation\">\u2989@1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:17-20:18: @0[5]: _4 = _1\n-20:21-20:22: @0[7]: _5 = _2\n-20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\"><span class=\"annotation\">@0\u298a</span>a + b<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+20:21-20:22: @0[7]: _5 = _2\"><span class=\"annotation\">@0\u298a</span>a + b<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n 21:18-21:26: @1[10]: _11 = &amp;(*_23)\n 21:18-21:26: @1[11]: _10 = &amp;(*_11)"}, {"sha": "c9e0fe3121121f5bdce2582e0fdbc5252897a856", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.inner_items/inner_items.main-{impl#0}-trait_func.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -60,8 +60,7 @@\n </head>\n <body>\n <div class=\"code\" style=\"counter-reset: line 39\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">fn trait_func(&amp;mut self, incr: u32) {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\n-41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\"><span class=\"annotation\">@0\u298a</span>self.in_struct_field += incr<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            self.in_struct_field += </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\"><span class=\"annotation\">@0\u298a</span>incr<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n 42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n 43:10-43:10: @2.Return: return\"><span class=\"annotation\">@1,2\u298a</span>in_func(self.in_struct_field);</span></span>"}, {"sha": "ec3517ec9edddff0477808cf5046a41c114b4c96", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.inner_items/inner_items.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -86,11 +86,14 @@\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 0<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:8-10:15: @3[6]: _7 = _1\n 10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n-10:16-12:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+10:16-12:6: @6[1]: _6 = const ()\n+12:6-12:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n-10:16-12:6: @6[1]: _6 = const ()\">        countdown = 10;</span></span>\n+10:16-12:6: @6[1]: _6 = const ()\n+12:6-12:6: @6.Goto: goto -&gt; bb7\">        countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n-10:16-12:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+10:16-12:6: @6[1]: _6 = const ()\n+12:6-12:6: @6.Goto: goto -&gt; bb7\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:6-12:6: @5.Goto: goto -&gt; bb7\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    mod in_mod {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        const IN_MOD_CONST: u32 = 1000;</span></span>\n@@ -126,16 +129,19 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    type InType = String;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"48:8-48:15: @7[4]: _9 = _1\n-48:8-48:15: @7[5]: FakeRead(ForMatchedPlace, _9)\"><span class=\"annotation\">@7\u298a</span>is_true<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"48:8-48:15: @7[4]: _9 = _1\n+48:8-48:15: @7[5]: FakeRead(ForMatchedPlace, _9)\"><span class=\"annotation\">@7\u298a</span>is_true<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n 49:9-49:27: @10.Call: _10 = in_func(move _11) -&gt; [return: bb11, unwind: bb15]\n-48:16-50:6: @11[2]: _8 = const ()\"><span class=\"annotation\">@8,10,11\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n+48:16-50:6: @11[2]: _8 = const ()\n+50:6-50:6: @11.Goto: goto -&gt; bb12\"><span class=\"annotation\">@8,10,11\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n 49:9-49:27: @10.Call: _10 = in_func(move _11) -&gt; [return: bb11, unwind: bb15]\n-48:16-50:6: @11[2]: _8 = const ()\">        in_func(countdown);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n+48:16-50:6: @11[2]: _8 = const ()\n+50:6-50:6: @11.Goto: goto -&gt; bb12\">        in_func(countdown);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n 49:9-49:27: @10.Call: _10 = in_func(move _11) -&gt; [return: bb11, unwind: bb15]\n-48:16-50:6: @11[2]: _8 = const ()\">    }<span class=\"annotation\">\u2989@8,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+48:16-50:6: @11[2]: _8 = const ()\n+50:6-50:6: @11.Goto: goto -&gt; bb12\">    }<span class=\"annotation\">\u2989@8,10,11</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:6-50:6: @9.Goto: goto -&gt; bb12\"><span class=\"annotation\">@9\u298a</span>\u2038<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n 52:9-52:16: @12[4]: FakeRead(ForLet, _12)"}, {"sha": "636341055dc0894d9a3b3ea6ebf074245a917453", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.lazy_boolean/lazy_boolean.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 101, "deletions": 42, "changes": 143, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -63,27 +63,27 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb25]\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb24]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb25]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb24]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb25]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb24]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n@@ -94,67 +94,126 @@\n 10:8-10:15: @3[13]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n 12:9-12:15: @6[1]: _6 = const 10_i32\n 13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+10:16-14:6: @6[3]: _9 = const ()\n+14:6-14:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n 12:9-12:15: @6[1]: _6 = const 10_i32\n 13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\">        a = 1;</span></span>\n+10:16-14:6: @6[3]: _9 = const ()\n+14:6-14:6: @6.Goto: goto -&gt; bb7\">        a = 1;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n 12:9-12:15: @6[1]: _6 = const 10_i32\n 13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\">        b = 10;</span></span>\n+10:16-14:6: @6[3]: _9 = const ()\n+14:6-14:6: @6.Goto: goto -&gt; bb7\">        b = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n 12:9-12:15: @6[1]: _6 = const 10_i32\n 13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\">        c = 100;</span></span>\n+10:16-14:6: @6[3]: _9 = const ()\n+14:6-14:6: @6.Goto: goto -&gt; bb7\">        c = 100;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n 12:9-12:15: @6[1]: _6 = const 10_i32\n 13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+10:16-14:6: @6[3]: _9 = const ()\n+14:6-14:6: @6.Goto: goto -&gt; bb7\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:6-14:6: @5.Goto: goto -&gt; bb7\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:9-16:17: @11[2]: FakeRead(ForLet, _11)\"><span class=\"annotation\">@11\u298a</span>somebool<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:9-16:17: @11[2]: FakeRead(ForLet, _11)\"><span class=\"annotation\">@11\u298a</span>somebool<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:14: @7[5]: _13 = _5\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:13-18:14: @7[5]: _13 = _5\n 18:17-18:18: @7[7]: _14 = _6\n 18:13-18:18: @7[8]: _12 = Lt(move _13, move _14)\"><span class=\"annotation\">@7\u298a</span>a &lt; b<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:13-20:14: @10[2]: _16 = _6\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:13-20:14: @10[2]: _16 = _6\n 20:17-20:18: @10[4]: _17 = _7\n-20:13-20:18: @10[5]: _15 = Lt(move _16, move _17)\"><span class=\"annotation\">@10\u298a</span>b &lt; c<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+20:13-20:18: @10[5]: _15 = Lt(move _16, move _17)\"><span class=\"annotation\">@10\u298a</span>b &lt; c<span class=\"annotation\">\u2989@10</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:18-20:18: @8.Goto: goto -&gt; bb11\"><span class=\"annotation\">@8\u298a</span>\u2038<span class=\"annotation\">\u2989@8</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:18-20:18: @9.Goto: goto -&gt; bb11\"><span class=\"annotation\">@9\u298a</span>\u2038<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:17: @15[2]: FakeRead(ForLet, _18)\"><span class=\"annotation\">@15\u298a</span>somebool<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:9-23:17: @15[2]: FakeRead(ForLet, _18)\"><span class=\"annotation\">@15\u298a</span>somebool<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:13-25:14: @11[6]: _20 = _6\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:13-25:14: @11[6]: _20 = _6\n 25:17-25:18: @11[8]: _21 = _5\n 25:13-25:18: @11[9]: _19 = Lt(move _20, move _21)\"><span class=\"annotation\">@11\u298a</span>b &lt; a<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:13-27:14: @14[2]: _23 = _6\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:14: @14[2]: _23 = _6\n 27:17-27:18: @14[4]: _24 = _7\n-27:13-27:18: @14[5]: _22 = Lt(move _23, move _24)\"><span class=\"annotation\">@14\u298a</span>b &lt; c<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+27:13-27:18: @14[5]: _22 = Lt(move _23, move _24)\"><span class=\"annotation\">@14\u298a</span>b &lt; c<span class=\"annotation\">\u2989@14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:18-27:18: @12.Goto: goto -&gt; bb15\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:18-27:18: @13.Goto: goto -&gt; bb15\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-30:17: @19[2]: FakeRead(ForLet, _25)\"><span class=\"annotation\">@19\u298a</span>somebool<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:14: @15[6]: _27 = _5\n-32:17-32:18: @15[8]: _28 = _6\n-32:13-32:18: @15[9]: _26 = Lt(move _27, move _28)\"><span class=\"annotation\">@15\u298a</span>a &lt; b<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        &amp;&amp;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:14: @18[2]: _30 = _6\n-34:17-34:18: @18[4]: _31 = _7\n-34:13-34:18: @18[5]: _29 = Lt(move _30, move _31)\"><span class=\"annotation\">@18\u298a</span>b &lt; c<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:9-37:17: @23[2]: FakeRead(ForLet, _32)\"><span class=\"annotation\">@23\u298a</span>somebool<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"39:13-39:14: @19[6]: _34 = _6\n-39:17-39:18: @19[8]: _35 = _5\n-39:13-39:18: @19[9]: _33 = Lt(move _34, move _35)\"><span class=\"annotation\">@19\u298a</span>b &lt; a<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        &amp;&amp;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"41:13-41:14: @22[2]: _37 = _6\n-41:17-41:18: @22[4]: _38 = _7\n-41:13-41:18: @22[5]: _36 = Lt(move _37, move _38)\"><span class=\"annotation\">@22\u298a</span>b &lt; c<span class=\"annotation\">\u2989@22</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"43:2-43:2: @23.Return: return\"><span class=\"annotation\">@23\u298a</span>\u2038<span class=\"annotation\">\u2989@23</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:9-29:17: @19[2]: FakeRead(ForLet, _25)\"><span class=\"annotation\">@19\u298a</span>somebool<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:20-29:21: @15[6]: _27 = _5\n+29:24-29:25: @15[8]: _28 = _6\n+29:20-29:25: @15[9]: _26 = Lt(move _27, move _28)\"><span class=\"annotation\">@15\u298a</span>a &lt; b<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"> &amp;&amp; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:29-29:30: @18[2]: _30 = _6\n+29:33-29:34: @18[4]: _31 = _7\n+29:29-29:34: @18[5]: _29 = Lt(move _30, move _31)\"><span class=\"annotation\">@18\u298a</span>b &lt; c<span class=\"annotation\">\u2989@18</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:34-29:34: @16.Goto: goto -&gt; bb19\"><span class=\"annotation\">@16\u298a</span>\u2038<span class=\"annotation\">\u2989@16</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:34-29:34: @17.Goto: goto -&gt; bb19\"><span class=\"annotation\">@17\u298a</span>\u2038<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-30:17: @23[2]: FakeRead(ForLet, _32)\"><span class=\"annotation\">@23\u298a</span>somebool<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:20-30:21: @19[6]: _34 = _6\n+30:24-30:25: @19[8]: _35 = _5\n+30:20-30:25: @19[9]: _33 = Lt(move _34, move _35)\"><span class=\"annotation\">@19\u298a</span>b &lt; a<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"> &amp;&amp; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:29-30:30: @22[2]: _37 = _6\n+30:33-30:34: @22[4]: _38 = _7\n+30:29-30:34: @22[5]: _36 = Lt(move _37, move _38)\"><span class=\"annotation\">@22\u298a</span>b &lt; c<span class=\"annotation\">\u2989@22</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:34-30:34: @20.Goto: goto -&gt; bb23\"><span class=\"annotation\">@20\u298a</span>\u2038<span class=\"annotation\">\u2989@20</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:34-30:34: @21.Goto: goto -&gt; bb23\"><span class=\"annotation\">@21\u298a</span>\u2038<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:16: @23[6]: _41 = _1\n+33:9-34:16: @23[7]: _40 = Not(move _41)\n+33:9-34:16: @23[9]: FakeRead(ForMatchedPlace, _40)\"><span class=\"annotation\">@23\u298a</span>!</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:16: @23[6]: _41 = _1\n+33:9-34:16: @23[7]: _40 = Not(move _41)\n+33:9-34:16: @23[9]: FakeRead(ForMatchedPlace, _40)\">        is_true<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @26[0]: _5 = const 2_i32\n+35:5-38:6: @26[1]: _39 = const ()\n+38:6-38:6: @26.Goto: goto -&gt; bb27\"><span class=\"annotation\">@24,26\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @26[0]: _5 = const 2_i32\n+35:5-38:6: @26[1]: _39 = const ()\n+38:6-38:6: @26.Goto: goto -&gt; bb27\">        a = 2</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @26[0]: _5 = const 2_i32\n+35:5-38:6: @26[1]: _39 = const ()\n+38:6-38:6: @26.Goto: goto -&gt; bb27\">        ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @26[0]: _5 = const 2_i32\n+35:5-38:6: @26[1]: _39 = const ()\n+38:6-38:6: @26.Goto: goto -&gt; bb27\">    }<span class=\"annotation\">\u2989@24,26</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:6-38:6: @25.Goto: goto -&gt; bb27\"><span class=\"annotation\">@25\u298a</span>\u2038<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:16: @27[4]: _43 = _1\n+41:9-41:16: @27[5]: FakeRead(ForMatchedPlace, _43)\"><span class=\"annotation\">@27\u298a</span>is_true<span class=\"annotation\">\u2989@27</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @30[0]: _6 = const 30_i32\n+42:5-45:6: @30[1]: _42 = const ()\"><span class=\"annotation\">@28,30\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @30[0]: _6 = const 30_i32\n+42:5-45:6: @30[1]: _42 = const ()\">        b = 30</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @30[0]: _6 = const 30_i32\n+42:5-45:6: @30[1]: _42 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @30[0]: _6 = const 30_i32\n+42:5-45:6: @30[1]: _42 = const ()\">    }<span class=\"annotation\">\u2989@28,30</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    else</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @29[0]: _7 = const 400_i32\n+47:5-50:6: @29[1]: _42 = const ()\"><span class=\"annotation\">@29\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @29[0]: _7 = const 400_i32\n+47:5-50:6: @29[1]: _42 = const ()\">        c = 400</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @29[0]: _7 = const 400_i32\n+47:5-50:6: @29[1]: _42 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @29[0]: _7 = const 400_i32\n+47:5-50:6: @29[1]: _42 = const ()\">    }<span class=\"annotation\">\u2989@29</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:6-50:6: @30.Goto: goto -&gt; bb31\"><span class=\"annotation\">@28,30\u298a</span>\u2038<span class=\"annotation\">\u2989@28,30</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:9-52:16: @31[5]: _46 = _1\n+52:8-52:16: @31[6]: _45 = Not(move _46)\n+52:8-52:16: @31[8]: FakeRead(ForMatchedPlace, _45)\"><span class=\"annotation\">@31\u298a</span>!is_true<span class=\"annotation\">\u2989@31</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"53:9-53:14: @34[0]: _5 = const 2_i32\n+52:17-54:6: @34[1]: _44 = const ()\n+54:6-54:6: @34.Goto: goto -&gt; bb35\"><span class=\"annotation\">@32,34\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"53:9-53:14: @34[0]: _5 = const 2_i32\n+52:17-54:6: @34[1]: _44 = const ()\n+54:6-54:6: @34.Goto: goto -&gt; bb35\">        a = 2;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"53:9-53:14: @34[0]: _5 = const 2_i32\n+52:17-54:6: @34[1]: _44 = const ()\n+54:6-54:6: @34.Goto: goto -&gt; bb35\">    }<span class=\"annotation\">\u2989@32,34</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"54:6-54:6: @33.Goto: goto -&gt; bb35\"><span class=\"annotation\">@33\u298a</span>\u2038<span class=\"annotation\">\u2989@33</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"56:8-56:15: @35[3]: _47 = _1\n+56:8-56:15: @35[4]: FakeRead(ForMatchedPlace, _47)\"><span class=\"annotation\">@35\u298a</span>is_true<span class=\"annotation\">\u2989@35</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"57:9-57:15: @38[0]: _6 = const 30_i32\n+56:16-58:6: @38[1]: _0 = const ()\"><span class=\"annotation\">@36,38\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"57:9-57:15: @38[0]: _6 = const 30_i32\n+56:16-58:6: @38[1]: _0 = const ()\">        b = 30;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"57:9-57:15: @38[0]: _6 = const 30_i32\n+56:16-58:6: @38[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@36,38</span></span></span><span class=\"code\" style=\"--layer: 0\"> else </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"59:9-59:16: @37[0]: _7 = const 400_i32\n+58:12-60:6: @37[1]: _0 = const ()\"><span class=\"annotation\">@37\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"59:9-59:16: @37[0]: _7 = const 400_i32\n+58:12-60:6: @37[1]: _0 = const ()\">        c = 400;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"59:9-59:16: @37[0]: _7 = const 400_i32\n+58:12-60:6: @37[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@37</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:6-60:6: @38.Goto: goto -&gt; bb39\"><span class=\"annotation\">@36,38\u298a</span>\u2038<span class=\"annotation\">\u2989@36,38</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"61:2-61:2: @39.Return: return\"><span class=\"annotation\">@39\u298a</span>\u2038<span class=\"annotation\">\u2989@39</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "a876c85822f328a7534f016590983ffec94697bc", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.loops_and_branches/loops_and_branches.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 151, "deletions": 0, "changes": 151, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.loops_and_branches%2Floops_and_branches.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.loops_and_branches%2Floops_and_branches.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.loops_and_branches%2Floops_and_branches.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,151 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>loops_and_branches.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 21\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:22-23:31: @0[1]: _1 = DebugTest\n+23:9-23:19: @0[2]: FakeRead(ForLet, _1)\n+24:14-24:20: @0[9]: _19 = const main::promoted[0]\n+24:14-24:20: @0[10]: _7 = &amp;(*_19)\n+24:14-24:20: @0[11]: _6 = &amp;(*_7)\n+24:14-24:20: @0[12]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+24:22-24:32: @0[20]: _14 = &amp;_1\n+24:5-24:34: @0[21]: _13 = (move _14,)\n+24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n+24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n+24:5-24:34: @0[28]: _17 = &amp;(*_15)\n+24:5-24:34: @0[30]: _18 = &lt;DebugTest as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:5-24:34: @0.Call: _16 = ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+24:5-24:34: @1[2]: _12 = [move _16]\n+24:5-24:34: @1[5]: _11 = &amp;_12\n+24:5-24:34: @1[6]: _10 = &amp;(*_11)\n+24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+24:5-24:34: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+24:5-24:34: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+24:5-24:34: @3[6]: _2 = const ()\n+22:11-25:2: @3[8]: _0 = const ()\n+25:2-25:2: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:22-23:31: @0[1]: _1 = DebugTest\n+23:9-23:19: @0[2]: FakeRead(ForLet, _1)\n+24:14-24:20: @0[9]: _19 = const main::promoted[0]\n+24:14-24:20: @0[10]: _7 = &amp;(*_19)\n+24:14-24:20: @0[11]: _6 = &amp;(*_7)\n+24:14-24:20: @0[12]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+24:22-24:32: @0[20]: _14 = &amp;_1\n+24:5-24:34: @0[21]: _13 = (move _14,)\n+24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n+24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n+24:5-24:34: @0[28]: _17 = &amp;(*_15)\n+24:5-24:34: @0[30]: _18 = &lt;DebugTest as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:5-24:34: @0.Call: _16 = ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+24:5-24:34: @1[2]: _12 = [move _16]\n+24:5-24:34: @1[5]: _11 = &amp;_12\n+24:5-24:34: @1[6]: _10 = &amp;(*_11)\n+24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+24:5-24:34: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+24:5-24:34: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+24:5-24:34: @3[6]: _2 = const ()\n+22:11-25:2: @3[8]: _0 = const ()\n+25:2-25:2: @3.Return: return\">    let debug_test = DebugTest;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:22-23:31: @0[1]: _1 = DebugTest\n+23:9-23:19: @0[2]: FakeRead(ForLet, _1)\n+24:14-24:20: @0[9]: _19 = const main::promoted[0]\n+24:14-24:20: @0[10]: _7 = &amp;(*_19)\n+24:14-24:20: @0[11]: _6 = &amp;(*_7)\n+24:14-24:20: @0[12]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+24:22-24:32: @0[20]: _14 = &amp;_1\n+24:5-24:34: @0[21]: _13 = (move _14,)\n+24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n+24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n+24:5-24:34: @0[28]: _17 = &amp;(*_15)\n+24:5-24:34: @0[30]: _18 = &lt;DebugTest as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:5-24:34: @0.Call: _16 = ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+24:5-24:34: @1[2]: _12 = [move _16]\n+24:5-24:34: @1[5]: _11 = &amp;_12\n+24:5-24:34: @1[6]: _10 = &amp;(*_11)\n+24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+24:5-24:34: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+24:5-24:34: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+24:5-24:34: @3[6]: _2 = const ()\n+22:11-25:2: @3[8]: _0 = const ()\n+25:2-25:2: @3.Return: return\">    println!(\"{:?}\", debug_test);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:22-23:31: @0[1]: _1 = DebugTest\n+23:9-23:19: @0[2]: FakeRead(ForLet, _1)\n+24:14-24:20: @0[9]: _19 = const main::promoted[0]\n+24:14-24:20: @0[10]: _7 = &amp;(*_19)\n+24:14-24:20: @0[11]: _6 = &amp;(*_7)\n+24:14-24:20: @0[12]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+24:22-24:32: @0[20]: _14 = &amp;_1\n+24:5-24:34: @0[21]: _13 = (move _14,)\n+24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n+24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n+24:5-24:34: @0[28]: _17 = &amp;(*_15)\n+24:5-24:34: @0[30]: _18 = &lt;DebugTest as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:5-24:34: @0.Call: _16 = ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+24:5-24:34: @1[2]: _12 = [move _16]\n+24:5-24:34: @1[5]: _11 = &amp;_12\n+24:5-24:34: @1[6]: _10 = &amp;(*_11)\n+24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+24:5-24:34: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+24:5-24:34: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+24:5-24:34: @3[6]: _2 = const ()\n+22:11-25:2: @3[8]: _0 = const ()\n+25:2-25:2: @3.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "1b9767506f26a2897e6cfa1b574d0bf9b198285d", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.loops_and_branches/loops_and_branches.{impl#0}-fmt.-------.InstrumentCoverage.0.html", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.loops_and_branches%2Floops_and_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.loops_and_branches%2Floops_and_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.loops_and_branches%2Floops_and_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,94 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>loops_and_branches.{impl#0}-fmt - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter) -&gt; std::fmt::Result {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:12-10:16: @0[2]: _4 = const true\n+10:12-10:16: @0[3]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:16-11:21: @3[2]: _6 = const false\n+11:16-11:21: @3[3]: FakeRead(ForMatchedPlace, _6)\"><span class=\"annotation\">@1,3\u298a</span>false<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                while </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:23-12:27: @7[1]: _8 = const true\n+12:23-12:27: @7[2]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@6,7\u298a</span>true<span class=\"annotation\">\u2989@6,7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:28-13:18: @10[0]: _7 = const ()\n+13:18-13:18: @10.Goto: goto -&gt; bb6\"><span class=\"annotation\">@8,10\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:28-13:18: @10[0]: _7 = const ()\n+13:18-13:18: @10.Goto: goto -&gt; bb6\">                }<span class=\"annotation\">\u2989@8,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:14-14:14: @9.Goto: goto -&gt; bb11\"><span class=\"annotation\">@9\u298a</span>\u2038<span class=\"annotation\">\u2989@9</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:14-14:14: @5.Goto: goto -&gt; bb11\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:20-15:21: @11[6]: _13 = &amp;mut (*_2)\n+15:23-15:30: @11[11]: _32 = const &lt;DebugTest as Debug&gt;::fmt::promoted[1]\n+15:23-15:30: @11[12]: _17 = &amp;(*_32)\n+15:23-15:30: @11[13]: _16 = &amp;(*_17)\n+15:23-15:30: @11[14]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n+15:13-15:31: @11[20]: _23 = ()\n+15:13-15:31: @11[21]: FakeRead(ForMatchedPlace, _23)\n+15:13-15:31: @11[22]: _31 = const &lt;DebugTest as Debug&gt;::fmt::promoted[0]\n+15:13-15:31: @11[23]: _21 = &amp;(*_31)\n+15:13-15:31: @11[24]: _20 = &amp;(*_21)\n+15:13-15:31: @11[25]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+15:13-15:31: @11.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb12, unwind: bb23]\n+15:13-15:31: @12.Call: _12 = Formatter::write_fmt(move _13, move _14) -&gt; [return: bb13, unwind: bb23]\"><span class=\"annotation\">@11,12,13,14\u298a</span>write!(f, \"error\")<span class=\"annotation\">\u2989@11,12,13,14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:31-15:32: @18[1]: _25 = ((_11 as Err).0: std::fmt::Error)\n+15:31-15:32: @18[4]: _28 = _25\n+15:31-15:32: @18.Call: _27 = &lt;std::fmt::Error as From&lt;std::fmt::Error&gt;&gt;::from(move _28) -&gt; [return: bb19, unwind: bb23]\"><span class=\"annotation\">@16,18,19,20\u298a</span>?<span class=\"annotation\">\u2989@16,18,19,20</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:16-17:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"16:16-17:10: @2[0]: _3 = const ()\">        }<span class=\"annotation\">\u2989@2</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:10-17:10: @15.Goto: goto -&gt; bb21\"><span class=\"annotation\">@15\u298a</span>\u2038<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:12-18:14: @21[3]: _30 = ()\n+18:9-18:15: @21[4]: _0 = std::result::Result::&lt;(), std::fmt::Error&gt;::Ok(move _30)\"><span class=\"annotation\">@21\u298a</span>Ok(())<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:6-19:6: @20.Goto: goto -&gt; bb22\"><span class=\"annotation\">@16,18,19,20\u298a</span>\u2038<span class=\"annotation\">\u2989@16,18,19,20</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:6-19:6: @22.Return: return\"><span class=\"annotation\">@22\u298a</span>\u2038<span class=\"annotation\">\u2989@22</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "042845b70cc306fd0f5d7e0ec05f24e66f9b8b10", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.nested_loops/nested_loops.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,125 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>nested_loops.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb35]\n+2:19-2:35: @1[0]: _3 = &amp;_4\n+2:19-2:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb34]\n+2:19-2:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+2:9-2:16: @2[3]: FakeRead(ForLet, _1)\n+3:25-3:27: @3[2]: _5 = const 10_i32\n+3:9-3:22: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb35]\n+2:19-2:35: @1[0]: _3 = &amp;_4\n+2:19-2:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb34]\n+2:19-2:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+2:9-2:16: @2[3]: FakeRead(ForLet, _1)\n+3:25-3:27: @3[2]: _5 = const 10_i32\n+3:9-3:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 10<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    'outer: while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"5:19-5:28: @5[2]: _8 = _5\n+5:19-5:32: @5[3]: _7 = Gt(move _8, const 0_i32)\n+5:19-5:32: @5[5]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@4,5\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:21-6:24: @8[1]: _9 = const 100_i32\n+6:13-6:18: @8[2]: FakeRead(ForLet, _9)\n+7:21-7:24: @8[4]: _10 = const 100_i32\n+7:13-7:18: @8[5]: FakeRead(ForLet, _10)\"><span class=\"annotation\">@6,8,9\u298a</span>mut a = 100;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:21-6:24: @8[1]: _9 = const 100_i32\n+6:13-6:18: @8[2]: FakeRead(ForLet, _9)\n+7:21-7:24: @8[4]: _10 = const 100_i32\n+7:13-7:18: @8[5]: FakeRead(ForLet, _10)\">        let mut b = 100<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        for </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"8:13-8:14: @16[1]: _21 = ((_17 as Some).0: i32)\n+8:13-8:14: @16[3]: _22 = _21\n+8:13-8:14: @16[4]: _15 = move _22\n+8:13-8:14: @16[5]: _16 = const ()\"><span class=\"annotation\">@14,16\u298a</span>_<span class=\"annotation\">\u2989@14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> in </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:18-8:23: @11[5]: _19 = &amp;mut _14\n+8:18-8:23: @11[6]: _18 = &amp;mut (*_19)\n+8:18-8:23: @11.Call: _17 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _18) -&gt; [return: bb12, unwind: bb35]\n+8:18-8:23: @12[1]: FakeRead(ForMatchedPlace, _17)\"><span class=\"annotation\">@10,11,12\u298a</span>0..50<span class=\"annotation\">\u2989@10,11,12</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"9:16-9:17: @16[15]: _27 = _9\n+9:16-9:22: @16[16]: _26 = Lt(move _27, const 30_i32)\n+9:16-9:22: @16[18]: FakeRead(ForMatchedPlace, _26)\"><span class=\"annotation\">@14,16\u298a</span>a &lt; 30<span class=\"annotation\">\u2989@14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:17-10:22: @19[0]: _11 = const ()\"><span class=\"annotation\">@17,19\u298a</span>break<span class=\"annotation\">\u2989@17,19</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:13-12:19: @20[0]: _9 = move (_29.0: i32)\"><span class=\"annotation\">@20\u298a</span>a -= 5<span class=\"annotation\">\u2989@20</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:13-13:19: @21[0]: _10 = move (_30.0: i32)\"><span class=\"annotation\">@21\u298a</span>b -= 5<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:16-14:17: @21[3]: _32 = _10\n+14:16-14:22: @21[4]: _31 = Lt(move _32, const 90_i32)\n+14:16-14:22: @21[6]: FakeRead(ForMatchedPlace, _31)\"><span class=\"annotation\">@21\u298a</span>b &lt; 90<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:17-15:24: @25[0]: _9 = move (_33.0: i32)\n+16:20-16:27: @25[2]: _34 = _1\n+16:20-16:27: @25[3]: FakeRead(ForMatchedPlace, _34)\"><span class=\"annotation\">@25\u298a</span>a -= 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"15:17-15:24: @25[0]: _9 = move (_33.0: i32)\n+16:20-16:27: @25[2]: _34 = _1\n+16:20-16:27: @25[3]: FakeRead(ForMatchedPlace, _34)\">                if is_true<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:21-17:33: @28[0]: _0 = const ()\"><span class=\"annotation\">@26,28\u298a</span>break 'outer<span class=\"annotation\">\u2989@26,28</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                } else {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n+21:14-21:14: @29.Goto: goto -&gt; bb30\"><span class=\"annotation\">@29\u298a</span>a -= 2;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n+21:14-21:14: @29.Goto: goto -&gt; bb30\">                }</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n+21:14-21:14: @29.Goto: goto -&gt; bb30\">            }<span class=\"annotation\">\u2989@29</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:14-21:14: @23.Goto: goto -&gt; bb30\"><span class=\"annotation\">@23\u298a</span>\u2038<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:10-22:10: @9.Goto: goto -&gt; bb10\"><span class=\"annotation\">@6,8,9\u298a</span>\u2038<span class=\"annotation\">\u2989@6,8,9</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:10-22:10: @30.Goto: goto -&gt; bb10\"><span class=\"annotation\">@30\u298a</span>\u2038<span class=\"annotation\">\u2989@30</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:23: @32[0]: _5 = move (_37.0: i32)\"><span class=\"annotation\">@32\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@32</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:6-24:6: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:6-24:6: @7.Goto: goto -&gt; bb33\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:2-25:2: @33.Return: return\"><span class=\"annotation\">@33\u298a</span>\u2038<span class=\"annotation\">\u2989@33</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "3ebe51bc7ec36d1e3ec5aab622306d6cf040e1a5", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 285, "deletions": 0, "changes": 285, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,285 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 20\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n+22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n+23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n+23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n+25:14-25:32: @2[7]: _33 = const main::promoted[0]\n+25:14-25:32: @2[8]: _8 = &amp;(*_33)\n+25:14-25:32: @2[9]: _7 = &amp;(*_8)\n+25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n+25:34-25:47: @2[18]: _15 = &amp;_1\n+25:49-25:62: @2[20]: _16 = &amp;_2\n+25:64-25:77: @2[24]: _19 = &amp;_1\n+25:80-25:93: @2[26]: _20 = &amp;_2\n+25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @3[2]: _17 = &amp;_18\n+25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n+25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n+25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n+25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n+25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n+25:5-25:95: @3[16]: _25 = &amp;(*_21)\n+25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @4[4]: _28 = &amp;(*_22)\n+25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @5[4]: _31 = &amp;(*_23)\n+25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n+25:5-25:95: @6[9]: _12 = &amp;_13\n+25:5-25:95: @6[10]: _11 = &amp;(*_12)\n+25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @8[7]: _3 = const ()\n+21:11-26:2: @8[9]: _0 = const ()\n+26:2-26:2: @8.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5,6,7,8\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n+22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n+23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n+23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n+25:14-25:32: @2[7]: _33 = const main::promoted[0]\n+25:14-25:32: @2[8]: _8 = &amp;(*_33)\n+25:14-25:32: @2[9]: _7 = &amp;(*_8)\n+25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n+25:34-25:47: @2[18]: _15 = &amp;_1\n+25:49-25:62: @2[20]: _16 = &amp;_2\n+25:64-25:77: @2[24]: _19 = &amp;_1\n+25:80-25:93: @2[26]: _20 = &amp;_2\n+25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @3[2]: _17 = &amp;_18\n+25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n+25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n+25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n+25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n+25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n+25:5-25:95: @3[16]: _25 = &amp;(*_21)\n+25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @4[4]: _28 = &amp;(*_22)\n+25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @5[4]: _31 = &amp;(*_23)\n+25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n+25:5-25:95: @6[9]: _12 = &amp;_13\n+25:5-25:95: @6[10]: _11 = &amp;(*_12)\n+25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @8[7]: _3 = const ()\n+21:11-26:2: @8[9]: _0 = const ()\n+26:2-26:2: @8.Return: return\">    let version_3_2_1 = Version::new(3, 2, 1);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n+22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n+23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n+23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n+25:14-25:32: @2[7]: _33 = const main::promoted[0]\n+25:14-25:32: @2[8]: _8 = &amp;(*_33)\n+25:14-25:32: @2[9]: _7 = &amp;(*_8)\n+25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n+25:34-25:47: @2[18]: _15 = &amp;_1\n+25:49-25:62: @2[20]: _16 = &amp;_2\n+25:64-25:77: @2[24]: _19 = &amp;_1\n+25:80-25:93: @2[26]: _20 = &amp;_2\n+25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @3[2]: _17 = &amp;_18\n+25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n+25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n+25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n+25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n+25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n+25:5-25:95: @3[16]: _25 = &amp;(*_21)\n+25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @4[4]: _28 = &amp;(*_22)\n+25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @5[4]: _31 = &amp;(*_23)\n+25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n+25:5-25:95: @6[9]: _12 = &amp;_13\n+25:5-25:95: @6[10]: _11 = &amp;(*_12)\n+25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @8[7]: _3 = const ()\n+21:11-26:2: @8[9]: _0 = const ()\n+26:2-26:2: @8.Return: return\">    let version_3_3_0 = Version::new(3, 3, 0);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n+22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n+23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n+23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n+25:14-25:32: @2[7]: _33 = const main::promoted[0]\n+25:14-25:32: @2[8]: _8 = &amp;(*_33)\n+25:14-25:32: @2[9]: _7 = &amp;(*_8)\n+25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n+25:34-25:47: @2[18]: _15 = &amp;_1\n+25:49-25:62: @2[20]: _16 = &amp;_2\n+25:64-25:77: @2[24]: _19 = &amp;_1\n+25:80-25:93: @2[26]: _20 = &amp;_2\n+25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @3[2]: _17 = &amp;_18\n+25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n+25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n+25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n+25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n+25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n+25:5-25:95: @3[16]: _25 = &amp;(*_21)\n+25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @4[4]: _28 = &amp;(*_22)\n+25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @5[4]: _31 = &amp;(*_23)\n+25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n+25:5-25:95: @6[9]: _12 = &amp;_13\n+25:5-25:95: @6[10]: _11 = &amp;(*_12)\n+25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @8[7]: _3 = const ()\n+21:11-26:2: @8[9]: _0 = const ()\n+26:2-26:2: @8.Return: return\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n+22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n+23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n+23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n+25:14-25:32: @2[7]: _33 = const main::promoted[0]\n+25:14-25:32: @2[8]: _8 = &amp;(*_33)\n+25:14-25:32: @2[9]: _7 = &amp;(*_8)\n+25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n+25:34-25:47: @2[18]: _15 = &amp;_1\n+25:49-25:62: @2[20]: _16 = &amp;_2\n+25:64-25:77: @2[24]: _19 = &amp;_1\n+25:80-25:93: @2[26]: _20 = &amp;_2\n+25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @3[2]: _17 = &amp;_18\n+25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n+25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n+25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n+25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n+25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n+25:5-25:95: @3[16]: _25 = &amp;(*_21)\n+25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @4[4]: _28 = &amp;(*_22)\n+25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @5[4]: _31 = &amp;(*_23)\n+25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n+25:5-25:95: @6[9]: _12 = &amp;_13\n+25:5-25:95: @6[10]: _11 = &amp;(*_12)\n+25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @8[7]: _3 = const ()\n+21:11-26:2: @8[9]: _0 = const ()\n+26:2-26:2: @8.Return: return\">    println!(\"{:?} &lt; {:?} = {}\", version_3_2_1, version_3_3_0, version_3_2_1 &lt; version_3_3_0);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n+22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n+23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n+23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n+25:14-25:32: @2[7]: _33 = const main::promoted[0]\n+25:14-25:32: @2[8]: _8 = &amp;(*_33)\n+25:14-25:32: @2[9]: _7 = &amp;(*_8)\n+25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n+25:34-25:47: @2[18]: _15 = &amp;_1\n+25:49-25:62: @2[20]: _16 = &amp;_2\n+25:64-25:77: @2[24]: _19 = &amp;_1\n+25:80-25:93: @2[26]: _20 = &amp;_2\n+25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @3[2]: _17 = &amp;_18\n+25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n+25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n+25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n+25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n+25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n+25:5-25:95: @3[16]: _25 = &amp;(*_21)\n+25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @4[4]: _28 = &amp;(*_22)\n+25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @5[4]: _31 = &amp;(*_23)\n+25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n+25:5-25:95: @6[9]: _12 = &amp;_13\n+25:5-25:95: @6[10]: _11 = &amp;(*_12)\n+25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @8[7]: _3 = const ()\n+21:11-26:2: @8[9]: _0 = const ()\n+26:2-26:2: @8.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4,5,6,7,8</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "ee6a5489f267b2e5e754f46bbe5ed3ee76fb1975", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#0}-new.-------.InstrumentCoverage.0.html", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%230%7D-new.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%230%7D-new.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%230%7D-new.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,94 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#0}-new - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 11\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">pub fn new(major: usize, minor: usize, patch: usize) -&gt; Self {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n+15:13-15:18: @0[3]: _5 = _2\n+16:13-16:18: @0[5]: _6 = _3\n+13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n+18:6-18:6: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>Self {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n+15:13-15:18: @0[3]: _5 = _2\n+16:13-16:18: @0[5]: _6 = _3\n+13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n+18:6-18:6: @0.Return: return\">            major,</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n+15:13-15:18: @0[3]: _5 = _2\n+16:13-16:18: @0[5]: _6 = _3\n+13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n+18:6-18:6: @0.Return: return\">            minor,</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n+15:13-15:18: @0[3]: _5 = _2\n+16:13-16:18: @0[5]: _6 = _3\n+13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n+18:6-18:6: @0.Return: return\">            patch,</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n+15:13-15:18: @0[3]: _5 = _2\n+16:13-16:18: @0[5]: _6 = _3\n+13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n+18:6-18:6: @0.Return: return\">        }</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n+15:13-15:18: @0[3]: _5 = _2\n+16:13-16:18: @0[5]: _6 = _3\n+13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n+18:6-18:6: @0.Return: return\">    }<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "a39772288a3e77d62e91a57c84c86a75b53147d6", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#1}-cmp.-------.InstrumentCoverage.0.html", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%231%7D-cmp.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%231%7D-cmp.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%231%7D-cmp.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,70 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#1}-cmp - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                                  <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:51-4:54: @14.Goto: goto -&gt; bb15\"><span class=\"annotation\">@14\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:51-4:54: @12[0]: _0 = Equal\n+4:51-4:54: @12.Goto: goto -&gt; bb13\"><span class=\"annotation\">@11,12\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:51-4:54: @10[1]: _27 = _21\n+4:51-4:54: @10[2]: _0 = _27\n+4:51-4:54: @10.Goto: goto -&gt; bb13\"><span class=\"annotation\">@10\u298a</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"4:51-4:54: @13.Goto: goto -&gt; bb14\"><span class=\"annotation\">@13\u298a</span>Ord<span class=\"annotation\">\u2989@13</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:51-4:54: @10[1]: _27 = _21\n+4:51-4:54: @10[2]: _0 = _27\n+4:51-4:54: @10.Goto: goto -&gt; bb13\"><span class=\"annotation\">\u2989@10</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:51-4:54: @12[0]: _0 = Equal\n+4:51-4:54: @12.Goto: goto -&gt; bb13\"><span class=\"annotation\">\u2989@11,12</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:51-4:54: @14.Goto: goto -&gt; bb15\"><span class=\"annotation\">\u2989@14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:54-4:54: @15.Return: return\"><span class=\"annotation\">@15\u298a</span>\u2038<span class=\"annotation\">\u2989@15</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "671cbea0ff30572084537c676bf6f5b9c960b961", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-ge-{closure#0}-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,72 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-ge-{closure#0}-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">minor: usize,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:17: @0[3]: _4 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n+8:5-8:17: @0[4]: _3 = &amp;(*_4)\n+8:5-8:17: @0[7]: _6 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n+8:5-8:17: @0[8]: _5 = &amp;(*_6)\n+8:5-8:17: @0.Call: _2 = &lt;usize as PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n+8:5-8:17: @1[3]: _7 = Less\n+8:5-8:17: @1.Call: _0 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n+8:5-8:17: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>patch: usize<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "6da79c4b130cb1d97de50fa4165826c25eb4de59", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-ge-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,73 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-ge-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 5\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">major: usize,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:5-7:17: @0[4]: _5 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n+7:5-7:17: @0[5]: _4 = &amp;(*_5)\n+7:5-7:17: @0[8]: _7 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n+7:5-7:17: @0[9]: _6 = &amp;(*_7)\n+7:5-7:17: @0.Call: _3 = &lt;usize as PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n+7:5-7:17: @1[3]: _8 = Equal\n+7:5-7:17: @1.Call: _2 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n+7:5-7:17: @2[4]: _10 = &amp;(*(_1.2: &amp;&amp;usize))\n+7:5-7:17: @2[6]: _11 = &amp;(*(_1.3: &amp;&amp;usize))\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">minor: usize</span></span></div>\n+</body>\n+</html>"}, {"sha": "5f5c31ce77591ccb2ce9245cc3349d69d48f0888", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-ge.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-ge - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @0[0]: FakeRead(ForMatchedPlace, (*_2))\n+4:39-4:49: @0[2]: _3 = &amp;((*_2).0: usize)\n+4:39-4:49: @0[4]: _4 = &amp;((*_2).1: usize)\n+4:39-4:49: @0[6]: _5 = &amp;((*_2).2: usize)\n+4:39-4:49: @0[7]: FakeRead(ForMatchedPlace, (*_1))\n+4:39-4:49: @0[9]: _6 = &amp;((*_1).0: usize)\n+4:39-4:49: @0[11]: _7 = &amp;((*_1).1: usize)\n+4:39-4:49: @0[13]: _8 = &amp;((*_1).2: usize)\n+4:39-4:49: @0[20]: _14 = &amp;(*_6)\n+4:39-4:49: @0[21]: _13 = &amp;(*_14)\n+4:39-4:49: @0[24]: _16 = &amp;(*_3)\n+4:39-4:49: @0[25]: _15 = &amp;(*_16)\n+4:39-4:49: @0.Call: _12 = &lt;usize as PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n+4:39-4:49: @1[3]: _17 = Equal\n+4:39-4:49: @1.Call: _11 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n+4:39-4:49: @2[4]: _19 = &amp;_7\n+4:39-4:49: @2[6]: _20 = &amp;_4\n+4:39-4:49: @2[8]: _21 = &amp;_8\n+4:39-4:49: @2[10]: _22 = &amp;_5\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">PartialOrd</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:49-4:49: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "fbdd0f7db42b489fb44935e792961e328f638690", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-gt-{closure#0}-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,72 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-gt-{closure#0}-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">minor: usize,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:17: @0[3]: _4 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n+8:5-8:17: @0[4]: _3 = &amp;(*_4)\n+8:5-8:17: @0[7]: _6 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n+8:5-8:17: @0[8]: _5 = &amp;(*_6)\n+8:5-8:17: @0.Call: _2 = &lt;usize as PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n+8:5-8:17: @1[3]: _7 = Less\n+8:5-8:17: @1.Call: _0 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n+8:5-8:17: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>patch: usize<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "736f2034333336e145727347c77436e26d5ef730", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-gt-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,73 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-gt-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 5\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">major: usize,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:5-7:17: @0[4]: _5 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n+7:5-7:17: @0[5]: _4 = &amp;(*_5)\n+7:5-7:17: @0[8]: _7 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n+7:5-7:17: @0[9]: _6 = &amp;(*_7)\n+7:5-7:17: @0.Call: _3 = &lt;usize as PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n+7:5-7:17: @1[3]: _8 = Equal\n+7:5-7:17: @1.Call: _2 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n+7:5-7:17: @2[4]: _10 = &amp;(*(_1.2: &amp;&amp;usize))\n+7:5-7:17: @2[6]: _11 = &amp;(*(_1.3: &amp;&amp;usize))\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">minor: usize</span></span></div>\n+</body>\n+</html>"}, {"sha": "0fec7c9932f22f4e9273cd859ccb67ddef2e2f31", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-gt.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-gt - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @0[0]: FakeRead(ForMatchedPlace, (*_2))\n+4:39-4:49: @0[2]: _3 = &amp;((*_2).0: usize)\n+4:39-4:49: @0[4]: _4 = &amp;((*_2).1: usize)\n+4:39-4:49: @0[6]: _5 = &amp;((*_2).2: usize)\n+4:39-4:49: @0[7]: FakeRead(ForMatchedPlace, (*_1))\n+4:39-4:49: @0[9]: _6 = &amp;((*_1).0: usize)\n+4:39-4:49: @0[11]: _7 = &amp;((*_1).1: usize)\n+4:39-4:49: @0[13]: _8 = &amp;((*_1).2: usize)\n+4:39-4:49: @0[20]: _14 = &amp;(*_6)\n+4:39-4:49: @0[21]: _13 = &amp;(*_14)\n+4:39-4:49: @0[24]: _16 = &amp;(*_3)\n+4:39-4:49: @0[25]: _15 = &amp;(*_16)\n+4:39-4:49: @0.Call: _12 = &lt;usize as PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n+4:39-4:49: @1[3]: _17 = Equal\n+4:39-4:49: @1.Call: _11 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n+4:39-4:49: @2[4]: _19 = &amp;_7\n+4:39-4:49: @2[6]: _20 = &amp;_4\n+4:39-4:49: @2[8]: _21 = &amp;_8\n+4:39-4:49: @2[10]: _22 = &amp;_5\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">PartialOrd</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:49-4:49: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "ff4eba107892bc22bb907511c62c8dc4e1f1812d", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-le-{closure#0}-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,72 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-le-{closure#0}-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">minor: usize,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:17: @0[3]: _4 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n+8:5-8:17: @0[4]: _3 = &amp;(*_4)\n+8:5-8:17: @0[7]: _6 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n+8:5-8:17: @0[8]: _5 = &amp;(*_6)\n+8:5-8:17: @0.Call: _2 = &lt;usize as PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n+8:5-8:17: @1[3]: _7 = Greater\n+8:5-8:17: @1.Call: _0 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n+8:5-8:17: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>patch: usize<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "ccc86a7f92fea6dc6571a6822788fb5d03fc26a4", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-le-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,73 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-le-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 5\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">major: usize,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:5-7:17: @0[4]: _5 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n+7:5-7:17: @0[5]: _4 = &amp;(*_5)\n+7:5-7:17: @0[8]: _7 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n+7:5-7:17: @0[9]: _6 = &amp;(*_7)\n+7:5-7:17: @0.Call: _3 = &lt;usize as PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n+7:5-7:17: @1[3]: _8 = Equal\n+7:5-7:17: @1.Call: _2 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n+7:5-7:17: @2[4]: _10 = &amp;(*(_1.2: &amp;&amp;usize))\n+7:5-7:17: @2[6]: _11 = &amp;(*(_1.3: &amp;&amp;usize))\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">minor: usize</span></span></div>\n+</body>\n+</html>"}, {"sha": "682b9112c4cf82284aec8c857b25ed2e813fea20", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-le.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-le - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @0[0]: FakeRead(ForMatchedPlace, (*_2))\n+4:39-4:49: @0[2]: _3 = &amp;((*_2).0: usize)\n+4:39-4:49: @0[4]: _4 = &amp;((*_2).1: usize)\n+4:39-4:49: @0[6]: _5 = &amp;((*_2).2: usize)\n+4:39-4:49: @0[7]: FakeRead(ForMatchedPlace, (*_1))\n+4:39-4:49: @0[9]: _6 = &amp;((*_1).0: usize)\n+4:39-4:49: @0[11]: _7 = &amp;((*_1).1: usize)\n+4:39-4:49: @0[13]: _8 = &amp;((*_1).2: usize)\n+4:39-4:49: @0[20]: _14 = &amp;(*_6)\n+4:39-4:49: @0[21]: _13 = &amp;(*_14)\n+4:39-4:49: @0[24]: _16 = &amp;(*_3)\n+4:39-4:49: @0[25]: _15 = &amp;(*_16)\n+4:39-4:49: @0.Call: _12 = &lt;usize as PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n+4:39-4:49: @1[3]: _17 = Equal\n+4:39-4:49: @1.Call: _11 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n+4:39-4:49: @2[4]: _19 = &amp;_7\n+4:39-4:49: @2[6]: _20 = &amp;_4\n+4:39-4:49: @2[8]: _21 = &amp;_8\n+4:39-4:49: @2[10]: _22 = &amp;_5\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">PartialOrd</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:49-4:49: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "e018c96c24f22a98a467a988322c828f25b70e30", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-lt-{closure#0}-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,72 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-lt-{closure#0}-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">minor: usize,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:17: @0[3]: _4 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n+8:5-8:17: @0[4]: _3 = &amp;(*_4)\n+8:5-8:17: @0[7]: _6 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n+8:5-8:17: @0[8]: _5 = &amp;(*_6)\n+8:5-8:17: @0.Call: _2 = &lt;usize as PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n+8:5-8:17: @1[3]: _7 = Greater\n+8:5-8:17: @1.Call: _0 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n+8:5-8:17: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>patch: usize<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "a10032059b59eff5c805661a07570bb2a3e656fc", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-lt-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,73 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-lt-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 5\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">major: usize,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:5-7:17: @0[4]: _5 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n+7:5-7:17: @0[5]: _4 = &amp;(*_5)\n+7:5-7:17: @0[8]: _7 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n+7:5-7:17: @0[9]: _6 = &amp;(*_7)\n+7:5-7:17: @0.Call: _3 = &lt;usize as PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n+7:5-7:17: @1[3]: _8 = Equal\n+7:5-7:17: @1.Call: _2 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n+7:5-7:17: @2[4]: _10 = &amp;(*(_1.2: &amp;&amp;usize))\n+7:5-7:17: @2[6]: _11 = &amp;(*(_1.3: &amp;&amp;usize))\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">minor: usize</span></span></div>\n+</body>\n+</html>"}, {"sha": "89dad0f90698ce9445a51793aaeb0722a69888dc", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-lt.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-lt - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @0[0]: FakeRead(ForMatchedPlace, (*_2))\n+4:39-4:49: @0[2]: _3 = &amp;((*_2).0: usize)\n+4:39-4:49: @0[4]: _4 = &amp;((*_2).1: usize)\n+4:39-4:49: @0[6]: _5 = &amp;((*_2).2: usize)\n+4:39-4:49: @0[7]: FakeRead(ForMatchedPlace, (*_1))\n+4:39-4:49: @0[9]: _6 = &amp;((*_1).0: usize)\n+4:39-4:49: @0[11]: _7 = &amp;((*_1).1: usize)\n+4:39-4:49: @0[13]: _8 = &amp;((*_1).2: usize)\n+4:39-4:49: @0[20]: _14 = &amp;(*_6)\n+4:39-4:49: @0[21]: _13 = &amp;(*_14)\n+4:39-4:49: @0[24]: _16 = &amp;(*_3)\n+4:39-4:49: @0[25]: _15 = &amp;(*_16)\n+4:39-4:49: @0.Call: _12 = &lt;usize as PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n+4:39-4:49: @1[3]: _17 = Equal\n+4:39-4:49: @1.Call: _11 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n+4:39-4:49: @2[4]: _19 = &amp;_7\n+4:39-4:49: @2[6]: _20 = &amp;_4\n+4:39-4:49: @2[8]: _21 = &amp;_8\n+4:39-4:49: @2[10]: _22 = &amp;_5\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">PartialOrd</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:49-4:49: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "2c03e967eeb926546c8a3f40814ef843fdb7e660", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-partial_cmp.-------.InstrumentCoverage.0.html", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,72 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-partial_cmp - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @17.Goto: goto -&gt; bb18\"><span class=\"annotation\">@17\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:39-4:49: @15[1]: _30 = Equal\n+4:39-4:49: @15[2]: _0 = Option::&lt;std::cmp::Ordering&gt;::Some(move _30)\n+4:39-4:49: @15.Goto: goto -&gt; bb16\"><span class=\"annotation\">@14,15\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:39-4:49: @12[1]: _31 = _23\n+4:39-4:49: @12[2]: _0 = _31\n+4:39-4:49: @12.Goto: goto -&gt; bb16\"><span class=\"annotation\">@12\u298a</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"4:39-4:49: @16.Goto: goto -&gt; bb17\"><span class=\"annotation\">@16\u298a</span>PartialOrd<span class=\"annotation\">\u2989@16</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:39-4:49: @12[1]: _31 = _23\n+4:39-4:49: @12[2]: _0 = _31\n+4:39-4:49: @12.Goto: goto -&gt; bb16\"><span class=\"annotation\">\u2989@12</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:39-4:49: @15[1]: _30 = Equal\n+4:39-4:49: @15[2]: _0 = Option::&lt;std::cmp::Ordering&gt;::Some(move _30)\n+4:39-4:49: @15.Goto: goto -&gt; bb16\"><span class=\"annotation\">\u2989@14,15</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @17.Goto: goto -&gt; bb18\"><span class=\"annotation\">\u2989@17</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:49-4:49: @18.Return: return\"><span class=\"annotation\">@18\u298a</span>\u2038<span class=\"annotation\">\u2989@18</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "49d73b3457b7cf7dbd9f7bfbc752e14c7187642b", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#4}-assert_receiver_is_total_eq.-------.InstrumentCoverage.0.html", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%234%7D-assert_receiver_is_total_eq.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%234%7D-assert_receiver_is_total_eq.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%234%7D-assert_receiver_is_total_eq.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,65 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#4}-assert_receiver_is_total_eq - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                  <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:35-4:37: @0[0]: _0 = const ()\n+4:37-4:37: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>Eq<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "bc34080f109747a5c539228d216dffacfdba0d6d", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#6}-eq.-------.InstrumentCoverage.0.html", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%236%7D-eq.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%236%7D-eq.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%236%7D-eq.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,67 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#6}-eq - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                       <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:24-4:33: @2[0]: _0 = const false\n+4:24-4:33: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:24-4:33: @1[0]: _0 = const true\n+4:24-4:33: @1.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1\u298a</span>PartialEq<span class=\"annotation\">\u2989@1</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:24-4:33: @2[0]: _0 = const false\n+4:24-4:33: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">\u2989@2</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:33-4:33: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "376c8dd80d096e6976fcbbfb41e7cb1f4586b7b6", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#6}-ne.-------.InstrumentCoverage.0.html", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,71 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#6}-ne - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                       <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:24-4:33: @2[0]: _0 = const false\n+4:24-4:33: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:24-4:33: @5[0]: _9 = const true\n+4:24-4:33: @5.Goto: goto -&gt; bb8\"><span class=\"annotation\">@5\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:24-4:33: @6[0]: _9 = const false\n+4:24-4:33: @6.Goto: goto -&gt; bb8\"><span class=\"annotation\">@6\u298a</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"4:24-4:33: @1[0]: _0 = const true\n+4:24-4:33: @1.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1\u298a</span>PartialEq<span class=\"annotation\">\u2989@1</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:24-4:33: @6[0]: _9 = const false\n+4:24-4:33: @6.Goto: goto -&gt; bb8\"><span class=\"annotation\">\u2989@6</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:24-4:33: @5[0]: _9 = const true\n+4:24-4:33: @5.Goto: goto -&gt; bb8\"><span class=\"annotation\">\u2989@5</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:24-4:33: @2[0]: _0 = const false\n+4:24-4:33: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">\u2989@2</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:33-4:33: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "c3fed16a3b4eecba078f5613d711d53378ad8541", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#7}-fmt.-------.InstrumentCoverage.0.html", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%237%7D-fmt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%237%7D-fmt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%237%7D-fmt.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,99 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#7}-fmt - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:17-4:22: @0[0]: FakeRead(ForMatchedPlace, (*_1))\n+4:17-4:22: @0[2]: _3 = &amp;((*_1).0: usize)\n+4:17-4:22: @0[4]: _4 = &amp;((*_1).1: usize)\n+4:17-4:22: @0[6]: _5 = &amp;((*_1).2: usize)\n+4:17-4:22: @0[9]: _7 = &amp;mut (*_2)\n+4:17-4:22: @0[12]: _9 = const &quot;Version&quot;\n+4:17-4:22: @0[13]: _8 = &amp;(*_9)\n+4:17-4:22: @0.Call: _6 = Formatter::debug_struct(move _7, move _8) -&gt; [return: bb1, unwind: bb6]\n+4:17-4:22: @1[2]: FakeRead(ForLet, _6)\n+4:17-4:22: @1[6]: _11 = &amp;mut _6\n+4:17-4:22: @1[9]: _13 = const &quot;major&quot;\n+4:17-4:22: @1[10]: _12 = &amp;(*_13)\n+4:17-4:22: @1[15]: _17 = &amp;(*_3)\n+4:17-4:22: @1[16]: _16 = &amp;_17\n+4:17-4:22: @1[17]: _15 = &amp;(*_16)\n+4:17-4:22: @1[18]: _14 = move _15 as &amp;dyn std::fmt::Debug (Pointer(Unsize))\n+4:17-4:22: @1.Call: _10 = DebugStruct::field(move _11, move _12, move _14) -&gt; [return: bb2, unwind: bb6]\n+4:17-4:22: @2[9]: _19 = &amp;mut _6\n+4:17-4:22: @2[12]: _21 = const &quot;minor&quot;\n+4:17-4:22: @2[13]: _20 = &amp;(*_21)\n+4:17-4:22: @2[18]: _25 = &amp;(*_4)\n+4:17-4:22: @2[19]: _24 = &amp;_25\n+4:17-4:22: @2[20]: _23 = &amp;(*_24)\n+4:17-4:22: @2[21]: _22 = move _23 as &amp;dyn std::fmt::Debug (Pointer(Unsize))\n+4:17-4:22: @2.Call: _18 = DebugStruct::field(move _19, move _20, move _22) -&gt; [return: bb3, unwind: bb6]\n+4:17-4:22: @3[9]: _27 = &amp;mut _6\n+4:17-4:22: @3[12]: _29 = const &quot;patch&quot;\n+4:17-4:22: @3[13]: _28 = &amp;(*_29)\n+4:17-4:22: @3[18]: _33 = &amp;(*_5)\n+4:17-4:22: @3[19]: _32 = &amp;_33\n+4:17-4:22: @3[20]: _31 = &amp;(*_32)\n+4:17-4:22: @3[21]: _30 = move _31 as &amp;dyn std::fmt::Debug (Pointer(Unsize))\n+4:17-4:22: @3.Call: _26 = DebugStruct::field(move _27, move _28, move _30) -&gt; [return: bb4, unwind: bb6]\n+4:17-4:22: @4[8]: _34 = &amp;mut _6\n+4:17-4:22: @4.Call: _0 = DebugStruct::finish(move _34) -&gt; [return: bb5, unwind: bb6]\n+4:22-4:22: @5.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5\u298a</span>Debug<span class=\"annotation\">\u2989@0,1,2,3,4,5</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "6a4f11e07544648d5e18ede75b772e7904b2a5c0", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#8}-clone.-------.InstrumentCoverage.0.html", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%238%7D-clone.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%238%7D-clone.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%238%7D-clone.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,78 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#8}-clone - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">         <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:10-4:15: @0[0]: FakeRead(ForMatchedPlace, (*_1))\n+4:10-4:15: @0[2]: _2 = &amp;((*_1).0: usize)\n+4:10-4:15: @0[4]: _3 = &amp;((*_1).1: usize)\n+4:10-4:15: @0[6]: _4 = &amp;((*_1).2: usize)\n+4:10-4:15: @0[10]: _7 = &amp;(*_2)\n+4:10-4:15: @0[11]: _6 = &amp;(*_7)\n+4:10-4:15: @0.Call: _5 = &lt;usize as Clone&gt;::clone(move _6) -&gt; [return: bb1, unwind: bb4]\n+4:10-4:15: @1[4]: _10 = &amp;(*_3)\n+4:10-4:15: @1[5]: _9 = &amp;(*_10)\n+4:10-4:15: @1.Call: _8 = &lt;usize as Clone&gt;::clone(move _9) -&gt; [return: bb2, unwind: bb4]\n+4:10-4:15: @2[4]: _13 = &amp;(*_4)\n+4:10-4:15: @2[5]: _12 = &amp;(*_13)\n+4:10-4:15: @2.Call: _11 = &lt;usize as Clone&gt;::clone(move _12) -&gt; [return: bb3, unwind: bb4]\n+4:10-4:15: @3[1]: _0 = Version { major: move _5, minor: move _8, patch: move _11 }\n+4:15-4:15: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>Clone<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "618f84513e908926a80f98714ec248bfc6c6c65a", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.simple_loop/simple_loop.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -89,39 +89,45 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:9-12:16: @3[6]: _7 = _1\n 12:9-12:16: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+13:5-18:6: @6[1]: _6 = const ()\n+18:6-18:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\">        countdown</span></span>\n+13:5-18:6: @6[1]: _6 = const ()\n+18:6-18:6: @6.Goto: goto -&gt; bb7\">        countdown</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\">        =</span></span>\n+13:5-18:6: @6[1]: _6 = const ()\n+18:6-18:6: @6.Goto: goto -&gt; bb7\">        =</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\">            10</span></span>\n+13:5-18:6: @6[1]: _6 = const ()\n+18:6-18:6: @6.Goto: goto -&gt; bb7\">            10</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\">        ;</span></span>\n+13:5-18:6: @6[1]: _6 = const ()\n+18:6-18:6: @6.Goto: goto -&gt; bb7\">        ;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+13:5-18:6: @6[1]: _6 = const ()\n+18:6-18:6: @6.Goto: goto -&gt; bb7\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:6-18:6: @5.Goto: goto -&gt; bb7\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    loop</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n 23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n 23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@8,9\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n 23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n 23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\">                ==</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n 23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n 23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\">            0<span class=\"annotation\">\u2989@8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:13-27:18: @12[0]: _0 = const ()\"><span class=\"annotation\">@10,12\u298a</span>break<span class=\"annotation\">\u2989@10,12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:18: @12[0]: _0 = const ()\"><span class=\"annotation\">@10,12\u298a</span>break<span class=\"annotation\">\u2989@10,12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\"><span class=\"annotation\">@11\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\">        -=</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\">        1<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\"><span class=\"annotation\">@13\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        -=</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:6-34:6: @7.Goto: goto -&gt; bb8\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:2-35:2: @12.Return: return\"><span class=\"annotation\">@10,12\u298a</span>\u2038<span class=\"annotation\">\u2989@10,12</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "66885d0612bfc5592bf3fb114e38cd1878037e78", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.simple_match/simple_match.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 25, "deletions": 37, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -86,51 +86,39 @@\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 1<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:8-10:15: @3[6]: _7 = _1\n 10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n-10:16-12:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+10:16-12:6: @6[1]: _6 = const ()\n+12:6-12:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n-10:16-12:6: @6[1]: _6 = const ()\">        countdown = 0;</span></span>\n+10:16-12:6: @6[1]: _6 = const ()\n+12:6-12:6: @6.Goto: goto -&gt; bb7\">        countdown = 0;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n-10:16-12:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+10:16-12:6: @6[1]: _6 = const ()\n+12:6-12:6: @6.Goto: goto -&gt; bb7\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:6-12:6: @5.Goto: goto -&gt; bb7\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:9-15:10: @11[2]: _17 = discriminant(_14)\"><span class=\"annotation\">@9,10,11\u298a</span>for</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:9-15:10: @11[2]: _17 = discriminant(_14)\">        _<span class=\"annotation\">\u2989@9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    for</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:9-15:10: @15[1]: _18 = ((_14 as Some).0: i32)\n+15:9-15:10: @15[3]: _19 = _18\n+15:9-15:10: @15[4]: _12 = move _19\n+15:9-15:10: @15[5]: _13 = const ()\"><span class=\"annotation\">@13,15,17\u298a</span>_<span class=\"annotation\">\u2989@13,15,17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:13: @7[4]: _9 = std::ops::Range::&lt;i32&gt; { start: const 0_i32, end: const 2_i32 }\n-17:9-17:13: @7.Call: _8 = &lt;std::ops::Range&lt;i32&gt; as IntoIterator&gt;::into_iter(move _9) -&gt; [return: bb8, unwind: bb22]\n-17:9-17:13: @8[1]: FakeRead(ForMatchedPlace, _8)\n-17:9-17:13: @8[3]: _10 = move _8\"><span class=\"annotation\">@7,8\u298a</span>0..2<span class=\"annotation\">\u2989@7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:13: @10[5]: _16 = &amp;mut _10\n+17:9-17:13: @10[6]: _15 = &amp;mut (*_16)\n+17:9-17:13: @10.Call: _14 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _15) -&gt; [return: bb11, unwind: bb22]\n+17:9-17:13: @11[1]: FakeRead(ForMatchedPlace, _14)\"><span class=\"annotation\">@9,10,11\u298a</span>0..2<span class=\"annotation\">\u2989@9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let z</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        match</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n-24:13-24:14: @17[1]: _24 = &amp;_5\n-26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\"><span class=\"annotation\">@13,15,17\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n-24:13-24:14: @17[1]: _24 = &amp;_5\n-26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">        {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n-24:13-24:14: @17[1]: _24 = &amp;_5\n-26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">            x</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n-24:13-24:14: @17[1]: _24 = &amp;_5\n-26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">            if</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n-24:13-24:14: @17[1]: _24 = &amp;_5\n-26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                x</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n-24:13-24:14: @17[1]: _24 = &amp;_5\n-26:17-26:18: @17[4]: _26 = (*_24)\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\"><span class=\"annotation\">@13,15,17\u298a</span>countdown<span class=\"annotation\">\u2989@13,15,17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:13-24:14: @18[3]: _23 = _5\"><span class=\"annotation\">@18\u298a</span>x<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\"><span class=\"annotation\">@13,15,17\u298a</span>x</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @17[4]: _26 = (*_24)\n 26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                    &lt;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n-24:13-24:14: @17[1]: _24 = &amp;_5\n-26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                1<span class=\"annotation\">\u2989@13,15,17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                1<span class=\"annotation\">\u2989@13,15,17</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:18-28:18: @19.Goto: goto -&gt; bb16\"><span class=\"annotation\">@19\u298a</span>\u2038<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            =&gt;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n 31:17-31:30: @18[6]: _22 = move _27\n@@ -184,7 +172,7 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            =&gt;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:13-40:15: @16[0]: _21 = const ()\"><span class=\"annotation\">@16\u298a</span>{}<span class=\"annotation\">\u2989@16</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:6-42:6: @8.Goto: goto -&gt; bb9\"><span class=\"annotation\">@7,8\u298a</span>\u2038<span class=\"annotation\">\u2989@7,8</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"42:6-42:6: @20.Goto: goto -&gt; bb9\"><span class=\"annotation\">@20\u298a</span>\u2038<span class=\"annotation\">\u2989@20</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:2-43:2: @12.Return: return\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "db08315baa65edba8a7ab25c2952692e3c3e100a", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.tight_infinite_loop/tight_infinite_loop.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.tight_infinite_loop%2Ftight_infinite_loop.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.tight_infinite_loop%2Ftight_infinite_loop.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.tight_infinite_loop%2Ftight_infinite_loop.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,70 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>tight_infinite_loop.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:8-2:13: @0[1]: _1 = const false\n+2:8-2:13: @0[2]: FakeRead(ForMatchedPlace, _1)\"><span class=\"annotation\">@0\u298a</span>false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"3:9-3:16: @4.FalseUnwind: falseUnwind -&gt; [real: bb5, cleanup: bb6]\n+3:14-3:16: @5[0]: _3 = const ()\"><span class=\"annotation\">@4,5\u298a</span>loop {}<span class=\"annotation\">\u2989@4,5</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"3:16-3:16: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>\u2038<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"3:16-3:16: @5.Goto: goto -&gt; bb4\"><span class=\"annotation\">@4,5\u298a</span>\u2038<span class=\"annotation\">\u2989@4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:2-5:2: @2.Return: return\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "8a0b1ae8dab11c2d5899e5533754981458700e93", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.try_error_result/try_error_result.call.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.call.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.call.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.call.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -67,7 +67,7 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:12-8:14: @2[1]: _4 = ()\n 8:9-8:15: @2[2]: _0 = std::result::Result::&lt;(), ()&gt;::Ok(move _4)\"><span class=\"annotation\">@2\u298a</span>Ok(())<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:2-10:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"9:6-9:6: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>\u2038<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:2-10:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "428c6fadc274172cbbc9507e8532c0fde4a25dc4", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.try_error_result/try_error_result.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 38, "deletions": 24, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -65,37 +65,51 @@\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:21-14:23: @0[1]: _1 = const 10_i32\n 13:9-14:18: @0[2]: FakeRead(ForLet, _1)\">        countdown = 10<span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:10: @4[2]: _12 = discriminant(_9)\"><span class=\"annotation\">@2,3,4\u298a</span>for</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:10: @4[2]: _12 = discriminant(_9)\">        _<span class=\"annotation\">\u2989@2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    for</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:10: @8[1]: _13 = ((_9 as Some).0: i32)\n+17:9-17:10: @8[3]: _14 = _13\n+17:9-17:10: @8[4]: _7 = move _14\n+17:9-17:10: @8[5]: _8 = const ()\"><span class=\"annotation\">@6,8\u298a</span>_<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:9-19:14: @0[6]: _4 = std::ops::Range::&lt;i32&gt; { start: const 0_i32, end: const 10_i32 }\n-19:9-19:14: @0.Call: _3 = &lt;std::ops::Range&lt;i32&gt; as IntoIterator&gt;::into_iter(move _4) -&gt; [return: bb1, unwind: bb32]\n-19:9-19:14: @1[1]: FakeRead(ForMatchedPlace, _3)\n-19:9-19:14: @1[3]: _5 = move _3\"><span class=\"annotation\">@0,1\u298a</span>0..10<span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:9-19:14: @3[5]: _11 = &amp;mut _5\n+19:9-19:14: @3[6]: _10 = &amp;mut (*_11)\n+19:9-19:14: @3.Call: _9 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _10) -&gt; [return: bb4, unwind: bb32]\n+19:9-19:14: @4[1]: FakeRead(ForMatchedPlace, _9)\"><span class=\"annotation\">@2,3,4\u298a</span>0..10<span class=\"annotation\">\u2989@2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\"><span class=\"annotation\">@6,8\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\">            -= 1<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:13-25:22: @9[3]: _19 = _1\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+25:13-25:22: @9[3]: _19 = _1\n 25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n-25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\"><span class=\"annotation\">@9\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\"><span class=\"annotation\">@9\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+25:13-25:22: @9[3]: _19 = _1\n+25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n+25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">            -= 1</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+25:13-25:22: @9[3]: _19 = _1\n+25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n+25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">        ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+25:13-25:22: @9[3]: _19 = _1\n+25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n+25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">        if</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+25:13-25:22: @9[3]: _19 = _1\n+25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n+25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">            countdown &lt; 5<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:13-27:41: @12.Call: _22 = call(const true) -&gt; [return: bb13, unwind: bb32]\n-27:13-27:42: @13.Call: _21 = &lt;std::result::Result&lt;(), ()&gt; as Try&gt;::into_result(move _22) -&gt; [return: bb14, unwind: bb32]\n-27:13-27:42: @14[1]: FakeRead(ForMatchedPlace, _21)\n-27:41-27:42: @14[2]: _23 = discriminant(_21)\"><span class=\"annotation\">@10,12,13,14\u298a</span>call(/*return_error=*/ true)?<span class=\"annotation\">\u2989@10,12,13,14</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:41: @12.Call: _22 = call(const true) -&gt; [return: bb13, unwind: bb32]\"><span class=\"annotation\">@10,12,13,14\u298a</span>call(/*return_error=*/ true)<span class=\"annotation\">\u2989@10,12,13,14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:41-27:42: @18[1]: _24 = ((_21 as Err).0: ())\n+27:41-27:42: @18[4]: _27 = _24\n+27:41-27:42: @18.Call: _26 = &lt;() as From&lt;()&gt;&gt;::from(move _27) -&gt; [return: bb19, unwind: bb32]\"><span class=\"annotation\">@16,18,19,20\u298a</span>?<span class=\"annotation\">\u2989@16,18,19,20</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        else</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:13-31:42: @11.Call: _31 = call(const false) -&gt; [return: bb21, unwind: bb32]\n-31:13-31:43: @21.Call: _30 = &lt;std::result::Result&lt;(), ()&gt; as Try&gt;::into_result(move _31) -&gt; [return: bb22, unwind: bb32]\n-31:13-31:43: @22[1]: FakeRead(ForMatchedPlace, _30)\n-31:42-31:43: @22[2]: _32 = discriminant(_30)\"><span class=\"annotation\">@11,21,22\u298a</span>call(/*return_error=*/ false)?<span class=\"annotation\">\u2989@11,21,22</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:8-34:10: @5[9]: _38 = ()\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:13-31:42: @11.Call: _31 = call(const false) -&gt; [return: bb21, unwind: bb32]\"><span class=\"annotation\">@11,21,22\u298a</span>call(/*return_error=*/ false)<span class=\"annotation\">\u2989@11,21,22</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:42-31:43: @26[1]: _33 = ((_30 as Err).0: ())\n+31:42-31:43: @26[4]: _36 = _33\n+31:42-31:43: @26.Call: _35 = &lt;() as From&lt;()&gt;&gt;::from(move _36) -&gt; [return: bb27, unwind: bb32]\"><span class=\"annotation\">@24,26,27,28\u298a</span>?<span class=\"annotation\">\u2989@24,26,27,28</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"32:10-32:10: @15.Goto: goto -&gt; bb29\"><span class=\"annotation\">@15\u298a</span>\u2038<span class=\"annotation\">\u2989@15</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:10-32:10: @23.Goto: goto -&gt; bb29\"><span class=\"annotation\">@23\u298a</span>\u2038<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @1.Goto: goto -&gt; bb2\"><span class=\"annotation\">@0,1\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"33:6-33:6: @29.Goto: goto -&gt; bb2\"><span class=\"annotation\">@29\u298a</span>\u2038<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:8-34:10: @5[9]: _38 = ()\n 34:5-34:11: @5[10]: _0 = std::result::Result::&lt;(), ()&gt;::Ok(move _38)\"><span class=\"annotation\">@5\u298a</span>Ok(())<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:2-35:2: @31.Return: return\"><span class=\"annotation\">@31\u298a</span>\u2038<span class=\"annotation\">\u2989@31</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:2-35:2: @30.Goto: goto -&gt; bb31\"><span class=\"annotation\">@30\u298a</span>\u2038<span class=\"annotation\">\u2989@30</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:2-35:2: @31.Return: return\"><span class=\"annotation\">@31\u298a</span>\u2038<span class=\"annotation\">\u2989@31</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "b9f6f4d7832b6e60940778313dadc3d9a9d76c18", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.various_conditions/various_conditions.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 79, "deletions": 54, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.various_conditions%2Fvarious_conditions.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.various_conditions%2Fvarious_conditions.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.various_conditions%2Fvarious_conditions.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -64,32 +64,42 @@\n 4:9-4:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:12: @0[5]: _3 = const true\n 5:8-5:12: @0[6]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0\u298a</span>true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n-5:13-7:6: @3[1]: _2 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+5:13-7:6: @3[1]: _2 = const ()\n+7:6-7:6: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n-5:13-7:6: @3[1]: _2 = const ()\">        countdown = 10;</span></span>\n+5:13-7:6: @3[1]: _2 = const ()\n+7:6-7:6: @3.Goto: goto -&gt; bb4\">        countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n-5:13-7:6: @3[1]: _2 = const ()\">    }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+5:13-7:6: @3[1]: _2 = const ()\n+7:6-7:6: @3.Goto: goto -&gt; bb4\">    }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:6-7:6: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    const B: u32 = 100;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:10: @25[0]: FakeRead(ForLet, _4)\"><span class=\"annotation\">@25\u298a</span>x<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:16-10:25: @4[5]: _6 = _1\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:9-10:10: @25[0]: FakeRead(ForLet, _4)\"><span class=\"annotation\">@25\u298a</span>x<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:16-10:25: @4[5]: _6 = _1\n 10:16-10:29: @4[6]: _5 = Gt(move _6, const 7_u32)\n 10:16-10:29: @4[8]: FakeRead(ForMatchedPlace, _5)\"><span class=\"annotation\">@4\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"11:9-11:23: @7[0]: _7 = CheckedSub(_1, const 4_u32)\"><span class=\"annotation\">@5,7\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@5,7</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:10: @8[1]: _4 = const B\"><span class=\"annotation\">@8\u298a</span>B<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n+12:9-12:10: @8[1]: _4 = const B\"><span class=\"annotation\">@8\u298a</span>countdown -= 4;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n+12:9-12:10: @8[1]: _4 = const B\">        B<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:15-13:24: @6[2]: _9 = _1\n 13:15-13:28: @6[3]: _8 = Gt(move _9, const 2_u32)\n 13:15-13:28: @6[5]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@6\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:12-14:21: @11[5]: _14 = _1\n 14:12-14:25: @11[6]: _13 = Lt(move _14, const 1_u32)\"><span class=\"annotation\">@9,11\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@9,11</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:29-14:38: @18[2]: _16 = _1\n-14:29-14:42: @18[3]: _15 = Gt(move _16, const 5_u32)\"><span class=\"annotation\">@18\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:46-14:55: @14[2]: _18 = _1\n-14:46-14:60: @14[3]: _17 = Ne(move _18, const 9_u32)\"><span class=\"annotation\">@14\u298a</span>countdown != 9<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n-14:61-16:10: @22[1]: _10 = const ()\"><span class=\"annotation\">@20,22\u298a</span>{</span></span>\n+14:29-14:42: @18[3]: _15 = Gt(move _16, const 5_u32)\"><span class=\"annotation\">@18\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@18</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:42-14:42: @16.Goto: goto -&gt; bb19\"><span class=\"annotation\">@16\u298a</span>\u2038<span class=\"annotation\">\u2989@16</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:42-14:42: @17.Goto: goto -&gt; bb19\"><span class=\"annotation\">@17\u298a</span>\u2038<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:46-14:55: @14[2]: _18 = _1\n+14:46-14:60: @14[3]: _17 = Ne(move _18, const 9_u32)\"><span class=\"annotation\">@14\u298a</span>countdown != 9<span class=\"annotation\">\u2989@14</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:60-14:60: @12.Goto: goto -&gt; bb15\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:60-14:60: @13.Goto: goto -&gt; bb15\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n+14:61-16:10: @22[1]: _10 = const ()\n+16:10-16:10: @22.Goto: goto -&gt; bb23\"><span class=\"annotation\">@20,22\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n-14:61-16:10: @22[1]: _10 = const ()\">            countdown = 0;</span></span>\n+14:61-16:10: @22[1]: _10 = const ()\n+16:10-16:10: @22.Goto: goto -&gt; bb23\">            countdown = 0;</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n-14:61-16:10: @22[1]: _10 = const ()\">        }<span class=\"annotation\">\u2989@20,22</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:23: @23[2]: _19 = CheckedSub(_1, const 5_u32)\"><span class=\"annotation\">@23\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:9-18:18: @24[1]: _4 = _1\"><span class=\"annotation\">@24\u298a</span>countdown<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+14:61-16:10: @22[1]: _10 = const ()\n+16:10-16:10: @22.Goto: goto -&gt; bb23\">        }<span class=\"annotation\">\u2989@20,22</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:10-16:10: @21.Goto: goto -&gt; bb23\"><span class=\"annotation\">@21\u298a</span>\u2038<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n+18:9-18:18: @24[1]: _4 = _1\"><span class=\"annotation\">@24\u298a</span>countdown -= 5;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n+18:9-18:18: @24[1]: _4 = _1\">        countdown<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:9-20:15: @10[0]: _0 = const ()\"><span class=\"annotation\">@10\u298a</span>return<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n@@ -98,29 +108,35 @@\n 23:9-23:22: @25[4]: FakeRead(ForLet, _21)\"><span class=\"annotation\">@25\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:8-24:12: @25[7]: _23 = const true\n 24:8-24:12: @25[8]: FakeRead(ForMatchedPlace, _23)\"><span class=\"annotation\">@25\u298a</span>true<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n-24:13-26:6: @28[1]: _22 = const ()\"><span class=\"annotation\">@26,28\u298a</span>{</span></span>\n+24:13-26:6: @28[1]: _22 = const ()\n+26:6-26:6: @28.Goto: goto -&gt; bb29\"><span class=\"annotation\">@26,28\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n-24:13-26:6: @28[1]: _22 = const ()\">        countdown = 10;</span></span>\n+24:13-26:6: @28[1]: _22 = const ()\n+26:6-26:6: @28.Goto: goto -&gt; bb29\">        countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n-24:13-26:6: @28[1]: _22 = const ()\">    }<span class=\"annotation\">\u2989@26,28</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+24:13-26:6: @28[1]: _22 = const ()\n+26:6-26:6: @28.Goto: goto -&gt; bb29\">    }<span class=\"annotation\">\u2989@26,28</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"26:6-26:6: @27.Goto: goto -&gt; bb29\"><span class=\"annotation\">@27\u298a</span>\u2038<span class=\"annotation\">\u2989@27</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:8-28:17: @29[5]: _26 = _21\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:8-28:17: @29[5]: _26 = _21\n 28:8-28:21: @29[6]: _25 = Gt(move _26, const 7_i32)\n 28:8-28:21: @29[8]: FakeRead(ForMatchedPlace, _25)\"><span class=\"annotation\">@29\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:9-29:23: @32[0]: _27 = CheckedSub(_21, const 4_i32)\"><span class=\"annotation\">@30,32\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@30,32</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:15-30:24: @31[2]: _29 = _21\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @33[0]: _21 = move (_27.0: i32)\"><span class=\"annotation\">@33\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@33</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:15-30:24: @31[2]: _29 = _21\n 30:15-30:28: @31[3]: _28 = Gt(move _29, const 2_i32)\n 30:15-30:28: @31[5]: FakeRead(ForMatchedPlace, _28)\"><span class=\"annotation\">@31\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@31</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:12-31:21: @36[5]: _34 = _21\n-31:12-31:25: @36[6]: _33 = Lt(move _34, const 1_i32)\"><span class=\"annotation\">@34,36\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@34,36</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:29-31:38: @43[2]: _36 = _21\n-31:29-31:42: @43[3]: _35 = Gt(move _36, const 5_i32)\"><span class=\"annotation\">@43\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@43</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:46-31:55: @39[2]: _38 = _21\n-31:46-31:60: @39[3]: _37 = Ne(move _38, const 9_i32)\"><span class=\"annotation\">@39\u298a</span>countdown != 9<span class=\"annotation\">\u2989@39</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n-31:61-33:10: @47[1]: _30 = const ()\"><span class=\"annotation\">@45,47\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n-31:61-33:10: @47[1]: _30 = const ()\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n-31:61-33:10: @47[1]: _30 = const ()\">        }<span class=\"annotation\">\u2989@45,47</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:23: @48[2]: _39 = CheckedSub(_21, const 5_i32)\"><span class=\"annotation\">@48\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@48</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:12-31:21: @36[5]: _34 = _21\n+31:12-31:25: @36[6]: _33 = Lt(move _34, const 1_i32)\"><span class=\"annotation\">@34,36\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@34,36</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:29-31:38: @43[2]: _36 = _21\n+31:29-31:42: @43[3]: _35 = Gt(move _36, const 5_i32)\"><span class=\"annotation\">@43\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@43</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:42-31:42: @41.Goto: goto -&gt; bb44\"><span class=\"annotation\">@41\u298a</span>\u2038<span class=\"annotation\">\u2989@41</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:42-31:42: @42.Goto: goto -&gt; bb44\"><span class=\"annotation\">@42\u298a</span>\u2038<span class=\"annotation\">\u2989@42</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:46-31:55: @39[2]: _38 = _21\n+31:46-31:60: @39[3]: _37 = Ne(move _38, const 9_i32)\"><span class=\"annotation\">@39\u298a</span>countdown != 9<span class=\"annotation\">\u2989@39</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:60-31:60: @37.Goto: goto -&gt; bb40\"><span class=\"annotation\">@37\u298a</span>\u2038<span class=\"annotation\">\u2989@37</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:60-31:60: @38.Goto: goto -&gt; bb40\"><span class=\"annotation\">@38\u298a</span>\u2038<span class=\"annotation\">\u2989@38</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n+31:61-33:10: @47[1]: _30 = const ()\n+33:10-33:10: @47.Goto: goto -&gt; bb48\"><span class=\"annotation\">@45,47\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n+31:61-33:10: @47[1]: _30 = const ()\n+33:10-33:10: @47.Goto: goto -&gt; bb48\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n+31:61-33:10: @47[1]: _30 = const ()\n+33:10-33:10: @47.Goto: goto -&gt; bb48\">        }<span class=\"annotation\">\u2989@45,47</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:10-33:10: @46.Goto: goto -&gt; bb48\"><span class=\"annotation\">@46\u298a</span>\u2038<span class=\"annotation\">\u2989@46</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:23: @49[0]: _21 = move (_39.0: i32)\"><span class=\"annotation\">@49\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@49</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:15: @35[0]: _0 = const ()\"><span class=\"annotation\">@35\u298a</span>return<span class=\"annotation\">\u2989@35</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n@@ -129,29 +145,35 @@\n 39:9-39:22: @50[4]: FakeRead(ForLet, _41)\"><span class=\"annotation\">@50\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"40:8-40:12: @50[7]: _43 = const true\n 40:8-40:12: @50[8]: FakeRead(ForMatchedPlace, _43)\"><span class=\"annotation\">@50\u298a</span>true<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\"><span class=\"annotation\">@51,53\u298a</span>{</span></span>\n+40:13-42:6: @53[1]: _42 = const ()\n+42:6-42:6: @53.Goto: goto -&gt; bb54\"><span class=\"annotation\">@51,53\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\">        countdown = 1;</span></span>\n+40:13-42:6: @53[1]: _42 = const ()\n+42:6-42:6: @53.Goto: goto -&gt; bb54\">        countdown = 1;</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\">    }<span class=\"annotation\">\u2989@51,53</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+40:13-42:6: @53[1]: _42 = const ()\n+42:6-42:6: @53.Goto: goto -&gt; bb54\">    }<span class=\"annotation\">\u2989@51,53</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:6-42:6: @52.Goto: goto -&gt; bb54\"><span class=\"annotation\">@52\u298a</span>\u2038<span class=\"annotation\">\u2989@52</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"44:9-44:10: @77[0]: FakeRead(ForLet, _44)\"><span class=\"annotation\">@77\u298a</span>z<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"44:16-44:25: @54[5]: _46 = _41\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"44:9-44:10: @77[0]: FakeRead(ForLet, _44)\"><span class=\"annotation\">@77\u298a</span>z<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"44:16-44:25: @54[5]: _46 = _41\n 44:16-44:29: @54[6]: _45 = Gt(move _46, const 7_i32)\n 44:16-44:29: @54[8]: FakeRead(ForMatchedPlace, _45)\"><span class=\"annotation\">@54\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@54</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"45:9-45:23: @57[0]: _47 = CheckedSub(_41, const 4_i32)\"><span class=\"annotation\">@55,57\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@55,57</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"46:15-46:24: @56[2]: _49 = _41\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"45:9-45:23: @58[0]: _41 = move (_47.0: i32)\"><span class=\"annotation\">@58\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@58</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"46:15-46:24: @56[2]: _49 = _41\n 46:15-46:28: @56[3]: _48 = Gt(move _49, const 2_i32)\n 46:15-46:28: @56[5]: FakeRead(ForMatchedPlace, _48)\"><span class=\"annotation\">@56\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@56</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:12-47:21: @61[5]: _54 = _41\n-47:12-47:25: @61[6]: _53 = Lt(move _54, const 1_i32)\"><span class=\"annotation\">@59,61\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@59,61</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:29-47:38: @68[2]: _56 = _41\n-47:29-47:42: @68[3]: _55 = Gt(move _56, const 5_i32)\"><span class=\"annotation\">@68\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@68</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:46-47:55: @64[2]: _58 = _41\n-47:46-47:60: @64[3]: _57 = Ne(move _58, const 9_i32)\"><span class=\"annotation\">@64\u298a</span>countdown != 9<span class=\"annotation\">\u2989@64</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\"><span class=\"annotation\">@70,72\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\">        }<span class=\"annotation\">\u2989@70,72</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:9-50:23: @73[2]: _59 = CheckedSub(_41, const 5_i32)\"><span class=\"annotation\">@73\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@73</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:12-47:21: @61[5]: _54 = _41\n+47:12-47:25: @61[6]: _53 = Lt(move _54, const 1_i32)\"><span class=\"annotation\">@59,61\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@59,61</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:29-47:38: @68[2]: _56 = _41\n+47:29-47:42: @68[3]: _55 = Gt(move _56, const 5_i32)\"><span class=\"annotation\">@68\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@68</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:42-47:42: @66.Goto: goto -&gt; bb69\"><span class=\"annotation\">@66\u298a</span>\u2038<span class=\"annotation\">\u2989@66</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:42-47:42: @67.Goto: goto -&gt; bb69\"><span class=\"annotation\">@67\u298a</span>\u2038<span class=\"annotation\">\u2989@67</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:46-47:55: @64[2]: _58 = _41\n+47:46-47:60: @64[3]: _57 = Ne(move _58, const 9_i32)\"><span class=\"annotation\">@64\u298a</span>countdown != 9<span class=\"annotation\">\u2989@64</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:60-47:60: @62.Goto: goto -&gt; bb65\"><span class=\"annotation\">@62\u298a</span>\u2038<span class=\"annotation\">\u2989@62</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:60-47:60: @63.Goto: goto -&gt; bb65\"><span class=\"annotation\">@63\u298a</span>\u2038<span class=\"annotation\">\u2989@63</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n+47:61-49:10: @72[1]: _50 = const ()\n+49:10-49:10: @72.Goto: goto -&gt; bb73\"><span class=\"annotation\">@70,72\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n+47:61-49:10: @72[1]: _50 = const ()\n+49:10-49:10: @72.Goto: goto -&gt; bb73\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n+47:61-49:10: @72[1]: _50 = const ()\n+49:10-49:10: @72.Goto: goto -&gt; bb73\">        }<span class=\"annotation\">\u2989@70,72</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:10-49:10: @71.Goto: goto -&gt; bb73\"><span class=\"annotation\">@71\u298a</span>\u2038<span class=\"annotation\">\u2989@71</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:9-50:23: @74[0]: _41 = move (_59.0: i32)\"><span class=\"annotation\">@74\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@74</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n 52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n@@ -206,23 +228,26 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:10: @98[0]: FakeRead(ForLet, _74)\"><span class=\"annotation\">@98\u298a</span>w<span class=\"annotation\">\u2989@98</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"57:16-57:25: @77[5]: _76 = _41\n 57:16-57:29: @77[6]: _75 = Gt(move _76, const 7_i32)\n 57:16-57:29: @77[8]: FakeRead(ForMatchedPlace, _75)\"><span class=\"annotation\">@77\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"58:9-58:23: @80[0]: _77 = CheckedSub(_41, const 4_i32)\"><span class=\"annotation\">@78,80\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@78,80</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"58:9-58:23: @81[0]: _41 = move (_77.0: i32)\"><span class=\"annotation\">@81\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@81</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"59:15-59:24: @79[2]: _79 = _41\n 59:15-59:28: @79[3]: _78 = Gt(move _79, const 2_i32)\n 59:15-59:28: @79[5]: FakeRead(ForMatchedPlace, _78)\"><span class=\"annotation\">@79\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@79</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:12-60:21: @84[5]: _84 = _41\n 60:12-60:25: @84[6]: _83 = Lt(move _84, const 1_i32)\"><span class=\"annotation\">@82,84\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@82,84</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:29-60:38: @91[2]: _86 = _41\n-60:29-60:42: @91[3]: _85 = Gt(move _86, const 5_i32)\"><span class=\"annotation\">@91\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@91</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:46-60:55: @87[2]: _88 = _41\n-60:46-60:60: @87[3]: _87 = Ne(move _88, const 9_i32)\"><span class=\"annotation\">@87\u298a</span>countdown != 9<span class=\"annotation\">\u2989@87</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\"><span class=\"annotation\">@93,95\u298a</span>{</span></span>\n+60:29-60:42: @91[3]: _85 = Gt(move _86, const 5_i32)\"><span class=\"annotation\">@91\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@91</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:42-60:42: @89.Goto: goto -&gt; bb92\"><span class=\"annotation\">@89\u298a</span>\u2038<span class=\"annotation\">\u2989@89</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:42-60:42: @90.Goto: goto -&gt; bb92\"><span class=\"annotation\">@90\u298a</span>\u2038<span class=\"annotation\">\u2989@90</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:46-60:55: @87[2]: _88 = _41\n+60:46-60:60: @87[3]: _87 = Ne(move _88, const 9_i32)\"><span class=\"annotation\">@87\u298a</span>countdown != 9<span class=\"annotation\">\u2989@87</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:60-60:60: @85.Goto: goto -&gt; bb88\"><span class=\"annotation\">@85\u298a</span>\u2038<span class=\"annotation\">\u2989@85</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:60-60:60: @86.Goto: goto -&gt; bb88\"><span class=\"annotation\">@86\u298a</span>\u2038<span class=\"annotation\">\u2989@86</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n+60:61-62:10: @95[1]: _80 = const ()\n+62:10-62:10: @95.Goto: goto -&gt; bb96\"><span class=\"annotation\">@93,95\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\">            countdown = 0;</span></span>\n+60:61-62:10: @95[1]: _80 = const ()\n+62:10-62:10: @95.Goto: goto -&gt; bb96\">            countdown = 0;</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\">        }<span class=\"annotation\">\u2989@93,95</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"63:9-63:23: @96[2]: _89 = CheckedSub(_41, const 5_i32)\"><span class=\"annotation\">@96\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@96</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+60:61-62:10: @95[1]: _80 = const ()\n+62:10-62:10: @95.Goto: goto -&gt; bb96\">        }<span class=\"annotation\">\u2989@93,95</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"62:10-62:10: @94.Goto: goto -&gt; bb96\"><span class=\"annotation\">@94\u298a</span>\u2038<span class=\"annotation\">\u2989@94</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"63:9-63:23: @97[0]: _41 = move (_89.0: i32)\"><span class=\"annotation\">@97\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@97</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"65:9-65:15: @83[0]: _0 = const ()\"><span class=\"annotation\">@83\u298a</span>return<span class=\"annotation\">\u2989@83</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"65:9-65:15: @83[0]: _0 = const ()\"><span class=\"annotation\">@83\u298a</span>return<span class=\"annotation\">\u2989@83</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:2-67:2: @102.Return: return\"><span class=\"annotation\">@102\u298a</span>\u2038<span class=\"annotation\">\u2989@102</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"67:2-67:2: @101.Goto: goto -&gt; bb102\"><span class=\"annotation\">@101\u298a</span>\u2038<span class=\"annotation\">\u2989@101</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:2-67:2: @102.Return: return\"><span class=\"annotation\">@102\u298a</span>\u2038<span class=\"annotation\">\u2989@102</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "5c49ec1970756e69400cda054bad5251bc86830e", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.while/while.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.while%2Fwhile.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.while%2Fwhile.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.while%2Fwhile.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,71 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>while.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:15-2:16: @0[1]: _1 = const 9_i32\n+2:9-2:12: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>num = 9<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"3:11-3:14: @2[2]: _4 = _1\n+3:11-3:20: @2[3]: _3 = Ge(move _4, const 10_i32)\n+3:11-3:20: @2[5]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@1,2\u298a</span>num &gt;= 10<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"3:21-4:6: @5[0]: _2 = const ()\"><span class=\"annotation\">@3,5\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"3:21-4:6: @5[0]: _2 = const ()\">    }<span class=\"annotation\">\u2989@3,5</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:6-4:6: @5.Goto: goto -&gt; bb1\"><span class=\"annotation\">@3,5\u298a</span>\u2038<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"5:2-5:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "be674dc7d38c7d53db4d581b45b1755ed824155e", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.while_early_return/while_early_return.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.while_early_return%2Fwhile_early_return.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.while_early_return%2Fwhile_early_return.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.while_early_return%2Fwhile_early_return.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -62,12 +62,10 @@\n <div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:25-5:27: @0[1]: _1 = const 10_i32\n 5:9-5:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n 7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n-7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>while</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n-7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n-7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\">        countdown</span></span>\n+7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n 7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n 7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\">            &gt;</span></span>\n@@ -104,16 +102,16 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                else</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:21-26:27: @10[0]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@10\u298a</span>Err(1)<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:18-27:18: @11.Goto: goto -&gt; bb13\"><span class=\"annotation\">@9,11\u298a</span>\u2038<span class=\"annotation\">\u2989@9,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\"><span class=\"annotation\">@7\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\">            -=</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\">        1<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @12[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@12\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @12[0]: _1 = move (_13.0: i32)\">            -=</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @12[0]: _1 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:8-35:10: @4[4]: _15 = ()\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:8-35:10: @4[4]: _15 = ()\n 35:5-35:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\"><span class=\"annotation\">@4\u298a</span>Ok(())<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:2-36:2: @14.Return: return\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"36:2-36:2: @13.Goto: goto -&gt; bb14\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:2-36:2: @14.Return: return\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "0f076a93c0977f0832a326bbf976633f2014c30e", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.closure/closure.main-{closure#0}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -65,16 +65,19 @@\n 35:13-35:26: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n 36:12-36:20: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n-36:21-38:10: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+36:21-38:10: @3[1]: _3 = const ()\n+38:10-38:10: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n-36:21-38:10: @3[1]: _3 = const ()\">            countdown = 10;</span></span>\n+36:21-38:10: @3[1]: _3 = const ()\n+38:10-38:10: @3.Goto: goto -&gt; bb4\">            countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n-36:21-38:10: @3[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"39:9-39:23: @4[4]: _6 = const &quot;alt string 2&quot;\n+36:21-38:10: @3[1]: _3 = const ()\n+38:10-38:10: @3.Goto: goto -&gt; bb4\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"38:10-38:10: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:9-39:23: @4[4]: _6 = const &quot;alt string 2&quot;\n 39:9-39:23: @4[5]: _5 = &amp;(*_6)\n 39:9-39:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n 40:6-40:6: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 2\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"39:9-39:23: @4[4]: _6 = const &quot;alt string 2&quot;\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"39:9-39:23: @4[4]: _6 = const &quot;alt string 2&quot;\n 39:9-39:23: @4[5]: _5 = &amp;(*_6)\n 39:9-39:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n 40:6-40:6: @5.Return: return\">    }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>"}, {"sha": "bc78a604e311e82edb8de43155dc40b0da586dac", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.closure/closure.main-{closure#1}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -65,16 +65,19 @@\n 77:13-77:26: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n 78:12-78:20: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n-78:21-80:10: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+78:21-80:10: @3[1]: _3 = const ()\n+80:10-80:10: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n-78:21-80:10: @3[1]: _3 = const ()\">            countdown = 10;</span></span>\n+78:21-80:10: @3[1]: _3 = const ()\n+80:10-80:10: @3.Goto: goto -&gt; bb4\">            countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n-78:21-80:10: @3[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"81:9-81:23: @4[4]: _6 = const &quot;alt string 4&quot;\n+78:21-80:10: @3[1]: _3 = const ()\n+80:10-80:10: @3.Goto: goto -&gt; bb4\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"80:10-80:10: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"81:9-81:23: @4[4]: _6 = const &quot;alt string 4&quot;\n 81:9-81:23: @4[5]: _5 = &amp;(*_6)\n 81:9-81:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n 82:6-82:6: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 4\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"81:9-81:23: @4[4]: _6 = const &quot;alt string 4&quot;\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"81:9-81:23: @4[4]: _6 = const &quot;alt string 4&quot;\n 81:9-81:23: @4[5]: _5 = &amp;(*_6)\n 81:9-81:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n 82:6-82:6: @5.Return: return\">    }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>"}, {"sha": "b0db2311730b0a9510b6ab4489b7fa5088d9e936", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.closure/closure.main-{closure#2}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -65,16 +65,19 @@\n 20:21-20:34: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n 21:20-21:28: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n-21:29-23:18: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+21:29-23:18: @3[1]: _3 = const ()\n+23:18-23:18: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n-21:29-23:18: @3[1]: _3 = const ()\">                    countdown = 10;</span></span>\n+21:29-23:18: @3[1]: _3 = const ()\n+23:18-23:18: @3.Goto: goto -&gt; bb4\">                    countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n-21:29-23:18: @3[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:17-24:31: @4[4]: _6 = const &quot;alt string 1&quot;\n+21:29-23:18: @3[1]: _3 = const ()\n+23:18-23:18: @3.Goto: goto -&gt; bb4\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:18-23:18: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:17-24:31: @4[4]: _6 = const &quot;alt string 1&quot;\n 24:17-24:31: @4[5]: _5 = &amp;(*_6)\n 24:17-24:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n 25:14-25:14: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 1\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"24:17-24:31: @4[4]: _6 = const &quot;alt string 1&quot;\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"24:17-24:31: @4[4]: _6 = const &quot;alt string 1&quot;\n 24:17-24:31: @4[5]: _5 = &amp;(*_6)\n 24:17-24:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n 25:14-25:14: @5.Return: return\">            }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>"}, {"sha": "ca07a8d3ce5b8facc9f2cf3f8f9f5a9ef1a2804c", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.closure/closure.main-{closure#3}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -65,16 +65,19 @@\n 62:21-62:34: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n 63:20-63:28: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n-63:29-65:18: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+63:29-65:18: @3[1]: _3 = const ()\n+65:18-65:18: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n-63:29-65:18: @3[1]: _3 = const ()\">                    countdown = 10;</span></span>\n+63:29-65:18: @3[1]: _3 = const ()\n+65:18-65:18: @3.Goto: goto -&gt; bb4\">                    countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n-63:29-65:18: @3[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"66:17-66:31: @4[4]: _6 = const &quot;alt string 3&quot;\n+63:29-65:18: @3[1]: _3 = const ()\n+65:18-65:18: @3.Goto: goto -&gt; bb4\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"65:18-65:18: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"66:17-66:31: @4[4]: _6 = const &quot;alt string 3&quot;\n 66:17-66:31: @4[5]: _5 = &amp;(*_6)\n 66:17-66:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n 67:14-67:14: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 3\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"66:17-66:31: @4[4]: _6 = const &quot;alt string 3&quot;\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"66:17-66:31: @4[4]: _6 = const &quot;alt string 3&quot;\n 66:17-66:31: @4[5]: _5 = &amp;(*_6)\n 66:17-66:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n 67:14-67:14: @5.Return: return\">            }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>"}, {"sha": "325b6c64345a40949acf913962b3adc128b4c85a", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.drop_trait/drop_trait.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -114,6 +114,6 @@\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n 26:8-26:10: @6[2]: _19 = ()\n 26:5-26:11: @6[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\">    Ok(())<span class=\"annotation\">\u2989@2,6,7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:2-27:2: @11.Return: return\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:2-27:2: @10.Goto: goto -&gt; bb11\"><span class=\"annotation\">@1,3,4,5,9,10\u298a</span>\u2038<span class=\"annotation\">\u2989@1,3,4,5,9,10</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:2-27:2: @8.Goto: goto -&gt; bb11\"><span class=\"annotation\">@2,6,7,8\u298a</span>\u2038<span class=\"annotation\">\u2989@2,6,7,8</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:2-27:2: @11.Return: return\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "55d7e8bfbae1856d54be62a4e232155fa167bc38", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.generics/generics.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -162,6 +162,6 @@\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:13-35:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n 37:8-37:10: @9[2]: _25 = ()\n 37:5-37:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">    Ok(())<span class=\"annotation\">\u2989@5,9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:2-38:2: @14.Return: return\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:2-38:2: @13.Goto: goto -&gt; bb14\"><span class=\"annotation\">@4,6,7,8,12,13\u298a</span>\u2038<span class=\"annotation\">\u2989@4,6,7,8,12,13</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"38:2-38:2: @11.Goto: goto -&gt; bb14\"><span class=\"annotation\">@5,9,10,11\u298a</span>\u2038<span class=\"annotation\">\u2989@5,9,10,11</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:2-38:2: @14.Return: return\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "0d4b940214e398e4af2b1689cad50b6d6192803d", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.if/if.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -146,17 +146,23 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:9-21:16: @3[5]: _6 = _1\n 21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+22:5-27:6: @6[1]: _0 = const ()\n+27:6-27:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\">        countdown</span></span>\n+22:5-27:6: @6[1]: _0 = const ()\n+27:6-27:6: @6.Goto: goto -&gt; bb7\">        countdown</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\">        =</span></span>\n+22:5-27:6: @6[1]: _0 = const ()\n+27:6-27:6: @6.Goto: goto -&gt; bb7\">        =</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\">            10</span></span>\n+22:5-27:6: @6[1]: _0 = const ()\n+27:6-27:6: @6.Goto: goto -&gt; bb7\">            10</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\">        ;</span></span>\n+22:5-27:6: @6[1]: _0 = const ()\n+27:6-27:6: @6.Goto: goto -&gt; bb7\">        ;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n-22:5-27:6: @6[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:2-28:2: @7.Return: return\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span></span></div>\n+22:5-27:6: @6[1]: _0 = const ()\n+27:6-27:6: @6.Goto: goto -&gt; bb7\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:6-27:6: @5.Goto: goto -&gt; bb7\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:2-28:2: @7.Return: return\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "094dacde9868d5e46865ba01140cc366461de725", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.if_else/if_else.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -128,36 +128,36 @@\n 20:9-22:16: @5[1]: _6 = const ()\">        =</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"20:9-22:16: @5[0]: _5 = const 100_i32\n 20:9-22:16: @5[1]: _6 = const ()\">            100<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:6-23:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>\u2038<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:9-26:16: @7[3]: _8 = _1\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"26:9-26:16: @7[3]: _8 = _1\n 26:9-26:16: @7[4]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@7\u298a</span>is_true<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n 27:5-32:6: @10[1]: _0 = const ()\"><span class=\"annotation\">@8,10\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n 27:5-32:6: @10[1]: _0 = const ()\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n 27:5-32:6: @10[1]: _0 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n 27:5-32:6: @10[1]: _0 = const ()\">            10</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n 27:5-32:6: @10[1]: _0 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n 27:5-32:6: @10[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@8,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    else</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n 34:5-39:6: @9[1]: _0 = const ()\"><span class=\"annotation\">@9\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n 34:5-39:6: @9[1]: _0 = const ()\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n 34:5-39:6: @9[1]: _0 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n 34:5-39:6: @9[1]: _0 = const ()\">            100</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n 34:5-39:6: @9[1]: _0 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n-34:5-39:6: @9[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+34:5-39:6: @9[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@9</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:6-39:6: @10.Goto: goto -&gt; bb11\"><span class=\"annotation\">@8,10\u298a</span>\u2038<span class=\"annotation\">\u2989@8,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:2-40:2: @11.Return: return\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "7f1262a6abf0a0ab940ac39402d8f057db589bee", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.inner_items/inner_items.main-in_func.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -63,8 +63,7 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n 19:13-19:14: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>b = 1<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:13-20:14: @1[3]: FakeRead(ForLet, _3)\"><span class=\"annotation\">@1,2,3,4\u298a</span>c<span class=\"annotation\">\u2989@1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:17-20:18: @0[5]: _4 = _1\n-20:21-20:22: @0[7]: _5 = _2\n-20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\"><span class=\"annotation\">@0\u298a</span>a + b<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+20:21-20:22: @0[7]: _5 = _2\"><span class=\"annotation\">@0\u298a</span>a + b<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n 21:18-21:26: @1[10]: _11 = &amp;(*_23)\n 21:18-21:26: @1[11]: _10 = &amp;(*_11)"}, {"sha": "c9e0fe3121121f5bdce2582e0fdbc5252897a856", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.inner_items/inner_items.main-{impl#0}-trait_func.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -60,8 +60,7 @@\n </head>\n <body>\n <div class=\"code\" style=\"counter-reset: line 39\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">fn trait_func(&amp;mut self, incr: u32) {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\n-41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\"><span class=\"annotation\">@0\u298a</span>self.in_struct_field += incr<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            self.in_struct_field += </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\"><span class=\"annotation\">@0\u298a</span>incr<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n 42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n 43:10-43:10: @2.Return: return\"><span class=\"annotation\">@1,2\u298a</span>in_func(self.in_struct_field);</span></span>"}, {"sha": "ec3517ec9edddff0477808cf5046a41c114b4c96", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.inner_items/inner_items.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -86,11 +86,14 @@\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 0<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:8-10:15: @3[6]: _7 = _1\n 10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n-10:16-12:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+10:16-12:6: @6[1]: _6 = const ()\n+12:6-12:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n-10:16-12:6: @6[1]: _6 = const ()\">        countdown = 10;</span></span>\n+10:16-12:6: @6[1]: _6 = const ()\n+12:6-12:6: @6.Goto: goto -&gt; bb7\">        countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n-10:16-12:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+10:16-12:6: @6[1]: _6 = const ()\n+12:6-12:6: @6.Goto: goto -&gt; bb7\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:6-12:6: @5.Goto: goto -&gt; bb7\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    mod in_mod {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        const IN_MOD_CONST: u32 = 1000;</span></span>\n@@ -126,16 +129,19 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    type InType = String;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"48:8-48:15: @7[4]: _9 = _1\n-48:8-48:15: @7[5]: FakeRead(ForMatchedPlace, _9)\"><span class=\"annotation\">@7\u298a</span>is_true<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"48:8-48:15: @7[4]: _9 = _1\n+48:8-48:15: @7[5]: FakeRead(ForMatchedPlace, _9)\"><span class=\"annotation\">@7\u298a</span>is_true<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n 49:9-49:27: @10.Call: _10 = in_func(move _11) -&gt; [return: bb11, unwind: bb15]\n-48:16-50:6: @11[2]: _8 = const ()\"><span class=\"annotation\">@8,10,11\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n+48:16-50:6: @11[2]: _8 = const ()\n+50:6-50:6: @11.Goto: goto -&gt; bb12\"><span class=\"annotation\">@8,10,11\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n 49:9-49:27: @10.Call: _10 = in_func(move _11) -&gt; [return: bb11, unwind: bb15]\n-48:16-50:6: @11[2]: _8 = const ()\">        in_func(countdown);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n+48:16-50:6: @11[2]: _8 = const ()\n+50:6-50:6: @11.Goto: goto -&gt; bb12\">        in_func(countdown);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @10[2]: _11 = _5\n 49:9-49:27: @10.Call: _10 = in_func(move _11) -&gt; [return: bb11, unwind: bb15]\n-48:16-50:6: @11[2]: _8 = const ()\">    }<span class=\"annotation\">\u2989@8,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+48:16-50:6: @11[2]: _8 = const ()\n+50:6-50:6: @11.Goto: goto -&gt; bb12\">    }<span class=\"annotation\">\u2989@8,10,11</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:6-50:6: @9.Goto: goto -&gt; bb12\"><span class=\"annotation\">@9\u298a</span>\u2038<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n 52:9-52:16: @12[4]: FakeRead(ForLet, _12)"}, {"sha": "636341055dc0894d9a3b3ea6ebf074245a917453", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.lazy_boolean/lazy_boolean.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 101, "deletions": 42, "changes": 143, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -63,27 +63,27 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb25]\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb24]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb25]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb24]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb25]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb41]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb24]\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb40]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n@@ -94,67 +94,126 @@\n 10:8-10:15: @3[13]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n 12:9-12:15: @6[1]: _6 = const 10_i32\n 13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+10:16-14:6: @6[3]: _9 = const ()\n+14:6-14:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n 12:9-12:15: @6[1]: _6 = const 10_i32\n 13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\">        a = 1;</span></span>\n+10:16-14:6: @6[3]: _9 = const ()\n+14:6-14:6: @6.Goto: goto -&gt; bb7\">        a = 1;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n 12:9-12:15: @6[1]: _6 = const 10_i32\n 13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\">        b = 10;</span></span>\n+10:16-14:6: @6[3]: _9 = const ()\n+14:6-14:6: @6.Goto: goto -&gt; bb7\">        b = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n 12:9-12:15: @6[1]: _6 = const 10_i32\n 13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\">        c = 100;</span></span>\n+10:16-14:6: @6[3]: _9 = const ()\n+14:6-14:6: @6.Goto: goto -&gt; bb7\">        c = 100;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n 12:9-12:15: @6[1]: _6 = const 10_i32\n 13:9-13:16: @6[2]: _7 = const 100_i32\n-10:16-14:6: @6[3]: _9 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+10:16-14:6: @6[3]: _9 = const ()\n+14:6-14:6: @6.Goto: goto -&gt; bb7\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:6-14:6: @5.Goto: goto -&gt; bb7\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:9-16:17: @11[2]: FakeRead(ForLet, _11)\"><span class=\"annotation\">@11\u298a</span>somebool<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:9-16:17: @11[2]: FakeRead(ForLet, _11)\"><span class=\"annotation\">@11\u298a</span>somebool<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:14: @7[5]: _13 = _5\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:13-18:14: @7[5]: _13 = _5\n 18:17-18:18: @7[7]: _14 = _6\n 18:13-18:18: @7[8]: _12 = Lt(move _13, move _14)\"><span class=\"annotation\">@7\u298a</span>a &lt; b<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:13-20:14: @10[2]: _16 = _6\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:13-20:14: @10[2]: _16 = _6\n 20:17-20:18: @10[4]: _17 = _7\n-20:13-20:18: @10[5]: _15 = Lt(move _16, move _17)\"><span class=\"annotation\">@10\u298a</span>b &lt; c<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+20:13-20:18: @10[5]: _15 = Lt(move _16, move _17)\"><span class=\"annotation\">@10\u298a</span>b &lt; c<span class=\"annotation\">\u2989@10</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:18-20:18: @8.Goto: goto -&gt; bb11\"><span class=\"annotation\">@8\u298a</span>\u2038<span class=\"annotation\">\u2989@8</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:18-20:18: @9.Goto: goto -&gt; bb11\"><span class=\"annotation\">@9\u298a</span>\u2038<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:17: @15[2]: FakeRead(ForLet, _18)\"><span class=\"annotation\">@15\u298a</span>somebool<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:9-23:17: @15[2]: FakeRead(ForLet, _18)\"><span class=\"annotation\">@15\u298a</span>somebool<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:13-25:14: @11[6]: _20 = _6\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:13-25:14: @11[6]: _20 = _6\n 25:17-25:18: @11[8]: _21 = _5\n 25:13-25:18: @11[9]: _19 = Lt(move _20, move _21)\"><span class=\"annotation\">@11\u298a</span>b &lt; a<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:13-27:14: @14[2]: _23 = _6\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:14: @14[2]: _23 = _6\n 27:17-27:18: @14[4]: _24 = _7\n-27:13-27:18: @14[5]: _22 = Lt(move _23, move _24)\"><span class=\"annotation\">@14\u298a</span>b &lt; c<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+27:13-27:18: @14[5]: _22 = Lt(move _23, move _24)\"><span class=\"annotation\">@14\u298a</span>b &lt; c<span class=\"annotation\">\u2989@14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:18-27:18: @12.Goto: goto -&gt; bb15\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:18-27:18: @13.Goto: goto -&gt; bb15\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-30:17: @19[2]: FakeRead(ForLet, _25)\"><span class=\"annotation\">@19\u298a</span>somebool<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:14: @15[6]: _27 = _5\n-32:17-32:18: @15[8]: _28 = _6\n-32:13-32:18: @15[9]: _26 = Lt(move _27, move _28)\"><span class=\"annotation\">@15\u298a</span>a &lt; b<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        &amp;&amp;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:14: @18[2]: _30 = _6\n-34:17-34:18: @18[4]: _31 = _7\n-34:13-34:18: @18[5]: _29 = Lt(move _30, move _31)\"><span class=\"annotation\">@18\u298a</span>b &lt; c<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:9-37:17: @23[2]: FakeRead(ForLet, _32)\"><span class=\"annotation\">@23\u298a</span>somebool<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"39:13-39:14: @19[6]: _34 = _6\n-39:17-39:18: @19[8]: _35 = _5\n-39:13-39:18: @19[9]: _33 = Lt(move _34, move _35)\"><span class=\"annotation\">@19\u298a</span>b &lt; a<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        &amp;&amp;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"41:13-41:14: @22[2]: _37 = _6\n-41:17-41:18: @22[4]: _38 = _7\n-41:13-41:18: @22[5]: _36 = Lt(move _37, move _38)\"><span class=\"annotation\">@22\u298a</span>b &lt; c<span class=\"annotation\">\u2989@22</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"43:2-43:2: @23.Return: return\"><span class=\"annotation\">@23\u298a</span>\u2038<span class=\"annotation\">\u2989@23</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:9-29:17: @19[2]: FakeRead(ForLet, _25)\"><span class=\"annotation\">@19\u298a</span>somebool<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:20-29:21: @15[6]: _27 = _5\n+29:24-29:25: @15[8]: _28 = _6\n+29:20-29:25: @15[9]: _26 = Lt(move _27, move _28)\"><span class=\"annotation\">@15\u298a</span>a &lt; b<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"> &amp;&amp; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:29-29:30: @18[2]: _30 = _6\n+29:33-29:34: @18[4]: _31 = _7\n+29:29-29:34: @18[5]: _29 = Lt(move _30, move _31)\"><span class=\"annotation\">@18\u298a</span>b &lt; c<span class=\"annotation\">\u2989@18</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:34-29:34: @16.Goto: goto -&gt; bb19\"><span class=\"annotation\">@16\u298a</span>\u2038<span class=\"annotation\">\u2989@16</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:34-29:34: @17.Goto: goto -&gt; bb19\"><span class=\"annotation\">@17\u298a</span>\u2038<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-30:17: @23[2]: FakeRead(ForLet, _32)\"><span class=\"annotation\">@23\u298a</span>somebool<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:20-30:21: @19[6]: _34 = _6\n+30:24-30:25: @19[8]: _35 = _5\n+30:20-30:25: @19[9]: _33 = Lt(move _34, move _35)\"><span class=\"annotation\">@19\u298a</span>b &lt; a<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"> &amp;&amp; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:29-30:30: @22[2]: _37 = _6\n+30:33-30:34: @22[4]: _38 = _7\n+30:29-30:34: @22[5]: _36 = Lt(move _37, move _38)\"><span class=\"annotation\">@22\u298a</span>b &lt; c<span class=\"annotation\">\u2989@22</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:34-30:34: @20.Goto: goto -&gt; bb23\"><span class=\"annotation\">@20\u298a</span>\u2038<span class=\"annotation\">\u2989@20</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:34-30:34: @21.Goto: goto -&gt; bb23\"><span class=\"annotation\">@21\u298a</span>\u2038<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:16: @23[6]: _41 = _1\n+33:9-34:16: @23[7]: _40 = Not(move _41)\n+33:9-34:16: @23[9]: FakeRead(ForMatchedPlace, _40)\"><span class=\"annotation\">@23\u298a</span>!</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:16: @23[6]: _41 = _1\n+33:9-34:16: @23[7]: _40 = Not(move _41)\n+33:9-34:16: @23[9]: FakeRead(ForMatchedPlace, _40)\">        is_true<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @26[0]: _5 = const 2_i32\n+35:5-38:6: @26[1]: _39 = const ()\n+38:6-38:6: @26.Goto: goto -&gt; bb27\"><span class=\"annotation\">@24,26\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @26[0]: _5 = const 2_i32\n+35:5-38:6: @26[1]: _39 = const ()\n+38:6-38:6: @26.Goto: goto -&gt; bb27\">        a = 2</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @26[0]: _5 = const 2_i32\n+35:5-38:6: @26[1]: _39 = const ()\n+38:6-38:6: @26.Goto: goto -&gt; bb27\">        ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @26[0]: _5 = const 2_i32\n+35:5-38:6: @26[1]: _39 = const ()\n+38:6-38:6: @26.Goto: goto -&gt; bb27\">    }<span class=\"annotation\">\u2989@24,26</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:6-38:6: @25.Goto: goto -&gt; bb27\"><span class=\"annotation\">@25\u298a</span>\u2038<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:16: @27[4]: _43 = _1\n+41:9-41:16: @27[5]: FakeRead(ForMatchedPlace, _43)\"><span class=\"annotation\">@27\u298a</span>is_true<span class=\"annotation\">\u2989@27</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @30[0]: _6 = const 30_i32\n+42:5-45:6: @30[1]: _42 = const ()\"><span class=\"annotation\">@28,30\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @30[0]: _6 = const 30_i32\n+42:5-45:6: @30[1]: _42 = const ()\">        b = 30</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @30[0]: _6 = const 30_i32\n+42:5-45:6: @30[1]: _42 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @30[0]: _6 = const 30_i32\n+42:5-45:6: @30[1]: _42 = const ()\">    }<span class=\"annotation\">\u2989@28,30</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    else</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @29[0]: _7 = const 400_i32\n+47:5-50:6: @29[1]: _42 = const ()\"><span class=\"annotation\">@29\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @29[0]: _7 = const 400_i32\n+47:5-50:6: @29[1]: _42 = const ()\">        c = 400</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @29[0]: _7 = const 400_i32\n+47:5-50:6: @29[1]: _42 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @29[0]: _7 = const 400_i32\n+47:5-50:6: @29[1]: _42 = const ()\">    }<span class=\"annotation\">\u2989@29</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:6-50:6: @30.Goto: goto -&gt; bb31\"><span class=\"annotation\">@28,30\u298a</span>\u2038<span class=\"annotation\">\u2989@28,30</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:9-52:16: @31[5]: _46 = _1\n+52:8-52:16: @31[6]: _45 = Not(move _46)\n+52:8-52:16: @31[8]: FakeRead(ForMatchedPlace, _45)\"><span class=\"annotation\">@31\u298a</span>!is_true<span class=\"annotation\">\u2989@31</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"53:9-53:14: @34[0]: _5 = const 2_i32\n+52:17-54:6: @34[1]: _44 = const ()\n+54:6-54:6: @34.Goto: goto -&gt; bb35\"><span class=\"annotation\">@32,34\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"53:9-53:14: @34[0]: _5 = const 2_i32\n+52:17-54:6: @34[1]: _44 = const ()\n+54:6-54:6: @34.Goto: goto -&gt; bb35\">        a = 2;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"53:9-53:14: @34[0]: _5 = const 2_i32\n+52:17-54:6: @34[1]: _44 = const ()\n+54:6-54:6: @34.Goto: goto -&gt; bb35\">    }<span class=\"annotation\">\u2989@32,34</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"54:6-54:6: @33.Goto: goto -&gt; bb35\"><span class=\"annotation\">@33\u298a</span>\u2038<span class=\"annotation\">\u2989@33</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"56:8-56:15: @35[3]: _47 = _1\n+56:8-56:15: @35[4]: FakeRead(ForMatchedPlace, _47)\"><span class=\"annotation\">@35\u298a</span>is_true<span class=\"annotation\">\u2989@35</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"57:9-57:15: @38[0]: _6 = const 30_i32\n+56:16-58:6: @38[1]: _0 = const ()\"><span class=\"annotation\">@36,38\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"57:9-57:15: @38[0]: _6 = const 30_i32\n+56:16-58:6: @38[1]: _0 = const ()\">        b = 30;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"57:9-57:15: @38[0]: _6 = const 30_i32\n+56:16-58:6: @38[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@36,38</span></span></span><span class=\"code\" style=\"--layer: 0\"> else </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"59:9-59:16: @37[0]: _7 = const 400_i32\n+58:12-60:6: @37[1]: _0 = const ()\"><span class=\"annotation\">@37\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"59:9-59:16: @37[0]: _7 = const 400_i32\n+58:12-60:6: @37[1]: _0 = const ()\">        c = 400;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"59:9-59:16: @37[0]: _7 = const 400_i32\n+58:12-60:6: @37[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@37</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:6-60:6: @38.Goto: goto -&gt; bb39\"><span class=\"annotation\">@36,38\u298a</span>\u2038<span class=\"annotation\">\u2989@36,38</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"61:2-61:2: @39.Return: return\"><span class=\"annotation\">@39\u298a</span>\u2038<span class=\"annotation\">\u2989@39</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "a876c85822f328a7534f016590983ffec94697bc", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.loops_and_branches/loops_and_branches.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 151, "deletions": 0, "changes": 151, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.loops_and_branches%2Floops_and_branches.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.loops_and_branches%2Floops_and_branches.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.loops_and_branches%2Floops_and_branches.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,151 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>loops_and_branches.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 21\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:22-23:31: @0[1]: _1 = DebugTest\n+23:9-23:19: @0[2]: FakeRead(ForLet, _1)\n+24:14-24:20: @0[9]: _19 = const main::promoted[0]\n+24:14-24:20: @0[10]: _7 = &amp;(*_19)\n+24:14-24:20: @0[11]: _6 = &amp;(*_7)\n+24:14-24:20: @0[12]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+24:22-24:32: @0[20]: _14 = &amp;_1\n+24:5-24:34: @0[21]: _13 = (move _14,)\n+24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n+24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n+24:5-24:34: @0[28]: _17 = &amp;(*_15)\n+24:5-24:34: @0[30]: _18 = &lt;DebugTest as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:5-24:34: @0.Call: _16 = ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+24:5-24:34: @1[2]: _12 = [move _16]\n+24:5-24:34: @1[5]: _11 = &amp;_12\n+24:5-24:34: @1[6]: _10 = &amp;(*_11)\n+24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+24:5-24:34: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+24:5-24:34: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+24:5-24:34: @3[6]: _2 = const ()\n+22:11-25:2: @3[8]: _0 = const ()\n+25:2-25:2: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:22-23:31: @0[1]: _1 = DebugTest\n+23:9-23:19: @0[2]: FakeRead(ForLet, _1)\n+24:14-24:20: @0[9]: _19 = const main::promoted[0]\n+24:14-24:20: @0[10]: _7 = &amp;(*_19)\n+24:14-24:20: @0[11]: _6 = &amp;(*_7)\n+24:14-24:20: @0[12]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+24:22-24:32: @0[20]: _14 = &amp;_1\n+24:5-24:34: @0[21]: _13 = (move _14,)\n+24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n+24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n+24:5-24:34: @0[28]: _17 = &amp;(*_15)\n+24:5-24:34: @0[30]: _18 = &lt;DebugTest as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:5-24:34: @0.Call: _16 = ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+24:5-24:34: @1[2]: _12 = [move _16]\n+24:5-24:34: @1[5]: _11 = &amp;_12\n+24:5-24:34: @1[6]: _10 = &amp;(*_11)\n+24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+24:5-24:34: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+24:5-24:34: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+24:5-24:34: @3[6]: _2 = const ()\n+22:11-25:2: @3[8]: _0 = const ()\n+25:2-25:2: @3.Return: return\">    let debug_test = DebugTest;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:22-23:31: @0[1]: _1 = DebugTest\n+23:9-23:19: @0[2]: FakeRead(ForLet, _1)\n+24:14-24:20: @0[9]: _19 = const main::promoted[0]\n+24:14-24:20: @0[10]: _7 = &amp;(*_19)\n+24:14-24:20: @0[11]: _6 = &amp;(*_7)\n+24:14-24:20: @0[12]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+24:22-24:32: @0[20]: _14 = &amp;_1\n+24:5-24:34: @0[21]: _13 = (move _14,)\n+24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n+24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n+24:5-24:34: @0[28]: _17 = &amp;(*_15)\n+24:5-24:34: @0[30]: _18 = &lt;DebugTest as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:5-24:34: @0.Call: _16 = ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+24:5-24:34: @1[2]: _12 = [move _16]\n+24:5-24:34: @1[5]: _11 = &amp;_12\n+24:5-24:34: @1[6]: _10 = &amp;(*_11)\n+24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+24:5-24:34: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+24:5-24:34: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+24:5-24:34: @3[6]: _2 = const ()\n+22:11-25:2: @3[8]: _0 = const ()\n+25:2-25:2: @3.Return: return\">    println!(\"{:?}\", debug_test);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:22-23:31: @0[1]: _1 = DebugTest\n+23:9-23:19: @0[2]: FakeRead(ForLet, _1)\n+24:14-24:20: @0[9]: _19 = const main::promoted[0]\n+24:14-24:20: @0[10]: _7 = &amp;(*_19)\n+24:14-24:20: @0[11]: _6 = &amp;(*_7)\n+24:14-24:20: @0[12]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+24:22-24:32: @0[20]: _14 = &amp;_1\n+24:5-24:34: @0[21]: _13 = (move _14,)\n+24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n+24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n+24:5-24:34: @0[28]: _17 = &amp;(*_15)\n+24:5-24:34: @0[30]: _18 = &lt;DebugTest as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:5-24:34: @0.Call: _16 = ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+24:5-24:34: @1[2]: _12 = [move _16]\n+24:5-24:34: @1[5]: _11 = &amp;_12\n+24:5-24:34: @1[6]: _10 = &amp;(*_11)\n+24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+24:5-24:34: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+24:5-24:34: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+24:5-24:34: @3[6]: _2 = const ()\n+22:11-25:2: @3[8]: _0 = const ()\n+25:2-25:2: @3.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "1b9767506f26a2897e6cfa1b574d0bf9b198285d", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.loops_and_branches/loops_and_branches.{impl#0}-fmt.-------.InstrumentCoverage.0.html", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.loops_and_branches%2Floops_and_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.loops_and_branches%2Floops_and_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.loops_and_branches%2Floops_and_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,94 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>loops_and_branches.{impl#0}-fmt - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter) -&gt; std::fmt::Result {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:12-10:16: @0[2]: _4 = const true\n+10:12-10:16: @0[3]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:16-11:21: @3[2]: _6 = const false\n+11:16-11:21: @3[3]: FakeRead(ForMatchedPlace, _6)\"><span class=\"annotation\">@1,3\u298a</span>false<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                while </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:23-12:27: @7[1]: _8 = const true\n+12:23-12:27: @7[2]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@6,7\u298a</span>true<span class=\"annotation\">\u2989@6,7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:28-13:18: @10[0]: _7 = const ()\n+13:18-13:18: @10.Goto: goto -&gt; bb6\"><span class=\"annotation\">@8,10\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:28-13:18: @10[0]: _7 = const ()\n+13:18-13:18: @10.Goto: goto -&gt; bb6\">                }<span class=\"annotation\">\u2989@8,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:14-14:14: @9.Goto: goto -&gt; bb11\"><span class=\"annotation\">@9\u298a</span>\u2038<span class=\"annotation\">\u2989@9</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:14-14:14: @5.Goto: goto -&gt; bb11\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:20-15:21: @11[6]: _13 = &amp;mut (*_2)\n+15:23-15:30: @11[11]: _32 = const &lt;DebugTest as Debug&gt;::fmt::promoted[1]\n+15:23-15:30: @11[12]: _17 = &amp;(*_32)\n+15:23-15:30: @11[13]: _16 = &amp;(*_17)\n+15:23-15:30: @11[14]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n+15:13-15:31: @11[20]: _23 = ()\n+15:13-15:31: @11[21]: FakeRead(ForMatchedPlace, _23)\n+15:13-15:31: @11[22]: _31 = const &lt;DebugTest as Debug&gt;::fmt::promoted[0]\n+15:13-15:31: @11[23]: _21 = &amp;(*_31)\n+15:13-15:31: @11[24]: _20 = &amp;(*_21)\n+15:13-15:31: @11[25]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+15:13-15:31: @11.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb12, unwind: bb23]\n+15:13-15:31: @12.Call: _12 = Formatter::write_fmt(move _13, move _14) -&gt; [return: bb13, unwind: bb23]\"><span class=\"annotation\">@11,12,13,14\u298a</span>write!(f, \"error\")<span class=\"annotation\">\u2989@11,12,13,14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:31-15:32: @18[1]: _25 = ((_11 as Err).0: std::fmt::Error)\n+15:31-15:32: @18[4]: _28 = _25\n+15:31-15:32: @18.Call: _27 = &lt;std::fmt::Error as From&lt;std::fmt::Error&gt;&gt;::from(move _28) -&gt; [return: bb19, unwind: bb23]\"><span class=\"annotation\">@16,18,19,20\u298a</span>?<span class=\"annotation\">\u2989@16,18,19,20</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:16-17:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"16:16-17:10: @2[0]: _3 = const ()\">        }<span class=\"annotation\">\u2989@2</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:10-17:10: @15.Goto: goto -&gt; bb21\"><span class=\"annotation\">@15\u298a</span>\u2038<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:12-18:14: @21[3]: _30 = ()\n+18:9-18:15: @21[4]: _0 = std::result::Result::&lt;(), std::fmt::Error&gt;::Ok(move _30)\"><span class=\"annotation\">@21\u298a</span>Ok(())<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:6-19:6: @20.Goto: goto -&gt; bb22\"><span class=\"annotation\">@16,18,19,20\u298a</span>\u2038<span class=\"annotation\">\u2989@16,18,19,20</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:6-19:6: @22.Return: return\"><span class=\"annotation\">@22\u298a</span>\u2038<span class=\"annotation\">\u2989@22</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "042845b70cc306fd0f5d7e0ec05f24e66f9b8b10", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.nested_loops/nested_loops.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,125 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>nested_loops.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb35]\n+2:19-2:35: @1[0]: _3 = &amp;_4\n+2:19-2:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb34]\n+2:19-2:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+2:9-2:16: @2[3]: FakeRead(ForLet, _1)\n+3:25-3:27: @3[2]: _5 = const 10_i32\n+3:9-3:22: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb35]\n+2:19-2:35: @1[0]: _3 = &amp;_4\n+2:19-2:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb34]\n+2:19-2:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+2:9-2:16: @2[3]: FakeRead(ForLet, _1)\n+3:25-3:27: @3[2]: _5 = const 10_i32\n+3:9-3:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 10<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    'outer: while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"5:19-5:28: @5[2]: _8 = _5\n+5:19-5:32: @5[3]: _7 = Gt(move _8, const 0_i32)\n+5:19-5:32: @5[5]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@4,5\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:21-6:24: @8[1]: _9 = const 100_i32\n+6:13-6:18: @8[2]: FakeRead(ForLet, _9)\n+7:21-7:24: @8[4]: _10 = const 100_i32\n+7:13-7:18: @8[5]: FakeRead(ForLet, _10)\"><span class=\"annotation\">@6,8,9\u298a</span>mut a = 100;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:21-6:24: @8[1]: _9 = const 100_i32\n+6:13-6:18: @8[2]: FakeRead(ForLet, _9)\n+7:21-7:24: @8[4]: _10 = const 100_i32\n+7:13-7:18: @8[5]: FakeRead(ForLet, _10)\">        let mut b = 100<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        for </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"8:13-8:14: @16[1]: _21 = ((_17 as Some).0: i32)\n+8:13-8:14: @16[3]: _22 = _21\n+8:13-8:14: @16[4]: _15 = move _22\n+8:13-8:14: @16[5]: _16 = const ()\"><span class=\"annotation\">@14,16\u298a</span>_<span class=\"annotation\">\u2989@14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> in </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:18-8:23: @11[5]: _19 = &amp;mut _14\n+8:18-8:23: @11[6]: _18 = &amp;mut (*_19)\n+8:18-8:23: @11.Call: _17 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _18) -&gt; [return: bb12, unwind: bb35]\n+8:18-8:23: @12[1]: FakeRead(ForMatchedPlace, _17)\"><span class=\"annotation\">@10,11,12\u298a</span>0..50<span class=\"annotation\">\u2989@10,11,12</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"9:16-9:17: @16[15]: _27 = _9\n+9:16-9:22: @16[16]: _26 = Lt(move _27, const 30_i32)\n+9:16-9:22: @16[18]: FakeRead(ForMatchedPlace, _26)\"><span class=\"annotation\">@14,16\u298a</span>a &lt; 30<span class=\"annotation\">\u2989@14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:17-10:22: @19[0]: _11 = const ()\"><span class=\"annotation\">@17,19\u298a</span>break<span class=\"annotation\">\u2989@17,19</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:13-12:19: @20[0]: _9 = move (_29.0: i32)\"><span class=\"annotation\">@20\u298a</span>a -= 5<span class=\"annotation\">\u2989@20</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:13-13:19: @21[0]: _10 = move (_30.0: i32)\"><span class=\"annotation\">@21\u298a</span>b -= 5<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:16-14:17: @21[3]: _32 = _10\n+14:16-14:22: @21[4]: _31 = Lt(move _32, const 90_i32)\n+14:16-14:22: @21[6]: FakeRead(ForMatchedPlace, _31)\"><span class=\"annotation\">@21\u298a</span>b &lt; 90<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:17-15:24: @25[0]: _9 = move (_33.0: i32)\n+16:20-16:27: @25[2]: _34 = _1\n+16:20-16:27: @25[3]: FakeRead(ForMatchedPlace, _34)\"><span class=\"annotation\">@25\u298a</span>a -= 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"15:17-15:24: @25[0]: _9 = move (_33.0: i32)\n+16:20-16:27: @25[2]: _34 = _1\n+16:20-16:27: @25[3]: FakeRead(ForMatchedPlace, _34)\">                if is_true<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:21-17:33: @28[0]: _0 = const ()\"><span class=\"annotation\">@26,28\u298a</span>break 'outer<span class=\"annotation\">\u2989@26,28</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                } else {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n+21:14-21:14: @29.Goto: goto -&gt; bb30\"><span class=\"annotation\">@29\u298a</span>a -= 2;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n+21:14-21:14: @29.Goto: goto -&gt; bb30\">                }</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n+21:14-21:14: @29.Goto: goto -&gt; bb30\">            }<span class=\"annotation\">\u2989@29</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:14-21:14: @23.Goto: goto -&gt; bb30\"><span class=\"annotation\">@23\u298a</span>\u2038<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:10-22:10: @9.Goto: goto -&gt; bb10\"><span class=\"annotation\">@6,8,9\u298a</span>\u2038<span class=\"annotation\">\u2989@6,8,9</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:10-22:10: @30.Goto: goto -&gt; bb10\"><span class=\"annotation\">@30\u298a</span>\u2038<span class=\"annotation\">\u2989@30</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:23: @32[0]: _5 = move (_37.0: i32)\"><span class=\"annotation\">@32\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@32</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:6-24:6: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:6-24:6: @7.Goto: goto -&gt; bb33\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:2-25:2: @33.Return: return\"><span class=\"annotation\">@33\u298a</span>\u2038<span class=\"annotation\">\u2989@33</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "3ebe51bc7ec36d1e3ec5aab622306d6cf040e1a5", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 285, "deletions": 0, "changes": 285, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,285 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 20\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n+22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n+23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n+23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n+25:14-25:32: @2[7]: _33 = const main::promoted[0]\n+25:14-25:32: @2[8]: _8 = &amp;(*_33)\n+25:14-25:32: @2[9]: _7 = &amp;(*_8)\n+25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n+25:34-25:47: @2[18]: _15 = &amp;_1\n+25:49-25:62: @2[20]: _16 = &amp;_2\n+25:64-25:77: @2[24]: _19 = &amp;_1\n+25:80-25:93: @2[26]: _20 = &amp;_2\n+25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @3[2]: _17 = &amp;_18\n+25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n+25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n+25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n+25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n+25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n+25:5-25:95: @3[16]: _25 = &amp;(*_21)\n+25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @4[4]: _28 = &amp;(*_22)\n+25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @5[4]: _31 = &amp;(*_23)\n+25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n+25:5-25:95: @6[9]: _12 = &amp;_13\n+25:5-25:95: @6[10]: _11 = &amp;(*_12)\n+25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @8[7]: _3 = const ()\n+21:11-26:2: @8[9]: _0 = const ()\n+26:2-26:2: @8.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5,6,7,8\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n+22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n+23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n+23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n+25:14-25:32: @2[7]: _33 = const main::promoted[0]\n+25:14-25:32: @2[8]: _8 = &amp;(*_33)\n+25:14-25:32: @2[9]: _7 = &amp;(*_8)\n+25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n+25:34-25:47: @2[18]: _15 = &amp;_1\n+25:49-25:62: @2[20]: _16 = &amp;_2\n+25:64-25:77: @2[24]: _19 = &amp;_1\n+25:80-25:93: @2[26]: _20 = &amp;_2\n+25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @3[2]: _17 = &amp;_18\n+25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n+25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n+25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n+25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n+25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n+25:5-25:95: @3[16]: _25 = &amp;(*_21)\n+25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @4[4]: _28 = &amp;(*_22)\n+25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @5[4]: _31 = &amp;(*_23)\n+25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n+25:5-25:95: @6[9]: _12 = &amp;_13\n+25:5-25:95: @6[10]: _11 = &amp;(*_12)\n+25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @8[7]: _3 = const ()\n+21:11-26:2: @8[9]: _0 = const ()\n+26:2-26:2: @8.Return: return\">    let version_3_2_1 = Version::new(3, 2, 1);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n+22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n+23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n+23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n+25:14-25:32: @2[7]: _33 = const main::promoted[0]\n+25:14-25:32: @2[8]: _8 = &amp;(*_33)\n+25:14-25:32: @2[9]: _7 = &amp;(*_8)\n+25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n+25:34-25:47: @2[18]: _15 = &amp;_1\n+25:49-25:62: @2[20]: _16 = &amp;_2\n+25:64-25:77: @2[24]: _19 = &amp;_1\n+25:80-25:93: @2[26]: _20 = &amp;_2\n+25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @3[2]: _17 = &amp;_18\n+25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n+25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n+25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n+25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n+25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n+25:5-25:95: @3[16]: _25 = &amp;(*_21)\n+25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @4[4]: _28 = &amp;(*_22)\n+25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @5[4]: _31 = &amp;(*_23)\n+25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n+25:5-25:95: @6[9]: _12 = &amp;_13\n+25:5-25:95: @6[10]: _11 = &amp;(*_12)\n+25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @8[7]: _3 = const ()\n+21:11-26:2: @8[9]: _0 = const ()\n+26:2-26:2: @8.Return: return\">    let version_3_3_0 = Version::new(3, 3, 0);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n+22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n+23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n+23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n+25:14-25:32: @2[7]: _33 = const main::promoted[0]\n+25:14-25:32: @2[8]: _8 = &amp;(*_33)\n+25:14-25:32: @2[9]: _7 = &amp;(*_8)\n+25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n+25:34-25:47: @2[18]: _15 = &amp;_1\n+25:49-25:62: @2[20]: _16 = &amp;_2\n+25:64-25:77: @2[24]: _19 = &amp;_1\n+25:80-25:93: @2[26]: _20 = &amp;_2\n+25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @3[2]: _17 = &amp;_18\n+25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n+25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n+25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n+25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n+25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n+25:5-25:95: @3[16]: _25 = &amp;(*_21)\n+25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @4[4]: _28 = &amp;(*_22)\n+25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @5[4]: _31 = &amp;(*_23)\n+25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n+25:5-25:95: @6[9]: _12 = &amp;_13\n+25:5-25:95: @6[10]: _11 = &amp;(*_12)\n+25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @8[7]: _3 = const ()\n+21:11-26:2: @8[9]: _0 = const ()\n+26:2-26:2: @8.Return: return\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n+22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n+23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n+23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n+25:14-25:32: @2[7]: _33 = const main::promoted[0]\n+25:14-25:32: @2[8]: _8 = &amp;(*_33)\n+25:14-25:32: @2[9]: _7 = &amp;(*_8)\n+25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n+25:34-25:47: @2[18]: _15 = &amp;_1\n+25:49-25:62: @2[20]: _16 = &amp;_2\n+25:64-25:77: @2[24]: _19 = &amp;_1\n+25:80-25:93: @2[26]: _20 = &amp;_2\n+25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @3[2]: _17 = &amp;_18\n+25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n+25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n+25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n+25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n+25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n+25:5-25:95: @3[16]: _25 = &amp;(*_21)\n+25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @4[4]: _28 = &amp;(*_22)\n+25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @5[4]: _31 = &amp;(*_23)\n+25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n+25:5-25:95: @6[9]: _12 = &amp;_13\n+25:5-25:95: @6[10]: _11 = &amp;(*_12)\n+25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @8[7]: _3 = const ()\n+21:11-26:2: @8[9]: _0 = const ()\n+26:2-26:2: @8.Return: return\">    println!(\"{:?} &lt; {:?} = {}\", version_3_2_1, version_3_3_0, version_3_2_1 &lt; version_3_3_0);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n+22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n+23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n+23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n+25:14-25:32: @2[7]: _33 = const main::promoted[0]\n+25:14-25:32: @2[8]: _8 = &amp;(*_33)\n+25:14-25:32: @2[9]: _7 = &amp;(*_8)\n+25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n+25:34-25:47: @2[18]: _15 = &amp;_1\n+25:49-25:62: @2[20]: _16 = &amp;_2\n+25:64-25:77: @2[24]: _19 = &amp;_1\n+25:80-25:93: @2[26]: _20 = &amp;_2\n+25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @3[2]: _17 = &amp;_18\n+25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n+25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n+25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n+25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n+25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n+25:5-25:95: @3[16]: _25 = &amp;(*_21)\n+25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @4[4]: _28 = &amp;(*_22)\n+25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @5[4]: _31 = &amp;(*_23)\n+25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n+25:5-25:95: @6[9]: _12 = &amp;_13\n+25:5-25:95: @6[10]: _11 = &amp;(*_12)\n+25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @8[7]: _3 = const ()\n+21:11-26:2: @8[9]: _0 = const ()\n+26:2-26:2: @8.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4,5,6,7,8</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "ee6a5489f267b2e5e754f46bbe5ed3ee76fb1975", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#0}-new.-------.InstrumentCoverage.0.html", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%230%7D-new.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%230%7D-new.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%230%7D-new.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,94 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#0}-new - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 11\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">pub fn new(major: usize, minor: usize, patch: usize) -&gt; Self {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n+15:13-15:18: @0[3]: _5 = _2\n+16:13-16:18: @0[5]: _6 = _3\n+13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n+18:6-18:6: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>Self {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n+15:13-15:18: @0[3]: _5 = _2\n+16:13-16:18: @0[5]: _6 = _3\n+13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n+18:6-18:6: @0.Return: return\">            major,</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n+15:13-15:18: @0[3]: _5 = _2\n+16:13-16:18: @0[5]: _6 = _3\n+13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n+18:6-18:6: @0.Return: return\">            minor,</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n+15:13-15:18: @0[3]: _5 = _2\n+16:13-16:18: @0[5]: _6 = _3\n+13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n+18:6-18:6: @0.Return: return\">            patch,</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n+15:13-15:18: @0[3]: _5 = _2\n+16:13-16:18: @0[5]: _6 = _3\n+13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n+18:6-18:6: @0.Return: return\">        }</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n+15:13-15:18: @0[3]: _5 = _2\n+16:13-16:18: @0[5]: _6 = _3\n+13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n+18:6-18:6: @0.Return: return\">    }<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "a39772288a3e77d62e91a57c84c86a75b53147d6", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#1}-cmp.-------.InstrumentCoverage.0.html", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%231%7D-cmp.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%231%7D-cmp.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%231%7D-cmp.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,70 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#1}-cmp - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                                  <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:51-4:54: @14.Goto: goto -&gt; bb15\"><span class=\"annotation\">@14\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:51-4:54: @12[0]: _0 = Equal\n+4:51-4:54: @12.Goto: goto -&gt; bb13\"><span class=\"annotation\">@11,12\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:51-4:54: @10[1]: _27 = _21\n+4:51-4:54: @10[2]: _0 = _27\n+4:51-4:54: @10.Goto: goto -&gt; bb13\"><span class=\"annotation\">@10\u298a</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"4:51-4:54: @13.Goto: goto -&gt; bb14\"><span class=\"annotation\">@13\u298a</span>Ord<span class=\"annotation\">\u2989@13</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:51-4:54: @10[1]: _27 = _21\n+4:51-4:54: @10[2]: _0 = _27\n+4:51-4:54: @10.Goto: goto -&gt; bb13\"><span class=\"annotation\">\u2989@10</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:51-4:54: @12[0]: _0 = Equal\n+4:51-4:54: @12.Goto: goto -&gt; bb13\"><span class=\"annotation\">\u2989@11,12</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:51-4:54: @14.Goto: goto -&gt; bb15\"><span class=\"annotation\">\u2989@14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:54-4:54: @15.Return: return\"><span class=\"annotation\">@15\u298a</span>\u2038<span class=\"annotation\">\u2989@15</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "671cbea0ff30572084537c676bf6f5b9c960b961", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-ge-{closure#0}-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,72 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-ge-{closure#0}-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">minor: usize,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:17: @0[3]: _4 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n+8:5-8:17: @0[4]: _3 = &amp;(*_4)\n+8:5-8:17: @0[7]: _6 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n+8:5-8:17: @0[8]: _5 = &amp;(*_6)\n+8:5-8:17: @0.Call: _2 = &lt;usize as PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n+8:5-8:17: @1[3]: _7 = Less\n+8:5-8:17: @1.Call: _0 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n+8:5-8:17: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>patch: usize<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "6da79c4b130cb1d97de50fa4165826c25eb4de59", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-ge-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,73 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-ge-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 5\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">major: usize,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:5-7:17: @0[4]: _5 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n+7:5-7:17: @0[5]: _4 = &amp;(*_5)\n+7:5-7:17: @0[8]: _7 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n+7:5-7:17: @0[9]: _6 = &amp;(*_7)\n+7:5-7:17: @0.Call: _3 = &lt;usize as PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n+7:5-7:17: @1[3]: _8 = Equal\n+7:5-7:17: @1.Call: _2 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n+7:5-7:17: @2[4]: _10 = &amp;(*(_1.2: &amp;&amp;usize))\n+7:5-7:17: @2[6]: _11 = &amp;(*(_1.3: &amp;&amp;usize))\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">minor: usize</span></span></div>\n+</body>\n+</html>"}, {"sha": "5f5c31ce77591ccb2ce9245cc3349d69d48f0888", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-ge.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-ge.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-ge - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @0[0]: FakeRead(ForMatchedPlace, (*_2))\n+4:39-4:49: @0[2]: _3 = &amp;((*_2).0: usize)\n+4:39-4:49: @0[4]: _4 = &amp;((*_2).1: usize)\n+4:39-4:49: @0[6]: _5 = &amp;((*_2).2: usize)\n+4:39-4:49: @0[7]: FakeRead(ForMatchedPlace, (*_1))\n+4:39-4:49: @0[9]: _6 = &amp;((*_1).0: usize)\n+4:39-4:49: @0[11]: _7 = &amp;((*_1).1: usize)\n+4:39-4:49: @0[13]: _8 = &amp;((*_1).2: usize)\n+4:39-4:49: @0[20]: _14 = &amp;(*_6)\n+4:39-4:49: @0[21]: _13 = &amp;(*_14)\n+4:39-4:49: @0[24]: _16 = &amp;(*_3)\n+4:39-4:49: @0[25]: _15 = &amp;(*_16)\n+4:39-4:49: @0.Call: _12 = &lt;usize as PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n+4:39-4:49: @1[3]: _17 = Equal\n+4:39-4:49: @1.Call: _11 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n+4:39-4:49: @2[4]: _19 = &amp;_7\n+4:39-4:49: @2[6]: _20 = &amp;_4\n+4:39-4:49: @2[8]: _21 = &amp;_8\n+4:39-4:49: @2[10]: _22 = &amp;_5\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">PartialOrd</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:49-4:49: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "fbdd0f7db42b489fb44935e792961e328f638690", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-gt-{closure#0}-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,72 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-gt-{closure#0}-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">minor: usize,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:17: @0[3]: _4 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n+8:5-8:17: @0[4]: _3 = &amp;(*_4)\n+8:5-8:17: @0[7]: _6 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n+8:5-8:17: @0[8]: _5 = &amp;(*_6)\n+8:5-8:17: @0.Call: _2 = &lt;usize as PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n+8:5-8:17: @1[3]: _7 = Less\n+8:5-8:17: @1.Call: _0 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n+8:5-8:17: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>patch: usize<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "736f2034333336e145727347c77436e26d5ef730", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-gt-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,73 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-gt-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 5\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">major: usize,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:5-7:17: @0[4]: _5 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n+7:5-7:17: @0[5]: _4 = &amp;(*_5)\n+7:5-7:17: @0[8]: _7 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n+7:5-7:17: @0[9]: _6 = &amp;(*_7)\n+7:5-7:17: @0.Call: _3 = &lt;usize as PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n+7:5-7:17: @1[3]: _8 = Equal\n+7:5-7:17: @1.Call: _2 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n+7:5-7:17: @2[4]: _10 = &amp;(*(_1.2: &amp;&amp;usize))\n+7:5-7:17: @2[6]: _11 = &amp;(*(_1.3: &amp;&amp;usize))\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">minor: usize</span></span></div>\n+</body>\n+</html>"}, {"sha": "0fec7c9932f22f4e9273cd859ccb67ddef2e2f31", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-gt.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-gt.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-gt - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @0[0]: FakeRead(ForMatchedPlace, (*_2))\n+4:39-4:49: @0[2]: _3 = &amp;((*_2).0: usize)\n+4:39-4:49: @0[4]: _4 = &amp;((*_2).1: usize)\n+4:39-4:49: @0[6]: _5 = &amp;((*_2).2: usize)\n+4:39-4:49: @0[7]: FakeRead(ForMatchedPlace, (*_1))\n+4:39-4:49: @0[9]: _6 = &amp;((*_1).0: usize)\n+4:39-4:49: @0[11]: _7 = &amp;((*_1).1: usize)\n+4:39-4:49: @0[13]: _8 = &amp;((*_1).2: usize)\n+4:39-4:49: @0[20]: _14 = &amp;(*_6)\n+4:39-4:49: @0[21]: _13 = &amp;(*_14)\n+4:39-4:49: @0[24]: _16 = &amp;(*_3)\n+4:39-4:49: @0[25]: _15 = &amp;(*_16)\n+4:39-4:49: @0.Call: _12 = &lt;usize as PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n+4:39-4:49: @1[3]: _17 = Equal\n+4:39-4:49: @1.Call: _11 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n+4:39-4:49: @2[4]: _19 = &amp;_7\n+4:39-4:49: @2[6]: _20 = &amp;_4\n+4:39-4:49: @2[8]: _21 = &amp;_8\n+4:39-4:49: @2[10]: _22 = &amp;_5\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">PartialOrd</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:49-4:49: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "ff4eba107892bc22bb907511c62c8dc4e1f1812d", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-le-{closure#0}-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,72 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-le-{closure#0}-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">minor: usize,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:17: @0[3]: _4 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n+8:5-8:17: @0[4]: _3 = &amp;(*_4)\n+8:5-8:17: @0[7]: _6 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n+8:5-8:17: @0[8]: _5 = &amp;(*_6)\n+8:5-8:17: @0.Call: _2 = &lt;usize as PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n+8:5-8:17: @1[3]: _7 = Greater\n+8:5-8:17: @1.Call: _0 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n+8:5-8:17: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>patch: usize<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "ccc86a7f92fea6dc6571a6822788fb5d03fc26a4", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-le-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,73 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-le-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 5\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">major: usize,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:5-7:17: @0[4]: _5 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n+7:5-7:17: @0[5]: _4 = &amp;(*_5)\n+7:5-7:17: @0[8]: _7 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n+7:5-7:17: @0[9]: _6 = &amp;(*_7)\n+7:5-7:17: @0.Call: _3 = &lt;usize as PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n+7:5-7:17: @1[3]: _8 = Equal\n+7:5-7:17: @1.Call: _2 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n+7:5-7:17: @2[4]: _10 = &amp;(*(_1.2: &amp;&amp;usize))\n+7:5-7:17: @2[6]: _11 = &amp;(*(_1.3: &amp;&amp;usize))\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">minor: usize</span></span></div>\n+</body>\n+</html>"}, {"sha": "682b9112c4cf82284aec8c857b25ed2e813fea20", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-le.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-le.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-le - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @0[0]: FakeRead(ForMatchedPlace, (*_2))\n+4:39-4:49: @0[2]: _3 = &amp;((*_2).0: usize)\n+4:39-4:49: @0[4]: _4 = &amp;((*_2).1: usize)\n+4:39-4:49: @0[6]: _5 = &amp;((*_2).2: usize)\n+4:39-4:49: @0[7]: FakeRead(ForMatchedPlace, (*_1))\n+4:39-4:49: @0[9]: _6 = &amp;((*_1).0: usize)\n+4:39-4:49: @0[11]: _7 = &amp;((*_1).1: usize)\n+4:39-4:49: @0[13]: _8 = &amp;((*_1).2: usize)\n+4:39-4:49: @0[20]: _14 = &amp;(*_6)\n+4:39-4:49: @0[21]: _13 = &amp;(*_14)\n+4:39-4:49: @0[24]: _16 = &amp;(*_3)\n+4:39-4:49: @0[25]: _15 = &amp;(*_16)\n+4:39-4:49: @0.Call: _12 = &lt;usize as PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n+4:39-4:49: @1[3]: _17 = Equal\n+4:39-4:49: @1.Call: _11 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n+4:39-4:49: @2[4]: _19 = &amp;_7\n+4:39-4:49: @2[6]: _20 = &amp;_4\n+4:39-4:49: @2[8]: _21 = &amp;_8\n+4:39-4:49: @2[10]: _22 = &amp;_5\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">PartialOrd</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:49-4:49: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "e018c96c24f22a98a467a988322c828f25b70e30", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-lt-{closure#0}-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,72 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-lt-{closure#0}-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">minor: usize,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:17: @0[3]: _4 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n+8:5-8:17: @0[4]: _3 = &amp;(*_4)\n+8:5-8:17: @0[7]: _6 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n+8:5-8:17: @0[8]: _5 = &amp;(*_6)\n+8:5-8:17: @0.Call: _2 = &lt;usize as PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n+8:5-8:17: @1[3]: _7 = Greater\n+8:5-8:17: @1.Call: _0 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n+8:5-8:17: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>patch: usize<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "a10032059b59eff5c805661a07570bb2a3e656fc", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-lt-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,73 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-lt-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 5\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">major: usize,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:5-7:17: @0[4]: _5 = &amp;(*(*(_1.0: &amp;&amp;usize)))\n+7:5-7:17: @0[5]: _4 = &amp;(*_5)\n+7:5-7:17: @0[8]: _7 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n+7:5-7:17: @0[9]: _6 = &amp;(*_7)\n+7:5-7:17: @0.Call: _3 = &lt;usize as PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n+7:5-7:17: @1[3]: _8 = Equal\n+7:5-7:17: @1.Call: _2 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n+7:5-7:17: @2[4]: _10 = &amp;(*(_1.2: &amp;&amp;usize))\n+7:5-7:17: @2[6]: _11 = &amp;(*(_1.3: &amp;&amp;usize))\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">minor: usize</span></span></div>\n+</body>\n+</html>"}, {"sha": "89dad0f90698ce9445a51793aaeb0722a69888dc", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-lt.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-lt.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-lt - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @0[0]: FakeRead(ForMatchedPlace, (*_2))\n+4:39-4:49: @0[2]: _3 = &amp;((*_2).0: usize)\n+4:39-4:49: @0[4]: _4 = &amp;((*_2).1: usize)\n+4:39-4:49: @0[6]: _5 = &amp;((*_2).2: usize)\n+4:39-4:49: @0[7]: FakeRead(ForMatchedPlace, (*_1))\n+4:39-4:49: @0[9]: _6 = &amp;((*_1).0: usize)\n+4:39-4:49: @0[11]: _7 = &amp;((*_1).1: usize)\n+4:39-4:49: @0[13]: _8 = &amp;((*_1).2: usize)\n+4:39-4:49: @0[20]: _14 = &amp;(*_6)\n+4:39-4:49: @0[21]: _13 = &amp;(*_14)\n+4:39-4:49: @0[24]: _16 = &amp;(*_3)\n+4:39-4:49: @0[25]: _15 = &amp;(*_16)\n+4:39-4:49: @0.Call: _12 = &lt;usize as PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n+4:39-4:49: @1[3]: _17 = Equal\n+4:39-4:49: @1.Call: _11 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n+4:39-4:49: @2[4]: _19 = &amp;_7\n+4:39-4:49: @2[6]: _20 = &amp;_4\n+4:39-4:49: @2[8]: _21 = &amp;_8\n+4:39-4:49: @2[10]: _22 = &amp;_5\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">PartialOrd</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:49-4:49: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "2c03e967eeb926546c8a3f40814ef843fdb7e660", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#2}-partial_cmp.-------.InstrumentCoverage.0.html", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,72 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#2}-partial_cmp - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @17.Goto: goto -&gt; bb18\"><span class=\"annotation\">@17\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:39-4:49: @15[1]: _30 = Equal\n+4:39-4:49: @15[2]: _0 = Option::&lt;std::cmp::Ordering&gt;::Some(move _30)\n+4:39-4:49: @15.Goto: goto -&gt; bb16\"><span class=\"annotation\">@14,15\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:39-4:49: @12[1]: _31 = _23\n+4:39-4:49: @12[2]: _0 = _31\n+4:39-4:49: @12.Goto: goto -&gt; bb16\"><span class=\"annotation\">@12\u298a</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"4:39-4:49: @16.Goto: goto -&gt; bb17\"><span class=\"annotation\">@16\u298a</span>PartialOrd<span class=\"annotation\">\u2989@16</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:39-4:49: @12[1]: _31 = _23\n+4:39-4:49: @12[2]: _0 = _31\n+4:39-4:49: @12.Goto: goto -&gt; bb16\"><span class=\"annotation\">\u2989@12</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:39-4:49: @15[1]: _30 = Equal\n+4:39-4:49: @15[2]: _0 = Option::&lt;std::cmp::Ordering&gt;::Some(move _30)\n+4:39-4:49: @15.Goto: goto -&gt; bb16\"><span class=\"annotation\">\u2989@14,15</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:39-4:49: @17.Goto: goto -&gt; bb18\"><span class=\"annotation\">\u2989@17</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:49-4:49: @18.Return: return\"><span class=\"annotation\">@18\u298a</span>\u2038<span class=\"annotation\">\u2989@18</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "49d73b3457b7cf7dbd9f7bfbc752e14c7187642b", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#4}-assert_receiver_is_total_eq.-------.InstrumentCoverage.0.html", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%234%7D-assert_receiver_is_total_eq.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%234%7D-assert_receiver_is_total_eq.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%234%7D-assert_receiver_is_total_eq.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,65 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#4}-assert_receiver_is_total_eq - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                  <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:35-4:37: @0[0]: _0 = const ()\n+4:37-4:37: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>Eq<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "bc34080f109747a5c539228d216dffacfdba0d6d", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#6}-eq.-------.InstrumentCoverage.0.html", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%236%7D-eq.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%236%7D-eq.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%236%7D-eq.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,67 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#6}-eq - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                       <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:24-4:33: @2[0]: _0 = const false\n+4:24-4:33: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:24-4:33: @1[0]: _0 = const true\n+4:24-4:33: @1.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1\u298a</span>PartialEq<span class=\"annotation\">\u2989@1</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:24-4:33: @2[0]: _0 = const false\n+4:24-4:33: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">\u2989@2</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:33-4:33: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "376c8dd80d096e6976fcbbfb41e7cb1f4586b7b6", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#6}-ne.-------.InstrumentCoverage.0.html", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,71 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#6}-ne - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                       <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:24-4:33: @2[0]: _0 = const false\n+4:24-4:33: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:24-4:33: @5[0]: _9 = const true\n+4:24-4:33: @5.Goto: goto -&gt; bb8\"><span class=\"annotation\">@5\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:24-4:33: @6[0]: _9 = const false\n+4:24-4:33: @6.Goto: goto -&gt; bb8\"><span class=\"annotation\">@6\u298a</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"4:24-4:33: @1[0]: _0 = const true\n+4:24-4:33: @1.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1\u298a</span>PartialEq<span class=\"annotation\">\u2989@1</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"4:24-4:33: @6[0]: _9 = const false\n+4:24-4:33: @6.Goto: goto -&gt; bb8\"><span class=\"annotation\">\u2989@6</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:24-4:33: @5[0]: _9 = const true\n+4:24-4:33: @5.Goto: goto -&gt; bb8\"><span class=\"annotation\">\u2989@5</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:24-4:33: @2[0]: _0 = const false\n+4:24-4:33: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">\u2989@2</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:33-4:33: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "c3fed16a3b4eecba078f5613d711d53378ad8541", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#7}-fmt.-------.InstrumentCoverage.0.html", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%237%7D-fmt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%237%7D-fmt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%237%7D-fmt.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,99 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#7}-fmt - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:17-4:22: @0[0]: FakeRead(ForMatchedPlace, (*_1))\n+4:17-4:22: @0[2]: _3 = &amp;((*_1).0: usize)\n+4:17-4:22: @0[4]: _4 = &amp;((*_1).1: usize)\n+4:17-4:22: @0[6]: _5 = &amp;((*_1).2: usize)\n+4:17-4:22: @0[9]: _7 = &amp;mut (*_2)\n+4:17-4:22: @0[12]: _9 = const &quot;Version&quot;\n+4:17-4:22: @0[13]: _8 = &amp;(*_9)\n+4:17-4:22: @0.Call: _6 = Formatter::debug_struct(move _7, move _8) -&gt; [return: bb1, unwind: bb6]\n+4:17-4:22: @1[2]: FakeRead(ForLet, _6)\n+4:17-4:22: @1[6]: _11 = &amp;mut _6\n+4:17-4:22: @1[9]: _13 = const &quot;major&quot;\n+4:17-4:22: @1[10]: _12 = &amp;(*_13)\n+4:17-4:22: @1[15]: _17 = &amp;(*_3)\n+4:17-4:22: @1[16]: _16 = &amp;_17\n+4:17-4:22: @1[17]: _15 = &amp;(*_16)\n+4:17-4:22: @1[18]: _14 = move _15 as &amp;dyn std::fmt::Debug (Pointer(Unsize))\n+4:17-4:22: @1.Call: _10 = DebugStruct::field(move _11, move _12, move _14) -&gt; [return: bb2, unwind: bb6]\n+4:17-4:22: @2[9]: _19 = &amp;mut _6\n+4:17-4:22: @2[12]: _21 = const &quot;minor&quot;\n+4:17-4:22: @2[13]: _20 = &amp;(*_21)\n+4:17-4:22: @2[18]: _25 = &amp;(*_4)\n+4:17-4:22: @2[19]: _24 = &amp;_25\n+4:17-4:22: @2[20]: _23 = &amp;(*_24)\n+4:17-4:22: @2[21]: _22 = move _23 as &amp;dyn std::fmt::Debug (Pointer(Unsize))\n+4:17-4:22: @2.Call: _18 = DebugStruct::field(move _19, move _20, move _22) -&gt; [return: bb3, unwind: bb6]\n+4:17-4:22: @3[9]: _27 = &amp;mut _6\n+4:17-4:22: @3[12]: _29 = const &quot;patch&quot;\n+4:17-4:22: @3[13]: _28 = &amp;(*_29)\n+4:17-4:22: @3[18]: _33 = &amp;(*_5)\n+4:17-4:22: @3[19]: _32 = &amp;_33\n+4:17-4:22: @3[20]: _31 = &amp;(*_32)\n+4:17-4:22: @3[21]: _30 = move _31 as &amp;dyn std::fmt::Debug (Pointer(Unsize))\n+4:17-4:22: @3.Call: _26 = DebugStruct::field(move _27, move _28, move _30) -&gt; [return: bb4, unwind: bb6]\n+4:17-4:22: @4[8]: _34 = &amp;mut _6\n+4:17-4:22: @4.Call: _0 = DebugStruct::finish(move _34) -&gt; [return: bb5, unwind: bb6]\n+4:22-4:22: @5.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5\u298a</span>Debug<span class=\"annotation\">\u2989@0,1,2,3,4,5</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "6a4f11e07544648d5e18ede75b772e7904b2a5c0", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.partial_eq_counter_without_region/partial_eq_counter_without_region.{impl#8}-clone.-------.InstrumentCoverage.0.html", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%238%7D-clone.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%238%7D-clone.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.partial_eq_counter_without_region%2Fpartial_eq_counter_without_region.%7Bimpl%238%7D-clone.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,78 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>partial_eq_counter_without_region.{impl#8}-clone - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">         <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:10-4:15: @0[0]: FakeRead(ForMatchedPlace, (*_1))\n+4:10-4:15: @0[2]: _2 = &amp;((*_1).0: usize)\n+4:10-4:15: @0[4]: _3 = &amp;((*_1).1: usize)\n+4:10-4:15: @0[6]: _4 = &amp;((*_1).2: usize)\n+4:10-4:15: @0[10]: _7 = &amp;(*_2)\n+4:10-4:15: @0[11]: _6 = &amp;(*_7)\n+4:10-4:15: @0.Call: _5 = &lt;usize as Clone&gt;::clone(move _6) -&gt; [return: bb1, unwind: bb4]\n+4:10-4:15: @1[4]: _10 = &amp;(*_3)\n+4:10-4:15: @1[5]: _9 = &amp;(*_10)\n+4:10-4:15: @1.Call: _8 = &lt;usize as Clone&gt;::clone(move _9) -&gt; [return: bb2, unwind: bb4]\n+4:10-4:15: @2[4]: _13 = &amp;(*_4)\n+4:10-4:15: @2[5]: _12 = &amp;(*_13)\n+4:10-4:15: @2.Call: _11 = &lt;usize as Clone&gt;::clone(move _12) -&gt; [return: bb3, unwind: bb4]\n+4:10-4:15: @3[1]: _0 = Version { major: move _5, minor: move _8, patch: move _11 }\n+4:15-4:15: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>Clone<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "618f84513e908926a80f98714ec248bfc6c6c65a", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.simple_loop/simple_loop.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -89,39 +89,45 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:9-12:16: @3[6]: _7 = _1\n 12:9-12:16: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+13:5-18:6: @6[1]: _6 = const ()\n+18:6-18:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\">        countdown</span></span>\n+13:5-18:6: @6[1]: _6 = const ()\n+18:6-18:6: @6.Goto: goto -&gt; bb7\">        countdown</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\">        =</span></span>\n+13:5-18:6: @6[1]: _6 = const ()\n+18:6-18:6: @6.Goto: goto -&gt; bb7\">        =</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\">            10</span></span>\n+13:5-18:6: @6[1]: _6 = const ()\n+18:6-18:6: @6.Goto: goto -&gt; bb7\">            10</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\">        ;</span></span>\n+13:5-18:6: @6[1]: _6 = const ()\n+18:6-18:6: @6.Goto: goto -&gt; bb7\">        ;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n-13:5-18:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+13:5-18:6: @6[1]: _6 = const ()\n+18:6-18:6: @6.Goto: goto -&gt; bb7\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:6-18:6: @5.Goto: goto -&gt; bb7\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    loop</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n 23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n 23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@8,9\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n 23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n 23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\">                ==</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n 23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n 23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\">            0<span class=\"annotation\">\u2989@8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:13-27:18: @12[0]: _0 = const ()\"><span class=\"annotation\">@10,12\u298a</span>break<span class=\"annotation\">\u2989@10,12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:18: @12[0]: _0 = const ()\"><span class=\"annotation\">@10,12\u298a</span>break<span class=\"annotation\">\u2989@10,12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\"><span class=\"annotation\">@11\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\">        -=</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\">        1<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\"><span class=\"annotation\">@13\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        -=</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:6-34:6: @7.Goto: goto -&gt; bb8\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:2-35:2: @12.Return: return\"><span class=\"annotation\">@10,12\u298a</span>\u2038<span class=\"annotation\">\u2989@10,12</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "66885d0612bfc5592bf3fb114e38cd1878037e78", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.simple_match/simple_match.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 25, "deletions": 37, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -86,51 +86,39 @@\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 1<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:8-10:15: @3[6]: _7 = _1\n 10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n-10:16-12:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+10:16-12:6: @6[1]: _6 = const ()\n+12:6-12:6: @6.Goto: goto -&gt; bb7\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n-10:16-12:6: @6[1]: _6 = const ()\">        countdown = 0;</span></span>\n+10:16-12:6: @6[1]: _6 = const ()\n+12:6-12:6: @6.Goto: goto -&gt; bb7\">        countdown = 0;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n-10:16-12:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+10:16-12:6: @6[1]: _6 = const ()\n+12:6-12:6: @6.Goto: goto -&gt; bb7\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:6-12:6: @5.Goto: goto -&gt; bb7\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:9-15:10: @11[2]: _17 = discriminant(_14)\"><span class=\"annotation\">@9,10,11\u298a</span>for</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:9-15:10: @11[2]: _17 = discriminant(_14)\">        _<span class=\"annotation\">\u2989@9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    for</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:9-15:10: @15[1]: _18 = ((_14 as Some).0: i32)\n+15:9-15:10: @15[3]: _19 = _18\n+15:9-15:10: @15[4]: _12 = move _19\n+15:9-15:10: @15[5]: _13 = const ()\"><span class=\"annotation\">@13,15,17\u298a</span>_<span class=\"annotation\">\u2989@13,15,17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:13: @7[4]: _9 = std::ops::Range::&lt;i32&gt; { start: const 0_i32, end: const 2_i32 }\n-17:9-17:13: @7.Call: _8 = &lt;std::ops::Range&lt;i32&gt; as IntoIterator&gt;::into_iter(move _9) -&gt; [return: bb8, unwind: bb22]\n-17:9-17:13: @8[1]: FakeRead(ForMatchedPlace, _8)\n-17:9-17:13: @8[3]: _10 = move _8\"><span class=\"annotation\">@7,8\u298a</span>0..2<span class=\"annotation\">\u2989@7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:13: @10[5]: _16 = &amp;mut _10\n+17:9-17:13: @10[6]: _15 = &amp;mut (*_16)\n+17:9-17:13: @10.Call: _14 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _15) -&gt; [return: bb11, unwind: bb22]\n+17:9-17:13: @11[1]: FakeRead(ForMatchedPlace, _14)\"><span class=\"annotation\">@9,10,11\u298a</span>0..2<span class=\"annotation\">\u2989@9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let z</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        match</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n-24:13-24:14: @17[1]: _24 = &amp;_5\n-26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\"><span class=\"annotation\">@13,15,17\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n-24:13-24:14: @17[1]: _24 = &amp;_5\n-26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">        {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n-24:13-24:14: @17[1]: _24 = &amp;_5\n-26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">            x</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n-24:13-24:14: @17[1]: _24 = &amp;_5\n-26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">            if</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n-24:13-24:14: @17[1]: _24 = &amp;_5\n-26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                x</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n-24:13-24:14: @17[1]: _24 = &amp;_5\n-26:17-26:18: @17[4]: _26 = (*_24)\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\"><span class=\"annotation\">@13,15,17\u298a</span>countdown<span class=\"annotation\">\u2989@13,15,17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:13-24:14: @18[3]: _23 = _5\"><span class=\"annotation\">@18\u298a</span>x<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\"><span class=\"annotation\">@13,15,17\u298a</span>x</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @17[4]: _26 = (*_24)\n 26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                    &lt;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n-24:13-24:14: @17[1]: _24 = &amp;_5\n-26:17-26:18: @17[4]: _26 = (*_24)\n-26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                1<span class=\"annotation\">\u2989@13,15,17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                1<span class=\"annotation\">\u2989@13,15,17</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:18-28:18: @19.Goto: goto -&gt; bb16\"><span class=\"annotation\">@19\u298a</span>\u2038<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            =&gt;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n 31:17-31:30: @18[6]: _22 = move _27\n@@ -184,7 +172,7 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            =&gt;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:13-40:15: @16[0]: _21 = const ()\"><span class=\"annotation\">@16\u298a</span>{}<span class=\"annotation\">\u2989@16</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:6-42:6: @8.Goto: goto -&gt; bb9\"><span class=\"annotation\">@7,8\u298a</span>\u2038<span class=\"annotation\">\u2989@7,8</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"42:6-42:6: @20.Goto: goto -&gt; bb9\"><span class=\"annotation\">@20\u298a</span>\u2038<span class=\"annotation\">\u2989@20</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:2-43:2: @12.Return: return\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "db08315baa65edba8a7ab25c2952692e3c3e100a", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.tight_infinite_loop/tight_infinite_loop.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.tight_infinite_loop%2Ftight_infinite_loop.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.tight_infinite_loop%2Ftight_infinite_loop.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.tight_infinite_loop%2Ftight_infinite_loop.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,70 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>tight_infinite_loop.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:8-2:13: @0[1]: _1 = const false\n+2:8-2:13: @0[2]: FakeRead(ForMatchedPlace, _1)\"><span class=\"annotation\">@0\u298a</span>false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"3:9-3:16: @4.FalseUnwind: falseUnwind -&gt; [real: bb5, cleanup: bb6]\n+3:14-3:16: @5[0]: _3 = const ()\"><span class=\"annotation\">@4,5\u298a</span>loop {}<span class=\"annotation\">\u2989@4,5</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"3:16-3:16: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>\u2038<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"3:16-3:16: @5.Goto: goto -&gt; bb4\"><span class=\"annotation\">@4,5\u298a</span>\u2038<span class=\"annotation\">\u2989@4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:2-5:2: @2.Return: return\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "8a0b1ae8dab11c2d5899e5533754981458700e93", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.try_error_result/try_error_result.call.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.call.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.call.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.call.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -67,7 +67,7 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:12-8:14: @2[1]: _4 = ()\n 8:9-8:15: @2[2]: _0 = std::result::Result::&lt;(), ()&gt;::Ok(move _4)\"><span class=\"annotation\">@2\u298a</span>Ok(())<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:2-10:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"9:6-9:6: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>\u2038<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:2-10:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "428c6fadc274172cbbc9507e8532c0fde4a25dc4", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.try_error_result/try_error_result.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 38, "deletions": 24, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -65,37 +65,51 @@\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:21-14:23: @0[1]: _1 = const 10_i32\n 13:9-14:18: @0[2]: FakeRead(ForLet, _1)\">        countdown = 10<span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:10: @4[2]: _12 = discriminant(_9)\"><span class=\"annotation\">@2,3,4\u298a</span>for</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:10: @4[2]: _12 = discriminant(_9)\">        _<span class=\"annotation\">\u2989@2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    for</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:10: @8[1]: _13 = ((_9 as Some).0: i32)\n+17:9-17:10: @8[3]: _14 = _13\n+17:9-17:10: @8[4]: _7 = move _14\n+17:9-17:10: @8[5]: _8 = const ()\"><span class=\"annotation\">@6,8\u298a</span>_<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:9-19:14: @0[6]: _4 = std::ops::Range::&lt;i32&gt; { start: const 0_i32, end: const 10_i32 }\n-19:9-19:14: @0.Call: _3 = &lt;std::ops::Range&lt;i32&gt; as IntoIterator&gt;::into_iter(move _4) -&gt; [return: bb1, unwind: bb32]\n-19:9-19:14: @1[1]: FakeRead(ForMatchedPlace, _3)\n-19:9-19:14: @1[3]: _5 = move _3\"><span class=\"annotation\">@0,1\u298a</span>0..10<span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:9-19:14: @3[5]: _11 = &amp;mut _5\n+19:9-19:14: @3[6]: _10 = &amp;mut (*_11)\n+19:9-19:14: @3.Call: _9 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _10) -&gt; [return: bb4, unwind: bb32]\n+19:9-19:14: @4[1]: FakeRead(ForMatchedPlace, _9)\"><span class=\"annotation\">@2,3,4\u298a</span>0..10<span class=\"annotation\">\u2989@2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\"><span class=\"annotation\">@6,8\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\">            -= 1<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:13-25:22: @9[3]: _19 = _1\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+25:13-25:22: @9[3]: _19 = _1\n 25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n-25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\"><span class=\"annotation\">@9\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\"><span class=\"annotation\">@9\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+25:13-25:22: @9[3]: _19 = _1\n+25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n+25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">            -= 1</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+25:13-25:22: @9[3]: _19 = _1\n+25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n+25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">        ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+25:13-25:22: @9[3]: _19 = _1\n+25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n+25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">        if</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+25:13-25:22: @9[3]: _19 = _1\n+25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n+25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">            countdown &lt; 5<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:13-27:41: @12.Call: _22 = call(const true) -&gt; [return: bb13, unwind: bb32]\n-27:13-27:42: @13.Call: _21 = &lt;std::result::Result&lt;(), ()&gt; as Try&gt;::into_result(move _22) -&gt; [return: bb14, unwind: bb32]\n-27:13-27:42: @14[1]: FakeRead(ForMatchedPlace, _21)\n-27:41-27:42: @14[2]: _23 = discriminant(_21)\"><span class=\"annotation\">@10,12,13,14\u298a</span>call(/*return_error=*/ true)?<span class=\"annotation\">\u2989@10,12,13,14</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:41: @12.Call: _22 = call(const true) -&gt; [return: bb13, unwind: bb32]\"><span class=\"annotation\">@10,12,13,14\u298a</span>call(/*return_error=*/ true)<span class=\"annotation\">\u2989@10,12,13,14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:41-27:42: @18[1]: _24 = ((_21 as Err).0: ())\n+27:41-27:42: @18[4]: _27 = _24\n+27:41-27:42: @18.Call: _26 = &lt;() as From&lt;()&gt;&gt;::from(move _27) -&gt; [return: bb19, unwind: bb32]\"><span class=\"annotation\">@16,18,19,20\u298a</span>?<span class=\"annotation\">\u2989@16,18,19,20</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        else</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:13-31:42: @11.Call: _31 = call(const false) -&gt; [return: bb21, unwind: bb32]\n-31:13-31:43: @21.Call: _30 = &lt;std::result::Result&lt;(), ()&gt; as Try&gt;::into_result(move _31) -&gt; [return: bb22, unwind: bb32]\n-31:13-31:43: @22[1]: FakeRead(ForMatchedPlace, _30)\n-31:42-31:43: @22[2]: _32 = discriminant(_30)\"><span class=\"annotation\">@11,21,22\u298a</span>call(/*return_error=*/ false)?<span class=\"annotation\">\u2989@11,21,22</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:8-34:10: @5[9]: _38 = ()\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:13-31:42: @11.Call: _31 = call(const false) -&gt; [return: bb21, unwind: bb32]\"><span class=\"annotation\">@11,21,22\u298a</span>call(/*return_error=*/ false)<span class=\"annotation\">\u2989@11,21,22</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:42-31:43: @26[1]: _33 = ((_30 as Err).0: ())\n+31:42-31:43: @26[4]: _36 = _33\n+31:42-31:43: @26.Call: _35 = &lt;() as From&lt;()&gt;&gt;::from(move _36) -&gt; [return: bb27, unwind: bb32]\"><span class=\"annotation\">@24,26,27,28\u298a</span>?<span class=\"annotation\">\u2989@24,26,27,28</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"32:10-32:10: @15.Goto: goto -&gt; bb29\"><span class=\"annotation\">@15\u298a</span>\u2038<span class=\"annotation\">\u2989@15</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:10-32:10: @23.Goto: goto -&gt; bb29\"><span class=\"annotation\">@23\u298a</span>\u2038<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @1.Goto: goto -&gt; bb2\"><span class=\"annotation\">@0,1\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"33:6-33:6: @29.Goto: goto -&gt; bb2\"><span class=\"annotation\">@29\u298a</span>\u2038<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:8-34:10: @5[9]: _38 = ()\n 34:5-34:11: @5[10]: _0 = std::result::Result::&lt;(), ()&gt;::Ok(move _38)\"><span class=\"annotation\">@5\u298a</span>Ok(())<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:2-35:2: @31.Return: return\"><span class=\"annotation\">@31\u298a</span>\u2038<span class=\"annotation\">\u2989@31</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:2-35:2: @30.Goto: goto -&gt; bb31\"><span class=\"annotation\">@30\u298a</span>\u2038<span class=\"annotation\">\u2989@30</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:2-35:2: @31.Return: return\"><span class=\"annotation\">@31\u298a</span>\u2038<span class=\"annotation\">\u2989@31</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "b9f6f4d7832b6e60940778313dadc3d9a9d76c18", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.various_conditions/various_conditions.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 79, "deletions": 54, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.various_conditions%2Fvarious_conditions.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.various_conditions%2Fvarious_conditions.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.various_conditions%2Fvarious_conditions.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -64,32 +64,42 @@\n 4:9-4:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:12: @0[5]: _3 = const true\n 5:8-5:12: @0[6]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0\u298a</span>true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n-5:13-7:6: @3[1]: _2 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+5:13-7:6: @3[1]: _2 = const ()\n+7:6-7:6: @3.Goto: goto -&gt; bb4\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n-5:13-7:6: @3[1]: _2 = const ()\">        countdown = 10;</span></span>\n+5:13-7:6: @3[1]: _2 = const ()\n+7:6-7:6: @3.Goto: goto -&gt; bb4\">        countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n-5:13-7:6: @3[1]: _2 = const ()\">    }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+5:13-7:6: @3[1]: _2 = const ()\n+7:6-7:6: @3.Goto: goto -&gt; bb4\">    }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:6-7:6: @2.Goto: goto -&gt; bb4\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    const B: u32 = 100;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:10: @25[0]: FakeRead(ForLet, _4)\"><span class=\"annotation\">@25\u298a</span>x<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:16-10:25: @4[5]: _6 = _1\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:9-10:10: @25[0]: FakeRead(ForLet, _4)\"><span class=\"annotation\">@25\u298a</span>x<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:16-10:25: @4[5]: _6 = _1\n 10:16-10:29: @4[6]: _5 = Gt(move _6, const 7_u32)\n 10:16-10:29: @4[8]: FakeRead(ForMatchedPlace, _5)\"><span class=\"annotation\">@4\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"11:9-11:23: @7[0]: _7 = CheckedSub(_1, const 4_u32)\"><span class=\"annotation\">@5,7\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@5,7</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:10: @8[1]: _4 = const B\"><span class=\"annotation\">@8\u298a</span>B<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n+12:9-12:10: @8[1]: _4 = const B\"><span class=\"annotation\">@8\u298a</span>countdown -= 4;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n+12:9-12:10: @8[1]: _4 = const B\">        B<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:15-13:24: @6[2]: _9 = _1\n 13:15-13:28: @6[3]: _8 = Gt(move _9, const 2_u32)\n 13:15-13:28: @6[5]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@6\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:12-14:21: @11[5]: _14 = _1\n 14:12-14:25: @11[6]: _13 = Lt(move _14, const 1_u32)\"><span class=\"annotation\">@9,11\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@9,11</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:29-14:38: @18[2]: _16 = _1\n-14:29-14:42: @18[3]: _15 = Gt(move _16, const 5_u32)\"><span class=\"annotation\">@18\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:46-14:55: @14[2]: _18 = _1\n-14:46-14:60: @14[3]: _17 = Ne(move _18, const 9_u32)\"><span class=\"annotation\">@14\u298a</span>countdown != 9<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n-14:61-16:10: @22[1]: _10 = const ()\"><span class=\"annotation\">@20,22\u298a</span>{</span></span>\n+14:29-14:42: @18[3]: _15 = Gt(move _16, const 5_u32)\"><span class=\"annotation\">@18\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@18</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:42-14:42: @16.Goto: goto -&gt; bb19\"><span class=\"annotation\">@16\u298a</span>\u2038<span class=\"annotation\">\u2989@16</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:42-14:42: @17.Goto: goto -&gt; bb19\"><span class=\"annotation\">@17\u298a</span>\u2038<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:46-14:55: @14[2]: _18 = _1\n+14:46-14:60: @14[3]: _17 = Ne(move _18, const 9_u32)\"><span class=\"annotation\">@14\u298a</span>countdown != 9<span class=\"annotation\">\u2989@14</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:60-14:60: @12.Goto: goto -&gt; bb15\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:60-14:60: @13.Goto: goto -&gt; bb15\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n+14:61-16:10: @22[1]: _10 = const ()\n+16:10-16:10: @22.Goto: goto -&gt; bb23\"><span class=\"annotation\">@20,22\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n-14:61-16:10: @22[1]: _10 = const ()\">            countdown = 0;</span></span>\n+14:61-16:10: @22[1]: _10 = const ()\n+16:10-16:10: @22.Goto: goto -&gt; bb23\">            countdown = 0;</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n-14:61-16:10: @22[1]: _10 = const ()\">        }<span class=\"annotation\">\u2989@20,22</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:23: @23[2]: _19 = CheckedSub(_1, const 5_u32)\"><span class=\"annotation\">@23\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:9-18:18: @24[1]: _4 = _1\"><span class=\"annotation\">@24\u298a</span>countdown<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+14:61-16:10: @22[1]: _10 = const ()\n+16:10-16:10: @22.Goto: goto -&gt; bb23\">        }<span class=\"annotation\">\u2989@20,22</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:10-16:10: @21.Goto: goto -&gt; bb23\"><span class=\"annotation\">@21\u298a</span>\u2038<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n+18:9-18:18: @24[1]: _4 = _1\"><span class=\"annotation\">@24\u298a</span>countdown -= 5;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n+18:9-18:18: @24[1]: _4 = _1\">        countdown<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:9-20:15: @10[0]: _0 = const ()\"><span class=\"annotation\">@10\u298a</span>return<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n@@ -98,29 +108,35 @@\n 23:9-23:22: @25[4]: FakeRead(ForLet, _21)\"><span class=\"annotation\">@25\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:8-24:12: @25[7]: _23 = const true\n 24:8-24:12: @25[8]: FakeRead(ForMatchedPlace, _23)\"><span class=\"annotation\">@25\u298a</span>true<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n-24:13-26:6: @28[1]: _22 = const ()\"><span class=\"annotation\">@26,28\u298a</span>{</span></span>\n+24:13-26:6: @28[1]: _22 = const ()\n+26:6-26:6: @28.Goto: goto -&gt; bb29\"><span class=\"annotation\">@26,28\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n-24:13-26:6: @28[1]: _22 = const ()\">        countdown = 10;</span></span>\n+24:13-26:6: @28[1]: _22 = const ()\n+26:6-26:6: @28.Goto: goto -&gt; bb29\">        countdown = 10;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n-24:13-26:6: @28[1]: _22 = const ()\">    }<span class=\"annotation\">\u2989@26,28</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+24:13-26:6: @28[1]: _22 = const ()\n+26:6-26:6: @28.Goto: goto -&gt; bb29\">    }<span class=\"annotation\">\u2989@26,28</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"26:6-26:6: @27.Goto: goto -&gt; bb29\"><span class=\"annotation\">@27\u298a</span>\u2038<span class=\"annotation\">\u2989@27</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:8-28:17: @29[5]: _26 = _21\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:8-28:17: @29[5]: _26 = _21\n 28:8-28:21: @29[6]: _25 = Gt(move _26, const 7_i32)\n 28:8-28:21: @29[8]: FakeRead(ForMatchedPlace, _25)\"><span class=\"annotation\">@29\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:9-29:23: @32[0]: _27 = CheckedSub(_21, const 4_i32)\"><span class=\"annotation\">@30,32\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@30,32</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:15-30:24: @31[2]: _29 = _21\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @33[0]: _21 = move (_27.0: i32)\"><span class=\"annotation\">@33\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@33</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:15-30:24: @31[2]: _29 = _21\n 30:15-30:28: @31[3]: _28 = Gt(move _29, const 2_i32)\n 30:15-30:28: @31[5]: FakeRead(ForMatchedPlace, _28)\"><span class=\"annotation\">@31\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@31</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:12-31:21: @36[5]: _34 = _21\n-31:12-31:25: @36[6]: _33 = Lt(move _34, const 1_i32)\"><span class=\"annotation\">@34,36\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@34,36</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:29-31:38: @43[2]: _36 = _21\n-31:29-31:42: @43[3]: _35 = Gt(move _36, const 5_i32)\"><span class=\"annotation\">@43\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@43</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:46-31:55: @39[2]: _38 = _21\n-31:46-31:60: @39[3]: _37 = Ne(move _38, const 9_i32)\"><span class=\"annotation\">@39\u298a</span>countdown != 9<span class=\"annotation\">\u2989@39</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n-31:61-33:10: @47[1]: _30 = const ()\"><span class=\"annotation\">@45,47\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n-31:61-33:10: @47[1]: _30 = const ()\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n-31:61-33:10: @47[1]: _30 = const ()\">        }<span class=\"annotation\">\u2989@45,47</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:23: @48[2]: _39 = CheckedSub(_21, const 5_i32)\"><span class=\"annotation\">@48\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@48</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:12-31:21: @36[5]: _34 = _21\n+31:12-31:25: @36[6]: _33 = Lt(move _34, const 1_i32)\"><span class=\"annotation\">@34,36\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@34,36</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:29-31:38: @43[2]: _36 = _21\n+31:29-31:42: @43[3]: _35 = Gt(move _36, const 5_i32)\"><span class=\"annotation\">@43\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@43</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:42-31:42: @41.Goto: goto -&gt; bb44\"><span class=\"annotation\">@41\u298a</span>\u2038<span class=\"annotation\">\u2989@41</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:42-31:42: @42.Goto: goto -&gt; bb44\"><span class=\"annotation\">@42\u298a</span>\u2038<span class=\"annotation\">\u2989@42</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:46-31:55: @39[2]: _38 = _21\n+31:46-31:60: @39[3]: _37 = Ne(move _38, const 9_i32)\"><span class=\"annotation\">@39\u298a</span>countdown != 9<span class=\"annotation\">\u2989@39</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:60-31:60: @37.Goto: goto -&gt; bb40\"><span class=\"annotation\">@37\u298a</span>\u2038<span class=\"annotation\">\u2989@37</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:60-31:60: @38.Goto: goto -&gt; bb40\"><span class=\"annotation\">@38\u298a</span>\u2038<span class=\"annotation\">\u2989@38</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n+31:61-33:10: @47[1]: _30 = const ()\n+33:10-33:10: @47.Goto: goto -&gt; bb48\"><span class=\"annotation\">@45,47\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n+31:61-33:10: @47[1]: _30 = const ()\n+33:10-33:10: @47.Goto: goto -&gt; bb48\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n+31:61-33:10: @47[1]: _30 = const ()\n+33:10-33:10: @47.Goto: goto -&gt; bb48\">        }<span class=\"annotation\">\u2989@45,47</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:10-33:10: @46.Goto: goto -&gt; bb48\"><span class=\"annotation\">@46\u298a</span>\u2038<span class=\"annotation\">\u2989@46</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:23: @49[0]: _21 = move (_39.0: i32)\"><span class=\"annotation\">@49\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@49</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:15: @35[0]: _0 = const ()\"><span class=\"annotation\">@35\u298a</span>return<span class=\"annotation\">\u2989@35</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n@@ -129,29 +145,35 @@\n 39:9-39:22: @50[4]: FakeRead(ForLet, _41)\"><span class=\"annotation\">@50\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"40:8-40:12: @50[7]: _43 = const true\n 40:8-40:12: @50[8]: FakeRead(ForMatchedPlace, _43)\"><span class=\"annotation\">@50\u298a</span>true<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\"><span class=\"annotation\">@51,53\u298a</span>{</span></span>\n+40:13-42:6: @53[1]: _42 = const ()\n+42:6-42:6: @53.Goto: goto -&gt; bb54\"><span class=\"annotation\">@51,53\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\">        countdown = 1;</span></span>\n+40:13-42:6: @53[1]: _42 = const ()\n+42:6-42:6: @53.Goto: goto -&gt; bb54\">        countdown = 1;</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\">    }<span class=\"annotation\">\u2989@51,53</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+40:13-42:6: @53[1]: _42 = const ()\n+42:6-42:6: @53.Goto: goto -&gt; bb54\">    }<span class=\"annotation\">\u2989@51,53</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:6-42:6: @52.Goto: goto -&gt; bb54\"><span class=\"annotation\">@52\u298a</span>\u2038<span class=\"annotation\">\u2989@52</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"44:9-44:10: @77[0]: FakeRead(ForLet, _44)\"><span class=\"annotation\">@77\u298a</span>z<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"44:16-44:25: @54[5]: _46 = _41\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"44:9-44:10: @77[0]: FakeRead(ForLet, _44)\"><span class=\"annotation\">@77\u298a</span>z<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"44:16-44:25: @54[5]: _46 = _41\n 44:16-44:29: @54[6]: _45 = Gt(move _46, const 7_i32)\n 44:16-44:29: @54[8]: FakeRead(ForMatchedPlace, _45)\"><span class=\"annotation\">@54\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@54</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"45:9-45:23: @57[0]: _47 = CheckedSub(_41, const 4_i32)\"><span class=\"annotation\">@55,57\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@55,57</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"46:15-46:24: @56[2]: _49 = _41\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"45:9-45:23: @58[0]: _41 = move (_47.0: i32)\"><span class=\"annotation\">@58\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@58</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"46:15-46:24: @56[2]: _49 = _41\n 46:15-46:28: @56[3]: _48 = Gt(move _49, const 2_i32)\n 46:15-46:28: @56[5]: FakeRead(ForMatchedPlace, _48)\"><span class=\"annotation\">@56\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@56</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:12-47:21: @61[5]: _54 = _41\n-47:12-47:25: @61[6]: _53 = Lt(move _54, const 1_i32)\"><span class=\"annotation\">@59,61\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@59,61</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:29-47:38: @68[2]: _56 = _41\n-47:29-47:42: @68[3]: _55 = Gt(move _56, const 5_i32)\"><span class=\"annotation\">@68\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@68</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:46-47:55: @64[2]: _58 = _41\n-47:46-47:60: @64[3]: _57 = Ne(move _58, const 9_i32)\"><span class=\"annotation\">@64\u298a</span>countdown != 9<span class=\"annotation\">\u2989@64</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\"><span class=\"annotation\">@70,72\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\">        }<span class=\"annotation\">\u2989@70,72</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:9-50:23: @73[2]: _59 = CheckedSub(_41, const 5_i32)\"><span class=\"annotation\">@73\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@73</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:12-47:21: @61[5]: _54 = _41\n+47:12-47:25: @61[6]: _53 = Lt(move _54, const 1_i32)\"><span class=\"annotation\">@59,61\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@59,61</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:29-47:38: @68[2]: _56 = _41\n+47:29-47:42: @68[3]: _55 = Gt(move _56, const 5_i32)\"><span class=\"annotation\">@68\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@68</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:42-47:42: @66.Goto: goto -&gt; bb69\"><span class=\"annotation\">@66\u298a</span>\u2038<span class=\"annotation\">\u2989@66</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:42-47:42: @67.Goto: goto -&gt; bb69\"><span class=\"annotation\">@67\u298a</span>\u2038<span class=\"annotation\">\u2989@67</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:46-47:55: @64[2]: _58 = _41\n+47:46-47:60: @64[3]: _57 = Ne(move _58, const 9_i32)\"><span class=\"annotation\">@64\u298a</span>countdown != 9<span class=\"annotation\">\u2989@64</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:60-47:60: @62.Goto: goto -&gt; bb65\"><span class=\"annotation\">@62\u298a</span>\u2038<span class=\"annotation\">\u2989@62</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:60-47:60: @63.Goto: goto -&gt; bb65\"><span class=\"annotation\">@63\u298a</span>\u2038<span class=\"annotation\">\u2989@63</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n+47:61-49:10: @72[1]: _50 = const ()\n+49:10-49:10: @72.Goto: goto -&gt; bb73\"><span class=\"annotation\">@70,72\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n+47:61-49:10: @72[1]: _50 = const ()\n+49:10-49:10: @72.Goto: goto -&gt; bb73\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n+47:61-49:10: @72[1]: _50 = const ()\n+49:10-49:10: @72.Goto: goto -&gt; bb73\">        }<span class=\"annotation\">\u2989@70,72</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:10-49:10: @71.Goto: goto -&gt; bb73\"><span class=\"annotation\">@71\u298a</span>\u2038<span class=\"annotation\">\u2989@71</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:9-50:23: @74[0]: _41 = move (_59.0: i32)\"><span class=\"annotation\">@74\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@74</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n 52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n@@ -206,23 +228,26 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:10: @98[0]: FakeRead(ForLet, _74)\"><span class=\"annotation\">@98\u298a</span>w<span class=\"annotation\">\u2989@98</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"57:16-57:25: @77[5]: _76 = _41\n 57:16-57:29: @77[6]: _75 = Gt(move _76, const 7_i32)\n 57:16-57:29: @77[8]: FakeRead(ForMatchedPlace, _75)\"><span class=\"annotation\">@77\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"58:9-58:23: @80[0]: _77 = CheckedSub(_41, const 4_i32)\"><span class=\"annotation\">@78,80\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@78,80</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"58:9-58:23: @81[0]: _41 = move (_77.0: i32)\"><span class=\"annotation\">@81\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@81</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"59:15-59:24: @79[2]: _79 = _41\n 59:15-59:28: @79[3]: _78 = Gt(move _79, const 2_i32)\n 59:15-59:28: @79[5]: FakeRead(ForMatchedPlace, _78)\"><span class=\"annotation\">@79\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@79</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:12-60:21: @84[5]: _84 = _41\n 60:12-60:25: @84[6]: _83 = Lt(move _84, const 1_i32)\"><span class=\"annotation\">@82,84\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@82,84</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:29-60:38: @91[2]: _86 = _41\n-60:29-60:42: @91[3]: _85 = Gt(move _86, const 5_i32)\"><span class=\"annotation\">@91\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@91</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:46-60:55: @87[2]: _88 = _41\n-60:46-60:60: @87[3]: _87 = Ne(move _88, const 9_i32)\"><span class=\"annotation\">@87\u298a</span>countdown != 9<span class=\"annotation\">\u2989@87</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\"><span class=\"annotation\">@93,95\u298a</span>{</span></span>\n+60:29-60:42: @91[3]: _85 = Gt(move _86, const 5_i32)\"><span class=\"annotation\">@91\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@91</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:42-60:42: @89.Goto: goto -&gt; bb92\"><span class=\"annotation\">@89\u298a</span>\u2038<span class=\"annotation\">\u2989@89</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:42-60:42: @90.Goto: goto -&gt; bb92\"><span class=\"annotation\">@90\u298a</span>\u2038<span class=\"annotation\">\u2989@90</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:46-60:55: @87[2]: _88 = _41\n+60:46-60:60: @87[3]: _87 = Ne(move _88, const 9_i32)\"><span class=\"annotation\">@87\u298a</span>countdown != 9<span class=\"annotation\">\u2989@87</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:60-60:60: @85.Goto: goto -&gt; bb88\"><span class=\"annotation\">@85\u298a</span>\u2038<span class=\"annotation\">\u2989@85</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:60-60:60: @86.Goto: goto -&gt; bb88\"><span class=\"annotation\">@86\u298a</span>\u2038<span class=\"annotation\">\u2989@86</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n+60:61-62:10: @95[1]: _80 = const ()\n+62:10-62:10: @95.Goto: goto -&gt; bb96\"><span class=\"annotation\">@93,95\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\">            countdown = 0;</span></span>\n+60:61-62:10: @95[1]: _80 = const ()\n+62:10-62:10: @95.Goto: goto -&gt; bb96\">            countdown = 0;</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\">        }<span class=\"annotation\">\u2989@93,95</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"63:9-63:23: @96[2]: _89 = CheckedSub(_41, const 5_i32)\"><span class=\"annotation\">@96\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@96</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+60:61-62:10: @95[1]: _80 = const ()\n+62:10-62:10: @95.Goto: goto -&gt; bb96\">        }<span class=\"annotation\">\u2989@93,95</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"62:10-62:10: @94.Goto: goto -&gt; bb96\"><span class=\"annotation\">@94\u298a</span>\u2038<span class=\"annotation\">\u2989@94</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"63:9-63:23: @97[0]: _41 = move (_89.0: i32)\"><span class=\"annotation\">@97\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@97</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"65:9-65:15: @83[0]: _0 = const ()\"><span class=\"annotation\">@83\u298a</span>return<span class=\"annotation\">\u2989@83</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"65:9-65:15: @83[0]: _0 = const ()\"><span class=\"annotation\">@83\u298a</span>return<span class=\"annotation\">\u2989@83</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:2-67:2: @102.Return: return\"><span class=\"annotation\">@102\u298a</span>\u2038<span class=\"annotation\">\u2989@102</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"67:2-67:2: @101.Goto: goto -&gt; bb102\"><span class=\"annotation\">@101\u298a</span>\u2038<span class=\"annotation\">\u2989@101</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:2-67:2: @102.Return: return\"><span class=\"annotation\">@102\u298a</span>\u2038<span class=\"annotation\">\u2989@102</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "5c49ec1970756e69400cda054bad5251bc86830e", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.while/while.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.while%2Fwhile.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.while%2Fwhile.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.while%2Fwhile.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,71 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>while.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:15-2:16: @0[1]: _1 = const 9_i32\n+2:9-2:12: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>num = 9<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"3:11-3:14: @2[2]: _4 = _1\n+3:11-3:20: @2[3]: _3 = Ge(move _4, const 10_i32)\n+3:11-3:20: @2[5]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@1,2\u298a</span>num &gt;= 10<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"3:21-4:6: @5[0]: _2 = const ()\"><span class=\"annotation\">@3,5\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"3:21-4:6: @5[0]: _2 = const ()\">    }<span class=\"annotation\">\u2989@3,5</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:6-4:6: @5.Goto: goto -&gt; bb1\"><span class=\"annotation\">@3,5\u298a</span>\u2038<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"5:2-5:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "be674dc7d38c7d53db4d581b45b1755ed824155e", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.while_early_return/while_early_return.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.while_early_return%2Fwhile_early_return.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.while_early_return%2Fwhile_early_return.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.while_early_return%2Fwhile_early_return.main.-------.InstrumentCoverage.0.html?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -62,12 +62,10 @@\n <div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:25-5:27: @0[1]: _1 = const 10_i32\n 5:9-5:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n 7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n-7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>while</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n-7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n-7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\">        countdown</span></span>\n+7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n 7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n 7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\">            &gt;</span></span>\n@@ -104,16 +102,16 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                else</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:21-26:27: @10[0]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@10\u298a</span>Err(1)<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:18-27:18: @11.Goto: goto -&gt; bb13\"><span class=\"annotation\">@9,11\u298a</span>\u2038<span class=\"annotation\">\u2989@9,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\"><span class=\"annotation\">@7\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\">            -=</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\">        1<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @12[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@12\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @12[0]: _1 = move (_13.0: i32)\">            -=</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @12[0]: _1 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:8-35:10: @4[4]: _15 = ()\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:8-35:10: @4[4]: _15 = ()\n 35:5-35:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\"><span class=\"annotation\">@4\u298a</span>Ok(())<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:2-36:2: @14.Return: return\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"36:2-36:2: @13.Goto: goto -&gt; bb14\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:2-36:2: @14.Return: return\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "bb6219e851c8a80e5b501599fec4b88098519aec", "filename": "src/test/run-make-fulldeps/coverage/lazy_boolean.rs", "status": "modified", "additions": 32, "deletions": 14, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Flazy_boolean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Flazy_boolean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Flazy_boolean.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -26,18 +26,36 @@ fn main() {\n         ||\n             b < c\n     ;\n-    let\n-        somebool\n-        =\n-            a < b\n-        &&\n-            b < c\n-    ;\n-    let\n-        somebool\n-        =\n-            b < a\n-        &&\n-            b < c\n-    ;\n+    let somebool = a < b && b < c;\n+    let somebool = b < a && b < c;\n+\n+    if\n+        !\n+        is_true\n+    {\n+        a = 2\n+        ;\n+    }\n+\n+    if\n+        is_true\n+    {\n+        b = 30\n+        ;\n+    }\n+    else\n+    {\n+        c = 400\n+        ;\n+    }\n+\n+    if !is_true {\n+        a = 2;\n+    }\n+\n+    if is_true {\n+        b = 30;\n+    } else {\n+        c = 400;\n+    }\n }"}, {"sha": "a9df7e0fab75f021c388598795ba791ad282114d", "filename": "src/test/run-make-fulldeps/coverage/loops_and_branches.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Floops_and_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Floops_and_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Floops_and_branches.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,36 @@\n+#![allow(unused_assignments)]\n+\n+// This test confirms an earlier problem was resolved, supporting the MIR graph generated by the\n+// structure of this `fmt` function.\n+\n+struct DebugTest;\n+\n+impl std::fmt::Debug for DebugTest {\n+    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {\n+        if true {\n+            if false {\n+                while true {\n+                }\n+            }\n+            write!(f, \"error\")?;\n+        } else {\n+        }\n+        Ok(())\n+    }\n+}\n+\n+fn main() {\n+    let debug_test = DebugTest;\n+    println!(\"{:?}\", debug_test);\n+}\n+\n+/*\n+\n+This is the error message generated, before the issue was fixed:\n+\n+error: internal compiler error: compiler/rustc_mir/src/transform/coverage/mod.rs:374:42:\n+Error processing: DefId(0:6 ~ bug_incomplete_cov_graph_traversal_simplified[317d]::{impl#0}::fmt):\n+Error { message: \"`TraverseCoverageGraphWithLoops` missed some `BasicCoverageBlock`s:\n+[bcb6, bcb7, bcb9]\" }\n+\n+*/"}, {"sha": "4c7c784279650463b163f0897e5baf62cb509e41", "filename": "src/test/run-make-fulldeps/coverage/nested_loops.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fnested_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fnested_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fnested_loops.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,25 @@\n+fn main() {\n+    let is_true = std::env::args().len() == 1;\n+    let mut countdown = 10;\n+\n+    'outer: while countdown > 0 {\n+        let mut a = 100;\n+        let mut b = 100;\n+        for _ in 0..50 {\n+            if a < 30 {\n+                break;\n+            }\n+            a -= 5;\n+            b -= 5;\n+            if b < 90 {\n+                a -= 10;\n+                if is_true {\n+                    break 'outer;\n+                } else {\n+                    a -= 2;\n+                }\n+            }\n+        }\n+        countdown -= 1;\n+    }\n+}"}, {"sha": "334fb3364ccc433796ffee2276e7568024e4414c", "filename": "src/test/run-make-fulldeps/coverage/partial_eq_counter_without_region.rs", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fpartial_eq_counter_without_region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fpartial_eq_counter_without_region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fpartial_eq_counter_without_region.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,99 @@\n+// This test confirms an earlier problem was resolved, supporting the MIR graph generated by the\n+// structure of this test.\n+\n+#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+pub struct Version {\n+    major: usize,\n+    minor: usize,\n+    patch: usize,\n+}\n+\n+impl Version {\n+    pub fn new(major: usize, minor: usize, patch: usize) -> Self {\n+        Self {\n+            major,\n+            minor,\n+            patch,\n+        }\n+    }\n+}\n+\n+fn main() {\n+    let version_3_2_1 = Version::new(3, 2, 1);\n+    let version_3_3_0 = Version::new(3, 3, 0);\n+\n+    println!(\"{:?} < {:?} = {}\", version_3_2_1, version_3_3_0, version_3_2_1 < version_3_3_0);\n+}\n+\n+/*\n+\n+This test verifies a bug was fixed that otherwise generated this error:\n+\n+thread 'rustc' panicked at 'No counters provided the source_hash for function:\n+    Instance {\n+        def: Item(WithOptConstParam {\n+            did: DefId(0:101 ~ autocfg[c44a]::version::{impl#2}::partial_cmp),\n+            const_param_did: None\n+        }),\n+        substs: []\n+    }'\n+The `PartialOrd` derived by `Version` happened to generate a MIR that generated coverage\n+without a code region associated with any `Counter`. Code regions were associated with at least\n+one expression, which is allowed, but the `function_source_hash` was only passed to the codegen\n+(coverage mapgen) phase from a `Counter`s code region. A new method was added to pass the\n+`function_source_hash` without a code region, if necessary.\n+\n+*/\n+\n+// FIXME(richkadel): It may be worth investigating why the coverage report for this test produces\n+// the following results:\n+\n+/*\n+\n+1. Why are their two counts below different characters (first and last) of `PartialOrd`, on line 17?\n+\n+2. Line 17 is counted twice, but the `::lt` instance shows a line count of 1? Is there a missing\n+   line count with a different instance? Or was it really only called once?\n+\n+3. Line 20 shows another line count (of 1) for a line within a `struct` declaration (on only one of\n+   its 3 fields). I doubt the specific field (`minor`) is relevant, but rather I suspect there's a\n+   problem computing the file position here, for some reason.\n+\n+<snip>\n+   16|       |\n+   17|      2|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+                                                    ^1       ^1\n+------------------\n+|Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::gt\n+------------------\n+|Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::le\n+------------------\n+|Unexecuted instantiation: <partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::ge\n+------------------\n+|<partial_eq_counter_without_region::Version as core::cmp::PartialOrd>::lt:\n+|  17|      1|#[derive(Clone, Debug, PartialEq, Eq, PartialOrd, Ord)]\n+------------------\n+   18|       |pub struct Version {\n+   19|       |    major: usize,\n+   20|      1|    minor: usize,\n+   21|       |    patch: usize,\n+   22|       |}\n+   23|       |\n+   24|       |impl Version {\n+   25|       |    pub fn new(major: usize, minor: usize, patch: usize) -> Self {\n+   26|      2|        Version {\n+   27|      2|            major,\n+   28|      2|            minor,\n+   29|      2|            patch,\n+   30|      2|        }\n+   31|      2|    }\n+   32|       |}\n+   33|       |\n+   34|      1|fn main() {\n+   35|      1|    let version_3_2_1 = Version::new(3, 2, 1);\n+   36|      1|    let version_3_3_0 = Version::new(3, 3, 0);\n+   37|      1|\n+   38|      1|    println!(\"{:?} < {:?} = {}\", version_3_2_1, version_3_3_0, version_3_2_1 < version\n+_3_3_0);\n+   39|      1|}\n+*/"}, {"sha": "cef99027aaa4fa30f1e8a416bea74372d83926bf", "filename": "src/test/run-make-fulldeps/coverage/tight_infinite_loop.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Ftight_infinite_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Ftight_infinite_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Ftight_infinite_loop.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,5 @@\n+fn main() {\n+    if false {\n+        loop {}\n+    }\n+}"}, {"sha": "781b90b35663ec50bc6ae8189f329f333f39ca00", "filename": "src/test/run-make-fulldeps/coverage/while.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fwhile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7747cc772f4b4c30ede3616678d7a3bc2c89bf7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fwhile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fwhile.rs?ref=c7747cc772f4b4c30ede3616678d7a3bc2c89bf7", "patch": "@@ -0,0 +1,5 @@\n+fn main() {\n+    let num = 9;\n+    while num >= 10 {\n+    }\n+}"}]}