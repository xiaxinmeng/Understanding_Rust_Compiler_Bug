{"sha": "d1b5231aa75d6c25efc839454331d3c9fb09ffb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxYjUyMzFhYTc1ZDZjMjVlZmM4Mzk0NTQzMzFkM2M5ZmIwOWZmYjM=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-09-10T15:46:30Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-09-11T09:27:12Z"}, "message": "Fix const eval of ZST index operations to make the static assertion work", "tree": {"sha": "8bfa3313997d78526da9d9575f3c6bc555b68972", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bfa3313997d78526da9d9575f3c6bc555b68972"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1b5231aa75d6c25efc839454331d3c9fb09ffb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1b5231aa75d6c25efc839454331d3c9fb09ffb3", "html_url": "https://github.com/rust-lang/rust/commit/d1b5231aa75d6c25efc839454331d3c9fb09ffb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1b5231aa75d6c25efc839454331d3c9fb09ffb3/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24dca6aecaded209d47aba6e60e0b87eae2d49d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/24dca6aecaded209d47aba6e60e0b87eae2d49d6", "html_url": "https://github.com/rust-lang/rust/commit/24dca6aecaded209d47aba6e60e0b87eae2d49d6"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "8bb93d09a2aa2babbb20a14809a839d9f4d29177", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d1b5231aa75d6c25efc839454331d3c9fb09ffb3/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1b5231aa75d6c25efc839454331d3c9fb09ffb3/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=d1b5231aa75d6c25efc839454331d3c9fb09ffb3", "patch": "@@ -340,7 +340,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n \n         let field = field.try_into().unwrap();\n         let field_layout = op.layout.field(self, field)?;\n-        if field_layout.size.bytes() == 0 {\n+        if field_layout.is_zst() {\n             let val = Value::Scalar(Scalar::zst().into());\n             return Ok(OpTy { op: Operand::Immediate(val), layout: field_layout });\n         }\n@@ -397,9 +397,15 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n             Field(field, _) => self.operand_field(base, field.index() as u64)?,\n             Downcast(_, variant) => self.operand_downcast(base, variant)?,\n             Deref => self.deref_operand(base)?.into(),\n-            // The rest should only occur as mplace, we do not use Immediates for types\n-            // allowing such operations.  This matches place_projection forcing an allocation.\n-            Subslice { .. } | ConstantIndex { .. } | Index(_) => {\n+            Subslice { .. } | ConstantIndex { .. } | Index(_) => if base.layout.is_zst() {\n+                OpTy {\n+                    op: Operand::Immediate(Value::Scalar(Scalar::zst().into())),\n+                    // the actual index doesn't matter, so we just pick a convenient one like 0\n+                    layout: base.layout.field(self, 0)?,\n+                }\n+            } else {\n+                // The rest should only occur as mplace, we do not use Immediates for types\n+                // allowing such operations.  This matches place_projection forcing an allocation.\n                 let mplace = base.to_mem_place();\n                 self.mplace_projection(mplace, proj_elem)?.into()\n             }"}, {"sha": "c6deb88d4f1a158fc6c5b61b51e1717d08ec239c", "filename": "src/test/ui/consts/const-eval/zst_operand_eval.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d1b5231aa75d6c25efc839454331d3c9fb09ffb3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fzst_operand_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1b5231aa75d6c25efc839454331d3c9fb09ffb3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fzst_operand_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fzst_operand_eval.rs?ref=d1b5231aa75d6c25efc839454331d3c9fb09ffb3", "patch": "@@ -0,0 +1,5 @@\n+// compile-pass\n+\n+static ASSERT: () = [()][(std::mem::size_of::<u32>() != 4) as usize];\n+\n+fn main() {}"}]}