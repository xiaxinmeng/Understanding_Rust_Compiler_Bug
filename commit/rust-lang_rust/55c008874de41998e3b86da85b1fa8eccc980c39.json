{"sha": "55c008874de41998e3b86da85b1fa8eccc980c39", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1YzAwODg3NGRlNDE5OThlM2I4NmRhODViMWZhOGVjY2M5ODBjMzk=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-05-17T18:20:14Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-05-17T18:20:14Z"}, "message": "Comments only: annotate FIXMEs in back-end and driver", "tree": {"sha": "f326322eb698feb8719a471122ddcd3928fa5116", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f326322eb698feb8719a471122ddcd3928fa5116"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55c008874de41998e3b86da85b1fa8eccc980c39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55c008874de41998e3b86da85b1fa8eccc980c39", "html_url": "https://github.com/rust-lang/rust/commit/55c008874de41998e3b86da85b1fa8eccc980c39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55c008874de41998e3b86da85b1fa8eccc980c39/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db8931c87684993014043592301d4eecc964307d", "url": "https://api.github.com/repos/rust-lang/rust/commits/db8931c87684993014043592301d4eecc964307d", "html_url": "https://github.com/rust-lang/rust/commit/db8931c87684993014043592301d4eecc964307d"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "0de0422ec6f301597b4714a5b8f101f3dc01a9b1", "filename": "src/rustc/back/link.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55c008874de41998e3b86da85b1fa8eccc980c39/src%2Frustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55c008874de41998e3b86da85b1fa8eccc980c39/src%2Frustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fback%2Flink.rs?ref=55c008874de41998e3b86da85b1fa8eccc980c39", "patch": "@@ -89,6 +89,7 @@ mod write {\n         // -Os, etc\n         // FIXME3: Should we expose and use the pass lists used by the opt\n         // tool?\n+        // See #2396\n \n         if opts.optimize != 0u {\n             let fpm = mk_pass_manager();\n@@ -661,6 +662,7 @@ fn link_binary(sess: session,\n \n     // FIXME: At some point we want to rpath our guesses as to where\n     // native libraries might live, based on the addl_lib_search_paths\n+    // #2397\n     cc_args += rpath::get_rpath_flags(sess, output);\n \n     #debug(\"%s link args: %s\", cc_prog, str::connect(cc_args, \" \"));"}, {"sha": "02bb90f2c2af3af018f0606d8c52170ba604df20", "filename": "src/rustc/back/x86_64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55c008874de41998e3b86da85b1fa8eccc980c39/src%2Frustc%2Fback%2Fx86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55c008874de41998e3b86da85b1fa8eccc980c39/src%2Frustc%2Fback%2Fx86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fback%2Fx86_64.rs?ref=55c008874de41998e3b86da85b1fa8eccc980c39", "patch": "@@ -19,7 +19,7 @@ fn get_target_strs(target_os: session::os) -> target_strs::t {\n           }\n \n           session::os_win32 {\n-            // FIXME: Test this. Copied from linux\n+            // FIXME: Test this. Copied from linux (#2398)\n             \"e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-\"+\n                 \"f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-\"+\n                 \"s0:64:64-f80:128:128-n8:16:32:64-S128\""}, {"sha": "e05d635812d1c65a78ea59bd7381dd46a16445d1", "filename": "src/rustc/driver/driver.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/55c008874de41998e3b86da85b1fa8eccc980c39/src%2Frustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55c008874de41998e3b86da85b1fa8eccc980c39/src%2Frustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fdriver%2Fdriver.rs?ref=55c008874de41998e3b86da85b1fa8eccc980c39", "patch": "@@ -79,6 +79,7 @@ fn build_configuration(sess: session, argv0: str, input: input) ->\n fn parse_cfgspecs(cfgspecs: [str]) -> ast::crate_cfg {\n     // FIXME: It would be nice to use the parser to parse all varieties of\n     // meta_item here. At the moment we just support the meta_word variant.\n+    // #2399\n     let mut words = [];\n     for cfgspecs.each {|s| words += [attr::mk_word_item(s)]; }\n     ret words;\n@@ -99,6 +100,7 @@ fn parse_input(sess: session, cfg: ast::crate_cfg, input: input)\n       }\n       str_input(src) {\n         // FIXME: Don't really want to box the source string\n+        // #2319\n         parse::parse_crate_from_source_str(\n             anon_src(), @src, cfg, sess.parse_sess)\n       }\n@@ -369,7 +371,7 @@ fn host_triple() -> str {\n     // normalize all ix86 architectures to i386.\n     // FIXME: Instead of grabbing the host triple we really should be\n     // grabbing (at compile time) the target triple that this rustc is\n-    // built with and calling that (at runtime) the host triple.\n+    // built with and calling that (at runtime) the host triple. (#2400)\n     let ht = #env(\"CFG_HOST_TRIPLE\");\n     ret if ht != \"\" {\n             ht\n@@ -654,7 +656,7 @@ fn build_output_filenames(input: input,\n             // FIXME: We might want to warn here; we're actually not going to\n             // respect the user's choice of library name when it comes time to\n             // link, we'll be linking to lib<basename>-<hash>-<version>.so no\n-            // matter what.\n+            // matter what. (#2401)\n         }\n \n         if odir != none {"}]}