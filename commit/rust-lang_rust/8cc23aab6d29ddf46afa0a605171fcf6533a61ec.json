{"sha": "8cc23aab6d29ddf46afa0a605171fcf6533a61ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjYzIzYWFiNmQyOWRkZjQ2YWZhMGE2MDUxNzFmY2Y2NTMzYTYxZWM=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-02-24T08:07:05Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-29T02:00:50Z"}, "message": "expose float::pow_with_uint.", "tree": {"sha": "39f1a523976318dab4c7efa7cc70ab392932ac38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39f1a523976318dab4c7efa7cc70ab392932ac38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cc23aab6d29ddf46afa0a605171fcf6533a61ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cc23aab6d29ddf46afa0a605171fcf6533a61ec", "html_url": "https://github.com/rust-lang/rust/commit/8cc23aab6d29ddf46afa0a605171fcf6533a61ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cc23aab6d29ddf46afa0a605171fcf6533a61ec/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6865df261197e37bf28d70987dc9c0c1de8168bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/6865df261197e37bf28d70987dc9c0c1de8168bc", "html_url": "https://github.com/rust-lang/rust/commit/6865df261197e37bf28d70987dc9c0c1de8168bc"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "6f23349d2a99736b889db4ce78b23185ace34d1c", "filename": "src/libcore/float.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8cc23aab6d29ddf46afa0a605171fcf6533a61ec/src%2Flibcore%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cc23aab6d29ddf46afa0a605171fcf6533a61ec/src%2Flibcore%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffloat.rs?ref=8cc23aab6d29ddf46afa0a605171fcf6533a61ec", "patch": "@@ -19,6 +19,7 @@ export mul_add, fmax, fmin, nextafter, frexp, hypot, ldexp;\n export lgamma, ln, log_radix, ln1p, log10, log2, ilog_radix;\n export modf, pow, round, sin, sinh, sqrt, tan, tanh, tgamma, trunc;\n export signbit;\n+export pow_with_uint;\n \n // export when m_float == c_double\n \n@@ -55,7 +56,7 @@ fn to_str_common(num: float, digits: uint, exact: bool) -> str {\n     if (frac < epsilon && !exact) || digits == 0u { ret accum; }\n     accum += \".\";\n     let i = digits;\n-    let epsilon = 1. / pow_uint_to_uint_as_float(10u, i);\n+    let epsilon = 1. / pow_with_uint(10u, i);\n     while i > 0u && (frac >= epsilon || exact) {\n         frac *= 10.0;\n         epsilon *= 10.0;\n@@ -228,7 +229,7 @@ fn from_str(num: str) -> option<float> {\n              }\n              pos = char_range.next;\n           }\n-          let multiplier = pow_uint_to_uint_as_float(10u, exponent);\n+          let multiplier = pow_with_uint(10u, exponent);\n               //Note: not [int::pow], otherwise, we'll quickly\n               //end up with a nice overflow\n           if neg_exponent {\n@@ -256,7 +257,7 @@ fn from_str(num: str) -> option<float> {\n  */\n \n /*\n-Function: pow_uint_to_uint_as_float\n+Function: pow_with_uint\n \n Compute the exponentiation of an integer by another integer as a float.\n \n@@ -267,16 +268,16 @@ pow - The exponent.\n Returns:\n <NaN> of both `x` and `pow` are `0u`, otherwise `x^pow`.\n */\n-fn pow_uint_to_uint_as_float(x: uint, pow: uint) -> float {\n-   if x == 0u {\n+fn pow_with_uint(base: uint, pow: uint) -> float {\n+   if base == 0u {\n       if pow == 0u {\n         ret NaN;\n       }\n        ret 0.;\n    }\n    let my_pow     = pow;\n    let total      = 1f;\n-   let multiplier = x as float;\n+   let multiplier = base as float;\n    while (my_pow > 0u) {\n      if my_pow % 2u == 1u {\n        total = total * multiplier;"}]}