{"sha": "5299d8a191246cf55c8ead7b8be68c8aeca78d35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyOTlkOGExOTEyNDZjZjU1YzhlYWQ3YjhiZTY4YzhhZWNhNzhkMzU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-18T13:28:14Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-24T19:31:54Z"}, "message": "parser: extract `ban_unexpected_or_or`.", "tree": {"sha": "a8294531d68f55d561e7c1cc347a4bf0204e82b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8294531d68f55d561e7c1cc347a4bf0204e82b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5299d8a191246cf55c8ead7b8be68c8aeca78d35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5299d8a191246cf55c8ead7b8be68c8aeca78d35", "html_url": "https://github.com/rust-lang/rust/commit/5299d8a191246cf55c8ead7b8be68c8aeca78d35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5299d8a191246cf55c8ead7b8be68c8aeca78d35/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ade61a4f1515d4a18f38dacdbdb592bfd384a84", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ade61a4f1515d4a18f38dacdbdb592bfd384a84", "html_url": "https://github.com/rust-lang/rust/commit/5ade61a4f1515d4a18f38dacdbdb592bfd384a84"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "4cda14907e46c07c82b8f25a9dba7c29cb301052", "filename": "src/libsyntax/parse/parser/pat.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5299d8a191246cf55c8ead7b8be68c8aeca78d35/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5299d8a191246cf55c8ead7b8be68c8aeca78d35/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs?ref=5299d8a191246cf55c8ead7b8be68c8aeca78d35", "patch": "@@ -31,14 +31,7 @@ impl<'a> Parser<'a> {\n             pats.push(self.parse_top_level_pat()?);\n \n             if self.token == token::OrOr {\n-                self.struct_span_err(self.token.span, \"unexpected token `||` after pattern\")\n-                    .span_suggestion(\n-                        self.token.span,\n-                        \"use a single `|` to specify multiple patterns\",\n-                        \"|\".to_owned(),\n-                        Applicability::MachineApplicable\n-                    )\n-                    .emit();\n+                self.ban_unexpected_or_or();\n                 self.bump();\n             } else if self.eat(&token::BinOp(token::Or)) {\n                 // This is a No-op. Continue the loop to parse the next\n@@ -49,6 +42,17 @@ impl<'a> Parser<'a> {\n         };\n     }\n \n+    fn ban_unexpected_or_or(&mut self) {\n+        self.struct_span_err(self.token.span, \"unexpected token `||` after pattern\")\n+            .span_suggestion(\n+                self.token.span,\n+                \"use a single `|` to specify multiple patterns\",\n+                \"|\".to_owned(),\n+                Applicability::MachineApplicable\n+            )\n+            .emit();\n+    }\n+\n     /// A wrapper around `parse_pat` with some special error handling for the\n     /// \"top-level\" patterns in a match arm, `for` loop, `let`, &c. (in contrast\n     /// to subpatterns within such).\n@@ -116,9 +120,7 @@ impl<'a> Parser<'a> {\n         let mut pats = vec![first_pat];\n \n         while self.eat(&token::BinOp(token::Or)) {\n-            pats.push(self.parse_pat_with_range_pat(\n-                true, expected\n-            )?);\n+            pats.push(self.parse_pat_with_range_pat(true, expected)?);\n         }\n \n         let or_pattern_span = lo.to(self.prev_span);"}]}