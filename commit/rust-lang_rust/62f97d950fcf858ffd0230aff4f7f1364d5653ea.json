{"sha": "62f97d950fcf858ffd0230aff4f7f1364d5653ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyZjk3ZDk1MGZjZjg1OGZmZDAyMzBhZmY0ZjdmMTM2NGQ1NjUzZWE=", "commit": {"author": {"name": "Iago-lito", "email": "iago-lito@etak", "date": "2021-04-15T10:19:24Z"}, "committer": {"name": "Iago-lito", "email": "iago-lito@etak", "date": "2021-06-09T15:28:31Z"}, "message": "NonZero checked_abs.", "tree": {"sha": "3b346304bbe2331ab7b75f638a7efc1362b91803", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b346304bbe2331ab7b75f638a7efc1362b91803"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62f97d950fcf858ffd0230aff4f7f1364d5653ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62f97d950fcf858ffd0230aff4f7f1364d5653ea", "html_url": "https://github.com/rust-lang/rust/commit/62f97d950fcf858ffd0230aff4f7f1364d5653ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62f97d950fcf858ffd0230aff4f7f1364d5653ea/comments", "author": {"login": "iago-lito", "id": 10091387, "node_id": "MDQ6VXNlcjEwMDkxMzg3", "avatar_url": "https://avatars.githubusercontent.com/u/10091387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iago-lito", "html_url": "https://github.com/iago-lito", "followers_url": "https://api.github.com/users/iago-lito/followers", "following_url": "https://api.github.com/users/iago-lito/following{/other_user}", "gists_url": "https://api.github.com/users/iago-lito/gists{/gist_id}", "starred_url": "https://api.github.com/users/iago-lito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iago-lito/subscriptions", "organizations_url": "https://api.github.com/users/iago-lito/orgs", "repos_url": "https://api.github.com/users/iago-lito/repos", "events_url": "https://api.github.com/users/iago-lito/events{/privacy}", "received_events_url": "https://api.github.com/users/iago-lito/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iago-lito", "id": 10091387, "node_id": "MDQ6VXNlcjEwMDkxMzg3", "avatar_url": "https://avatars.githubusercontent.com/u/10091387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iago-lito", "html_url": "https://github.com/iago-lito", "followers_url": "https://api.github.com/users/iago-lito/followers", "following_url": "https://api.github.com/users/iago-lito/following{/other_user}", "gists_url": "https://api.github.com/users/iago-lito/gists{/gist_id}", "starred_url": "https://api.github.com/users/iago-lito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iago-lito/subscriptions", "organizations_url": "https://api.github.com/users/iago-lito/orgs", "repos_url": "https://api.github.com/users/iago-lito/repos", "events_url": "https://api.github.com/users/iago-lito/events{/privacy}", "received_events_url": "https://api.github.com/users/iago-lito/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a433b06347bd9d6d966c302bf89c2cf6687861cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a433b06347bd9d6d966c302bf89c2cf6687861cc", "html_url": "https://github.com/rust-lang/rust/commit/a433b06347bd9d6d966c302bf89c2cf6687861cc"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "a137e853782eec2a8ce9c0fad0c20b0084168e3b", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/62f97d950fcf858ffd0230aff4f7f1364d5653ea/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62f97d950fcf858ffd0230aff4f7f1364d5653ea/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=62f97d950fcf858ffd0230aff4f7f1364d5653ea", "patch": "@@ -460,6 +460,39 @@ macro_rules! nonzero_signed_operations {\n                     // SAFETY: This cannot overflow to zero.\n                     unsafe { $Ty::new_unchecked(self.get().abs()) }\n                 }\n+\n+                /// Checked absolute value.\n+                /// Returns [`None`] if\n+                #[doc = concat!(\"`self == \", stringify!($Int), \"::MIN`.\")]\n+                ///\n+                /// # Example\n+                ///\n+                /// ```\n+                /// #![feature(nonzero_ops)]\n+                /// # #![feature(try_trait)]\n+                #[doc = concat!(\"# use std::num::\", stringify!($Ty), \";\")]\n+                ///\n+                /// # fn main() -> Result<(), std::option::NoneError> {\n+                #[doc = concat!(\"let pos = \", stringify!($Ty), \"::new(1)?;\")]\n+                #[doc = concat!(\"let neg = \", stringify!($Ty), \"::new(-1)?;\")]\n+                #[doc = concat!(\"let min = \", stringify!($Ty), \"::new(\",\n+                                stringify!($Int), \"::MIN)?;\")]\n+                ///\n+                /// assert_eq!(Some(pos), neg.checked_abs());\n+                /// assert_eq!(None, min.checked_abs());\n+                /// # Ok(())\n+                /// # }\n+                /// ```\n+                #[unstable(feature = \"nonzero_ops\", issue = \"84186\")]\n+                #[inline]\n+                pub const fn checked_abs(self) -> Option<$Ty> {\n+                    if let Some(nz) = self.get().checked_abs() {\n+                        // SAFETY: absolute value of nonzero cannot yield zero values.\n+                        Some(unsafe { $Ty::new_unchecked(nz) })\n+                    } else {\n+                        None\n+                    }\n+                }\n             }\n         )+\n     }"}]}