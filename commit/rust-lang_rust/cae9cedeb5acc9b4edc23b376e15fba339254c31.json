{"sha": "cae9cedeb5acc9b4edc23b376e15fba339254c31", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZTljZWRlYjVhY2M5YjRlZGMyM2IzNzZlMTVmYmEzMzkyNTRjMzE=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2017-09-29T16:36:03Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2017-09-29T16:36:03Z"}, "message": "Fix regression with `format!`", "tree": {"sha": "8e7a1420c96dccc022fc5285411acd80d9114eca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e7a1420c96dccc022fc5285411acd80d9114eca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cae9cedeb5acc9b4edc23b376e15fba339254c31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cae9cedeb5acc9b4edc23b376e15fba339254c31", "html_url": "https://github.com/rust-lang/rust/commit/cae9cedeb5acc9b4edc23b376e15fba339254c31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cae9cedeb5acc9b4edc23b376e15fba339254c31/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc76f397c6464d5946deaa8f658605a1c2f72ac9", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc76f397c6464d5946deaa8f658605a1c2f72ac9", "html_url": "https://github.com/rust-lang/rust/commit/bc76f397c6464d5946deaa8f658605a1c2f72ac9"}], "stats": {"total": 41, "additions": 28, "deletions": 13}, "files": [{"sha": "26b500d554635ff57ec8230adfb9f895807a8f26", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/cae9cedeb5acc9b4edc23b376e15fba339254c31/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cae9cedeb5acc9b4edc23b376e15fba339254c31/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=cae9cedeb5acc9b4edc23b376e15fba339254c31", "patch": "@@ -50,8 +50,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                         let Some(fun_def_id) = opt_def_id(resolve_node(cx, qpath, fun.hir_id)),\n                         match_def_path(cx.tcx, fun_def_id, &paths::FMT_ARGUMENTS_NEWV1),\n                         // ensure the format string is `\"{..}\"` with only one argument and no text\n-                        check_static_str(cx, &args[0]),\n+                        check_static_str(&args[0]),\n                         // ensure the format argument is `{}` ie. Display with no fancy option\n+                        // and that the argument is a string\n                         check_arg_is_display(cx, &args[1])\n                     ], {\n                         span_lint(cx, USELESS_FORMAT, span, \"useless use of `format!`\");\n@@ -96,17 +97,19 @@ pub fn get_argument_fmtstr_parts<'a, 'b>(cx: &LateContext<'a, 'b>, expr: &'a Exp\n     None\n }\n \n-/// Checks if the expressions matches\n-/// ```rust, ignore\n-/// { static __STATIC_FMTSTR: &'static[&'static str] = &[\"a\", \"b\", c];\n-/// __STATIC_FMTSTR }\n-/// ```\n-fn check_static_str(cx: &LateContext, expr: &Expr) -> bool {\n-    if let Some(expr) = get_argument_fmtstr_parts(cx, expr) {\n-        expr.len() == 1 && expr[0].is_empty()\n-    } else {\n-        false\n-    }\n+/// Checks if the expressions matches `&[\"\"]`\n+fn check_static_str(expr: &Expr) -> bool {\n+    if_let_chain! {[\n+        let ExprAddrOf(_, ref expr) = expr.node, // &[\"\"]\n+        let ExprArray(ref exprs) = expr.node, // [\"\"]\n+        exprs.len() == 1,\n+        let ExprLit(ref lit) = exprs[0].node,\n+        let LitKind::Str(ref lit, _) = lit.node,\n+    ], {\n+        return lit.as_str().is_empty();\n+    }}\n+\n+    false\n }\n \n /// Checks if the expressions matches"}, {"sha": "d2c9f393831278bfe5450877d83b74728a6190b0", "filename": "tests/ui/format.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cae9cedeb5acc9b4edc23b376e15fba339254c31/tests%2Fui%2Fformat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cae9cedeb5acc9b4edc23b376e15fba339254c31/tests%2Fui%2Fformat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.stderr?ref=cae9cedeb5acc9b4edc23b376e15fba339254c31", "patch": "@@ -6,5 +6,17 @@ error: useless use of `format!`\n   |\n   = note: `-D useless-format` implied by `-D warnings`\n \n-error: aborting due to previous error\n+error: useless use of `format!`\n+ --> $DIR/format.rs:8:5\n+  |\n+8 |     format!(\"{}\", \"foo\");\n+  |     ^^^^^^^^^^^^^^^^^^^^^\n+\n+error: useless use of `format!`\n+  --> $DIR/format.rs:15:5\n+   |\n+15 |     format!(\"{}\", arg);\n+   |     ^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n "}]}