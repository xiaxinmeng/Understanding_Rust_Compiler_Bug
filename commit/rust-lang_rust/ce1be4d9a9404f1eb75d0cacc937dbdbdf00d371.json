{"sha": "ce1be4d9a9404f1eb75d0cacc937dbdbdf00d371", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlMWJlNGQ5YTk0MDRmMWViNzVkMGNhY2M5MzdkYmRiZGYwMGQzNzE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-30T01:10:23Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-30T01:30:36Z"}, "message": "Cleanup the existing platform-specific ignored tests", "tree": {"sha": "23939709d4cec7aac135421390637e81c8af8245", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23939709d4cec7aac135421390637e81c8af8245"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce1be4d9a9404f1eb75d0cacc937dbdbdf00d371", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce1be4d9a9404f1eb75d0cacc937dbdbdf00d371", "html_url": "https://github.com/rust-lang/rust/commit/ce1be4d9a9404f1eb75d0cacc937dbdbdf00d371", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce1be4d9a9404f1eb75d0cacc937dbdbdf00d371/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7ebe23ae185991b0fee05b32fbb3e29b89a41bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7ebe23ae185991b0fee05b32fbb3e29b89a41bf", "html_url": "https://github.com/rust-lang/rust/commit/f7ebe23ae185991b0fee05b32fbb3e29b89a41bf"}], "stats": {"total": 66, "additions": 11, "deletions": 55}, "files": [{"sha": "3eafa96b6510f90688ec4315416983e095e9c553", "filename": "src/test/stdtest/io.rs", "status": "modified", "additions": 6, "deletions": 24, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ce1be4d9a9404f1eb75d0cacc937dbdbdf00d371/src%2Ftest%2Fstdtest%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce1be4d9a9404f1eb75d0cacc937dbdbdf00d371/src%2Ftest%2Fstdtest%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fio.rs?ref=ce1be4d9a9404f1eb75d0cacc937dbdbdf00d371", "patch": "@@ -4,9 +4,9 @@ import std::io;\n import std::str;\n import std::result;\n \n-#[cfg(target_os = \"linux\")]\n-#[cfg(target_os = \"win32\")]\n+// FIXME (726)\n #[test]\n+#[ignore(cfg(target_os = \"macos\"))]\n fn test_simple() {\n     let tmpfile: str = \"test/run-pass/lib-io-test-simple.tmp\";\n     log tmpfile;\n@@ -23,12 +23,6 @@ fn test_simple() {\n     assert (str::eq(frood, frood2));\n }\n \n-// FIXME (726)\n-#[cfg(target_os = \"macos\")]\n-#[test]\n-#[ignore]\n-fn test_simple() { }\n-\n #[test]\n fn file_reader_not_exist() {\n     alt io::file_reader(\"not a file\") {\n@@ -39,9 +33,9 @@ fn file_reader_not_exist() {\n     }\n }\n \n-#[cfg(target_os = \"linux\")]\n-#[cfg(target_os = \"win32\")]\n #[test]\n+// FIXME (726)\n+#[ignore(cfg(target_os = \"macos\"))]\n fn file_buf_writer_bad_name() {\n     alt io::file_buf_writer(\"/?\", []) {\n       result::err(e) {\n@@ -51,15 +45,9 @@ fn file_buf_writer_bad_name() {\n     }\n }\n \n-// FIXME (726)\n-#[cfg(target_os = \"macos\")]\n-#[test]\n-#[ignore]\n-fn file_buf_writer_bad_name() { }\n-\n-#[cfg(target_os = \"linux\")]\n-#[cfg(target_os = \"win32\")]\n #[test]\n+// FIXME (726)\n+#[ignore(cfg(target_os = \"macos\"))]\n fn buffered_file_buf_writer_bad_name() {\n     alt io::buffered_file_buf_writer(\"/?\") {\n       result::err(e) {\n@@ -68,9 +56,3 @@ fn buffered_file_buf_writer_bad_name() {\n       result::ok(_) { fail; }\n     }\n }\n-\n-// FIXME (726)\n-#[cfg(target_os = \"macos\")]\n-#[test]\n-#[ignore]\n-fn buffered_file_buf_writer_bad_name() { }"}, {"sha": "187cab35ee0904660fccd9f5b672eeca79dae7b2", "filename": "src/test/stdtest/run.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ce1be4d9a9404f1eb75d0cacc937dbdbdf00d371/src%2Ftest%2Fstdtest%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce1be4d9a9404f1eb75d0cacc937dbdbdf00d371/src%2Ftest%2Fstdtest%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Frun.rs?ref=ce1be4d9a9404f1eb75d0cacc937dbdbdf00d371", "patch": "@@ -7,21 +7,13 @@ import std::str;\n import std::vec;\n \n // Regression test for memory leaks\n-#[cfg(target_os = \"linux\")]\n-#[cfg(target_os = \"macos\")]\n-#[test]\n+#[ignore(cfg(target_os = \"win32\"))] // FIXME\n fn test_leaks() {\n     run::run_program(\"echo\", []);\n     run::start_program(\"echo\", []);\n     run::program_output(\"echo\", []);\n }\n \n-// FIXME\n-#[cfg(target_os = \"win32\")]\n-#[test]\n-#[ignore]\n-fn test_leaks() { }\n-\n #[test]\n fn test_pipes() unsafe {\n     let pipe_in = os::pipe();"}, {"sha": "4e968e57942b0fd54ba2bb64922683311603396d", "filename": "src/test/stdtest/task.rs", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ce1be4d9a9404f1eb75d0cacc937dbdbdf00d371/src%2Ftest%2Fstdtest%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce1be4d9a9404f1eb75d0cacc937dbdbdf00d371/src%2Ftest%2Fstdtest%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Ftask.rs?ref=ce1be4d9a9404f1eb75d0cacc937dbdbdf00d371", "patch": "@@ -7,13 +7,7 @@ fn test_sleep() { task::sleep(1000000u); }\n \n // FIXME: Leaks on windows\n #[test]\n-#[cfg(target_os = \"win32\")]\n-#[ignore]\n-fn test_unsupervise() { }\n-\n-#[test]\n-#[cfg(target_os = \"macos\")]\n-#[cfg(target_os = \"linux\")]\n+#[ignore(cfg(target_os = \"win32\"))]\n fn test_unsupervise() {\n     fn f(&&_i: ()) { task::unsupervise(); fail; }\n     task::spawn((), f);\n@@ -48,13 +42,7 @@ fn test_join_chan() {\n \n // FIXME: Leaks on windows\n #[test]\n-#[cfg(target_os = \"win32\")]\n-#[ignore]\n-fn test_join_chan_fail() { }\n-\n-#[test]\n-#[cfg(target_os = \"macos\")]\n-#[cfg(target_os = \"linux\")]\n+#[ignore(cfg(target_os = \"win32\"))]\n fn test_join_chan_fail() {\n     fn failer(&&_i: ()) { task::unsupervise(); fail }\n "}, {"sha": "de3b15d3a7b31e779c7b02373cd2b07a326e61a0", "filename": "src/test/stdtest/vec.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ce1be4d9a9404f1eb75d0cacc937dbdbdf00d371/src%2Ftest%2Fstdtest%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce1be4d9a9404f1eb75d0cacc937dbdbdf00d371/src%2Ftest%2Fstdtest%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fvec.rs?ref=ce1be4d9a9404f1eb75d0cacc937dbdbdf00d371", "patch": "@@ -450,9 +450,9 @@ fn init() {\n     assert v == [1, 2];\n }\n \n-#[cfg(target_os = \"linux\")]\n-#[cfg(target_os = \"mac\")]\n #[test]\n+// FIXME: Windows can't undwind\n+#[ignore(cfg(target_os = \"win32\"))]\n fn init_empty() {\n \n     let r = task::join(\n@@ -463,12 +463,6 @@ fn init_empty() {\n     assert r == task::tr_failure\n }\n \n-// FIXME: Windows can't undwind\n-#[cfg(target_os = \"win32\")]\n-#[test]\n-#[ignore]\n-fn init_empty() { }\n-\n #[test]\n fn concat() {\n     assert vec::concat([[1], [2,3]]) == [1, 2, 3];"}]}