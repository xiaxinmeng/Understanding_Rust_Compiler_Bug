{"sha": "9fe8a3e52ef42ecf488f86c5fabc6af54708d216", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZThhM2U1MmVmNDJlY2Y0ODhmODZjNWZhYmM2YWY1NDcwOGQyMTY=", "commit": {"author": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2018-12-29T14:34:15Z"}, "committer": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2018-12-29T14:34:15Z"}, "message": "Support array indexing expressions in unused write to a constant", "tree": {"sha": "445520fc71bdcbfd99ee001bd53490b0c7e2e440", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/445520fc71bdcbfd99ee001bd53490b0c7e2e440"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fe8a3e52ef42ecf488f86c5fabc6af54708d216", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fe8a3e52ef42ecf488f86c5fabc6af54708d216", "html_url": "https://github.com/rust-lang/rust/commit/9fe8a3e52ef42ecf488f86c5fabc6af54708d216", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fe8a3e52ef42ecf488f86c5fabc6af54708d216/comments", "author": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "847898f18f67e3009db0715d1bb3f083974c7b27", "url": "https://api.github.com/repos/rust-lang/rust/commits/847898f18f67e3009db0715d1bb3f083974c7b27", "html_url": "https://github.com/rust-lang/rust/commit/847898f18f67e3009db0715d1bb3f083974c7b27"}], "stats": {"total": 74, "additions": 44, "deletions": 30}, "files": [{"sha": "560b1f61850da2118cbc93754cc92034a4493c1b", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fe8a3e52ef42ecf488f86c5fabc6af54708d216/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fe8a3e52ef42ecf488f86c5fabc6af54708d216/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=9fe8a3e52ef42ecf488f86c5fabc6af54708d216", "patch": "@@ -20,6 +20,7 @@\n #![warn(rust_2018_idioms, trivial_casts, trivial_numeric_casts)]\n #![feature(crate_visibility_modifier)]\n #![feature(try_from)]\n+#![feature(if_while_or_patterns)]\n \n // FIXME: switch to something more ergonomic here, once available.\n // (currently there is no way to opt into sysroot crates w/o `extern crate`)"}, {"sha": "cab60509a785b917b43f7907db80cc93596acaf0", "filename": "clippy_lints/src/no_effect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9fe8a3e52ef42ecf488f86c5fabc6af54708d216/clippy_lints%2Fsrc%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fe8a3e52ef42ecf488f86c5fabc6af54708d216/clippy_lints%2Fsrc%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fno_effect.rs?ref=9fe8a3e52ef42ecf488f86c5fabc6af54708d216", "patch": "@@ -101,7 +101,7 @@ fn has_no_effect(cx: &LateContext<'_, '_>, expr: &Expr) -> bool {\n         ExprKind::Assign(ref left, ref right) => {\n             if has_no_effect(cx, left) {\n                 let mut left = left;\n-                while let ExprKind::Field(f, _) = &left.node {\n+                while let ExprKind::Field(f, _) | ExprKind::Index(f, _) = &left.node {\n                     left = f;\n                 }\n                 if let ExprKind::Path(qpath) = &left.node {"}, {"sha": "8431f00e445c5eb37d3c1b17b57ffd4599c6c8c5", "filename": "tests/ui/no_effect.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9fe8a3e52ef42ecf488f86c5fabc6af54708d216/tests%2Fui%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fe8a3e52ef42ecf488f86c5fabc6af54708d216/tests%2Fui%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.rs?ref=9fe8a3e52ef42ecf488f86c5fabc6af54708d216", "patch": "@@ -74,9 +74,13 @@ struct B {\n struct C {\n     b: B,\n }\n+struct D {\n+    arr: [i32; 1],\n+}\n const A_CONST: A = A(1);\n const B: B = B { field: 1 };\n const C: C = C { b: B { field: 1 } };\n+const D: D = D { arr: [1] };\n \n fn main() {\n     let s = get_struct();\n@@ -113,6 +117,7 @@ fn main() {\n     A_CONST.0 = 2;\n     B.field = 2;\n     C.b.field = 2;\n+    D.arr[0] = 2;\n \n     // Do not warn\n     get_number();\n@@ -128,4 +133,6 @@ fn main() {\n     b_mut.field = 2;\n     let mut c_mut = C { b: B { field: 1 } };\n     c_mut.b.field = 2;\n+    let mut d_mut = D { arr: [1] };\n+    d_mut.arr[0] = 2;\n }"}, {"sha": "b6aab53e50f810d9912a64abd9c616401b8ed443", "filename": "tests/ui/no_effect.stderr", "status": "modified", "additions": 35, "deletions": 29, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/9fe8a3e52ef42ecf488f86c5fabc6af54708d216/tests%2Fui%2Fno_effect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9fe8a3e52ef42ecf488f86c5fabc6af54708d216/tests%2Fui%2Fno_effect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.stderr?ref=9fe8a3e52ef42ecf488f86c5fabc6af54708d216", "patch": "@@ -1,172 +1,178 @@\n error: statement with no effect\n-  --> $DIR/no_effect.rs:85:5\n+  --> $DIR/no_effect.rs:89:5\n    |\n LL |     0;\n    |     ^^\n    |\n    = note: `-D clippy::no-effect` implied by `-D warnings`\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:86:5\n+  --> $DIR/no_effect.rs:90:5\n    |\n LL |     s2;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:87:5\n+  --> $DIR/no_effect.rs:91:5\n    |\n LL |     Unit;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:88:5\n+  --> $DIR/no_effect.rs:92:5\n    |\n LL |     Tuple(0);\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:89:5\n+  --> $DIR/no_effect.rs:93:5\n    |\n LL |     Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:90:5\n+  --> $DIR/no_effect.rs:94:5\n    |\n LL |     Struct { ..s };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:91:5\n+  --> $DIR/no_effect.rs:95:5\n    |\n LL |     Union { a: 0 };\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:92:5\n+  --> $DIR/no_effect.rs:96:5\n    |\n LL |     Enum::Tuple(0);\n    |     ^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:93:5\n+  --> $DIR/no_effect.rs:97:5\n    |\n LL |     Enum::Struct { field: 0 };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:94:5\n+  --> $DIR/no_effect.rs:98:5\n    |\n LL |     5 + 6;\n    |     ^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:95:5\n+  --> $DIR/no_effect.rs:99:5\n    |\n LL |     *&42;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:96:5\n+  --> $DIR/no_effect.rs:100:5\n    |\n LL |     &6;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:97:5\n+  --> $DIR/no_effect.rs:101:5\n    |\n LL |     (5, 6, 7);\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:98:5\n+  --> $DIR/no_effect.rs:102:5\n    |\n LL |     box 42;\n    |     ^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:99:5\n+  --> $DIR/no_effect.rs:103:5\n    |\n LL |     ..;\n    |     ^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:100:5\n+  --> $DIR/no_effect.rs:104:5\n    |\n LL |     5..;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:101:5\n+  --> $DIR/no_effect.rs:105:5\n    |\n LL |     ..5;\n    |     ^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:102:5\n+  --> $DIR/no_effect.rs:106:5\n    |\n LL |     5..6;\n    |     ^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:104:5\n+  --> $DIR/no_effect.rs:108:5\n    |\n LL |     [42, 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:105:5\n+  --> $DIR/no_effect.rs:109:5\n    |\n LL |     [42, 55][1];\n    |     ^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:106:5\n+  --> $DIR/no_effect.rs:110:5\n    |\n LL |     (42, 55).1;\n    |     ^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:107:5\n+  --> $DIR/no_effect.rs:111:5\n    |\n LL |     [42; 55];\n    |     ^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:108:5\n+  --> $DIR/no_effect.rs:112:5\n    |\n LL |     [42; 55][13];\n    |     ^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:110:5\n+  --> $DIR/no_effect.rs:114:5\n    |\n LL |     || x += 5;\n    |     ^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:112:5\n+  --> $DIR/no_effect.rs:116:5\n    |\n LL |     FooString { s: s };\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:113:5\n+  --> $DIR/no_effect.rs:117:5\n    |\n LL |     A_CONST.0 = 2;\n    |     ^^^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:114:5\n+  --> $DIR/no_effect.rs:118:5\n    |\n LL |     B.field = 2;\n    |     ^^^^^^^^^^^^\n \n error: statement with no effect\n-  --> $DIR/no_effect.rs:115:5\n+  --> $DIR/no_effect.rs:119:5\n    |\n LL |     C.b.field = 2;\n    |     ^^^^^^^^^^^^^^\n \n-error: aborting due to 28 previous errors\n+error: statement with no effect\n+  --> $DIR/no_effect.rs:120:5\n+   |\n+LL |     D.arr[0] = 2;\n+   |     ^^^^^^^^^^^^^\n+\n+error: aborting due to 29 previous errors\n "}]}