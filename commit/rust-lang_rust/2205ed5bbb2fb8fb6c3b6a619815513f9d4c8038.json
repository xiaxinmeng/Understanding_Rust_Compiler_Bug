{"sha": "2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMDVlZDViYmIyZmI4ZmI2YzNiNmE2MTk4MTU1MTNmOWQ0YzgwMzg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-11T13:05:05Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-17T15:33:47Z"}, "message": "show proper warning about not running doctests", "tree": {"sha": "9298a64db65979f3b124aed76901a26b13c7aaac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9298a64db65979f3b124aed76901a26b13c7aaac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038", "html_url": "https://github.com/rust-lang/rust/commit/2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba3b354af98e07805168398f28d62f526b0471ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba3b354af98e07805168398f28d62f526b0471ad", "html_url": "https://github.com/rust-lang/rust/commit/ba3b354af98e07805168398f28d62f526b0471ad"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "6dbaa9791df4537ad3cf3e54a313dc4c732a2be7", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038", "patch": "@@ -442,6 +442,9 @@ fn phase_cargo_miri(mut args: env::Args) {\n     let runner_env_name = format!(\"CARGO_TARGET_{}_RUNNER\", target.to_uppercase().replace('-', \"_\"));\n     cmd.env(runner_env_name, &miri_path);\n \n+    // Set rustdoc to us as well, so we can make it do nothing (see issue #584).\n+    cmd.env(\"RUSTDOC\", &miri_path);\n+\n     // Run cargo.\n     if verbose {\n         cmd.env(\"MIRI_VERBOSE\", \"\"); // This makes the other phases verbose.\n@@ -571,7 +574,7 @@ fn phase_cargo_rustc(args: env::Args) {\n     }\n }\n \n-fn phase_cargo_runner(binary: &str, binary_args: env::Args) {\n+fn phase_cargo_runner(binary: &Path, binary_args: env::Args) {\n     let verbose = std::env::var_os(\"MIRI_VERBOSE\").is_some();\n \n     let file = File::open(&binary)\n@@ -659,10 +662,25 @@ fn main() {\n     //   binary crates for later interpretation.\n     // - When we are executed due to CARGO_TARGET_RUNNER, we start interpretation based on the\n     //   flags that were stored earlier.\n+    // On top of that, we are also called as RUSTDOC, but that is just a stub currently.\n     match args.next().as_deref() {\n         Some(\"miri\") => phase_cargo_miri(args),\n         Some(\"rustc\") => phase_cargo_rustc(args),\n-        Some(binary) => phase_cargo_runner(binary, args),\n+        Some(arg) => {\n+            // We have to distinguish the \"runner\" and \"rustfmt\" cases.\n+            // As runner, the first argument is the binary (a file that should exist, with an absolute path);\n+            // as rustfmt, the first argument is a flag (`--something`).\n+            let binary = Path::new(arg);\n+            if binary.exists() {\n+                assert!(!arg.starts_with(\"--\")); // not a flag\n+                phase_cargo_runner(binary, args);\n+            } else if arg.starts_with(\"--\") {\n+                // We are rustdoc.\n+                eprintln!(\"Running doctests is not currently supported by Miri.\")\n+            } else {\n+                show_error(format!(\"`cargo-miri` called with unexpected first argument `{}`; please only invoke this binary through `cargo miri`\", arg));\n+            }\n+        }\n         _ => show_error(format!(\"`cargo-miri` called without first argument; please only invoke this binary through `cargo miri`\")),\n     }\n }"}, {"sha": "6bc11ef0cc5add2fdad60af1fb519a190182dbb4", "filename": "test-cargo-miri/Cargo.toml", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038/test-cargo-miri%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038/test-cargo-miri%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2FCargo.toml?ref=2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038", "patch": "@@ -12,5 +12,4 @@ rand = { version = \"0.7\", features = [\"small_rng\"] }\n num_cpus = \"1.10.1\"\n \n [lib]\n-test = false\n-doctest = false # FIXME: doctests should be skipped automatically until we can run them...\n+test = false # test that this is respected (will show in the output)"}, {"sha": "82b3b88a63320b4e84f24ccc1c158f4b1915b5ff", "filename": "test-cargo-miri/run-test.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038/test-cargo-miri%2Frun-test.py", "raw_url": "https://github.com/rust-lang/rust/raw/2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038/test-cargo-miri%2Frun-test.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Frun-test.py?ref=2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038", "patch": "@@ -78,11 +78,11 @@ def test_cargo_miri_test():\n     )\n     test(\"cargo miri test (test target)\",\n         cargo_miri(\"test\") + [\"--test\", \"test\", \"--\", \"--format=pretty\"],\n-        \"test.stdout.ref4\", \"test.stderr.ref\"\n+        \"test.stdout.ref4\", \"test.stderr.ref2\"\n     )\n     test(\"cargo miri test (bin target)\",\n         cargo_miri(\"test\") + [\"--bin\", \"cargo-miri-test\", \"--\", \"--format=pretty\"],\n-        \"test.stdout.ref5\", \"test.stderr.ref\"\n+        \"test.stdout.ref5\", \"test.stderr.ref2\"\n     )\n \n os.chdir(os.path.dirname(os.path.realpath(__file__)))"}, {"sha": "a310169e305ee1828c2d5ae38ae37987cdb308fd", "filename": "test-cargo-miri/test.stderr.ref", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038/test-cargo-miri%2Ftest.stderr.ref", "raw_url": "https://github.com/rust-lang/rust/raw/2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038/test-cargo-miri%2Ftest.stderr.ref", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Ftest.stderr.ref?ref=2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038", "patch": "@@ -0,0 +1 @@\n+Running doctests is not currently supported by Miri."}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "test-cargo-miri/test.stderr.ref2", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038/test-cargo-miri%2Ftest.stderr.ref2", "raw_url": "https://github.com/rust-lang/rust/raw/2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038/test-cargo-miri%2Ftest.stderr.ref2", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Ftest.stderr.ref2?ref=2205ed5bbb2fb8fb6c3b6a619815513f9d4c8038"}]}