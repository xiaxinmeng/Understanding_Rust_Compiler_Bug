{"sha": "60e139409f6e0b033f0def55dd7f872e57f23d86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwZTEzOTQwOWY2ZTBiMDMzZjBkZWY1NWRkN2Y4NzJlNTdmMjNkODY=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lindsey@composition.al", "date": "2014-01-05T03:10:33Z"}, "committer": {"name": "Lindsey Kuper", "email": "lindsey@composition.al", "date": "2014-01-06T03:03:13Z"}, "message": "tutorial: change `float` to `f32` since float is no longer a type.", "tree": {"sha": "eee05426d1787479e1910ee02f61e71637f3c2e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eee05426d1787479e1910ee02f61e71637f3c2e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60e139409f6e0b033f0def55dd7f872e57f23d86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60e139409f6e0b033f0def55dd7f872e57f23d86", "html_url": "https://github.com/rust-lang/rust/commit/60e139409f6e0b033f0def55dd7f872e57f23d86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60e139409f6e0b033f0def55dd7f872e57f23d86/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5681c711e1997cf44a7737b33b3e81af4898579e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5681c711e1997cf44a7737b33b3e81af4898579e", "html_url": "https://github.com/rust-lang/rust/commit/5681c711e1997cf44a7737b33b3e81af4898579e"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "80f8c3a53eb5febe5a6ac8ba2127f1c60809930d", "filename": "doc/tutorial.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/60e139409f6e0b033f0def55dd7f872e57f23d86/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/60e139409f6e0b033f0def55dd7f872e57f23d86/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=60e139409f6e0b033f0def55dd7f872e57f23d86", "patch": "@@ -2184,12 +2184,12 @@ any other method, using dot notation, as in `1.print()`.\n \n Sometimes, a method that a trait provides will have the same\n implementation for most or all of the types that implement that trait.\n-For instance, suppose that we wanted `bool`s and `float`s to be\n+For instance, suppose that we wanted `bool`s and `f32`s to be\n printable, and that we wanted the implementation of `print` for those\n types to be exactly as it is for `int`, above:\n \n ~~~~\n-impl Printable for float {\n+impl Printable for f32 {\n     fn print(&self) { println!(\"{:?}\", *self) }\n }\n \n@@ -2220,15 +2220,15 @@ impl Printable for ~str {\n \n impl Printable for bool {}\n \n-impl Printable for float {}\n+impl Printable for f32 {}\n \n # 1.print();\n # (~\"foo\").print();\n # true.print();\n # 3.14159.print();\n ~~~~\n \n-Here, the impls of `Printable` for `int`, `bool`, and `float` don't\n+Here, the impls of `Printable` for `int`, `bool`, and `f32` don't\n need to provide an implementation of `print`, because in the absence\n of a specific implementation, Rust just uses the _default method_\n provided in the trait definition.  Depending on the trait, default"}]}