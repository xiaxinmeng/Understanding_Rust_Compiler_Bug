{"sha": "92b57c047615857cb7423a830579246245457a02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyYjU3YzA0NzYxNTg1N2NiNzQyM2E4MzA1NzkyNDYyNDU0NTdhMDI=", "commit": {"author": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2021-09-05T20:51:25Z"}, "committer": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2021-09-15T14:58:02Z"}, "message": "Updated for new const trait bounds syntax", "tree": {"sha": "9c2f9ddd1fd3333b0870fc2e98c9e5f3d5296ea6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c2f9ddd1fd3333b0870fc2e98c9e5f3d5296ea6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92b57c047615857cb7423a830579246245457a02", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEeQ9lb2ZjsXFBDRuFH1AezRu9cKcFAmFCCfoACgkQH1AezRu9\ncKd7yhAAg/XHNS3x6rwyCR7uCrcAHAtyt2aYR5vRQrdo82eUQQkAbXe+M+mT5wBp\nuBM7xnqKNGJCKy+mmxg59/RlTdqzToSxEEEEy+JCqbAA7HiE2T/WQfElOYbr7Wow\ne1q/mL+87exKwulwwsmdDgQIE44mKEur00yswHmquu/qh5/yykQdTAYX6L+1aPvr\nyF3giPXl5ij2kYJJO7HEF+0uOi99jP1PXQ5cFqRDfyFvJV2FCeuNjhcz2WTHJcSH\n5IyvZDNHZm9fcng+8/SN2JD7RKIH7v5u8B/fdg/eHWr98LaTt4t6y31PCJQ+ehx+\nOb2shwoKQKYLj27jxPKrFH0bnFSHekHBAXyMfczc6E8EHVSwfSQee6/RyNiqSEq9\nxMzrHPXZ3CP/D2B5UpdRPMHj42Z5YcRqHOtGs13Ubp0lLf97uHq2u+fTKTTGVImo\nTn1U2RQnUmlLkcSwKUpWiuTkBnla6VsK+sA3SpUpr2Tm1vrYxo4af0P134EQ3+kn\nL8bKTIkvK6V0UoubRMRaE49xzzzKtsYs74cq4bYNaMBo2z1dj/TiIAwn8CvFqzO2\nBF4TYKn+bjg7xR+tTrLWH+IQnC5cYHWCOfeCSc5H4wGW1f3LKcXCKP8o+EQdtV5B\nfZZW/k4bSpVARmwVhXayGF1YWMdtteLiF80P13ewuigdp5rkQqY=\n=EctI\n-----END PGP SIGNATURE-----", "payload": "tree 9c2f9ddd1fd3333b0870fc2e98c9e5f3d5296ea6\nparent 3051bb9c811cde27bcde4052b30dfa30c99a0bf0\nauthor Albin Hedman <albin9604@gmail.com> 1630875085 +0200\ncommitter Albin Hedman <albin9604@gmail.com> 1631717882 +0200\n\nUpdated for new const trait bounds syntax\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92b57c047615857cb7423a830579246245457a02", "html_url": "https://github.com/rust-lang/rust/commit/92b57c047615857cb7423a830579246245457a02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92b57c047615857cb7423a830579246245457a02/comments", "author": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3051bb9c811cde27bcde4052b30dfa30c99a0bf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3051bb9c811cde27bcde4052b30dfa30c99a0bf0", "html_url": "https://github.com/rust-lang/rust/commit/3051bb9c811cde27bcde4052b30dfa30c99a0bf0"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "daf9f4674f8c4e3c1089fbcc88913e9ab5091d61", "filename": "library/core/src/convert/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/92b57c047615857cb7423a830579246245457a02/library%2Fcore%2Fsrc%2Fconvert%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92b57c047615857cb7423a830579246245457a02/library%2Fcore%2Fsrc%2Fconvert%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fconvert%2Fmod.rs?ref=92b57c047615857cb7423a830579246245457a02", "patch": "@@ -535,7 +535,7 @@ where\n #[rustc_const_unstable(feature = \"const_convert\", issue = \"none\")]\n impl<T, U> const Into<U> for T\n where\n-    U: From<T>,\n+    U: ~const From<T>,\n {\n     fn into(self) -> U {\n         U::from(self)"}, {"sha": "f7bbf0192103f49c8d212dfdc752271078857e4d", "filename": "library/core/src/result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/92b57c047615857cb7423a830579246245457a02/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92b57c047615857cb7423a830579246245457a02/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=92b57c047615857cb7423a830579246245457a02", "patch": "@@ -1910,7 +1910,7 @@ impl<T, E> const ops::Try for Result<T, E> {\n \n #[unstable(feature = \"try_trait_v2\", issue = \"84277\")]\n #[rustc_const_unstable(feature = \"const_convert\", issue = \"none\")]\n-impl<T, E, F: From<E>> const ops::FromResidual<Result<convert::Infallible, E>> for Result<T, F> {\n+impl<T, E, F: ~const From<E>> const ops::FromResidual<Result<convert::Infallible, E>> for Result<T, F> {\n     #[inline]\n     fn from_residual(residual: Result<convert::Infallible, E>) -> Self {\n         match residual {"}]}