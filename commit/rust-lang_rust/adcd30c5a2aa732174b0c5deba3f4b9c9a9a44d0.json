{"sha": "adcd30c5a2aa732174b0c5deba3f4b9c9a9a44d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkY2QzMGM1YTJhYTczMjE3NGIwYzVkZWJhM2Y0YjljOWE5YTQ0ZDA=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-07T03:28:11Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-07T03:28:11Z"}, "message": "mdinger fix", "tree": {"sha": "fcd3e28b3768ae004c05a43df19bdb68cfec847d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fcd3e28b3768ae004c05a43df19bdb68cfec847d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adcd30c5a2aa732174b0c5deba3f4b9c9a9a44d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adcd30c5a2aa732174b0c5deba3f4b9c9a9a44d0", "html_url": "https://github.com/rust-lang/rust/commit/adcd30c5a2aa732174b0c5deba3f4b9c9a9a44d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adcd30c5a2aa732174b0c5deba3f4b9c9a9a44d0/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59ff3a39ae866b862678a769f469f0bae55606e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/59ff3a39ae866b862678a769f469f0bae55606e5", "html_url": "https://github.com/rust-lang/rust/commit/59ff3a39ae866b862678a769f469f0bae55606e5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6c3d4087b8198f3d35a20a3313fd60a1b3d0b4d3", "filename": "safe-unsafe-meaning.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adcd30c5a2aa732174b0c5deba3f4b9c9a9a44d0/safe-unsafe-meaning.md", "raw_url": "https://github.com/rust-lang/rust/raw/adcd30c5a2aa732174b0c5deba3f4b9c9a9a44d0/safe-unsafe-meaning.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/safe-unsafe-meaning.md?ref=adcd30c5a2aa732174b0c5deba3f4b9c9a9a44d0", "patch": "@@ -98,7 +98,7 @@ destructors will be successfully called! Hooray!\n \n However BTreeMap is implemented using a modest spoonful of Unsafe (most collections\n are). That means that it is not necessarily *trivially true* that a bad Ord\n-implementation will make BTreeMap behave safely. Unsafe most be sure not to rely\n+implementation will make BTreeMap behave safely. Unsafe must be sure not to rely\n on Ord *where safety is at stake*, because Ord is provided by Safe, and memory\n safety is not Safe's responsibility to uphold. *It must be impossible for Safe\n code to violate memory safety*."}]}