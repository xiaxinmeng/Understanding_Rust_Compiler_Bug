{"sha": "133c2b39db73843e6a5ee0bce325cca034012579", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzM2MyYjM5ZGI3Mzg0M2U2YTVlZTBiY2UzMjVjY2EwMzQwMTI1Nzk=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-09-19T15:32:18Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-09-19T15:32:18Z"}, "message": "Only use getcwd without isolation", "tree": {"sha": "ccd1acf467114b64e4619d3a4c25889cf3eaee60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ccd1acf467114b64e4619d3a4c25889cf3eaee60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/133c2b39db73843e6a5ee0bce325cca034012579", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/133c2b39db73843e6a5ee0bce325cca034012579", "html_url": "https://github.com/rust-lang/rust/commit/133c2b39db73843e6a5ee0bce325cca034012579", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/133c2b39db73843e6a5ee0bce325cca034012579/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6593563e46d025aa0eb7a12a34085b7337b62c5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6593563e46d025aa0eb7a12a34085b7337b62c5b", "html_url": "https://github.com/rust-lang/rust/commit/6593563e46d025aa0eb7a12a34085b7337b62c5b"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "debeab894d4568c4ea3bd14e03d55d96a61f74a0", "filename": "src/shims/env.rs", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/133c2b39db73843e6a5ee0bce325cca034012579/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/133c2b39db73843e6a5ee0bce325cca034012579/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=133c2b39db73843e6a5ee0bce325cca034012579", "patch": "@@ -119,22 +119,26 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         size_op: OpTy<'tcx, Tag>,\n     ) -> InterpResult<'tcx, Scalar<Tag>> {\n         let this = self.eval_context_mut();\n-        let tcx = &{this.tcx.tcx};\n \n-        let buf = this.force_ptr(this.read_scalar(buf_op)?.not_undef()?)?;\n-        let size = this.read_scalar(size_op)?.to_usize(&*this.tcx)?;\n-        // If we cannot get the current directory, we return null\n-        if let Ok(cwd) = env::current_dir() {\n-            // It is not clear what happens with non-utf8 paths here\n-            let mut bytes = cwd.display().to_string().into_bytes();\n-            // If the buffer is smaller than the path, we return null\n-            if bytes.len() as u64 <= size {\n-                // We need `size` bytes exactly\n-                bytes.resize(size as usize, 0);\n-                this.memory_mut().get_mut(buf.alloc_id)?.write_bytes(tcx, buf, &bytes)?;\n-                return Ok(Scalar::Ptr(buf))\n+        if this.machine.communicate {\n+            let tcx = &{this.tcx.tcx};\n+\n+            let buf = this.force_ptr(this.read_scalar(buf_op)?.not_undef()?)?;\n+            let size = this.read_scalar(size_op)?.to_usize(&*this.tcx)?;\n+            // If we cannot get the current directory, we return null\n+            if let Ok(cwd) = env::current_dir() {\n+                // It is not clear what happens with non-utf8 paths here\n+                let mut bytes = cwd.display().to_string().into_bytes();\n+                // If the buffer is smaller than the path, we return null\n+                if bytes.len() as u64 <= size {\n+                    // We need `size` bytes exactly\n+                    bytes.resize(size as usize, 0);\n+                    this.memory_mut().get_mut(buf.alloc_id)?.write_bytes(tcx, buf, &bytes)?;\n+                    return Ok(Scalar::Ptr(buf))\n+                }\n             }\n+            return Ok(Scalar::ptr_null(&*this.tcx));\n         }\n-        Ok(Scalar::ptr_null(&*this.tcx))\n+        throw_unsup_format!(\"Function not available when isolation is enabled\")\n     }\n }"}, {"sha": "45efd06d3f670000d4cd1a4607208cc7400c011d", "filename": "tests/run-pass/get_current_dir.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/133c2b39db73843e6a5ee0bce325cca034012579/tests%2Frun-pass%2Fget_current_dir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/133c2b39db73843e6a5ee0bce325cca034012579/tests%2Frun-pass%2Fget_current_dir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fget_current_dir.rs?ref=133c2b39db73843e6a5ee0bce325cca034012579", "patch": "@@ -1,4 +1,5 @@\n // ignore-windows: TODO the windows hook is not done yet\n+// compile-flags: -Zmiri-disable-isolation\n \n fn main() {\n     std::env::current_dir().unwrap();"}]}