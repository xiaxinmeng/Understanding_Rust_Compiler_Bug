{"sha": "72811669619c593249de876003ee2205710a8fcf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyODExNjY5NjE5YzU5MzI0OWRlODc2MDAzZWUyMjA1NzEwYThmY2Y=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-05-30T06:19:03Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-06-01T00:02:49Z"}, "message": "Use find_equiv in term", "tree": {"sha": "1093d4dfa0d16c85008dacc39070435413234ee7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1093d4dfa0d16c85008dacc39070435413234ee7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72811669619c593249de876003ee2205710a8fcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72811669619c593249de876003ee2205710a8fcf", "html_url": "https://github.com/rust-lang/rust/commit/72811669619c593249de876003ee2205710a8fcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72811669619c593249de876003ee2205710a8fcf/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf64324e19efd159fe0411f55a608f4f747e298d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf64324e19efd159fe0411f55a608f4f747e298d", "html_url": "https://github.com/rust-lang/rust/commit/cf64324e19efd159fe0411f55a608f4f747e298d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "eb1a0897e3315074fab3ba42e8da133e779a78c6", "filename": "src/libextra/term.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/72811669619c593249de876003ee2205710a8fcf/src%2Flibextra%2Fterm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72811669619c593249de876003ee2205710a8fcf/src%2Flibextra%2Fterm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fterm.rs?ref=72811669619c593249de876003ee2205710a8fcf", "patch": "@@ -70,17 +70,17 @@ pub impl Terminal {\n \n         let mut inf = ti.get();\n         let cs = *inf.numbers.find_or_insert(~\"colors\", 0) >= 16 && inf.strings.find(&~\"setaf\").is_some()\n-            && inf.strings.find(&~\"setab\").is_some();\n+            && inf.strings.find_equiv(&(\"setab\")).is_some();\n \n         return Ok(Terminal {out: out, ti: inf, color_supported: cs});\n     }\n     fn fg(&self, color: u8) {\n-        self.out.write(expand(*self.ti.strings.find(&~\"setaf\").unwrap(), [Number(color as int)], [], []));\n+        self.out.write(expand(*self.ti.strings.find_equiv(&(\"setaf\")).unwrap(), [Number(color as int)], [], []));\n     }\n     fn bg(&self, color: u8) {\n-        self.out.write(expand(*self.ti.strings.find(&~\"setab\").unwrap(), [Number(color as int)], [], []));\n+        self.out.write(expand(*self.ti.strings.find_equiv(&(\"setab\")).unwrap(), [Number(color as int)], [], []));\n     }\n     fn reset(&self) {\n-        self.out.write(expand(*self.ti.strings.find(&~\"op\").unwrap(), [], [], []));\n+        self.out.write(expand(*self.ti.strings.find_equiv(&(\"op\")).unwrap(), [], [], []));\n     }\n }"}]}