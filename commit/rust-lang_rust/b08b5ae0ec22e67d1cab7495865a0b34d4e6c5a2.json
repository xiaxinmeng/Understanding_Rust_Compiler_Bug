{"sha": "b08b5ae0ec22e67d1cab7495865a0b34d4e6c5a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwOGI1YWUwZWMyMmU2N2QxY2FiNzQ5NTg2NWEwYjM0ZDRlNmM1YTI=", "commit": {"author": {"name": "snf", "email": "snf@users.noreply.github.com", "date": "2018-03-13T10:41:45Z"}, "committer": {"name": "snf", "email": "snf@users.noreply.github.com", "date": "2018-03-14T10:48:42Z"}, "message": "try_reserve: disabling tests for asmjs, blocked by #48968", "tree": {"sha": "e5eaee14c14cd878733d6d06623a1e2670dae968", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5eaee14c14cd878733d6d06623a1e2670dae968"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b08b5ae0ec22e67d1cab7495865a0b34d4e6c5a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b08b5ae0ec22e67d1cab7495865a0b34d4e6c5a2", "html_url": "https://github.com/rust-lang/rust/commit/b08b5ae0ec22e67d1cab7495865a0b34d4e6c5a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b08b5ae0ec22e67d1cab7495865a0b34d4e6c5a2/comments", "author": {"login": "snf", "id": 3269911, "node_id": "MDQ6VXNlcjMyNjk5MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3269911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snf", "html_url": "https://github.com/snf", "followers_url": "https://api.github.com/users/snf/followers", "following_url": "https://api.github.com/users/snf/following{/other_user}", "gists_url": "https://api.github.com/users/snf/gists{/gist_id}", "starred_url": "https://api.github.com/users/snf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snf/subscriptions", "organizations_url": "https://api.github.com/users/snf/orgs", "repos_url": "https://api.github.com/users/snf/repos", "events_url": "https://api.github.com/users/snf/events{/privacy}", "received_events_url": "https://api.github.com/users/snf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "snf", "id": 3269911, "node_id": "MDQ6VXNlcjMyNjk5MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3269911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snf", "html_url": "https://github.com/snf", "followers_url": "https://api.github.com/users/snf/followers", "following_url": "https://api.github.com/users/snf/following{/other_user}", "gists_url": "https://api.github.com/users/snf/gists{/gist_id}", "starred_url": "https://api.github.com/users/snf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snf/subscriptions", "organizations_url": "https://api.github.com/users/snf/orgs", "repos_url": "https://api.github.com/users/snf/repos", "events_url": "https://api.github.com/users/snf/events{/privacy}", "received_events_url": "https://api.github.com/users/snf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92bfcd2b192e59d12d64acf6f46c1897a3273b3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/92bfcd2b192e59d12d64acf6f46c1897a3273b3e", "html_url": "https://github.com/rust-lang/rust/commit/92bfcd2b192e59d12d64acf6f46c1897a3273b3e"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "9bbba4e22b03dc0d62d65defc2c487d4fe4955e3", "filename": "src/liballoc/tests/string.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b08b5ae0ec22e67d1cab7495865a0b34d4e6c5a2/src%2Fliballoc%2Ftests%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b08b5ae0ec22e67d1cab7495865a0b34d4e6c5a2/src%2Fliballoc%2Ftests%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fstring.rs?ref=b08b5ae0ec22e67d1cab7495865a0b34d4e6c5a2", "patch": "@@ -9,8 +9,11 @@\n // except according to those terms.\n \n use std::borrow::Cow;\n+#[cfg(not(target_arch = \"asmjs\"))]\n use std::collections::CollectionAllocErr::*;\n+#[cfg(not(target_arch = \"asmjs\"))]\n use std::mem::size_of;\n+#[cfg(not(target_arch = \"asmjs\"))]\n use std::{usize, isize};\n \n pub trait IntoCow<'a, B: ?Sized> where B: ToOwned {\n@@ -532,6 +535,7 @@ fn test_reserve_exact() {\n     assert!(s.capacity() >= 33)\n }\n \n+#[cfg(not(target_arch = \"asmjs\"))]\n #[test]\n fn test_try_reserve() {\n \n@@ -609,6 +613,7 @@ fn test_try_reserve() {\n \n }\n \n+#[cfg(not(target_arch = \"asmjs\"))]\n #[test]\n fn test_try_reserve_exact() {\n "}, {"sha": "85e11d8b8ee6ec4e68b071cf127535bbb4c00a93", "filename": "src/liballoc/tests/vec.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b08b5ae0ec22e67d1cab7495865a0b34d4e6c5a2/src%2Fliballoc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b08b5ae0ec22e67d1cab7495865a0b34d4e6c5a2/src%2Fliballoc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fvec.rs?ref=b08b5ae0ec22e67d1cab7495865a0b34d4e6c5a2", "patch": "@@ -10,8 +10,11 @@\n \n use std::borrow::Cow;\n use std::mem::size_of;\n-use std::{usize, isize, panic};\n+use std::{usize, panic};\n+#[cfg(not(target_arch = \"asmjs\"))]\n+use std::isize;\n use std::vec::{Drain, IntoIter};\n+#[cfg(not(target_arch = \"asmjs\"))]\n use std::collections::CollectionAllocErr::*;\n \n struct DropCounter<'a> {\n@@ -991,6 +994,7 @@ fn test_reserve_exact() {\n     assert!(v.capacity() >= 33)\n }\n \n+#[cfg(not(target_arch = \"asmjs\"))]\n #[test]\n fn test_try_reserve() {\n \n@@ -1093,6 +1097,7 @@ fn test_try_reserve() {\n \n }\n \n+#[cfg(not(target_arch = \"asmjs\"))]\n #[test]\n fn test_try_reserve_exact() {\n "}, {"sha": "9fd38ed6f6f49a8d04a0d5c6541c4c0fe661291c", "filename": "src/liballoc/tests/vec_deque.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b08b5ae0ec22e67d1cab7495865a0b34d4e6c5a2/src%2Fliballoc%2Ftests%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b08b5ae0ec22e67d1cab7495865a0b34d4e6c5a2/src%2Fliballoc%2Ftests%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fvec_deque.rs?ref=b08b5ae0ec22e67d1cab7495865a0b34d4e6c5a2", "patch": "@@ -11,9 +11,13 @@\n use std::collections::VecDeque;\n use std::fmt::Debug;\n use std::collections::vec_deque::{Drain};\n+#[cfg(not(target_arch = \"asmjs\"))]\n use std::collections::CollectionAllocErr::*;\n+#[cfg(not(target_arch = \"asmjs\"))]\n use std::mem::size_of;\n-use std::{usize, isize};\n+use std::isize;\n+#[cfg(not(target_arch = \"asmjs\"))]\n+use std::usize;\n \n use self::Taggy::*;\n use self::Taggypar::*;\n@@ -1049,6 +1053,7 @@ fn test_reserve_exact_2() {\n     assert!(v.capacity() >= 48)\n }\n \n+#[cfg(not(target_arch = \"asmjs\"))]\n #[test]\n fn test_try_reserve() {\n \n@@ -1150,6 +1155,7 @@ fn test_try_reserve() {\n \n }\n \n+#[cfg(not(target_arch = \"asmjs\"))]\n #[test]\n fn test_try_reserve_exact() {\n "}, {"sha": "5f5dec2dd4ff13a4f4f16e92cf1368eab802a2c1", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b08b5ae0ec22e67d1cab7495865a0b34d4e6c5a2/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b08b5ae0ec22e67d1cab7495865a0b34d4e6c5a2/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=b08b5ae0ec22e67d1cab7495865a0b34d4e6c5a2", "patch": "@@ -2755,8 +2755,11 @@ mod test_map {\n     use cell::RefCell;\n     use rand::{thread_rng, Rng};\n     use panic;\n+    #[cfg(not(target_arch = \"asmjs\"))]\n     use realstd::collections::CollectionAllocErr::*;\n+    #[cfg(not(target_arch = \"asmjs\"))]\n     use realstd::mem::size_of;\n+    #[cfg(not(target_arch = \"asmjs\"))]\n     use realstd::usize;\n \n     #[test]\n@@ -3693,6 +3696,7 @@ mod test_map {\n         assert_eq!(hm.len(), 0);\n     }\n \n+    #[cfg(not(target_arch = \"asmjs\"))]\n     #[test]\n     fn test_try_reserve() {\n "}]}