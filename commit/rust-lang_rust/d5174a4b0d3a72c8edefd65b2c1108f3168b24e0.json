{"sha": "d5174a4b0d3a72c8edefd65b2c1108f3168b24e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1MTc0YTRiMGQzYTcyYzhlZGVmZDY1YjJjMTEwOGYzMTY4YjI0ZTA=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-01-12T12:58:16Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-02-05T16:22:27Z"}, "message": "Explicitly match all DefKind item in conversion to TypeKind", "tree": {"sha": "16d5e97483e5bcbb4954b804759f764936027749", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16d5e97483e5bcbb4954b804759f764936027749"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5174a4b0d3a72c8edefd65b2c1108f3168b24e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5174a4b0d3a72c8edefd65b2c1108f3168b24e0", "html_url": "https://github.com/rust-lang/rust/commit/d5174a4b0d3a72c8edefd65b2c1108f3168b24e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5174a4b0d3a72c8edefd65b2c1108f3168b24e0/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9435f4c92651d67d5dbaba13c5606c4c4fc1327", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9435f4c92651d67d5dbaba13c5606c4c4fc1327", "html_url": "https://github.com/rust-lang/rust/commit/f9435f4c92651d67d5dbaba13c5606c4c4fc1327"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "cbe871bd65ab447782470fd71f61fef7b7d87e3d", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/d5174a4b0d3a72c8edefd65b2c1108f3168b24e0/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5174a4b0d3a72c8edefd65b2c1108f3168b24e0/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=d5174a4b0d3a72c8edefd65b2c1108f3168b24e0", "patch": "@@ -1304,6 +1304,49 @@ crate enum TypeKind {\n     Primitive,\n }\n \n+impl<'a> From<&'a hir::def::DefKind> for TypeKind {\n+    fn from(other: &hir::def::DefKind) -> Self {\n+        Self::from(*other)\n+    }\n+}\n+\n+impl From<hir::def::DefKind> for TypeKind {\n+    fn from(other: hir::def::DefKind) -> Self {\n+        match other {\n+            hir::def::DefKind::Enum => Self::Enum,\n+            hir::def::DefKind::Fn => Self::Function,\n+            hir::def::DefKind::Mod => Self::Module,\n+            hir::def::DefKind::Const => Self::Const,\n+            hir::def::DefKind::Static => Self::Static,\n+            hir::def::DefKind::Struct => Self::Struct,\n+            hir::def::DefKind::Union => Self::Union,\n+            hir::def::DefKind::Trait => Self::Trait,\n+            hir::def::DefKind::TyAlias => Self::Typedef,\n+            hir::def::DefKind::ForeignTy => Self::Foreign,\n+            hir::def::DefKind::TraitAlias => Self::TraitAlias,\n+            hir::def::DefKind::Macro(_) => Self::Macro,\n+            hir::def::DefKind::Variant\n+            | hir::def::DefKind::AssocTy\n+            | hir::def::DefKind::TyParam\n+            | hir::def::DefKind::ConstParam\n+            | hir::def::DefKind::Ctor(..)\n+            | hir::def::DefKind::AssocFn\n+            | hir::def::DefKind::AssocConst\n+            | hir::def::DefKind::ExternCrate\n+            | hir::def::DefKind::Use\n+            | hir::def::DefKind::ForeignMod\n+            | hir::def::DefKind::AnonConst\n+            | hir::def::DefKind::OpaqueTy\n+            | hir::def::DefKind::Field\n+            | hir::def::DefKind::LifetimeParam\n+            | hir::def::DefKind::GlobalAsm\n+            | hir::def::DefKind::Impl\n+            | hir::def::DefKind::Closure\n+            | hir::def::DefKind::Generator => Self::Foreign,\n+        }\n+    }\n+}\n+\n crate trait GetDefId {\n     /// Use this method to get the [`DefId`] of a [`clean`] AST node.\n     /// This will return [`None`] when called on a primitive [`clean::Type`]."}]}