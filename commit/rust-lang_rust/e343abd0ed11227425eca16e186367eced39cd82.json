{"sha": "e343abd0ed11227425eca16e186367eced39cd82", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzNDNhYmQwZWQxMTIyNzQyNWVjYTE2ZTE4NjM2N2VjZWQzOWNkODI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-01-31T20:01:01Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-02-01T05:07:28Z"}, "message": "mk: Remove USE_SNAPSHOT_RT, etc. Obsolete. #4713 r=graydon", "tree": {"sha": "2727cbaa08a89edc77e2c96b807f1dda810ddb93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2727cbaa08a89edc77e2c96b807f1dda810ddb93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e343abd0ed11227425eca16e186367eced39cd82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e343abd0ed11227425eca16e186367eced39cd82", "html_url": "https://github.com/rust-lang/rust/commit/e343abd0ed11227425eca16e186367eced39cd82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e343abd0ed11227425eca16e186367eced39cd82/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adb9d0e8a13131ff3efab6dbb1878774588100fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/adb9d0e8a13131ff3efab6dbb1878774588100fd", "html_url": "https://github.com/rust-lang/rust/commit/adb9d0e8a13131ff3efab6dbb1878774588100fd"}], "stats": {"total": 125, "additions": 0, "deletions": 125}, "files": [{"sha": "67bb055dfc7f315b3fa27acaa099a62c7a249e78", "filename": "mk/target.mk", "status": "modified", "additions": 0, "deletions": 125, "changes": 125, "blob_url": "https://github.com/rust-lang/rust/blob/e343abd0ed11227425eca16e186367eced39cd82/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/e343abd0ed11227425eca16e186367eced39cd82/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=e343abd0ed11227425eca16e186367eced39cd82", "patch": "@@ -14,13 +14,6 @@\n # $(2) is the target triple\n # $(3) is the host triple\n \n-# If you are making non-backwards compatible changes to the runtime\n-# (resp.  corelib), set this flag to 1.  It will cause stage1 to use\n-# the snapshot runtime (resp. corelib) rather than the runtime\n-# (resp. corelib) from the working directory.\n-USE_SNAPSHOT_RUNTIME=0\n-USE_SNAPSHOT_CORELIB=0\n-USE_SNAPSHOT_STDLIB=0\n \n define TARGET_STAGE_N\n \n@@ -59,86 +52,17 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_LIBSYNTAX): \\\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) $(BORROWCK) -o $$@ $$< && touch $$@\n \n-endef\n-\n-# The stage0 (snapshot) compiler produces binaries that expect the\n-# snapshot runtime.  Normally the working directory runtime and\n-# snapshot runtime are compatible, so this is no problem. But\n-# sometimes we want to make non-backwards-compatible changes.  In\n-# those cases, the stage1 compiler and libraries (which are produced\n-# by stage0) should use the runtime from the snapshot.  The stage2\n-# compiler and libraries (which are produced by stage1) will be the\n-# first that are expecting to run against the runtime as defined in\n-# the working directory.\n-#\n-# The catch is that you may not add new functions to the runtime\n-# in this case!\n-#\n-# Arguments are the same as for TARGET_BASE_STAGE_N\n-define TARGET_RT_FROM_SNAPSHOT\n-\n-$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_RUNTIME): \\\n-\t\t$$(HLIB$(1)_H_$(3))/$$(CFG_RUNTIME)\n-\t@$$(call E, cp: $$@)\n-\t$$(Q)cp $$< $$@\n-\n-endef\n-\n-# This rule copies from the runtime for the working directory.  It\n-# applies to targets produced by stage1 or later.  See comment on\n-# previous rule.\n-#\n-# Arguments are the same as for TARGET_BASE_STAGE_N\n-define TARGET_RT_FROM_WD\n-\n $$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_RUNTIME): \\\n \t\trt/$(2)/$$(CFG_RUNTIME)\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n-endef\n-\n-# As above, but builds the corelib either by taking it out of the\n-# snapshot or from the working directory.\n-\n-define TARGET_CORELIB_FROM_SNAPSHOT\n-\n-$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_CORELIB): \\\n-\t\t$$(HLIB$(1)_H_$(3))/$$(CFG_CORELIB) \\\n-\t\t$$(CORELIB_INPUTS) \\\n-\t\t$$(TSREQ$(1)_T_$(2)_H_$(3))\n-\t@$$(call E, cp: $$@)\n-\t$$(Q)cp $$< $$@\n-\t$$(Q)cp $$(HLIB$(1)_H_$(3))/$$(CORELIB_GLOB) \\\n-\t\t$$(TLIB$(1)_T_$(2)_H_$(3))\n-\n-endef\n-\n-define TARGET_CORELIB_FROM_WD\n-\n $$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_CORELIB): \\\n \t\t$$(CORELIB_CRATE) $$(CORELIB_INPUTS) \\\n \t\t$$(TSREQ$(1)_T_$(2)_H_$(3))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< && touch $$@\n \n-endef\n-\n-define TARGET_STDLIB_FROM_SNAPSHOT\n-\n-$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_STDLIB): \\\n-\t\t$$(HLIB$(1)_H_$(3))/$$(CFG_STDLIB) \\\n-\t\t$$(STDLIB_INPUTS) \\\n-\t\t$$(TSREQ$(1)_T_$(2)_H_$(3))\n-\t@$$(call E, cp: $$@)\n-\t$$(Q)cp $$< $$@\n-\t$$(Q)cp $$(HLIB$(1)_H_$(3))/$$(STDLIB_GLOB) \\\n-\t\t$$(TLIB$(1)_T_$(2)_H_$(3))\n-\n-endef\n-\n-define TARGET_STDLIB_FROM_WD\n-\n $$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_STDLIB): \\\n \t\t$$(STDLIB_CRATE) $$(STDLIB_INPUTS) \\\n \t        $$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_CORELIB) \\\n@@ -155,52 +79,3 @@ $(foreach source,$(CFG_TARGET_TRIPLES),\t\t\t\t\\\n   $(eval $(call TARGET_STAGE_N,1,$(target),$(source)))\t\t\\\n   $(eval $(call TARGET_STAGE_N,2,$(target),$(source)))\t\t\\\n   $(eval $(call TARGET_STAGE_N,3,$(target),$(source)))))\n-\n-# Host triple either uses the snapshot runtime or runtime from\n-# working directory, depending on the USE_SNAPSHOT_RUNTIME var.\n-ifeq ($(USE_SNAPSHOT_RUNTIME),1)\n-    $(foreach src,$(CFG_HOST_TRIPLE),\\\n-\t\t$(eval $(call TARGET_RT_FROM_SNAPSHOT,0,$(src),$(src))))\n-else \n-    $(foreach src,$(CFG_HOST_TRIPLE),\\\n-\t\t$(eval $(call TARGET_RT_FROM_WD,0,$(src),$(src))))\n-endif\n-\n-ifeq ($(USE_SNAPSHOT_CORELIB),1)\n-    $(foreach src,$(CFG_HOST_TRIPLE),\\\n-\t\t$(eval $(call TARGET_CORELIB_FROM_SNAPSHOT,0,$(src),$(src))))\n-else \n-    $(foreach src,$(CFG_HOST_TRIPLE),\\\n-\t\t$(eval $(call TARGET_CORELIB_FROM_WD,0,$(src),$(src))))\n-endif\n-\n-ifeq ($(USE_SNAPSHOT_STDLIB),1)\n-    $(foreach src,$(CFG_HOST_TRIPLE),\\\n-\t\t$(eval $(call TARGET_STDLIB_FROM_SNAPSHOT,0,$(src),$(src))))\n-else\n-    $(foreach src,$(CFG_HOST_TRIPLE),\\\n-\t\t$(eval $(call TARGET_STDLIB_FROM_WD,0,$(src),$(src))))\n-endif\n-\n-# Non-host triples build the stage0 runtime from the working directory\n-$(foreach source,$(CFG_TARGET_TRIPLES),\t\t\t\t\\\n- $(foreach target,$(NON_HOST_TRIPLES),\t\t\t\t\\\n-  $(eval $(call TARGET_RT_FROM_WD,0,$(target),$(source)))       \\\n-  $(eval $(call TARGET_CORELIB_FROM_WD,0,$(target),$(source)))  \\\n-  $(eval $(call TARGET_STDLIB_FROM_WD,0,$(target),$(source)))  \\\n-))\n-\n-# After stage0, always build the stage0 runtime from the working directory\n-$(foreach source,$(CFG_TARGET_TRIPLES),\t\t\t\t\\\n- $(foreach target,$(CFG_TARGET_TRIPLES),\t\t\t\\\n-  $(eval $(call TARGET_RT_FROM_WD,1,$(target),$(source)))\t\\\n-  $(eval $(call TARGET_RT_FROM_WD,2,$(target),$(source)))\t\\\n-  $(eval $(call TARGET_RT_FROM_WD,3,$(target),$(source)))  \t\\\n-  $(eval $(call TARGET_CORELIB_FROM_WD,1,$(target),$(source)))\t\\\n-  $(eval $(call TARGET_CORELIB_FROM_WD,2,$(target),$(source)))\t\\\n-  $(eval $(call TARGET_CORELIB_FROM_WD,3,$(target),$(source)))\t\\\n-  $(eval $(call TARGET_STDLIB_FROM_WD,1,$(target),$(source)))\t\\\n-  $(eval $(call TARGET_STDLIB_FROM_WD,2,$(target),$(source)))\t\\\n-  $(eval $(call TARGET_STDLIB_FROM_WD,3,$(target),$(source)))\t\\\n-))\n-"}]}