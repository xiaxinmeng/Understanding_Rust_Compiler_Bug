{"sha": "3cb7c8b548883ed8dcf589193df058dcda0a5c64", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjYjdjOGI1NDg4ODNlZDhkY2Y1ODkxOTNkZjA1OGRjZGEwYTVjNjQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-05T14:42:43Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-05T14:42:43Z"}, "message": "Emit diagnostics for unresolved item-level macros", "tree": {"sha": "a2e1f9d026b1a87fe79e755bc03856f78b5a1fd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2e1f9d026b1a87fe79e755bc03856f78b5a1fd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cb7c8b548883ed8dcf589193df058dcda0a5c64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cb7c8b548883ed8dcf589193df058dcda0a5c64", "html_url": "https://github.com/rust-lang/rust/commit/3cb7c8b548883ed8dcf589193df058dcda0a5c64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cb7c8b548883ed8dcf589193df058dcda0a5c64/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8d3d5694be065ffb1d52bc33e098ff610693097", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8d3d5694be065ffb1d52bc33e098ff610693097", "html_url": "https://github.com/rust-lang/rust/commit/c8d3d5694be065ffb1d52bc33e098ff610693097"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "77017e4ea97e3e5f7d338fb0695db08c79b222c2", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/3cb7c8b548883ed8dcf589193df058dcda0a5c64/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cb7c8b548883ed8dcf589193df058dcda0a5c64/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=3cb7c8b548883ed8dcf589193df058dcda0a5c64", "patch": "@@ -13,7 +13,7 @@ use hir_expand::{\n     builtin_macro::find_builtin_macro,\n     name::{AsName, Name},\n     proc_macro::ProcMacroExpander,\n-    HirFileId, MacroCallId, MacroDefId, MacroDefKind,\n+    HirFileId, MacroCallId, MacroCallKind, MacroDefId, MacroDefKind,\n };\n use hir_expand::{InFile, MacroCallLoc};\n use rustc_hash::{FxHashMap, FxHashSet};\n@@ -860,6 +860,37 @@ impl DefCollector<'_> {\n     }\n \n     fn finish(mut self) -> CrateDefMap {\n+        // Emit diagnostics for all remaining unexpanded macros.\n+\n+        for directive in &self.unexpanded_macros {\n+            let mut error = None;\n+            directive.ast_id.as_call_id_with_errors(\n+                self.db,\n+                self.def_map.krate,\n+                |path| {\n+                    let resolved_res = self.def_map.resolve_path_fp_with_macro(\n+                        self.db,\n+                        ResolveMode::Other,\n+                        directive.module_id,\n+                        &path,\n+                        BuiltinShadowMode::Module,\n+                    );\n+                    resolved_res.resolved_def.take_macros()\n+                },\n+                &mut |e| {\n+                    error.get_or_insert(e);\n+                },\n+            );\n+\n+            if let Some(err) = error {\n+                self.def_map.diagnostics.push(DefDiagnostic::macro_error(\n+                    directive.module_id,\n+                    MacroCallKind::FnLike(directive.ast_id.ast_id),\n+                    err.to_string(),\n+                ));\n+            }\n+        }\n+\n         // Emit diagnostics for all remaining unresolved imports.\n \n         // We'd like to avoid emitting a diagnostics avalanche when some `extern crate` doesn't"}]}