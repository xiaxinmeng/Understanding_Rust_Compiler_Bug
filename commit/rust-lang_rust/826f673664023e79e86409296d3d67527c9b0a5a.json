{"sha": "826f673664023e79e86409296d3d67527c9b0a5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyNmY2NzM2NjQwMjNlNzllODY0MDkyOTZkM2Q2NzUyN2M5YjBhNWE=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2016-09-12T04:31:51Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2016-09-12T07:33:02Z"}, "message": "Lazily construct panic messages in char_lit().\n\nThis reduces the time taken to run\n`rustc -Zparse-only rustc-benchmarks/issue-32278-big-array-of-strings`\nfrom 0.18s to 0.15s on my machine, and reduces the number of\ninstructions (as measured by Cachegrind) from 1.34B to 1.01B.\n\nWith the change applied, the time to fully compile that benchmark is\n1.96s, so this is a 1.5% improvement.", "tree": {"sha": "2ab7f985fc87275a6c48a174a7160a4d58898622", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ab7f985fc87275a6c48a174a7160a4d58898622"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/826f673664023e79e86409296d3d67527c9b0a5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/826f673664023e79e86409296d3d67527c9b0a5a", "html_url": "https://github.com/rust-lang/rust/commit/826f673664023e79e86409296d3d67527c9b0a5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/826f673664023e79e86409296d3d67527c9b0a5a/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c274b6aea00c2327211e8295f4d97ee6e624a2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c274b6aea00c2327211e8295f4d97ee6e624a2b", "html_url": "https://github.com/rust-lang/rust/commit/4c274b6aea00c2327211e8295f4d97ee6e624a2b"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "a1eceb6921c6d7f21ca07c03662b73ea18737c11", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/826f673664023e79e86409296d3d67527c9b0a5a/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/826f673664023e79e86409296d3d67527c9b0a5a/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=826f673664023e79e86409296d3d67527c9b0a5a", "patch": "@@ -302,9 +302,6 @@ pub fn char_lit(lit: &str) -> (char, isize) {\n         _ => panic!(\"lexer accepted invalid char escape `{}`\", lit)\n     };\n \n-    let msg = format!(\"lexer should have rejected a bad character escape {}\", lit);\n-    let msg2 = &msg[..];\n-\n     fn esc(len: usize, lit: &str) -> Option<(char, isize)> {\n         u32::from_str_radix(&lit[2..len], 16).ok()\n         .and_then(char::from_u32)\n@@ -313,7 +310,10 @@ pub fn char_lit(lit: &str) -> (char, isize) {\n \n     let unicode_escape = || -> Option<(char, isize)> {\n         if lit.as_bytes()[2] == b'{' {\n-            let idx = lit.find('}').expect(msg2);\n+            let idx = lit.find('}').unwrap_or_else(|| {\n+                panic!(\"lexer should have rejected a bad character escape {}\", lit)\n+            });\n+\n             let subslice = &lit[3..idx];\n             u32::from_str_radix(subslice, 16).ok()\n                 .and_then(char::from_u32)\n@@ -329,7 +329,9 @@ pub fn char_lit(lit: &str) -> (char, isize) {\n         'u' => unicode_escape(),\n         'U' => esc(10, lit),\n         _ => None,\n-    }.expect(msg2);\n+    }.unwrap_or_else(|| {\n+        panic!(\"lexer should have rejected a bad character escape {}\", lit)\n+    })\n }\n \n /// Parse a string representing a string literal into its final form. Does"}]}