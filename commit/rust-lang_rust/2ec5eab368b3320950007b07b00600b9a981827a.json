{"sha": "2ec5eab368b3320950007b07b00600b9a981827a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlYzVlYWIzNjhiMzMyMDk1MDAwN2IwN2IwMDYwMGI5YTk4MTgyN2E=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-22T10:03:44Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-27T09:17:55Z"}, "message": "Also place method impl trait into the surrounding module", "tree": {"sha": "fe06e724f3b9218495db45e627e4442e057bd431", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe06e724f3b9218495db45e627e4442e057bd431"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ec5eab368b3320950007b07b00600b9a981827a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ec5eab368b3320950007b07b00600b9a981827a", "html_url": "https://github.com/rust-lang/rust/commit/2ec5eab368b3320950007b07b00600b9a981827a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ec5eab368b3320950007b07b00600b9a981827a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b202426dcac3febc06b89a9ceecc8eb47db59e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b202426dcac3febc06b89a9ceecc8eb47db59e8", "html_url": "https://github.com/rust-lang/rust/commit/1b202426dcac3febc06b89a9ceecc8eb47db59e8"}], "stats": {"total": 62, "additions": 49, "deletions": 13}, "files": [{"sha": "b7260dded920ed301e22ce329b3a7be04caaa5a4", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 49, "deletions": 13, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/2ec5eab368b3320950007b07b00600b9a981827a/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ec5eab368b3320950007b07b00600b9a981827a/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=2ec5eab368b3320950007b07b00600b9a981827a", "patch": "@@ -3076,6 +3076,45 @@ impl<'a> LoweringContext<'a> {\n         }\n     }\n \n+    /// Lowers `impl Trait` items and appends them to the list\n+    fn lower_impl_trait_ids(\n+        &mut self,\n+        decl: &FnDecl,\n+        ids: &mut SmallVector<hir::ItemId>,\n+    ) {\n+        struct IdVisitor<'a> { ids: &'a mut SmallVector<hir::ItemId> }\n+        impl<'a, 'b> Visitor<'a> for IdVisitor<'b> {\n+            fn visit_ty(&mut self, ty: &'a Ty) {\n+                match ty.node {\n+                    | TyKind::Typeof(_)\n+                    | TyKind::BareFn(_)\n+                    => return,\n+\n+                    TyKind::ImplTrait(id, _) => self.ids.push(hir::ItemId { id }),\n+                    _ => {},\n+                }\n+                visit::walk_ty(self, ty);\n+            }\n+            fn visit_path_segment(\n+                &mut self,\n+                path_span: Span,\n+                path_segment: &'v PathSegment,\n+            ) {\n+                if let Some(ref p) = path_segment.parameters {\n+                    if let PathParameters::Parenthesized(..) = **p {\n+                        return;\n+                    }\n+                }\n+                visit::walk_path_segment(self, path_span, path_segment)\n+            }\n+        }\n+        let mut visitor = IdVisitor { ids };\n+        match decl.output {\n+            FunctionRetTy::Default(_) => {},\n+            FunctionRetTy::Ty(ref ty) => visitor.visit_ty(ty),\n+        }\n+    }\n+\n     fn lower_item_id(&mut self, i: &Item) -> SmallVector<hir::ItemId> {\n         match i.node {\n             ItemKind::Use(ref use_tree) => {\n@@ -3085,21 +3124,18 @@ impl<'a> LoweringContext<'a> {\n             }\n             ItemKind::MacroDef(..) => SmallVector::new(),\n             ItemKind::Fn(ref decl, ..) => {\n-                struct IdVisitor { ids: SmallVector<hir::ItemId> }\n-                impl<'a> Visitor<'a> for IdVisitor {\n-                    fn visit_ty(&mut self, ty: &'a Ty) {\n-                        if let TyKind::ImplTrait(id, _) = ty.node {\n-                            self.ids.push(hir::ItemId { id });\n-                        }\n-                        visit::walk_ty(self, ty);\n+                let mut ids = SmallVector::one(hir::ItemId { id: i.id });\n+                self.lower_impl_trait_ids(decl, &mut ids);\n+                ids\n+            },\n+            ItemKind::Impl(.., ref items) => {\n+                let mut ids = SmallVector::one(hir::ItemId { id: i.id });\n+                for item in items {\n+                    if let ImplItemKind::Method(ref sig, _) = item.node {\n+                        self.lower_impl_trait_ids(&sig.decl, &mut ids);\n                     }\n                 }\n-                let mut visitor = IdVisitor { ids: SmallVector::one(hir::ItemId { id: i.id }) };\n-                match decl.output {\n-                    FunctionRetTy::Default(_) => {},\n-                    FunctionRetTy::Ty(ref ty) => visitor.visit_ty(ty),\n-                }\n-                visitor.ids\n+                ids\n             },\n             _ => SmallVector::one(hir::ItemId { id: i.id }),\n         }"}]}