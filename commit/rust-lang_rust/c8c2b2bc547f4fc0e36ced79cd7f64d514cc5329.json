{"sha": "c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4YzJiMmJjNTQ3ZjRmYzBlMzZjZWQ3OWNkN2Y2NGQ1MTRjYzUzMjk=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-11T15:36:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-11T15:36:57Z"}, "message": "Rollup merge of #68824 - ajpaverd:cfguard-rustbuild, r=Mark-Simulacrum\n\nEnable Control Flow Guard in rustbuild\n\nNow that Rust supports Control Flow Guard (#68180), add a config.toml option to build the standard library with CFG enabled.\n\nr? @nagisa", "tree": {"sha": "d73400050270e15af3d04ed364ecb8ffce0f87f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d73400050270e15af3d04ed364ecb8ffce0f87f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeQsoZCRBK7hj4Ov3rIwAAdHIIAAZwaevimKu+lv/jvJxoCwId\nNKtaBD7/n9173RyUC+j5V8XnDQpbCFg4Gks2izhcT/g+lndXizT+u08dr75EHSPt\n6GOXl3Zx3k8N3CR0howKdxgB0suDvbrMBm/lEssOMCzY5wqDq7Wq6xYlUJpfJC+u\nLPniuLd22QGf2xng24+B6gknuSmT0zLKkSj72kwd0muXJnSy7ymgD846aX/Xe8pw\nX3Gv7hvWvAiYNdc5qYu9fjey2Yf3RURsfobVoUqO5c+TJE9FDO56OIlw7EIu2+qU\nz28Q1jCH6iDqqY4CvqO02sFteazkUc51rXgYFS0a0Pyhqb8unQIxI5g1kqbAywc=\n=87x0\n-----END PGP SIGNATURE-----\n", "payload": "tree d73400050270e15af3d04ed364ecb8ffce0f87f7\nparent b6024c47663c92f43a125bcafd7f6fffd058d2c1\nparent 87df124ba77a2ce64e11782bddeadae85d26603d\nauthor Dylan DPC <dylan.dpc@gmail.com> 1581435417 +0100\ncommitter GitHub <noreply@github.com> 1581435417 +0100\n\nRollup merge of #68824 - ajpaverd:cfguard-rustbuild, r=Mark-Simulacrum\n\nEnable Control Flow Guard in rustbuild\n\nNow that Rust supports Control Flow Guard (#68180), add a config.toml option to build the standard library with CFG enabled.\n\nr? @nagisa\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329", "html_url": "https://github.com/rust-lang/rust/commit/c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6024c47663c92f43a125bcafd7f6fffd058d2c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6024c47663c92f43a125bcafd7f6fffd058d2c1", "html_url": "https://github.com/rust-lang/rust/commit/b6024c47663c92f43a125bcafd7f6fffd058d2c1"}, {"sha": "87df124ba77a2ce64e11782bddeadae85d26603d", "url": "https://api.github.com/repos/rust-lang/rust/commits/87df124ba77a2ce64e11782bddeadae85d26603d", "html_url": "https://github.com/rust-lang/rust/commit/87df124ba77a2ce64e11782bddeadae85d26603d"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "9b7327ea69e0b1663f3c83b5ed6f9f0bacf36ed0", "filename": "config.toml.example", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329", "patch": "@@ -444,6 +444,10 @@\n # Use LLVM libunwind as the implementation for Rust's unwinder.\n #llvm-libunwind = false\n \n+# Enable Windows Control Flow Guard checks in the standard library.\n+# This only applies from stage 1 onwards, and only for Windows targets.\n+#control-flow-guard = false\n+\n # =============================================================================\n # Options for specific targets\n #"}, {"sha": "e4b57cddfb891e86e1ed005d0e996216e230010f", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329", "patch": "@@ -1135,6 +1135,20 @@ impl<'a> Builder<'a> {\n             );\n         }\n \n+        // If Control Flow Guard is enabled, pass the `control_flow_guard=checks` flag to rustc\n+        // when compiling the standard library, since this might be linked into the final outputs\n+        // produced by rustc. Since this mitigation is only available on Windows, only enable it\n+        // for the standard library in case the compiler is run on a non-Windows platform.\n+        // This is not needed for stage 0 artifacts because these will only be used for building\n+        // the stage 1 compiler.\n+        if cfg!(windows)\n+            && mode == Mode::Std\n+            && self.config.control_flow_guard\n+            && compiler.stage >= 1\n+        {\n+            rustflags.arg(\"-Zcontrol_flow_guard=checks\");\n+        }\n+\n         // For `cargo doc` invocations, make rustdoc print the Rust version into the docs\n         cargo.env(\"RUSTDOC_CRATE_VERSION\", self.rust_version());\n "}, {"sha": "214d572329ec6c5b16f598f29a6ce815b70d56a9", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329", "patch": "@@ -116,6 +116,7 @@ pub struct Config {\n     pub targets: Vec<Interned<String>>,\n     pub local_rebuild: bool,\n     pub jemalloc: bool,\n+    pub control_flow_guard: bool,\n \n     // dist misc\n     pub dist_sign_folder: Option<PathBuf>,\n@@ -333,6 +334,7 @@ struct Rust {\n     jemalloc: Option<bool>,\n     test_compare_mode: Option<bool>,\n     llvm_libunwind: Option<bool>,\n+    control_flow_guard: Option<bool>,\n }\n \n /// TOML representation of how each build target is configured.\n@@ -580,6 +582,7 @@ impl Config {\n             set(&mut config.rust_verify_llvm_ir, rust.verify_llvm_ir);\n             config.rust_thin_lto_import_instr_limit = rust.thin_lto_import_instr_limit;\n             set(&mut config.rust_remap_debuginfo, rust.remap_debuginfo);\n+            set(&mut config.control_flow_guard, rust.control_flow_guard);\n \n             if let Some(ref backends) = rust.codegen_backends {\n                 config.rust_codegen_backends ="}, {"sha": "1fdd5d13e7fe7998fc14749dcd9219b77bacc746", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329", "patch": "@@ -60,6 +60,7 @@ def v(*args):\n o(\"lldb\", \"rust.lldb\", \"build lldb\")\n o(\"missing-tools\", \"dist.missing-tools\", \"allow failures when building tools\")\n o(\"use-libcxx\", \"llvm.use-libcxx\", \"build LLVM with libc++\")\n+o(\"control-flow-guard\", \"rust.control-flow-guard\", \"Enable Control Flow Guard\")\n \n o(\"cflags\", \"llvm.cflags\", \"build LLVM with these extra compiler flags\")\n o(\"cxxflags\", \"llvm.cxxflags\", \"build LLVM with these extra compiler flags\")"}, {"sha": "f871df46250bad569081a30e083ef0df778d2067", "filename": "src/doc/unstable-book/src/compiler-flags/control-flow-guard.md", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fcontrol-flow-guard.md", "raw_url": "https://github.com/rust-lang/rust/raw/c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fcontrol-flow-guard.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fcontrol-flow-guard.md?ref=c8c2b2bc547f4fc0e36ced79cd7f64d514cc5329", "patch": "@@ -0,0 +1,34 @@\n+# `control_flow_guard`\n+\n+The tracking issue for this feature is: [#68793](https://github.com/rust-lang/rust/issues/68793).\n+\n+------------------------\n+\n+The `-Zcontrol_flow_guard=checks` compiler flag enables the Windows [Control Flow Guard][cfguard-docs] platform security feature. When enabled, the compiler outputs a list of valid indirect call targets, and inserts runtime checks on all indirect jump instructions to ensure that the destination is in the list of valid call targets.\n+\n+[cfguard-docs]: https://docs.microsoft.com/en-us/windows/win32/secbp/control-flow-guard\n+\n+For testing purposes, the `-Zcontrol_flow_guard=nochecks` compiler flag can be used to emit only the list of valid call targets, but not the runtime checks.\n+\n+It is strongly recommended to also enable Control Flow Guard checks in all linked libraries, including the standard library. \n+\n+To enable Control Flow Guard in the standard library, you can use the [cargo `-Zbuild-std` functionality][build-std] to recompile the standard library with the same configuration options as the main program. \n+\n+[build-std]: https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#build-std\n+\n+For example:\n+```cmd\n+rustup toolchain install --force nightly\n+rustup component add rust-src\n+SET RUSTFLAGS=-Zcontrol_flow_guard=checks\n+cargo +nightly build -Z build-std --target x86_64-pc-windows-msvc\n+```\n+\n+```PowerShell\n+rustup toolchain install --force nightly\n+rustup component add rust-src\n+$Env:RUSTFLAGS = \"-Zcontrol_flow_guard=checks\"\n+cargo +nightly build -Z build-std --target x86_64-pc-windows-msvc\n+```\n+\n+Alternatively, if you are building the standard library from source, you can set `control-flow-guard = true` in the config.toml file."}]}