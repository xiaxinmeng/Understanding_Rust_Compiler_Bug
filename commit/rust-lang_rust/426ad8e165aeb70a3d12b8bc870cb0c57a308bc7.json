{"sha": "426ad8e165aeb70a3d12b8bc870cb0c57a308bc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyNmFkOGUxNjVhZWI3MGEzZDEyYjhiYzg3MGNiMGM1N2EzMDhiYzc=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-01-28T18:06:33Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-01-28T18:08:55Z"}, "message": "Classify function calls as functions when shadowed by types", "tree": {"sha": "d40c9d6ed4a234a0d3a56d14f64f97b8bf7fdf8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d40c9d6ed4a234a0d3a56d14f64f97b8bf7fdf8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/426ad8e165aeb70a3d12b8bc870cb0c57a308bc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/426ad8e165aeb70a3d12b8bc870cb0c57a308bc7", "html_url": "https://github.com/rust-lang/rust/commit/426ad8e165aeb70a3d12b8bc870cb0c57a308bc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/426ad8e165aeb70a3d12b8bc870cb0c57a308bc7/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f421ee672253499b8ca8d1badf98db42525a5216", "url": "https://api.github.com/repos/rust-lang/rust/commits/f421ee672253499b8ca8d1badf98db42525a5216", "html_url": "https://github.com/rust-lang/rust/commit/f421ee672253499b8ca8d1badf98db42525a5216"}], "stats": {"total": 47, "additions": 31, "deletions": 16}, "files": [{"sha": "524120d0858000fccfd8e4643c397e9a253c076f", "filename": "crates/hir/src/source_analyzer.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/426ad8e165aeb70a3d12b8bc870cb0c57a308bc7/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/426ad8e165aeb70a3d12b8bc870cb0c57a308bc7/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs?ref=426ad8e165aeb70a3d12b8bc870cb0c57a308bc7", "patch": "@@ -224,14 +224,18 @@ impl SourceAnalyzer {\n     ) -> Option<PathResolution> {\n         if let Some(path_expr) = path.syntax().parent().and_then(ast::PathExpr::cast) {\n             let expr_id = self.expr_id(db, &path_expr.into())?;\n-            if let Some(assoc) = self.infer.as_ref()?.assoc_resolutions_for_expr(expr_id) {\n+            let infer = self.infer.as_ref()?;\n+            if let Some(assoc) = infer.assoc_resolutions_for_expr(expr_id) {\n                 return Some(PathResolution::AssocItem(assoc.into()));\n             }\n             if let Some(VariantId::EnumVariantId(variant)) =\n-                self.infer.as_ref()?.variant_resolution_for_expr(expr_id)\n+                infer.variant_resolution_for_expr(expr_id)\n             {\n                 return Some(PathResolution::Def(ModuleDef::Variant(variant.into())));\n             }\n+            if let Some(func) = infer[expr_id].as_fn_def() {\n+                return Some(PathResolution::Def(ModuleDef::Function(func.into())));\n+            }\n         }\n \n         if let Some(path_pat) = path.syntax().parent().and_then(ast::PathPat::cast) {"}, {"sha": "9c506112da2c5f32f96f19a53d9b9dcf21cb364a", "filename": "crates/hir_ty/src/diagnostics/unsafe_check.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/426ad8e165aeb70a3d12b8bc870cb0c57a308bc7/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Funsafe_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/426ad8e165aeb70a3d12b8bc870cb0c57a308bc7/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Funsafe_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Funsafe_check.rs?ref=426ad8e165aeb70a3d12b8bc870cb0c57a308bc7", "patch": "@@ -12,8 +12,7 @@ use hir_def::{\n use hir_expand::diagnostics::DiagnosticSink;\n \n use crate::{\n-    db::HirDatabase, diagnostics::MissingUnsafe, lower::CallableDefId, ApplicationTy,\n-    InferenceResult, Ty, TypeCtor,\n+    db::HirDatabase, diagnostics::MissingUnsafe, ApplicationTy, InferenceResult, Ty, TypeCtor,\n };\n \n pub(super) struct UnsafeValidator<'a, 'b: 'a> {\n@@ -87,13 +86,8 @@ fn walk_unsafe(\n ) {\n     let expr = &body.exprs[current];\n     match expr {\n-        Expr::Call { callee, .. } => {\n-            let ty = &infer[*callee];\n-            if let &Ty::Apply(ApplicationTy {\n-                ctor: TypeCtor::FnDef(CallableDefId::FunctionId(func)),\n-                ..\n-            }) = ty\n-            {\n+        &Expr::Call { callee, .. } => {\n+            if let Some(func) = infer[callee].as_fn_def() {\n                 if db.function_data(func).is_unsafe {\n                     unsafe_exprs.push(UnsafeExpr { expr: current, inside_unsafe_block });\n                 }"}, {"sha": "6bec389f83ebed638935ca96294135bed7cc4c06", "filename": "crates/hir_ty/src/lib.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/426ad8e165aeb70a3d12b8bc870cb0c57a308bc7/crates%2Fhir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/426ad8e165aeb70a3d12b8bc870cb0c57a308bc7/crates%2Fhir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flib.rs?ref=426ad8e165aeb70a3d12b8bc870cb0c57a308bc7", "patch": "@@ -29,8 +29,8 @@ use base_db::{salsa, CrateId};\n use hir_def::{\n     expr::ExprId,\n     type_ref::{Mutability, Rawness},\n-    AdtId, AssocContainerId, DefWithBodyId, GenericDefId, HasModule, LifetimeParamId, Lookup,\n-    TraitId, TypeAliasId, TypeParamId,\n+    AdtId, AssocContainerId, DefWithBodyId, FunctionId, GenericDefId, HasModule, LifetimeParamId,\n+    Lookup, TraitId, TypeAliasId, TypeParamId,\n };\n use itertools::Itertools;\n \n@@ -43,10 +43,9 @@ use crate::{\n \n pub use autoderef::autoderef;\n pub use infer::{InferTy, InferenceResult};\n-pub use lower::CallableDefId;\n pub use lower::{\n-    associated_type_shorthand_candidates, callable_item_sig, ImplTraitLoweringMode, TyDefId,\n-    TyLoweringContext, ValueTyDefId,\n+    associated_type_shorthand_candidates, callable_item_sig, CallableDefId, ImplTraitLoweringMode,\n+    TyDefId, TyLoweringContext, ValueTyDefId,\n };\n pub use traits::{InEnvironment, Obligation, ProjectionPredicate, TraitEnvironment};\n \n@@ -824,6 +823,16 @@ impl Ty {\n         }\n     }\n \n+    pub fn as_fn_def(&self) -> Option<FunctionId> {\n+        match self {\n+            &Ty::Apply(ApplicationTy {\n+                ctor: TypeCtor::FnDef(CallableDefId::FunctionId(func)),\n+                ..\n+            }) => Some(func),\n+            _ => None,\n+        }\n+    }\n+\n     pub fn callable_sig(&self, db: &dyn HirDatabase) -> Option<FnSig> {\n         match self {\n             Ty::Apply(a_ty) => match a_ty.ctor {"}, {"sha": "2f983c0b8a1977263c92f612083f31f6c075fb51", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/426ad8e165aeb70a3d12b8bc870cb0c57a308bc7/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/426ad8e165aeb70a3d12b8bc870cb0c57a308bc7/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=426ad8e165aeb70a3d12b8bc870cb0c57a308bc7", "patch": "@@ -108,6 +108,10 @@\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">str</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"function\">str</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+<span class=\"brace\">}</span>\n+\n <span class=\"keyword\">static</span> <span class=\"keyword\">mut</span> <span class=\"static declaration mutable unsafe\">STATIC_MUT</span><span class=\"colon\">:</span> <span class=\"builtin_type\">i32</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"semicolon\">;</span>\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"angle\">&lt;</span><span class=\"lifetime declaration\">'a</span><span class=\"comma\">,</span> <span class=\"type_param declaration\">T</span><span class=\"angle\">&gt;</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"type_param\">T</span> <span class=\"brace\">{</span>"}, {"sha": "1854da914213ec4d59828982ce5cd15d8ae1436b", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/426ad8e165aeb70a3d12b8bc870cb0c57a308bc7/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/426ad8e165aeb70a3d12b8bc870cb0c57a308bc7/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=426ad8e165aeb70a3d12b8bc870cb0c57a308bc7", "patch": "@@ -81,6 +81,10 @@ impl FooCopy {\n     }\n }\n \n+fn str() {\n+    str();\n+}\n+\n static mut STATIC_MUT: i32 = 0;\n \n fn foo<'a, T>() -> T {"}]}