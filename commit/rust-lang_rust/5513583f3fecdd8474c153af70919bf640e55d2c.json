{"sha": "5513583f3fecdd8474c153af70919bf640e55d2c", "node_id": "C_kwDOAAsO6NoAKDU1MTM1ODNmM2ZlY2RkODQ3NGMxNTNhZjcwOTE5YmY2NDBlNTVkMmM", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-10-21T10:58:33Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-10-27T14:49:24Z"}, "message": "Stop using a deprecated function", "tree": {"sha": "65c95d63ca01a6911d17dcaa840e8fff9579cd88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65c95d63ca01a6911d17dcaa840e8fff9579cd88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5513583f3fecdd8474c153af70919bf640e55d2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5513583f3fecdd8474c153af70919bf640e55d2c", "html_url": "https://github.com/rust-lang/rust/commit/5513583f3fecdd8474c153af70919bf640e55d2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5513583f3fecdd8474c153af70919bf640e55d2c/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3fe9a8baa154d434983356cf1ee8d240a7bb75c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3fe9a8baa154d434983356cf1ee8d240a7bb75c", "html_url": "https://github.com/rust-lang/rust/commit/d3fe9a8baa154d434983356cf1ee8d240a7bb75c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "75f968f3f4b8dcf105edb576691d8d55e7dde13f", "filename": "src/value_and_place.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5513583f3fecdd8474c153af70919bf640e55d2c/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5513583f3fecdd8474c153af70919bf640e55d2c/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=5513583f3fecdd8474c153af70919bf640e55d2c", "patch": "@@ -392,7 +392,7 @@ impl<'tcx> CPlace<'tcx> {\n         local: Local,\n         layout: TyAndLayout<'tcx>,\n     ) -> CPlace<'tcx> {\n-        let var = Variable::with_u32(fx.next_ssa_var);\n+        let var = Variable::from_u32(fx.next_ssa_var);\n         fx.next_ssa_var += 1;\n         fx.bcx.declare_var(var, fx.clif_type(layout.ty).unwrap());\n         CPlace { inner: CPlaceInner::Var(local, var), layout }\n@@ -403,9 +403,9 @@ impl<'tcx> CPlace<'tcx> {\n         local: Local,\n         layout: TyAndLayout<'tcx>,\n     ) -> CPlace<'tcx> {\n-        let var1 = Variable::with_u32(fx.next_ssa_var);\n+        let var1 = Variable::from_u32(fx.next_ssa_var);\n         fx.next_ssa_var += 1;\n-        let var2 = Variable::with_u32(fx.next_ssa_var);\n+        let var2 = Variable::from_u32(fx.next_ssa_var);\n         fx.next_ssa_var += 1;\n \n         let (ty1, ty2) = fx.clif_pair_type(layout.ty).unwrap();"}]}