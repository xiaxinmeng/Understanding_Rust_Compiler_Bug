{"sha": "837bc9906552af5da429bef4b37be588b8d2f49d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzN2JjOTkwNjU1MmFmNWRhNDI5YmVmNGIzN2JlNTg4YjhkMmY0OWQ=", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2020-12-31T16:10:13Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-01-15T21:41:13Z"}, "message": "Initial implementation of redundant_slicing lint", "tree": {"sha": "f0198a840f1d37d6667322b3dc60cea11d6dfef7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0198a840f1d37d6667322b3dc60cea11d6dfef7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/837bc9906552af5da429bef4b37be588b8d2f49d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nComment: Created with Krypton\n\niF4EABYKAAYFAmACC/oACgkQ2lnoZDo37QZNSAEAonuYzsXhq9aV/wzbrSNUEWrU\ni+n/g+pqQ6X1/k4BOZUBAJNEiS3g0ia+mqaU7a/qN7p7ahL1ARwjJO1PlsEzX3MH\n=j202\n-----END PGP SIGNATURE-----", "payload": "tree f0198a840f1d37d6667322b3dc60cea11d6dfef7\nparent 3577cf79de342fd5e98775fe89560d918ca3793a\nauthor Jason Newcomb <jsnewcomb@pm.me> 1609431013 -0500\ncommitter Jason Newcomb <jsnewcomb@pm.me> 1610746873 -0500\n\nInitial implementation of redundant_slicing lint\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/837bc9906552af5da429bef4b37be588b8d2f49d", "html_url": "https://github.com/rust-lang/rust/commit/837bc9906552af5da429bef4b37be588b8d2f49d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/837bc9906552af5da429bef4b37be588b8d2f49d/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3577cf79de342fd5e98775fe89560d918ca3793a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3577cf79de342fd5e98775fe89560d918ca3793a", "html_url": "https://github.com/rust-lang/rust/commit/3577cf79de342fd5e98775fe89560d918ca3793a"}], "stats": {"total": 89, "additions": 89, "deletions": 0}, "files": [{"sha": "85f6929f924e2474cdbacd7237889a207a00d722", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/837bc9906552af5da429bef4b37be588b8d2f49d/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/837bc9906552af5da429bef4b37be588b8d2f49d/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=837bc9906552af5da429bef4b37be588b8d2f49d", "patch": "@@ -2162,6 +2162,7 @@ Released 2018-09-13\n [`redundant_pattern`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern\n [`redundant_pattern_matching`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching\n [`redundant_pub_crate`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pub_crate\n+[`redundant_slicing`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_slicing\n [`redundant_static_lifetimes`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n [`ref_in_deref`]: https://rust-lang.github.io/rust-clippy/master/index.html#ref_in_deref\n [`ref_option_ref`]: https://rust-lang.github.io/rust-clippy/master/index.html#ref_option_ref"}, {"sha": "70fdfd22caa068542ad463fd9f7754922bf1a095", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/837bc9906552af5da429bef4b37be588b8d2f49d/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/837bc9906552af5da429bef4b37be588b8d2f49d/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=837bc9906552af5da429bef4b37be588b8d2f49d", "patch": "@@ -301,6 +301,7 @@ mod redundant_closure_call;\n mod redundant_else;\n mod redundant_field_names;\n mod redundant_pub_crate;\n+mod redundant_slicing;\n mod redundant_static_lifetimes;\n mod ref_option_ref;\n mod reference;\n@@ -849,6 +850,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &redundant_else::REDUNDANT_ELSE,\n         &redundant_field_names::REDUNDANT_FIELD_NAMES,\n         &redundant_pub_crate::REDUNDANT_PUB_CRATE,\n+        &redundant_slicing::REDUNDANT_SLICING,\n         &redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES,\n         &ref_option_ref::REF_OPTION_REF,\n         &reference::DEREF_ADDROF,\n@@ -1229,6 +1231,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| box vec_init_then_push::VecInitThenPush::default());\n     store.register_late_pass(move || box types::PtrAsPtr::new(msrv));\n     store.register_late_pass(|| box case_sensitive_file_extension_comparisons::CaseSensitiveFileExtensionComparisons);\n+    store.register_late_pass(|| box redundant_slicing::RedundantSlicing);\n \n     store.register_group(true, \"clippy::restriction\", Some(\"clippy_restriction\"), vec![\n         LintId::of(&arithmetic::FLOAT_ARITHMETIC),\n@@ -1591,6 +1594,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&redundant_clone::REDUNDANT_CLONE),\n         LintId::of(&redundant_closure_call::REDUNDANT_CLOSURE_CALL),\n         LintId::of(&redundant_field_names::REDUNDANT_FIELD_NAMES),\n+        LintId::of(&redundant_slicing::REDUNDANT_SLICING),\n         LintId::of(&redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES),\n         LintId::of(&reference::DEREF_ADDROF),\n         LintId::of(&reference::REF_IN_DEREF),\n@@ -1835,6 +1839,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&ptr_offset_with_cast::PTR_OFFSET_WITH_CAST),\n         LintId::of(&ranges::RANGE_ZIP_WITH_LEN),\n         LintId::of(&redundant_closure_call::REDUNDANT_CLOSURE_CALL),\n+        LintId::of(&redundant_slicing::REDUNDANT_SLICING),\n         LintId::of(&reference::DEREF_ADDROF),\n         LintId::of(&reference::REF_IN_DEREF),\n         LintId::of(&repeat_once::REPEAT_ONCE),"}, {"sha": "686298b69432090a1841d98ff5d0b81b1976d1b8", "filename": "clippy_lints/src/redundant_slicing.rs", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/837bc9906552af5da429bef4b37be588b8d2f49d/clippy_lints%2Fsrc%2Fredundant_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/837bc9906552af5da429bef4b37be588b8d2f49d/clippy_lints%2Fsrc%2Fredundant_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_slicing.rs?ref=837bc9906552af5da429bef4b37be588b8d2f49d", "patch": "@@ -0,0 +1,56 @@\n+use if_chain::if_chain;\n+use rustc_errors::Applicability;\n+use rustc_hir::{Expr, ExprKind, LangItem};\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::TyS;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+use crate::utils::{is_type_lang_item, snippet_with_applicability, span_lint_and_sugg};\n+\n+declare_clippy_lint! {\n+    /// **What it does:** Checks for redundant slicing expressions which use the full range, and\n+    /// do not change the type.\n+    ///\n+    /// **Why is this bad?** It unnecessarily adds complexity to the expression.\n+    ///\n+    /// **Known problems:** If the type being sliced has an implementation of `Index<RangeFull>`\n+    /// that actually changes anything then it can't be removed. However, this would be surprising\n+    /// to people reading the code and should have a note with it.\n+    ///\n+    /// **Example:**\n+    ///\n+    /// ```ignore\n+    /// fn get_slice(x: &[u32]) -> &[u32] {\n+    ///     &x[..]\n+    /// }\n+    /// ```\n+    /// Use instead:\n+    /// ```ignore\n+    /// fn get_slice(x: &[u32]) -> &[u32] {\n+    ///     x\n+    /// }\n+    /// ```\n+    pub REDUNDANT_SLICING,\n+    complexity,\n+    \"redundant slicing of the whole range of a type\"\n+}\n+\n+declare_lint_pass!(RedundantSlicing => [REDUNDANT_SLICING]);\n+\n+impl LateLintPass<'_> for RedundantSlicing {\n+    fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n+        if_chain! {\n+            if let ExprKind::AddrOf(_, _, addressee) = expr.kind;\n+            if let ExprKind::Index(indexed, range) = addressee.kind;\n+            if is_type_lang_item(cx, cx.typeck_results().expr_ty_adjusted(range), LangItem::RangeFull);\n+            if TyS::same_type(cx.typeck_results().expr_ty(expr), cx.typeck_results().expr_ty(indexed));\n+            then {\n+                let mut app = Applicability::MachineApplicable;\n+                let hint = snippet_with_applicability(cx, indexed.span, \"..\", &mut app).into_owned();\n+\n+                span_lint_and_sugg(cx, REDUNDANT_SLICING, expr.span, \"redundant slicing of the whole range\",\n+                    \"use the original slice instead\", hint, app);\n+            }\n+        }\n+    }\n+}"}, {"sha": "922b8b4ce57f613069b5c5a0c9575f0f6f2bf13a", "filename": "tests/ui/redundant_slicing.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/837bc9906552af5da429bef4b37be588b8d2f49d/tests%2Fui%2Fredundant_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/837bc9906552af5da429bef4b37be588b8d2f49d/tests%2Fui%2Fredundant_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_slicing.rs?ref=837bc9906552af5da429bef4b37be588b8d2f49d", "patch": "@@ -0,0 +1,11 @@\n+#![allow(unused)]\n+#![warn(clippy::redundant_slicing)]\n+\n+fn main() {\n+    let x: &[u32] = &[0];\n+    let err = &x[..];\n+\n+    let v = vec![0];\n+    let ok = &v[..];\n+    let err = &(&v[..])[..];\n+}"}, {"sha": "9efd6484ad0c1769f884f59f75b5792aa1ed1b19", "filename": "tests/ui/redundant_slicing.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/837bc9906552af5da429bef4b37be588b8d2f49d/tests%2Fui%2Fredundant_slicing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/837bc9906552af5da429bef4b37be588b8d2f49d/tests%2Fui%2Fredundant_slicing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_slicing.stderr?ref=837bc9906552af5da429bef4b37be588b8d2f49d", "patch": "@@ -0,0 +1,16 @@\n+error: redundant slicing of the whole range\n+  --> $DIR/redundant_slicing.rs:6:15\n+   |\n+LL |     let err = &x[..];\n+   |               ^^^^^^ help: use the original slice instead: `x`\n+   |\n+   = note: `-D clippy::redundant-slicing` implied by `-D warnings`\n+\n+error: redundant slicing of the whole range\n+  --> $DIR/redundant_slicing.rs:10:15\n+   |\n+LL |     let err = &(&v[..])[..];\n+   |               ^^^^^^^^^^^^^ help: use the original slice instead: `(&v[..])`\n+\n+error: aborting due to 2 previous errors\n+"}]}