{"sha": "079b07df55636533db6d135f22cc235eb2e2b869", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3OWIwN2RmNTU2MzY1MzNkYjZkMTM1ZjIyY2MyMzVlYjJlMmI4Njk=", "commit": {"author": {"name": "Fedor Indutny", "email": "fedor.indutny@gmail.com", "date": "2013-06-20T11:44:42Z"}, "committer": {"name": "Fedor Indutny", "email": "fedor.indutny@gmail.com", "date": "2013-06-24T17:04:00Z"}, "message": "libc: support functions from sys/mman.h\n\nBecause its part of POSIX. Values are taken from FreeBSD, linux\nand OSX header files.", "tree": {"sha": "571769755eda463ab6ef528592517ba8ec8f0dcf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/571769755eda463ab6ef528592517ba8ec8f0dcf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/079b07df55636533db6d135f22cc235eb2e2b869", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/079b07df55636533db6d135f22cc235eb2e2b869", "html_url": "https://github.com/rust-lang/rust/commit/079b07df55636533db6d135f22cc235eb2e2b869", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/079b07df55636533db6d135f22cc235eb2e2b869/comments", "author": {"login": "indutny", "id": 238531, "node_id": "MDQ6VXNlcjIzODUzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/238531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/indutny", "html_url": "https://github.com/indutny", "followers_url": "https://api.github.com/users/indutny/followers", "following_url": "https://api.github.com/users/indutny/following{/other_user}", "gists_url": "https://api.github.com/users/indutny/gists{/gist_id}", "starred_url": "https://api.github.com/users/indutny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/indutny/subscriptions", "organizations_url": "https://api.github.com/users/indutny/orgs", "repos_url": "https://api.github.com/users/indutny/repos", "events_url": "https://api.github.com/users/indutny/events{/privacy}", "received_events_url": "https://api.github.com/users/indutny/received_events", "type": "User", "site_admin": false}, "committer": {"login": "indutny", "id": 238531, "node_id": "MDQ6VXNlcjIzODUzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/238531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/indutny", "html_url": "https://github.com/indutny", "followers_url": "https://api.github.com/users/indutny/followers", "following_url": "https://api.github.com/users/indutny/following{/other_user}", "gists_url": "https://api.github.com/users/indutny/gists{/gist_id}", "starred_url": "https://api.github.com/users/indutny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/indutny/subscriptions", "organizations_url": "https://api.github.com/users/indutny/orgs", "repos_url": "https://api.github.com/users/indutny/repos", "events_url": "https://api.github.com/users/indutny/events{/privacy}", "received_events_url": "https://api.github.com/users/indutny/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6515ee6a7f424679e2b53336974a991dd3b71c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6515ee6a7f424679e2b53336974a991dd3b71c8", "html_url": "https://github.com/rust-lang/rust/commit/c6515ee6a7f424679e2b53336974a991dd3b71c8"}], "stats": {"total": 271, "additions": 269, "deletions": 2}, "files": [{"sha": "2aaeda69326b66842c37ffd7ceb34c30949f48ed", "filename": "src/libstd/libc.rs", "status": "modified", "additions": 269, "deletions": 2, "changes": 271, "blob_url": "https://github.com/rust-lang/rust/blob/079b07df55636533db6d135f22cc235eb2e2b869/src%2Flibstd%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/079b07df55636533db6d135f22cc235eb2e2b869/src%2Flibstd%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flibc.rs?ref=079b07df55636533db6d135f22cc235eb2e2b869", "patch": "@@ -102,10 +102,12 @@ pub use libc::funcs::posix88::stdio::*;\n pub use libc::funcs::posix88::fcntl::*;\n pub use libc::funcs::posix88::dirent::*;\n pub use libc::funcs::posix88::unistd::*;\n+pub use libc::funcs::posix88::mman::*;\n \n pub use libc::funcs::posix01::stat_::*;\n pub use libc::funcs::posix01::unistd::*;\n pub use libc::funcs::posix01::glob::*;\n+pub use libc::funcs::posix01::mman::*;\n pub use libc::funcs::posix08::unistd::*;\n \n pub use libc::funcs::bsd44::*;\n@@ -1043,6 +1045,8 @@ pub mod consts {\n         #[cfg(target_arch = \"x86_64\")]\n         #[cfg(target_arch = \"arm\")]\n         pub mod posix88 {\n+            use libc::types::common::c95::c_void;\n+\n             pub static O_RDONLY : int = 0;\n             pub static O_WRONLY : int = 1;\n             pub static O_RDWR : int = 2;\n@@ -1085,9 +1089,31 @@ pub mod consts {\n             pub static SIGPIPE : int = 13;\n             pub static SIGALRM : int = 14;\n             pub static SIGTERM : int = 15;\n+\n+            pub static PROT_NONE : int = 0;\n+            pub static PROT_READ : int = 1;\n+            pub static PROT_WRITE : int = 2;\n+            pub static PROT_EXEC : int = 4;\n+\n+            pub static MAP_FILE : int = 0x0000;\n+            pub static MAP_SHARED : int = 0x0001;\n+            pub static MAP_PRIVATE : int = 0x0002;\n+            pub static MAP_FIXED : int = 0x0010;\n+            pub static MAP_ANON : int = 0x1000;\n+\n+            pub static MAP_FAILED : *c_void = -1 as *c_void;\n+\n+            pub static MCL_CURRENT : int = 0x0001;\n+            pub static MCL_FUTURE : int = 0x0002;\n+\n+            pub static MS_ASYNC : int = 0x0001;\n+            pub static MS_INVALIDATE : int = 0x0002;\n+            pub static MS_SYNC : int = 0x0004;\n         }\n         #[cfg(target_arch = \"mips\")]\n         pub mod posix88 {\n+            use libc::types::common::c95::c_void;\n+\n             pub static O_RDONLY : int = 0;\n             pub static O_WRONLY : int = 1;\n             pub static O_RDWR : int = 2;\n@@ -1130,6 +1156,26 @@ pub mod consts {\n             pub static SIGPIPE : int = 13;\n             pub static SIGALRM : int = 14;\n             pub static SIGTERM : int = 15;\n+\n+            pub static PROT_NONE : int = 0;\n+            pub static PROT_READ : int = 1;\n+            pub static PROT_WRITE : int = 2;\n+            pub static PROT_EXEC : int = 4;\n+\n+            pub static MAP_FILE : int = 0x0000;\n+            pub static MAP_SHARED : int = 0x0001;\n+            pub static MAP_PRIVATE : int = 0x0002;\n+            pub static MAP_FIXED : int = 0x0010;\n+            pub static MAP_ANON : int = 0x1000;\n+\n+            pub static MAP_FAILED : *c_void = -1 as *c_void;\n+\n+            pub static MCL_CURRENT : int = 0x0001;\n+            pub static MCL_FUTURE : int = 0x0002;\n+\n+            pub static MS_ASYNC : int = 0x0001;\n+            pub static MS_INVALIDATE : int = 0x0002;\n+            pub static MS_SYNC : int = 0x0004;\n         }\n         pub mod posix01 {\n             pub static SIGTRAP : int = 5;\n@@ -1145,10 +1191,27 @@ pub mod consts {\n             pub static GLOB_NOSPACE  : int = 1;\n             pub static GLOB_ABORTED  : int = 2;\n             pub static GLOB_NOMATCH  : int = 3;\n+\n+            pub static POSIX_MADV_NORMAL : int = 0;\n+            pub static POSIX_MADV_RANDOM : int = 1;\n+            pub static POSIX_MADV_SEQUENTIAL : int = 2;\n+            pub static POSIX_MADV_WILLNEED : int = 3;\n+            pub static POSIX_MADV_DONTNEED : int = 4;\n         }\n         pub mod posix08 {\n         }\n         pub mod bsd44 {\n+            pub static MADV_NORMAL : int = 0;\n+            pub static MADV_RANDOM : int = 1;\n+            pub static MADV_SEQUENTIAL : int = 2;\n+            pub static MADV_WILLNEED : int = 3;\n+            pub static MADV_DONTNEED : int = 4;\n+            pub static MADV_REMOVE : int = 9;\n+            pub static MADV_DONTFORK : int = 10;\n+            pub static MADV_DOFORK : int = 11;\n+            pub static MADV_MERGEABLE : int = 12;\n+            pub static MADV_UNMERGEABLE : int = 13;\n+            pub static MADV_HWPOISON : int = 100;\n         }\n         #[cfg(target_arch = \"x86\")]\n         #[cfg(target_arch = \"x86_64\")]\n@@ -1157,12 +1220,42 @@ pub mod consts {\n             pub static O_RSYNC : int = 1052672;\n             pub static O_DSYNC : int = 4096;\n             pub static O_SYNC : int = 1052672;\n+\n+            pub static PROT_GROWSDOWN : int = 0x010000000;\n+            pub static PROT_GROWSUP : int = 0x020000000;\n+\n+            pub static MAP_TYPE : int = 0x000f;\n+            pub static MAP_ANONONYMOUS : int = 0x1000;\n+            pub static MAP_32BIT : int = 0x0040;\n+            pub static MAP_GROWSDOWN : int = 0x0100;\n+            pub static MAP_DENYWRITE : int = 0x0800;\n+            pub static MAP_EXECUTABLE : int = 0x01000;\n+            pub static MAP_LOCKED : int = 0x02000;\n+            pub static MAP_NONRESERVE : int = 0x04000;\n+            pub static MAP_POPULATE : int = 0x08000;\n+            pub static MAP_NONBLOCK : int = 0x010000;\n+            pub static MAP_STACK : int = 0x020000;\n         }\n         #[cfg(target_arch = \"mips\")]\n         pub mod extra {\n             pub static O_RSYNC : int = 16400;\n             pub static O_DSYNC : int = 16;\n             pub static O_SYNC : int = 16400;\n+\n+            pub static PROT_GROWSDOWN : int = 0x010000000;\n+            pub static PROT_GROWSUP : int = 0x020000000;\n+\n+            pub static MAP_TYPE : int = 0x000f;\n+            pub static MAP_ANONONYMOUS : int = 0x1000;\n+            pub static MAP_32BIT : int = 0x0040;\n+            pub static MAP_GROWSDOWN : int = 0x0100;\n+            pub static MAP_DENYWRITE : int = 0x0800;\n+            pub static MAP_EXECUTABLE : int = 0x01000;\n+            pub static MAP_LOCKED : int = 0x02000;\n+            pub static MAP_NONRESERVE : int = 0x04000;\n+            pub static MAP_POPULATE : int = 0x08000;\n+            pub static MAP_NONBLOCK : int = 0x010000;\n+            pub static MAP_STACK : int = 0x020000;\n         }\n     }\n \n@@ -1188,6 +1281,8 @@ pub mod consts {\n         pub mod c99 {\n         }\n         pub mod posix88 {\n+            use libc::types::common::c95::c_void;\n+\n             pub static O_RDONLY : int = 0;\n             pub static O_WRONLY : int = 1;\n             pub static O_RDWR : int = 2;\n@@ -1230,6 +1325,26 @@ pub mod consts {\n             pub static SIGPIPE : int = 13;\n             pub static SIGALRM : int = 14;\n             pub static SIGTERM : int = 15;\n+\n+            pub static PROT_NONE : int = 0;\n+            pub static PROT_READ : int = 1;\n+            pub static PROT_WRITE : int = 2;\n+            pub static PROT_EXEC : int = 4;\n+\n+            pub static MAP_FILE : int = 0x0000;\n+            pub static MAP_SHARED : int = 0x0001;\n+            pub static MAP_PRIVATE : int = 0x0002;\n+            pub static MAP_FIXED : int = 0x0010;\n+            pub static MAP_ANON : int = 0x1000;\n+\n+            pub static MAP_FAILED : *c_void = -1 as *c_void;\n+\n+            pub static MCL_CURRENT : int = 0x0001;\n+            pub static MCL_FUTURE : int = 0x0002;\n+\n+            pub static MS_SYNC : int = 0x0000;\n+            pub static MS_ASYNC : int = 0x0001;\n+            pub static MS_INVALIDATE : int = 0x0002;\n         }\n         pub mod posix01 {\n             pub static SIGTRAP : int = 5;\n@@ -1245,16 +1360,48 @@ pub mod consts {\n             pub static GLOB_NOSPACE  : int = -1;\n             pub static GLOB_ABORTED  : int = -2;\n             pub static GLOB_NOMATCH  : int = -3;\n+\n+            pub static POSIX_MADV_NORMAL : int = 0;\n+            pub static POSIX_MADV_RANDOM : int = 1;\n+            pub static POSIX_MADV_SEQUENTIAL : int = 2;\n+            pub static POSIX_MADV_WILLNEED : int = 3;\n+            pub static POSIX_MADV_DONTNEED : int = 4;\n         }\n         pub mod posix08 {\n         }\n         pub mod bsd44 {\n+            pub static MADV_NORMAL : int = 0;\n+            pub static MADV_RANDOM : int = 1;\n+            pub static MADV_SEQUENTIAL : int = 2;\n+            pub static MADV_WILLNEED : int = 3;\n+            pub static MADV_DONTNEED : int = 4;\n+            pub static MADV_FREE : int = 5;\n+            pub static MADV_NOSYNC : int = 6;\n+            pub static MADV_AUTOSYNC : int = 7;\n+            pub static MADV_NOCORE : int = 8;\n+            pub static MADV_CORE : int = 9;\n+            pub static MADV_PROTECT : int = 10;\n+\n+            pub static MINCORE_INCORE : int =  0x1;\n+            pub static MINCORE_REFERENCED : int = 0x2;\n+            pub static MINCORE_MODIFIED : int = 0x4;\n+            pub static MINCORE_REFERENCED_OTHER : int = 0x8;\n+            pub static MINCORE_MODIFIED_OTHER : int = 0x10;\n+            pub static MINCORE_SUPER : int = 0x20;\n         }\n         pub mod extra {\n             pub static O_SYNC : int = 128;\n             pub static CTL_KERN: int = 1;\n             pub static KERN_PROC: int = 14;\n             pub static KERN_PROC_PATHNAME: int = 12;\n+\n+            pub static MAP_COPY : int = 0x0002;\n+            pub static MAP_RENAME : int = 0x0020;\n+            pub static MAP_NORESERVE : int = 0x0040;\n+            pub static MAP_HASSEMAPHORE : int = 0x0200;\n+            pub static MAP_STACK : int = 0x0400;\n+            pub static MAP_NOSYNC : int = 0x0800;\n+            pub static MAP_NOCORE : int = 0x020000;\n         }\n     }\n \n@@ -1280,6 +1427,8 @@ pub mod consts {\n         pub mod c99 {\n         }\n         pub mod posix88 {\n+            use libc::types::common::c95::c_void;\n+\n             pub static O_RDONLY : int = 0;\n             pub static O_WRONLY : int = 1;\n             pub static O_RDWR : int = 2;\n@@ -1322,6 +1471,29 @@ pub mod consts {\n             pub static SIGPIPE : int = 13;\n             pub static SIGALRM : int = 14;\n             pub static SIGTERM : int = 15;\n+\n+            pub static PROT_NONE : int = 0;\n+            pub static PROT_READ : int = 1;\n+            pub static PROT_WRITE : int = 2;\n+            pub static PROT_EXEC : int = 4;\n+\n+            pub static MAP_FILE : int = 0x0000;\n+            pub static MAP_SHARED : int = 0x0001;\n+            pub static MAP_PRIVATE : int = 0x0002;\n+            pub static MAP_FIXED : int = 0x0010;\n+            pub static MAP_ANON : int = 0x1000;\n+\n+            pub static MAP_FAILED : *c_void = -1 as *c_void;\n+\n+            pub static MCL_CURRENT : int = 0x0001;\n+            pub static MCL_FUTURE : int = 0x0002;\n+\n+            pub static MS_ASYNC : int = 0x0001;\n+            pub static MS_INVALIDATE : int = 0x0002;\n+            pub static MS_SYNC : int = 0x0010;\n+\n+            pub static MS_KILLPAGES : int = 0x0004;\n+            pub static MS_DEACTIVATE : int = 0x0008;\n         }\n         pub mod posix01 {\n             pub static SIGTRAP : int = 5;\n@@ -1337,15 +1509,45 @@ pub mod consts {\n             pub static GLOB_NOSPACE  : int = -1;\n             pub static GLOB_ABORTED  : int = -2;\n             pub static GLOB_NOMATCH  : int = -3;\n+\n+            pub static POSIX_MADV_NORMAL : int = 0;\n+            pub static POSIX_MADV_RANDOM : int = 1;\n+            pub static POSIX_MADV_SEQUENTIAL : int = 2;\n+            pub static POSIX_MADV_WILLNEED : int = 3;\n+            pub static POSIX_MADV_DONTNEED : int = 4;\n         }\n         pub mod posix08 {\n         }\n         pub mod bsd44 {\n+            pub static MADV_NORMAL : int = 0;\n+            pub static MADV_RANDOM : int = 1;\n+            pub static MADV_SEQUENTIAL : int = 2;\n+            pub static MADV_WILLNEED : int = 3;\n+            pub static MADV_DONTNEED : int = 4;\n+            pub static MADV_FREE : int = 5;\n+            pub static MADV_ZERO_WIRED_PAGES : int = 6;\n+            pub static MADV_FREE_REUSABLE : int = 7;\n+            pub static MADV_FREE_REUSE : int = 8;\n+            pub static MADV_CAN_REUSE : int = 9;\n+\n+            pub static MINCORE_INCORE : int =  0x1;\n+            pub static MINCORE_REFERENCED : int = 0x2;\n+            pub static MINCORE_MODIFIED : int = 0x4;\n+            pub static MINCORE_REFERENCED_OTHER : int = 0x8;\n+            pub static MINCORE_MODIFIED_OTHER : int = 0x10;\n         }\n         pub mod extra {\n             pub static O_DSYNC : int = 4194304;\n             pub static O_SYNC : int = 128;\n             pub static F_FULLFSYNC : int = 51;\n+\n+            pub static MAP_COPY : int = 0x0002;\n+            pub static MAP_RENAME : int = 0x0020;\n+            pub static MAP_NORESERVE : int = 0x0040;\n+            pub static MAP_NOEXTEND : int = 0x0100;\n+            pub static MAP_HASSEMAPHORE : int = 0x0200;\n+            pub static MAP_NOCACHE : int = 0x0400;\n+            pub static MAP_JIT : int = 0x0800;\n         }\n     }\n }\n@@ -1658,6 +1860,9 @@ pub mod funcs {\n                              -> c_int;\n             }\n         }\n+\n+        pub mod mman {\n+        }\n     }\n \n \n@@ -1835,6 +2040,38 @@ pub mod funcs {\n                 unsafe fn kill(pid: pid_t, sig: c_int) -> c_int;\n             }\n         }\n+\n+        #[nolink]\n+        #[abi = \"cdecl\"]\n+        pub mod mman {\n+            use libc::types::common::c95::{c_void};\n+            use libc::types::os::arch::c95::{size_t, c_int, c_char};\n+            use libc::types::os::arch::posix88::{mode_t, off_t};\n+\n+            pub extern {\n+                unsafe fn mlock(addr: *c_void, len: size_t) -> c_int;\n+                unsafe fn munlock(addr: *c_void, len: size_t) -> c_int;\n+                unsafe fn mlockall(flags: c_int) -> c_int;\n+                unsafe fn munlockall() -> c_int;\n+\n+                unsafe fn mmap(addr: *c_void,\n+                               len: size_t,\n+                               prot: c_int,\n+                               flags: c_int,\n+                               fd: c_int,\n+                               offset: off_t) -> *mut c_void;\n+                unsafe fn munmap(addr: *c_void, len: size_t) -> c_int;\n+\n+                unsafe fn mprotect(addr: *c_void, len: size_t, prot: c_int)\n+                    -> c_int;\n+\n+                unsafe fn msync(addr: *c_void, len: size_t, flags: c_int)\n+                    -> c_int;\n+                unsafe fn shm_open(name: *c_char, oflag: c_int, mode: mode_t)\n+                    -> c_int;\n+                unsafe fn shm_unlink(name: *c_char) -> c_int;\n+            }\n+        }\n     }\n \n     #[cfg(target_os = \"linux\")]\n@@ -1913,6 +2150,19 @@ pub mod funcs {\n                 unsafe fn globfree(pglob: *mut glob_t);\n             }\n         }\n+\n+        #[nolink]\n+        #[abi = \"cdecl\"]\n+        pub mod mman {\n+            use libc::types::common::c95::{c_void};\n+            use libc::types::os::arch::c95::{c_int, size_t};\n+\n+            pub extern {\n+                unsafe fn posix_madvise(addr: *c_void,\n+                                        len: size_t,\n+                                        advice: c_int) -> c_int;\n+            }\n+        }\n     }\n \n     #[cfg(target_os = \"win32\")]\n@@ -1925,6 +2175,9 @@ pub mod funcs {\n \n         pub mod glob {\n         }\n+\n+        pub mod mman {\n+        }\n     }\n \n \n@@ -1943,7 +2196,8 @@ pub mod funcs {\n     #[cfg(target_os = \"freebsd\")]\n     pub mod bsd44 {\n         use libc::types::common::c95::{c_void};\n-        use libc::types::os::arch::c95::{c_char, c_int, c_uint, size_t};\n+        use libc::types::os::arch::c95::{c_char, c_uchar, c_int, c_uint,\n+                                         size_t};\n \n         #[abi = \"cdecl\"]\n         pub extern {\n@@ -1959,18 +2213,31 @@ pub mod funcs {\n                                sizep: *mut size_t) -> c_int;\n \n             unsafe fn getdtablesize() -> c_int;\n+\n+            unsafe fn madvise(addr: *c_void, len: size_t, advice: c_int)\n+                -> c_int;\n+\n+            unsafe fn mincore(addr: *c_void, len: size_t, vec: *c_uchar)\n+                -> c_int;\n         }\n     }\n \n \n     #[cfg(target_os = \"linux\")]\n     #[cfg(target_os = \"android\")]\n     pub mod bsd44 {\n-        use libc::types::os::arch::c95::{c_int};\n+        use libc::types::common::c95::{c_void};\n+        use libc::types::os::arch::c95::{c_uchar, c_int, size_t};\n \n         #[abi = \"cdecl\"]\n         pub extern {\n             unsafe fn getdtablesize() -> c_int;\n+\n+            unsafe fn madvise(addr: *c_void, len: size_t, advice: c_int)\n+                -> c_int;\n+\n+            unsafe fn mincore(addr: *c_void, len: size_t, vec: *c_uchar)\n+                -> c_int;\n         }\n     }\n "}]}