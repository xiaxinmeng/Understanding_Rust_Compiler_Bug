{"sha": "913fe6dbe9425330027b7d75ba16be47d7280d66", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxM2ZlNmRiZTk0MjUzMzAwMjdiN2Q3NWJhMTZiZTQ3ZDcyODBkNjY=", "commit": {"author": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-09-18T14:30:45Z"}, "committer": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-09-18T16:03:59Z"}, "message": "add support for non-standard name of stdc++ library\n\nit makes rustc compatible with gcc installation that are using\n`--program-transform-name' configure flag (on OpenBSD for example).\n\n- detects at configure the name of stdc++ library on the system\n\n- use the detected name in llvm makefile (with enable-static-stdcpp),\n  and pass it to mklldeps.py\n\n- generate mklldeps.rs using this detected name\n\nnote that CFG_STDCPP_NAME is about stdc++ name, not about libc++. If\nusing libc++, the default name will be `stdc++', but it won't be used\nwhen linking.", "tree": {"sha": "d9d59b3632e95b545ddeee0d86a7e06cb085efb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9d59b3632e95b545ddeee0d86a7e06cb085efb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/913fe6dbe9425330027b7d75ba16be47d7280d66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/913fe6dbe9425330027b7d75ba16be47d7280d66", "html_url": "https://github.com/rust-lang/rust/commit/913fe6dbe9425330027b7d75ba16be47d7280d66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/913fe6dbe9425330027b7d75ba16be47d7280d66/comments", "author": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cff04117064ddee95f425c49f22c8aa5a3a665d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/cff04117064ddee95f425c49f22c8aa5a3a665d4", "html_url": "https://github.com/rust-lang/rust/commit/cff04117064ddee95f425c49f22c8aa5a3a665d4"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "1d95965150caea54b84466bbb6d6bb601645f8c0", "filename": "configure", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/913fe6dbe9425330027b7d75ba16be47d7280d66/configure", "raw_url": "https://github.com/rust-lang/rust/raw/913fe6dbe9425330027b7d75ba16be47d7280d66/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=913fe6dbe9425330027b7d75ba16be47d7280d66", "patch": "@@ -1095,6 +1095,12 @@ envopt CPP\n envopt CFLAGS\n envopt CXXFLAGS\n \n+# stdc++ name in use\n+# used to manage non-standard name (on OpenBSD for example)\n+program_transform_name=$($CFG_CC -v 2>&1 | sed -n \"s/.*--program-transform-name='\\([^']*\\)'.*/\\1/p\")\n+CFG_STDCPP_NAME=$(echo \"stdc++\" | sed \"${program_transform_name}\")\n+putvar CFG_STDCPP_NAME\n+\n # a little post-processing of various config values\n CFG_PREFIX=${CFG_PREFIX%/}\n CFG_MANDIR=${CFG_MANDIR%/}"}, {"sha": "1cbf4a9fb841c26db01d99472f25fe9fd931f938", "filename": "mk/llvm.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/913fe6dbe9425330027b7d75ba16be47d7280d66/mk%2Fllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/913fe6dbe9425330027b7d75ba16be47d7280d66/mk%2Fllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fllvm.mk?ref=913fe6dbe9425330027b7d75ba16be47d7280d66", "patch": "@@ -73,7 +73,7 @@ $$(LLVM_STAMP_$(1)): $(S)src/rustllvm/llvm-auto-clean-trigger\n \n ifeq ($$(CFG_ENABLE_LLVM_STATIC_STDCPP),1)\n LLVM_STDCPP_RUSTFLAGS_$(1) = -L \"$$(dir $$(shell $$(CC_$(1)) $$(CFG_GCCISH_CFLAGS_$(1)) \\\n-\t\t\t\t\t-print-file-name=libstdc++.a))\"\n+\t\t\t\t\t-print-file-name=lib$(CFG_STDCPP_NAME).a))\"\n else\n LLVM_STDCPP_RUSTFLAGS_$(1) =\n endif\n@@ -83,7 +83,7 @@ endif\n LLVM_LINKAGE_PATH_$(1):=$$(abspath $$(RT_OUTPUT_DIR_$(1))/llvmdeps.rs)\n $$(LLVM_LINKAGE_PATH_$(1)): $(S)src/etc/mklldeps.py $$(LLVM_CONFIG_$(1))\n \t$(Q)$(CFG_PYTHON) \"$$<\" \"$$@\" \"$$(LLVM_COMPONENTS)\" \"$$(CFG_ENABLE_LLVM_STATIC_STDCPP)\" \\\n-\t\t$$(LLVM_CONFIG_$(1))\n+\t\t$$(LLVM_CONFIG_$(1)) \"$(CFG_STDCPP_NAME)\"\n endef\n \n $(foreach host,$(CFG_HOST), \\"}, {"sha": "215fa1cdd1bb757ac0bb06377a92ebf8a29ec182", "filename": "src/etc/mklldeps.py", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/913fe6dbe9425330027b7d75ba16be47d7280d66/src%2Fetc%2Fmklldeps.py", "raw_url": "https://github.com/rust-lang/rust/raw/913fe6dbe9425330027b7d75ba16be47d7280d66/src%2Fetc%2Fmklldeps.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmklldeps.py?ref=913fe6dbe9425330027b7d75ba16be47d7280d66", "patch": "@@ -17,6 +17,7 @@\n components = sys.argv[2].split() # splits on whitespace\n enable_static = sys.argv[3]\n llvm_config = sys.argv[4]\n+stdcpp_name = sys.argv[5]\n \n f.write(\"\"\"// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n@@ -77,15 +78,15 @@ def run(args):\n out = run([llvm_config, '--cxxflags'])\n if enable_static == '1':\n     assert('stdlib=libc++' not in out)\n-    f.write(\"#[link(name = \\\"stdc++\\\", kind = \\\"static\\\")]\\n\")\n+    f.write(\"#[link(name = \\\"\" + stdcpp_name + \"\\\", kind = \\\"static\\\")]\\n\")\n else:\n     # Note that we use `cfg_attr` here because on MSVC the C++ standard library\n     # is not c++ or stdc++, but rather the linker takes care of linking the\n     # right standard library.\n     if 'stdlib=libc++' in out:\n         f.write(\"#[cfg_attr(not(target_env = \\\"msvc\\\"), link(name = \\\"c++\\\"))]\\n\")\n     else:\n-        f.write(\"#[cfg_attr(not(target_env = \\\"msvc\\\"), link(name = \\\"stdc++\\\"))]\\n\")\n+        f.write(\"#[cfg_attr(not(target_env = \\\"msvc\\\"), link(name = \\\"\" + stdcpp_name + \"\\\"))]\\n\")\n \n # Attach everything to an extern block\n f.write(\"extern {}\\n\")"}]}