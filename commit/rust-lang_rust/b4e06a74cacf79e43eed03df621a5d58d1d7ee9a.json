{"sha": "b4e06a74cacf79e43eed03df621a5d58d1d7ee9a", "node_id": "C_kwDOAAsO6NoAKGI0ZTA2YTc0Y2FjZjc5ZTQzZWVkMDNkZjYyMWE1ZDU4ZDFkN2VlOWE", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-10-19T15:15:11Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-10-19T19:03:11Z"}, "message": "Add regression test for item-decl highlighting", "tree": {"sha": "63ed99a203aa2e904eebd613e3aeb8b918227ca1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63ed99a203aa2e904eebd613e3aeb8b918227ca1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4e06a74cacf79e43eed03df621a5d58d1d7ee9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4e06a74cacf79e43eed03df621a5d58d1d7ee9a", "html_url": "https://github.com/rust-lang/rust/commit/b4e06a74cacf79e43eed03df621a5d58d1d7ee9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4e06a74cacf79e43eed03df621a5d58d1d7ee9a/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1d4ebe4961c107272f9764d1908227a3cd04092", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1d4ebe4961c107272f9764d1908227a3cd04092", "html_url": "https://github.com/rust-lang/rust/commit/a1d4ebe4961c107272f9764d1908227a3cd04092"}], "stats": {"total": 103, "additions": 98, "deletions": 5}, "files": [{"sha": "ce688287a743363dab3548a68e061ddfe9c0ba50", "filename": "src/test/rustdoc-gui/item-decl-colors.goml", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/b4e06a74cacf79e43eed03df621a5d58d1d7ee9a/src%2Ftest%2Frustdoc-gui%2Fitem-decl-colors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/b4e06a74cacf79e43eed03df621a5d58d1d7ee9a/src%2Ftest%2Frustdoc-gui%2Fitem-decl-colors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fitem-decl-colors.goml?ref=b4e06a74cacf79e43eed03df621a5d58d1d7ee9a", "patch": "@@ -0,0 +1,74 @@\n+// This test ensures that the color of the items in the type decl are working as expected.\n+define-function: (\n+    \"check-colors\",\n+    (\n+        theme,\n+        attr_color,\n+        trait_color,\n+        struct_color,\n+        enum_color,\n+        primitive_color,\n+        constant_color,\n+        fn_color,\n+        assoc_type_color,\n+    ),\n+    [\n+        (\"goto\", \"file://\" + |DOC_PATH| + \"/test_docs/struct.WithGenerics.html\"),\n+        (\"show-text\", true),\n+        (\"local-storage\", {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}),\n+        (\"reload\"),\n+        (\"assert-css\", (\".item-decl .code-attribute\", {\"color\": |attr_color|}, ALL)),\n+        (\"assert-css\", (\".item-decl .trait\", {\"color\": |trait_color|}, ALL)),\n+        // We need to add `code` here because otherwise it would select the parent too.\n+        (\"assert-css\", (\".item-decl code .struct\", {\"color\": |struct_color|}, ALL)),\n+        (\"assert-css\", (\".item-decl .enum\", {\"color\": |enum_color|}, ALL)),\n+        (\"assert-css\", (\".item-decl .primitive\", {\"color\": |primitive_color|}, ALL)),\n+        (\"goto\", \"file://\" + |DOC_PATH| + \"/test_docs/trait.TraitWithoutGenerics.html\"),\n+        (\"assert-css\", (\".item-decl .constant\", {\"color\": |constant_color|}, ALL)),\n+        (\"assert-css\", (\".item-decl .fnname\", {\"color\": |fn_color|}, ALL)),\n+        (\"assert-css\", (\".item-decl .associatedtype\", {\"color\": |assoc_type_color|}, ALL)),\n+    ],\n+)\n+\n+call-function: (\n+    \"check-colors\",\n+    {\n+        \"theme\": \"ayu\",\n+        \"attr_color\": \"rgb(153, 153, 153)\",\n+        \"trait_color\": \"rgb(57, 175, 215)\",\n+        \"struct_color\": \"rgb(255, 160, 165)\",\n+        \"enum_color\": \"rgb(255, 160, 165)\",\n+        \"primitive_color\": \"rgb(255, 160, 165)\",\n+        \"constant_color\": \"rgb(57, 175, 215)\",\n+        \"fn_color\": \"rgb(253, 214, 135)\",\n+        \"assoc_type_color\": \"rgb(57, 175, 215)\",\n+    },\n+)\n+call-function: (\n+    \"check-colors\",\n+    {\n+        \"theme\": \"dark\",\n+        \"attr_color\": \"rgb(153, 153, 153)\",\n+        \"trait_color\": \"rgb(183, 140, 242)\",\n+        \"struct_color\": \"rgb(45, 191, 184)\",\n+        \"enum_color\": \"rgb(45, 191, 184)\",\n+        \"primitive_color\": \"rgb(45, 191, 184)\",\n+        \"constant_color\": \"rgb(210, 153, 29)\",\n+        \"fn_color\": \"rgb(43, 171, 99)\",\n+        \"assoc_type_color\": \"rgb(210, 153, 29)\",\n+    },\n+)\n+call-function: (\n+    \"check-colors\",\n+    {\n+        \"theme\": \"light\",\n+        \"attr_color\": \"rgb(153, 153, 153)\",\n+        \"trait_color\": \"rgb(110, 79, 201)\",\n+        \"struct_color\": \"rgb(173, 55, 138)\",\n+        \"enum_color\": \"rgb(173, 55, 138)\",\n+        \"primitive_color\": \"rgb(173, 55, 138)\",\n+        \"constant_color\": \"rgb(56, 115, 173)\",\n+        \"fn_color\": \"rgb(173, 124, 55)\",\n+        \"assoc_type_color\": \"rgb(56, 115, 173)\",\n+    },\n+)"}, {"sha": "79a7f3349ab21be6b4a32c8c745f2cfcb76a3e76", "filename": "src/test/rustdoc-gui/sidebar.goml", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b4e06a74cacf79e43eed03df621a5d58d1d7ee9a/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml", "raw_url": "https://github.com/rust-lang/rust/raw/b4e06a74cacf79e43eed03df621a5d58d1d7ee9a/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml?ref=b4e06a74cacf79e43eed03df621a5d58d1d7ee9a", "patch": "@@ -19,11 +19,12 @@ assert-text: (\".sidebar-elems section ul > li:nth-child(2)\", \"Modules\")\n assert-text: (\".sidebar-elems section ul > li:nth-child(3)\", \"Macros\")\n assert-text: (\".sidebar-elems section ul > li:nth-child(4)\", \"Structs\")\n assert-text: (\".sidebar-elems section ul > li:nth-child(5)\", \"Enums\")\n-assert-text: (\".sidebar-elems section ul > li:nth-child(6)\", \"Traits\")\n-assert-text: (\".sidebar-elems section ul > li:nth-child(7)\", \"Functions\")\n-assert-text: (\".sidebar-elems section ul > li:nth-child(8)\", \"Type Definitions\")\n-assert-text: (\".sidebar-elems section ul > li:nth-child(9)\", \"Unions\")\n-assert-text: (\".sidebar-elems section ul > li:nth-child(10)\", \"Keywords\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(6)\", \"Constants\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(7)\", \"Traits\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(8)\", \"Functions\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(9)\", \"Type Definitions\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(10)\", \"Unions\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(11)\", \"Keywords\")\n assert-text: (\"#structs + .item-table .item-left > a\", \"Foo\")\n click: \"#structs + .item-table .item-left > a\"\n "}, {"sha": "77617e10beb7082333bd1674c2146c517eda67d7", "filename": "src/test/rustdoc-gui/src/test_docs/lib.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b4e06a74cacf79e43eed03df621a5d58d1d7ee9a/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4e06a74cacf79e43eed03df621a5d58d1d7ee9a/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs?ref=b4e06a74cacf79e43eed03df621a5d58d1d7ee9a", "patch": "@@ -5,6 +5,7 @@\n #![crate_name = \"test_docs\"]\n #![feature(rustdoc_internals)]\n #![feature(doc_cfg)]\n+#![feature(associated_type_defaults)]\n \n /*!\n Enable the feature <span class=\"stab portability\"><code>some-feature</code></span> to enjoy\n@@ -386,3 +387,20 @@ impl TypeWithNoDocblocks {\n pub unsafe fn unsafe_fn() {}\n \n pub fn safe_fn() {}\n+\n+#[repr(C)]\n+pub struct WithGenerics<T: TraitWithNoDocblocks, S = String, E = WhoLetTheDogOut, P = i8> {\n+    s: S,\n+    t: T,\n+    e: E,\n+    p: P,\n+}\n+\n+pub const CONST: u8 = 0;\n+\n+pub trait TraitWithoutGenerics {\n+    const C: u8 = CONST;\n+    type T = SomeType;\n+\n+    fn foo();\n+}"}]}