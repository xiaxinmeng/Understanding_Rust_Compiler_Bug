{"sha": "c0c452ba9bd66eac4e6bee9508bbf5be273f5b13", "node_id": "C_kwDOAAsO6NoAKGMwYzQ1MmJhOWJkNjZlYWM0ZTZiZWU5NTA4YmJmNWJlMjczZjViMTM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-03-07T10:35:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-07T10:35:58Z"}, "message": "Rollup merge of #94688 - compiler-errors:free-regions-in-copy-predicate-check, r=oli-obk\n\nErase regions when checking for missing Copy predicates\n\nFixes #94662", "tree": {"sha": "9d75ddcac7d9dff0929fb5db1cef5dea648f6531", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d75ddcac7d9dff0929fb5db1cef5dea648f6531"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0c452ba9bd66eac4e6bee9508bbf5be273f5b13", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiJeAPCRBK7hj4Ov3rIwAAKE8IABv1ZLZn0V6lLxF8SYV9ijhh\n6lAAfDdVhCwPaas47a5wnk5lal4S5Xu8RhAflHM0h/NUxnv1OSLzZ9haLKy0T/8A\n9H8Rfr34Vj5ANZ11JboNbZnj0dlEuWucAJOvzQz2foRTSdwcmyEEFcC+hPkWJIwM\neZNC0DtOnMb3WxfTgqPvBcBfXGw8ChQ9NVpmCPDqbfS+Cj/x2Z9QKv6hps4nrXOM\nSWRAEGlpSrUtG5UXpi0n7MJdYnqp6htBJEByxBuPtNgnkOH2DBF4uW2I4usxQtMM\nqLY5MXxApufglMaod+eUTR7rnN8h3pKAlhJlsqzQHFXfzkDfSWhU+WN7x/wNB7w=\n=gUGH\n-----END PGP SIGNATURE-----\n", "payload": "tree 9d75ddcac7d9dff0929fb5db1cef5dea648f6531\nparent a795f0f5367d35c7c5e8f03228037ae0aa0fee6a\nparent 5ddaa2d5e53344ff8b88d98e61e3dd36edb803e9\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1646649358 +0100\ncommitter GitHub <noreply@github.com> 1646649358 +0100\n\nRollup merge of #94688 - compiler-errors:free-regions-in-copy-predicate-check, r=oli-obk\n\nErase regions when checking for missing Copy predicates\n\nFixes #94662\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0c452ba9bd66eac4e6bee9508bbf5be273f5b13", "html_url": "https://github.com/rust-lang/rust/commit/c0c452ba9bd66eac4e6bee9508bbf5be273f5b13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0c452ba9bd66eac4e6bee9508bbf5be273f5b13/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a795f0f5367d35c7c5e8f03228037ae0aa0fee6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a795f0f5367d35c7c5e8f03228037ae0aa0fee6a", "html_url": "https://github.com/rust-lang/rust/commit/a795f0f5367d35c7c5e8f03228037ae0aa0fee6a"}, {"sha": "5ddaa2d5e53344ff8b88d98e61e3dd36edb803e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ddaa2d5e53344ff8b88d98e61e3dd36edb803e9", "html_url": "https://github.com/rust-lang/rust/commit/5ddaa2d5e53344ff8b88d98e61e3dd36edb803e9"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "2a74e1ce8b1b16ef5f1c3154da41ce475048362d", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c0c452ba9bd66eac4e6bee9508bbf5be273f5b13/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0c452ba9bd66eac4e6bee9508bbf5be273f5b13/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=c0c452ba9bd66eac4e6bee9508bbf5be273f5b13", "patch": "@@ -448,8 +448,16 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                                 self.mir_hir_id(),\n                                 rustc_infer::traits::ObligationCauseCode::MiscObligation,\n                             );\n-                            fulfill_cx.register_bound(&infcx, self.param_env, ty, copy_did, cause);\n-                            let errors = fulfill_cx.select_where_possible(&infcx);\n+                            fulfill_cx.register_bound(\n+                                &infcx,\n+                                self.param_env,\n+                                // Erase any region vids from the type, which may not be resolved\n+                                infcx.tcx.erase_regions(ty),\n+                                copy_did,\n+                                cause,\n+                            );\n+                            // Select all, including ambiguous predicates\n+                            let errors = fulfill_cx.select_all_or_error(&infcx);\n \n                             // Only emit suggestion if all required predicates are on generic\n                             errors"}, {"sha": "dff95283459b604afc09677cba04a6d157c2563a", "filename": "src/test/ui/borrowck/copy-suggestion-region-vid.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c0c452ba9bd66eac4e6bee9508bbf5be273f5b13/src%2Ftest%2Fui%2Fborrowck%2Fcopy-suggestion-region-vid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0c452ba9bd66eac4e6bee9508bbf5be273f5b13/src%2Ftest%2Fui%2Fborrowck%2Fcopy-suggestion-region-vid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fcopy-suggestion-region-vid.rs?ref=c0c452ba9bd66eac4e6bee9508bbf5be273f5b13", "patch": "@@ -0,0 +1,17 @@\n+pub struct DataStruct();\n+\n+pub struct HelperStruct<'n> {\n+    pub helpers: [Vec<&'n i64>; 2],\n+    pub is_empty: bool,\n+}\n+\n+impl DataStruct {\n+    pub fn f(&self) -> HelperStruct {\n+        let helpers = [vec![], vec![]];\n+\n+        HelperStruct { helpers, is_empty: helpers[0].is_empty() }\n+        //~^ ERROR borrow of moved value\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "f03cdd84d75f898f7ac3d541451a2963e8adff65", "filename": "src/test/ui/borrowck/copy-suggestion-region-vid.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c0c452ba9bd66eac4e6bee9508bbf5be273f5b13/src%2Ftest%2Fui%2Fborrowck%2Fcopy-suggestion-region-vid.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c0c452ba9bd66eac4e6bee9508bbf5be273f5b13/src%2Ftest%2Fui%2Fborrowck%2Fcopy-suggestion-region-vid.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fcopy-suggestion-region-vid.stderr?ref=c0c452ba9bd66eac4e6bee9508bbf5be273f5b13", "patch": "@@ -0,0 +1,14 @@\n+error[E0382]: borrow of moved value: `helpers`\n+  --> $DIR/copy-suggestion-region-vid.rs:12:43\n+   |\n+LL |         let helpers = [vec![], vec![]];\n+   |             ------- move occurs because `helpers` has type `[Vec<&i64>; 2]`, which does not implement the `Copy` trait\n+LL | \n+LL |         HelperStruct { helpers, is_empty: helpers[0].is_empty() }\n+   |                        -------            ^^^^^^^^^^^^^^^^^^^^^ value borrowed here after move\n+   |                        |\n+   |                        value moved here\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0382`."}]}