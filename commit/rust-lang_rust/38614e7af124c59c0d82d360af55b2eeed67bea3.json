{"sha": "38614e7af124c59c0d82d360af55b2eeed67bea3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4NjE0ZTdhZjEyNGM1OWMwZDgyZDM2MGFmNTViMmVlZWQ2N2JlYTM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-26T08:43:17Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-26T08:43:17Z"}, "message": "Format source codes and update tests", "tree": {"sha": "5b824c739f73a4f3b8e9928ba7e21d50334301ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b824c739f73a4f3b8e9928ba7e21d50334301ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38614e7af124c59c0d82d360af55b2eeed67bea3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38614e7af124c59c0d82d360af55b2eeed67bea3", "html_url": "https://github.com/rust-lang/rust/commit/38614e7af124c59c0d82d360af55b2eeed67bea3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38614e7af124c59c0d82d360af55b2eeed67bea3/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b8f62fcc8467d4cf694727ef8fde8aefda264bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b8f62fcc8467d4cf694727ef8fde8aefda264bc", "html_url": "https://github.com/rust-lang/rust/commit/6b8f62fcc8467d4cf694727ef8fde8aefda264bc"}], "stats": {"total": 76, "additions": 38, "deletions": 38}, "files": [{"sha": "d332c354b12eac17887f2b9666890ff42bf7399e", "filename": "src/comment.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/38614e7af124c59c0d82d360af55b2eeed67bea3/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38614e7af124c59c0d82d360af55b2eeed67bea3/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=38614e7af124c59c0d82d360af55b2eeed67bea3", "patch": "@@ -314,8 +314,8 @@ fn left_trim_comment_line<'a>(line: &'a str, style: &CommentStyle) -> &'a str {\n             &line[opener.trim_right().len()..]\n         }\n     } else if line.starts_with(\"/* \") || line.starts_with(\"// \") || line.starts_with(\"//!\") ||\n-        line.starts_with(\"///\") ||\n-        line.starts_with(\"** \") || line.starts_with(\"/*!\") ||\n+        line.starts_with(\"///\") || line.starts_with(\"** \") ||\n+        line.starts_with(\"/*!\") ||\n         (line.starts_with(\"/**\") && !line.starts_with(\"/**/\"))\n     {\n         &line[3..]"}, {"sha": "ab6bcb53e5ad4b9dd0449bd3bde0211151ba88bb", "filename": "src/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/38614e7af124c59c0d82d360af55b2eeed67bea3/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38614e7af124c59c0d82d360af55b2eeed67bea3/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=38614e7af124c59c0d82d360af55b2eeed67bea3", "patch": "@@ -657,8 +657,8 @@ fn rewrite_closure(\n         }\n \n         // Figure out if the block is necessary.\n-        let needs_block = block.rules != ast::BlockCheckMode::Default ||\n-            block.stmts.len() > 1 || context.inside_macro ||\n+        let needs_block = block.rules != ast::BlockCheckMode::Default || block.stmts.len() > 1 ||\n+            context.inside_macro ||\n             block_contains_comment(block, context.codemap) ||\n             prefix.contains('\\n');\n "}, {"sha": "69249a4522d3356300db231324baf15287be48b1", "filename": "src/imports.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/38614e7af124c59c0d82d360af55b2eeed67bea3/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38614e7af124c59c0d82d360af55b2eeed67bea3/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=38614e7af124c59c0d82d360af55b2eeed67bea3", "patch": "@@ -482,18 +482,18 @@ fn rewrite_use_list(\n     };\n     let list_str = try_opt!(write_list(&items[first_index..], &fmt));\n \n-    let result =\n-        if list_str.contains('\\n') && context.config.imports_indent() == IndentStyle::Block {\n-            format!(\n-                \"{}{{\\n{}{}\\n{}}}\",\n-                path_str,\n-                nested_shape.indent.to_string(context.config),\n-                list_str,\n-                shape.indent.to_string(context.config)\n-            )\n-        } else {\n-            format!(\"{}{{{}}}\", path_str, list_str)\n-        };\n+    let result = if list_str.contains('\\n') && context.config.imports_indent() == IndentStyle::Block\n+    {\n+        format!(\n+            \"{}{{\\n{}{}\\n{}}}\",\n+            path_str,\n+            nested_shape.indent.to_string(context.config),\n+            list_str,\n+            shape.indent.to_string(context.config)\n+        )\n+    } else {\n+        format!(\"{}{{{}}}\", path_str, list_str)\n+    };\n     Some(result)\n }\n "}, {"sha": "03afe2d81b12230ead6036a1a5fede59962580c8", "filename": "src/patterns.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/38614e7af124c59c0d82d360af55b2eeed67bea3/src%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38614e7af124c59c0d82d360af55b2eeed67bea3/src%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpatterns.rs?ref=38614e7af124c59c0d82d360af55b2eeed67bea3", "patch": "@@ -291,17 +291,17 @@ fn rewrite_tuple_pat(\n     }\n \n     let wildcard_suffix_len = count_wildcard_suffix_len(context, &pat_vec, span, shape);\n-    let (pat_vec, span) =\n-        if context.config.condense_wildcard_suffixes() && wildcard_suffix_len >= 2 {\n-            let new_item_count = 1 + pat_vec.len() - wildcard_suffix_len;\n-            let sp = pat_vec[new_item_count - 1].span();\n-            let snippet = context.snippet(sp);\n-            let lo = sp.lo + BytePos(snippet.find_uncommented(\"_\").unwrap() as u32);\n-            pat_vec[new_item_count - 1] = TuplePatField::Dotdot(mk_sp(lo, lo + BytePos(1)));\n-            (&pat_vec[..new_item_count], mk_sp(span.lo, lo + BytePos(1)))\n-        } else {\n-            (&pat_vec[..], span)\n-        };\n+    let (pat_vec, span) = if context.config.condense_wildcard_suffixes() && wildcard_suffix_len >= 2\n+    {\n+        let new_item_count = 1 + pat_vec.len() - wildcard_suffix_len;\n+        let sp = pat_vec[new_item_count - 1].span();\n+        let snippet = context.snippet(sp);\n+        let lo = sp.lo + BytePos(snippet.find_uncommented(\"_\").unwrap() as u32);\n+        pat_vec[new_item_count - 1] = TuplePatField::Dotdot(mk_sp(lo, lo + BytePos(1)));\n+        (&pat_vec[..new_item_count], mk_sp(span.lo, lo + BytePos(1)))\n+    } else {\n+        (&pat_vec[..], span)\n+    };\n \n     // add comma if `(x,)`\n     let add_comma = path_str.is_none() && pat_vec.len() == 1 && dotdot_pos.is_none();"}, {"sha": "57a09a91501d89c1dace4364cfd2833511a28592", "filename": "src/types.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/38614e7af124c59c0d82d360af55b2eeed67bea3/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38614e7af124c59c0d82d360af55b2eeed67bea3/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=38614e7af124c59c0d82d360af55b2eeed67bea3", "patch": "@@ -632,13 +632,13 @@ impl Rewrite for ast::PolyTraitRef {\n                 Shape::legacy(max_path_width, shape.indent + extra_offset),\n             ));\n \n-            Some(if context.config.spaces_within_angle_brackets() &&\n-                lifetime_str.len() > 0\n-            {\n-                format!(\"for< {} > {}\", lifetime_str, path_str)\n-            } else {\n-                format!(\"for<{}> {}\", lifetime_str, path_str)\n-            })\n+            Some(\n+                if context.config.spaces_within_angle_brackets() && lifetime_str.len() > 0 {\n+                    format!(\"for< {} > {}\", lifetime_str, path_str)\n+                } else {\n+                    format!(\"for<{}> {}\", lifetime_str, path_str)\n+                },\n+            )\n         } else {\n             self.trait_ref.rewrite(context, shape)\n         }"}, {"sha": "cfd7192b8b4a030347c4239a1653a74f8be7f42f", "filename": "tests/target/chains-visual.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/38614e7af124c59c0d82d360af55b2eeed67bea3/tests%2Ftarget%2Fchains-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38614e7af124c59c0d82d360af55b2eeed67bea3/tests%2Ftarget%2Fchains-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains-visual.rs?ref=38614e7af124c59c0d82d360af55b2eeed67bea3", "patch": "@@ -119,10 +119,10 @@ fn floaters() {\n     .quux();\n \n     a + match x {\n-        true => \"yay!\",\n-        false => \"boo!\",\n-    }\n-    .bar()\n+            true => \"yay!\",\n+            false => \"boo!\",\n+        }\n+        .bar()\n }\n \n fn is_replaced_content() -> bool {"}]}