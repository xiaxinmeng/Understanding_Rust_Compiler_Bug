{"sha": "03fa9748553c4939b76082b60438136ba3a0dfba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzZmE5NzQ4NTUzYzQ5MzliNzYwODJiNjA0MzgxMzZiYTNhMGRmYmE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-09-12T08:30:42Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-09-12T08:30:42Z"}, "message": "Let the submodule `#[allow]` in `module_inception`", "tree": {"sha": "e942e2ab8e386e0bea8a23429957a934c1f0472c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e942e2ab8e386e0bea8a23429957a934c1f0472c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03fa9748553c4939b76082b60438136ba3a0dfba", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJX1meyAAoJEFbW7qD8Z6xG/Q0QAIet2Om5RxzKhyOP03mF/Gte\n6yNTEnOD3OAIDBjrcIO1EIeDrhZrBZJa3acIRemsi/axM5NXtDiQz/rvqLKs0U5x\n54LAPmtglTB5mPjINmqSIFuoAMyjMov+uTxEVTzyoWeYFiGPNnq1/GsbJRxFJSwO\nmaG81m58hd2vJKwziWJLrnplLVM4vv6Bk2ZTbKs355BmYXYKMMIqCa0F6gCmqReI\nXnPyet+69Yryg9vLTlzyK0BwmiBTUOe8czM/Tnn4vzBAAkOyMqO3YVdDWChFDSo4\n1e3AayNArab0UoTvmSKSxA5ZjkAM0NjlYLMdus3J99Zr0NEqhoxvXQXuB0JZjwUe\nW6RrzJ76DrvtFoMt1qLmPqVuidIWzUHtnSRmDUcitzlT/wFllijhIiPMF5pid50G\n6z1zFlJjLkevzvi34fYUQMqCuKygwEWlntsWbXYLnFJRhUkXxlwTBFTV26R6cnGi\ni2FFqHtQx5rZ6PzHQBpPEpGepcOUX1SbZdNZs89S+k7PdRWvTPk3gnmrJOd4pCY1\n+ljTbQ3bPRPrW9DBEZNjsmJ6zBGPpSrpVGK/vMNn9hW/s5ie7W2xgULxxK9v50sd\nF2oCMn+xYCtKgDtcbLDPrlI6Zd8mlrHy8Wa+9EH5TQFeS+Wn1qDifHuyeXIk9/as\np2B+3RpDULX3SV+aXHuo\n=uhgD\n-----END PGP SIGNATURE-----", "payload": "tree e942e2ab8e386e0bea8a23429957a934c1f0472c\nparent 821603619344517b29ea5f9de0e1fd48dc8aecb4\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1473669042 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1473669042 +0200\n\nLet the submodule `#[allow]` in `module_inception`"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03fa9748553c4939b76082b60438136ba3a0dfba", "html_url": "https://github.com/rust-lang/rust/commit/03fa9748553c4939b76082b60438136ba3a0dfba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03fa9748553c4939b76082b60438136ba3a0dfba/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "821603619344517b29ea5f9de0e1fd48dc8aecb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/821603619344517b29ea5f9de0e1fd48dc8aecb4", "html_url": "https://github.com/rust-lang/rust/commit/821603619344517b29ea5f9de0e1fd48dc8aecb4"}], "stats": {"total": 101, "additions": 41, "deletions": 60}, "files": [{"sha": "8211621fa0e0fdc091e34d11adfed6f7c5fcd45e", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/03fa9748553c4939b76082b60438136ba3a0dfba/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03fa9748553c4939b76082b60438136ba3a0dfba/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=03fa9748553c4939b76082b60438136ba3a0dfba", "patch": "@@ -47,8 +47,32 @@ declare_lint! {\n     \"type names prefixed/postfixed with their containing module's name\"\n }\n \n+/// **What it does:** Checks for modules that have the same name as their parent module\n+///\n+/// **Why is this bad?** A typical beginner mistake is to have `mod foo;` and again `mod foo { .. }` in `foo.rs`.\n+///                      The expectation is that items inside the inner `mod foo { .. }` are then available\n+///                      through `foo::x`, but they are only available through `foo::foo::x`.\n+///                      If this is done on purpose, it would be better to choose a more representative module name.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+/// ```rust\n+/// // lib.rs\n+/// mod foo;\n+/// // foo.rs\n+/// mod foo {\n+///     ...\n+/// }\n+/// ```\n+declare_lint! {\n+    pub MODULE_INCEPTION,\n+    Warn,\n+    \"modules that have the same name as their parent module\"\n+}\n+\n pub struct EnumVariantNames {\n-    modules: Vec<String>,\n+    modules: Vec<(InternedString, String)>,\n     threshold: u64,\n }\n \n@@ -60,7 +84,7 @@ impl EnumVariantNames {\n \n impl LintPass for EnumVariantNames {\n     fn get_lints(&self) -> LintArray {\n-        lint_array!(ENUM_VARIANT_NAMES, STUTTER)\n+        lint_array!(ENUM_VARIANT_NAMES, STUTTER, MODULE_INCEPTION)\n     }\n }\n \n@@ -171,9 +195,12 @@ impl EarlyLintPass for EnumVariantNames {\n         let item_name_chars = item_name.chars().count();\n         let item_camel = to_camel_case(&item_name);\n         if item.vis == Visibility::Public && !in_macro(cx, item.span) {\n-            if let Some(mod_camel) = self.modules.last() {\n+            if let Some(&(ref mod_name, ref mod_camel)) = self.modules.last() {\n                 // constants don't have surrounding modules\n                 if !mod_camel.is_empty() {\n+                    if mod_name == &item_name {\n+                        span_lint(cx, MODULE_INCEPTION, item.span, \"item has the same name as its containing module\");\n+                    }\n                     let matching = partial_match(mod_camel, &item_camel);\n                     let rmatching = partial_rmatch(mod_camel, &item_camel);\n                     let nchars = mod_camel.chars().count();\n@@ -189,6 +216,6 @@ impl EarlyLintPass for EnumVariantNames {\n         if let ItemKind::Enum(ref def, _) = item.node {\n             check_variant(cx, self.threshold, def, &item_name, item_name_chars, item.span);\n         }\n-        self.modules.push(item_camel);\n+        self.modules.push((item_name, item_camel));\n     }\n }"}, {"sha": "46a2a737d7c1227a1114bbb1180b7fc3c1ee2090", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/03fa9748553c4939b76082b60438136ba3a0dfba/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03fa9748553c4939b76082b60438136ba3a0dfba/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=03fa9748553c4939b76082b60438136ba3a0dfba", "patch": "@@ -96,7 +96,6 @@ pub mod minmax;\n pub mod misc;\n pub mod misc_early;\n pub mod missing_doc;\n-pub mod module_inception;\n pub mod mut_mut;\n pub mod mut_reference;\n pub mod mutex_atomic;\n@@ -175,7 +174,6 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n     reg.register_late_lint_pass(box utils::internal_lints::LintWithoutLintPass::default());\n     reg.register_late_lint_pass(box types::TypePass);\n     reg.register_late_lint_pass(box booleans::NonminimalBool);\n-    reg.register_early_lint_pass(box module_inception::Pass);\n     reg.register_late_lint_pass(box eq_op::EqOp);\n     reg.register_early_lint_pass(box enum_variants::EnumVariantNames::new(conf.enum_variant_name_threshold));\n     reg.register_late_lint_pass(box enum_glob_use::EnumGlobUse);\n@@ -329,6 +327,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         entry::MAP_ENTRY,\n         enum_clike::ENUM_CLIKE_UNPORTABLE_VARIANT,\n         enum_variants::ENUM_VARIANT_NAMES,\n+        enum_variants::MODULE_INCEPTION,\n         eq_op::EQ_OP,\n         escape::BOXED_LOCAL,\n         eta_reduction::REDUNDANT_CLOSURE,\n@@ -391,7 +390,6 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         misc_early::REDUNDANT_CLOSURE_CALL,\n         misc_early::UNNEEDED_FIELD_PATTERN,\n         misc_early::ZERO_PREFIXED_LITERAL,\n-        module_inception::MODULE_INCEPTION,\n         mut_reference::UNNECESSARY_MUT_PASSED,\n         mutex_atomic::MUTEX_ATOMIC,\n         needless_bool::BOOL_COMPARISON,"}, {"sha": "10c8154d100e777d232ccb7139b2695d6c9fd757", "filename": "clippy_lints/src/module_inception.rs", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/821603619344517b29ea5f9de0e1fd48dc8aecb4/clippy_lints%2Fsrc%2Fmodule_inception.rs", "raw_url": "https://github.com/rust-lang/rust/raw/821603619344517b29ea5f9de0e1fd48dc8aecb4/clippy_lints%2Fsrc%2Fmodule_inception.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmodule_inception.rs?ref=821603619344517b29ea5f9de0e1fd48dc8aecb4", "patch": "@@ -1,50 +0,0 @@\n-use rustc::lint::*;\n-use syntax::ast::*;\n-use utils::span_lint;\n-\n-/// **What it does:** Checks for modules that have the same name as their parent module\n-///\n-/// **Why is this bad?** A typical beginner mistake is to have `mod foo;` and again `mod foo { .. }` in `foo.rs`.\n-///                      The expectation is that items inside the inner `mod foo { .. }` are then available\n-///                      through `foo::x`, but they are only available through `foo::foo::x`.\n-///                      If this is done on purpose, it would be better to choose a more representative module name.\n-///\n-/// **Known problems:** None.\n-///\n-/// **Example:**\n-/// ```rust\n-/// // lib.rs\n-/// mod foo;\n-/// // foo.rs\n-/// mod foo {\n-///     ...\n-/// }\n-/// ```\n-declare_lint! {\n-    pub MODULE_INCEPTION,\n-    Warn,\n-    \"modules that have the same name as their parent module\"\n-}\n-\n-pub struct Pass;\n-\n-impl LintPass for Pass {\n-    fn get_lints(&self) -> LintArray {\n-        lint_array![MODULE_INCEPTION]\n-    }\n-}\n-\n-impl EarlyLintPass for Pass {\n-    fn check_item(&mut self, cx: &EarlyContext, item: &Item) {\n-        if let ItemKind::Mod(ref module) = item.node {\n-            for sub_item in &module.items {\n-                if let ItemKind::Mod(_) = sub_item.node {\n-                    if item.ident == sub_item.ident {\n-                        span_lint(cx, MODULE_INCEPTION, sub_item.span,\n-                                  \"module has the same name as its containing module\");\n-                    }\n-                }\n-            }\n-        }\n-    }\n-}"}, {"sha": "f6228cbb79507d090429a67c9b4baaf355a5eb72", "filename": "tests/compile-fail/module_inception.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/03fa9748553c4939b76082b60438136ba3a0dfba/tests%2Fcompile-fail%2Fmodule_inception.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03fa9748553c4939b76082b60438136ba3a0dfba/tests%2Fcompile-fail%2Fmodule_inception.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmodule_inception.rs?ref=03fa9748553c4939b76082b60438136ba3a0dfba", "patch": "@@ -4,20 +4,26 @@\n \n mod foo {\n     mod bar {\n-        mod bar { //~ ERROR module has the same name as its containing module\n+        pub mod bar { //~ ERROR item has the same name as its containing module\n             mod foo {}\n         }\n         mod foo {}\n     }\n-    mod foo { //~ ERROR module has the same name as its containing module\n+    pub mod foo { //~ ERROR item has the same name as its containing module\n         mod bar {}\n     }\n }\n \n+mod cake {\n+    mod cake {\n+        // no error, since module is not public\n+    }\n+}\n+\n // No warning. See <https://github.com/Manishearth/rust-clippy/issues/1220>.\n mod bar {\n     #[allow(module_inception)]\n-    mod bar {\n+    pub mod bar {\n     }\n }\n "}]}