{"sha": "0be19e8a953f57912d4745eae0a6bb71c21742c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiZTE5ZThhOTUzZjU3OTEyZDQ3NDVlYWUwYTZiYjcxYzIxNzQyYzk=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-02T23:12:58Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-02T23:12:58Z"}, "message": "Teach severing logic to handle obj and fn types.", "tree": {"sha": "9025b29a7575a390fed1e8a22568dc0b459f60b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9025b29a7575a390fed1e8a22568dc0b459f60b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0be19e8a953f57912d4745eae0a6bb71c21742c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0be19e8a953f57912d4745eae0a6bb71c21742c9", "html_url": "https://github.com/rust-lang/rust/commit/0be19e8a953f57912d4745eae0a6bb71c21742c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0be19e8a953f57912d4745eae0a6bb71c21742c9/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec0de963e0d377f2b2f3003e5f2196eb1a5336d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec0de963e0d377f2b2f3003e5f2196eb1a5336d2", "html_url": "https://github.com/rust-lang/rust/commit/ec0de963e0d377f2b2f3003e5f2196eb1a5336d2"}], "stats": {"total": 43, "additions": 28, "deletions": 15}, "files": [{"sha": "d86c754ee766856cc7ed0d06ed22fa1b3423926e", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 28, "deletions": 15, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/0be19e8a953f57912d4745eae0a6bb71c21742c9/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/0be19e8a953f57912d4745eae0a6bb71c21742c9/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=0be19e8a953f57912d4745eae0a6bb71c21742c9", "patch": "@@ -2547,23 +2547,36 @@ let trans_visitor\n       (curr_iso:Ast.ty_iso option)\n       : unit =\n     let _ = note_gc_step ty \"severing\" in\n-      match ty_mem_ctrl ty with\n-          MEM_gc ->\n-\n-            let _ = check_box_rty cell in\n-            let null_jmp = null_check cell in\n-            let rc = box_rc_cell cell in\n-            let _ = note_gc_step ty \"severing GC slot\" in\n-              emit (Il.binary Il.SUB rc (Il.Cell rc) one);\n-              mov cell zero;\n-              patch null_jmp\n+    let sever_box c =\n+      let _ = check_box_rty c in\n+      let null_jmp = null_check c in\n+      let rc = box_rc_cell c in\n+      let _ = note_gc_step ty \"severing GC cell\" in\n+        emit (Il.binary Il.SUB rc (Il.Cell rc) one);\n+        mov c zero;\n+        patch null_jmp\n+    in\n \n-        | MEM_interior when type_is_structured ty ->\n-            iter_ty_parts ty_params cell ty\n-              (sever_ty ty_params) curr_iso\n+      match strip_mutable_or_constrained_ty ty with\n+          Ast.TY_fn _\n+        | Ast.TY_obj _ ->\n+            if type_has_state ty\n+            then\n+              let binding = get_element_ptr cell Abi.binding_field_binding in\n+                sever_box binding;\n \n-        | _ -> ()\n-            (* No need to follow links / call glue; severing is shallow. *)\n+        | _ ->\n+            match ty_mem_ctrl ty with\n+                MEM_gc ->\n+                  sever_box cell\n+\n+              | MEM_interior when type_is_structured ty ->\n+                  iter_ty_parts ty_params cell ty\n+                    (sever_ty ty_params) curr_iso\n+\n+              | _ -> ()\n+                  (* No need to follow links / call glue; severing is\n+                     shallow. *)\n \n   and clone_ty\n       (ty_params:Il.cell)"}]}