{"sha": "df357b20be69d799fb9d562c33cbb98a03c64ae9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmMzU3YjIwYmU2OWQ3OTlmYjlkNTYyYzMzY2JiOThhMDNjNjRhZTk=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-11-22T17:49:27Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-11-24T15:34:32Z"}, "message": "Suggest macro call when not sure that it is fn definition", "tree": {"sha": "d41d74899b56eea6003d467043e8368af8dca056", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d41d74899b56eea6003d467043e8368af8dca056"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df357b20be69d799fb9d562c33cbb98a03c64ae9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df357b20be69d799fb9d562c33cbb98a03c64ae9", "html_url": "https://github.com/rust-lang/rust/commit/df357b20be69d799fb9d562c33cbb98a03c64ae9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df357b20be69d799fb9d562c33cbb98a03c64ae9/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c82e9e8e1e634250b901b69808f65fbe5f3312c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c82e9e8e1e634250b901b69808f65fbe5f3312c3", "html_url": "https://github.com/rust-lang/rust/commit/c82e9e8e1e634250b901b69808f65fbe5f3312c3"}], "stats": {"total": 70, "additions": 33, "deletions": 37}, "files": [{"sha": "be7e589f4ad7c00f5d07b364daec1c16cb9841ca", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -3158,9 +3158,7 @@ impl<'a> Parser<'a> {\n         attrs.extend(iattrs);\n \n         let hi = self.prev_span;\n-        Ok(self.mk_expr(span_lo.to(hi),\n-                        ExprKind::ForLoop(pat, expr, loop_block, opt_ident),\n-                        attrs))\n+        Ok(self.mk_expr(span_lo.to(hi), ExprKind::ForLoop(pat, expr, loop_block, opt_ident), attrs))\n     }\n \n     /// Parse a 'while' or 'while let' expression ('while' token already eaten)\n@@ -4252,13 +4250,11 @@ impl<'a> Parser<'a> {\n             return Err(e);\n         }\n \n-        Ok(self.parse_block_tail(lo, BlockCheckMode::Default)?)\n+        self.parse_block_tail(lo, BlockCheckMode::Default)\n     }\n \n     /// Parse a block. Inner attrs are allowed.\n-    fn parse_inner_attrs_and_block(&mut self)\n-        -> PResult<'a, (Vec<Attribute>, P<Block>)>\n-    {\n+    fn parse_inner_attrs_and_block(&mut self) -> PResult<'a, (Vec<Attribute>, P<Block>)> {\n         maybe_whole!(self, NtBlock, |x| (Vec::new(), x));\n \n         let lo = self.span;\n@@ -4269,9 +4265,7 @@ impl<'a> Parser<'a> {\n \n     /// Parse the rest of a block expression or function body\n     /// Precondition: already parsed the '{'.\n-    fn parse_block_tail(&mut self, lo: Span, s: BlockCheckMode)\n-        -> PResult<'a, P<Block>>\n-    {\n+    fn parse_block_tail(&mut self, lo: Span, s: BlockCheckMode) -> PResult<'a, P<Block>> {\n         let mut stmts = vec![];\n \n         while !self.eat(&token::CloseDelim(token::Brace)) {\n@@ -5340,32 +5334,23 @@ impl<'a> Parser<'a> {\n     }\n \n     fn consume_block(&mut self, delim: token::DelimToken) {\n-        debug!(\"consuming {:?}\", delim);\n-        debug!(\"self.token {:?}\", self.token);\n         let mut brace_depth = 0;\n         if !self.eat(&token::OpenDelim(delim)) {\n-            debug!(\"didn't eat delim\");\n             return;\n         }\n         loop {\n             if self.eat(&token::OpenDelim(delim)) {\n-                debug!(\"add depth\");\n                 brace_depth += 1;\n             } else if self.eat(&token::CloseDelim(delim)) {\n-                debug!(\"found closing\");\n                 if brace_depth == 0 {\n-                    debug!(\"ending\");\n                     return;\n                 } else {\n-                    debug!(\"decrease\");\n                     brace_depth -= 1;\n                     continue;\n                 }\n             } else if self.eat(&token::Eof) || self.eat(&token::CloseDelim(token::NoDelim)) {\n-                debug!(\"eof or nodelim\");\n                 return;\n             } else {\n-                debug!(\"bump\");\n                 self.bump();\n             }\n         }\n@@ -6297,6 +6282,8 @@ impl<'a> Parser<'a> {\n             //     pub   S {}\n             //        ^^^ `sp` points here\n             let sp = self.prev_span.between(self.span);\n+            let full_sp = self.prev_span.to(self.span);\n+            let ident_sp = self.span;\n             if self.look_ahead(1, |t| *t == token::OpenDelim(token::Brace)) {\n                 // possible public struct definition where `struct` was forgotten\n                 let ident = self.parse_ident().unwrap();\n@@ -6328,6 +6315,16 @@ impl<'a> Parser<'a> {\n                                              ident,\n                                              kw_name);\n                     err.span_suggestion_short(sp, &suggestion, format!(\" {} \", kw));\n+                } else {\n+                    if let Ok(snippet) = self.sess.codemap().span_to_snippet(ident_sp) {\n+                        err.span_suggestion(\n+                            full_sp,\n+                            \"if you meant to call a macro, write instead\",\n+                            format!(\"{}!\", snippet));\n+                    } else {\n+                        err.help(\"if you meant to call a macro, remove the `pub` \\\n+                                  and add a trailing `!` after the identifier\");\n+                    }\n                 }\n                 return Err(err);\n             }"}, {"sha": "8babf4daaddccfadc18e1e86bb0ef045c4873d44", "filename": "src/test/parse-fail/doc-after-struct-field.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fdoc-after-struct-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fdoc-after-struct-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fdoc-after-struct-field.rs?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -16,5 +16,5 @@ struct X {\n }\n \n fn main() {\n-    let y = X {a = 1};\n+    let y = X {a: 1};\n }"}, {"sha": "6d9b4b05ad9fa6a69b1fa0ff213975fe962660c4", "filename": "src/test/parse-fail/doc-before-struct-rbrace-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fdoc-before-struct-rbrace-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fdoc-before-struct-rbrace-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fdoc-before-struct-rbrace-1.rs?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -17,5 +17,5 @@ struct X {\n }\n \n fn main() {\n-    let y = X {a = 1};\n+    let y = X {a: 1};\n }"}, {"sha": "63b2f963799166622a191aac6d5795391bab2c28", "filename": "src/test/parse-fail/doc-before-struct-rbrace-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fdoc-before-struct-rbrace-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fdoc-before-struct-rbrace-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fdoc-before-struct-rbrace-2.rs?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -16,5 +16,5 @@ struct X {\n }\n \n fn main() {\n-    let y = X {a = 1};\n+    let y = X {a: 1};\n }"}, {"sha": "3da9d1a8712ad0512aa4a41abd85dbe714d8a138", "filename": "src/test/parse-fail/issue-22647.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fissue-22647.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fissue-22647.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-22647.rs?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -16,6 +16,7 @@ fn main() {\n         println!(\"Y {}\",x);\n         return x;\n     };\n+    //~^ ERROR expected item, found `;`\n \n     caller(bar_handler);\n }"}, {"sha": "84d4a757a077624bd93ba1e1d784f6e620b738a4", "filename": "src/test/parse-fail/issue-22712.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fissue-22712.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fissue-22712.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-22712.rs?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -14,6 +14,6 @@ struct Foo<B> {\n \n fn bar() {\n     let Foo<Vec<u8>>  //~ ERROR expected one of `:`, `;`, `=`, or `@`, found `<`\n-}\n+}  //~ ERROR expected item, found `}`\n \n fn main() {}"}, {"sha": "b6bc3a29e0691f091b810ecb972b393094b009e0", "filename": "src/test/parse-fail/issue-24197.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fissue-24197.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fissue-24197.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-24197.rs?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -10,4 +10,4 @@\n \n fn main() {\n     let buf[0] = 0; //~ ERROR expected one of `:`, `;`, `=`, or `@`, found `[`\n-}\n+}  //~ ERROR expected item, found `}`"}, {"sha": "ffb455975521a6fd888a2eff1a82a015a81283e3", "filename": "src/test/parse-fail/mut-patterns.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fmut-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fmut-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fmut-patterns.rs?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -15,4 +15,5 @@\n pub fn main() {\n     struct Foo { x: isize }\n     let mut Foo { x: x } = Foo { x: 3 }; //~ ERROR: expected one of `:`, `;`, `=`, or `@`, found `{`\n+    //~^ ERROR expected item, found `=`\n }"}, {"sha": "95ad006402ea6ff4ddc620a25e468109ab582639", "filename": "src/test/parse-fail/pat-lt-bracket-5.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-5.rs?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -9,5 +9,5 @@\n // except according to those terms.\n \n fn main() {\n-    let v[0] = v[1]; //~ error: expected one of `:`, `;`, `=`, or `@`, found `[`\n-}\n+    let v[0] = v[1]; //~ ERROR expected one of `:`, `;`, `=`, or `@`, found `[`\n+} //~ ERROR expected item, found `}`"}, {"sha": "7a42f453c74df59e4ef4e0766da6b2c0ab94c745", "filename": "src/test/parse-fail/pat-ranges-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fpat-ranges-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fpat-ranges-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-ranges-1.rs?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -12,4 +12,4 @@\n \n fn main() {\n     let macropus!() ..= 11 = 12; //~ error: expected one of `:`, `;`, or `=`, found `..=`\n-}\n+} //~ ERROR expected item, found `}`"}, {"sha": "ad0a3b3b67fc55b6ffd877060e25148be7214420", "filename": "src/test/parse-fail/pat-ranges-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fpat-ranges-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fpat-ranges-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-ranges-2.rs?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -12,4 +12,4 @@\n \n fn main() {\n     let 10 ..= makropulos!() = 12; //~ error: expected one of `::`, `:`, `;`, or `=`, found `!`\n-}\n+} //~ ERROR expected item, found `}`"}, {"sha": "4a9a12bcdd26ed1fff6a0f77eac8fa8a9954aa1b", "filename": "src/test/parse-fail/pat-ranges-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fpat-ranges-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fpat-ranges-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-ranges-3.rs?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -12,4 +12,4 @@\n \n fn main() {\n     let 10 ..= 10 + 3 = 12; //~ expected one of `:`, `;`, or `=`, found `+`\n-}\n+} //~ ERROR expected item, found `}`"}, {"sha": "32fdc263b2d4792169dc7bc99b9a992233fe61c3", "filename": "src/test/parse-fail/pat-ranges-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fpat-ranges-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Fpat-ranges-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-ranges-4.rs?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -13,4 +13,4 @@\n fn main() {\n     let 10 - 3 ..= 10 = 8;\n     //~^ error: expected one of `...`, `..=`, `..`, `:`, `;`, or `=`, found `-`\n-}\n+} //~ ERROR expected item, found `}`"}, {"sha": "f413ac340877b02bd626b91f2ff1551b716a3989", "filename": "src/test/parse-fail/range-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Frange-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Frange-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Frange-3.rs?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -15,4 +15,4 @@\n pub fn main() {\n     let r = 1..2..3;\n     //~^ ERROR expected one of `.`, `;`, `?`, or an operator, found `..`\n-}\n+} //~ ERROR expected item, found `}`"}, {"sha": "0b385129b2386b8578331c5bdeb98fe3063c5af4", "filename": "src/test/parse-fail/range-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Frange-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fparse-fail%2Frange-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Frange-4.rs?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -15,4 +15,4 @@\n pub fn main() {\n     let r = ..1..2;\n     //~^ ERROR expected one of `.`, `;`, `?`, or an operator, found `..`\n-}\n+} //~ ERROR expected item, found `}`"}, {"sha": "7d3abceb11b58cd4f31044c9da519a6cd30a49c8", "filename": "src/test/ui/suggestions/pub-ident-fn-2.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fui%2Fsuggestions%2Fpub-ident-fn-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fui%2Fsuggestions%2Fpub-ident-fn-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fpub-ident-fn-2.stderr?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -3,7 +3,6 @@ error: missing `fn` for method definition\n    |\n 11 | pub foo(s: usize) { bar() }\n    |    ^\n-   |\n help: add `fn` here to parse `foo` as a public method\n    |\n 11 | pub fn foo(s: usize) { bar() }"}, {"sha": "68dea2aec3a54b57ee4bd78b8f90c4ac064eb57b", "filename": "src/test/ui/suggestions/pub-ident-fn-or-struct-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fui%2Fsuggestions%2Fpub-ident-fn-or-struct-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fui%2Fsuggestions%2Fpub-ident-fn-or-struct-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fpub-ident-fn-or-struct-2.stderr?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -2,7 +2,7 @@ error: missing `fn` or `struct` for method or struct definition\n   --> $DIR/pub-ident-fn-or-struct-2.rs:11:4\n    |\n 11 | pub S();\n-   |    ^\n+   | ---^- help: if you meant to call a macro, write instead: `S!`\n \n error: aborting due to previous error\n "}, {"sha": "0c19f776bd18e0a9e72cf101e4a36120e1de57af", "filename": "src/test/ui/suggestions/pub-ident-fn-or-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fui%2Fsuggestions%2Fpub-ident-fn-or-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fui%2Fsuggestions%2Fpub-ident-fn-or-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fpub-ident-fn-or-struct.stderr?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -2,7 +2,7 @@ error: missing `fn` or `struct` for method or struct definition\n   --> $DIR/pub-ident-fn-or-struct.rs:11:4\n    |\n 11 | pub S (foo) bar\n-   |    ^\n+   | ---^- help: if you meant to call a macro, write instead: `S!`\n \n error: aborting due to previous error\n "}, {"sha": "d36b9b127e0c1a0ac673d0f3ae345076d41008ee", "filename": "src/test/ui/suggestions/pub-ident-fn.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fui%2Fsuggestions%2Fpub-ident-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fui%2Fsuggestions%2Fpub-ident-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fpub-ident-fn.stderr?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -3,7 +3,6 @@ error: missing `fn` for method definition\n    |\n 11 | pub   foo(s: usize) -> bool { true }\n    |    ^^^\n-   |\n help: add `fn` here to parse `foo` as a public method\n    |\n 11 | pub fn foo(s: usize) -> bool { true }"}, {"sha": "36ef307272231802c9e02d35de46b342ebb5acab", "filename": "src/test/ui/suggestions/pub-ident-struct.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fui%2Fsuggestions%2Fpub-ident-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/df357b20be69d799fb9d562c33cbb98a03c64ae9/src%2Ftest%2Fui%2Fsuggestions%2Fpub-ident-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fpub-ident-struct.stderr?ref=df357b20be69d799fb9d562c33cbb98a03c64ae9", "patch": "@@ -3,7 +3,6 @@ error: missing `struct` for struct definition\n    |\n 11 | pub S {\n    |    ^\n-   |\n help: add `struct` here to parse `S` as a public struct\n    |\n 11 | pub struct S {"}]}