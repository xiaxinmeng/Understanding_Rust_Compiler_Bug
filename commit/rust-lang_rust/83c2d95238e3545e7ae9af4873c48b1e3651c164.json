{"sha": "83c2d95238e3545e7ae9af4873c48b1e3651c164", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzYzJkOTUyMzhlMzU0NWU3YWU5YWY0ODczYzQ4YjFlMzY1MWMxNjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-24T23:34:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-24T23:34:35Z"}, "message": "Auto merge of #39245 - alexcrichton:enable-platform, r=brson\n\nrustbuild: Start building --enable-extended\n\nThis commit adds a new flag to the configure script,\n`--enable-extended`, which is intended for specifying a desire to\ncompile the full suite of Rust tools such as Cargo, the RLS, etc. This\nis also an indication that the build system should create combined\ninstallers such as the pkg/exe/msi artifacts.\n\nCurrently the `--enable-extended` flag just indicates that combined\ninstallers should be built, and Cargo is itself not compiled just yet\nbut rather only downloaded from its location. The intention here is to\nquickly get to feature parity with the current release process and then\nwe can start improving it afterwards.\n\nAll new files in this PR inside `src/etc/installer` are copied from the\nrust-packaging repository.\n\ncc #38531", "tree": {"sha": "5888cdf6bb45695b9ed8eb06dd583bba141e8840", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5888cdf6bb45695b9ed8eb06dd583bba141e8840"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83c2d95238e3545e7ae9af4873c48b1e3651c164", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83c2d95238e3545e7ae9af4873c48b1e3651c164", "html_url": "https://github.com/rust-lang/rust/commit/83c2d95238e3545e7ae9af4873c48b1e3651c164", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83c2d95238e3545e7ae9af4873c48b1e3651c164/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "249b444efa356c252b264c56ba5041d70d0b9734", "url": "https://api.github.com/repos/rust-lang/rust/commits/249b444efa356c252b264c56ba5041d70d0b9734", "html_url": "https://github.com/rust-lang/rust/commit/249b444efa356c252b264c56ba5041d70d0b9734"}, {"sha": "f3dfcae2029be9de5ad2e015d97ca246c2381b84", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3dfcae2029be9de5ad2e015d97ca246c2381b84", "html_url": "https://github.com/rust-lang/rust/commit/f3dfcae2029be9de5ad2e015d97ca246c2381b84"}], "stats": {"total": 1423, "additions": 1398, "deletions": 25}, "files": [{"sha": "e2d041427661b8452852862f6746c18c928bf4da", "filename": ".gitattributes", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/.gitattributes", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/.gitattributes", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitattributes?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -4,7 +4,6 @@\n *.cpp rust\n *.h rust\n *.rs rust\n-src/etc/pkg/rust-logo.ico binary\n-src/etc/pkg/rust-logo.png binary\n+src/etc/installer/gfx/* binary\n *.woff binary\n src/vendor/* binary"}, {"sha": "bbe0cdfb6f8f0d9ae4bd532ac313cf41a2e0645a", "filename": ".travis.yml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -57,7 +57,7 @@ matrix:\n \n     - env: >\n         SCRIPT=\"./x.py test && ./x.py dist\"\n-        RUST_CONFIGURE_ARGS=--build=i686-apple-darwin\n+        RUST_CONFIGURE_ARGS=\"--build=i686-apple-darwin --enable-extended\"\n         SRC=.\n         DEPLOY=1\n       os: osx\n@@ -76,7 +76,7 @@ matrix:\n       after_failure: *osx_after_failure\n     - env: >\n         RUST_CHECK_TARGET=dist\n-        RUST_CONFIGURE_ARGS=--target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios\n+        RUST_CONFIGURE_ARGS=\"--target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios --enable-extended\"\n         SRC=.\n         DEPLOY=1\n       os: osx"}, {"sha": "f158d788d16afd9d7b3c393b274fe26e68d95de4", "filename": "appveyor.yml", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -7,11 +7,11 @@ environment:\n   matrix:\n   # 32/64 bit MSVC\n   - MSYS_BITS: 64\n-    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n+    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-extended\n     SCRIPT: python x.py test && python x.py dist\n     DEPLOY: 1\n   - MSYS_BITS: 32\n-    RUST_CONFIGURE_ARGS: --build=i686-pc-windows-msvc --target=i586-pc-windows-msvc\n+    RUST_CONFIGURE_ARGS: --build=i686-pc-windows-msvc --target=i586-pc-windows-msvc --enable-extended\n     SCRIPT: python x.py test --host i686-pc-windows-msvc --target i686-pc-windows-msvc && python x.py dist\n     DEPLOY: 1\n \n@@ -51,7 +51,7 @@ environment:\n   # *not* use debug assertions and llvm assertions. This is because they take\n   # too long on appveyor and this is tested by rustbuild below.\n   - MSYS_BITS: 32\n-    RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu\n+    RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu --enable-extended\n     SCRIPT: python x.py test && python x.py dist\n     MINGW_URL: https://s3.amazonaws.com/rust-lang-ci\n     MINGW_ARCHIVE: i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z\n@@ -67,7 +67,7 @@ environment:\n \n   - MSYS_BITS: 64\n     SCRIPT: python x.py test && python x.py dist\n-    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu\n+    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu --enable-extended\n     MINGW_URL: https://s3.amazonaws.com/rust-lang-ci\n     MINGW_ARCHIVE: x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z\n     MINGW_DIR: mingw64\n@@ -103,6 +103,10 @@ install:\n   - 7z x -y sccache.tar > nul\n   - set PATH=%PATH%;%CD%\\sccache2\n \n+  # Install InnoSetup to get `iscc` used to produce installers\n+  - choco install -y InnoSetup\n+  - set PATH=\"C:\\Program Files (x86)\\Inno Setup 5\";%PATH%\n+\n   # Help debug some handle issues on AppVeyor\n   - ps: Invoke-WebRequest -Uri https://download.sysinternals.com/files/Handle.zip -OutFile handle.zip\n   - mkdir handle"}, {"sha": "505767cede5529083892bcb746e821433009acdf", "filename": "configure", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/configure", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -707,6 +707,7 @@ opt_nosave clang 0 \"prefer clang to gcc for building the runtime\"\n opt_nosave jemalloc 1 \"build liballoc with jemalloc\"\n opt elf-tls 1 \"elf thread local storage on platforms where supported\"\n opt full-bootstrap 0 \"build three compilers instead of two\"\n+opt extended 0 \"build an extended rust tool set\"\n \n valopt_nosave prefix \"/usr/local\" \"set installation prefix\"\n valopt_nosave local-rust-root \"/usr/local\" \"set prefix for local rust binary\""}, {"sha": "585d9f51b92a8e10673059830af8a211d9662381", "filename": "src/bootstrap/channel.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fbootstrap%2Fchannel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fbootstrap%2Fchannel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fchannel.rs?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -40,6 +40,9 @@ pub fn collect(build: &mut Build) {\n         }\n     }\n \n+    build.release_num = release_num.to_string();\n+    build.prerelease_version = release_num.to_string();\n+\n     // Depending on the channel, passed in `./configure --release-channel`,\n     // determine various properties of the build.\n     match &build.config.channel[..] {"}, {"sha": "7d1abcfa6f6e779c45cb4f7baf49e8846b80f00b", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -47,6 +47,7 @@ pub struct Config {\n     pub vendor: bool,\n     pub target_config: HashMap<String, Target>,\n     pub full_bootstrap: bool,\n+    pub extended: bool,\n \n     // llvm codegen options\n     pub llvm_assertions: bool,\n@@ -140,6 +141,7 @@ struct Build {\n     nodejs: Option<String>,\n     python: Option<String>,\n     full_bootstrap: Option<bool>,\n+    extended: Option<bool>,\n }\n \n /// TOML representation of various global install decisions.\n@@ -276,6 +278,7 @@ impl Config {\n         set(&mut config.submodules, build.submodules);\n         set(&mut config.vendor, build.vendor);\n         set(&mut config.full_bootstrap, build.full_bootstrap);\n+        set(&mut config.extended, build.extended);\n \n         if let Some(ref install) = toml.install {\n             config.prefix = install.prefix.clone().map(PathBuf::from);\n@@ -412,6 +415,7 @@ impl Config {\n                 (\"CODEGEN_TESTS\", self.codegen_tests),\n                 (\"VENDOR\", self.vendor),\n                 (\"FULL_BOOTSTRAP\", self.full_bootstrap),\n+                (\"EXTENDED\", self.extended),\n             }\n \n             match key {"}, {"sha": "4b859482562d26e27e18dace9921ce74e79cc59a", "filename": "src/bootstrap/config.toml.example", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fbootstrap%2Fconfig.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fbootstrap%2Fconfig.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.toml.example?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -118,6 +118,12 @@\n # option to true.\n #full-bootstrap = false\n \n+# Enable a build of the and extended rust tool set which is not only the\n+# compiler but also tools such as Cargo. This will also produce \"combined\n+# installers\" which are used to install Rust and Cargo together. This is\n+# disabled by default.\n+#extended = false\n+\n # =============================================================================\n # General install configuration options\n # ============================================================================="}, {"sha": "e5f0505952318f68a9222b106d02ac9ec09d4354", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 384, "deletions": 8, "changes": 392, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -18,11 +18,14 @@\n //! out to `rust-installer` still. This may one day be replaced with bits and\n //! pieces of `rustup.rs`!\n \n+use std::env;\n use std::fs::{self, File};\n-use std::io::Write;\n+use std::io::{Read, Write};\n use std::path::{PathBuf, Path};\n use std::process::Command;\n \n+use build_helper::output;\n+\n use {Build, Compiler, Mode};\n use util::{cp_r, libdir, is_dylib, cp_filtered, copy};\n \n@@ -35,6 +38,10 @@ pub fn package_vers(build: &Build) -> &str {\n     }\n }\n \n+fn pkgname(build: &Build, component: &str) -> String {\n+    format!(\"{}-{}\", component, package_vers(build))\n+}\n+\n fn distdir(build: &Build) -> PathBuf {\n     build.out.join(\"dist\")\n }\n@@ -53,8 +60,8 @@ pub fn docs(build: &Build, stage: u32, host: &str) {\n         return\n     }\n \n-    let name = format!(\"rust-docs-{}\", package_vers(build));\n-    let image = tmpdir(build).join(format!(\"{}-{}-image\", name, name));\n+    let name = pkgname(build, \"rust-docs\");\n+    let image = tmpdir(build).join(format!(\"{}-{}-image\", name, host));\n     let _ = fs::remove_dir_all(&image);\n \n     let dst = image.join(\"share/doc/rust/html\");\n@@ -94,7 +101,7 @@ pub fn docs(build: &Build, stage: u32, host: &str) {\n /// in Rust.\n pub fn mingw(build: &Build, host: &str) {\n     println!(\"Dist mingw ({})\", host);\n-    let name = format!(\"rust-mingw-{}\", package_vers(build));\n+    let name = pkgname(build, \"rust-mingw\");\n     let image = tmpdir(build).join(format!(\"{}-{}-image\", name, host));\n     let _ = fs::remove_dir_all(&image);\n     t!(fs::create_dir_all(&image));\n@@ -130,7 +137,7 @@ pub fn mingw(build: &Build, host: &str) {\n /// Creates the `rustc` installer component.\n pub fn rustc(build: &Build, stage: u32, host: &str) {\n     println!(\"Dist rustc stage{} ({})\", stage, host);\n-    let name = format!(\"rustc-{}\", package_vers(build));\n+    let name = pkgname(build, \"rustc\");\n     let image = tmpdir(build).join(format!(\"{}-{}-image\", name, host));\n     let _ = fs::remove_dir_all(&image);\n     let overlay = tmpdir(build).join(format!(\"{}-{}-overlay\", name, host));\n@@ -274,7 +281,7 @@ pub fn std(build: &Build, compiler: &Compiler, target: &str) {\n         return\n     }\n \n-    let name = format!(\"rust-std-{}\", package_vers(build));\n+    let name = pkgname(build, \"rust-std\");\n     let image = tmpdir(build).join(format!(\"{}-{}-image\", name, target));\n     let _ = fs::remove_dir_all(&image);\n \n@@ -328,7 +335,7 @@ pub fn analysis(build: &Build, compiler: &Compiler, target: &str) {\n         compiler.clone()\n     };\n \n-    let name = format!(\"rust-analysis-{}\", package_vers(build));\n+    let name = pkgname(build, \"rust-analysis\");\n     let image = tmpdir(build).join(format!(\"{}-{}-image\", name, target));\n \n     let src = build.stage_out(&compiler, Mode::Libstd).join(target).join(\"release\").join(\"deps\");\n@@ -357,7 +364,7 @@ pub fn analysis(build: &Build, compiler: &Compiler, target: &str) {\n pub fn rust_src(build: &Build) {\n     println!(\"Dist src\");\n \n-    let name = format!(\"rust-src-{}\", package_vers(build));\n+    let name = pkgname(build, \"rust-src\");\n     let image = tmpdir(build).join(format!(\"{}-image\", name));\n     let _ = fs::remove_dir_all(&image);\n \n@@ -500,3 +507,372 @@ fn write_file(path: &Path, data: &[u8]) {\n     let mut vf = t!(fs::File::create(path));\n     t!(vf.write_all(data));\n }\n+\n+// FIXME(#38531) eventually this should package up a Cargo that we just compiled\n+//               and tested locally, but for now we're downloading cargo\n+//               artifacts from their compiled location.\n+pub fn cargo(build: &Build, stage: u32, target: &str) {\n+    println!(\"Dist cargo stage{} ({})\", stage, target);\n+\n+    let branch = match &build.config.channel[..] {\n+        \"stable\" |\n+        \"beta\" => {\n+            build.release.split(\".\").take(2).collect::<Vec<_>>().join(\".\")\n+        }\n+        _ => \"master\".to_string(),\n+    };\n+\n+    let dst = tmpdir(build).join(\"cargo\");\n+    let _ = fs::remove_dir_all(&dst);\n+    build.run(Command::new(\"git\")\n+                .arg(\"clone\")\n+                .arg(\"--depth\").arg(\"1\")\n+                .arg(\"--branch\").arg(&branch)\n+                .arg(\"https://github.com/rust-lang/cargo\")\n+                .current_dir(dst.parent().unwrap()));\n+    let sha = output(Command::new(\"git\")\n+                .arg(\"rev-parse\")\n+                .arg(\"HEAD\")\n+                .current_dir(&dst));\n+    let sha = sha.trim();\n+    println!(\"\\tgot cargo sha: {}\", sha);\n+\n+    let input = format!(\"https://s3.amazonaws.com/rust-lang-ci/cargo-builds\\\n+                         /{}/cargo-nightly-{}.tar.gz\", sha, target);\n+    let output = distdir(build).join(format!(\"cargo-nightly-{}.tar.gz\", target));\n+    println!(\"\\tdownloading {}\", input);\n+    let mut curl = Command::new(\"curl\");\n+    curl.arg(\"-f\")\n+        .arg(\"-o\").arg(&output)\n+        .arg(&input)\n+        .arg(\"--retry\").arg(\"3\");\n+    build.run(&mut curl);\n+}\n+\n+/// Creates a combined installer for the specified target in the provided stage.\n+pub fn extended(build: &Build, stage: u32, target: &str) {\n+    println!(\"Dist extended stage{} ({})\", stage, target);\n+\n+    let dist = distdir(build);\n+    let rustc_installer = dist.join(format!(\"{}-{}.tar.gz\",\n+                                            pkgname(build, \"rustc\"),\n+                                            target));\n+    let cargo_installer = dist.join(format!(\"cargo-nightly-{}.tar.gz\", target));\n+    let docs_installer = dist.join(format!(\"{}-{}.tar.gz\",\n+                                           pkgname(build, \"rust-docs\"),\n+                                           target));\n+    let mingw_installer = dist.join(format!(\"{}-{}.tar.gz\",\n+                                            pkgname(build, \"rust-mingw\"),\n+                                            target));\n+    let std_installer = dist.join(format!(\"{}-{}.tar.gz\",\n+                                          pkgname(build, \"rust-std\"),\n+                                          target));\n+\n+    let tmp = tmpdir(build);\n+    let overlay = tmp.join(\"extended-overlay\");\n+    let etc = build.src.join(\"src/etc/installer\");\n+    let work = tmp.join(\"work\");\n+\n+    let _ = fs::remove_dir_all(&overlay);\n+    install(&build.src.join(\"COPYRIGHT\"), &overlay, 0o644);\n+    install(&build.src.join(\"LICENSE-APACHE\"), &overlay, 0o644);\n+    install(&build.src.join(\"LICENSE-MIT\"), &overlay, 0o644);\n+    let version = &build.version;\n+    t!(t!(File::create(overlay.join(\"version\"))).write_all(version.as_bytes()));\n+    install(&etc.join(\"README.md\"), &overlay, 0o644);\n+\n+    // When rust-std package split from rustc, we needed to ensure that during\n+    // upgrades rustc was upgraded before rust-std. To avoid rustc clobbering\n+    // the std files during uninstall. To do this ensure that rustc comes\n+    // before rust-std in the list below.\n+    let mut input_tarballs = format!(\"{},{},{},{}\",\n+                                     sanitize_sh(&rustc_installer),\n+                                     sanitize_sh(&cargo_installer),\n+                                     sanitize_sh(&docs_installer),\n+                                     sanitize_sh(&std_installer));\n+    if target.contains(\"pc-windows-gnu\") {\n+        input_tarballs.push_str(\",\");\n+        input_tarballs.push_str(&sanitize_sh(&mingw_installer));\n+    }\n+\n+    let mut cmd = Command::new(\"sh\");\n+    cmd.arg(sanitize_sh(&build.src.join(\"src/rust-installer/combine-installers.sh\")))\n+       .arg(\"--product-name=Rust\")\n+       .arg(\"--rel-manifest-dir=rustlib\")\n+       .arg(\"--success-message=Rust-is-ready-to-roll.\")\n+       .arg(format!(\"--work-dir={}\", sanitize_sh(&work)))\n+       .arg(format!(\"--output-dir={}\", sanitize_sh(&distdir(build))))\n+       .arg(format!(\"--package-name={}-{}\", pkgname(build, \"rust\"), target))\n+       .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n+       .arg(format!(\"--input-tarballs={}\", input_tarballs))\n+       .arg(format!(\"--non-installed-overlay={}\", sanitize_sh(&overlay)));\n+    build.run(&mut cmd);\n+\n+    let mut license = String::new();\n+    t!(t!(File::open(build.src.join(\"COPYRIGHT\"))).read_to_string(&mut license));\n+    license.push_str(\"\\n\");\n+    t!(t!(File::open(build.src.join(\"LICENSE-APACHE\"))).read_to_string(&mut license));\n+    license.push_str(\"\\n\");\n+    t!(t!(File::open(build.src.join(\"LICENSE-MIT\"))).read_to_string(&mut license));\n+\n+    let rtf = r\"{\\rtf1\\ansi\\deff0{\\fonttbl{\\f0\\fnil\\fcharset0 Arial;}}\\nowwrap\\fs18\";\n+    let mut rtf = rtf.to_string();\n+    rtf.push_str(\"\\n\");\n+    for line in license.lines() {\n+        rtf.push_str(line);\n+        rtf.push_str(\"\\\\line \");\n+    }\n+    rtf.push_str(\"}\");\n+\n+    if target.contains(\"apple-darwin\") {\n+        let pkg = tmp.join(\"pkg\");\n+        let _ = fs::remove_dir_all(&pkg);\n+        t!(fs::create_dir_all(pkg.join(\"rustc\")));\n+        t!(fs::create_dir_all(pkg.join(\"cargo\")));\n+        t!(fs::create_dir_all(pkg.join(\"rust-docs\")));\n+        t!(fs::create_dir_all(pkg.join(\"rust-std\")));\n+\n+        cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rustc\"), target)),\n+             &pkg.join(\"rustc\"));\n+        cp_r(&work.join(&format!(\"cargo-nightly-{}\", target)),\n+             &pkg.join(\"cargo\"));\n+        cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-docs\"), target)),\n+             &pkg.join(\"rust-docs\"));\n+        cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-std\"), target)),\n+             &pkg.join(\"rust-std\"));\n+\n+        install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"rustc\"), 0o755);\n+        install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"cargo\"), 0o755);\n+        install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"rust-docs\"), 0o755);\n+        install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"rust-std\"), 0o755);\n+\n+        let pkgbuild = |component: &str| {\n+            let mut cmd = Command::new(\"pkgbuild\");\n+            cmd.arg(\"--identifier\").arg(format!(\"org.rust-lang.{}\", component))\n+               .arg(\"--scripts\").arg(pkg.join(component))\n+               .arg(\"--nopayload\")\n+               .arg(pkg.join(component).with_extension(\"pkg\"));\n+            build.run(&mut cmd);\n+        };\n+        pkgbuild(\"rustc\");\n+        pkgbuild(\"cargo\");\n+        pkgbuild(\"rust-docs\");\n+        pkgbuild(\"rust-std\");\n+\n+        // create an 'uninstall' package\n+        install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"uninstall\"), 0o755);\n+        pkgbuild(\"uninstall\");\n+\n+        t!(fs::create_dir_all(pkg.join(\"res\")));\n+        t!(t!(File::create(pkg.join(\"res/LICENSE.txt\"))).write_all(license.as_bytes()));\n+        install(&etc.join(\"gfx/rust-logo.png\"), &pkg.join(\"res\"), 0o644);\n+        let mut cmd = Command::new(\"productbuild\");\n+        cmd.arg(\"--distribution\").arg(etc.join(\"pkg/Distribution.xml\"))\n+           .arg(\"--resources\").arg(pkg.join(\"res\"))\n+           .arg(distdir(build).join(format!(\"{}-{}.pkg\",\n+                                             pkgname(build, \"rust\"),\n+                                             target)))\n+           .arg(\"--package-path\").arg(&pkg);\n+        build.run(&mut cmd);\n+    }\n+\n+    if target.contains(\"windows\") {\n+        let exe = tmp.join(\"exe\");\n+        let _ = fs::remove_dir_all(&exe);\n+        t!(fs::create_dir_all(exe.join(\"rustc\")));\n+        t!(fs::create_dir_all(exe.join(\"cargo\")));\n+        t!(fs::create_dir_all(exe.join(\"rust-docs\")));\n+        t!(fs::create_dir_all(exe.join(\"rust-std\")));\n+        cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rustc\"), target))\n+                  .join(\"rustc\"),\n+             &exe.join(\"rustc\"));\n+        cp_r(&work.join(&format!(\"cargo-nightly-{}\", target))\n+                  .join(\"cargo\"),\n+             &exe.join(\"cargo\"));\n+        cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-docs\"), target))\n+                  .join(\"rust-docs\"),\n+             &exe.join(\"rust-docs\"));\n+        cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-std\"), target))\n+                  .join(format!(\"rust-std-{}\", target)),\n+             &exe.join(\"rust-std\"));\n+\n+        t!(fs::remove_file(exe.join(\"rustc/manifest.in\")));\n+        t!(fs::remove_file(exe.join(\"cargo/manifest.in\")));\n+        t!(fs::remove_file(exe.join(\"rust-docs/manifest.in\")));\n+        t!(fs::remove_file(exe.join(\"rust-std/manifest.in\")));\n+\n+        if target.contains(\"windows-gnu\") {\n+            t!(fs::create_dir_all(exe.join(\"rust-mingw\")));\n+            cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-mingw\"), target))\n+                      .join(\"rust-mingw\"),\n+                 &exe.join(\"rust-mingw\"));\n+            t!(fs::remove_file(exe.join(\"rust-mingw/manifest.in\")));\n+        }\n+\n+        install(&etc.join(\"exe/rust.iss\"), &exe, 0o644);\n+        install(&etc.join(\"exe/modpath.iss\"), &exe, 0o644);\n+        install(&etc.join(\"exe/upgrade.iss\"), &exe, 0o644);\n+        install(&etc.join(\"gfx/rust-logo.ico\"), &exe, 0o644);\n+        t!(t!(File::create(exe.join(\"LICENSE.txt\"))).write_all(license.as_bytes()));\n+\n+        // Generate exe installer\n+        let mut cmd = Command::new(\"iscc\");\n+        cmd.arg(\"rust.iss\")\n+           .current_dir(&exe);\n+        if target.contains(\"windows-gnu\") {\n+            cmd.arg(\"/dMINGW\");\n+        }\n+        add_env(build, &mut cmd, target);\n+        build.run(&mut cmd);\n+        install(&exe.join(format!(\"{}-{}.exe\", pkgname(build, \"rust\"), target)),\n+                &distdir(build),\n+                0o755);\n+\n+        // Generate msi installer\n+        let wix = PathBuf::from(env::var_os(\"WIX\").unwrap());\n+        let heat = wix.join(\"bin/heat.exe\");\n+        let candle = wix.join(\"bin/candle.exe\");\n+        let light = wix.join(\"bin/light.exe\");\n+\n+        let heat_flags = [\"-nologo\", \"-gg\", \"-sfrag\", \"-srd\", \"-sreg\"];\n+        build.run(Command::new(&heat)\n+                        .current_dir(&exe)\n+                        .arg(\"dir\")\n+                        .arg(\"rustc\")\n+                        .args(&heat_flags)\n+                        .arg(\"-cg\").arg(\"RustcGroup\")\n+                        .arg(\"-dr\").arg(\"Rustc\")\n+                        .arg(\"-var\").arg(\"var.RustcDir\")\n+                        .arg(\"-out\").arg(exe.join(\"RustcGroup.wxs\")));\n+        build.run(Command::new(&heat)\n+                        .current_dir(&exe)\n+                        .arg(\"dir\")\n+                        .arg(\"rust-docs\")\n+                        .args(&heat_flags)\n+                        .arg(\"-cg\").arg(\"DocsGroup\")\n+                        .arg(\"-dr\").arg(\"Docs\")\n+                        .arg(\"-var\").arg(\"var.DocsDir\")\n+                        .arg(\"-out\").arg(exe.join(\"DocsGroup.wxs\"))\n+                        .arg(\"-t\").arg(etc.join(\"msi/squash-components.xsl\")));\n+        build.run(Command::new(&heat)\n+                        .current_dir(&exe)\n+                        .arg(\"dir\")\n+                        .arg(\"cargo\")\n+                        .args(&heat_flags)\n+                        .arg(\"-cg\").arg(\"CargoGroup\")\n+                        .arg(\"-dr\").arg(\"Cargo\")\n+                        .arg(\"-var\").arg(\"var.CargoDir\")\n+                        .arg(\"-out\").arg(exe.join(\"CargoGroup.wxs\"))\n+                        .arg(\"-t\").arg(etc.join(\"msi/remove-duplicates.xsl\")));\n+        build.run(Command::new(&heat)\n+                        .current_dir(&exe)\n+                        .arg(\"dir\")\n+                        .arg(\"rust-std\")\n+                        .args(&heat_flags)\n+                        .arg(\"-cg\").arg(\"StdGroup\")\n+                        .arg(\"-dr\").arg(\"Std\")\n+                        .arg(\"-var\").arg(\"var.StdDir\")\n+                        .arg(\"-out\").arg(exe.join(\"StdGroup.wxs\")));\n+        if target.contains(\"windows-gnu\") {\n+            build.run(Command::new(&heat)\n+                            .current_dir(&exe)\n+                            .arg(\"dir\")\n+                            .arg(\"rust-mingw\")\n+                            .args(&heat_flags)\n+                            .arg(\"-cg\").arg(\"GccGroup\")\n+                            .arg(\"-dr\").arg(\"Gcc\")\n+                            .arg(\"-var\").arg(\"var.GccDir\")\n+                            .arg(\"-out\").arg(exe.join(\"GccGroup.wxs\")));\n+        }\n+\n+        let candle = |input: &Path| {\n+            let output = exe.join(input.file_stem().unwrap())\n+                            .with_extension(\"wixobj\");\n+            let arch = if target.contains(\"x86_64\") {\"x64\"} else {\"x86\"};\n+            let mut cmd = Command::new(&candle);\n+            cmd.current_dir(&exe)\n+               .arg(\"-nologo\")\n+               .arg(\"-dRustcDir=rustc\")\n+               .arg(\"-dDocsDir=rust-docs\")\n+               .arg(\"-dCargoDir=cargo\")\n+               .arg(\"-dStdDir=rust-std\")\n+               .arg(\"-arch\").arg(&arch)\n+               .arg(\"-out\").arg(&output)\n+               .arg(&input);\n+            add_env(build, &mut cmd, target);\n+\n+            if target.contains(\"windows-gnu\") {\n+               cmd.arg(\"-dGccDir=rust-mingw\");\n+            }\n+            build.run(&mut cmd);\n+        };\n+        candle(&etc.join(\"msi/rust.wxs\"));\n+        candle(&etc.join(\"msi/ui.wxs\"));\n+        candle(&etc.join(\"msi/rustwelcomedlg.wxs\"));\n+        candle(\"RustcGroup.wxs\".as_ref());\n+        candle(\"DocsGroup.wxs\".as_ref());\n+        candle(\"CargoGroup.wxs\".as_ref());\n+        candle(\"StdGroup.wxs\".as_ref());\n+\n+        if target.contains(\"windows-gnu\") {\n+            candle(\"GccGroup.wxs\".as_ref());\n+        }\n+\n+        t!(t!(File::create(exe.join(\"LICENSE.rtf\"))).write_all(rtf.as_bytes()));\n+        install(&etc.join(\"gfx/banner.bmp\"), &exe, 0o644);\n+        install(&etc.join(\"gfx/dialogbg.bmp\"), &exe, 0o644);\n+\n+        let filename = format!(\"{}-{}.msi\", pkgname(build, \"rust\"), target);\n+        let mut cmd = Command::new(&light);\n+        cmd.arg(\"-nologo\")\n+           .arg(\"-ext\").arg(\"WixUIExtension\")\n+           .arg(\"-ext\").arg(\"WixUtilExtension\")\n+           .arg(\"-out\").arg(distdir(build).join(filename))\n+           .arg(\"rust.wixobj\")\n+           .arg(\"ui.wixobj\")\n+           .arg(\"rustwelcomedlg.wixobj\")\n+           .arg(\"RustcGroup.wixobj\")\n+           .arg(\"DocsGroup.wixobj\")\n+           .arg(\"CargoGroup.wixobj\")\n+           .arg(\"StdGroup.wixobj\")\n+           .current_dir(&exe);\n+\n+        if target.contains(\"windows-gnu\") {\n+           cmd.arg(\"GccGroup.wixobj\");\n+        }\n+        // ICE57 wrongly complains about the shortcuts\n+        cmd.arg(\"-sice:ICE57\");\n+\n+        build.run(&mut cmd);\n+    }\n+}\n+\n+fn add_env(build: &Build, cmd: &mut Command, target: &str) {\n+    let mut parts = build.release_num.split('.');\n+    cmd.env(\"CFG_RELEASE_INFO\", &build.version)\n+       .env(\"CFG_RELEASE_NUM\", &build.release_num)\n+       .env(\"CFG_RELEASE\", &build.release)\n+       .env(\"CFG_PRERELEASE_VERSION\", &build.prerelease_version)\n+       .env(\"CFG_VER_MAJOR\", parts.next().unwrap())\n+       .env(\"CFG_VER_MINOR\", parts.next().unwrap())\n+       .env(\"CFG_VER_PATCH\", parts.next().unwrap())\n+       .env(\"CFG_VER_BUILD\", \"0\") // just needed to build\n+       .env(\"CFG_PACKAGE_VERS\", package_vers(build))\n+       .env(\"CFG_PACKAGE_NAME\", pkgname(build, \"rust\"))\n+       .env(\"CFG_BUILD\", target)\n+       .env(\"CFG_CHANNEL\", &build.config.channel);\n+\n+    if target.contains(\"windows-gnu\") {\n+       cmd.env(\"CFG_MINGW\", \"1\")\n+          .env(\"CFG_ABI\", \"GNU\");\n+    } else {\n+       cmd.env(\"CFG_MINGW\", \"0\")\n+          .env(\"CFG_ABI\", \"MSVC\");\n+    }\n+\n+    if target.contains(\"x86_64\") {\n+       cmd.env(\"CFG_PLATFORM\", \"x64\");\n+    } else {\n+       cmd.env(\"CFG_PLATFORM\", \"x86\");\n+    }\n+}"}, {"sha": "db2fe2db813a65e1d9c510db1b17edb7dfb2809a", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -170,6 +170,8 @@ pub struct Build {\n     version: String,\n     package_vers: String,\n     local_rebuild: bool,\n+    release_num: String,\n+    prerelease_version: String,\n \n     // Probed tools at runtime\n     lldb_version: Option<String>,\n@@ -271,6 +273,8 @@ impl Build {\n             lldb_version: None,\n             lldb_python_dir: None,\n             is_sudo: is_sudo,\n+            release_num: String::new(),\n+            prerelease_version: String::new(),\n         }\n     }\n "}, {"sha": "697b14c6050cc86c7c30d84a5a40287878488977", "filename": "src/bootstrap/step.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fbootstrap%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fbootstrap%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fstep.rs?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -618,6 +618,20 @@ pub fn build_rules<'a>(build: &'a Build) -> Rules {\n     rules.dist(\"install\", \"path/to/nowhere\")\n          .dep(|s| s.name(\"default:dist\"))\n          .run(move |s| install::install(build, s.stage, s.target));\n+    rules.dist(\"dist-cargo\", \"cargo\")\n+         .host(true)\n+         .only_host_build(true)\n+         .run(move |s| dist::cargo(build, s.stage, s.target));\n+    rules.dist(\"dist-extended\", \"extended\")\n+         .default(build.config.extended)\n+         .host(true)\n+         .only_host_build(true)\n+         .dep(|d| d.name(\"dist-std\"))\n+         .dep(|d| d.name(\"dist-rustc\"))\n+         .dep(|d| d.name(\"dist-mingw\"))\n+         .dep(|d| d.name(\"dist-docs\"))\n+         .dep(|d| d.name(\"dist-cargo\"))\n+         .run(move |s| dist::extended(build, s.stage, s.target));\n \n     rules.verify();\n     return rules;"}, {"sha": "217a724fb9a368b1f97023d321fd32e6992e405a", "filename": "src/ci/docker/dist-arm-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -76,5 +76,5 @@ ENV CC_arm_unknown_linux_gnueabi=arm-unknown-linux-gnueabi-gcc \\\n ENV HOSTS=arm-unknown-linux-gnueabi\n ENV HOSTS=$HOSTS,arm-unknown-linux-gnueabihf\n \n-ENV RUST_CONFIGURE_ARGS --host=$HOSTS\n+ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "f26885bbb539a2723beab51548a3bb954bd1e358", "filename": "src/ci/docker/dist-armv7-aarch64-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-armv7-aarch64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-armv7-aarch64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-aarch64-linux%2FDockerfile?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -77,5 +77,5 @@ ENV CC_aarch64_unknown_linux_gnu=aarch64-unknown-linux-gnueabi-gcc \\\n ENV HOSTS=armv7-unknown-linux-gnueabihf\n ENV HOSTS=$HOSTS,aarch64-unknown-linux-gnu\n \n-ENV RUST_CONFIGURE_ARGS --host=$HOSTS\n+ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "d824c4041ceeb9bc59cd9e4dd5525031c94fcd68", "filename": "src/ci/docker/dist-freebsd/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-freebsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-freebsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-freebsd%2FDockerfile?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -38,5 +38,5 @@ ENV \\\n ENV HOSTS=x86_64-unknown-freebsd\n ENV HOSTS=$HOSTS,i686-unknown-freebsd\n \n-ENV RUST_CONFIGURE_ARGS --host=$HOSTS\n+ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "38ee95038f646788cc81d8bf4741ab0b39fc7467", "filename": "src/ci/docker/dist-mips-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-mips-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-mips-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-mips-linux%2FDockerfile?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -27,5 +27,5 @@ ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n ENV HOSTS=mips-unknown-linux-gnu\n ENV HOSTS=$HOSTS,mipsel-unknown-linux-gnu\n \n-ENV RUST_CONFIGURE_ARGS --host=$HOSTS\n+ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "c9d89d6287450e9d2270e0092f60b8bfb19a4e49", "filename": "src/ci/docker/dist-mips64-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-mips64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-mips64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-mips64-linux%2FDockerfile?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -27,5 +27,5 @@ ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n ENV HOSTS=mips64-unknown-linux-gnuabi64\n ENV HOSTS=$HOSTS,mips64el-unknown-linux-gnuabi64\n \n-ENV RUST_CONFIGURE_ARGS --host=$HOSTS\n+ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "ed4e9a35960f6f213c5cd5ad3d109b212903aa55", "filename": "src/ci/docker/dist-powerpc-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2FDockerfile?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -25,7 +25,7 @@ ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n \n ENV HOSTS=powerpc-unknown-linux-gnu\n \n-ENV RUST_CONFIGURE_ARGS --host=$HOSTS\n+ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS\n \n # FIXME(#36150) this will fail the bootstrap. Probably means something bad is"}, {"sha": "6c04048f4ddf8ce5437c1ebeddf7036f6d6e9f39", "filename": "src/ci/docker/dist-powerpc64-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2FDockerfile?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -32,5 +32,5 @@ ENV \\\n ENV HOSTS=powerpc64-unknown-linux-gnu\n ENV HOSTS=$HOSTS,powerpc64le-unknown-linux-gnu\n \n-ENV RUST_CONFIGURE_ARGS --host=$HOSTS\n+ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "ec38855fe3a0181a6de32fa1256908c33fb016ba", "filename": "src/ci/docker/dist-s390x-linux-netbsd/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-s390x-linux-netbsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-s390x-linux-netbsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-s390x-linux-netbsd%2FDockerfile?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -36,5 +36,5 @@ ENV \\\n ENV HOSTS=x86_64-unknown-netbsd\n ENV HOSTS=$HOSTS,s390x-unknown-linux-gnu\n \n-ENV RUST_CONFIGURE_ARGS --host=$HOSTS\n+ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "4e4f5dd6f1e5328614cf650e14bdaac571e508c5", "filename": "src/ci/docker/dist-x86-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-x86-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fci%2Fdocker%2Fdist-x86-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86-linux%2FDockerfile?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -76,5 +76,5 @@ RUN curl -L https://api.pub.build.mozilla.org/tooltool/sha512/$SCCACHE_DIGEST |\n ENV HOSTS=i686-unknown-linux-gnu\n ENV HOSTS=$HOSTS,x86_64-unknown-linux-gnu\n \n-ENV RUST_CONFIGURE_ARGS --host=$HOSTS\n+ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "dbefe753beeb795bfa78f7c01e3b68df3fef62bb", "filename": "src/etc/installer/README.md", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2FREADME.md?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -0,0 +1,28 @@\n+# The Rust Programming Language\n+\n+This is a compiler for Rust, including standard libraries, tools and\n+documentation. Rust is a systems programming language that is fast,\n+memory safe and multithreaded, but does not employ a garbage collector\n+or otherwise impose significant runtime overhead.\n+\n+To install to /usr/local (the default), run the included `install.sh` script:\n+\n+    $ sudo ./install.sh\n+\n+To uninstall:\n+\n+    $ sudo /usr/local/lib/rustlib/uninstall.sh\n+\n+`install.sh` has a few options, including the possibility to set an installation\n+prefix. You can display these options by running:\n+\n+    $ sudo ./install.sh --help\n+\n+Read [The Book](http://doc.rust-lang.org/book/index.html) to learn how\n+to use Rust.\n+\n+Rust is primarily distributed under the terms of both the MIT license\n+and the Apache License (Version 2.0), with portions covered by various\n+BSD-like licenses.\n+\n+See LICENSE-APACHE, LICENSE-MIT, and COPYRIGHT for details."}, {"sha": "35cc0097035c3d4daf0c369aac981b2a55ff1cc9", "filename": "src/etc/installer/exe/modpath.iss", "status": "added", "additions": 219, "deletions": 0, "changes": 219, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fexe%2Fmodpath.iss", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fexe%2Fmodpath.iss", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fexe%2Fmodpath.iss?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -0,0 +1,219 @@\n+// ----------------------------------------------------------------------------\n+//\n+// Inno Setup Ver:\t5.4.2\n+// Script Version:\t1.4.1\n+// Author:\t\t\tJared Breland <jbreland@legroom.net>\n+// Homepage:\t\thttp://www.legroom.net/software\n+// License:\t\t\tGNU Lesser General Public License (LGPL), version 3\n+//\t\t\t\t\t\thttp://www.gnu.org/licenses/lgpl.html\n+//\n+// Script Function:\n+//\tAllow modification of environmental path directly from Inno Setup installers\n+//\n+// Instructions:\n+//\tCopy modpath.iss to the same directory as your setup script\n+//\n+//\tAdd this statement to your [Setup] section\n+//\t\tChangesEnvironment=true\n+//\n+//\tAdd this statement to your [Tasks] section\n+//\tYou can change the Description or Flags\n+//\tYou can change the Name, but it must match the ModPathName setting below\n+//\t\tName: modifypath; Description: &Add application directory to your environmental path; Flags: unchecked\n+//\n+//\tAdd the following to the end of your [Code] section\n+//\tModPathName defines the name of the task defined above\n+//\tModPathType defines whether the 'user' or 'system' path will be modified;\n+//\t\tthis will default to user if anything other than system is set\n+//\tsetArrayLength must specify the total number of dirs to be added\n+//\tResult[0] contains first directory, Result[1] contains second, etc.\n+//\t\tconst\n+//\t\t\tModPathName = 'modifypath';\n+//\t\t\tModPathType = 'user';\n+//\n+//\t\tfunction ModPathDir(): TArrayOfString;\n+//\t\tbegin\n+//\t\t\tsetArrayLength(Result, 1);\n+//\t\t\tResult[0] := ExpandConstant('{app}');\n+//\t\tend;\n+//\t\t#include \"modpath.iss\"\n+// ----------------------------------------------------------------------------\n+\n+procedure ModPath();\n+var\n+\toldpath:\tString;\n+\tnewpath:\tString;\n+\tupdatepath:\tBoolean;\n+\tpathArr:\tTArrayOfString;\n+\taExecFile:\tString;\n+\taExecArr:\tTArrayOfString;\n+\ti, d:\t\tInteger;\n+\tpathdir:\tTArrayOfString;\n+\tregroot:\tInteger;\n+\tregpath:\tString;\n+\n+begin\n+\t// Get constants from main script and adjust behavior accordingly\n+\t// ModPathType MUST be 'system' or 'user'; force 'user' if invalid\n+\tif ModPathType = 'system' then begin\n+\t\tregroot := HKEY_LOCAL_MACHINE;\n+\t\tregpath := 'SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment';\n+\tend else begin\n+\t\tregroot := HKEY_CURRENT_USER;\n+\t\tregpath := 'Environment';\n+\tend;\n+\n+\t// Get array of new directories and act on each individually\n+\tpathdir := ModPathDir();\n+\tfor d := 0 to GetArrayLength(pathdir)-1 do begin\n+\t\tupdatepath := true;\n+\n+\t\t// Modify WinNT path\n+\t\tif UsingWinNT() = true then begin\n+\n+\t\t\t// Get current path, split into an array\n+\t\t\tRegQueryStringValue(regroot, regpath, 'Path', oldpath);\n+\t\t\toldpath := oldpath + ';';\n+\t\t\ti := 0;\n+\n+\t\t\twhile (Pos(';', oldpath) > 0) do begin\n+\t\t\t\tSetArrayLength(pathArr, i+1);\n+\t\t\t\tpathArr[i] := Copy(oldpath, 0, Pos(';', oldpath)-1);\n+\t\t\t\toldpath := Copy(oldpath, Pos(';', oldpath)+1, Length(oldpath));\n+\t\t\t\ti := i + 1;\n+\n+\t\t\t\t// Check if current directory matches app dir\n+\t\t\t\tif pathdir[d] = pathArr[i-1] then begin\n+\t\t\t\t\t// if uninstalling, remove dir from path\n+\t\t\t\t\tif IsUninstaller() = true then begin\n+\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t// if installing, flag that dir already exists in path\n+\t\t\t\t\tend else begin\n+\t\t\t\t\t\tupdatepath := false;\n+\t\t\t\t\tend;\n+\t\t\t\tend;\n+\n+\t\t\t\t// Add current directory to new path\n+\t\t\t\tif i = 1 then begin\n+\t\t\t\t\tnewpath := pathArr[i-1];\n+\t\t\t\tend else begin\n+\t\t\t\t\tnewpath := newpath + ';' + pathArr[i-1];\n+\t\t\t\tend;\n+\t\t\tend;\n+\n+\t\t\t// Append app dir to path if not already included\n+\t\t\tif (IsUninstaller() = false) AND (updatepath = true) then\n+\t\t\t\tnewpath := newpath + ';' + pathdir[d];\n+\n+\t\t\t// Write new path\n+\t\t\tRegWriteStringValue(regroot, regpath, 'Path', newpath);\n+\n+\t\t// Modify Win9x path\n+\t\tend else begin\n+\n+\t\t\t// Convert to shortened dirname\n+\t\t\tpathdir[d] := GetShortName(pathdir[d]);\n+\n+\t\t\t// If autoexec.bat exists, check if app dir already exists in path\n+\t\t\taExecFile := 'C:\\AUTOEXEC.BAT';\n+\t\t\tif FileExists(aExecFile) then begin\n+\t\t\t\tLoadStringsFromFile(aExecFile, aExecArr);\n+\t\t\t\tfor i := 0 to GetArrayLength(aExecArr)-1 do begin\n+\t\t\t\t\tif IsUninstaller() = false then begin\n+\t\t\t\t\t\t// If app dir already exists while installing, skip add\n+\t\t\t\t\t\tif (Pos(pathdir[d], aExecArr[i]) > 0) then\n+\t\t\t\t\t\t\tupdatepath := false;\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\tend else begin\n+\t\t\t\t\t\t// If app dir exists and = what we originally set, then delete at uninstall\n+\t\t\t\t\t\tif aExecArr[i] = 'SET PATH=%PATH%;' + pathdir[d] then\n+\t\t\t\t\t\t\taExecArr[i] := '';\n+\t\t\t\t\tend;\n+\t\t\t\tend;\n+\t\t\tend;\n+\n+\t\t\t// If app dir not found, or autoexec.bat didn't exist, then (create and) append to current path\n+\t\t\tif (IsUninstaller() = false) AND (updatepath = true) then begin\n+\t\t\t\tSaveStringToFile(aExecFile, #13#10 + 'SET PATH=%PATH%;' + pathdir[d], True);\n+\n+\t\t\t// If uninstalling, write the full autoexec out\n+\t\t\tend else begin\n+\t\t\t\tSaveStringsToFile(aExecFile, aExecArr, False);\n+\t\t\tend;\n+\t\tend;\n+\tend;\n+end;\n+\n+// Split a string into an array using passed delimeter\n+procedure Explode(var Dest: TArrayOfString; Text: String; Separator: String);\n+var\n+\ti: Integer;\n+begin\n+\ti := 0;\n+\trepeat\n+\t\tSetArrayLength(Dest, i+1);\n+\t\tif Pos(Separator,Text) > 0 then\tbegin\n+\t\t\tDest[i] := Copy(Text, 1, Pos(Separator, Text)-1);\n+\t\t\tText := Copy(Text, Pos(Separator,Text) + Length(Separator), Length(Text));\n+\t\t\ti := i + 1;\n+\t\tend else begin\n+\t\t\t Dest[i] := Text;\n+\t\t\t Text := '';\n+\t\tend;\n+\tuntil Length(Text)=0;\n+end;\n+\n+\n+procedure ModPathCurStepChanged(CurStep: TSetupStep);\n+var\n+\ttaskname:\tString;\n+begin\n+\ttaskname := ModPathName;\n+\tif CurStep = ssPostInstall then\n+\t\tif IsTaskSelected(taskname) then\n+\t\t\tModPath();\n+end;\n+\n+procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);\n+var\n+\taSelectedTasks:\tTArrayOfString;\n+\ti:\t\t\t\tInteger;\n+\ttaskname:\t\tString;\n+\tregpath:\t\tString;\n+\tregstring:\t\tString;\n+\tappid:\t\t\tString;\n+begin\n+\t// only run during actual uninstall\n+\tif CurUninstallStep = usUninstall then begin\n+\t\t// get list of selected tasks saved in registry at install time\n+\t\tappid := '{#emit SetupSetting(\"AppId\")}';\n+\t\tif appid = '' then appid := '{#emit SetupSetting(\"AppName\")}';\n+\t\tregpath := ExpandConstant('Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\'+appid+'_is1');\n+\t\tRegQueryStringValue(HKLM, regpath, 'Inno Setup: Selected Tasks', regstring);\n+\t\tif regstring = '' then RegQueryStringValue(HKCU, regpath, 'Inno Setup: Selected Tasks', regstring);\n+\n+\t\t// check each task; if matches modpath taskname, trigger patch removal\n+\t\tif regstring <> '' then begin\n+\t\t\ttaskname := ModPathName;\n+\t\t\tExplode(aSelectedTasks, regstring, ',');\n+\t\t\tif GetArrayLength(aSelectedTasks) > 0 then begin\n+\t\t\t\tfor i := 0 to GetArrayLength(aSelectedTasks)-1 do begin\n+\t\t\t\t\tif comparetext(aSelectedTasks[i], taskname) = 0 then\n+\t\t\t\t\t\tModPath();\n+\t\t\t\tend;\n+\t\t\tend;\n+\t\tend;\n+\tend;\n+end;\n+\n+function NeedRestart(): Boolean;\n+var\n+\ttaskname:\tString;\n+begin\n+\ttaskname := ModPathName;\n+\tif IsTaskSelected(taskname) and not UsingWinNT() then begin\n+\t\tResult := True;\n+\tend else begin\n+\t\tResult := False;\n+\tend;\n+end;"}, {"sha": "a61a19f909af3cdf2deb3df951731bac6c80dbd1", "filename": "src/etc/installer/exe/rust.iss", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fexe%2Frust.iss", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fexe%2Frust.iss", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fexe%2Frust.iss?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -0,0 +1,80 @@\n+#define CFG_RELEASE_NUM GetEnv(\"CFG_RELEASE_NUM\")\n+#define CFG_RELEASE GetEnv(\"CFG_RELEASE\")\n+#define CFG_PACKAGE_NAME GetEnv(\"CFG_PACKAGE_NAME\")\n+#define CFG_BUILD GetEnv(\"CFG_BUILD\")\n+\n+[Setup]\n+\n+SetupIconFile=rust-logo.ico\n+AppName=Rust\n+AppVersion={#CFG_RELEASE}\n+AppCopyright=Copyright (C) 2006-2014 Mozilla Foundation, MIT license\n+AppPublisher=Mozilla Foundation\n+AppPublisherURL=http://www.rust-lang.org\n+VersionInfoVersion={#CFG_RELEASE_NUM}\n+LicenseFile=LICENSE.txt\n+\n+PrivilegesRequired=lowest\n+DisableWelcomePage=true\n+DisableProgramGroupPage=true\n+DisableReadyPage=true\n+DisableStartupPrompt=true\n+\n+OutputDir=.\\\n+SourceDir=.\\\n+OutputBaseFilename={#CFG_PACKAGE_NAME}-{#CFG_BUILD}\n+DefaultDirName={sd}\\Rust\n+\n+Compression=lzma2/ultra\n+InternalCompressLevel=ultra\n+SolidCompression=true\n+\n+ChangesEnvironment=true\n+ChangesAssociations=no\n+AllowUNCPath=false\n+AllowNoIcons=true\n+Uninstallable=yes\n+\n+[Tasks]\n+Name: modifypath; Description: &Add {app}\\bin to your PATH (recommended)\n+\n+[Components]\n+Name: rust; Description: \"Rust compiler and standard crates\"; Types: full compact custom; Flags: fixed\n+#ifdef MINGW\n+Name: gcc; Description: \"Linker and platform libraries\"; Types: full\n+#endif\n+Name: docs; Description: \"HTML documentation\"; Types: full\n+Name: cargo; Description: \"Cargo, the Rust package manager\"; Types: full\n+Name: std; Description: \"The Rust Standard Library\"; Types: full\n+\n+[Files]\n+Source: \"rustc/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: rust\n+#ifdef MINGW\n+Source: \"rust-mingw/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: gcc\n+#endif\n+Source: \"rust-docs/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: docs\n+Source: \"cargo/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: cargo\n+Source: \"rust-std/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: std\n+\n+[Code]\n+const\n+\tModPathName = 'modifypath';\n+\tModPathType = 'user';\n+\n+function ModPathDir(): TArrayOfString;\n+begin\n+\tsetArrayLength(Result, 1)\n+\tResult[0] := ExpandConstant('{app}\\bin');\n+end;\n+\n+#include \"modpath.iss\"\n+#include \"upgrade.iss\"\n+\n+// Both modpath.iss and upgrade.iss want to overload CurStepChanged.\n+// This version does the overload then delegates to each.\n+\n+procedure CurStepChanged(CurStep: TSetupStep);\n+begin\n+  UpgradeCurStepChanged(CurStep);\n+  ModPathCurStepChanged(CurStep);\n+end;"}, {"sha": "29da7c333bb72b3c1cc1d6d463b8acc792c16363", "filename": "src/etc/installer/exe/upgrade.iss", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fexe%2Fupgrade.iss", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fexe%2Fupgrade.iss", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fexe%2Fupgrade.iss?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -0,0 +1,61 @@\n+// The following code taken from https://stackoverflow.com/questions/2000296/innosetup-how-to-automatically-uninstall-previous-installed-version\n+// It performs upgrades by running the uninstaller before the install\n+\n+/////////////////////////////////////////////////////////////////////\n+function GetUninstallString(): String;\n+var\n+  sUnInstPath: String;\n+  sUnInstallString: String;\n+begin\n+  sUnInstPath := ExpandConstant('Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\Rust_is1');\n+  sUnInstallString := '';\n+  if not RegQueryStringValue(HKLM, sUnInstPath, 'UninstallString', sUnInstallString) then\n+    RegQueryStringValue(HKCU, sUnInstPath, 'UninstallString', sUnInstallString);\n+  Result := sUnInstallString;\n+end;\n+\n+\n+/////////////////////////////////////////////////////////////////////\n+function IsUpgrade(): Boolean;\n+begin\n+  Result := (GetUninstallString() <> '');\n+end;\n+\n+\n+/////////////////////////////////////////////////////////////////////\n+function UnInstallOldVersion(): Integer;\n+var\n+  sUnInstallString: String;\n+  iResultCode: Integer;\n+begin\n+// Return Values:\n+// 1 - uninstall string is empty\n+// 2 - error executing the UnInstallString\n+// 3 - successfully executed the UnInstallString\n+\n+  // default return value\n+  Result := 0;\n+\n+  // get the uninstall string of the old app\n+  sUnInstallString := GetUninstallString();\n+  if sUnInstallString <> '' then begin\n+    sUnInstallString := RemoveQuotes(sUnInstallString);\n+    if Exec(sUnInstallString, '/SILENT /NORESTART /SUPPRESSMSGBOXES','', SW_HIDE, ewWaitUntilTerminated, iResultCode) then\n+      Result := 3\n+    else\n+      Result := 2;\n+  end else\n+    Result := 1;\n+end;\n+\n+/////////////////////////////////////////////////////////////////////\n+procedure UpgradeCurStepChanged(CurStep: TSetupStep);\n+begin\n+  if (CurStep=ssInstall) then\n+  begin\n+    if (IsUpgrade()) then\n+    begin\n+      UnInstallOldVersion();\n+    end;\n+  end;\n+end;"}, {"sha": "b5459a797d23bec0b7dec97c18ea9aedfe8842a8", "filename": "src/etc/installer/gfx/banner.bmp", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fgfx%2Fbanner.bmp", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fgfx%2Fbanner.bmp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fgfx%2Fbanner.bmp?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164"}, {"sha": "53296518ee2b710665e146d556a9dad7b134569c", "filename": "src/etc/installer/gfx/banner.xcf", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fgfx%2Fbanner.xcf", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fgfx%2Fbanner.xcf", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fgfx%2Fbanner.xcf?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164"}, {"sha": "7e4674a4fea5bc8099c9c74b07b09e4eac25d044", "filename": "src/etc/installer/gfx/dialogbg.bmp", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fgfx%2Fdialogbg.bmp", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fgfx%2Fdialogbg.bmp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fgfx%2Fdialogbg.bmp?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164"}, {"sha": "49ca4e0c33efec9547cf154df380a5d2b1263a21", "filename": "src/etc/installer/gfx/dialogbg.xcf", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fgfx%2Fdialogbg.xcf", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fgfx%2Fdialogbg.xcf", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fgfx%2Fdialogbg.xcf?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164"}, {"sha": "a58225d5acb307904e4828b2273a141ccd855d85", "filename": "src/etc/installer/gfx/rust-logo.ico", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fgfx%2Frust-logo.ico", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fgfx%2Frust-logo.ico", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fgfx%2Frust-logo.ico?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164"}, {"sha": "2c3de3000879b36b1dc4751ea5db0fa8fce4b5aa", "filename": "src/etc/installer/gfx/rust-logo.png", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fgfx%2Frust-logo.png", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fgfx%2Frust-logo.png", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fgfx%2Frust-logo.png?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164"}, {"sha": "05b4c9bcc933ed3591c93524c63616157ff1cc12", "filename": "src/etc/installer/msi/remove-duplicates.xsl", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fmsi%2Fremove-duplicates.xsl", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fmsi%2Fremove-duplicates.xsl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fmsi%2Fremove-duplicates.xsl?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" ?>\n+<xsl:stylesheet version=\"1.0\"\n+        xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+        xmlns:wix=\"http://schemas.microsoft.com/wix/2006/wi\">\n+    <!-- Copy all attributes and elements to the output. -->\n+    <xsl:template match=\"@*|*\">\n+        <xsl:copy>\n+            <xsl:apply-templates select=\"@*|*\"/>\n+        </xsl:copy>\n+    </xsl:template>\n+    <xsl:output method=\"xml\" indent=\"yes\" />\n+\n+    <!-- LICENSE* files are installed from rustc dir. -->\n+    <xsl:key name=\"duplicates-cmp-ids\" match=\"wix:Component[./wix:File[contains(@Source, 'LICENSE')]|./wix:File[contains(@Source, 'rust-installer-version')]]\" use=\"@Id\" />\n+    <xsl:template match=\"wix:Component[key('duplicates-cmp-ids', @Id)]\" />\n+    <xsl:template match=\"wix:ComponentRef[key('duplicates-cmp-ids', @Id)]\" />\n+\n+    <xsl:template match=\"wix:File[contains(@Source, 'README.md')]\">\n+        <xsl:copy>\n+            <xsl:apply-templates select=\"@*|*\"/>\n+            <xsl:attribute name=\"Name\">README-CARGO.md</xsl:attribute>\n+        </xsl:copy>\n+    </xsl:template>\n+</xsl:stylesheet>"}, {"sha": "fb076ccb09180a2e77d71cbd46df70f950f576c1", "filename": "src/etc/installer/msi/rust.wxs", "status": "added", "additions": 279, "deletions": 0, "changes": 279, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fmsi%2Frust.wxs", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fmsi%2Frust.wxs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fmsi%2Frust.wxs?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -0,0 +1,279 @@\n+<?xml version=\"1.0\"?>\n+<Wix xmlns=\"http://schemas.microsoft.com/wix/2006/wi\">\n+\n+    <?if $(sys.BUILDARCH)=\"x64\" ?>\n+        <?define ArchSuffix=\" 64-bit\" ?>\n+    <?else?>\n+        <?define ArchSuffix=\"\" ?>\n+    <?endif?>\n+\n+    <?if $(env.CFG_CHANNEL)=\"stable\" ?>\n+        <?define ProductName=\"Rust $(env.CFG_VER_MAJOR).$(env.CFG_VER_MINOR) ($(env.CFG_ABI)$(var.ArchSuffix))\" ?>\n+    <?else?>\n+        <?define ProductName=\"Rust $(env.CFG_CHANNEL) $(env.CFG_VER_MAJOR).$(env.CFG_VER_MINOR) ($(env.CFG_ABI)$(var.ArchSuffix))\" ?>\n+    <?endif?>\n+\n+    <?define BaseRegKey=\"Software\\[Manufacturer]\\Rust $(env.CFG_CHANNEL) ($(env.CFG_ABI)$(var.ArchSuffix))\\$(env.CFG_VER_MAJOR).$(env.CFG_VER_MINOR)\" ?>\n+\n+    <!-- Upgrade code should be different for each platform -->\n+    <?if $(sys.BUILDARCH)=\"x64\" ?>\n+        <?if $(env.CFG_ABI)=\"GNU\" ?>\n+            <!-- UpgradeCode shoud stay the same for all MSI versions in channel -->\n+            <?if $(env.CFG_CHANNEL)=\"stable\" ?>\n+                <?define UpgradeCode=\"B440B077-F8D1-4730-8E1D-D6D37702B4CE\" ?>\n+            <?elseif $(env.CFG_CHANNEL)=\"beta\" ?>\n+                <?define UpgradeCode=\"7205CEDC-CDA6-4B62-8E4E-4D19EC5D88FC\" ?>\n+            <?elseif $(env.CFG_CHANNEL)=\"nightly\" ?>\n+                <?define UpgradeCode=\"622497D9-E0B1-448E-838A-4A33D0C5F82C\" ?>\n+            <?elseif $(env.CFG_CHANNEL)=\"dev\" ?>\n+                <?define UpgradeCode=\"7D32FD99-BB26-45CF-935D-1B0593BBDDBE\" ?>\n+            <?endif ?>\n+        <?elseif $(env.CFG_ABI)=\"MSVC\" ?>\n+            <?if $(env.CFG_CHANNEL)=\"stable\" ?>\n+                <?define UpgradeCode=\"123039F9-68E3-44F1-AC9F-C78ADD4D0723\" ?>\n+            <?elseif $(env.CFG_CHANNEL)=\"beta\" ?>\n+                <?define UpgradeCode=\"ABC640B9-2AB5-4270-9A0D-E54E502A1CCA\" ?>\n+            <?elseif $(env.CFG_CHANNEL)=\"nightly\" ?>\n+                <?define UpgradeCode=\"56263F12-4AA1-4FE1-AFAE-572915C4FA3E\" ?>\n+            <?elseif $(env.CFG_CHANNEL)=\"dev\" ?>\n+                <?define UpgradeCode=\"231A9544-7E39-4A60-A069-0EB3CA4BAB2E\" ?>\n+            <?endif ?>\n+        <?endif ?>\n+        <?define PlatformProgramFilesFolder=\"ProgramFiles64Folder\" ?>\n+    <?elseif $(sys.BUILDARCH)=\"x86\" ?>\n+        <?if $(env.CFG_ABI)=\"GNU\" ?>\n+            <?if $(env.CFG_CHANNEL)=\"stable\" ?>\n+                <?define UpgradeCode=\"1C7CADA5-D117-43F8-A356-DF15F9FBEFF6\" ?>\n+            <?elseif $(env.CFG_CHANNEL)=\"beta\" ?>\n+                <?define UpgradeCode=\"5229EAC1-AB7C-4A62-9881-6FAD2DE7D0F9\" ?>\n+            <?elseif $(env.CFG_CHANNEL)=\"nightly\" ?>\n+                <?define UpgradeCode=\"B94FF1C2-2C7B-4859-A08B-546815516FDA\" ?>\n+            <?elseif $(env.CFG_CHANNEL)=\"dev\" ?>\n+                <?define UpgradeCode=\"7E6D1349-2773-4792-B8CD-EA2685D86A99\" ?>\n+            <?endif ?>\n+        <?elseif $(env.CFG_ABI)=\"MSVC\" ?>\n+            <?if $(env.CFG_CHANNEL)=\"stable\" ?>\n+                <?define UpgradeCode=\"5805719C-45E9-4CF6-9CE7-1E8B57F3C243\" ?>\n+            <?elseif $(env.CFG_CHANNEL)=\"beta\" ?>\n+                <?define UpgradeCode=\"BC0731C1-BED1-424C-BE99-3589C35C84DE\" ?>\n+            <?elseif $(env.CFG_CHANNEL)=\"nightly\" ?>\n+                <?define UpgradeCode=\"FF193BBC-E73B-4FBD-ADE0-12F3CFC84145\" ?>\n+            <?elseif $(env.CFG_CHANNEL)=\"dev\" ?>\n+                <?define UpgradeCode=\"87DFC303-6492-4E9B-911E-56EAD56C5E58\" ?>\n+            <?endif ?>\n+        <?endif ?>\n+        <?define PlatformProgramFilesFolder=\"ProgramFilesFolder\" ?>\n+    <?else ?>\n+        <?error Unsupported value of sys.BUILDARCH=$(sys.BUILDARCH)?>\n+    <?endif ?>\n+\n+    <Product Id=\"*\"\n+        Name=\"$(var.ProductName)\"\n+        Language=\"1033\"\n+        Version=\"$(env.CFG_VER_MAJOR).$(env.CFG_VER_MINOR).$(env.CFG_VER_PATCH).$(env.CFG_VER_BUILD)\"\n+        UpgradeCode=\"$(var.UpgradeCode)\"\n+        Manufacturer=\"The Rust Project Developers\">\n+        <Package\n+            Comments=\"Rust is a systems programming language that runs blazingly fast, prevents almost all crashes, and eliminates data races.\"\n+            InstallerVersion=\"200\"\n+            InstallPrivileges=\"elevated\"\n+            Compressed=\"yes\" />\n+\n+        <Icon Id=\"rust.ico\" SourceFile=\"rust-logo.ico\" />\n+        <Property Id=\"ApplicationFolderName\" Value=\"Rust $(env.CFG_CHANNEL) $(env.CFG_ABI) $(env.CFG_VER_MAJOR).$(env.CFG_VER_MINOR)\" />\n+        <Property Id=\"WixAppFolder\" Value=\"WixPerMachineFolder\" />\n+        <Property Id=\"ARPPRODUCTICON\" Value=\"rust.ico\" />\n+        <Property Id=\"ARPURLINFOABOUT\" Value=\"https://www.rust-lang.org/\" />\n+        <Property Id=\"ARPCOMMENTS\" Value=\"$(env.CFG_RELEASE_INFO)\" />\n+        <!-- This is a dual-mode package. http://msdn.microsoft.com/en-us/library/windows/desktop/dd408068.aspx -->\n+        <Property Id=\"ALLUSERS\" Value=\"2\" Secure=\"yes\" />\n+        <Property Id=\"MSIINSTALLPERUSER\" Secure=\"yes\" />\n+        <!-- The actual install location (initialized below) -->\n+        <Property Id=\"INSTALLDIR\" Secure=\"yes\" />\n+\n+        <!-- Detect path(s) of a previous installation. -->\n+        <Property Id=\"INSTALLDIR_USER\">\n+            <RegistrySearch Id=\"InstallDir_User\" Type=\"raw\" Root=\"HKCU\" Key=\"$(var.BaseRegKey)\" Name=\"InstallDir\" />\n+        </Property>\n+        <Property Id=\"INSTALLDIR_MACHINE\">\n+            <RegistrySearch Id=\"InstallDir_Mach\" Type=\"raw\" Root=\"HKLM\" Key=\"$(var.BaseRegKey)\" Name=\"InstallDir\" />\n+        </Property>\n+\n+        <!-- Set ALLUSERS to match the previous installation mode, otherwise FindRelatedProducts will ignore\n+             the previous installation. If both INSTALLDIR_USER and INSTALLDIR_MACHINE are set, prefer the former. -->\n+        <SetProperty Sequence=\"first\" Before=\"FindRelatedProducts\"\n+            Id=\"ALLUSERS\" Value=\"{}\">INSTALLDIR_USER</SetProperty>\n+\n+        <!-- Set default values if RegSearch found nothing, or if we not upgrading -->\n+        <SetProperty Sequence=\"both\" Before=\"SetINSTALLDIR1\"\n+            Id=\"INSTALLDIR_USER\" Value=\"[LocalAppDataFolder]Programs\\[ApplicationFolderName]\">NOT INSTALLDIR_USER</SetProperty>\n+        <SetProperty Sequence=\"both\" Before=\"SetINSTALLDIR1\"\n+            Id=\"INSTALLDIR_MACHINE\" Value=\"[$(var.PlatformProgramFilesFolder)][ApplicationFolderName]\">NOT INSTALLDIR_MACHINE</SetProperty>\n+\n+        <!-- Choose the default install location according to ALLUSERS (unless set from the command line) -->\n+        <SetProperty Sequence=\"both\" Action=\"SetINSTALLDIR1\" Before=\"SetINSTALLDIR2\"\n+            Id=\"INSTALLDIR\" Value=\"[INSTALLDIR_USER]\">NOT INSTALLDIR AND NOT ALLUSERS</SetProperty>\n+        <SetProperty Sequence=\"both\" Action=\"SetINSTALLDIR2\" Before=\"CostFinalize\"\n+            Id=\"INSTALLDIR\" Value=\"[INSTALLDIR_MACHINE]\">NOT INSTALLDIR AND ALLUSERS</SetProperty>\n+\n+        <SetProperty Sequence=\"ui\" Before=\"CostFinalize\"\n+            Id=\"WixAppFolder\" Value=\"WixPerUserFolder\">NOT ALLUSERS</SetProperty>\n+\n+        <!-- UI sets ALLUSERS per user selection; progagate this choice to MSIINSTALLPERUSER before executing installation actions -->\n+        <SetProperty Sequence=\"ui\" Before=\"ExecuteAction\"\n+            Id=\"MSIINSTALLPERUSER\" Value=\"1\">NOT ALLUSERS</SetProperty>\n+\n+        <!-- Update ARPINSTALLLOCATION to match INSTALLDIR -->\n+        <SetProperty Sequence=\"execute\" Before=\"CostFinalize\"\n+            Id=\"ARPINSTALLLOCATION\" Value=\"[INSTALLDIR]\" />\n+\n+        <!-- Path of cmd.exe for the shortcut -->\n+        <Property Id=\"SHORTCUTTARGET\" Value=\"%windir%\\System32\\cmd.exe\" />\n+        <!-- Microsoft Installer will resolve any Enviroment Variables in the working directory at install time -->\n+        <Property Id=\"SHORTCUTWKDIR\" Value=\"%SystemDrive%\\\" />\n+\n+        <InstallUISequence>\n+            <FindRelatedProducts After=\"AppSearch\" />\n+        </InstallUISequence>\n+        <InstallExecuteSequence>\n+            <FindRelatedProducts After=\"AppSearch\" />\n+            <RemoveExistingProducts Before=\"InstallInitialize\" />\n+        </InstallExecuteSequence>\n+\n+        <Upgrade Id=\"$(var.UpgradeCode)\">\n+            <UpgradeVersion\n+                Minimum=\"$(env.CFG_VER_MAJOR).$(env.CFG_VER_MINOR).0\"\n+                Maximum=\"$(env.CFG_VER_MAJOR).$(env.CFG_VER_MINOR).65535\"\n+                IncludeMinimum=\"yes\"\n+                IncludeMaximum=\"yes\"\n+                MigrateFeatures=\"yes\"\n+                Property=\"UPGRADE_DETECTED\"\n+                />\n+        </Upgrade>\n+\n+        <!-- Specifies a single cab file to be embedded in the installer's .msi. -->\n+        <MediaTemplate EmbedCab=\"yes\" CompressionLevel=\"high\" />\n+\n+        <!-- Send a WM_SETTINGCHANGE message to tell processes like explorer to update their\n+             environments so any new command prompts get the updated %PATH% -->\n+        <CustomActionRef Id=\"WixBroadcastEnvironmentChange\" />\n+\n+        <!-- Installation directory and files are defined in Files.wxs -->\n+        <Directory Id=\"TARGETDIR\" Name=\"SourceDir\">\n+            <Directory Id=\"$(var.PlatformProgramFilesFolder)\">\n+                <Directory Id=\"INSTALLDIR\" Name=\"Rust\">\n+                    <!-- Root directories for every feature should have different IDs for correct work of heat.exe -->\n+                    <Directory Id=\"Rustc\" Name=\".\" />\n+                    <?if $(env.CFG_MINGW)=\"1\" ?>\n+                        <Directory Id=\"Gcc\" Name=\".\" />\n+                    <?endif?>\n+                    <Directory Id=\"Docs\" Name=\".\" />\n+                    <Directory Id=\"Cargo\" Name=\".\" />\n+                    <Directory Id=\"Std\" Name=\".\" />\n+                </Directory>\n+            </Directory>\n+\n+            <!-- Record our install location -->\n+            <Component Id=\"InstallDir\" Guid=\"*\">\n+                <RegistryValue Root=\"HKMU\" Key=\"$(var.BaseRegKey)\"\n+                               Type=\"string\"\n+                               Name=\"InstallDir\"\n+                               Value=\"[INSTALLDIR]\" />\n+            </Component>\n+\n+            <!-- Add $/bin to PATH -->\n+            <Component Id=\"PathEnvPerMachine\" Guid=\"*\">\n+                <Condition>ALLUSERS=1 OR (ALLUSERS=2 AND Privileged)</Condition>\n+                <RegistryValue Root=\"HKMU\" Key=\"$(var.BaseRegKey)\" Name=\"PathEnvPerMachine\" Type=\"string\" Value=\"1\" KeyPath=\"yes\" />\n+                <!-- [INSTALLDIR] contains trailing backslash -->\n+                <Environment Id=\"PathPerMachine\" Name=\"PATH\" Value=\"[INSTALLDIR]bin\" Permanent=\"no\" Part=\"last\" Action=\"set\" System=\"yes\" />\n+            </Component>\n+            <Component Id=\"PathEnvPerUser\" Guid=\"*\">\n+                <Condition>ALLUSERS=\"\" OR (ALLUSERS=2 AND (NOT Privileged))</Condition>\n+                <RegistryValue Root=\"HKMU\" Key=\"$(var.BaseRegKey)\" Name=\"PathEnvPerUser\" Type=\"string\" Value=\"1\" KeyPath=\"yes\" />\n+                <Environment Id=\"PathPerUser\" Name=\"PATH\" Value=\"[INSTALLDIR]bin\" Permanent=\"no\" Part=\"last\" Action=\"set\" System=\"no\" />\n+            </Component>\n+\n+            <!-- Start Menu shortcuts -->\n+            <Directory Id=\"ProgramMenuFolder\">\n+                <Directory Id=\"ApplicationProgramsFolder\" Name=\"Rust\">\n+                    <Component Id=\"RustShellShortcut\" Guid=\"*\">\n+                        <Shortcut Id=\"RustShell\"\n+                                  Name=\"$(var.ProductName) Shell\"\n+                                  Description=\"Opens Command Prompt with Rust tools directory added to the PATH\"\n+                                  Target=\"[SHORTCUTTARGET]\"\n+                                  Arguments=\"/K path [INSTALLDIR]bin;%PATH%\"\n+                                  WorkingDirectory=\"SHORTCUTWKDIR\">\n+                            <Icon Id=\"rust2.ico\" SourceFile=\"rust-logo.ico\" />\n+                        </Shortcut>\n+                        <RegistryValue Root=\"HKMU\" Key=\"$(var.BaseRegKey)\" Name=\"RustShell\" Type=\"integer\" Value=\"1\" KeyPath=\"yes\" />\n+                        <RemoveFolder Id=\"ApplicationProgramsFolder1\" On=\"uninstall\" />\n+                    </Component>\n+                    <Component Id=\"DocIndexShortcut\" Guid=\"*\">\n+                        <Shortcut Id=\"RustDocs\"\n+                                  Name=\"$(var.ProductName) Documentation\"\n+                                  Description=\"Opens Rust HTML documentation in the default browser\"\n+                                  Target=\"[INSTALLDIR]share\\doc\\rust\\html\\index.html\" />\n+                        <RegistryValue Root=\"HKMU\" Key=\"$(var.BaseRegKey)\" Name=\"RustDocs\" Type=\"integer\" Value=\"1\" KeyPath=\"yes\" />\n+                        <RemoveFolder Id=\"ApplicationProgramsFolder2\" On=\"uninstall\" />\n+                    </Component>\n+                </Directory>\n+            </Directory>\n+\n+        </Directory>\n+\n+        <Feature Id=\"Rustc\"\n+                 Title=\"Rust compiler and standard crates\"\n+                 Display=\"1\"\n+                 Level=\"1\"\n+                 Absent=\"disallow\"\n+                 AllowAdvertise=\"no\">\n+                 <ComponentGroupRef Id=\"RustcGroup\" />\n+                 <ComponentRef Id=\"RustShellShortcut\" />\n+                 <ComponentRef Id=\"InstallDir\" />\n+        </Feature>\n+        <Feature Id=\"Std\"\n+                 Title=\"The Rust standard library\"\n+                 Display=\"2\"\n+                 Level=\"1\"\n+                 AllowAdvertise=\"no\">\n+                 <ComponentGroupRef Id=\"StdGroup\" />\n+        </Feature>\n+        <Feature Id=\"Cargo\"\n+                 Title=\"Cargo, the Rust package manager\"\n+                 Display=\"3\"\n+                 Level=\"1\"\n+                 AllowAdvertise=\"no\">\n+                 <ComponentGroupRef Id=\"CargoGroup\" />\n+        </Feature>\n+        <?if $(env.CFG_MINGW)=\"1\" ?>\n+            <Feature Id=\"Gcc\"\n+                     Title=\"Linker and platform libraries\"\n+                     Description=\"If you choose to not install this component, you will require an external MinGW installation in order to create executables and libraries.\"\n+                     Display=\"4\"\n+                     Level=\"1\"\n+                     AllowAdvertise=\"no\">\n+                     <ComponentGroupRef Id=\"GccGroup\" />\n+            </Feature>\n+        <?endif?>\n+        <Feature Id=\"Docs\"\n+                 Title=\"HTML documentation\"\n+                 Display=\"5\"\n+                 Level=\"1\"\n+                 AllowAdvertise=\"no\">\n+                 <ComponentGroupRef Id=\"DocsGroup\" />\n+                 <ComponentRef Id=\"DocIndexShortcut\" />\n+        </Feature>\n+        <Feature Id=\"Path\"\n+                 Title=\"Add to PATH\"\n+                 Description=\"Add Rust to PATH environment variable\"\n+                 Display=\"6\"\n+                 Level=\"1\"\n+                 AllowAdvertise=\"no\">\n+                 <ComponentRef Id=\"PathEnvPerMachine\" />\n+                 <ComponentRef Id=\"PathEnvPerUser\" />\n+        </Feature>\n+\n+        <UIRef Id=\"RustUI\" />\n+    </Product>\n+</Wix>"}, {"sha": "0ee5415ffbadfcb678c1089553e3067bb0125994", "filename": "src/etc/installer/msi/rustwelcomedlg.wxs", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fmsi%2Frustwelcomedlg.wxs", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fmsi%2Frustwelcomedlg.wxs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fmsi%2Frustwelcomedlg.wxs?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -0,0 +1,57 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Wix xmlns=\"http://schemas.microsoft.com/wix/2006/wi\">\n+    <Fragment>\n+        <UI>\n+            <Dialog Id=\"RustWelcomeDlg\" Width=\"370\" Height=\"270\" Title=\"!(loc.AdvancedWelcomeEulaDlg_Title)\">\n+                <Control Id=\"BannerBitmap\" Type=\"Bitmap\" X=\"0\" Y=\"0\" Width=\"370\" Height=\"44\" TabSkip=\"no\" Text=\"!(loc.AdvancedWelcomeEulaDlgBannerBitmap)\" />\n+                <Control Id=\"BottomLine\" Type=\"Line\" X=\"0\" Y=\"234\" Width=\"370\" Height=\"0\" />\n+                <Control Id=\"Title\" Type=\"Text\" X=\"20\" Y=\"10\" Width=\"300\" Height=\"24\" Transparent=\"yes\" NoPrefix=\"yes\" Text=\"!(loc.AdvancedWelcomeEulaDlgTitle)\" />\n+                <Control Id=\"DescriptionPerMachine\" Type=\"Text\" X=\"20\" Y=\"182\" Width=\"330\" Height=\"31\" Transparent=\"yes\" NoPrefix=\"yes\" Hidden=\"yes\" Text=\"!(loc.AdvancedWelcomeEulaDlgDescriptionPerMachine)\">\n+                    <Condition Action=\"show\">NOT UPGRADE_DETECTED AND ALLUSERS</Condition>\n+                </Control>\n+                <Control Id=\"DescriptionPerUser\" Type=\"Text\" X=\"20\" Y=\"182\" Width=\"330\" Height=\"31\" Transparent=\"yes\" NoPrefix=\"yes\" Hidden=\"yes\" Text=\"!(loc.AdvancedWelcomeEulaDlgDescriptionPerUser)\">\n+                    <Condition Action=\"show\">NOT UPGRADE_DETECTED AND NOT ALLUSERS</Condition>\n+                </Control>\n+                <Control Id=\"DescriptionUpgrade\" Type=\"Text\" X=\"20\" Y=\"182\" Width=\"330\" Height=\"31\" Transparent=\"yes\" NoPrefix=\"yes\" Hidden=\"yes\"\n+                    Text=\"Click Install to upgrade the existing version of [ProductName].  Click Advanced to change installation options.\">\n+                    <Condition Action=\"show\">UPGRADE_DETECTED</Condition>\n+                </Control>\n+                <Control Id=\"TargetPath\" Type=\"Text\" X=\"20\" Y=\"212\" Width=\"330\" Height=\"31\" Transparent=\"yes\" NoPrefix=\"yes\" Hidden=\"no\"\n+                    Text=\"Install Directory: [INSTALLDIR]\">\n+                </Control>\n+                <Control Id=\"Print\" Type=\"PushButton\" X=\"88\" Y=\"243\" Width=\"56\" Height=\"17\" Text=\"!(loc.WixUIPrint)\">\n+                    <Publish Event=\"DoAction\" Value=\"WixUIPrintEula\">1</Publish>\n+                </Control>\n+                <Control Id=\"Advanced\" Type=\"PushButton\" X=\"156\" Y=\"243\" Width=\"56\" Height=\"17\" Text=\"!(loc.AdvancedWelcomeEulaDlgAdvanced)\" />\n+                <Control Id=\"Install\" Type=\"PushButton\" ElevationShield=\"yes\" X=\"212\" Y=\"243\" Width=\"80\" Height=\"17\" Default=\"yes\" Text=\"!(loc.AdvancedWelcomeEulaDlgInstall)\" Hidden=\"yes\">\n+                    <Publish Event=\"SpawnWaitDialog\" Value=\"WaitForCostingDlg\">!(wix.WixUICostingPopupOptOut) OR CostingComplete = 1</Publish>\n+                    <Publish Event=\"EndDialog\" Value=\"Return\"><![CDATA[OutOfDiskSpace <> 1]]></Publish>\n+                    <Publish Event=\"SpawnDialog\" Value=\"OutOfRbDiskDlg\">OutOfDiskSpace = 1 AND OutOfNoRbDiskSpace = 0 AND (PROMPTROLLBACKCOST=\"P\" OR NOT PROMPTROLLBACKCOST)</Publish>\n+                    <Publish Event=\"EndDialog\" Value=\"Return\">OutOfDiskSpace = 1 AND OutOfNoRbDiskSpace = 0 AND PROMPTROLLBACKCOST=\"D\"</Publish>\n+                    <Publish Event=\"EnableRollback\" Value=\"False\">OutOfDiskSpace = 1 AND OutOfNoRbDiskSpace = 0 AND PROMPTROLLBACKCOST=\"D\"</Publish>\n+                    <Publish Event=\"SpawnDialog\" Value=\"OutOfDiskDlg\">(OutOfDiskSpace = 1 AND OutOfNoRbDiskSpace = 1) OR (OutOfDiskSpace = 1 AND PROMPTROLLBACKCOST=\"F\")</Publish>\n+                    <Condition Action=\"show\">ALLUSERS</Condition>\n+                </Control>\n+                <Control Id=\"InstallNoShield\" Type=\"PushButton\" ElevationShield=\"no\" X=\"212\" Y=\"243\" Width=\"80\" Height=\"17\" Default=\"yes\" Text=\"!(loc.AdvancedWelcomeEulaDlgInstall)\" Hidden=\"yes\">\n+                    <Publish Event=\"SpawnWaitDialog\" Value=\"WaitForCostingDlg\">!(wix.WixUICostingPopupOptOut) OR CostingComplete = 1</Publish>\n+                    <Publish Event=\"EndDialog\" Value=\"Return\"><![CDATA[OutOfDiskSpace <> 1]]></Publish>\n+                    <Publish Event=\"SpawnDialog\" Value=\"OutOfRbDiskDlg\">OutOfDiskSpace = 1 AND OutOfNoRbDiskSpace = 0 AND (PROMPTROLLBACKCOST=\"P\" OR NOT PROMPTROLLBACKCOST)</Publish>\n+                    <Publish Event=\"EndDialog\" Value=\"Return\">OutOfDiskSpace = 1 AND OutOfNoRbDiskSpace = 0 AND PROMPTROLLBACKCOST=\"D\"</Publish>\n+                    <Publish Event=\"EnableRollback\" Value=\"False\">OutOfDiskSpace = 1 AND OutOfNoRbDiskSpace = 0 AND PROMPTROLLBACKCOST=\"D\"</Publish>\n+                    <Publish Event=\"SpawnDialog\" Value=\"OutOfDiskDlg\">(OutOfDiskSpace = 1 AND OutOfNoRbDiskSpace = 1) OR (OutOfDiskSpace = 1 AND PROMPTROLLBACKCOST=\"F\")</Publish>\n+                    <Condition Action=\"show\">NOT ALLUSERS</Condition>\n+                </Control>\n+                <Control Id=\"Cancel\" Type=\"PushButton\" X=\"304\" Y=\"243\" Width=\"56\" Height=\"17\" Cancel=\"yes\" Text=\"!(loc.WixUICancel)\">\n+                    <Publish Event=\"SpawnDialog\" Value=\"CancelDlg\">1</Publish>\n+                </Control>\n+                <Control Id=\"LicenseText\" Type=\"ScrollableText\" X=\"20\" Y=\"55\" Width=\"330\" Height=\"121\" Sunken=\"yes\" TabSkip=\"no\">\n+                    <Text SourceFile=\"!(wix.WixUILicenseRtf)\" />\n+                </Control>\n+            </Dialog>\n+        </UI>\n+\n+        <InstallUISequence>\n+            <Show Dialog=\"RustWelcomeDlg\" Before=\"ProgressDlg\">NOT Installed</Show>\n+        </InstallUISequence>\n+    </Fragment>\n+</Wix>"}, {"sha": "17b4e0388f953b4611b74a34bd48af700c57331c", "filename": "src/etc/installer/msi/squash-components.xsl", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fmsi%2Fsquash-components.xsl", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fmsi%2Fsquash-components.xsl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fmsi%2Fsquash-components.xsl?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" ?>\n+<xsl:stylesheet version=\"1.0\"\n+        xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+        xmlns:wix=\"http://schemas.microsoft.com/wix/2006/wi\">\n+    <!-- Copy all attributes and elements to the output. -->\n+    <xsl:template match=\"@*|*\">\n+        <xsl:copy>\n+            <xsl:apply-templates select=\"@*|*\"/>\n+        </xsl:copy>\n+    </xsl:template>\n+    <xsl:output method=\"xml\" indent=\"yes\" />\n+\n+    <!-- Move all files in directory into first component in that directory. -->\n+    <xsl:template match=\"wix:Component[1]\">\n+        <xsl:copy>\n+            <xsl:apply-templates select=\"@*|*\"/>\n+            <xsl:for-each select=\"../wix:Component[preceding-sibling::*]/wix:File\">\n+                <xsl:copy>\n+                    <!-- Component can only have one KeyPath -->\n+                    <xsl:apply-templates select=\"@*[not(name()='KeyPath')]|*\"/>\n+                </xsl:copy>\n+            </xsl:for-each>\n+        </xsl:copy>\n+    </xsl:template>\n+\n+    <!-- Now the rest of components are empty, find them. -->\n+    <xsl:key name=\"empty-cmp-ids\" match=\"wix:Component[preceding-sibling::*]\" use=\"@Id\" />\n+\n+    <!-- And remove. -->\n+    <xsl:template match=\"wix:Component[preceding-sibling::*]\" />\n+\n+    <!-- Also remove componentsrefs referencing empty components. -->\n+    <xsl:template match=\"wix:ComponentRef[key('empty-cmp-ids', @Id)]\" />\n+</xsl:stylesheet>"}, {"sha": "3e2db6051bca701df0f05535e46d3e9f41e5275c", "filename": "src/etc/installer/msi/ui.wxs", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fmsi%2Fui.wxs", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fmsi%2Fui.wxs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fmsi%2Fui.wxs?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -0,0 +1,83 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+    Based on WixUI_Advanced\n+-->\n+\n+<Wix xmlns=\"http://schemas.microsoft.com/wix/2006/wi\">\n+    <Fragment>\n+        <WixVariable Id=\"WixUISupportPerUser\" Value=\"1\" Overridable=\"yes\" />\n+        <WixVariable Id=\"WixUISupportPerMachine\" Value=\"1\" Overridable=\"yes\" />\n+        <WixVariable Id=\"WixUILicenseRtf\" Value=\"LICENSE.rtf\" />\n+        <WixVariable Id=\"WixUIDialogBmp\" Value=\"dialogbg.bmp\" />\n+        <WixVariable Id=\"WixUIBannerBmp\" Value=\"banner.bmp\" />\n+\n+        <UI Id=\"RustUI\">\n+            <TextStyle Id=\"WixUI_Font_Normal\" FaceName=\"!(loc.Advanced_Font_FaceName)\" Size=\"!(loc.Advanced_Font_Normal_Size)\" />\n+            <TextStyle Id=\"WixUI_Font_Bigger\" FaceName=\"!(loc.Advanced_Font_FaceName)\" Size=\"!(loc.Advanced_Font_Bigger_Size)\" />\n+            <TextStyle Id=\"WixUI_Font_Title\" FaceName=\"!(loc.Advanced_Font_FaceName)\" Size=\"!(loc.Advanced_Font_Title_Size)\" Bold=\"yes\" />\n+            <TextStyle Id=\"WixUI_Font_Emphasized\" FaceName=\"!(loc.Advanced_Font_FaceName)\" Size=\"!(loc.Advanced_Font_Emphasized_Size)\" Bold=\"yes\" />\n+\n+            <Property Id=\"DefaultUIFont\" Value=\"WixUI_Font_Normal\" />\n+            <Property Id=\"WixUI_Mode\" Value=\"Advanced\" />\n+\n+            <DialogRef Id=\"BrowseDlg\" />\n+            <DialogRef Id=\"DiskCostDlg\" />\n+            <DialogRef Id=\"ErrorDlg\" />\n+            <DialogRef Id=\"FatalError\" />\n+            <DialogRef Id=\"FilesInUse\" />\n+            <DialogRef Id=\"MsiRMFilesInUse\" />\n+            <DialogRef Id=\"PrepareDlg\" />\n+            <DialogRef Id=\"ProgressDlg\" />\n+            <DialogRef Id=\"ResumeDlg\" />\n+            <DialogRef Id=\"UserExit\" />\n+            <DialogRef Id=\"WelcomeDlg\"/>\n+\n+            <Publish Dialog=\"ExitDialog\" Control=\"Finish\" Event=\"EndDialog\" Value=\"Return\" Order=\"999\">1</Publish>\n+\n+            <Publish Dialog=\"BrowseDlg\" Control=\"OK\" Event=\"DoAction\" Value=\"WixUIValidatePath\" Order=\"1\">1</Publish>\n+            <Publish Dialog=\"BrowseDlg\" Control=\"OK\" Event=\"SpawnDialog\" Value=\"InvalidDirDlg\" Order=\"2\"><![CDATA[WIXUI_INSTALLDIR_VALID<>\"1\"]]></Publish>\n+\n+            <Publish Dialog=\"RustWelcomeDlg\" Control=\"Advanced\" Event=\"NewDialog\" Value=\"InstallScopeDlg\" Order=\"1\" />\n+\n+            <Publish Dialog=\"InstallScopeDlg\" Control=\"Back\" Event=\"NewDialog\" Value=\"RustWelcomeDlg\">1</Publish>\n+            <!-- override default WixAppFolder of WixPerMachineFolder as standard user won't be shown the radio group to set WixAppFolder -->\n+            <Publish Dialog=\"InstallScopeDlg\" Control=\"Next\" Property=\"WixAppFolder\" Value=\"WixPerUserFolder\" Order=\"1\">!(wix.WixUISupportPerUser) AND NOT Privileged</Publish>\n+            <Publish Dialog=\"InstallScopeDlg\" Control=\"Next\" Property=\"ALLUSERS\" Value=\"{}\" Order=\"2\">WixAppFolder = \"WixPerUserFolder\"</Publish>\n+            <Publish Dialog=\"InstallScopeDlg\" Control=\"Next\" Property=\"ALLUSERS\" Value=\"1\" Order=\"3\">WixAppFolder = \"WixPerMachineFolder\"</Publish>\n+            <Publish Dialog=\"InstallScopeDlg\" Control=\"Next\" Property=\"INSTALLDIR\" Value=\"[INSTALLDIR_USER]\" Order=\"4\">WixAppFolder = \"WixPerUserFolder\"</Publish>\n+            <Publish Dialog=\"InstallScopeDlg\" Control=\"Next\" Property=\"INSTALLDIR\" Value=\"[INSTALLDIR_MACHINE]\" Order=\"5\">WixAppFolder = \"WixPerMachineFolder\"</Publish>\n+            <Publish Dialog=\"InstallScopeDlg\" Control=\"Next\" Event=\"NewDialog\" Value=\"InstallDirDlg\" Order=\"6\">1</Publish>\n+\n+            <Publish Dialog=\"InstallDirDlg\" Control=\"Back\" Event=\"NewDialog\" Value=\"InstallScopeDlg\" />\n+            <Publish Dialog=\"InstallDirDlg\" Control=\"Next\" Event=\"SetTargetPath\" Value=\"[WIXUI_INSTALLDIR]\" Order=\"1\">1</Publish>\n+            <Publish Dialog=\"InstallDirDlg\" Control=\"Next\" Event=\"DoAction\" Value=\"WixUIValidatePath\" Order=\"2\">NOT WIXUI_DONTVALIDATEPATH</Publish>\n+            <Publish Dialog=\"InstallDirDlg\" Control=\"Next\" Event=\"SpawnDialog\" Value=\"InvalidDirDlg\" Order=\"3\"><![CDATA[NOT WIXUI_DONTVALIDATEPATH AND WIXUI_INSTALLDIR_VALID<>\"1\"]]></Publish>\n+            <Publish Dialog=\"InstallDirDlg\" Control=\"Next\" Event=\"NewDialog\" Value=\"FeaturesDlg\" Order=\"4\">WIXUI_DONTVALIDATEPATH OR WIXUI_INSTALLDIR_VALID=\"1\"</Publish>\n+            <Publish Dialog=\"InstallDirDlg\" Control=\"ChangeFolder\" Property=\"_BrowseProperty\" Value=\"[WIXUI_INSTALLDIR]\" Order=\"1\">1</Publish>\n+            <Publish Dialog=\"InstallDirDlg\" Control=\"ChangeFolder\" Event=\"SpawnDialog\" Value=\"BrowseDlg\" Order=\"2\">1</Publish>\n+\n+            <Publish Dialog=\"FeaturesDlg\" Control=\"Back\" Event=\"NewDialog\" Value=\"InstallDirDlg\">NOT Installed AND WixAppFolder = \"WixPerUserFolder\"</Publish>\n+            <Publish Dialog=\"FeaturesDlg\" Control=\"Back\" Event=\"NewDialog\" Value=\"InstallDirDlg\">NOT Installed AND WixAppFolder = \"WixPerMachineFolder\"</Publish>\n+            <Publish Dialog=\"FeaturesDlg\" Control=\"Back\" Event=\"NewDialog\" Value=\"MaintenanceTypeDlg\">Installed</Publish>\n+\n+            <Publish Dialog=\"MaintenanceWelcomeDlg\" Control=\"Next\" Event=\"NewDialog\" Value=\"MaintenanceTypeDlg\">1</Publish>\n+\n+            <Publish Dialog=\"MaintenanceTypeDlg\" Control=\"ChangeButton\" Event=\"NewDialog\" Value=\"FeaturesDlg\">1</Publish>\n+            <Publish Dialog=\"MaintenanceTypeDlg\" Control=\"RepairButton\" Event=\"NewDialog\" Value=\"VerifyReadyDlg\">1</Publish>\n+            <Publish Dialog=\"MaintenanceTypeDlg\" Control=\"RemoveButton\" Event=\"NewDialog\" Value=\"VerifyReadyDlg\">1</Publish>\n+            <Publish Dialog=\"MaintenanceTypeDlg\" Control=\"Back\" Event=\"NewDialog\" Value=\"MaintenanceWelcomeDlg\">1</Publish>\n+\n+            <Publish Dialog=\"VerifyReadyDlg\" Control=\"Back\" Event=\"NewDialog\" Value=\"MaintenanceTypeDlg\" Order=\"2\">Installed AND NOT PATCH</Publish>\n+            <Publish Dialog=\"VerifyReadyDlg\" Control=\"Back\" Event=\"NewDialog\" Value=\"WelcomeDlg\" Order=\"3\">Installed AND PATCH</Publish>\n+\n+            <Publish Dialog=\"WelcomeDlg\" Control=\"Next\" Event=\"NewDialog\" Value=\"VerifyReadyDlg\">Installed AND PATCH</Publish>\n+        </UI>\n+\n+        <InstallUISequence>\n+            <Show Dialog=\"WelcomeDlg\" Before=\"RustWelcomeDlg\" >Installed AND PATCH</Show>\n+        </InstallUISequence>\n+\n+        <Property Id=\"WIXUI_INSTALLDIR\" Value=\"INSTALLDIR\" />\n+        <UIRef Id=\"WixUI_Common\" />\n+    </Fragment>\n+</Wix>"}, {"sha": "79f99818ba3f99ecca1f881050f5fb367a6f9e59", "filename": "src/etc/installer/pkg/Distribution.xml", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fpkg%2FDistribution.xml", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fpkg%2FDistribution.xml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fpkg%2FDistribution.xml?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -0,0 +1,71 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n+<installer-gui-script minSpecVersion=\"2\">\n+    <title>The Rust Compiler</title>\n+    <license file=\"LICENSE.txt\" mime-type=\"text/plain\"/>\n+    <pkg-ref id=\"org.rust-lang.rust\"/>\n+    <options customize=\"always\" require-scripts=\"false\" hostArchitectures=\"i386,x86_64\"/>\n+    <domains enable_anywhere=\"false\" enable_currentUserHome=\"false\" enable_localSystem=\"true\" />\n+    <volume-check>\n+        <allowed-os-versions>\n+            <os-version min=\"10.7\"/>\n+        </allowed-os-versions>\n+    </volume-check>\n+    <choices-outline>\n+      <line choice=\"install\">\n+\t<line choice=\"rustc\"/>\n+    <line choice=\"rust-std\"/>\n+\t<line choice=\"cargo\"/>\n+\t<line choice=\"rust-docs\"/>\n+      </line>\n+      <line choice=\"uninstall\" />\n+    </choices-outline>\n+    <!--\n+\tThese 'selected' scripts ensure that install and uninstall can never be selected at\n+\tthe same time. Exectly how they work is pretty mysterious, tied to the unspecified algorithm\n+\tthe installer uses to traverse the options after one is toggled.\n+      -->\n+    <choice id=\"install\" visible=\"true\"\n+\t    title=\"Install Rust\" description=\"Install the Rust compiler, package manager and documentation.\"\n+\t    customLocation=\"/usr/local\"\n+\t    selected=\"!choices.uninstall.selected\"\n+\t    />\n+    <choice id=\"uninstall\" visible=\"true\"\n+\t    title=\"Uninstall Rust\" description=\"Select this option to uninstall an existing Rust installation.\"\n+\t    customLocation=\"/usr/local\"\n+\t    selected=\"!(choices.install.selected || choices.rustc.selected || choices.cargo.selected || choices['rust-docs'].selected)\"\n+\t    start_selected=\"false\"\n+\t    >\n+        <pkg-ref id=\"org.rust-lang.uninstall\" />\n+    </choice>\n+    <choice id=\"rustc\" visible=\"true\"\n+\t    title=\"Compiler\" description=\"rustc, the Rust compiler, and rustdoc, the API documentation tool.\"\n+\t    selected=\"(!choices.uninstall.selected &amp;&amp; choices.rustc.selected) || (choices.uninstall.selected &amp;&amp; choices.install.selected)\"\n+\t    >\n+        <pkg-ref id=\"org.rust-lang.rustc\"/>\n+    </choice>\n+    <choice id=\"cargo\" visible=\"true\"\n+\t    title=\"Cargo\" description=\"cargo, the Rust package manager.\"\n+\t    selected=\"(!choices.uninstall.selected &amp;&amp; choices.cargo.selected) || (choices.uninstall.selected &amp;&amp; choices.install.selected)\"\n+\t    >\n+        <pkg-ref id=\"org.rust-lang.cargo\"/>\n+    </choice>\n+    <choice id=\"rust-std\" visible=\"true\"\n+\t    title=\"Standard Library\" description=\"The Rust standard library.\"\n+\t    selected=\"(!choices.uninstall.selected &amp;&amp; choices['rust-std'].selected) || (choices.uninstall.selected &amp;&amp; choices.install.selected)\"\n+\t    >\n+        <pkg-ref id=\"org.rust-lang.rust-std\"/>\n+    </choice>\n+    <choice id=\"rust-docs\" visible=\"true\"\n+\t    title=\"Documentation\" description=\"HTML documentation.\"\n+\t    selected=\"(!choices.uninstall.selected &amp;&amp; choices['rust-docs'].selected) || (choices.uninstall.selected &amp;&amp; choices.install.selected)\"\n+\t    >\n+        <pkg-ref id=\"org.rust-lang.rust-docs\"/>\n+    </choice>\n+    <pkg-ref id=\"org.rust-lang.rustc\" version=\"0\" onConclusion=\"none\">rustc.pkg</pkg-ref>\n+    <pkg-ref id=\"org.rust-lang.cargo\" version=\"0\" onConclusion=\"none\">cargo.pkg</pkg-ref>\n+    <pkg-ref id=\"org.rust-lang.rust-docs\" version=\"0\" onConclusion=\"none\">rust-docs.pkg</pkg-ref>\n+    <pkg-ref id=\"org.rust-lang.rust-std\" version=\"0\" onConclusion=\"none\">rust-std.pkg</pkg-ref>\n+    <pkg-ref id=\"org.rust-lang.uninstall\" version=\"0\" onConclusion=\"none\">uninstall.pkg</pkg-ref>\n+    <background file=\"rust-logo.png\" mime-type=\"image/png\"\n+                alignment=\"bottomleft\"/>\n+</installer-gui-script>"}, {"sha": "fb035a48690b0781bc6482911b7d83be6abd6e65", "filename": "src/etc/installer/pkg/postinstall", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fpkg%2Fpostinstall", "raw_url": "https://github.com/rust-lang/rust/raw/83c2d95238e3545e7ae9af4873c48b1e3651c164/src%2Fetc%2Finstaller%2Fpkg%2Fpostinstall", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fpkg%2Fpostinstall?ref=83c2d95238e3545e7ae9af4873c48b1e3651c164", "patch": "@@ -0,0 +1,26 @@\n+#!/bin/sh\n+\n+source_dir=\"$(dirname \"$0\")\"\n+dest_dir=\"$2\"\n+package_id=\"$INSTALL_PKG_SESSION_ID\"\n+\n+if [ -z \"$source_dir\" ]; then\n+    exit 1\n+fi\n+if [ -z \"$dest_dir\" ]; then\n+    exit 1\n+fi\n+if [ -z \"$package_id\" ]; then\n+    exit 1\n+fi\n+\n+if [ \"$package_id\" = \"org.rust-lang.uninstall\" ]; then\n+    if [ ! -e \"$dest_dir/lib/rustlib/uninstall.sh\" ]; then\n+\texit 1\n+    fi\n+    sh \"$dest_dir/lib/rustlib/uninstall.sh\"\n+else\n+    sh \"$source_dir/install.sh\" --prefix=\"$dest_dir\"\n+fi\n+\n+exit 0"}]}