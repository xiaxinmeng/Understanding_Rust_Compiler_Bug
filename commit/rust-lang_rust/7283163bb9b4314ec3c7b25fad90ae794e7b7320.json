{"sha": "7283163bb9b4314ec3c7b25fad90ae794e7b7320", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyODMxNjNiYjliNDMxNGVjM2M3YjI1ZmFkOTBhZTc5NGU3YjczMjA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-23T16:50:23Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-23T16:50:23Z"}, "message": "Minor: fix comment style\n\nSee https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/dev/style.md#documentation", "tree": {"sha": "d7391024e091ece38f279c24abefcf228d5acadf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7391024e091ece38f279c24abefcf228d5acadf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7283163bb9b4314ec3c7b25fad90ae794e7b7320", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7283163bb9b4314ec3c7b25fad90ae794e7b7320", "html_url": "https://github.com/rust-lang/rust/commit/7283163bb9b4314ec3c7b25fad90ae794e7b7320", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7283163bb9b4314ec3c7b25fad90ae794e7b7320/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96e5412f881608d703df129ed87f3488ad39a9e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/96e5412f881608d703df129ed87f3488ad39a9e1", "html_url": "https://github.com/rust-lang/rust/commit/96e5412f881608d703df129ed87f3488ad39a9e1"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "8f490e922c6f72b219ac89314e362e2554bd4c68", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7283163bb9b4314ec3c7b25fad90ae794e7b7320/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7283163bb9b4314ec3c7b25fad90ae794e7b7320/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=7283163bb9b4314ec3c7b25fad90ae794e7b7320", "patch": "@@ -225,8 +225,10 @@ fn hint_iterator(\n     }\n     let iter_trait = famous_defs.core_iter_Iterator()?;\n     let iter_mod = famous_defs.core_iter()?;\n-    // assert this struct comes from `core::iter`\n+\n+    // Assert that this struct comes from `core::iter`.\n     iter_mod.visibility_of(db, &strukt.into()).filter(|&vis| vis == hir::Visibility::Public)?;\n+\n     if ty.impls_trait(db, iter_trait, &[]) {\n         let assoc_type_item = iter_trait.items(db).into_iter().find_map(|item| match item {\n             hir::AssocItem::TypeAlias(alias) if alias.name(db) == known::Item => Some(alias),"}]}