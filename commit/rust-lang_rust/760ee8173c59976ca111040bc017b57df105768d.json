{"sha": "760ee8173c59976ca111040bc017b57df105768d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2MGVlODE3M2M1OTk3NmNhMTExMDQwYmMwMTdiNTdkZjEwNTc2OGQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-15T13:45:34Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-15T13:45:34Z"}, "message": "Micro-optimize update", "tree": {"sha": "3eec00cce792f5a65636fa8dd7fcab82031f2385", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3eec00cce792f5a65636fa8dd7fcab82031f2385"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/760ee8173c59976ca111040bc017b57df105768d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/760ee8173c59976ca111040bc017b57df105768d", "html_url": "https://github.com/rust-lang/rust/commit/760ee8173c59976ca111040bc017b57df105768d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/760ee8173c59976ca111040bc017b57df105768d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a40e05dd5d8b2c5f74c61cd08efed9dc83124657", "url": "https://api.github.com/repos/rust-lang/rust/commits/a40e05dd5d8b2c5f74c61cd08efed9dc83124657", "html_url": "https://github.com/rust-lang/rust/commit/a40e05dd5d8b2c5f74c61cd08efed9dc83124657"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "99ac730ba9d05297815bc85736a469f01d779da2", "filename": "crates/ra_hir_def/src/nameres/collector.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/760ee8173c59976ca111040bc017b57df105768d/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/760ee8173c59976ca111040bc017b57df105768d/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=760ee8173c59976ca111040bc017b57df105768d", "patch": "@@ -609,14 +609,15 @@ impl DefCollector<'_> {\n             .get(&module_id)\n             .into_iter()\n             .flat_map(|v| v.iter())\n+            .filter(|(glob_importing_module, _)| {\n+                // we know all resolutions have the same visibility (`vis`), so we\n+                // just need to check that once\n+                vis.is_visible_from_def_map(&self.def_map, *glob_importing_module)\n+            })\n             .cloned()\n             .collect::<Vec<_>>();\n+\n         for (glob_importing_module, glob_import_vis) in glob_imports {\n-            // we know all resolutions have the same visibility (`vis`), so we\n-            // just need to check that once\n-            if !vis.is_visible_from_def_map(&self.def_map, glob_importing_module) {\n-                continue;\n-            }\n             self.update_recursive(\n                 glob_importing_module,\n                 resolutions,"}]}