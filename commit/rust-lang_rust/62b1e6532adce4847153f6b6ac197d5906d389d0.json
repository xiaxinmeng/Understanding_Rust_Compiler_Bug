{"sha": "62b1e6532adce4847153f6b6ac197d5906d389d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYjFlNjUzMmFkY2U0ODQ3MTUzZjZiNmFjMTk3ZDU5MDZkMzg5ZDA=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-05-29T18:38:04Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-05-29T18:38:04Z"}, "message": "Ensure that all statements in block are visited not just successors of a block.", "tree": {"sha": "987c1372ec1b139e52698f2e1b3fce849214b8cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/987c1372ec1b139e52698f2e1b3fce849214b8cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62b1e6532adce4847153f6b6ac197d5906d389d0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlsNngwACgkQAXYLT59T\n8VR4RRAAtj4GRcXsDAvOi5KI/fYKZS/+a85PX3uuVkdb5hf47oCcnGMVNnZQzemI\nr9La49tKjSFGk/29tMF2O2KI34FR7nM7Sk6sHMAHJeuewVxtPkPNh/Gzww2Pzq8c\nwS6jkflBKrEvwd8wcfjEPc8CkN8+2bbp33PF8SO4ifsLeup9be2GYfudOX+7+DHu\npzT+7LPa1P6uPlQAGGok3/0iytjr40VOKwPoY+V605WrJTN1XCaoaZVSQ5LkPLjT\n3YeLiuVzEynTkkJKC8TIb0gjDkYREgsSBrPBKTUUXRBKdG6G6VON1ZqSwnYZGU2a\nhV9nqMyW78F/y3X8IIj3b2iEpwF2HDAiSbRD/3WZ2adpg4v/C4m30C2seCBRuS4r\nU8f+6iz1MRjvaU5yv5Fj7ssbKmLboLBfAhfuxP39l5O1xCRycyAF66lyM4CExRJt\nSo1j1ceoz5gd2LMN9WnsEjYs6NPTld2H1rGC04b6jEiUaTSM84Ciszz6Cpu5Vc7l\ngEH+ygfgLnPVzuoYkuDYNoxegYdoEl5zT/h/2i/kUAy+hkvAT0oshb3oySiWS2m/\npmzAyLqRuKrH33TmlYA4mOB0uE8VcAnqIDE9z/Lwr1Y9bphTgxaf98zcRlhbj+cM\nynVka1fqCd+F55iWsImL8+d2BI/VkdR9i+NYEXLaKj5/whyAsr8=\n=4mST\n-----END PGP SIGNATURE-----", "payload": "tree 987c1372ec1b139e52698f2e1b3fce849214b8cc\nparent 9c637144f5e7761e04c62232a69993c30b5b797f\nauthor David Wood <david@davidtw.co> 1527619084 +0100\ncommitter David Wood <david@davidtw.co> 1527619084 +0100\n\nEnsure that all statements in block are visited not just successors of a block.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62b1e6532adce4847153f6b6ac197d5906d389d0", "html_url": "https://github.com/rust-lang/rust/commit/62b1e6532adce4847153f6b6ac197d5906d389d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62b1e6532adce4847153f6b6ac197d5906d389d0/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c637144f5e7761e04c62232a69993c30b5b797f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c637144f5e7761e04c62232a69993c30b5b797f", "html_url": "https://github.com/rust-lang/rust/commit/9c637144f5e7761e04c62232a69993c30b5b797f"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "b8949e0ad063b4c45a30ed5798f66e2396129b60", "filename": "src/librustc_mir/dataflow/impls/borrows.rs", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/62b1e6532adce4847153f6b6ac197d5906d389d0/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62b1e6532adce4847153f6b6ac197d5906d389d0/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs?ref=62b1e6532adce4847153f6b6ac197d5906d389d0", "patch": "@@ -66,8 +66,8 @@ fn precompute_borrows_out_of_scope<'a, 'tcx>(\n     let mut visited = FxHashSet();\n     visited.insert(location);\n \n-    debug!(\"borrow {:?} starts at {:?}\", borrow_index, location);\n-\n+    debug!(\"borrow {:?} (region: {:?}) starts at {:?}\",\n+           borrow_index, borrow_region, location);\n     while let Some(location) = stack.pop() {\n         // If region does not contain a point at the location, then add to list and skip\n         // successor locations.\n@@ -80,15 +80,25 @@ fn precompute_borrows_out_of_scope<'a, 'tcx>(\n             continue;\n         }\n \n-        // Add successors to locations to visit, if not visited before.\n         let bb_data = &mir[location.block];\n-        if let Some(ref terminator) = bb_data.terminator {\n-            for block in terminator.successors() {\n-                let loc = block.start_location();\n-                if visited.insert(loc) {\n-                    stack.push(loc);\n+        // If this is the last statement in the block, then add the\n+        // terminator successors next.\n+        if location.statement_index == bb_data.statements.len() - 1 {\n+            // Add successors to locations to visit, if not visited before.\n+            if let Some(ref terminator) = bb_data.terminator {\n+                for block in terminator.successors() {\n+                    let loc = block.start_location();\n+                    if visited.insert(loc) {\n+                        stack.push(loc);\n+                    }\n                 }\n             }\n+        } else {\n+            // Visit next statement in block.\n+            let loc = location.successor_within_block();\n+            if visited.insert(loc) {\n+                stack.push(loc);\n+            }\n         }\n     }\n }"}]}