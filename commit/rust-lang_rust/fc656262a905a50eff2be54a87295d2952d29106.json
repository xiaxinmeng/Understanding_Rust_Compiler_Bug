{"sha": "fc656262a905a50eff2be54a87295d2952d29106", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjNjU2MjYyYTkwNWE1MGVmZjJiZTU0YTg3Mjk1ZDI5NTJkMjkxMDY=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-05-18T08:48:22Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-05-18T08:48:22Z"}, "message": "iterator: use advance to implement FilterMapIterator", "tree": {"sha": "36c3f790a20a81c799392e126c9409756b0f5e6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36c3f790a20a81c799392e126c9409756b0f5e6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc656262a905a50eff2be54a87295d2952d29106", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc656262a905a50eff2be54a87295d2952d29106", "html_url": "https://github.com/rust-lang/rust/commit/fc656262a905a50eff2be54a87295d2952d29106", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc656262a905a50eff2be54a87295d2952d29106/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "073225572a1c7c7dc9f7c2740514557105950807", "url": "https://api.github.com/repos/rust-lang/rust/commits/073225572a1c7c7dc9f7c2740514557105950807", "html_url": "https://github.com/rust-lang/rust/commit/073225572a1c7c7dc9f7c2740514557105950807"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "41f916f2d155760ee37ace38ed928be88aa980dd", "filename": "src/libcore/iterator.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fc656262a905a50eff2be54a87295d2952d29106/src%2Flibcore%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc656262a905a50eff2be54a87295d2952d29106/src%2Flibcore%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiterator.rs?ref=fc656262a905a50eff2be54a87295d2952d29106", "patch": "@@ -325,17 +325,13 @@ pub struct FilterMapIterator<'self, A, B, T> {\n impl<'self, A, B, T: Iterator<A>> Iterator<B> for FilterMapIterator<'self, A, B, T> {\n     #[inline]\n     fn next(&mut self) -> Option<B> {\n-        loop {\n-            match self.iter.next() {\n-                None    => { return None; }\n-                Some(a) => {\n-                    match (self.f)(a) {\n-                        Some(b) => { return Some(b); }\n-                        None    => { loop; }\n-                    }\n-                }\n+        for self.iter.advance |x| {\n+            match (self.f)(x) {\n+                Some(y) => return Some(y),\n+                None => ()\n             }\n         }\n+        None\n     }\n }\n "}]}