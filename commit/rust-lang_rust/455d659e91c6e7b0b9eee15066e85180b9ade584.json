{"sha": "455d659e91c6e7b0b9eee15066e85180b9ade584", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NWQ2NTllOTFjNmU3YjBiOWVlZTE1MDY2ZTg1MTgwYjlhZGU1ODQ=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-05T16:00:19Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-07T14:02:17Z"}, "message": "Update tests\n\nCo-Authored-By: Gabriel Smith <yodaldevoid@users.noreply.github.com>", "tree": {"sha": "04e7408cbf14c7a8500c282a9940e2d4afc35cd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04e7408cbf14c7a8500c282a9940e2d4afc35cd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/455d659e91c6e7b0b9eee15066e85180b9ade584", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/455d659e91c6e7b0b9eee15066e85180b9ade584", "html_url": "https://github.com/rust-lang/rust/commit/455d659e91c6e7b0b9eee15066e85180b9ade584", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/455d659e91c6e7b0b9eee15066e85180b9ade584/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fd597900629b215e858eebcfb24ab542364cc0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fd597900629b215e858eebcfb24ab542364cc0e", "html_url": "https://github.com/rust-lang/rust/commit/8fd597900629b215e858eebcfb24ab542364cc0e"}], "stats": {"total": 439, "additions": 182, "deletions": 257}, "files": [{"sha": "2ef5f13f3d46902c9d99f0043d84382defbd4d30", "filename": "src/test/ui/attrs-with-no-formal-in-generics/attrs-with-no-formal-in-generics-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-1.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -7,7 +7,7 @@\n struct RefIntPair<'a, 'b>(&'a u32, &'b u32);\n \n impl<#[rustc_1] 'a, 'b, #[oops]> RefIntPair<'a, 'b> {\n-    //~^ ERROR trailing attribute after lifetime parameters\n+    //~^ ERROR trailing attribute after lifetime parameter\n }\n \n fn main() {"}, {"sha": "97c0a19a3da3f48e4f24b07089f2cbf1e304bdee", "filename": "src/test/ui/attrs-with-no-formal-in-generics/attrs-with-no-formal-in-generics-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-1.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,4 +1,4 @@\n-error: trailing attribute after lifetime parameters\n+error: trailing attribute after lifetime parameter\n   --> $DIR/attrs-with-no-formal-in-generics-1.rs:9:25\n    |\n LL | impl<#[rustc_1] 'a, 'b, #[oops]> RefIntPair<'a, 'b> {"}, {"sha": "f58ddd5fbda01694e79545ba3d1195b7fba19aaa", "filename": "src/test/ui/attrs-with-no-formal-in-generics/attrs-with-no-formal-in-generics-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-2.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -7,6 +7,6 @@\n struct RefAny<'a, T>(&'a T);\n \n impl<#[rustc_1] 'a, #[rustc_2] T, #[oops]> RefAny<'a, T> {}\n-//~^ ERROR trailing attribute after type parameters\n+//~^ ERROR trailing attribute after type parameter\n \n fn main() {}"}, {"sha": "ff7ced77f25b380e7ad6654fe794e86e676e0c5e", "filename": "src/test/ui/attrs-with-no-formal-in-generics/attrs-with-no-formal-in-generics-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-2.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,4 +1,4 @@\n-error: trailing attribute after type parameters\n+error: trailing attribute after type parameter\n   --> $DIR/attrs-with-no-formal-in-generics-2.rs:9:35\n    |\n LL | impl<#[rustc_1] 'a, #[rustc_2] T, #[oops]> RefAny<'a, T> {}"}, {"sha": "44a7c9d7c8b6659353ed42a84238ce33dd22c903", "filename": "src/test/ui/attrs-with-no-formal-in-generics/attrs-with-no-formal-in-generics-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-3.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -6,7 +6,7 @@ struct RefIntPair<'a, 'b>(&'a u32, &'b u32);\n \n fn hof_lt<Q>(_: Q)\n     where Q: for <#[allow(unused)] 'a, 'b, #[oops]> Fn(RefIntPair<'a,'b>) -> &'b u32\n-    //~^ ERROR trailing attribute after lifetime parameters\n+    //~^ ERROR trailing attribute after lifetime parameter\n {}\n \n fn main() {}"}, {"sha": "b383e21e16129dd786bcd7903b91adcdf5de109f", "filename": "src/test/ui/attrs-with-no-formal-in-generics/attrs-with-no-formal-in-generics-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattrs-with-no-formal-in-generics%2Fattrs-with-no-formal-in-generics-3.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,4 +1,4 @@\n-error: trailing attribute after lifetime parameters\n+error: trailing attribute after lifetime parameter\n   --> $DIR/attrs-with-no-formal-in-generics-3.rs:8:44\n    |\n LL |     where Q: for <#[allow(unused)] 'a, 'b, #[oops]> Fn(RefIntPair<'a,'b>) -> &'b u32"}, {"sha": "17d48edc35c91bc3feb6f91dad09fc41678cb7aa", "filename": "src/test/ui/duplicate/duplicate-type-parameter.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fduplicate%2Fduplicate-type-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fduplicate%2Fduplicate-type-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fduplicate%2Fduplicate-type-parameter.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,52 +1,52 @@\n-error[E0403]: the name `T` is already used for a type parameter in this type parameter list\n+error[E0403]: the name `T` is already used for a generic parameter in this list of generic parameters\n   --> $DIR/duplicate-type-parameter.rs:1:12\n    |\n LL | type Foo<T,T> = Option<T>;\n    |          - ^ already used\n    |          |\n    |          first use of `T`\n \n-error[E0403]: the name `T` is already used for a type parameter in this type parameter list\n+error[E0403]: the name `T` is already used for a generic parameter in this list of generic parameters\n   --> $DIR/duplicate-type-parameter.rs:4:14\n    |\n LL | struct Bar<T,T>(T);\n    |            - ^ already used\n    |            |\n    |            first use of `T`\n \n-error[E0403]: the name `T` is already used for a type parameter in this type parameter list\n+error[E0403]: the name `T` is already used for a generic parameter in this list of generic parameters\n   --> $DIR/duplicate-type-parameter.rs:7:14\n    |\n LL | struct Baz<T,T> {\n    |            - ^ already used\n    |            |\n    |            first use of `T`\n \n-error[E0403]: the name `T` is already used for a type parameter in this type parameter list\n+error[E0403]: the name `T` is already used for a generic parameter in this list of generic parameters\n   --> $DIR/duplicate-type-parameter.rs:12:12\n    |\n LL | enum Boo<T,T> {\n    |          - ^ already used\n    |          |\n    |          first use of `T`\n \n-error[E0403]: the name `T` is already used for a type parameter in this type parameter list\n+error[E0403]: the name `T` is already used for a generic parameter in this list of generic parameters\n   --> $DIR/duplicate-type-parameter.rs:18:11\n    |\n LL | fn quux<T,T>(x: T) {}\n    |         - ^ already used\n    |         |\n    |         first use of `T`\n \n-error[E0403]: the name `T` is already used for a type parameter in this type parameter list\n+error[E0403]: the name `T` is already used for a generic parameter in this list of generic parameters\n   --> $DIR/duplicate-type-parameter.rs:21:13\n    |\n LL | trait Qux<T,T> {}\n    |           - ^ already used\n    |           |\n    |           first use of `T`\n \n-error[E0403]: the name `T` is already used for a type parameter in this type parameter list\n+error[E0403]: the name `T` is already used for a generic parameter in this list of generic parameters\n   --> $DIR/duplicate-type-parameter.rs:24:8\n    |\n LL | impl<T,T> Qux<T,T> for Option<T> {}"}, {"sha": "b924647502965e6ac03a1bd767918640a8e14f4c", "filename": "src/test/ui/error-codes/E0403.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Ferror-codes%2FE0403.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Ferror-codes%2FE0403.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0403.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,4 +1,4 @@\n-error[E0403]: the name `T` is already used for a type parameter in this type parameter list\n+error[E0403]: the name `T` is already used for a generic parameter in this list of generic parameters\n   --> $DIR/E0403.rs:1:11\n    |\n LL | fn foo<T, T>(s: T, u: T) {} //~ ERROR E0403"}, {"sha": "9f983f74f5b1ea9c24005f794e89aaf3a7b7ed0c", "filename": "src/test/ui/issues/issue-20616-3.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-3.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,8 +1,8 @@\n+// ignore-tidy-linelength\n+\n // We need all these 9 issue-20616-N.rs files\n // because we can only catch one parsing error at a time\n \n-\n-\n type Type_1_<'a, T> = &'a T;\n \n \n@@ -12,7 +12,7 @@ type Type_1_<'a, T> = &'a T;\n //type Type_2 = Type_1_<'static ()>; // error: expected `,` or `>` after lifetime name, found `(`\n \n \n-type Type_3<T> = Box<T,,>; //~ error: expected one of `>`, identifier, lifetime, or type, found `,`\n+type Type_3<T> = Box<T,,>; //~ error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n \n \n //type Type_4<T> = Type_1_<'static,, T>; // error: expected type, found `,`"}, {"sha": "e8edb5ba70f545ce388a28026a4fe246a3f4c6d2", "filename": "src/test/ui/issues/issue-20616-3.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-3.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `>`, identifier, lifetime, or type, found `,`\n+error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n   --> $DIR/issue-20616-3.rs:15:24\n    |\n-LL | type Type_3<T> = Box<T,,>; //~ error: expected one of `>`, identifier, lifetime, or type, found `,`\n-   |                        ^ expected one of `>`, identifier, lifetime, or type here\n+LL | type Type_3<T> = Box<T,,>; //~ error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n+   |                        ^ expected one of `>`, const, identifier, lifetime, or type here\n \n error: aborting due to previous error\n "}, {"sha": "e9a34a04667b0937a950fba0e37bfbadeb17373b", "filename": "src/test/ui/issues/issue-20616-4.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-4.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,8 +1,6 @@\n // We need all these 9 issue-20616-N.rs files\n // because we can only catch one parsing error at a time\n \n-\n-\n type Type_1_<'a, T> = &'a T;\n \n \n@@ -16,7 +14,7 @@ type Type_1_<'a, T> = &'a T;\n \n \n type Type_4<T> = Type_1_<'static,, T>;\n-//~^ error: expected one of `>`, identifier, lifetime, or type, found `,`\n+//~^ error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n \n \n type Type_5_<'a> = Type_1_<'a, ()>;"}, {"sha": "22a655465e83cacfe9c1c7294afdec5056963d9b", "filename": "src/test/ui/issues/issue-20616-4.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-4.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `>`, identifier, lifetime, or type, found `,`\n-  --> $DIR/issue-20616-4.rs:18:34\n+error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n+  --> $DIR/issue-20616-4.rs:16:34\n    |\n LL | type Type_4<T> = Type_1_<'static,, T>;\n-   |                                  ^ expected one of `>`, identifier, lifetime, or type here\n+   |                                  ^ expected one of `>`, const, identifier, lifetime, or type here\n \n error: aborting due to previous error\n "}, {"sha": "23862516d2cbfb35d97edbbc8bb0c7c14cc13124", "filename": "src/test/ui/issues/issue-20616-5.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-5.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,8 +1,6 @@\n // We need all these 9 issue-20616-N.rs files\n // because we can only catch one parsing error at a time\n \n-\n-\n type Type_1_<'a, T> = &'a T;\n \n \n@@ -22,7 +20,7 @@ type Type_5_<'a> = Type_1_<'a, ()>;\n \n \n type Type_5<'a> = Type_1_<'a, (),,>;\n-//~^ error: expected one of `>`, identifier, lifetime, or type, found `,`\n+//~^ error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n \n \n //type Type_6 = Type_5_<'a,,>; // error: expected type, found `,`"}, {"sha": "d83fc41f43ec0874979db22b615505cce6e40633", "filename": "src/test/ui/issues/issue-20616-5.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-5.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `>`, identifier, lifetime, or type, found `,`\n-  --> $DIR/issue-20616-5.rs:24:34\n+error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n+  --> $DIR/issue-20616-5.rs:22:34\n    |\n LL | type Type_5<'a> = Type_1_<'a, (),,>;\n-   |                                  ^ expected one of `>`, identifier, lifetime, or type here\n+   |                                  ^ expected one of `>`, const, identifier, lifetime, or type here\n \n error: aborting due to previous error\n "}, {"sha": "dc327f3f788247631e872e62916b7b4adf79384c", "filename": "src/test/ui/issues/issue-20616-6.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-6.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,8 +1,6 @@\n // We need all these 9 issue-20616-N.rs files\n // because we can only catch one parsing error at a time\n \n-\n-\n type Type_1_<'a, T> = &'a T;\n \n \n@@ -25,7 +23,7 @@ type Type_5_<'a> = Type_1_<'a, ()>;\n \n \n type Type_6 = Type_5_<'a,,>;\n-//~^ error: expected one of `>`, identifier, lifetime, or type, found `,`\n+//~^ error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n \n \n //type Type_7 = Box<(),,>; // error: expected type, found `,`"}, {"sha": "0740df595234a013ef4d206a96fc6acccc33a26c", "filename": "src/test/ui/issues/issue-20616-6.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-6.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `>`, identifier, lifetime, or type, found `,`\n-  --> $DIR/issue-20616-6.rs:27:26\n+error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n+  --> $DIR/issue-20616-6.rs:25:26\n    |\n LL | type Type_6 = Type_5_<'a,,>;\n-   |                          ^ expected one of `>`, identifier, lifetime, or type here\n+   |                          ^ expected one of `>`, const, identifier, lifetime, or type here\n \n error: aborting due to previous error\n "}, {"sha": "277b452450631ddedaef4d51f1acd16e4eb12b37", "filename": "src/test/ui/issues/issue-20616-7.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-7.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,8 +1,8 @@\n+// ignore-tidy-linelength\n+\n // We need all these 9 issue-20616-N.rs files\n // because we can only catch one parsing error at a time\n \n-\n-\n type Type_1_<'a, T> = &'a T;\n \n \n@@ -27,7 +27,7 @@ type Type_5_<'a> = Type_1_<'a, ()>;\n //type Type_6 = Type_5_<'a,,>; // error: expected type, found `,`\n \n \n-type Type_7 = Box<(),,>; //~ error: expected one of `>`, identifier, lifetime, or type, found `,`\n+type Type_7 = Box<(),,>; //~ error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n \n \n //type Type_8<'a,,> = &'a (); // error: expected ident, found `,`"}, {"sha": "c1422d849fc7e277e1fec5449e96e5c3c92f6e11", "filename": "src/test/ui/issues/issue-20616-7.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-7.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `>`, identifier, lifetime, or type, found `,`\n+error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n   --> $DIR/issue-20616-7.rs:30:22\n    |\n-LL | type Type_7 = Box<(),,>; //~ error: expected one of `>`, identifier, lifetime, or type, found `,`\n-   |                      ^ expected one of `>`, identifier, lifetime, or type here\n+LL | type Type_7 = Box<(),,>; //~ error: expected one of `>`, const, identifier, lifetime, or type, found `,`\n+   |                      ^ expected one of `>`, const, identifier, lifetime, or type here\n \n error: aborting due to previous error\n "}, {"sha": "756119e012718e5fa72b774aae88fb32fd09c12b", "filename": "src/test/ui/issues/issue-20616-8.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-8.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,8 +1,8 @@\n+// ignore-tidy-linelength\n+\n // We need all these 9 issue-20616-N.rs files\n // because we can only catch one parsing error at a time\n \n-\n-\n type Type_1_<'a, T> = &'a T;\n \n \n@@ -30,7 +30,7 @@ type Type_5_<'a> = Type_1_<'a, ()>;\n //type Type_7 = Box<(),,>; // error: expected type, found `,`\n \n \n-type Type_8<'a,,> = &'a (); //~ error: expected one of `>`, identifier, or lifetime, found `,`\n+type Type_8<'a,,> = &'a (); //~ error: expected one of `>`, `const`, identifier, or lifetime, found `,`\n \n \n //type Type_9<T,,> = Box<T>; // error: expected identifier, found `,`"}, {"sha": "cfe3ec57712d412021189f985af1d59140827324", "filename": "src/test/ui/issues/issue-20616-8.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-8.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-8.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-8.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `>`, identifier, or lifetime, found `,`\n+error: expected one of `>`, `const`, identifier, or lifetime, found `,`\n   --> $DIR/issue-20616-8.rs:33:16\n    |\n-LL | type Type_8<'a,,> = &'a (); //~ error: expected one of `>`, identifier, or lifetime, found `,`\n-   |                ^ expected one of `>`, identifier, or lifetime here\n+LL | type Type_8<'a,,> = &'a (); //~ error: expected one of `>`, `const`, identifier, or lifetime, found `,`\n+   |                ^ expected one of `>`, `const`, identifier, or lifetime here\n \n error: aborting due to previous error\n "}, {"sha": "6074fbb2204c3dd6aa244b8e77d0ec75582530ef", "filename": "src/test/ui/issues/issue-20616-9.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-9.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-9.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-9.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,8 +1,8 @@\n+// ignore-tidy-linelength\n+\n // We need all these 9 issue-20616-N.rs files\n // because we can only catch one parsing error at a time\n \n-\n-\n type Type_1_<'a, T> = &'a T;\n \n \n@@ -33,4 +33,4 @@ type Type_5_<'a> = Type_1_<'a, ()>;\n //type Type_8<'a,,> = &'a (); // error: expected identifier, found `,`\n \n \n-type Type_9<T,,> = Box<T>; //~ error: expected one of `>`, identifier, or lifetime, found `,`\n+type Type_9<T,,> = Box<T>; //~ error: expected one of `>`, `const`, identifier, or lifetime, found `,`"}, {"sha": "960e8c8c08656f04c856bb1e1624c7fc6f56d0e8", "filename": "src/test/ui/issues/issue-20616-9.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-9.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fissues%2Fissue-20616-9.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20616-9.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `>`, identifier, or lifetime, found `,`\n+error: expected one of `>`, `const`, identifier, or lifetime, found `,`\n   --> $DIR/issue-20616-9.rs:36:15\n    |\n-LL | type Type_9<T,,> = Box<T>; //~ error: expected one of `>`, identifier, or lifetime, found `,`\n-   |               ^ expected one of `>`, identifier, or lifetime here\n+LL | type Type_9<T,,> = Box<T>; //~ error: expected one of `>`, `const`, identifier, or lifetime, found `,`\n+   |               ^ expected one of `>`, `const`, identifier, or lifetime here\n \n error: aborting due to previous error\n "}, {"sha": "3cef5db66c66fbe6adb7f247bdd9e12c24ded8b3", "filename": "src/test/ui/lifetime-before-type-params.stderr", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Flifetime-before-type-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Flifetime-before-type-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-before-type-params.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -2,41 +2,25 @@ error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/lifetime-before-type-params.rs:2:13\n    |\n LL | fn first<T, 'a, 'b>() {}\n-   |             ^^  ^^\n-help: move the lifetime parameter prior to the first type parameter\n-   |\n-LL | fn first<'a, 'b, T>() {}\n-   |          ^^^ ^^^ --\n+   |         ----^^--^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, T>`\n \n error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/lifetime-before-type-params.rs:4:18\n    |\n LL | fn second<'a, T, 'b>() {}\n-   |                  ^^\n-help: move the lifetime parameter prior to the first type parameter\n-   |\n-LL | fn second<'a, 'b, T>() {}\n-   |               ^^^ --\n+   |          --------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, T>`\n \n error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/lifetime-before-type-params.rs:6:16\n    |\n LL | fn third<T, U, 'a>() {}\n-   |                ^^\n-help: move the lifetime parameter prior to the first type parameter\n-   |\n-LL | fn third<'a, T, U>() {}\n-   |          ^^^    --\n+   |         -------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, T, U>`\n \n error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/lifetime-before-type-params.rs:8:18\n    |\n LL | fn fourth<'a, T, 'b, U, 'c, V>() {}\n-   |                  ^^     ^^\n-help: move the lifetime parameter prior to the first type parameter\n-   |\n-LL | fn fourth<'a, 'b, 'c, T, U, V>() {}\n-   |               ^^^ ^^^ -- --\n+   |          --------^^-----^^---- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, 'c, T, U, V>`\n \n error[E0601]: `main` function not found in crate `lifetime_before_type_params`\n    |"}, {"sha": "9225cfce94eb8e832735a63eb6983894b39a4290", "filename": "src/test/ui/parser/bounds-lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -6,6 +6,6 @@ type A = for<'a: 'b + 'c> fn(); // OK (rejected later by ast_validation)\n type A = for<'a: 'b,> fn(); // OK(rejected later by ast_validation)\n type A = for<'a: 'b +> fn(); // OK (rejected later by ast_validation)\n type A = for<'a, T> fn(); // OK (rejected later by ast_validation)\n-type A = for<,> fn(); //~ ERROR expected one of `>`, identifier, or lifetime, found `,`\n+type A = for<,> fn(); //~ ERROR expected one of `>`, `const`, identifier, or lifetime, found `,`\n \n fn main() {}"}, {"sha": "191ea3ebd070acfd0243e104cd61b215b7eda3b2", "filename": "src/test/ui/parser/bounds-lifetime.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `>`, identifier, or lifetime, found `,`\n+error: expected one of `>`, `const`, identifier, or lifetime, found `,`\n   --> $DIR/bounds-lifetime.rs:9:14\n    |\n-LL | type A = for<,> fn(); //~ ERROR expected one of `>`, identifier, or lifetime, found `,`\n-   |              ^ expected one of `>`, identifier, or lifetime here\n+LL | type A = for<,> fn(); //~ ERROR expected one of `>`, `const`, identifier, or lifetime, found `,`\n+   |              ^ expected one of `>`, `const`, identifier, or lifetime here\n \n error: aborting due to previous error\n "}, {"sha": "bcecd75b1abbad33e772bf4e1042befd4dfba493", "filename": "src/test/ui/parser/issue-14303-enum.stderr", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-enum.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -2,11 +2,7 @@ error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/issue-14303-enum.rs:1:15\n    |\n LL | enum X<'a, T, 'b> {\n-   |               ^^\n-help: move the lifetime parameter prior to the first type parameter\n-   |\n-LL | enum X<'a, 'b, T> {\n-   |            ^^^ --\n+   |       --------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, T>`\n \n error: aborting due to previous error\n "}, {"sha": "082c37e0be7956e8789126a54c1dcaf7d4452add", "filename": "src/test/ui/parser/issue-14303-fn-def.stderr", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fn-def.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fn-def.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fn-def.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -2,11 +2,7 @@ error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/issue-14303-fn-def.rs:1:15\n    |\n LL | fn foo<'a, T, 'b>(x: &'a T) {}\n-   |               ^^\n-help: move the lifetime parameter prior to the first type parameter\n-   |\n-LL | fn foo<'a, 'b, T>(x: &'a T) {}\n-   |            ^^^ --\n+   |       --------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, T>`\n \n error: aborting due to previous error\n "}, {"sha": "39694198cdb4d1807fac4bbb2438c4664dc681f0", "filename": "src/test/ui/parser/issue-14303-fncall.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fncall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fncall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fncall.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -11,7 +11,7 @@ fn foo<'a, 'b>(start: &'a usize, end: &'a usize) {\n     let _x = (*start..*end)\n         .map(|x| S { a: start, b: end })\n         .collect::<Vec<S<_, 'a>>>();\n-        //~^ ERROR lifetime parameters must be declared prior to type parameters\n+        //~^ ERROR lifetime arguments must be declared prior to type arguments\n }\n \n fn main() {}"}, {"sha": "8ef9f1a1a6c79edcb1533627a2aafb7cbdc08628", "filename": "src/test/ui/parser/issue-14303-fncall.stderr", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fncall.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fncall.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fncall.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,12 +1,8 @@\n-error: lifetime parameters must be declared prior to type parameters\n+error: lifetime arguments must be declared prior to type arguments\n   --> $DIR/issue-14303-fncall.rs:13:29\n    |\n LL |         .collect::<Vec<S<_, 'a>>>();\n-   |                             ^^ must be declared prior to type parameters\n-help: move the lifetime parameter prior to the first type parameter\n-   |\n-LL |         .collect::<Vec<S<'a, _>>>();\n-   |                          ^^^ --\n+   |                             ^^\n \n error: aborting due to previous error\n "}, {"sha": "3b5615d2a9ecab7e55415c4924b1ce5c9c88ea71", "filename": "src/test/ui/parser/issue-14303-impl.stderr", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-impl.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -2,11 +2,7 @@ error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/issue-14303-impl.rs:3:13\n    |\n LL | impl<'a, T, 'b> X<T> {}\n-   |             ^^\n-help: move the lifetime parameter prior to the first type parameter\n-   |\n-LL | impl<'a, 'b, T> X<T> {}\n-   |          ^^^ --\n+   |     --------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, T>`\n \n error: aborting due to previous error\n "}, {"sha": "386d19859e4a83d6a6055ee2e295f4d6023df6cc", "filename": "src/test/ui/parser/issue-14303-path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-path.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -8,6 +8,6 @@ mod foo {\n }\n \n fn bar<'a, 'b, 'c, T>(x: foo::X<'a, T, 'b, 'c>) {}\n-//~^ ERROR lifetime parameters must be declared prior to type parameters\n+//~^ ERROR lifetime arguments must be declared prior to type arguments\n \n fn main() {}"}, {"sha": "19f2995ebee536e652d98662d357b6bca4ea263c", "filename": "src/test/ui/parser/issue-14303-path.stderr", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-path.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,14 +1,8 @@\n-error: lifetime parameters must be declared prior to type parameters\n+error: lifetime arguments must be declared prior to type arguments\n   --> $DIR/issue-14303-path.rs:10:40\n    |\n LL | fn bar<'a, 'b, 'c, T>(x: foo::X<'a, T, 'b, 'c>) {}\n-   |                                        ^^  ^^ must be declared prior to type parameters\n-   |                                        |\n-   |                                        must be declared prior to type parameters\n-help: move the lifetime parameters prior to the first type parameter\n-   |\n-LL | fn bar<'a, 'b, 'c, T>(x: foo::X<'a, 'b, 'c, T>) {}\n-   |                                     ^^^ ^^^ --\n+   |                                        ^^  ^^\n \n error: aborting due to previous error\n "}, {"sha": "dbd0b987dd1901bfaba0b6e650949fc4c9799408", "filename": "src/test/ui/parser/issue-14303-struct.stderr", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-struct.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -2,11 +2,7 @@ error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/issue-14303-struct.rs:1:17\n    |\n LL | struct X<'a, T, 'b> {\n-   |                 ^^\n-help: move the lifetime parameter prior to the first type parameter\n-   |\n-LL | struct X<'a, 'b, T> {\n-   |              ^^^ --\n+   |         --------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, T>`\n \n error: aborting due to previous error\n "}, {"sha": "7dfa62d823fd8754c7f3873797b2a401b73ac7c3", "filename": "src/test/ui/parser/issue-14303-trait.stderr", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-14303-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-trait.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -2,11 +2,7 @@ error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/issue-14303-trait.rs:1:18\n    |\n LL | trait Foo<'a, T, 'b> {}\n-   |                  ^^\n-help: move the lifetime parameter prior to the first type parameter\n-   |\n-LL | trait Foo<'a, 'b, T> {}\n-   |               ^^^ --\n+   |          --------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, T>`\n \n error: aborting due to previous error\n "}, {"sha": "7191a3234c0837828a3f8b1ab5149c0baa97c6b4", "filename": "src/test/ui/parser/issue-32214.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-32214.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-32214.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-32214.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -3,6 +3,6 @@\n trait Trait<T> { type Item; }\n \n pub fn test<W, I: Trait<Item=(), W> >() {}\n-//~^ ERROR type parameters must be declared prior to associated type bindings\n+//~^ ERROR associated type bindings must be declared after generic parameters\n \n fn main() { }"}, {"sha": "7022019a22f26c4aed51ba70aa39693ad023da81", "filename": "src/test/ui/parser/issue-32214.stderr", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-32214.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fissue-32214.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-32214.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,12 +1,10 @@\n-error: type parameters must be declared prior to associated type bindings\n-  --> $DIR/issue-32214.rs:5:34\n+error: associated type bindings must be declared after generic parameters\n+  --> $DIR/issue-32214.rs:5:25\n    |\n LL | pub fn test<W, I: Trait<Item=(), W> >() {}\n-   |                                  ^ must be declared prior to associated type bindings\n-help: move the type parameter prior to the first associated type binding\n-   |\n-LL | pub fn test<W, I: Trait<W, Item=()> >() {}\n-   |                         ^^       --\n+   |                         -------^^^\n+   |                         |\n+   |                         this associated type binding should be moved after the generic parameters\n \n error: aborting due to previous error\n "}, {"sha": "79d51f5595d2635283c36d94989c42bb8afc8ce5", "filename": "src/test/ui/parser/removed-syntax-uniq-mut-ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-uniq-mut-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-uniq-mut-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-uniq-mut-ty.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1 +1 @@\n-type mut_box = Box<mut isize>; //~ ERROR expected one of `>`, lifetime, or type, found `mut`\n+type mut_box = Box<mut isize>; //~ ERROR expected one of `>`, const, lifetime, or type, found `mut`"}, {"sha": "b2759778d0313a75997fa09d2ce3623d86c55dfe", "filename": "src/test/ui/parser/removed-syntax-uniq-mut-ty.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-uniq-mut-ty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-uniq-mut-ty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fremoved-syntax-uniq-mut-ty.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `>`, lifetime, or type, found `mut`\n+error: expected one of `>`, const, lifetime, or type, found `mut`\n   --> $DIR/removed-syntax-uniq-mut-ty.rs:1:20\n    |\n-LL | type mut_box = Box<mut isize>; //~ ERROR expected one of `>`, lifetime, or type, found `mut`\n-   |                    ^^^ expected one of `>`, lifetime, or type here\n+LL | type mut_box = Box<mut isize>; //~ ERROR expected one of `>`, const, lifetime, or type, found `mut`\n+   |                    ^^^ expected one of `>`, const, lifetime, or type here\n \n error: aborting due to previous error\n "}, {"sha": "afc27701920dceba2981fc863605d72a445b1c71", "filename": "src/test/ui/rfc1598-generic-associated-types/empty_generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -3,7 +3,7 @@\n \n trait Foo {\n     type Bar<,>;\n-    //~^ ERROR expected one of `>`, identifier, or lifetime, found `,`\n+    //~^ ERROR expected one of `>`, `const`, identifier, or lifetime, found `,`\n }\n \n fn main() {}"}, {"sha": "5b98302924e3ce986bf3fb01412858b00302c834", "filename": "src/test/ui/rfc1598-generic-associated-types/empty_generics.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fempty_generics.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,8 +1,8 @@\n-error: expected one of `>`, identifier, or lifetime, found `,`\n+error: expected one of `>`, `const`, identifier, or lifetime, found `,`\n   --> $DIR/empty_generics.rs:5:14\n    |\n LL |     type Bar<,>;\n-   |              ^ expected one of `>`, identifier, or lifetime here\n+   |              ^ expected one of `>`, `const`, identifier, or lifetime here\n \n warning: the feature `generic_associated_types` is incomplete and may cause the compiler to crash\n   --> $DIR/empty_generics.rs:1:12"}, {"sha": "2d6dee0621662c5839ea606891d28fb2ade84aa4", "filename": "src/test/ui/suggestions/suggest-move-lifetimes.stderr", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -2,41 +2,25 @@ error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/suggest-move-lifetimes.rs:1:13\n    |\n LL | struct A<T, 'a> { //~ ERROR lifetime parameters must be declared\n-   |             ^^\n-help: move the lifetime parameter prior to the first type parameter\n-   |\n-LL | struct A<'a, T> { //~ ERROR lifetime parameters must be declared\n-   |          ^^^ --\n+   |         ----^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, T>`\n \n error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/suggest-move-lifetimes.rs:5:13\n    |\n LL | struct B<T, 'a, U> { //~ ERROR lifetime parameters must be declared\n-   |             ^^\n-help: move the lifetime parameter prior to the first type parameter\n-   |\n-LL | struct B<'a, T, U> { //~ ERROR lifetime parameters must be declared\n-   |          ^^^ --\n+   |         ----^^---- help: reorder the parameters: lifetimes, then types, then consts: `<'a, T, U>`\n \n error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/suggest-move-lifetimes.rs:10:16\n    |\n LL | struct C<T, U, 'a> { //~ ERROR lifetime parameters must be declared\n-   |                ^^\n-help: move the lifetime parameter prior to the first type parameter\n-   |\n-LL | struct C<'a, T, U> { //~ ERROR lifetime parameters must be declared\n-   |          ^^^    --\n+   |         -------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, T, U>`\n \n error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/suggest-move-lifetimes.rs:15:16\n    |\n LL | struct D<T, U, 'a, 'b, V, 'c> { //~ ERROR lifetime parameters must be declared\n-   |                ^^  ^^     ^^\n-help: move the lifetime parameter prior to the first type parameter\n-   |\n-LL | struct D<'a, 'b, 'c, T, U, V> { //~ ERROR lifetime parameters must be declared\n-   |          ^^^ ^^^ ^^^    -- --\n+   |         -------^^--^^-----^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, 'b, 'c, T, U, V>`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "890950ea08c5d4a316475b95181f3a28832975ef", "filename": "src/test/ui/suggestions/suggest-move-types.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -25,57 +25,61 @@ trait ThreeWithLifetime<'a, 'b, 'c, T, U, V> {\n   type C;\n }\n \n-struct A<T, M: One<A=(), T>> { //~ ERROR type parameters must be declared\n+struct A<T, M: One<A=(), T>> { //~ ERROR associated type bindings must be declared after generic parameters\n     m: M,\n     t: T,\n }\n \n \n struct Al<'a, T, M: OneWithLifetime<A=(), T, 'a>> {\n-//~^ ERROR generic arguments must declare lifetimes, types and associated type bindings in that order\n+//~^ ERROR associated type bindings must be declared after generic parameters\n+//~^^ ERROR lifetime arguments must be declared prior to type arguments\n     m: M,\n     t: &'a T,\n }\n \n-struct B<T, U, V, M: Three<A=(), B=(), C=(), T, U, V>> { //~ ERROR type parameters must be declared\n+struct B<T, U, V, M: Three<A=(), B=(), C=(), T, U, V>> { //~ ERROR associated type bindings must be declared after generic parameters\n     m: M,\n     t: T,\n     u: U,\n     v: V,\n }\n \n struct Bl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<A=(), B=(), C=(), T, U, V, 'a, 'b, 'c>> {\n-//~^ ERROR generic arguments must declare lifetimes, types and associated type bindings in that order\n+//~^ ERROR associated type bindings must be declared after generic parameters\n+//~^^ ERROR lifetime arguments must be declared prior to type arguments\n     m: M,\n     t: &'a T,\n     u: &'b U,\n     v: &'c V,\n }\n \n-struct C<T, U, V, M: Three<T, A=(), B=(), C=(), U, V>> { //~ ERROR type parameters must be declared\n+struct C<T, U, V, M: Three<T, A=(), B=(), C=(), U, V>> { //~ ERROR associated type bindings must be declared after generic parameters\n     m: M,\n     t: T,\n     u: U,\n     v: V,\n }\n \n struct Cl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), C=(), U, 'b, V, 'c>> {\n-//~^ ERROR generic arguments must declare lifetimes, types and associated type bindings in that order\n+//~^ ERROR associated type bindings must be declared after generic parameters\n+//~^^ ERROR lifetime arguments must be declared prior to type arguments\n     m: M,\n     t: &'a T,\n     u: &'b U,\n     v: &'c V,\n }\n \n-struct D<T, U, V, M: Three<T, A=(), B=(), U, C=(), V>> { //~ ERROR type parameters must be declared\n+struct D<T, U, V, M: Three<T, A=(), B=(), U, C=(), V>> { //~ ERROR associated type bindings must be declared after generic parameters\n     m: M,\n     t: T,\n     u: U,\n     v: V,\n }\n \n struct Dl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), U, 'b, C=(), V, 'c>> {\n-//~^ ERROR generic arguments must declare lifetimes, types and associated type bindings in that order\n+//~^ ERROR associated type bindings must be declared after generic parameters\n+//~^^ ERROR lifetime arguments must be declared prior to type arguments\n     m: M,\n     t: &'a T,\n     u: &'b U,"}, {"sha": "0901b71911d432023f6579a26bad2cde2e2fa18b", "filename": "src/test/ui/suggestions/suggest-move-types.stderr", "status": "modified", "additions": 81, "deletions": 86, "changes": 167, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,107 +1,102 @@\n-error: type parameters must be declared prior to associated type bindings\n-  --> $DIR/suggest-move-types.rs:28:26\n+error: associated type bindings must be declared after generic parameters\n+  --> $DIR/suggest-move-types.rs:28:20\n    |\n-LL | struct A<T, M: One<A=(), T>> { //~ ERROR type parameters must be declared\n-   |                          ^ must be declared prior to associated type bindings\n-help: move the type parameter prior to the first associated type binding\n-   |\n-LL | struct A<T, M: One<T, A=()>> { //~ ERROR type parameters must be declared\n-   |                    ^^    --\n+LL | struct A<T, M: One<A=(), T>> { //~ ERROR associated type bindings must be declared after generic parameters\n+   |                    ----^^^\n+   |                    |\n+   |                    this associated type binding should be moved after the generic parameters\n \n-error: generic arguments must declare lifetimes, types and associated type bindings in that order\n-  --> $DIR/suggest-move-types.rs:34:46\n+error: associated type bindings must be declared after generic parameters\n+  --> $DIR/suggest-move-types.rs:34:37\n    |\n LL | struct Al<'a, T, M: OneWithLifetime<A=(), T, 'a>> {\n-   |                                           ^  ^^ must be declared prior to type parameters\n-   |                                           |\n-   |                                           must be declared prior to associated type bindings\n-help: move the parameters\n-   |\n-LL | struct Al<'a, T, M: OneWithLifetime<'a, T, A=()>> {\n-   |                                     ^^^ ^^    --\n+   |                                     ----^^^^^^^\n+   |                                     |\n+   |                                     this associated type binding should be moved after the generic parameters\n \n-error: type parameters must be declared prior to associated type bindings\n-  --> $DIR/suggest-move-types.rs:40:46\n-   |\n-LL | struct B<T, U, V, M: Three<A=(), B=(), C=(), T, U, V>> { //~ ERROR type parameters must be declared\n-   |                                              ^  ^  ^ must be declared prior to associated type bindings\n-   |                                              |  |\n-   |                                              |  must be declared prior to associated type bindings\n-   |                                              must be declared prior to associated type bindings\n-help: move the type parameters prior to the first associated type binding\n-   |\n-LL | struct B<T, U, V, M: Three<T, U, V, A=(), B=(), C=()>> { //~ ERROR type parameters must be declared\n-   |                            ^^ ^^ ^^                --\n+error: associated type bindings must be declared after generic parameters\n+  --> $DIR/suggest-move-types.rs:41:28\n+   |\n+LL | struct B<T, U, V, M: Three<A=(), B=(), C=(), T, U, V>> { //~ ERROR associated type bindings must be declared after generic parameters\n+   |                            ----^^----^^----^^^^^^^^^\n+   |                            |     |     |\n+   |                            |     |     this associated type binding should be moved after the generic parameters\n+   |                            |     this associated type binding should be moved after the generic parameters\n+   |                            this associated type binding should be moved after the generic parameters\n \n-error: generic arguments must declare lifetimes, types and associated type bindings in that order\n-  --> $DIR/suggest-move-types.rs:47:80\n+error: associated type bindings must be declared after generic parameters\n+  --> $DIR/suggest-move-types.rs:48:53\n    |\n LL | struct Bl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<A=(), B=(), C=(), T, U, V, 'a, 'b, 'c>> {\n-   |                                                                       ^  ^  ^  ^^  ^^  ^^ must be declared prior to type parameters\n-   |                                                                       |  |  |  |   |\n-   |                                                                       |  |  |  |   must be declared prior to type parameters\n-   |                                                                       |  |  |  must be declared prior to type parameters\n-   |                                                                       |  |  must be declared prior to associated type bindings\n-   |                                                                       |  must be declared prior to associated type bindings\n-   |                                                                       must be declared prior to associated type bindings\n-help: move the parameters\n-   |\n-LL | struct Bl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<'a, 'b, 'c, T, U, V, A=(), B=(), C=()>> {\n-   |                                                     ^^^ ^^^ ^^^ ^^ ^^ ^^                --\n+   |                                                     ----^^----^^----^^^^^^^^^^^^^^^^^^^^^\n+   |                                                     |     |     |\n+   |                                                     |     |     this associated type binding should be moved after the generic parameters\n+   |                                                     |     this associated type binding should be moved after the generic parameters\n+   |                                                     this associated type binding should be moved after the generic parameters\n \n-error: type parameters must be declared prior to associated type bindings\n-  --> $DIR/suggest-move-types.rs:55:49\n-   |\n-LL | struct C<T, U, V, M: Three<T, A=(), B=(), C=(), U, V>> { //~ ERROR type parameters must be declared\n-   |                                                 ^  ^ must be declared prior to associated type bindings\n-   |                                                 |\n-   |                                                 must be declared prior to associated type bindings\n-help: move the type parameters prior to the first associated type binding\n-   |\n-LL | struct C<T, U, V, M: Three<T, U, V, A=(), B=(), C=()>> { //~ ERROR type parameters must be declared\n-   |                               ^^ ^^                --\n+error: associated type bindings must be declared after generic parameters\n+  --> $DIR/suggest-move-types.rs:57:28\n+   |\n+LL | struct C<T, U, V, M: Three<T, A=(), B=(), C=(), U, V>> { //~ ERROR associated type bindings must be declared after generic parameters\n+   |                            ^^^----^^----^^----^^^^^^\n+   |                               |     |     |\n+   |                               |     |     this associated type binding should be moved after the generic parameters\n+   |                               |     this associated type binding should be moved after the generic parameters\n+   |                               this associated type binding should be moved after the generic parameters\n \n-error: generic arguments must declare lifetimes, types and associated type bindings in that order\n-  --> $DIR/suggest-move-types.rs:62:56\n+error: associated type bindings must be declared after generic parameters\n+  --> $DIR/suggest-move-types.rs:64:53\n    |\n LL | struct Cl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), C=(), U, 'b, V, 'c>> {\n-   |                                                        ^^                    ^  ^^  ^  ^^ must be declared prior to type parameters\n-   |                                                        |                     |  |   |\n-   |                                                        |                     |  |   must be declared prior to associated type bindings\n-   |                                                        |                     |  must be declared prior to type parameters\n-   |                                                        |                     must be declared prior to associated type bindings\n-   |                                                        must be declared prior to type parameters\n-help: move the parameters\n+   |                                                     ^^^^^^^----^^----^^----^^^^^^^^^^^^^^\n+   |                                                            |     |     |\n+   |                                                            |     |     this associated type binding should be moved after the generic parameters\n+   |                                                            |     this associated type binding should be moved after the generic parameters\n+   |                                                            this associated type binding should be moved after the generic parameters\n+\n+error: associated type bindings must be declared after generic parameters\n+  --> $DIR/suggest-move-types.rs:73:28\n+   |\n+LL | struct D<T, U, V, M: Three<T, A=(), B=(), U, C=(), V>> { //~ ERROR associated type bindings must be declared after generic parameters\n+   |                            ^^^----^^----^^^^^----^^^\n+   |                               |     |        |\n+   |                               |     |        this associated type binding should be moved after the generic parameters\n+   |                               |     this associated type binding should be moved after the generic parameters\n+   |                               this associated type binding should be moved after the generic parameters\n+\n+error: associated type bindings must be declared after generic parameters\n+  --> $DIR/suggest-move-types.rs:80:53\n    |\n-LL | struct Cl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<'a, 'b, 'c, T, U, V, A=(), B=(), C=()>> {\n-   |                                                     ^^^ ^^^ ^^^ -- ^^ ^^                --\n+LL | struct Dl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), U, 'b, C=(), V, 'c>> {\n+   |                                                     ^^^^^^^----^^----^^^^^^^^^----^^^^^^^\n+   |                                                            |     |            |\n+   |                                                            |     |            this associated type binding should be moved after the generic parameters\n+   |                                                            |     this associated type binding should be moved after the generic parameters\n+   |                                                            this associated type binding should be moved after the generic parameters\n \n-error: type parameters must be declared prior to associated type bindings\n-  --> $DIR/suggest-move-types.rs:70:43\n+error: lifetime arguments must be declared prior to type arguments\n+  --> $DIR/suggest-move-types.rs:34:46\n    |\n-LL | struct D<T, U, V, M: Three<T, A=(), B=(), U, C=(), V>> { //~ ERROR type parameters must be declared\n-   |                                           ^        ^ must be declared prior to associated type bindings\n-   |                                           |\n-   |                                           must be declared prior to associated type bindings\n-help: move the type parameters prior to the first associated type binding\n+LL | struct Al<'a, T, M: OneWithLifetime<A=(), T, 'a>> {\n+   |                                              ^^\n+\n+error: lifetime arguments must be declared prior to type arguments\n+  --> $DIR/suggest-move-types.rs:48:80\n    |\n-LL | struct D<T, U, V, M: Three<T, U, V, A=(), B=(), C=()>> { //~ ERROR type parameters must be declared\n-   |                               ^^ ^^          --    --\n+LL | struct Bl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<A=(), B=(), C=(), T, U, V, 'a, 'b, 'c>> {\n+   |                                                                                ^^  ^^  ^^\n \n-error: generic arguments must declare lifetimes, types and associated type bindings in that order\n-  --> $DIR/suggest-move-types.rs:77:56\n+error: lifetime arguments must be declared prior to type arguments\n+  --> $DIR/suggest-move-types.rs:64:56\n    |\n-LL | struct Dl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), U, 'b, C=(), V, 'c>> {\n-   |                                                        ^^              ^  ^^        ^  ^^ must be declared prior to type parameters\n-   |                                                        |               |  |         |\n-   |                                                        |               |  |         must be declared prior to associated type bindings\n-   |                                                        |               |  must be declared prior to type parameters\n-   |                                                        |               must be declared prior to associated type bindings\n-   |                                                        must be declared prior to type parameters\n-help: move the parameters\n+LL | struct Cl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), C=(), U, 'b, V, 'c>> {\n+   |                                                        ^^                       ^^     ^^\n+\n+error: lifetime arguments must be declared prior to type arguments\n+  --> $DIR/suggest-move-types.rs:80:56\n    |\n-LL | struct Dl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<'a, 'b, 'c, T, U, V, A=(), B=(), C=()>> {\n-   |                                                     ^^^ ^^^ ^^^ -- ^^ ^^          --    --\n+LL | struct Dl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), U, 'b, C=(), V, 'c>> {\n+   |                                                        ^^                 ^^           ^^\n \n-error: aborting due to 8 previous errors\n+error: aborting due to 12 previous errors\n "}, {"sha": "36dec21be0520987d390d1ba59bc0db4982a07a3", "filename": "src/test/ui/traits/trait-object-vs-lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Ftraits%2Ftrait-object-vs-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Ftraits%2Ftrait-object-vs-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-object-vs-lifetime.rs?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -12,6 +12,6 @@ fn main() {\n     //~^ ERROR wrong number of lifetime arguments: expected 1, found 2\n     //~| ERROR wrong number of type arguments: expected 1, found 0\n     let _: S<'static +, 'static>;\n-    //~^ ERROR lifetime parameters must be declared prior to type parameters\n+    //~^ ERROR lifetime arguments must be declared prior to type arguments\n     //~| ERROR at least one non-builtin trait is required for an object type\n }"}, {"sha": "e0c52a72a0931b0941800200b23c8f77befc979c", "filename": "src/test/ui/traits/trait-object-vs-lifetime.stderr", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Ftraits%2Ftrait-object-vs-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/455d659e91c6e7b0b9eee15066e85180b9ade584/src%2Ftest%2Fui%2Ftraits%2Ftrait-object-vs-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-object-vs-lifetime.stderr?ref=455d659e91c6e7b0b9eee15066e85180b9ade584", "patch": "@@ -1,12 +1,8 @@\n-error: lifetime parameters must be declared prior to type parameters\n+error: lifetime arguments must be declared prior to type arguments\n   --> $DIR/trait-object-vs-lifetime.rs:14:25\n    |\n LL |     let _: S<'static +, 'static>;\n-   |                         ^^^^^^^ must be declared prior to type parameters\n-help: move the lifetime parameter prior to the first type parameter\n-   |\n-LL |     let _: S<'static, 'static +>;\n-   |              ^^^^^^^^         --\n+   |                         ^^^^^^^\n \n error[E0224]: at least one non-builtin trait is required for an object type\n   --> $DIR/trait-object-vs-lifetime.rs:9:23"}]}