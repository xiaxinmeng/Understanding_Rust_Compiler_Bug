{"sha": "d7d2185607280e143ea25b1cf688cb6f27f2db45", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ZDIxODU2MDcyODBlMTQzZWEyNWIxY2Y2ODhjYjZmMjdmMmRiNDU=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-04-28T09:57:38Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-04-28T09:57:38Z"}, "message": "Add inlining.", "tree": {"sha": "a0327aee0840d16937276bbe4df55de0f2ff048f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0327aee0840d16937276bbe4df55de0f2ff048f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7d2185607280e143ea25b1cf688cb6f27f2db45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7d2185607280e143ea25b1cf688cb6f27f2db45", "html_url": "https://github.com/rust-lang/rust/commit/d7d2185607280e143ea25b1cf688cb6f27f2db45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7d2185607280e143ea25b1cf688cb6f27f2db45/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e33327782f868e81ece04b40d6fae56ede9845cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e33327782f868e81ece04b40d6fae56ede9845cd", "html_url": "https://github.com/rust-lang/rust/commit/e33327782f868e81ece04b40d6fae56ede9845cd"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "6a47abc5b4612e0755567f8958f304156bb59b0f", "filename": "src/librustc_query_system/query/caches.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7d2185607280e143ea25b1cf688cb6f27f2db45/src%2Flibrustc_query_system%2Fquery%2Fcaches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7d2185607280e143ea25b1cf688cb6f27f2db45/src%2Flibrustc_query_system%2Fquery%2Fcaches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2Fquery%2Fcaches.rs?ref=d7d2185607280e143ea25b1cf688cb6f27f2db45", "patch": "@@ -80,6 +80,7 @@ impl<K: Eq + Hash, V: Clone> QueryStorage for DefaultCache<K, V> {\n     type Value = V;\n     type Stored = V;\n \n+    #[inline]\n     fn store_nocache(&self, value: Self::Value) -> Self::Stored {\n         // We have no dedicated storage\n         value\n@@ -157,6 +158,7 @@ impl<'tcx, K: Eq + Hash, V: 'tcx> QueryStorage for ArenaCache<'tcx, K, V> {\n     type Value = V;\n     type Stored = &'tcx V;\n \n+    #[inline]\n     fn store_nocache(&self, value: Self::Value) -> Self::Stored {\n         let value = self.arena.alloc((value, DepNodeIndex::INVALID));\n         let value = unsafe { &*(&value.0 as *const _) };"}]}