{"sha": "fc01c7846d5c6970e194dd223e49b863b3189432", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjMDFjNzg0NmQ1YzY5NzBlMTk0ZGQyMjNlNDliODYzYjMxODk0MzI=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-08-11T06:54:33Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-08-11T07:09:50Z"}, "message": "Use Hygiene in completion", "tree": {"sha": "fe3d4afc043b3b0608b58542b6d156cad774c631", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe3d4afc043b3b0608b58542b6d156cad774c631"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc01c7846d5c6970e194dd223e49b863b3189432", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc01c7846d5c6970e194dd223e49b863b3189432", "html_url": "https://github.com/rust-lang/rust/commit/fc01c7846d5c6970e194dd223e49b863b3189432", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc01c7846d5c6970e194dd223e49b863b3189432/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b050937c1071e68a4ade69375f1f17b703cafb02", "url": "https://api.github.com/repos/rust-lang/rust/commits/b050937c1071e68a4ade69375f1f17b703cafb02", "html_url": "https://github.com/rust-lang/rust/commit/b050937c1071e68a4ade69375f1f17b703cafb02"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "4aa761148d80aa868cd66a1a88635819c3f9cce4", "filename": "crates/ra_ide/src/completion/completion_context.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fc01c7846d5c6970e194dd223e49b863b3189432/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc01c7846d5c6970e194dd223e49b863b3189432/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=fc01c7846d5c6970e194dd223e49b863b3189432", "patch": "@@ -27,7 +27,7 @@ pub(crate) struct CompletionContext<'a> {\n     pub(super) scope: SemanticsScope<'a>,\n     pub(super) db: &'a RootDatabase,\n     pub(super) config: &'a CompletionConfig,\n-    pub(super) offset: TextSize,\n+    pub(super) position: FilePosition,\n     /// The token before the cursor, in the original file.\n     pub(super) original_token: SyntaxToken,\n     /// The token before the cursor, in the macro-expanded file.\n@@ -117,7 +117,7 @@ impl<'a> CompletionContext<'a> {\n             config,\n             original_token,\n             token,\n-            offset: position.offset,\n+            position,\n             krate,\n             expected_type: None,\n             name_ref_syntax: None,\n@@ -209,7 +209,7 @@ impl<'a> CompletionContext<'a> {\n             mark::hit!(completes_if_prefix_is_keyword);\n             self.original_token.text_range()\n         } else {\n-            TextRange::empty(self.offset)\n+            TextRange::empty(self.position.offset)\n         }\n     }\n \n@@ -379,8 +379,8 @@ impl<'a> CompletionContext<'a> {\n             self.is_path_type = path.syntax().parent().and_then(ast::PathType::cast).is_some();\n             self.has_type_args = segment.generic_arg_list().is_some();\n \n-            #[allow(deprecated)]\n-            if let Some(path) = hir::Path::from_ast(path.clone()) {\n+            let hygiene = hir::Hygiene::new(self.db, self.position.file_id.into());\n+            if let Some(path) = hir::Path::from_src(path.clone(), &hygiene) {\n                 if let Some(path_prefix) = path.qualifier() {\n                     self.path_prefix = Some(path_prefix);\n                     return;"}]}