{"sha": "955a26fb0803fa1fb46d21abcb89f3a05e5cadda", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1NWEyNmZiMDgwM2ZhMWZiNDZkMjFhYmNiODlmM2EwNWU1Y2FkZGE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-03T14:39:03Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-03T14:39:03Z"}, "message": "calling panic_if_uninhabited is not actually UB", "tree": {"sha": "cafed605337b23b76424ff682c3792e4e84a673a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cafed605337b23b76424ff682c3792e4e84a673a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/955a26fb0803fa1fb46d21abcb89f3a05e5cadda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/955a26fb0803fa1fb46d21abcb89f3a05e5cadda", "html_url": "https://github.com/rust-lang/rust/commit/955a26fb0803fa1fb46d21abcb89f3a05e5cadda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/955a26fb0803fa1fb46d21abcb89f3a05e5cadda/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f7171585f2644d05ccb1c8a1b8b5656b645ca1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f7171585f2644d05ccb1c8a1b8b5656b645ca1f", "html_url": "https://github.com/rust-lang/rust/commit/4f7171585f2644d05ccb1c8a1b8b5656b645ca1f"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "7c8c06cbbfd54171f6ffc502c0bbd8635f341473", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/955a26fb0803fa1fb46d21abcb89f3a05e5cadda/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/955a26fb0803fa1fb46d21abcb89f3a05e5cadda/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=955a26fb0803fa1fb46d21abcb89f3a05e5cadda", "patch": "@@ -381,7 +381,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 let ty = substs.type_at(0);\n                 let layout = this.layout_of(ty)?;\n                 if layout.abi.is_uninhabited() {\n-                    throw_ub_format!(\"Trying to instantiate uninhabited type {}\", ty)\n+                    // FIXME: This should throw a panic in the interpreted program instead.\n+                    throw_unsup_format!(\"Trying to instantiate uninhabited type {}\", ty)\n                 }\n             }\n "}]}