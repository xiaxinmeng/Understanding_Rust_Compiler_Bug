{"sha": "31735b02c95510f2e236ebd773b02e84ee6e1a5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxNzM1YjAyYzk1NTEwZjJlMjM2ZWJkNzczYjAyZTg0ZWU2ZTFhNWI=", "commit": {"author": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2019-11-03T09:57:59Z"}, "committer": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2019-11-04T03:27:25Z"}, "message": "librustc_lexer: Make nth_char method private", "tree": {"sha": "ea15df849b11043bd989a640122276dd309a10db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea15df849b11043bd989a640122276dd309a10db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31735b02c95510f2e236ebd773b02e84ee6e1a5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31735b02c95510f2e236ebd773b02e84ee6e1a5b", "html_url": "https://github.com/rust-lang/rust/commit/31735b02c95510f2e236ebd773b02e84ee6e1a5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31735b02c95510f2e236ebd773b02e84ee6e1a5b/comments", "author": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8b8d2a7257b83698f095f51e2f5127176fc8816", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8b8d2a7257b83698f095f51e2f5127176fc8816", "html_url": "https://github.com/rust-lang/rust/commit/e8b8d2a7257b83698f095f51e2f5127176fc8816"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ed0911379c4b3ccf79204a7c97706ba531186ace", "filename": "src/librustc_lexer/src/cursor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/31735b02c95510f2e236ebd773b02e84ee6e1a5b/src%2Flibrustc_lexer%2Fsrc%2Fcursor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31735b02c95510f2e236ebd773b02e84ee6e1a5b/src%2Flibrustc_lexer%2Fsrc%2Fcursor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lexer%2Fsrc%2Fcursor.rs?ref=31735b02c95510f2e236ebd773b02e84ee6e1a5b", "patch": "@@ -41,7 +41,7 @@ impl<'a> Cursor<'a> {\n     /// If requested position doesn't exist, `EOF_CHAR` is returned.\n     /// However, getting `EOF_CHAR` doesn't always mean actual end of file,\n     /// it should be checked with `is_eof` method.\n-    pub(crate) fn nth_char(&self, n: usize) -> char {\n+    fn nth_char(&self, n: usize) -> char {\n         self.chars().nth(n).unwrap_or(EOF_CHAR)\n     }\n "}]}