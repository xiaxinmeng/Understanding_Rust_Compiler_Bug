{"sha": "e4d56b7b5b68cd5cfb4bb65f974af701ab556241", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0ZDU2YjdiNWI2OGNkNWNmYjRiYjY1Zjk3NGFmNzAxYWI1NTYyNDE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-17T22:13:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-17T22:13:30Z"}, "message": "Auto merge of #25523 - nham:remove_E0068, r=alexcrichton\n\nA built-in feature enabling the dereferencing of newtype structs was removed\r\nin PR https://github.com/rust-lang/rust/pull/11188, and this error (E0068) was added at the same time to warn of\r\nits removal. It seems to make sense to remove the error now, given that\r\nthe obsolete feature it is warning about was removed nearly a year and a\r\nhalf ago.", "tree": {"sha": "b8c3a8d864a8bed26feb98f6d49b21792133d208", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8c3a8d864a8bed26feb98f6d49b21792133d208"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4d56b7b5b68cd5cfb4bb65f974af701ab556241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4d56b7b5b68cd5cfb4bb65f974af701ab556241", "html_url": "https://github.com/rust-lang/rust/commit/e4d56b7b5b68cd5cfb4bb65f974af701ab556241", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4d56b7b5b68cd5cfb4bb65f974af701ab556241/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c44801429f6febd12f50c6bf0909fcef0612e70", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c44801429f6febd12f50c6bf0909fcef0612e70", "html_url": "https://github.com/rust-lang/rust/commit/1c44801429f6febd12f50c6bf0909fcef0612e70"}, {"sha": "f47cb0ecfbf396609eb7e0ac893aabc4c122a84c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f47cb0ecfbf396609eb7e0ac893aabc4c122a84c", "html_url": "https://github.com/rust-lang/rust/commit/f47cb0ecfbf396609eb7e0ac893aabc4c122a84c"}], "stats": {"total": 24, "additions": 4, "deletions": 20}, "files": [{"sha": "db39d3c05ed4b3ff7ee9a7d2ba1aa2a46ce3e817", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e4d56b7b5b68cd5cfb4bb65f974af701ab556241/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4d56b7b5b68cd5cfb4bb65f974af701ab556241/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=e4d56b7b5b68cd5cfb4bb65f974af701ab556241", "patch": "@@ -3153,26 +3153,10 @@ fn check_expr_with_unifier<'a, 'tcx, F>(fcx: &FnCtxt<'a, 'tcx>,\n                                                            Some(&**oprnd), oprnd_t, lvalue_pref) {\n                             Some(mt) => mt.ty,\n                             None => {\n-                                let is_newtype = match oprnd_t.sty {\n-                                    ty::ty_struct(did, substs) => {\n-                                        let fields = ty::struct_fields(fcx.tcx(), did, substs);\n-                                        fields.len() == 1\n-                                        && fields[0].name ==\n-                                        token::special_idents::unnamed_field.name\n-                                    }\n-                                    _ => false\n-                                };\n-                                if is_newtype {\n-                                    // This is an obsolete struct deref\n-                                    span_err!(tcx.sess, expr.span, E0068,\n-                                        \"single-field tuple-structs can \\\n-                                         no longer be dereferenced\");\n-                                } else {\n-                                    fcx.type_error_message(expr.span, |actual| {\n-                                        format!(\"type `{}` cannot be \\\n-                                                dereferenced\", actual)\n-                                    }, oprnd_t, None);\n-                                }\n+                                fcx.type_error_message(expr.span, |actual| {\n+                                    format!(\"type `{}` cannot be \\\n+                                            dereferenced\", actual)\n+                                }, oprnd_t, None);\n                                 tcx.types.err\n                             }\n                         }"}]}