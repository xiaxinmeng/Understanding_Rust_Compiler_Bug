{"sha": "a45924cc21d3138ee449d1cf756ca914ce10f52d", "node_id": "C_kwDOAAsO6NoAKGE0NTkyNGNjMjFkMzEzOGVlNDQ5ZDFjZjc1NmNhOTE0Y2UxMGY1MmQ", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-14T15:21:18Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-14T15:22:56Z"}, "message": "Explicitly provide dummy git author name and email\n\nThis avoids the need to tell git beforehand about your name and email", "tree": {"sha": "b3d9f51254c481cfe66329575328d588cedd3afb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3d9f51254c481cfe66329575328d588cedd3afb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a45924cc21d3138ee449d1cf756ca914ce10f52d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a45924cc21d3138ee449d1cf756ca914ce10f52d", "html_url": "https://github.com/rust-lang/rust/commit/a45924cc21d3138ee449d1cf756ca914ce10f52d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a45924cc21d3138ee449d1cf756ca914ce10f52d/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08ba5d4e809ecf39d9f909c28b0a2f38f372155d", "url": "https://api.github.com/repos/rust-lang/rust/commits/08ba5d4e809ecf39d9f909c28b0a2f38f372155d", "html_url": "https://github.com/rust-lang/rust/commit/08ba5d4e809ecf39d9f909c28b0a2f38f372155d"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "d627c2ee09c4ef7555f820cc2a239b73c3133269", "filename": ".cirrus.yml", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a45924cc21d3138ee449d1cf756ca914ce10f52d/.cirrus.yml", "raw_url": "https://github.com/rust-lang/rust/raw/a45924cc21d3138ee449d1cf756ca914ce10f52d/.cirrus.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.cirrus.yml?ref=a45924cc21d3138ee449d1cf756ca914ce10f52d", "patch": "@@ -12,8 +12,6 @@ task:\n     folder: target\n   prepare_script:\n     - . $HOME/.cargo/env\n-    - git config --global user.email \"user@example.com\"\n-    - git config --global user.name \"User\"\n     - ./y.rs prepare\n   test_script:\n     - . $HOME/.cargo/env"}, {"sha": "a6bb12a66a247d66441c390105655e9ff0910978", "filename": ".github/workflows/main.yml", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a45924cc21d3138ee449d1cf756ca914ce10f52d/.github%2Fworkflows%2Fmain.yml", "raw_url": "https://github.com/rust-lang/rust/raw/a45924cc21d3138ee449d1cf756ca914ce10f52d/.github%2Fworkflows%2Fmain.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fmain.yml?ref=a45924cc21d3138ee449d1cf756ca914ce10f52d", "patch": "@@ -90,10 +90,7 @@ jobs:\n         sudo apt-get install -y gcc-s390x-linux-gnu qemu-user\n \n     - name: Prepare dependencies\n-      run: |\n-        git config --global user.email \"user@example.com\"\n-        git config --global user.name \"User\"\n-        ./y.rs prepare\n+      run: ./y.rs prepare\n \n     - name: Build without unstable features\n       env:\n@@ -183,8 +180,6 @@ jobs:\n \n     - name: Prepare dependencies\n       run: |\n-        git config --global user.email \"user@example.com\"\n-        git config --global user.name \"User\"\n         git config --global core.autocrlf false\n         rustc y.rs -o y.exe -g\n         ./y.exe prepare"}, {"sha": "8826f1bd2595a125586bf037e72055ae5646a0a8", "filename": "build_system/prepare.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a45924cc21d3138ee449d1cf756ca914ce10f52d/build_system%2Fprepare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a45924cc21d3138ee449d1cf756ca914ce10f52d/build_system%2Fprepare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fprepare.rs?ref=a45924cc21d3138ee449d1cf756ca914ce10f52d", "patch": "@@ -180,7 +180,16 @@ fn init_git_repo(repo_dir: &Path) {\n     spawn_and_wait(git_add_cmd);\n \n     let mut git_commit_cmd = Command::new(\"git\");\n-    git_commit_cmd.arg(\"commit\").arg(\"-m\").arg(\"Initial commit\").arg(\"-q\").current_dir(repo_dir);\n+    git_commit_cmd\n+        .arg(\"-c\")\n+        .arg(\"user.name=Dummy\")\n+        .arg(\"-c\")\n+        .arg(\"user.email=dummy@example.com\")\n+        .arg(\"commit\")\n+        .arg(\"-m\")\n+        .arg(\"Initial commit\")\n+        .arg(\"-q\")\n+        .current_dir(repo_dir);\n     spawn_and_wait(git_commit_cmd);\n }\n \n@@ -216,7 +225,15 @@ fn apply_patches(dirs: &Dirs, crate_name: &str, target_dir: &Path) {\n             patch.file_name().unwrap()\n         );\n         let mut apply_patch_cmd = Command::new(\"git\");\n-        apply_patch_cmd.arg(\"am\").arg(patch).arg(\"-q\").current_dir(target_dir);\n+        apply_patch_cmd\n+            .arg(\"-c\")\n+            .arg(\"user.name=Dummy\")\n+            .arg(\"-c\")\n+            .arg(\"user.email=dummy@example.com\")\n+            .arg(\"am\")\n+            .arg(patch)\n+            .arg(\"-q\")\n+            .current_dir(target_dir);\n         spawn_and_wait(apply_patch_cmd);\n     }\n }"}]}