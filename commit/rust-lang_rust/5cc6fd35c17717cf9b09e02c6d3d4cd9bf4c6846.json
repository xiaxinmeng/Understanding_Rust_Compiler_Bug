{"sha": "5cc6fd35c17717cf9b09e02c6d3d4cd9bf4c6846", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjYzZmZDM1YzE3NzE3Y2Y5YjA5ZTAyYzZkM2Q0Y2Q5YmY0YzY4NDY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-16T15:22:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-16T15:22:47Z"}, "message": "Rollup merge of #50656 - leodasvacas:fix-impl-trait-in-main-ret, r=nikomatsakis\n\nFix `fn main() -> impl Trait` for non-`Termination` trait\n\nFixes #50595.\n\nThis bug currently affects stable. Why I think we can go for hard error:\n- It will in stable for at most one cycle and there is no legitimate reason to abuse it, nor any known uses in the wild.\n- It only affects `bin` crates (which have a `main`), so there is little practical difference between a hard error or a deny lint, both are a one line fix.\n\nThe fix was to just unshadow a variable. Thanks @nikomatsakis for the mentoring!\n\nr? @nikomatsakis", "tree": {"sha": "cd6f962657cf87f2a11e16c831da61da8d0cc696", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd6f962657cf87f2a11e16c831da61da8d0cc696"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cc6fd35c17717cf9b09e02c6d3d4cd9bf4c6846", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa/EzHCRBK7hj4Ov3rIwAAdHIIADsJ92tG+Z9Cx4mTV7Fz1NAC\ndJx19L+c9K9hoZJyIsmMi+uk3/OxS57XF6yjfMcLfyXLoOwawqKzbb23JKvT3h2H\n+QgsneqUomXvD/xyhPalmc/k1ikNNfdTqcyImiUsXOcgRcCqHa40JeqBxlj3vDAq\ng586/6YRXLR5CgKToeZZweyCwED8/WvwAjt+bnBbhw6T+FIrTZkcXSYZxPOdRMK3\ne3NXmpGUKd+mgPq5TPz4dU8YgP2rIo8CYm/4wGgchrp/HJoYeneU2EbqeQIBz1Hz\nbYLulgDvldQPa/YhbfP+GAbRUH2LUTG9lVUY235qYN3rnmlAemlsVGvNNZd4/50=\n=edge\n-----END PGP SIGNATURE-----\n", "payload": "tree cd6f962657cf87f2a11e16c831da61da8d0cc696\nparent d623f45a4048b061e28a528a1db858bec60b9489\nparent 0582d025e80e4557d7b9e1642ddec3f0188a1aac\nauthor kennytm <kennytm@gmail.com> 1526484167 +0800\ncommitter GitHub <noreply@github.com> 1526484167 +0800\n\nRollup merge of #50656 - leodasvacas:fix-impl-trait-in-main-ret, r=nikomatsakis\n\nFix `fn main() -> impl Trait` for non-`Termination` trait\n\nFixes #50595.\n\nThis bug currently affects stable. Why I think we can go for hard error:\n- It will in stable for at most one cycle and there is no legitimate reason to abuse it, nor any known uses in the wild.\n- It only affects `bin` crates (which have a `main`), so there is little practical difference between a hard error or a deny lint, both are a one line fix.\n\nThe fix was to just unshadow a variable. Thanks @nikomatsakis for the mentoring!\n\nr? @nikomatsakis\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cc6fd35c17717cf9b09e02c6d3d4cd9bf4c6846", "html_url": "https://github.com/rust-lang/rust/commit/5cc6fd35c17717cf9b09e02c6d3d4cd9bf4c6846", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cc6fd35c17717cf9b09e02c6d3d4cd9bf4c6846/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d623f45a4048b061e28a528a1db858bec60b9489", "url": "https://api.github.com/repos/rust-lang/rust/commits/d623f45a4048b061e28a528a1db858bec60b9489", "html_url": "https://github.com/rust-lang/rust/commit/d623f45a4048b061e28a528a1db858bec60b9489"}, {"sha": "0582d025e80e4557d7b9e1642ddec3f0188a1aac", "url": "https://api.github.com/repos/rust-lang/rust/commits/0582d025e80e4557d7b9e1642ddec3f0188a1aac", "html_url": "https://github.com/rust-lang/rust/commit/0582d025e80e4557d7b9e1642ddec3f0188a1aac"}], "stats": {"total": 51, "additions": 44, "deletions": 7}, "files": [{"sha": "877d6b289c95f4f7f7c43ba1c074be8553e5e634", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5cc6fd35c17717cf9b09e02c6d3d4cd9bf4c6846/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cc6fd35c17717cf9b09e02c6d3d4cd9bf4c6846/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=5cc6fd35c17717cf9b09e02c6d3d4cd9bf4c6846", "patch": "@@ -1031,13 +1031,13 @@ fn check_fn<'a, 'gcx, 'tcx>(inherited: &'a Inherited<'a, 'gcx, 'tcx>,\n     let mut fcx = FnCtxt::new(inherited, param_env, body.value.id);\n     *fcx.ps.borrow_mut() = UnsafetyState::function(fn_sig.unsafety, fn_id);\n \n-    let ret_ty = fn_sig.output();\n-    fcx.require_type_is_sized(ret_ty, decl.output.span(), traits::SizedReturnType);\n-    let ret_ty = fcx.instantiate_anon_types_from_return_value(fn_id, &ret_ty);\n-    fcx.ret_coercion = Some(RefCell::new(CoerceMany::new(ret_ty)));\n+    let declared_ret_ty = fn_sig.output();\n+    fcx.require_type_is_sized(declared_ret_ty, decl.output.span(), traits::SizedReturnType);\n+    let revealed_ret_ty = fcx.instantiate_anon_types_from_return_value(fn_id, &declared_ret_ty);\n+    fcx.ret_coercion = Some(RefCell::new(CoerceMany::new(revealed_ret_ty)));\n     fn_sig = fcx.tcx.mk_fn_sig(\n         fn_sig.inputs().iter().cloned(),\n-        ret_ty,\n+        revealed_ret_ty,\n         fn_sig.variadic,\n         fn_sig.unsafety,\n         fn_sig.abi\n@@ -1119,15 +1119,15 @@ fn check_fn<'a, 'gcx, 'tcx>(inherited: &'a Inherited<'a, 'gcx, 'tcx>,\n         actual_return_ty = fcx.next_diverging_ty_var(\n             TypeVariableOrigin::DivergingFn(span));\n     }\n-    fcx.demand_suptype(span, ret_ty, actual_return_ty);\n+    fcx.demand_suptype(span, revealed_ret_ty, actual_return_ty);\n \n     // Check that the main return type implements the termination trait.\n     if let Some(term_id) = fcx.tcx.lang_items().termination() {\n         if let Some((id, _, entry_type)) = *fcx.tcx.sess.entry_fn.borrow() {\n             if id == fn_id {\n                 match entry_type {\n                     config::EntryMain => {\n-                        let substs = fcx.tcx.mk_substs(iter::once(Kind::from(ret_ty)));\n+                        let substs = fcx.tcx.mk_substs(iter::once(Kind::from(declared_ret_ty)));\n                         let trait_ref = ty::TraitRef::new(term_id, substs);\n                         let return_ty_span = decl.output.span();\n                         let cause = traits::ObligationCause::new("}, {"sha": "5bce3f8045eeb9091272e1daffed56a085aeb284", "filename": "src/test/run-pass/rfc-1937-termination-trait/termination-trait-for-impl-termination.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5cc6fd35c17717cf9b09e02c6d3d4cd9bf4c6846/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-impl-termination.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cc6fd35c17717cf9b09e02c6d3d4cd9bf4c6846/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-impl-termination.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-impl-termination.rs?ref=5cc6fd35c17717cf9b09e02c6d3d4cd9bf4c6846", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(termination_trait_lib)]\n+\n+fn main() -> impl std::process::Termination { }"}, {"sha": "92d21864c748344b2ff311da09679226ca4b7883", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-impl-trait.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5cc6fd35c17717cf9b09e02c6d3d4cd9bf4c6846/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-impl-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cc6fd35c17717cf9b09e02c6d3d4cd9bf4c6846/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-impl-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-impl-trait.rs?ref=5cc6fd35c17717cf9b09e02c6d3d4cd9bf4c6846", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Tests that an `impl Trait` that is not `impl Termination` will not work.\n+fn main() -> impl Copy { }\n+//~^ ERROR `main` has invalid return type `impl std::marker::Copy`"}, {"sha": "7485f3066bb2709d4b217aae34f4f5bd7e62ccd7", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-impl-trait.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5cc6fd35c17717cf9b09e02c6d3d4cd9bf4c6846/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-impl-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cc6fd35c17717cf9b09e02c6d3d4cd9bf4c6846/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-impl-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-impl-trait.stderr?ref=5cc6fd35c17717cf9b09e02c6d3d4cd9bf4c6846", "patch": "@@ -0,0 +1,11 @@\n+error[E0277]: `main` has invalid return type `impl std::marker::Copy`\n+  --> $DIR/termination-trait-impl-trait.rs:12:14\n+   |\n+LL | fn main() -> impl Copy { }\n+   |              ^^^^^^^^^ `main` can only return types that implement `std::process::Termination`\n+   |\n+   = help: consider using `()`, or a `Result`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}