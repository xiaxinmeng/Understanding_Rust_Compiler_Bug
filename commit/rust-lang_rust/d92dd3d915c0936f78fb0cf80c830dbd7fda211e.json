{"sha": "d92dd3d915c0936f78fb0cf80c830dbd7fda211e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MmRkM2Q5MTVjMDkzNmY3OGZiMGNmODBjODMwZGJkN2ZkYTIxMWU=", "commit": {"author": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-08-25T20:07:02Z"}, "committer": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-08-25T20:52:33Z"}, "message": "Prevent nested if-else from being put on a single line.\n\nThis is done using a pretty terribad hack, introducing an extra function parameter and some code duplication. Unfortunately, there seem to be few alternatives.", "tree": {"sha": "3d92114dda6df9ebc457cc2d3dab603cb71b100a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d92114dda6df9ebc457cc2d3dab603cb71b100a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d92dd3d915c0936f78fb0cf80c830dbd7fda211e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d92dd3d915c0936f78fb0cf80c830dbd7fda211e", "html_url": "https://github.com/rust-lang/rust/commit/d92dd3d915c0936f78fb0cf80c830dbd7fda211e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d92dd3d915c0936f78fb0cf80c830dbd7fda211e/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7a71250f46e368a411c6708a93b090c129b3c52", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7a71250f46e368a411c6708a93b090c129b3c52", "html_url": "https://github.com/rust-lang/rust/commit/b7a71250f46e368a411c6708a93b090c129b3c52"}], "stats": {"total": 52, "additions": 45, "deletions": 7}, "files": [{"sha": "14659815d7294e4e2143ddd7bc7e561bfaed3f36", "filename": "src/expr.rs", "status": "modified", "additions": 34, "deletions": 6, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/d92dd3d915c0936f78fb0cf80c830dbd7fda211e/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d92dd3d915c0936f78fb0cf80c830dbd7fda211e/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=d92dd3d915c0936f78fb0cf80c830dbd7fda211e", "patch": "@@ -80,7 +80,8 @@ impl Rewrite for ast::Expr {\n                                 else_block.as_ref().map(|e| &**e),\n                                 None,\n                                 width,\n-                                offset)\n+                                offset,\n+                                true)\n             }\n             ast::Expr_::ExprIfLet(ref pat, ref cond, ref if_block, ref else_block) => {\n                 rewrite_if_else(context,\n@@ -89,7 +90,8 @@ impl Rewrite for ast::Expr {\n                                 else_block.as_ref().map(|e| &**e),\n                                 Some(pat),\n                                 width,\n-                                offset)\n+                                offset,\n+                                true)\n             }\n             // We reformat it ourselves because rustc gives us a bad span\n             // for ranges, see rust#27162\n@@ -415,7 +417,8 @@ fn rewrite_if_else(context: &RewriteContext,\n                    else_block_opt: Option<&ast::Expr>,\n                    pat: Option<&ast::Pat>,\n                    width: usize,\n-                   offset: usize)\n+                   offset: usize,\n+                   allow_single_line: bool)\n                    -> Option<String> {\n     // 3 = \"if \", 2 = \" {\"\n     let pat_expr_string = try_opt!(rewrite_pat_expr(context,\n@@ -427,7 +430,7 @@ fn rewrite_if_else(context: &RewriteContext,\n                                                     offset + 3));\n \n     // Try to format if-else on single line.\n-    if context.config.single_line_if_else {\n+    if allow_single_line && context.config.single_line_if_else {\n         let trial = single_line_if_else(context, &pat_expr_string, if_block, else_block_opt, width);\n \n         if trial.is_some() {\n@@ -439,10 +442,34 @@ fn rewrite_if_else(context: &RewriteContext,\n     let mut result = format!(\"if {} {}\", pat_expr_string, if_block_string);\n \n     if let Some(else_block) = else_block_opt {\n-        let else_block_string = try_opt!(else_block.rewrite(context, width, offset));\n+        let rewrite = match else_block.node {\n+            // If the else expression is another if-else expression, prevent it\n+            // from being formatted on a single line.\n+            ast::Expr_::ExprIfLet(ref pat, ref cond, ref if_block, ref else_block) => {\n+                rewrite_if_else(context,\n+                                cond,\n+                                if_block,\n+                                else_block.as_ref().map(|e| &**e),\n+                                Some(pat),\n+                                width,\n+                                offset,\n+                                false)\n+            }\n+            ast::Expr_::ExprIf(ref cond, ref if_block, ref else_block) => {\n+                rewrite_if_else(context,\n+                                cond,\n+                                if_block,\n+                                else_block.as_ref().map(|e| &**e),\n+                                None,\n+                                width,\n+                                offset,\n+                                false)\n+            }\n+            _ => else_block.rewrite(context, width, offset),\n+        };\n \n         result.push_str(\" else \");\n-        result.push_str(&else_block_string);\n+        result.push_str(&&try_opt!(rewrite));\n     }\n \n     Some(result)\n@@ -491,6 +518,7 @@ fn is_simple_block(block: &ast::Block, codemap: &CodeMap) -> bool {\n \n     let snippet = codemap.span_to_snippet(block.span).unwrap();\n \n+    // FIXME: fails when either // or /* is contained in a string literal.\n     !snippet.contains(\"//\") && !snippet.contains(\"/*\")\n }\n "}, {"sha": "42629ab8e37f3f23fecff129ae5dbccfdb641726", "filename": "tests/source/single-line-if-else.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d92dd3d915c0936f78fb0cf80c830dbd7fda211e/tests%2Fsource%2Fsingle-line-if-else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d92dd3d915c0936f78fb0cf80c830dbd7fda211e/tests%2Fsource%2Fsingle-line-if-else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fsingle-line-if-else.rs?ref=d92dd3d915c0936f78fb0cf80c830dbd7fda211e", "patch": "@@ -26,6 +26,10 @@ fn main() {\n         10\n     };\n \n+    let d   = if  let  Some(val)  =  turbo \n+    { \"cool\" } else {\n+     \"beans\" };\n+\n     if cond() { statement(); } else { other_statement(); }\n \n     if true  {"}, {"sha": "27b6d773da5ff848a067ecfbecce07ad8ea4f5aa", "filename": "tests/target/single-line-if-else.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d92dd3d915c0936f78fb0cf80c830dbd7fda211e/tests%2Ftarget%2Fsingle-line-if-else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d92dd3d915c0936f78fb0cf80c830dbd7fda211e/tests%2Ftarget%2Fsingle-line-if-else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fsingle-line-if-else.rs?ref=d92dd3d915c0936f78fb0cf80c830dbd7fda211e", "patch": "@@ -7,7 +7,11 @@ fn main() {\n \n     let a = if x {\n         1\n-    } else if y { 2 } else { 3 };\n+    } else if y {\n+        2\n+    } else {\n+        3\n+    };\n \n     let b = if cond() {\n         5\n@@ -24,6 +28,8 @@ fn main() {\n         10\n     };\n \n+    let d = if let Some(val) = turbo { \"cool\" } else { \"beans\" };\n+\n     if cond() {\n         statement();\n     } else {"}]}