{"sha": "ddcca79d25fffd6604fba593b1ca642a9dfa5727", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkY2NhNzlkMjVmZmZkNjYwNGZiYTU5M2IxY2E2NDJhOWRmYTU3Mjc=", "commit": {"author": {"name": "Sean Griffin", "email": "sean@seantheprogrammer.com", "date": "2017-03-03T14:09:09Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-04-15T02:04:53Z"}, "message": "Update with response to feedback", "tree": {"sha": "ee223d13ed2c7d27560a13b3561e235e447d59fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee223d13ed2c7d27560a13b3561e235e447d59fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddcca79d25fffd6604fba593b1ca642a9dfa5727", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddcca79d25fffd6604fba593b1ca642a9dfa5727", "html_url": "https://github.com/rust-lang/rust/commit/ddcca79d25fffd6604fba593b1ca642a9dfa5727", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddcca79d25fffd6604fba593b1ca642a9dfa5727/comments", "author": {"login": "sgrif", "id": 1529387, "node_id": "MDQ6VXNlcjE1MjkzODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgrif", "html_url": "https://github.com/sgrif", "followers_url": "https://api.github.com/users/sgrif/followers", "following_url": "https://api.github.com/users/sgrif/following{/other_user}", "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions", "organizations_url": "https://api.github.com/users/sgrif/orgs", "repos_url": "https://api.github.com/users/sgrif/repos", "events_url": "https://api.github.com/users/sgrif/events{/privacy}", "received_events_url": "https://api.github.com/users/sgrif/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4aca54001865435c799757c6fcb8595c23ff6c77", "url": "https://api.github.com/repos/rust-lang/rust/commits/4aca54001865435c799757c6fcb8595c23ff6c77", "html_url": "https://github.com/rust-lang/rust/commit/4aca54001865435c799757c6fcb8595c23ff6c77"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "e9bcb80cff25e6b9d363ec81e7eefe429e876e0a", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ddcca79d25fffd6604fba593b1ca642a9dfa5727/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddcca79d25fffd6604fba593b1ca642a9dfa5727/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=ddcca79d25fffd6604fba593b1ca642a9dfa5727", "patch": "@@ -2227,7 +2227,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         queries::impl_trait_ref::get(self, DUMMY_SP, id)\n     }\n \n-    /// Returns true if the impl is positive and is for a triat which contains\n+    /// Returns true if the impl is positive and is for a trait which contains\n     /// no items\n     pub fn impl_always_allowed_to_overlap(self, def_id: DefId) -> bool {\n         self.trait_impl_polarity(def_id) == hir::ImplPolarity::Positive"}, {"sha": "b0b1930d274d69dd2b15ff93674b5ae1971e7eed", "filename": "src/test/run-pass/overlap-permitted-for-marker-traits.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ddcca79d25fffd6604fba593b1ca642a9dfa5727/src%2Ftest%2Frun-pass%2Foverlap-permitted-for-marker-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddcca79d25fffd6604fba593b1ca642a9dfa5727/src%2Ftest%2Frun-pass%2Foverlap-permitted-for-marker-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foverlap-permitted-for-marker-traits.rs?ref=ddcca79d25fffd6604fba593b1ca642a9dfa5727", "patch": "@@ -19,5 +19,6 @@ fn foo<T: MyMarker>(t: T) -> T {\n \n fn main() {\n     assert_eq!(1, foo(1));\n+    assert_eq!(2.0, foo(2.0));\n     assert_eq!(vec![1], foo(vec![1]));\n }"}]}