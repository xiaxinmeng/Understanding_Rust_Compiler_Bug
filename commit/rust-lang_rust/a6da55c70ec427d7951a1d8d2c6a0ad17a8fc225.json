{"sha": "a6da55c70ec427d7951a1d8d2c6a0ad17a8fc225", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZGE1NWM3MGVjNDI3ZDc5NTFhMWQ4ZDJjNmEwYWQxN2E4ZmMyMjU=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-12T12:33:30Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-12T12:33:30Z"}, "message": "Silence non_fmt_panic from external macros.", "tree": {"sha": "f3255d967ca70b7019ed13d513676e1177a2f125", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3255d967ca70b7019ed13d513676e1177a2f125"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6da55c70ec427d7951a1d8d2c6a0ad17a8fc225", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6da55c70ec427d7951a1d8d2c6a0ad17a8fc225", "html_url": "https://github.com/rust-lang/rust/commit/a6da55c70ec427d7951a1d8d2c6a0ad17a8fc225", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6da55c70ec427d7951a1d8d2c6a0ad17a8fc225/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb2226b1f174f3cc644275ef8663be6295a7f704", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb2226b1f174f3cc644275ef8663be6295a7f704", "html_url": "https://github.com/rust-lang/rust/commit/eb2226b1f174f3cc644275ef8663be6295a7f704"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "ec53625f10525014264c53f0dc895ec7c858aa19", "filename": "compiler/rustc_lint/src/non_fmt_panic.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a6da55c70ec427d7951a1d8d2c6a0ad17a8fc225/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6da55c70ec427d7951a1d8d2c6a0ad17a8fc225/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs?ref=a6da55c70ec427d7951a1d8d2c6a0ad17a8fc225", "patch": "@@ -2,6 +2,7 @@ use crate::{LateContext, LateLintPass, LintContext};\n use rustc_ast as ast;\n use rustc_errors::{pluralize, Applicability};\n use rustc_hir as hir;\n+use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty;\n use rustc_parse_format::{ParseMode, Parser, Piece};\n use rustc_session::lint::FutureIncompatibilityReason;\n@@ -75,6 +76,11 @@ fn check_panic<'tcx>(cx: &LateContext<'tcx>, f: &'tcx hir::Expr<'tcx>, arg: &'tc\n \n     let (span, panic, symbol_str) = panic_call(cx, f);\n \n+    if in_external_macro(cx.sess(), span) {\n+        // Nothing that can be done about it in the current crate.\n+        return;\n+    }\n+\n     // Find the span of the argument to `panic!()`, before expansion in the\n     // case of `panic!(some_macro!())`.\n     // We don't use source_callsite(), because this `panic!(..)` might itself\n@@ -152,6 +158,13 @@ fn check_panic_str<'tcx>(\n         return;\n     }\n \n+    let (span, _, _) = panic_call(cx, f);\n+\n+    if in_external_macro(cx.sess(), span) && in_external_macro(cx.sess(), arg.span) {\n+        // Nothing that can be done about it in the current crate.\n+        return;\n+    }\n+\n     let fmt_span = arg.span.source_callsite();\n \n     let (snippet, style) = match cx.sess().parse_sess.source_map().span_to_snippet(fmt_span) {\n@@ -167,8 +180,6 @@ fn check_panic_str<'tcx>(\n         Parser::new(fmt.as_ref(), style, snippet.clone(), false, ParseMode::Format);\n     let n_arguments = (&mut fmt_parser).filter(|a| matches!(a, Piece::NextArgument(_))).count();\n \n-    let (span, _, _) = panic_call(cx, f);\n-\n     if n_arguments > 0 && fmt_parser.errors.is_empty() {\n         let arg_spans: Vec<_> = match &fmt_parser.arg_places[..] {\n             [] => vec![fmt_span],"}, {"sha": "35be93b0590326121fad5b9b18aa71d5c8b157f2", "filename": "src/test/ui/auxiliary/fancy-panic.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6da55c70ec427d7951a1d8d2c6a0ad17a8fc225/src%2Ftest%2Fui%2Fauxiliary%2Ffancy-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6da55c70ec427d7951a1d8d2c6a0ad17a8fc225/src%2Ftest%2Fui%2Fauxiliary%2Ffancy-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauxiliary%2Ffancy-panic.rs?ref=a6da55c70ec427d7951a1d8d2c6a0ad17a8fc225", "patch": "@@ -1,5 +1,8 @@\n #[macro_export]\n macro_rules! fancy_panic {\n+    () => {\n+        panic!(\"{}\");\n+    };\n     ($msg:expr) => {\n         panic!($msg)\n     };"}, {"sha": "0de424ce279f3e4cb6cdbc33ebbb5bcc43c66664", "filename": "src/test/ui/non-fmt-panic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a6da55c70ec427d7951a1d8d2c6a0ad17a8fc225/src%2Ftest%2Fui%2Fnon-fmt-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6da55c70ec427d7951a1d8d2c6a0ad17a8fc225/src%2Ftest%2Fui%2Fnon-fmt-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon-fmt-panic.rs?ref=a6da55c70ec427d7951a1d8d2c6a0ad17a8fc225", "patch": "@@ -26,8 +26,8 @@ fn main() {\n     fancy_panic::fancy_panic!(\"test {} 123\");\n     //~^ WARN panic message contains an unused formatting placeholder\n \n-    fancy_panic::fancy_panic!(S);\n-    //~^ WARN panic message is not a string literal\n+    fancy_panic::fancy_panic!(); // OK\n+    fancy_panic::fancy_panic!(S); // OK\n \n     macro_rules! a {\n         () => { 123 };"}, {"sha": "4b18f5546b9b80121bfbe4bffeece9792f105b93", "filename": "src/test/ui/non-fmt-panic.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a6da55c70ec427d7951a1d8d2c6a0ad17a8fc225/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6da55c70ec427d7951a1d8d2c6a0ad17a8fc225/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr?ref=a6da55c70ec427d7951a1d8d2c6a0ad17a8fc225", "patch": "@@ -180,15 +180,6 @@ LL |     fancy_panic::fancy_panic!(\"test {} 123\");\n    |\n    = note: this message is not used as a format string when given without arguments, but will be in Rust 2021\n \n-warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:29:31\n-   |\n-LL |     fancy_panic::fancy_panic!(S);\n-   |                               ^\n-   |\n-   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n-   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n-\n warning: panic message is not a string literal\n   --> $DIR/non-fmt-panic.rs:36:12\n    |\n@@ -285,5 +276,5 @@ help: or use std::panic::panic_any instead\n LL |     std::panic::panic_any(123);\n    |     ~~~~~~~~~~~~~~~~~~~~~~   ~\n \n-warning: 20 warnings emitted\n+warning: 19 warnings emitted\n "}]}