{"sha": "2934fd0a48026dc8e4bdf496158f1ac337cdb5b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MzRmZDBhNDgwMjZkYzhlNGJkZjQ5NjE1OGYxYWMzMzdjZGI1YjY=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-16T22:41:13Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-24T02:53:44Z"}, "message": "Time how long it takes to render HTML", "tree": {"sha": "87426f468c5ab6f611ba0b9c3fe7ba8e3052180b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87426f468c5ab6f611ba0b9c3fe7ba8e3052180b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2934fd0a48026dc8e4bdf496158f1ac337cdb5b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2934fd0a48026dc8e4bdf496158f1ac337cdb5b6", "html_url": "https://github.com/rust-lang/rust/commit/2934fd0a48026dc8e4bdf496158f1ac337cdb5b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2934fd0a48026dc8e4bdf496158f1ac337cdb5b6/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d21378488740097dd6c6759b3803c21cae733ee6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d21378488740097dd6c6759b3803c21cae733ee6", "html_url": "https://github.com/rust-lang/rust/commit/d21378488740097dd6c6759b3803c21cae733ee6"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "79b7097049e01b5df3d27187d9252dacfbb815c2", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2934fd0a48026dc8e4bdf496158f1ac337cdb5b6/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2934fd0a48026dc8e4bdf496158f1ac337cdb5b6/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=2934fd0a48026dc8e4bdf496158f1ac337cdb5b6", "patch": "@@ -280,7 +280,9 @@ where\n     (lint_opts, lint_caps)\n }\n \n-pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOptions) {\n+pub fn run_core(\n+    options: RustdocOptions,\n+) -> (clean::Crate, RenderInfo, RenderOptions, Lrc<Session>) {\n     // Parse, resolve, and typecheck the given crate.\n \n     let RustdocOptions {\n@@ -457,7 +459,7 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n \n             let mut global_ctxt = abort_on_err(queries.global_ctxt(), sess).take();\n \n-            sess.time(\"run_global_ctxt\", || {\n+            let (krate, render_info, opts) = sess.time(\"run_global_ctxt\", || {\n                 global_ctxt.enter(|tcx| {\n                     run_global_ctxt(\n                         tcx,\n@@ -468,7 +470,8 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n                         output_format,\n                     )\n                 })\n-            })\n+            });\n+            (krate, render_info, opts, Lrc::clone(sess))\n         })\n     })\n }"}, {"sha": "35e4245c021042b121486712d5b20cfb9e420407", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2934fd0a48026dc8e4bdf496158f1ac337cdb5b6/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2934fd0a48026dc8e4bdf496158f1ac337cdb5b6/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=2934fd0a48026dc8e4bdf496158f1ac337cdb5b6", "patch": "@@ -501,7 +501,7 @@ fn main_options(options: config::Options) -> MainResult {\n     let crate_name = options.crate_name.clone();\n     let crate_version = options.crate_version.clone();\n     let output_format = options.output_format;\n-    let (mut krate, renderinfo, renderopts) = core::run_core(options);\n+    let (mut krate, renderinfo, renderopts, sess) = core::run_core(options);\n \n     info!(\"finished with rustc\");\n \n@@ -524,11 +524,11 @@ fn main_options(options: config::Options) -> MainResult {\n     let (error_format, edition, debugging_options) = diag_opts;\n     let diag = core::new_handler(error_format, None, &debugging_options);\n     match output_format {\n-        None | Some(config::OutputFormat::Html) => {\n+        None | Some(config::OutputFormat::Html) => sess.time(\"render html\", || {\n             run_renderer::<html::render::Context>(krate, renderopts, renderinfo, &diag, edition)\n-        }\n-        Some(config::OutputFormat::Json) => {\n+        }),\n+        Some(config::OutputFormat::Json) => sess.time(\"render json\", || {\n             run_renderer::<json::JsonRenderer>(krate, renderopts, renderinfo, &diag, edition)\n-        }\n+        }),\n     }\n }"}]}