{"sha": "bc2c3dca559fc9309dbaa3d0f3072d4d627a90f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjMmMzZGNhNTU5ZmM5MzA5ZGJhYTNkMGYzMDcyZDRkNjI3YTkwZjg=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-05-24T22:47:28Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-05-24T22:47:28Z"}, "message": "Add some backticks to the `rustc_middle::ty::adjustment::Adjustment` docs\n\nA few `[i32]`s are getting picked up as intra-doc links, rather than showing as slices, making the sentence quite confusing.", "tree": {"sha": "c93013355168cd9723685249b1642ef49291ff92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c93013355168cd9723685249b1642ef49291ff92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc2c3dca559fc9309dbaa3d0f3072d4d627a90f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc2c3dca559fc9309dbaa3d0f3072d4d627a90f8", "html_url": "https://github.com/rust-lang/rust/commit/bc2c3dca559fc9309dbaa3d0f3072d4d627a90f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc2c3dca559fc9309dbaa3d0f3072d4d627a90f8/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bcaeb0bf9e1c29d18abc32928fd2f23d1bed0bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bcaeb0bf9e1c29d18abc32928fd2f23d1bed0bd", "html_url": "https://github.com/rust-lang/rust/commit/3bcaeb0bf9e1c29d18abc32928fd2f23d1bed0bd"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "8f648b211314533fb94f8913e1606f99c5b96978", "filename": "compiler/rustc_middle/src/ty/adjustment.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bc2c3dca559fc9309dbaa3d0f3072d4d627a90f8/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadjustment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc2c3dca559fc9309dbaa3d0f3072d4d627a90f8/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadjustment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadjustment.rs?ref=bc2c3dca559fc9309dbaa3d0f3072d4d627a90f8", "patch": "@@ -47,7 +47,7 @@ pub enum PointerCast {\n /// 1. The simplest cases are where a pointer is not adjusted fat vs thin.\n ///    Here the pointer will be dereferenced N times (where a dereference can\n ///    happen to raw or borrowed pointers or any smart pointer which implements\n-///    Deref, including Box<_>). The types of dereferences is given by\n+///    `Deref`, including `Box<_>`). The types of dereferences is given by\n ///    `autoderefs`. It can then be auto-referenced zero or one times, indicated\n ///    by `autoref`, to either a raw or borrowed pointer. In these cases unsize is\n ///    `false`.\n@@ -56,7 +56,7 @@ pub enum PointerCast {\n ///    with a thin pointer, deref a number of times, unsize the underlying data,\n ///    then autoref. The 'unsize' phase may change a fixed length array to a\n ///    dynamically sized one, a concrete object to a trait object, or statically\n-///    sized struct to a dynamically sized one. E.g., &[i32; 4] -> &[i32] is\n+///    sized struct to a dynamically sized one. E.g., `&[i32; 4]` -> `&[i32]` is\n ///    represented by:\n ///\n ///    ```\n@@ -66,7 +66,7 @@ pub enum PointerCast {\n ///    ```\n ///\n ///    Note that for a struct, the 'deep' unsizing of the struct is not recorded.\n-///    E.g., `struct Foo<T> { x: T }` we can coerce &Foo<[i32; 4]> to &Foo<[i32]>\n+///    E.g., `struct Foo<T> { x: T }` we can coerce `&Foo<[i32; 4]>` to `&Foo<[i32]>`\n ///    The autoderef and -ref are the same as in the above example, but the type\n ///    stored in `unsize` is `Foo<[i32]>`, we don't store any further detail about\n ///    the underlying conversions from `[i32; 4]` to `[i32]`.\n@@ -75,8 +75,8 @@ pub enum PointerCast {\n ///    that case, we have the pointer we need coming in, so there are no\n ///    autoderefs, and no autoref. Instead we just do the `Unsize` transformation.\n ///    At some point, of course, `Box` should move out of the compiler, in which\n-///    case this is analogous to transforming a struct. E.g., Box<[i32; 4]> ->\n-///    Box<[i32]> is an `Adjust::Unsize` with the target `Box<[i32]>`.\n+///    case this is analogous to transforming a struct. E.g., `Box<[i32; 4]>` ->\n+///    `Box<[i32]>` is an `Adjust::Unsize` with the target `Box<[i32]>`.\n #[derive(Clone, TyEncodable, TyDecodable, HashStable, TypeFoldable)]\n pub struct Adjustment<'tcx> {\n     pub kind: Adjust<'tcx>,"}]}