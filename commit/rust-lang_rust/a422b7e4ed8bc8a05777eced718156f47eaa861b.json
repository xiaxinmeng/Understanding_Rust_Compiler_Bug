{"sha": "a422b7e4ed8bc8a05777eced718156f47eaa861b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MjJiN2U0ZWQ4YmM4YTA1Nzc3ZWNlZDcxODE1NmY0N2VhYTg2MWI=", "commit": {"author": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2016-04-21T21:07:51Z"}, "committer": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2016-04-25T22:34:19Z"}, "message": "some Python nits and fixes", "tree": {"sha": "1df0c728b7d7b4353de1bb900829983025d3f4af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1df0c728b7d7b4353de1bb900829983025d3f4af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a422b7e4ed8bc8a05777eced718156f47eaa861b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a422b7e4ed8bc8a05777eced718156f47eaa861b", "html_url": "https://github.com/rust-lang/rust/commit/a422b7e4ed8bc8a05777eced718156f47eaa861b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a422b7e4ed8bc8a05777eced718156f47eaa861b/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a264f5b7e8df34c4bf7f10d0c6c7f9ab805ee672", "url": "https://api.github.com/repos/rust-lang/rust/commits/a264f5b7e8df34c4bf7f10d0c6c7f9ab805ee672", "html_url": "https://github.com/rust-lang/rust/commit/a264f5b7e8df34c4bf7f10d0c6c7f9ab805ee672"}], "stats": {"total": 34, "additions": 15, "deletions": 19}, "files": [{"sha": "73022b99a8f6d299e3bb74b1e201bb923f420b90", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a422b7e4ed8bc8a05777eced718156f47eaa861b/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/a422b7e4ed8bc8a05777eced718156f47eaa861b/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=a422b7e4ed8bc8a05777eced718156f47eaa861b", "patch": "@@ -81,14 +81,15 @@ def run(args, verbose=False):\n \n def stage0_data(rust_root):\n     nightlies = os.path.join(rust_root, \"src/stage0.txt\")\n+    data = {}\n     with open(nightlies, 'r') as nightlies:\n-        data = {}\n-        for line in nightlies.read().split(\"\\n\"):\n+        for line in nightlies:\n+            line = line.rstrip()  # Strip newline character, '\\n'\n             if line.startswith(\"#\") or line == '':\n                 continue\n             a, b = line.split(\": \", 1)\n             data[a] = b\n-        return data\n+    return data\n \n class RustBuild:\n     def download_stage0(self):\n@@ -219,7 +220,7 @@ def build_bootstrap(self):\n                  env)\n \n     def run(self, args, env):\n-        proc = subprocess.Popen(args, env = env)\n+        proc = subprocess.Popen(args, env=env)\n         ret = proc.wait()\n         if ret != 0:\n             sys.exit(ret)\n@@ -234,20 +235,19 @@ def build_triple(self):\n         try:\n             ostype = subprocess.check_output(['uname', '-s']).strip()\n             cputype = subprocess.check_output(['uname', '-m']).strip()\n-        except FileNotFoundError:\n+        except subprocess.CalledProcessError:\n             if sys.platform == 'win32':\n                 return 'x86_64-pc-windows-msvc'\n-            else:\n-                err = \"uname not found\"\n-                if self.verbose:\n-                    raise Exception(err)\n-                sys.exit(err)\n+            err = \"uname not found\"\n+            if self.verbose:\n+                raise Exception(err)\n+            sys.exit(err)\n \n         # Darwin's `uname -s` lies and always returns i386. We have to use\n         # sysctl instead.\n         if ostype == 'Darwin' and cputype == 'i686':\n             sysctl = subprocess.check_output(['sysctl', 'hw.optional.x86_64'])\n-            if sysctl.contains(': 1'):\n+            if ': 1' in sysctl:\n                 cputype = 'x86_64'\n \n         # The goal here is to come up with the same triple as LLVM would,"}, {"sha": "6f3837d3b5367201dfd65e83b57fe23ad0e84ecd", "filename": "src/etc/get-stage0.py", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a422b7e4ed8bc8a05777eced718156f47eaa861b/src%2Fetc%2Fget-stage0.py", "raw_url": "https://github.com/rust-lang/rust/raw/a422b7e4ed8bc8a05777eced718156f47eaa861b/src%2Fetc%2Fget-stage0.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fget-stage0.py?ref=a422b7e4ed8bc8a05777eced718156f47eaa861b", "patch": "@@ -11,18 +11,15 @@\n # except according to those terms.\n \n import os\n-import shutil\n import sys\n-import tarfile\n \n path = os.path.abspath(os.path.join(os.path.dirname(__file__), \"../bootstrap\"))\n sys.path.append(path)\n \n import bootstrap\n \n-def main(argv):\n+def main(triple):\n     src_root = os.path.abspath(os.path.join(os.path.dirname(__file__), \"../..\"))\n-    triple = argv[1]\n     data = bootstrap.stage0_data(src_root)\n \n     channel, date = data['rustc'].split('-', 1)\n@@ -31,9 +28,8 @@ def main(argv):\n     if not os.path.exists(dl_dir):\n         os.makedirs(dl_dir)\n \n-    filename_base = 'rustc-' + channel + '-' + triple\n-    filename = filename_base + '.tar.gz'\n-    url = 'https://static.rust-lang.org/dist/' + date + '/' + filename\n+    filename = 'rustc-{}-{}.tar.gz'.format(channel, triple)\n+    url = 'https://static.rust-lang.org/dist/{}/{}'.format(date, filename)\n     dst = dl_dir + '/' + filename\n     if not os.path.exists(dst):\n         bootstrap.get(url, dst)\n@@ -48,4 +44,4 @@ def main(argv):\n     bootstrap.unpack(dst, stage0_dst, match='rustc', verbose=True)\n \n if __name__ == '__main__':\n-    main(sys.argv)\n+    main(sys.argv[1])"}]}