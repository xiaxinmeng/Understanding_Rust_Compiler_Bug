{"sha": "7789cbf700f5633b895ced21f7ffd2f33661542e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ODljYmY3MDBmNTYzM2I4OTVjZWQyMWY3ZmZkMmYzMzY2MTU0MmU=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-07-19T20:49:17Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-07-20T03:08:39Z"}, "message": "Avoid cloning Place in assign #2", "tree": {"sha": "8f90193fe10a81b2704081ff0b73c6fd399c4a2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f90193fe10a81b2704081ff0b73c6fd399c4a2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7789cbf700f5633b895ced21f7ffd2f33661542e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7789cbf700f5633b895ced21f7ffd2f33661542e", "html_url": "https://github.com/rust-lang/rust/commit/7789cbf700f5633b895ced21f7ffd2f33661542e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7789cbf700f5633b895ced21f7ffd2f33661542e/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b49003289366411f7d5e0359af2c3de3b5b850e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b49003289366411f7d5e0359af2c3de3b5b850e7", "html_url": "https://github.com/rust-lang/rust/commit/b49003289366411f7d5e0359af2c3de3b5b850e7"}], "stats": {"total": 10, "additions": 2, "deletions": 8}, "files": [{"sha": "a05ac89921de98f06d72ad97824e8af37959eab0", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7789cbf700f5633b895ced21f7ffd2f33661542e/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7789cbf700f5633b895ced21f7ffd2f33661542e/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=7789cbf700f5633b895ced21f7ffd2f33661542e", "patch": "@@ -877,14 +877,8 @@ impl<'a, 'tcx> Checker<'a, 'tcx> {\n                 (&PlaceBase::Static(box Static{ kind: _, .. }), None) => {\n                     // Catch more errors in the destination. `visit_place` also checks that we\n                     // do not try to access statics from constants or try to mutate statics\n-                    self.visit_place(\n-                        &Place {\n-                            base: dest.base.clone(),\n-                            projection: dest_projection.clone(),\n-                        },\n-                        PlaceContext::MutatingUse(MutatingUseContext::Store),\n-                        location\n-                    );\n+                    let context = PlaceContext::MutatingUse(MutatingUseContext::Store);\n+                    self.visit_place_base(&dest.base, context, location);\n                     return;\n                 }\n             }"}]}