{"sha": "c6b7f453088df08294372474085765e7c6361b9f", "node_id": "C_kwDOAAsO6NoAKGM2YjdmNDUzMDg4ZGYwODI5NDM3MjQ3NDA4NTc2NWU3YzYzNjFiOWY", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-09-01T13:04:55Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-09-01T13:04:55Z"}, "message": "Don't run `rust-2021-compatibility` lints, our crates are already on 2021", "tree": {"sha": "93ffa7d854f3f3a6f97b579869cda0e48d52167d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93ffa7d854f3f3a6f97b579869cda0e48d52167d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6b7f453088df08294372474085765e7c6361b9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6b7f453088df08294372474085765e7c6361b9f", "html_url": "https://github.com/rust-lang/rust/commit/c6b7f453088df08294372474085765e7c6361b9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6b7f453088df08294372474085765e7c6361b9f/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8110119fef9dbbd5b68e27245e84900b5faf0a3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8110119fef9dbbd5b68e27245e84900b5faf0a3e", "html_url": "https://github.com/rust-lang/rust/commit/8110119fef9dbbd5b68e27245e84900b5faf0a3e"}], "stats": {"total": 156, "additions": 78, "deletions": 78}, "files": [{"sha": "1563ee0b143851435a28597c8c088621e5c4a59b", "filename": ".github/workflows/ci.yaml", "status": "modified", "additions": 78, "deletions": 78, "changes": 156, "blob_url": "https://github.com/rust-lang/rust/blob/c6b7f453088df08294372474085765e7c6361b9f/.github%2Fworkflows%2Fci.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/c6b7f453088df08294372474085765e7c6361b9f/.github%2Fworkflows%2Fci.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yaml?ref=c6b7f453088df08294372474085765e7c6361b9f", "patch": "@@ -6,15 +6,15 @@ on:\n   pull_request:\n   push:\n     branches:\n-    - auto\n-    - try\n+      - auto\n+      - try\n \n env:\n   CARGO_INCREMENTAL: 0\n   CARGO_NET_RETRY: 10\n   CI: 1\n   RUST_BACKTRACE: short\n-  RUSTFLAGS: \"-D warnings -W unreachable-pub -W rust-2021-compatibility\"\n+  RUSTFLAGS: \"-D warnings -W unreachable-pub -W bare-trait-objects\"\n   RUSTUP_MAX_RETRIES: 10\n \n jobs:\n@@ -31,25 +31,25 @@ jobs:\n         os: [ubuntu-latest, windows-latest, macos-latest]\n \n     steps:\n-    - name: Checkout repository\n-      uses: actions/checkout@v3\n-      with:\n-        ref: ${{ github.event.pull_request.head.sha }}\n-        fetch-depth: 20\n+      - name: Checkout repository\n+        uses: actions/checkout@v3\n+        with:\n+          ref: ${{ github.event.pull_request.head.sha }}\n+          fetch-depth: 20\n \n-    - name: Install Rust toolchain\n-      run: |\n-        rustup update --no-self-update stable\n-        rustup component add rustfmt rust-src\n+      - name: Install Rust toolchain\n+        run: |\n+          rustup update --no-self-update stable\n+          rustup component add rustfmt rust-src\n \n-    - name: Cache Dependencies\n-      uses: Swatinem/rust-cache@ce325b60658c1b38465c06cc965b79baf32c1e72\n+      - name: Cache Dependencies\n+        uses: Swatinem/rust-cache@ce325b60658c1b38465c06cc965b79baf32c1e72\n \n-    - name: Compile\n-      run: cargo test --no-run --locked\n+      - name: Compile\n+        run: cargo test --no-run --locked\n \n-    - name: Test\n-      run: cargo test -- --nocapture --quiet\n+      - name: Test\n+        run: cargo test -- --nocapture --quiet\n \n   # Weird targets to catch non-portable code\n   rust-cross:\n@@ -64,25 +64,25 @@ jobs:\n       targets_ide: \"wasm32-unknown-unknown\"\n \n     steps:\n-    - name: Checkout repository\n-      uses: actions/checkout@v3\n-\n-    - name: Install Rust toolchain\n-      run: |\n-        rustup update --no-self-update stable\n-        rustup target add ${{ env.targets }} ${{ env.targets_ide }}\n-\n-    - name: Cache Dependencies\n-      uses: Swatinem/rust-cache@ce325b60658c1b38465c06cc965b79baf32c1e72\n-\n-    - name: Check\n-      run: |\n-        for target in ${{ env.targets }}; do\n-          cargo check --target=$target --all-targets\n-        done\n-        for target in ${{ env.targets_ide }}; do\n-          cargo check -p ide --target=$target --all-targets\n-        done\n+      - name: Checkout repository\n+        uses: actions/checkout@v3\n+\n+      - name: Install Rust toolchain\n+        run: |\n+          rustup update --no-self-update stable\n+          rustup target add ${{ env.targets }} ${{ env.targets_ide }}\n+\n+      - name: Cache Dependencies\n+        uses: Swatinem/rust-cache@ce325b60658c1b38465c06cc965b79baf32c1e72\n+\n+      - name: Check\n+        run: |\n+          for target in ${{ env.targets }}; do\n+            cargo check --target=$target --all-targets\n+          done\n+          for target in ${{ env.targets_ide }}; do\n+            cargo check -p ide --target=$target --all-targets\n+          done\n \n   typescript:\n     if: github.repository == 'rust-lang/rust-analyzer'\n@@ -95,47 +95,47 @@ jobs:\n     runs-on: ${{ matrix.os }}\n \n     steps:\n-    - name: Checkout repository\n-      uses: actions/checkout@v3\n-\n-    - name: Install Nodejs\n-      uses: actions/setup-node@v1\n-      with:\n-        node-version: 16.x\n-\n-    - name: Install xvfb\n-      if: matrix.os == 'ubuntu-latest'\n-      run: sudo apt-get install -y xvfb\n-\n-    - run: npm ci\n-      working-directory: ./editors/code\n-\n-#    - run: npm audit || { sleep 10 && npm audit; } || { sleep 30 && npm audit; }\n-#      if: runner.os == 'Linux'\n-#      working-directory: ./editors/code\n-\n-    - run: npm run lint\n-      working-directory: ./editors/code\n-\n-    - name: Run VS Code tests (Linux)\n-      if: matrix.os == 'ubuntu-latest'\n-      env:\n-        VSCODE_CLI: 1\n-      run: xvfb-run npm test\n-      working-directory: ./editors/code\n-\n-    - name: Run VS Code tests (Windows)\n-      if: matrix.os == 'windows-latest'\n-      env:\n-        VSCODE_CLI: 1\n-      run: npm test\n-      working-directory: ./editors/code\n-\n-    - run: npm run pretest\n-      working-directory: ./editors/code\n-\n-    - run: npm run package --scripts-prepend-node-path\n-      working-directory: ./editors/code\n+      - name: Checkout repository\n+        uses: actions/checkout@v3\n+\n+      - name: Install Nodejs\n+        uses: actions/setup-node@v1\n+        with:\n+          node-version: 16.x\n+\n+      - name: Install xvfb\n+        if: matrix.os == 'ubuntu-latest'\n+        run: sudo apt-get install -y xvfb\n+\n+      - run: npm ci\n+        working-directory: ./editors/code\n+\n+      #    - run: npm audit || { sleep 10 && npm audit; } || { sleep 30 && npm audit; }\n+      #      if: runner.os == 'Linux'\n+      #      working-directory: ./editors/code\n+\n+      - run: npm run lint\n+        working-directory: ./editors/code\n+\n+      - name: Run VS Code tests (Linux)\n+        if: matrix.os == 'ubuntu-latest'\n+        env:\n+          VSCODE_CLI: 1\n+        run: xvfb-run npm test\n+        working-directory: ./editors/code\n+\n+      - name: Run VS Code tests (Windows)\n+        if: matrix.os == 'windows-latest'\n+        env:\n+          VSCODE_CLI: 1\n+        run: npm test\n+        working-directory: ./editors/code\n+\n+      - run: npm run pretest\n+        working-directory: ./editors/code\n+\n+      - run: npm run package --scripts-prepend-node-path\n+        working-directory: ./editors/code\n \n   end-success:\n     name: bors build finished"}]}