{"sha": "c813bfa424b62086a095a5010c4065a043703a4e", "node_id": "C_kwDOAAsO6NoAKGM4MTNiZmE0MjRiNjIwODZhMDk1YTUwMTBjNDA2NWEwNDM3MDNhNGU", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-08-30T00:23:33Z"}, "committer": {"name": "cynecx", "email": "me@cynecx.net", "date": "2021-12-03T22:51:46Z"}, "message": "Add initial AST and MIR support for unwinding from inline assembly", "tree": {"sha": "37f2efec3d4e11042b1a242bd4cb613f59d67b2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37f2efec3d4e11042b1a242bd4cb613f59d67b2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c813bfa424b62086a095a5010c4065a043703a4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c813bfa424b62086a095a5010c4065a043703a4e", "html_url": "https://github.com/rust-lang/rust/commit/c813bfa424b62086a095a5010c4065a043703a4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c813bfa424b62086a095a5010c4065a043703a4e/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23f752f2788c1df1ed57ea67f618efa903148daf", "url": "https://api.github.com/repos/rust-lang/rust/commits/23f752f2788c1df1ed57ea67f618efa903148daf", "html_url": "https://github.com/rust-lang/rust/commit/23f752f2788c1df1ed57ea67f618efa903148daf"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "0eba6633ee19b36650bd3ee15b863fa43dba4661", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c813bfa424b62086a095a5010c4065a043703a4e/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c813bfa424b62086a095a5010c4065a043703a4e/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=c813bfa424b62086a095a5010c4065a043703a4e", "patch": "@@ -15,7 +15,7 @@ use rustc_middle::mir::{\n     Mutability,\n };\n use rustc_middle::ty::{self, fold::TypeVisitor, Ty, TyCtxt};\n-use rustc_mir_dataflow::{Analysis, AnalysisDomain, GenKill, GenKillAnalysis, ResultsCursor};\n+use rustc_mir_dataflow::{Analysis, AnalysisDomain, CallReturnPlaces, GenKill, GenKillAnalysis, ResultsCursor};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{BytePos, Span};\n use rustc_span::sym;\n@@ -499,11 +499,9 @@ impl<'tcx> GenKillAnalysis<'tcx> for MaybeStorageLive {\n \n     fn call_return_effect(\n         &self,\n-        _in_out: &mut impl GenKill<Self::Idx>,\n+        _trans: &mut impl GenKill<Self::Idx>,\n         _block: mir::BasicBlock,\n-        _func: &mir::Operand<'tcx>,\n-        _args: &[mir::Operand<'tcx>],\n-        _return_place: mir::Place<'tcx>,\n+        _return_places: CallReturnPlaces<'_, 'tcx>,\n     ) {\n         // Nothing to do when a call returns successfully\n     }"}]}