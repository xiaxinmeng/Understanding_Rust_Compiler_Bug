{"sha": "18398ad337996ba85e3a8f641e4a3d65f28b1833", "node_id": "C_kwDOAAsO6NoAKDE4Mzk4YWQzMzc5OTZiYTg1ZTNhOGY2NDFlNGEzZDY1ZjI4YjE4MzM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-26T22:23:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-26T22:23:59Z"}, "message": "Rollup merge of #111973 - Sp00ph:update_current_impl, r=Amanieu\n\nUpdate current implementation comments for `select_nth_unstable`\n\nThis more accurately reflects the actual implementation, as it hasn't been a simple quickselect since #106997. While it does say that the current implementation always runs in O(n), I don't think it should require an FCP as it doesn't guarantee linearity in general and only points out that the current implementation is in fact linear.\n\nr? `@Amanieu`", "tree": {"sha": "4db43a79a2d67cb31d98d15ec1de518d30337d1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4db43a79a2d67cb31d98d15ec1de518d30337d1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18398ad337996ba85e3a8f641e4a3d65f28b1833", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkcTF/CRBK7hj4Ov3rIwAAS5MIAFJjkZOXvlE10IOhHDqb8ZFB\nGzv1Mi2tEWiV8JzrWr3Mi6GNa1iwFi7IayA3R4pE1b6bk9XSQzIMnxRiSG21XDhV\ndKYpAYOFXEW//hvxTi+okginjX1tyNdwunsVN6KC5Eu63kGloR2zmTw5B4FhAc+a\nQ/SYv6AeFzDUy0RvodWejcHWsNl8vQUBspm2cN31hZYdDfpN4aJQZT9c0Ya/u5x8\nEjGhE1+5kqWDIanM/SAXwuHLivoXE86X2ML8Ii8NiqL+KNGWasz74owqvv+sijCf\nnYpEVHbNmwjvfycsRvr1CA/bpsG5l4w/x48dGDHfb71YyjHehqG27nYnNoQ1xhY=\n=oODp\n-----END PGP SIGNATURE-----\n", "payload": "tree 4db43a79a2d67cb31d98d15ec1de518d30337d1f\nparent e7068ff8192948f991c5e725a3464037f0d7d349\nparent ea327915d8d2311b03e50c12fd2e9e6aa86f0077\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1685139839 +0200\ncommitter GitHub <noreply@github.com> 1685139839 +0200\n\nRollup merge of #111973 - Sp00ph:update_current_impl, r=Amanieu\n\nUpdate current implementation comments for `select_nth_unstable`\n\nThis more accurately reflects the actual implementation, as it hasn't been a simple quickselect since #106997. While it does say that the current implementation always runs in O(n), I don't think it should require an FCP as it doesn't guarantee linearity in general and only points out that the current implementation is in fact linear.\n\nr? `@Amanieu`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18398ad337996ba85e3a8f641e4a3d65f28b1833", "html_url": "https://github.com/rust-lang/rust/commit/18398ad337996ba85e3a8f641e4a3d65f28b1833", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18398ad337996ba85e3a8f641e4a3d65f28b1833/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7068ff8192948f991c5e725a3464037f0d7d349", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7068ff8192948f991c5e725a3464037f0d7d349", "html_url": "https://github.com/rust-lang/rust/commit/e7068ff8192948f991c5e725a3464037f0d7d349"}, {"sha": "ea327915d8d2311b03e50c12fd2e9e6aa86f0077", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea327915d8d2311b03e50c12fd2e9e6aa86f0077", "html_url": "https://github.com/rust-lang/rust/commit/ea327915d8d2311b03e50c12fd2e9e6aa86f0077"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "1f19555522974614173ff43bdd395f8625b21985", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/18398ad337996ba85e3a8f641e4a3d65f28b1833/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18398ad337996ba85e3a8f641e4a3d65f28b1833/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=18398ad337996ba85e3a8f641e4a3d65f28b1833", "patch": "@@ -3005,8 +3005,9 @@ impl<T> [T] {\n     ///\n     /// # Current implementation\n     ///\n-    /// The current algorithm is based on the quickselect portion of the same quicksort algorithm\n-    /// used for [`sort_unstable`].\n+    /// The current algorithm is an introselect implementation based on Pattern Defeating Quicksort, which is also\n+    /// the basis for [`sort_unstable`]. The fallback algorithm is Median of Medians using Tukey's Ninther for\n+    /// pivot selection, which guarantees linear runtime for all inputs.\n     ///\n     /// [`sort_unstable`]: slice::sort_unstable\n     ///\n@@ -3056,8 +3057,9 @@ impl<T> [T] {\n     ///\n     /// # Current implementation\n     ///\n-    /// The current algorithm is based on the quickselect portion of the same quicksort algorithm\n-    /// used for [`sort_unstable`].\n+    /// The current algorithm is an introselect implementation based on Pattern Defeating Quicksort, which is also\n+    /// the basis for [`sort_unstable`]. The fallback algorithm is Median of Medians using Tukey's Ninther for\n+    /// pivot selection, which guarantees linear runtime for all inputs.\n     ///\n     /// [`sort_unstable`]: slice::sort_unstable\n     ///"}]}