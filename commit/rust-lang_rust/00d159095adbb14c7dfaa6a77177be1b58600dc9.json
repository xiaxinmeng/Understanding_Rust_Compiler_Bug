{"sha": "00d159095adbb14c7dfaa6a77177be1b58600dc9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwZDE1OTA5NWFkYmIxNGM3ZGZhYTZhNzcxNzdiZTFiNTg2MDBkYzk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-09-16T20:15:20Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-09-16T20:44:18Z"}, "message": "adjust desugaring for async fn to correct drop order\n\nOld desugaring, given a user function body { $stmts; $expr }\n\n```\n{\n    let $param_pattern0 = $raw_param0;\n    ...\n    let $param_patternN = $raw_paramN;\n    $stmts;\n    $expr\n}\n```\n\nNew desugaring:\n\n```\n{\n    let $param_pattern0 = $raw_param0;\n    ...\n    let $param_patternN = $raw_paramN;\n    drop-temps {\n        $stmts;\n        $expr\n    }\n}\n```\n\nThe drop-temps is an internal bit of HIR that drops temporaries from\nthe resulting expression, but it should be equivalent to `return {\n$stmts; $expr }`.", "tree": {"sha": "507c54763853fb5d9cc57c1c1bcbe50522b59ccc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/507c54763853fb5d9cc57c1c1bcbe50522b59ccc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00d159095adbb14c7dfaa6a77177be1b58600dc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00d159095adbb14c7dfaa6a77177be1b58600dc9", "html_url": "https://github.com/rust-lang/rust/commit/00d159095adbb14c7dfaa6a77177be1b58600dc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00d159095adbb14c7dfaa6a77177be1b58600dc9/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ae1a664f7b947dadb9e97eea7703831d9cd5d31", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ae1a664f7b947dadb9e97eea7703831d9cd5d31", "html_url": "https://github.com/rust-lang/rust/commit/9ae1a664f7b947dadb9e97eea7703831d9cd5d31"}], "stats": {"total": 54, "additions": 41, "deletions": 13}, "files": [{"sha": "492029eed05706adbcb1ff8f872bca13a5e0b300", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/00d159095adbb14c7dfaa6a77177be1b58600dc9/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00d159095adbb14c7dfaa6a77177be1b58600dc9/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=00d159095adbb14c7dfaa6a77177be1b58600dc9", "patch": "@@ -2682,12 +2682,8 @@ impl<'a> LoweringContext<'a> {\n         bounds.iter().map(|bound| self.lower_param_bound(bound, itctx.reborrow())).collect()\n     }\n \n-    fn lower_block_with_stmts(\n-        &mut self,\n-        b: &Block,\n-        targeted_by_break: bool,\n-        mut stmts: Vec<hir::Stmt>,\n-    ) -> P<hir::Block> {\n+    fn lower_block(&mut self, b: &Block, targeted_by_break: bool) -> P<hir::Block> {\n+        let mut stmts = vec![];\n         let mut expr = None;\n \n         for (index, stmt) in b.stmts.iter().enumerate() {\n@@ -2712,10 +2708,6 @@ impl<'a> LoweringContext<'a> {\n         })\n     }\n \n-    fn lower_block(&mut self, b: &Block, targeted_by_break: bool) -> P<hir::Block> {\n-        self.lower_block_with_stmts(b, targeted_by_break, vec![])\n-    }\n-\n     fn lower_pat(&mut self, p: &Pat) -> P<hir::Pat> {\n         let node = match p.node {\n             PatKind::Wild => hir::PatKind::Wild,"}, {"sha": "87462e94f430d566e6d5e1213287e351367e0f58", "filename": "src/librustc/hir/lowering/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00d159095adbb14c7dfaa6a77177be1b58600dc9/src%2Flibrustc%2Fhir%2Flowering%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00d159095adbb14c7dfaa6a77177be1b58600dc9/src%2Flibrustc%2Fhir%2Flowering%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering%2Fexpr.rs?ref=00d159095adbb14c7dfaa6a77177be1b58600dc9", "patch": "@@ -1310,7 +1310,7 @@ impl LoweringContext<'_> {\n     /// `{ let _t = $expr; _t }` but should provide better compile-time performance.\n     ///\n     /// The drop order can be important in e.g. `if expr { .. }`.\n-    fn expr_drop_temps(\n+    pub(super) fn expr_drop_temps(\n         &mut self,\n         span: Span,\n         expr: P<hir::Expr>,"}, {"sha": "1e621f7fdaea61c5783625e4612dbb0efff4dec5", "filename": "src/librustc/hir/lowering/item.rs", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/00d159095adbb14c7dfaa6a77177be1b58600dc9/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00d159095adbb14c7dfaa6a77177be1b58600dc9/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs?ref=00d159095adbb14c7dfaa6a77177be1b58600dc9", "patch": "@@ -1219,8 +1219,44 @@ impl LoweringContext<'_> {\n             let async_expr = this.make_async_expr(\n                 CaptureBy::Value, closure_id, None, body.span,\n                 |this| {\n-                    let body = this.lower_block_with_stmts(body, false, statements);\n-                    this.expr_block(body, ThinVec::new())\n+                    // Create a block from the user's function body:\n+                    let user_body = this.lower_block(body, false);\n+                    let user_body = this.expr_block(user_body, ThinVec::new());\n+\n+                    // Transform into `drop-temps { <user-body> }`, an expression:\n+                    let desugared_span = this.mark_span_with_reason(\n+                        DesugaringKind::Async,\n+                        user_body.span,\n+                        None,\n+                    );\n+                    let user_body = this.expr_drop_temps(\n+                        desugared_span,\n+                        P(user_body),\n+                        ThinVec::new(),\n+                    );\n+\n+                    // Create a block like\n+                    //\n+                    // ```\n+                    // {\n+                    //   let $param_pattern = $raw_param;\n+                    //   ...\n+                    //   drop-temps { <user-body> }\n+                    // }\n+                    // ```\n+                    //\n+                    // This construction is carefully calibrated to\n+                    // get the drop-order correct.  In particular, the\n+                    // drop-temps ensures that any temporaries in the\n+                    // tail expression of `<user-body>` are dropped\n+                    // *before* the parameters are dropped (see\n+                    // rust-lang/rust#64512).\n+                    let body = this.block_all(\n+                        desugared_span,\n+                        statements.into(),\n+                        Some(P(user_body)),\n+                    );\n+                    this.expr_block(P(body), ThinVec::new())\n                 });\n             (HirVec::from(parameters), this.expr(body.span, async_expr, ThinVec::new()))\n         })"}]}