{"sha": "3c437e5733babe67ccdfa6c5928878e1b039228e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNDM3ZTU3MzNiYWJlNjdjY2RmYTZjNTkyODg3OGUxYjAzOTIyOGU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-06-16T13:08:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-16T13:08:47Z"}, "message": "Rollup merge of #73389 - lzutao:from, r=kennytm\n\nUse `Ipv4Addr::from<[u8; 4]>` when possible\n\nResolve this comment: https://github.com/rust-lang/rust/pull/73331#discussion_r440098369", "tree": {"sha": "1918e4b75998bd99dbe709743785827a6d3ff54b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1918e4b75998bd99dbe709743785827a6d3ff54b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c437e5733babe67ccdfa6c5928878e1b039228e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe6MRfCRBK7hj4Ov3rIwAAdHIIADqjfXF9fEZebQ5j//kazzM5\n+CcOrkwyjAlgLALIS9AWcuS43QY0EY2Sf6M1gtdVN7Sggck4gAMbMTb5dsSuoqws\nrokJzgwMZMbIU+ifin95JE1iIWMSUi5f7FPQv8G0DoNDQvZVhpOYU20tybURKwxp\nbaygjFNGLC70ebcrlJeuWbvAxDf/Zu1t+wlBqFvQnkBOqxWKzZcUkLbNh0voRYqT\noxWgvtpvU+1pK4lIcNdpX+7QaM+CrONRfxnK7w8FRhG9seuu5LUEhu6y1Js/RiKl\nv7jHtxChf5y3tKG0I4k69PeLztoRa2IQmsKAqNJnXVe1DpVVgKtYm9nWnMmORLg=\n=TsiK\n-----END PGP SIGNATURE-----\n", "payload": "tree 1918e4b75998bd99dbe709743785827a6d3ff54b\nparent 759547b210ddacc2c0c6df6d86fb9306fb27a660\nparent 0e6c333ca61d3f04ad142a2929d03cb8ecd2a706\nauthor Dylan DPC <dylan.dpc@gmail.com> 1592312927 +0200\ncommitter GitHub <noreply@github.com> 1592312927 +0200\n\nRollup merge of #73389 - lzutao:from, r=kennytm\n\nUse `Ipv4Addr::from<[u8; 4]>` when possible\n\nResolve this comment: https://github.com/rust-lang/rust/pull/73331#discussion_r440098369\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c437e5733babe67ccdfa6c5928878e1b039228e", "html_url": "https://github.com/rust-lang/rust/commit/3c437e5733babe67ccdfa6c5928878e1b039228e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c437e5733babe67ccdfa6c5928878e1b039228e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "759547b210ddacc2c0c6df6d86fb9306fb27a660", "url": "https://api.github.com/repos/rust-lang/rust/commits/759547b210ddacc2c0c6df6d86fb9306fb27a660", "html_url": "https://github.com/rust-lang/rust/commit/759547b210ddacc2c0c6df6d86fb9306fb27a660"}, {"sha": "0e6c333ca61d3f04ad142a2929d03cb8ecd2a706", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e6c333ca61d3f04ad142a2929d03cb8ecd2a706", "html_url": "https://github.com/rust-lang/rust/commit/0e6c333ca61d3f04ad142a2929d03cb8ecd2a706"}], "stats": {"total": 10, "additions": 2, "deletions": 8}, "files": [{"sha": "8a788a9265f63c224dde07486812c60b8c127284", "filename": "src/libstd/sys/hermit/net.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3c437e5733babe67ccdfa6c5928878e1b039228e/src%2Flibstd%2Fsys%2Fhermit%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c437e5733babe67ccdfa6c5928878e1b039228e/src%2Flibstd%2Fsys%2Fhermit%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fhermit%2Fnet.rs?ref=3c437e5733babe67ccdfa6c5928878e1b039228e", "patch": "@@ -147,10 +147,7 @@ impl TcpStream {\n             .map_err(|_| io::Error::new(ErrorKind::Other, \"peer_addr failed\"))?;\n \n         let saddr = match ipaddr {\n-            Ipv4(ref addr) => SocketAddr::new(\n-                IpAddr::V4(Ipv4Addr::new(addr.0[0], addr.0[1], addr.0[2], addr.0[3])),\n-                port,\n-            ),\n+            Ipv4(ref addr) => SocketAddr::new(IpAddr::V4(Ipv4Addr::from(addr.0)), port),\n             Ipv6(ref addr) => SocketAddr::new(IpAddr::V6(Ipv6Addr::from(addr.0)), port),\n             _ => {\n                 return Err(io::Error::new(ErrorKind::Other, \"peer_addr failed\"));\n@@ -227,10 +224,7 @@ impl TcpListener {\n         let (handle, ipaddr, port) = abi::tcplistener::accept(self.0.port())\n             .map_err(|_| io::Error::new(ErrorKind::Other, \"accept failed\"))?;\n         let saddr = match ipaddr {\n-            Ipv4(ref addr) => SocketAddr::new(\n-                IpAddr::V4(Ipv4Addr::new(addr.0[0], addr.0[1], addr.0[2], addr.0[3])),\n-                port,\n-            ),\n+            Ipv4(ref addr) => SocketAddr::new(IpAddr::V4(Ipv4Addr::from(addr.0)), port),\n             Ipv6(ref addr) => SocketAddr::new(IpAddr::V6(Ipv6Addr::from(addr.0)), port),\n             _ => {\n                 return Err(io::Error::new(ErrorKind::Other, \"accept failed\"));"}]}