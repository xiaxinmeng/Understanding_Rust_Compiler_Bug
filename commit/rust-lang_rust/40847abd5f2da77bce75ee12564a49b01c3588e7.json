{"sha": "40847abd5f2da77bce75ee12564a49b01c3588e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwODQ3YWJkNWYyZGE3N2JjZTc1ZWUxMjU2NGE0OWIwMWMzNTg4ZTc=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-08-26T23:41:01Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-08-26T23:41:01Z"}, "message": "Review comments", "tree": {"sha": "2d4933733d8930d9c5c46d807a930294434b7eb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d4933733d8930d9c5c46d807a930294434b7eb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40847abd5f2da77bce75ee12564a49b01c3588e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40847abd5f2da77bce75ee12564a49b01c3588e7", "html_url": "https://github.com/rust-lang/rust/commit/40847abd5f2da77bce75ee12564a49b01c3588e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40847abd5f2da77bce75ee12564a49b01c3588e7/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bc8302a54653f3f92b015106a5322f7ce8e29a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bc8302a54653f3f92b015106a5322f7ce8e29a0", "html_url": "https://github.com/rust-lang/rust/commit/3bc8302a54653f3f92b015106a5322f7ce8e29a0"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "9ac1f3e4c2d4a2d464c7329c9f94a600348caa7a", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/40847abd5f2da77bce75ee12564a49b01c3588e7/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40847abd5f2da77bce75ee12564a49b01c3588e7/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=40847abd5f2da77bce75ee12564a49b01c3588e7", "patch": "@@ -406,7 +406,10 @@ fn parse_cargo_miri_args(\n     let mut additional_args = Vec::new();\n     while let Some(arg) = args.next() {\n         match arg {\n-            arg if arg == \"--\" => break,\n+            arg if arg == \"--\" => {\n+                // Miri arguments begin after the first \"--\".\n+                break;\n+            }\n             arg if arg == \"--lib\" => lib_present = true,\n             arg if arg == \"--bin\" => {\n                 if let Some(binary) = args.next() {\n@@ -419,6 +422,7 @@ fn parse_cargo_miri_args(\n                     show_error(format!(\"\\\"--bin\\\" takes one argument.\"));\n                 }\n             }\n+            arg if arg.starts_with(\"--bin=\") => bin_targets.push((&arg[6..]).to_string()),\n             arg if arg == \"--test\" => {\n                 if let Some(test) = args.next() {\n                     if test == \"--\" {\n@@ -430,6 +434,7 @@ fn parse_cargo_miri_args(\n                     show_error(format!(\"\\\"--test\\\" takes one argument.\"));\n                 }\n             }\n+            arg if arg.starts_with(\"--test=\") => test_targets.push((&arg[7..]).to_string()),\n             other => additional_args.push(other),\n         }\n     }\n@@ -480,6 +485,7 @@ fn in_cargo_miri() {\n         cmd.arg(\"check\");\n         match (subcommand, kind.as_str()) {\n             (MiriCommand::Run, \"bin\") => {\n+                // FIXME: we default to running all binaries here.\n                 cmd.arg(\"--bin\").arg(target.name);\n             }\n             (MiriCommand::Test, \"test\") => {\n@@ -495,7 +501,7 @@ fn in_cargo_miri() {\n             // The remaining targets we do not even want to build.\n             _ => continue,\n         }\n-        // Forward user-defined `cargo` args until first `--`.\n+        // Forward further `cargo` args.\n         for arg in cargo_args.iter() {\n             cmd.arg(arg);\n         }"}]}