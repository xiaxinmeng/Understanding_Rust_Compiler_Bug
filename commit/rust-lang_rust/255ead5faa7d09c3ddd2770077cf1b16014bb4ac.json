{"sha": "255ead5faa7d09c3ddd2770077cf1b16014bb4ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1NWVhZDVmYWE3ZDA5YzNkZGQyNzcwMDc3Y2YxYjE2MDE0YmI0YWM=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-06T21:09:36Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-09T08:25:26Z"}, "message": "Fallback to 'has type' error messages rather than 'lifetime appears in type'.", "tree": {"sha": "f8e71d2e66474bb1b74202b2c2652127130e1519", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8e71d2e66474bb1b74202b2c2652127130e1519"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/255ead5faa7d09c3ddd2770077cf1b16014bb4ac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAltr+nYACgkQAXYLT59T\n8VS12w//ThguzvXwtNTrFxvM5TXnlK50RbdPxCt3aVXfLbboazRb9qDlG5GPNpBo\ngic8jHSNue6gh2pp+O2PRsWUr+TVJ3GvJspgVVAIqAd7JAoaUAt2HfzCARi+eneG\nnX9XrJDvqb8PtdZI1f8kKx1i/knmg23UO3cCQLUQpWPXLw6I0eCNXrLVauFyqVlv\n7dYZYJtKDY/FwUfSLJMEADIF0DDqXrv3O54GWxQm49I5hkV1xnw9kbYjqqLGox/Q\nes1BvwnYm7YauHpfnmG3luExaUgEXnXcvEGowMmfVDHU+LMtbjQPMsLuZ6H/qxbD\n9JhwTSOPtwfHKEg+BmmPPCh1JGO4qr8XlRn+lcUyiuPGNSUnNR1sm9dYN3OP1fKH\nTeAtdZ7zsM7xtpv5m/Xosb1FtiqaO9CBZFpwtkPFVpJOyirsoPI7rt2Cc1EFe4tH\nYP/X388ps1anWjzhlJt/xYFfmSYtgZDY+gNBZOoKZKRHKsbJrCcf++0mUllqTMCk\nr+jfj7+OjaN5S4mLrOs0NbvVqx88JwslpLmZcxHv6NWh0ZC2Igo72Zh9n/n49wdc\nvzOjAcAMzHvaLf186Kb3vjav1VHPbJ2GTihnMv93IQcXaNp1Emus7WehAal3hYs0\n6cp+0SRia4pIVsZvMoKocfRzJ+5n9lVw20FuiF0jziGP94k3hHA=\n=X9Yg\n-----END PGP SIGNATURE-----", "payload": "tree f8e71d2e66474bb1b74202b2c2652127130e1519\nparent 82b48277a2f2c7b52c937fa85bddd90f85fbf3e1\nauthor David Wood <david@davidtw.co> 1533589776 +0200\ncommitter David Wood <david@davidtw.co> 1533803126 +0200\n\nFallback to 'has type' error messages rather than 'lifetime appears in type'.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/255ead5faa7d09c3ddd2770077cf1b16014bb4ac", "html_url": "https://github.com/rust-lang/rust/commit/255ead5faa7d09c3ddd2770077cf1b16014bb4ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/255ead5faa7d09c3ddd2770077cf1b16014bb4ac/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82b48277a2f2c7b52c937fa85bddd90f85fbf3e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/82b48277a2f2c7b52c937fa85bddd90f85fbf3e1", "html_url": "https://github.com/rust-lang/rust/commit/82b48277a2f2c7b52c937fa85bddd90f85fbf3e1"}], "stats": {"total": 36, "additions": 10, "deletions": 26}, "files": [{"sha": "6acf3aadf5169b77642a1d8f93c707539b588c2e", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/region_name.rs", "status": "modified", "additions": 9, "deletions": 25, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/255ead5faa7d09c3ddd2770077cf1b16014bb4ac/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/255ead5faa7d09c3ddd2770077cf1b16014bb4ac/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs?ref=255ead5faa7d09c3ddd2770077cf1b16014bb4ac", "patch": "@@ -242,17 +242,14 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n             return Some(region_name);\n         }\n \n-        let (_argument_name, argument_span) = self.get_argument_name_and_span_for_region(\n-            mir, argument_index);\n-\n-        let region_name = self.synthesize_region_name(counter);\n-\n-        diag.span_label(\n-            argument_span,\n-            format!(\"lifetime `{}` appears in this argument\", region_name,),\n-        );\n-\n-        Some(region_name)\n+        self.give_name_if_we_cannot_match_hir_ty(\n+            infcx,\n+            mir,\n+            fr,\n+            arg_ty,\n+            counter,\n+            diag,\n+        )\n     }\n \n     fn give_name_if_we_can_match_hir_ty_from_argument(\n@@ -370,14 +367,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n \n         search_stack.push((argument_ty, argument_hir_ty));\n \n-        let mut closest_match: &hir::Ty = argument_hir_ty;\n-\n         while let Some((ty, hir_ty)) = search_stack.pop() {\n-            // While we search, also track the closet match.\n-            if tcx.any_free_region_meets(&ty, |r| r.to_region_vid() == needle_fr) {\n-                closest_match = hir_ty;\n-            }\n-\n             match (&ty.sty, &hir_ty.node) {\n                 // Check if the `argument_ty` is `&'X ..` where `'X`\n                 // is the region we are looking for -- if so, and we have a `&T`\n@@ -452,13 +442,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n             }\n         }\n \n-        let region_name = self.synthesize_region_name(counter);\n-        diag.span_label(\n-            closest_match.span,\n-            format!(\"lifetime `{}` appears in this type\", region_name),\n-        );\n-\n-        return Some(region_name);\n+        return None;\n     }\n \n     /// We've found an enum/struct/union type with the substitutions"}, {"sha": "d1b830b9dfc29b5532f30615358597447250b25b", "filename": "src/test/ui/nll/issue-52742.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/255ead5faa7d09c3ddd2770077cf1b16014bb4ac/src%2Ftest%2Fui%2Fnll%2Fissue-52742.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/255ead5faa7d09c3ddd2770077cf1b16014bb4ac/src%2Ftest%2Fui%2Fnll%2Fissue-52742.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52742.stderr?ref=255ead5faa7d09c3ddd2770077cf1b16014bb4ac", "patch": "@@ -4,7 +4,7 @@ error: unsatisfied lifetime constraints\n LL |     fn take_bar(&mut self, b: Bar<'_>) {\n    |                 ---------         -- let's call this `'1`\n    |                 |\n-   |                 lifetime `'2` appears in this type\n+   |                 has type `&mut Foo<'_, '2>`\n LL |         self.y = b.z\n    |         ^^^^^^^^^^^^ requires that `'1` must outlive `'2`\n "}]}