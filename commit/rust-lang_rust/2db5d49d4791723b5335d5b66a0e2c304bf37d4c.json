{"sha": "2db5d49d4791723b5335d5b66a0e2c304bf37d4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkYjVkNDlkNDc5MTcyM2I1MzM1ZDViNjZhMGUyYzMwNGJmMzdkNGM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-07T18:20:31Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-18T14:08:25Z"}, "message": "simplify submod_path", "tree": {"sha": "8e12f62dce75abb6ed7cbcbace02e712b373206c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e12f62dce75abb6ed7cbcbace02e712b373206c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2db5d49d4791723b5335d5b66a0e2c304bf37d4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2db5d49d4791723b5335d5b66a0e2c304bf37d4c", "html_url": "https://github.com/rust-lang/rust/commit/2db5d49d4791723b5335d5b66a0e2c304bf37d4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2db5d49d4791723b5335d5b66a0e2c304bf37d4c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "185c1d340c5b985195abf15f69b06aa6572d793c", "url": "https://api.github.com/repos/rust-lang/rust/commits/185c1d340c5b985195abf15f69b06aa6572d793c", "html_url": "https://github.com/rust-lang/rust/commit/185c1d340c5b985195abf15f69b06aa6572d793c"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "c426b073a05177cb751915e3cf8a71b57e0816fc", "filename": "src/librustc_parse/parser/module.rs", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2db5d49d4791723b5335d5b66a0e2c304bf37d4c/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2db5d49d4791723b5335d5b66a0e2c304bf37d4c/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmodule.rs?ref=2db5d49d4791723b5335d5b66a0e2c304bf37d4c", "patch": "@@ -102,20 +102,18 @@ impl<'a> Parser<'a> {\n         id_sp: Span,\n     ) -> PResult<'a, ModulePathSuccess> {\n         if let Some(path) = Parser::submod_path_from_attr(outer_attrs, &self.directory.path) {\n-            return Ok(ModulePathSuccess {\n-                directory_ownership: match path.file_name().and_then(|s| s.to_str()) {\n-                    // All `#[path]` files are treated as though they are a `mod.rs` file.\n-                    // This means that `mod foo;` declarations inside `#[path]`-included\n-                    // files are siblings,\n-                    //\n-                    // Note that this will produce weirdness when a file named `foo.rs` is\n-                    // `#[path]` included and contains a `mod foo;` declaration.\n-                    // If you encounter this, it's your own darn fault :P\n-                    Some(_) => DirectoryOwnership::Owned { relative: None },\n-                    _ => DirectoryOwnership::UnownedViaMod,\n-                },\n-                path,\n-            });\n+            let directory_ownership = match path.file_name().and_then(|s| s.to_str()) {\n+                // All `#[path]` files are treated as though they are a `mod.rs` file.\n+                // This means that `mod foo;` declarations inside `#[path]`-included\n+                // files are siblings,\n+                //\n+                // Note that this will produce weirdness when a file named `foo.rs` is\n+                // `#[path]` included and contains a `mod foo;` declaration.\n+                // If you encounter this, it's your own darn fault :P\n+                Some(_) => DirectoryOwnership::Owned { relative: None },\n+                _ => DirectoryOwnership::UnownedViaMod,\n+            };\n+            return Ok(ModulePathSuccess { directory_ownership, path });\n         }\n \n         let relative = match self.directory.ownership {"}]}