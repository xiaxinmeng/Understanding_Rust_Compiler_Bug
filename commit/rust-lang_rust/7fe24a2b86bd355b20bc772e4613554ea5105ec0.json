{"sha": "7fe24a2b86bd355b20bc772e4613554ea5105ec0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmZTI0YTJiODZiZDM1NWIyMGJjNzcyZTQ2MTM1NTRlYTUxMDVlYzA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-20T15:09:06Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-20T15:09:06Z"}, "message": "also add an async fn test", "tree": {"sha": "942bce031a6acde0db1574a1b0671e5aaea5b004", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/942bce031a6acde0db1574a1b0671e5aaea5b004"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7fe24a2b86bd355b20bc772e4613554ea5105ec0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7fe24a2b86bd355b20bc772e4613554ea5105ec0", "html_url": "https://github.com/rust-lang/rust/commit/7fe24a2b86bd355b20bc772e4613554ea5105ec0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7fe24a2b86bd355b20bc772e4613554ea5105ec0/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d6472a76c6615ad56c693b706e1232e07537b71", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d6472a76c6615ad56c693b706e1232e07537b71", "html_url": "https://github.com/rust-lang/rust/commit/8d6472a76c6615ad56c693b706e1232e07537b71"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "7c32b026df67b200871087eb4e6170726b1276fb", "filename": "tests/run-pass-fullmir/async-fn.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/7fe24a2b86bd355b20bc772e4613554ea5105ec0/tests%2Frun-pass-fullmir%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fe24a2b86bd355b20bc772e4613554ea5105ec0/tests%2Frun-pass-fullmir%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fasync-fn.rs?ref=7fe24a2b86bd355b20bc772e4613554ea5105ec0", "patch": "@@ -0,0 +1,35 @@\n+#![feature(\n+    async_await,\n+    await_macro,\n+    futures_api,\n+    pin,\n+)]\n+\n+use std::{future::Future, pin::Pin, task::Poll};\n+\n+// See if we can run a basic `async fn`\n+pub async fn foo(x: &u32, y: u32) -> u32 {\n+    let y = &y;\n+    let z = 9;\n+    let z = &z;\n+    let y = await!(async { *y + *z });\n+    let a = 10;\n+    let a = &a;\n+    *x + y + *a\n+}\n+\n+fn main() {\n+    use std::{sync::Arc, task::{Wake, local_waker}};\n+\n+    struct NoWake;\n+    impl Wake for NoWake {\n+        fn wake(_arc_self: &Arc<Self>) {\n+            panic!();\n+        }\n+    }\n+\n+    let lw = unsafe { local_waker(Arc::new(NoWake)) };\n+    let x = 5;\n+    let mut fut = foo(&x, 7);\n+    assert_eq!(unsafe { Pin::new_unchecked(&mut fut) }.poll(&lw), Poll::Ready(31));\n+}"}]}