{"sha": "8b71e0bbd596ada5d2e9c00d9249756d04607793", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiNzFlMGJiZDU5NmFkYTVkMmU5YzAwZDkyNDk3NTZkMDQ2MDc3OTM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2017-09-02T16:13:25Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2017-09-02T16:13:25Z"}, "message": "Better trace-macro and less span_err_fatal", "tree": {"sha": "7ba4e05e75dbe95cc13b4e85e6a992d131f47285", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ba4e05e75dbe95cc13b4e85e6a992d131f47285"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b71e0bbd596ada5d2e9c00d9249756d04607793", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQIcBAABCgAGBQJZqtioAAoJEEpHzFJ6U7W8nFAP/0DFIgLDM7tWKMvt3CoKotbx\nckJgxAi00atP9FIpP2k795hG71ePb0X+3jcvtS/2En50Zv5S2PA6wPtTXYD0lswf\nRtbuUVpxiuepdYUF7lyGgMRVkobMOW6BFHkhD5cD+ShqyF2qpBrKa/+4nVyq7i/H\n+GDl/x/uDpvy7Z6+H0KXtykaaJr9+o2Ba2l9u6pTkyiXD3tibn7nd6vUb5pQiItK\nzBGaif8naPt0cFRbZ5k6t71j+WIY+rwNil6QVmv0EtaSmoVcjOtW8w6WXKrg5wSn\nUIHaAvlTfPPXp6z/Uj0wlG7V8eTYuC9FZhf3XTnHs1EvIo0u42Pd7rbD1ZMlcuC1\nln1yBPb837shPx5dj2CpR1qxLw18nOjEL234WKfio38uczgETGCs2VrzVkWny2Ph\n/dZWWGkRhJt7yV+yP2YLkv2Ha9INelPK+3QtgrdWqICBO4jHC5lpgDmSwNWimJmb\nS2dUzTi6hv2RCXidT5KT8iCcyPDwlLIYUvFz4BQSeBBrjzxNmKY4D7o+qyNb0vQL\nH8oL00fsKQZHMc2g95BZVjwDFasRCTMzvz+/YYIkSiDeOPETfWvkG5s/IB3nCDzn\nN2j6fIe0J08dCF4zCKsZk3sNjm+JI3JbEvhsItdP/EgSHhhaKf8ZnYBdlbVbRMN+\nWkVkfZszAZNU7/N8yPaW\n=cIcT\n-----END PGP SIGNATURE-----", "payload": "tree 7ba4e05e75dbe95cc13b4e85e6a992d131f47285\nparent 8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a\nauthor bjorn3 <bjorn3@users.noreply.github.com> 1504368805 +0200\ncommitter bjorn3 <bjorn3@users.noreply.github.com> 1504368805 +0200\n\nBetter trace-macro and less span_err_fatal\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b71e0bbd596ada5d2e9c00d9249756d04607793", "html_url": "https://github.com/rust-lang/rust/commit/8b71e0bbd596ada5d2e9c00d9249756d04607793", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b71e0bbd596ada5d2e9c00d9249756d04607793/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a", "html_url": "https://github.com/rust-lang/rust/commit/8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a"}], "stats": {"total": 56, "additions": 15, "deletions": 41}, "files": [{"sha": "402cdfe27faf0fe168b459e69795c849381bc383", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b71e0bbd596ada5d2e9c00d9249756d04607793/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b71e0bbd596ada5d2e9c00d9249756d04607793/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=8b71e0bbd596ada5d2e9c00d9249756d04607793", "patch": "@@ -792,14 +792,16 @@ impl<'a> ExtCtxt<'a> {\n     pub fn span_bug(&self, sp: Span, msg: &str) -> ! {\n         self.parse_sess.span_diagnostic.span_bug(sp, msg);\n     }\n-    pub fn trace_macros_diag(&self) {\n+    pub fn trace_macros_diag(&mut self) {\n         for (sp, notes) in self.expansions.iter() {\n             let mut db = self.parse_sess.span_diagnostic.span_note_diag(*sp, \"trace_macro\");\n             for note in notes {\n                 db.note(note);\n             }\n             db.emit();\n         }\n+        // Fixme: does this result in errors?\n+        self.expansions.clear();\n     }\n     pub fn bug(&self, msg: &str) -> ! {\n         self.parse_sess.span_diagnostic.bug(msg);"}, {"sha": "7bc9f6b2d8fd198d77088c181f2d17becddbe493", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8b71e0bbd596ada5d2e9c00d9249756d04607793/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b71e0bbd596ada5d2e9c00d9249756d04607793/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=8b71e0bbd596ada5d2e9c00d9249756d04607793", "patch": "@@ -384,7 +384,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n         if self.cx.current_expansion.depth > self.cx.ecfg.recursion_limit {\n             let info = self.cx.current_expansion.mark.expn_info().unwrap();\n             let suggested_limit = self.cx.ecfg.recursion_limit * 2;\n-            let mut err = self.cx.struct_span_fatal(info.call_site,\n+            let mut err = self.cx.struct_span_err(info.call_site,\n                 &format!(\"recursion limit reached while expanding the macro `{}`\",\n                          info.callee.name()));\n             err.help(&format!(\n@@ -640,6 +640,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n             Ok(expansion) => expansion,\n             Err(mut err) => {\n                 err.emit();\n+                self.cx.trace_macros_diag();\n                 return kind.dummy(span);\n             }\n         };"}, {"sha": "a5b42dc191ed338b765fa1222b2bc45c3ec01d16", "filename": "src/test/ui/macros/trace_faulty_macros.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8b71e0bbd596ada5d2e9c00d9249756d04607793/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b71e0bbd596ada5d2e9c00d9249756d04607793/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.rs?ref=8b71e0bbd596ada5d2e9c00d9249756d04607793", "patch": "@@ -18,13 +18,13 @@ macro_rules! my_faulty_macro {\n     };\n }\n \n-macro_rules! nested_pat_macro {\n+macro_rules! pat_macro {\n     () => {\n-        nested_pat_macro!(inner);\n+        pat_macro!(A{a:a, b:0, c:_, ..});\n+    };\n+    ($a:pat) => {\n+        $a\n     };\n-    (inner) => {\n-        a | b | 1 ... 3 | _\n-    }\n }\n \n macro_rules! my_recursive_macro {\n@@ -41,11 +41,11 @@ macro_rules! my_macro {\n \n fn main() {\n     my_faulty_macro!();\n-    nested_pat_macro!();\n     my_recursive_macro!();\n     test!();\n     non_exisiting!();\n     derive!(Debug);\n+    let a = pat_macro!();\n }\n \n #[my_macro]"}, {"sha": "bc289f8daa84de5b4ee3eef5ea431cc952b7ee3a", "filename": "src/test/ui/macros/trace_faulty_macros.stderr", "status": "modified", "additions": 4, "deletions": 33, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/8b71e0bbd596ada5d2e9c00d9249756d04607793/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8b71e0bbd596ada5d2e9c00d9249756d04607793/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.stderr?ref=8b71e0bbd596ada5d2e9c00d9249756d04607793", "patch": "@@ -17,30 +17,21 @@ note: trace_macro\n    = note: to `my_faulty_macro ! ( bcd ) ;`\n    = note: expanding `my_faulty_macro! { bcd }`\n \n-error: expected expression, found `_`\n-  --> $DIR/trace_faulty_macros.rs:26:27\n-   |\n-26 |         a | b | 1 ... 3 | _\n-   |                           ^\n-...\n-44 |     nested_pat_macro!();\n-   |     -------------------- in this macro invocation\n-\n error: recursion limit reached while expanding the macro `my_recursive_macro`\n   --> $DIR/trace_faulty_macros.rs:32:9\n    |\n 32 |         my_recursive_macro!();\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n ...\n-45 |     my_recursive_macro!();\n+44 |     my_recursive_macro!();\n    |     ---------------------- in this macro invocation\n    |\n    = help: consider adding a `#![recursion_limit=\"8\"]` attribute to your crate\n \n note: trace_macro\n-  --> $DIR/trace_faulty_macros.rs:45:5\n+  --> $DIR/trace_faulty_macros.rs:44:5\n    |\n-45 |     my_recursive_macro!();\n+44 |     my_recursive_macro!();\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: expanding `my_recursive_macro! {  }`\n@@ -54,24 +45,4 @@ note: trace_macro\n    = note: expanding `my_recursive_macro! {  }`\n    = note: to `my_recursive_macro ! (  ) ;`\n \n-note: trace_macro\n-  --> $DIR/trace_faulty_macros.rs:43:5\n-   |\n-43 |     my_faulty_macro!();\n-   |     ^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: expanding `my_faulty_macro! {  }`\n-   = note: to `my_faulty_macro ! ( bcd ) ;`\n-   = note: expanding `my_faulty_macro! { bcd }`\n-\n-note: trace_macro\n-  --> $DIR/trace_faulty_macros.rs:44:5\n-   |\n-44 |     nested_pat_macro!();\n-   |     ^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: expanding `nested_pat_macro! {  }`\n-   = note: to `nested_pat_macro ! ( inner ) ;`\n-   = note: expanding `nested_pat_macro! { inner }`\n-   = note: to `a | b | 1 ... 3 | _`\n-\n+   \n\\ No newline at end of file"}]}