{"sha": "3e770645aade4b7e34898a9f102bd5e4d5589f32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlNzcwNjQ1YWFkZTRiN2UzNDg5OGE5ZjEwMmJkNWU0ZDU1ODlmMzI=", "commit": {"author": {"name": "Nicholas-Baron", "email": "nicholas.baron.ten@gmail.com", "date": "2020-09-19T08:20:05Z"}, "committer": {"name": "Nicholas-Baron", "email": "nicholas.baron.ten@gmail.com", "date": "2020-09-21T01:48:31Z"}, "message": "Moved a struct only need by util into util", "tree": {"sha": "2468fcaacb91c7925dc020b8c05ccdbe565a44ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2468fcaacb91c7925dc020b8c05ccdbe565a44ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e770645aade4b7e34898a9f102bd5e4d5589f32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e770645aade4b7e34898a9f102bd5e4d5589f32", "html_url": "https://github.com/rust-lang/rust/commit/3e770645aade4b7e34898a9f102bd5e4d5589f32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e770645aade4b7e34898a9f102bd5e4d5589f32/comments", "author": {"login": "Nicholas-Baron", "id": 35079404, "node_id": "MDQ6VXNlcjM1MDc5NDA0", "avatar_url": "https://avatars.githubusercontent.com/u/35079404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nicholas-Baron", "html_url": "https://github.com/Nicholas-Baron", "followers_url": "https://api.github.com/users/Nicholas-Baron/followers", "following_url": "https://api.github.com/users/Nicholas-Baron/following{/other_user}", "gists_url": "https://api.github.com/users/Nicholas-Baron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nicholas-Baron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nicholas-Baron/subscriptions", "organizations_url": "https://api.github.com/users/Nicholas-Baron/orgs", "repos_url": "https://api.github.com/users/Nicholas-Baron/repos", "events_url": "https://api.github.com/users/Nicholas-Baron/events{/privacy}", "received_events_url": "https://api.github.com/users/Nicholas-Baron/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nicholas-Baron", "id": 35079404, "node_id": "MDQ6VXNlcjM1MDc5NDA0", "avatar_url": "https://avatars.githubusercontent.com/u/35079404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nicholas-Baron", "html_url": "https://github.com/Nicholas-Baron", "followers_url": "https://api.github.com/users/Nicholas-Baron/followers", "following_url": "https://api.github.com/users/Nicholas-Baron/following{/other_user}", "gists_url": "https://api.github.com/users/Nicholas-Baron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nicholas-Baron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nicholas-Baron/subscriptions", "organizations_url": "https://api.github.com/users/Nicholas-Baron/orgs", "repos_url": "https://api.github.com/users/Nicholas-Baron/repos", "events_url": "https://api.github.com/users/Nicholas-Baron/events{/privacy}", "received_events_url": "https://api.github.com/users/Nicholas-Baron/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fd80e35e03f0acf48c065d6682600d32b27915f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fd80e35e03f0acf48c065d6682600d32b27915f", "html_url": "https://github.com/rust-lang/rust/commit/6fd80e35e03f0acf48c065d6682600d32b27915f"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "c507393bc31404756a9d71c40124c5812e66036a", "filename": "compiler/rustc_typeck/src/check/mod.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3e770645aade4b7e34898a9f102bd5e4d5589f32/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e770645aade4b7e34898a9f102bd5e4d5589f32/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs?ref=3e770645aade4b7e34898a9f102bd5e4d5589f32", "patch": "@@ -99,7 +99,6 @@ use rustc_hir as hir;\n use rustc_hir::def::{CtorOf, DefKind, Res};\n use rustc_hir::def_id::{DefId, DefIdMap, LocalDefId, LOCAL_CRATE};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n-use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::lang_items::LangItem;\n use rustc_hir::{ExprKind, GenericArg, HirIdMap, ItemKind, Node, PatKind, QPath};\n use rustc_index::bit_set::BitSet;\n@@ -695,18 +694,6 @@ impl Inherited<'a, 'tcx> {\n     }\n }\n \n-struct CheckItemTypesVisitor<'tcx> {\n-    tcx: TyCtxt<'tcx>,\n-}\n-\n-impl ItemLikeVisitor<'tcx> for CheckItemTypesVisitor<'tcx> {\n-    fn visit_item(&mut self, i: &'tcx hir::Item<'tcx>) {\n-        check_item_type(self.tcx, i);\n-    }\n-    fn visit_trait_item(&mut self, _: &'tcx hir::TraitItem<'tcx>) {}\n-    fn visit_impl_item(&mut self, _: &'tcx hir::ImplItem<'tcx>) {}\n-}\n-\n pub fn check_wf_new(tcx: TyCtxt<'_>) {\n     let visit = wfcheck::CheckTypeWellFormedVisitor::new(tcx);\n     tcx.hir().krate().par_visit_all_item_likes(&visit);"}, {"sha": "62865accad4ad035763e58442612b790ec14e216", "filename": "compiler/rustc_typeck/src/check/util.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3e770645aade4b7e34898a9f102bd5e4d5589f32/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e770645aade4b7e34898a9f102bd5e4d5589f32/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Futil.rs?ref=3e770645aade4b7e34898a9f102bd5e4d5589f32", "patch": "@@ -1,9 +1,10 @@\n+use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, LocalDefId, LOCAL_CRATE};\n+use rustc_hir::itemlikevisit::ItemLikeVisitor;\n \n use std::cell::{Ref, RefCell, RefMut};\n \n use super::wfcheck;\n-use crate::check::CheckItemTypesVisitor;\n use crate::{ty, TyCtxt};\n \n /// A wrapper for `InferCtxt`'s `in_progress_typeck_results` field.\n@@ -32,6 +33,18 @@ impl<'a, 'tcx> MaybeInProgressTables<'a, 'tcx> {\n     }\n }\n \n+struct CheckItemTypesVisitor<'tcx> {\n+    tcx: TyCtxt<'tcx>,\n+}\n+\n+impl ItemLikeVisitor<'tcx> for CheckItemTypesVisitor<'tcx> {\n+    fn visit_item(&mut self, i: &'tcx hir::Item<'tcx>) {\n+        super::check_item_type(self.tcx, i);\n+    }\n+    fn visit_trait_item(&mut self, _: &'tcx hir::TraitItem<'tcx>) {}\n+    fn visit_impl_item(&mut self, _: &'tcx hir::ImplItem<'tcx>) {}\n+}\n+\n pub(super) fn check_mod_item_types(tcx: TyCtxt<'_>, module_def_id: LocalDefId) {\n     tcx.hir().visit_item_likes_in_module(module_def_id, &mut CheckItemTypesVisitor { tcx });\n }"}]}