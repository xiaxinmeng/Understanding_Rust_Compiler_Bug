{"sha": "62c8e255d17f27f4f1a89ad84e8275443bd3e68a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYzhlMjU1ZDE3ZjI3ZjRmMWE4OWFkODRlODI3NTQ0M2JkM2U2OGE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-03-07T02:01:09Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-03-07T15:09:52Z"}, "message": "Rollup merge of #48651 - PramodBisht:issues/48425, r=oli-obk\n\nFixed #48425 : Various functions taking a `TyCtxt` and a `Span` should be taking a `TyCtxtAt`\n\nHi @oli-obk\nI have done some code refactoring to fix #48425, Please let me know if anything else is required on this.", "tree": {"sha": "e58d5acfcdcfb83039ed9ada1d607d59f5426c50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e58d5acfcdcfb83039ed9ada1d607d59f5426c50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62c8e255d17f27f4f1a89ad84e8275443bd3e68a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62c8e255d17f27f4f1a89ad84e8275443bd3e68a", "html_url": "https://github.com/rust-lang/rust/commit/62c8e255d17f27f4f1a89ad84e8275443bd3e68a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62c8e255d17f27f4f1a89ad84e8275443bd3e68a/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de3a63d663b5ba262c05a1147488614e054209a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/de3a63d663b5ba262c05a1147488614e054209a4", "html_url": "https://github.com/rust-lang/rust/commit/de3a63d663b5ba262c05a1147488614e054209a4"}, {"sha": "6fdf6377cc3695fd403a69760a4fff5278b31a58", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fdf6377cc3695fd403a69760a4fff5278b31a58", "html_url": "https://github.com/rust-lang/rust/commit/6fdf6377cc3695fd403a69760a4fff5278b31a58"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "5069c59562678a722926951c82222e89aa2b102c", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/62c8e255d17f27f4f1a89ad84e8275443bd3e68a/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c8e255d17f27f4f1a89ad84e8275443bd3e68a/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=62c8e255d17f27f4f1a89ad84e8275443bd3e68a", "patch": "@@ -1203,7 +1203,7 @@ impl<'a, 'tcx> LayoutCx<'tcx, TyCtxt<'a, 'tcx, 'tcx>> {\n                 }\n \n                 let pointee = tcx.normalize_associated_type_in_env(&pointee, param_env);\n-                if pointee.is_sized(tcx, param_env, DUMMY_SP) {\n+                if pointee.is_sized(tcx.at(DUMMY_SP), param_env) {\n                     return Ok(tcx.intern_layout(LayoutDetails::scalar(self, data_ptr)));\n                 }\n \n@@ -1428,7 +1428,7 @@ impl<'a, 'tcx> LayoutCx<'tcx, TyCtxt<'a, 'tcx, 'tcx>> {\n                         let param_env = tcx.param_env(def.did);\n                         let last_field = def.variants[v].fields.last().unwrap();\n                         let always_sized = tcx.type_of(last_field.did)\n-                          .is_sized(tcx, param_env, DUMMY_SP);\n+                          .is_sized(tcx.at(DUMMY_SP), param_env);\n                         if !always_sized { StructKind::MaybeUnsized }\n                         else { StructKind::AlwaysSized }\n                     };"}, {"sha": "3a5e6d97cd4ba834733586fefbaba36b331cf3c4", "filename": "src/librustc/ty/util.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/62c8e255d17f27f4f1a89ad84e8275443bd3e68a/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c8e255d17f27f4f1a89ad84e8275443bd3e68a/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=62c8e255d17f27f4f1a89ad84e8275443bd3e68a", "patch": "@@ -20,6 +20,7 @@ use traits::{self, Reveal};\n use ty::{self, Ty, TyCtxt, TypeFoldable};\n use ty::fold::TypeVisitor;\n use ty::subst::{Subst, UnpackedKind};\n+use ty::maps::TyCtxtAt;\n use ty::TypeVariants::*;\n use util::common::ErrorReported;\n use middle::lang_items;\n@@ -864,11 +865,10 @@ impl<'a, 'tcx> ty::TyS<'tcx> {\n     }\n \n     pub fn is_sized(&'tcx self,\n-                    tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-                    param_env: ty::ParamEnv<'tcx>,\n-                    span: Span)-> bool\n+                    tcx_at: TyCtxtAt<'a, 'tcx, 'tcx>,\n+                    param_env: ty::ParamEnv<'tcx>)-> bool\n     {\n-        tcx.at(span).is_sized_raw(param_env.and(self))\n+        tcx_at.is_sized_raw(param_env.and(self))\n     }\n \n     pub fn is_freeze(&'tcx self,"}, {"sha": "bbf4357e5b0f91edf5b2c07d2aa93b8cfa4f9154", "filename": "src/librustc_mir/borrow_check/nll/type_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62c8e255d17f27f4f1a89ad84e8275443bd3e68a/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c8e255d17f27f4f1a89ad84e8275443bd3e68a/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs?ref=62c8e255d17f27f4f1a89ad84e8275443bd3e68a", "patch": "@@ -1208,7 +1208,7 @@ impl<'a, 'gcx, 'tcx> TypeChecker<'a, 'gcx, 'tcx> {\n         // shouldn't affect `is_sized`.\n         let gcx = self.tcx().global_tcx();\n         let erased_ty = gcx.lift(&self.tcx().erase_regions(&ty)).unwrap();\n-        if !erased_ty.is_sized(gcx, self.param_env, span) {\n+        if !erased_ty.is_sized(gcx.at(span), self.param_env) {\n             // in current MIR construction, all non-control-flow rvalue\n             // expressions evaluate through `as_temp` or `into` a return\n             // slot or local, so to find all unsized rvalues it is enough"}, {"sha": "25f933c5da6e7ce6742aae078413cb3107d2292c", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62c8e255d17f27f4f1a89ad84e8275443bd3e68a/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c8e255d17f27f4f1a89ad84e8275443bd3e68a/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=62c8e255d17f27f4f1a89ad84e8275443bd3e68a", "patch": "@@ -286,7 +286,7 @@ impl<'a, 'tcx, M: Machine<'tcx>> EvalContext<'a, 'tcx, M> {\n     }\n \n     pub(super) fn type_is_sized(&self, ty: Ty<'tcx>) -> bool {\n-        ty.is_sized(self.tcx, self.param_env, DUMMY_SP)\n+        ty.is_sized(self.tcx.at(DUMMY_SP), self.param_env)\n     }\n \n     pub fn load_mir("}, {"sha": "1fba436d405787f21c9b0ca5836da9cb9f3fec66", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62c8e255d17f27f4f1a89ad84e8275443bd3e68a/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c8e255d17f27f4f1a89ad84e8275443bd3e68a/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=62c8e255d17f27f4f1a89ad84e8275443bd3e68a", "patch": "@@ -796,7 +796,7 @@ fn find_vtable_types_for_unsizing<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     let ptr_vtable = |inner_source: Ty<'tcx>, inner_target: Ty<'tcx>| {\n         let type_has_metadata = |ty: Ty<'tcx>| -> bool {\n             use syntax_pos::DUMMY_SP;\n-            if ty.is_sized(tcx, ty::ParamEnv::empty(traits::Reveal::All), DUMMY_SP) {\n+            if ty.is_sized(tcx.at(DUMMY_SP), ty::ParamEnv::empty(traits::Reveal::All)) {\n                 return false;\n             }\n             let tail = tcx.struct_tail(ty);"}, {"sha": "7c4e2340d5bdc4dcaecf9f8ede17c813096c80dc", "filename": "src/librustc_trans/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62c8e255d17f27f4f1a89ad84e8275443bd3e68a/src%2Flibrustc_trans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c8e255d17f27f4f1a89ad84e8275443bd3e68a/src%2Flibrustc_trans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcommon.rs?ref=62c8e255d17f27f4f1a89ad84e8275443bd3e68a", "patch": "@@ -44,7 +44,7 @@ pub fn type_needs_drop<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, ty: Ty<'tcx>) -> b\n }\n \n pub fn type_is_sized<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, ty: Ty<'tcx>) -> bool {\n-    ty.is_sized(tcx, ty::ParamEnv::empty(traits::Reveal::All), DUMMY_SP)\n+    ty.is_sized(tcx.at(DUMMY_SP), ty::ParamEnv::empty(traits::Reveal::All))\n }\n \n pub fn type_is_freeze<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, ty: Ty<'tcx>) -> bool {"}, {"sha": "dc5e788959448ac6f2e8b4c4ec14695607eb56c8", "filename": "src/librustc_trans/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62c8e255d17f27f4f1a89ad84e8275443bd3e68a/src%2Flibrustc_trans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c8e255d17f27f4f1a89ad84e8275443bd3e68a/src%2Flibrustc_trans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcontext.rs?ref=62c8e255d17f27f4f1a89ad84e8275443bd3e68a", "patch": "@@ -435,7 +435,7 @@ impl<'b, 'tcx> CodegenCx<'b, 'tcx> {\n \n     pub fn type_has_metadata(&self, ty: Ty<'tcx>) -> bool {\n         use syntax_pos::DUMMY_SP;\n-        if ty.is_sized(self.tcx, ty::ParamEnv::empty(traits::Reveal::All), DUMMY_SP) {\n+        if ty.is_sized(self.tcx.at(DUMMY_SP), ty::ParamEnv::empty(traits::Reveal::All)) {\n             return false;\n         }\n "}]}