{"sha": "5b167bf4bbdff169ca735476e66fdf9b4e6501fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViMTY3YmY0YmJkZmYxNjljYTczNTQ3NmU2NmZkZjliNGU2NTAxZmQ=", "commit": {"author": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2019-04-18T17:23:54Z"}, "committer": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2019-05-06T20:20:18Z"}, "message": "update rustdoc unit tests", "tree": {"sha": "82406cbf939d4cb87eb5c124b388bb0a4dac276b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82406cbf939d4cb87eb5c124b388bb0a4dac276b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b167bf4bbdff169ca735476e66fdf9b4e6501fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b167bf4bbdff169ca735476e66fdf9b4e6501fd", "html_url": "https://github.com/rust-lang/rust/commit/5b167bf4bbdff169ca735476e66fdf9b4e6501fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b167bf4bbdff169ca735476e66fdf9b4e6501fd/comments", "author": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6d26eb053e9c56fdc9d9e20a2952041a165e559", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6d26eb053e9c56fdc9d9e20a2952041a165e559", "html_url": "https://github.com/rust-lang/rust/commit/a6d26eb053e9c56fdc9d9e20a2952041a165e559"}], "stats": {"total": 46, "additions": 25, "deletions": 21}, "files": [{"sha": "df01ac2f4440821ec021fc85d81e5c90a7f03c9c", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5b167bf4bbdff169ca735476e66fdf9b4e6501fd/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b167bf4bbdff169ca735476e66fdf9b4e6501fd/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=5b167bf4bbdff169ca735476e66fdf9b4e6501fd", "patch": "@@ -1050,7 +1050,7 @@ mod tests {\n     use super::{ErrorCodes, LangString, Markdown, MarkdownHtml, IdMap};\n     use super::plain_summary_line;\n     use std::cell::RefCell;\n-    use syntax::edition::Edition;\n+    use syntax::edition::{Edition, DEFAULT_EDITION};\n \n     #[test]\n     fn test_lang_string_parse() {\n@@ -1102,7 +1102,8 @@ mod tests {\n     fn test_header() {\n         fn t(input: &str, expect: &str) {\n             let mut map = IdMap::new();\n-            let output = Markdown(input, &[], RefCell::new(&mut map), ErrorCodes::Yes).to_string();\n+            let output = Markdown(input, &[], RefCell::new(&mut map),\n+                                  ErrorCodes::Yes, DEFAULT_EDITION).to_string();\n             assert_eq!(output, expect, \"original: {}\", input);\n         }\n \n@@ -1124,7 +1125,8 @@ mod tests {\n     fn test_header_ids_multiple_blocks() {\n         let mut map = IdMap::new();\n         fn t(map: &mut IdMap, input: &str, expect: &str) {\n-            let output = Markdown(input, &[], RefCell::new(map), ErrorCodes::Yes).to_string();\n+            let output = Markdown(input, &[], RefCell::new(map),\n+                                  ErrorCodes::Yes, DEFAULT_EDITION).to_string();\n             assert_eq!(output, expect, \"original: {}\", input);\n         }\n \n@@ -1161,7 +1163,8 @@ mod tests {\n     fn test_markdown_html_escape() {\n         fn t(input: &str, expect: &str) {\n             let mut idmap = IdMap::new();\n-            let output = MarkdownHtml(input, RefCell::new(&mut idmap), ErrorCodes::Yes).to_string();\n+            let output = MarkdownHtml(input, RefCell::new(&mut idmap),\n+                                      ErrorCodes::Yes, DEFAULT_EDITION).to_string();\n             assert_eq!(output, expect, \"original: {}\", input);\n         }\n "}, {"sha": "268f0602d487533316fc591524055954344e292e", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/5b167bf4bbdff169ca735476e66fdf9b4e6501fd/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b167bf4bbdff169ca735476e66fdf9b4e6501fd/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=5b167bf4bbdff169ca735476e66fdf9b4e6501fd", "patch": "@@ -884,6 +884,7 @@ impl<'a, 'hir> intravisit::Visitor<'hir> for HirCollector<'a, 'hir> {\n #[cfg(test)]\n mod tests {\n     use super::{TestOptions, make_test};\n+    use syntax::edition::DEFAULT_EDITION;\n \n     #[test]\n     fn make_test_basic() {\n@@ -896,7 +897,7 @@ mod tests {\n fn main() {\n assert_eq!(2+2, 4);\n }\".to_string();\n-        let output = make_test(input, None, false, &opts);\n+        let output = make_test(input, None, false, &opts, DEFAULT_EDITION);\n         assert_eq!(output, (expected, 2));\n     }\n \n@@ -912,7 +913,7 @@ assert_eq!(2+2, 4);\n fn main() {\n assert_eq!(2+2, 4);\n }\".to_string();\n-        let output = make_test(input, Some(\"asdf\"), false, &opts);\n+        let output = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n         assert_eq!(output, (expected, 2));\n     }\n \n@@ -931,7 +932,7 @@ fn main() {\n use asdf::qwop;\n assert_eq!(2+2, 4);\n }\".to_string();\n-        let output = make_test(input, Some(\"asdf\"), false, &opts);\n+        let output = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n         assert_eq!(output, (expected, 3));\n     }\n \n@@ -953,7 +954,7 @@ fn main() {\n use asdf::qwop;\n assert_eq!(2+2, 4);\n }\".to_string();\n-        let output = make_test(input, Some(\"asdf\"), false, &opts);\n+        let output = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n         assert_eq!(output, (expected, 2));\n     }\n \n@@ -972,7 +973,7 @@ fn main() {\n use std::*;\n assert_eq!(2+2, 4);\n }\".to_string();\n-        let output = make_test(input, Some(\"std\"), false, &opts);\n+        let output = make_test(input, Some(\"std\"), false, &opts, DEFAULT_EDITION);\n         assert_eq!(output, (expected, 2));\n     }\n \n@@ -992,7 +993,7 @@ fn main() {\n use asdf::qwop;\n assert_eq!(2+2, 4);\n }\".to_string();\n-        let output = make_test(input, Some(\"asdf\"), false, &opts);\n+        let output = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n         assert_eq!(output, (expected, 2));\n     }\n \n@@ -1010,7 +1011,7 @@ fn main() {\n use asdf::qwop;\n assert_eq!(2+2, 4);\n }\".to_string();\n-        let output = make_test(input, Some(\"asdf\"), false, &opts);\n+        let output = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n         assert_eq!(output, (expected, 2));\n     }\n \n@@ -1030,7 +1031,7 @@ fn main() {\n use asdf::qwop;\n assert_eq!(2+2, 4);\n }\".to_string();\n-        let output = make_test(input, Some(\"asdf\"), false, &opts);\n+        let output = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n         assert_eq!(output, (expected, 3));\n \n         // Adding more will also bump the returned line offset.\n@@ -1043,7 +1044,7 @@ fn main() {\n use asdf::qwop;\n assert_eq!(2+2, 4);\n }\".to_string();\n-        let output = make_test(input, Some(\"asdf\"), false, &opts);\n+        let output = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n         assert_eq!(output, (expected, 4));\n     }\n \n@@ -1061,7 +1062,7 @@ assert_eq!(2+2, 4);\";\n fn main() {\n assert_eq!(2+2, 4);\n }\".to_string();\n-        let output = make_test(input, None, false, &opts);\n+        let output = make_test(input, None, false, &opts, DEFAULT_EDITION);\n         assert_eq!(output, (expected, 2));\n     }\n \n@@ -1078,7 +1079,7 @@ assert_eq!(2+2, 4);\n fn main() {\n     assert_eq!(2+2, 4);\n }\".to_string();\n-        let output = make_test(input, None, false, &opts);\n+        let output = make_test(input, None, false, &opts, DEFAULT_EDITION);\n         assert_eq!(output, (expected, 1));\n     }\n \n@@ -1095,7 +1096,7 @@ assert_eq!(2+2, 4);\";\n fn main() {\n assert_eq!(2+2, 4);\n }\".to_string();\n-        let output = make_test(input, None, false, &opts);\n+        let output = make_test(input, None, false, &opts, DEFAULT_EDITION);\n         assert_eq!(output, (expected, 2));\n     }\n \n@@ -1110,7 +1111,7 @@ assert_eq!(2+2, 4);\";\n \"#![allow(unused)]\n //Ceci n'est pas une `fn main`\n assert_eq!(2+2, 4);\".to_string();\n-        let output = make_test(input, None, true, &opts);\n+        let output = make_test(input, None, true, &opts, DEFAULT_EDITION);\n         assert_eq!(output, (expected, 1));\n     }\n \n@@ -1125,7 +1126,7 @@ assert_eq!(2+2, 4);\".to_string();\n \"fn main() {\n assert_eq!(2+2, 4);\n }\".to_string();\n-        let output = make_test(input, None, false, &opts);\n+        let output = make_test(input, None, false, &opts, DEFAULT_EDITION);\n         assert_eq!(output, (expected, 1));\n     }\n \n@@ -1144,7 +1145,7 @@ fn main() {\n assert_eq!(2+2, 4);\n }\".to_string();\n \n-        let output = make_test(input, None, false, &opts);\n+        let output = make_test(input, None, false, &opts, DEFAULT_EDITION);\n         assert_eq!(output, (expected, 2));\n \n         let input =\n@@ -1159,7 +1160,7 @@ fn main() {\n assert_eq!(asdf::foo, 4);\n }\".to_string();\n \n-        let output = make_test(input, Some(\"asdf\"), false, &opts);\n+        let output = make_test(input, Some(\"asdf\"), false, &opts, DEFAULT_EDITION);\n         assert_eq!(output, (expected, 3));\n     }\n \n@@ -1178,7 +1179,7 @@ test_wrapper! {\n     fn main() {}\n }\".to_string();\n \n-        let output = make_test(input, Some(\"my_crate\"), false, &opts);\n+        let output = make_test(input, Some(\"my_crate\"), false, &opts, DEFAULT_EDITION);\n         assert_eq!(output, (expected, 1));\n     }\n }"}]}