{"sha": "426dbcdf9208ff7c58b248e8adb4e933babd8ab1", "node_id": "C_kwDOAAsO6NoAKDQyNmRiY2RmOTIwOGZmN2M1OGIyNDhlOGFkYjRlOTMzYmFiZDhhYjE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-16T18:12:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-16T18:12:16Z"}, "message": "Rollup merge of #111533 - clubby789:drop-tracking-error, r=oli-obk\n\nHandle error body in generator layout\n\nFixes #111468\n\nI feel like making this query return `Option<GeneratorLayout>` might be better but had some issues with that approach", "tree": {"sha": "1b09ceb46850e8b4822686b78524ec302fabbb5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b09ceb46850e8b4822686b78524ec302fabbb5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/426dbcdf9208ff7c58b248e8adb4e933babd8ab1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkY8eACRBK7hj4Ov3rIwAAA4sIAIg1zj+BgTJpwJV3WBBsu5hN\nGOsubCKGnQbwoa6VXALSLhHKxjtjEZTNYfbntkHMqAmb509ofZgojgM6/tzhmCnX\nQTJz1rbthCxKwEfh/UuHRlCyO3/k7aNMtYRSwNJwOEiA2dA/ieeMbwLFtxX/JWgH\n8PG/piFSBlp+G+87HuIGofvVAkSauWDJT4fMLlWmD/IUZyQKo/xKDiMEbkuUYCMR\nm7oWkXvxuW/g/t6rZxGnzETcc/k8BngvA77dexnFtC6CC4juWDc/epqSnXqG6b/A\nr7fNphN5fiKIMb4P37g1pdBOA6I5kwRtEZUhVlRuPNIYntPui1UhXNMVncx92V4=\n=ciaV\n-----END PGP SIGNATURE-----\n", "payload": "tree 1b09ceb46850e8b4822686b78524ec302fabbb5c\nparent c78a67b710d19c556cfa279bce8b0e7eeb4e3b7b\nparent f77971e221d4726520b18217eb2acb291fb74ce9\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1684260736 +0200\ncommitter GitHub <noreply@github.com> 1684260736 +0200\n\nRollup merge of #111533 - clubby789:drop-tracking-error, r=oli-obk\n\nHandle error body in generator layout\n\nFixes #111468\n\nI feel like making this query return `Option<GeneratorLayout>` might be better but had some issues with that approach\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/426dbcdf9208ff7c58b248e8adb4e933babd8ab1", "html_url": "https://github.com/rust-lang/rust/commit/426dbcdf9208ff7c58b248e8adb4e933babd8ab1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/426dbcdf9208ff7c58b248e8adb4e933babd8ab1/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c78a67b710d19c556cfa279bce8b0e7eeb4e3b7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c78a67b710d19c556cfa279bce8b0e7eeb4e3b7b", "html_url": "https://github.com/rust-lang/rust/commit/c78a67b710d19c556cfa279bce8b0e7eeb4e3b7b"}, {"sha": "f77971e221d4726520b18217eb2acb291fb74ce9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f77971e221d4726520b18217eb2acb291fb74ce9", "html_url": "https://github.com/rust-lang/rust/commit/f77971e221d4726520b18217eb2acb291fb74ce9"}], "stats": {"total": 60, "additions": 49, "deletions": 11}, "files": [{"sha": "d3495d3dbd71ae57703ff4ecb38e645c4c4efff1", "filename": "compiler/rustc_hir_analysis/src/check/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/426dbcdf9208ff7c58b248e8adb4e933babd8ab1/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/426dbcdf9208ff7c58b248e8adb4e933babd8ab1/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcheck.rs?ref=426dbcdf9208ff7c58b248e8adb4e933babd8ab1", "patch": "@@ -1514,8 +1514,8 @@ fn opaque_type_cycle_error(\n                     }\n                     if tcx.sess.opts.unstable_opts.drop_tracking_mir\n                         && let DefKind::Generator = tcx.def_kind(closure_def_id)\n+                        && let Some(generator_layout) = tcx.mir_generator_witnesses(closure_def_id)\n                     {\n-                        let generator_layout = tcx.mir_generator_witnesses(closure_def_id);\n                         for interior_ty in &generator_layout.field_tys {\n                             label_match(interior_ty.ty, interior_ty.source_info.span);\n                         }"}, {"sha": "79eb48a1a315547bf2c392b8ff9f9019aa39cd76", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/426dbcdf9208ff7c58b248e8adb4e933babd8ab1/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/426dbcdf9208ff7c58b248e8adb4e933babd8ab1/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=426dbcdf9208ff7c58b248e8adb4e933babd8ab1", "patch": "@@ -1516,8 +1516,11 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n             if encode_opt {\n                 record!(self.tables.optimized_mir[def_id.to_def_id()] <- tcx.optimized_mir(def_id));\n \n-                if tcx.sess.opts.unstable_opts.drop_tracking_mir && let DefKind::Generator = self.tcx.def_kind(def_id) {\n-                    record!(self.tables.mir_generator_witnesses[def_id.to_def_id()] <- tcx.mir_generator_witnesses(def_id));\n+                if tcx.sess.opts.unstable_opts.drop_tracking_mir\n+                    && let DefKind::Generator = self.tcx.def_kind(def_id)\n+                    && let Some(witnesses) = tcx.mir_generator_witnesses(def_id)\n+                {\n+                    record!(self.tables.mir_generator_witnesses[def_id.to_def_id()] <- witnesses);\n                 }\n             }\n             if encode_const {"}, {"sha": "f564f5e99e815b195bbb9ae7903f64d5358989ec", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/426dbcdf9208ff7c58b248e8adb4e933babd8ab1/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/426dbcdf9208ff7c58b248e8adb4e933babd8ab1/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=426dbcdf9208ff7c58b248e8adb4e933babd8ab1", "patch": "@@ -527,7 +527,7 @@ rustc_queries! {\n         }\n     }\n \n-    query mir_generator_witnesses(key: DefId) -> &'tcx mir::GeneratorLayout<'tcx> {\n+    query mir_generator_witnesses(key: DefId) -> &'tcx Option<mir::GeneratorLayout<'tcx>> {\n         arena_cache\n         desc { |tcx| \"generator witness types for `{}`\", tcx.def_path_str(key) }\n         cache_on_disk_if { key.is_local() }"}, {"sha": "eb903ebfd99fb96833877c53d598256367430a93", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/426dbcdf9208ff7c58b248e8adb4e933babd8ab1/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/426dbcdf9208ff7c58b248e8adb4e933babd8ab1/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=426dbcdf9208ff7c58b248e8adb4e933babd8ab1", "patch": "@@ -668,10 +668,10 @@ impl<'tcx> TyCtxt<'tcx> {\n         self,\n         def_id: DefId,\n     ) -> impl Iterator<Item = ty::EarlyBinder<Ty<'tcx>>> {\n-        let generator_layout = &self.mir_generator_witnesses(def_id);\n+        let generator_layout = self.mir_generator_witnesses(def_id);\n         generator_layout\n-            .field_tys\n-            .iter()\n+            .as_ref()\n+            .map_or_else(|| [].iter(), |l| l.field_tys.iter())\n             .filter(|decl| !decl.ignore_for_traits)\n             .map(|decl| ty::EarlyBinder(decl.ty))\n     }"}, {"sha": "891e446942e018bafa7918242fb0266924812d5d", "filename": "compiler/rustc_mir_transform/src/generator.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/426dbcdf9208ff7c58b248e8adb4e933babd8ab1/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/426dbcdf9208ff7c58b248e8adb4e933babd8ab1/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs?ref=426dbcdf9208ff7c58b248e8adb4e933babd8ab1", "patch": "@@ -1397,7 +1397,7 @@ fn create_cases<'tcx>(\n pub(crate) fn mir_generator_witnesses<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     def_id: LocalDefId,\n-) -> GeneratorLayout<'tcx> {\n+) -> Option<GeneratorLayout<'tcx>> {\n     assert!(tcx.sess.opts.unstable_opts.drop_tracking_mir);\n \n     let (body, _) = tcx.mir_promoted(def_id);\n@@ -1410,6 +1410,7 @@ pub(crate) fn mir_generator_witnesses<'tcx>(\n     // Get the interior types and substs which typeck computed\n     let movable = match *gen_ty.kind() {\n         ty::Generator(_, _, movability) => movability == hir::Movability::Movable,\n+        ty::Error(_) => return None,\n         _ => span_bug!(body.span, \"unexpected generator type {}\", gen_ty),\n     };\n \n@@ -1425,7 +1426,7 @@ pub(crate) fn mir_generator_witnesses<'tcx>(\n \n     check_suspend_tys(tcx, &generator_layout, &body);\n \n-    generator_layout\n+    Some(generator_layout)\n }\n \n impl<'tcx> MirPass<'tcx> for StateTransform {"}, {"sha": "ea17f23434bce6c12f56744e6cd14e5cad820bb1", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/426dbcdf9208ff7c58b248e8adb4e933babd8ab1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/426dbcdf9208ff7c58b248e8adb4e933babd8ab1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=426dbcdf9208ff7c58b248e8adb4e933babd8ab1", "patch": "@@ -2447,10 +2447,9 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n             && generator_did.is_local()\n             // Try to avoid cycles.\n             && !generator_within_in_progress_typeck\n+            && let Some(generator_info) = self.tcx.mir_generator_witnesses(generator_did)\n         {\n-            let generator_info = &self.tcx.mir_generator_witnesses(generator_did);\n             debug!(?generator_info);\n-\n             'find_source: for (variant, source_info) in\n                 generator_info.variant_fields.iter().zip(&generator_info.variant_source_info)\n             {"}, {"sha": "f99d9ab6bf860c224ca5eb7afdf8913d25218bb7", "filename": "tests/ui/generator/drop-tracking-error-body.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/426dbcdf9208ff7c58b248e8adb4e933babd8ab1/tests%2Fui%2Fgenerator%2Fdrop-tracking-error-body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/426dbcdf9208ff7c58b248e8adb4e933babd8ab1/tests%2Fui%2Fgenerator%2Fdrop-tracking-error-body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerator%2Fdrop-tracking-error-body.rs?ref=426dbcdf9208ff7c58b248e8adb4e933babd8ab1", "patch": "@@ -0,0 +1,18 @@\n+// compile-flags: -Zdrop-tracking-mir --edition=2021\n+\n+#![feature(generators)]\n+\n+pub async fn async_bad_body() {\n+    match true {} //~ ERROR non-exhaustive patterns: type `bool` is non-empty\n+}\n+\n+pub fn generator_bad_body() {\n+    || {\n+        // 'non-exhaustive pattern' only seems to be reported once, so this annotation doesn't work\n+        // keep the function around so we can make sure it doesn't ICE\n+        match true {}; // ERROR non-exhaustive patterns: type `bool` is non-empty\n+        yield ();\n+    };\n+}\n+\n+fn main() {}"}, {"sha": "28a6892336ff2db8351e5d6d82479f9f2359646a", "filename": "tests/ui/generator/drop-tracking-error-body.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/426dbcdf9208ff7c58b248e8adb4e933babd8ab1/tests%2Fui%2Fgenerator%2Fdrop-tracking-error-body.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/426dbcdf9208ff7c58b248e8adb4e933babd8ab1/tests%2Fui%2Fgenerator%2Fdrop-tracking-error-body.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerator%2Fdrop-tracking-error-body.stderr?ref=426dbcdf9208ff7c58b248e8adb4e933babd8ab1", "patch": "@@ -0,0 +1,17 @@\n+error[E0004]: non-exhaustive patterns: type `bool` is non-empty\n+  --> $DIR/drop-tracking-error-body.rs:6:11\n+   |\n+LL |     match true {}\n+   |           ^^^^\n+   |\n+   = note: the matched value is of type `bool`\n+help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n+   |\n+LL ~     match true {\n+LL +         _ => todo!(),\n+LL ~     }\n+   |\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0004`."}]}