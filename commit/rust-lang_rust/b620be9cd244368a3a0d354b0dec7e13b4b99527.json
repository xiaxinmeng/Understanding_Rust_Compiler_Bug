{"sha": "b620be9cd244368a3a0d354b0dec7e13b4b99527", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2MjBiZTljZDI0NDM2OGEzYTBkMzU0YjBkZWM3ZTEzYjRiOTk1Mjc=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-05-24T00:17:49Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-05-24T00:17:49Z"}, "message": "Typecheck @[] correctly\n\nPreviously, if you wrote\nlet @vec[int] foo = @[];\n\nthat would be a type error. That didn't seem right, so I changed\npushdown to unify the inner type in an unop application with the\nargument type of the operator type.", "tree": {"sha": "a805225272ca8708068b7557e01fc9e55ba1989e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a805225272ca8708068b7557e01fc9e55ba1989e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b620be9cd244368a3a0d354b0dec7e13b4b99527", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b620be9cd244368a3a0d354b0dec7e13b4b99527", "html_url": "https://github.com/rust-lang/rust/commit/b620be9cd244368a3a0d354b0dec7e13b4b99527", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b620be9cd244368a3a0d354b0dec7e13b4b99527/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2505a2312eeae17cbf261833af5c2cab40f698e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2505a2312eeae17cbf261833af5c2cab40f698e2", "html_url": "https://github.com/rust-lang/rust/commit/2505a2312eeae17cbf261833af5c2cab40f698e2"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "41fe38403f01e6abce01a4887a0a9c821a2477d2", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b620be9cd244368a3a0d354b0dec7e13b4b99527/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b620be9cd244368a3a0d354b0dec7e13b4b99527/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=b620be9cd244368a3a0d354b0dec7e13b4b99527", "patch": "@@ -1317,6 +1317,31 @@ mod Pushdown {\n                 auto t = Demand::autoderef(scx, e.span, expected,\n                     ann_to_type(scx.fcx.ccx.tcx.node_types, ann), adk);\n                 write::ty_only_fixup(scx, ann.id, t);\n+\n+                /* The following is a bit special-cased, but takes care of\n+                   the case where we say let @vec[whatever] v = @[]; */\n+                auto inner_ty = t;\n+                alt (uop) {\n+                    case (ast::box(?mut)) {\n+                        alt (struct(scx.fcx.ccx.tcx, t)) {\n+                            case (ty::ty_box(?inner)) { inner_ty = inner.ty; }\n+                            case (_) { \n+                                scx.fcx.ccx.tcx.sess.span_err(e.span,\n+                                  \"Expecting an application of box\"\n+                                   + \" to have a box type\");\n+                            }\n+                        }\n+                    }\n+                    case (ast::deref) {\n+                        inner_ty = ty::mk_box(scx.fcx.ccx.tcx,\n+                        // maybe_mut should work because it'll unify with\n+                        // the existing type?\n+                                   rec(ty=t, mut=ast::maybe_mut));\n+                    }\n+                    case (_) { inner_ty = strip_boxes(scx.fcx.ccx.tcx, t); }\n+                }\n+\n+                pushdown_expr(scx, inner_ty, sube);\n             }\n             case (ast::expr_lit(?lit, ?ann)) {\n                 auto t = Demand::simple(scx, e.span, expected,"}, {"sha": "c21d49e34dc4b8e5fb318d6ad04f7a304cc10e47", "filename": "src/test/compile-fail/vector-no-ann-2.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2505a2312eeae17cbf261833af5c2cab40f698e2/src%2Ftest%2Fcompile-fail%2Fvector-no-ann-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2505a2312eeae17cbf261833af5c2cab40f698e2/src%2Ftest%2Fcompile-fail%2Fvector-no-ann-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvector-no-ann-2.rs?ref=2505a2312eeae17cbf261833af5c2cab40f698e2", "patch": "@@ -1,5 +0,0 @@\n-// error-pattern:3:24:3:25\n-fn main() -> () {\n-  let @vec[uint] foo = @[];\n-}\n-// this checks that span_err gets used"}, {"sha": "7302b8bdef1bdb82711f34af3df478cdeb5434b1", "filename": "src/test/run-pass/vector-no-ann-2.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b620be9cd244368a3a0d354b0dec7e13b4b99527/src%2Ftest%2Frun-pass%2Fvector-no-ann-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b620be9cd244368a3a0d354b0dec7e13b4b99527/src%2Ftest%2Frun-pass%2Fvector-no-ann-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvector-no-ann-2.rs?ref=b620be9cd244368a3a0d354b0dec7e13b4b99527", "patch": "@@ -0,0 +1,3 @@\n+fn main() -> () {\n+  let @vec[uint] quux = @[];\n+}"}]}