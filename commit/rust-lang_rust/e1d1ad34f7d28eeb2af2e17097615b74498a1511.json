{"sha": "e1d1ad34f7d28eeb2af2e17097615b74498a1511", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxZDFhZDM0ZjdkMjhlZWIyYWYyZTE3MDk3NjE1Yjc0NDk4YTE1MTE=", "commit": {"author": {"name": "Leah Hanson", "email": "astrieanna@gmail.com", "date": "2013-11-14T03:29:37Z"}, "committer": {"name": "Leah Hanson", "email": "leah.a.hanson@gmail.com", "date": "2013-11-24T17:14:27Z"}, "message": "Fix issue #8763\n\n* added case & better error message for \"impl trait for module\"\n* used better way to print the module\n* switched from //error-pattern to //~ ERROR\n* added compile-fail test trait-impl-for-module.rs\n* revised compile-fail test trait-or-new-type-instead\n    (the error message for the modified test is still unclear, but that's a different bug)\n* added FIXME to trait-or-new-type-instead", "tree": {"sha": "f7bf4802880a2071f0ed76115e36bc00cef6e422", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7bf4802880a2071f0ed76115e36bc00cef6e422"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1d1ad34f7d28eeb2af2e17097615b74498a1511", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1d1ad34f7d28eeb2af2e17097615b74498a1511", "html_url": "https://github.com/rust-lang/rust/commit/e1d1ad34f7d28eeb2af2e17097615b74498a1511", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1d1ad34f7d28eeb2af2e17097615b74498a1511/comments", "author": {"login": "astrieanna", "id": 1205394, "node_id": "MDQ6VXNlcjEyMDUzOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1205394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astrieanna", "html_url": "https://github.com/astrieanna", "followers_url": "https://api.github.com/users/astrieanna/followers", "following_url": "https://api.github.com/users/astrieanna/following{/other_user}", "gists_url": "https://api.github.com/users/astrieanna/gists{/gist_id}", "starred_url": "https://api.github.com/users/astrieanna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astrieanna/subscriptions", "organizations_url": "https://api.github.com/users/astrieanna/orgs", "repos_url": "https://api.github.com/users/astrieanna/repos", "events_url": "https://api.github.com/users/astrieanna/events{/privacy}", "received_events_url": "https://api.github.com/users/astrieanna/received_events", "type": "User", "site_admin": false}, "committer": {"login": "astrieanna", "id": 1205394, "node_id": "MDQ6VXNlcjEyMDUzOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1205394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astrieanna", "html_url": "https://github.com/astrieanna", "followers_url": "https://api.github.com/users/astrieanna/followers", "following_url": "https://api.github.com/users/astrieanna/following{/other_user}", "gists_url": "https://api.github.com/users/astrieanna/gists{/gist_id}", "starred_url": "https://api.github.com/users/astrieanna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astrieanna/subscriptions", "organizations_url": "https://api.github.com/users/astrieanna/orgs", "repos_url": "https://api.github.com/users/astrieanna/repos", "events_url": "https://api.github.com/users/astrieanna/events{/privacy}", "received_events_url": "https://api.github.com/users/astrieanna/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "314d6f693f9442ab40879b58f34c6d0afb76f447", "url": "https://api.github.com/repos/rust-lang/rust/commits/314d6f693f9442ab40879b58f34c6d0afb76f447", "html_url": "https://github.com/rust-lang/rust/commit/314d6f693f9442ab40879b58f34c6d0afb76f447"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "2ab3fc3502e8b5697ad3a68449d893118c89db3b", "filename": "src/librustc/middle/typeck/astconv.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e1d1ad34f7d28eeb2af2e17097615b74498a1511/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d1ad34f7d28eeb2af2e17097615b74498a1511/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs?ref=e1d1ad34f7d28eeb2af2e17097615b74498a1511", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -60,10 +60,11 @@ use middle::typeck::lookup_def_tcx;\n \n use std::vec;\n use syntax::abi::AbiSet;\n-use syntax::{ast, ast_util};\n+use syntax::{ast, ast_map, ast_util};\n use syntax::codemap::Span;\n use syntax::opt_vec::OptVec;\n use syntax::opt_vec;\n+use syntax::parse::token;\n use syntax::print::pprust::{lifetime_to_str, path_to_str};\n \n pub trait AstConv {\n@@ -518,6 +519,12 @@ pub fn ast_ty_to_ty<AC:AstConv, RS:RegionScope>(\n             let did = ast_util::local_def(id);\n             ty::mk_self(tcx, did)\n           }\n+          ast::DefMod(id) => {\n+            tcx.sess.span_fatal(ast_ty.span,\n+                                format!(\"found module name used as a type: {}\",\n+                                        ast_map::node_id_to_str(tcx.items, id.node,\n+                                        token::get_ident_interner())));\n+          }\n           _ => {\n             tcx.sess.span_fatal(ast_ty.span,\n                                 format!(\"found value name used as a type: {:?}\", a_def));"}, {"sha": "28d20483c7e7bcc498d4580c91eb1542e4374d4e", "filename": "src/test/compile-fail/trait-impl-for-module.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e1d1ad34f7d28eeb2af2e17097615b74498a1511/src%2Ftest%2Fcompile-fail%2Ftrait-impl-for-module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d1ad34f7d28eeb2af2e17097615b74498a1511/src%2Ftest%2Fcompile-fail%2Ftrait-impl-for-module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-impl-for-module.rs?ref=e1d1ad34f7d28eeb2af2e17097615b74498a1511", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+mod a {\n+}\n+\n+trait A {\n+}\n+\n+impl A for a { //~ERROR found module name used as a type\n+}\n+\n+fn main() {\n+}"}, {"sha": "1a394aa8c9bc699c6d321203fef6786c713dfbde", "filename": "src/test/compile-fail/trait-or-new-type-instead.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e1d1ad34f7d28eeb2af2e17097615b74498a1511/src%2Ftest%2Fcompile-fail%2Ftrait-or-new-type-instead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d1ad34f7d28eeb2af2e17097615b74498a1511/src%2Ftest%2Fcompile-fail%2Ftrait-or-new-type-instead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-or-new-type-instead.rs?ref=e1d1ad34f7d28eeb2af2e17097615b74498a1511", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: found value name used as a type\n-impl<T> Option<T> {\n+// FIXME(#8767) bad error message; Option is not a module\n+impl<T> Option<T> { //~ERROR found module name used as a type\n     pub fn foo(&self) { }\n }\n "}]}