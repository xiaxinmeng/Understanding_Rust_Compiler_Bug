{"sha": "f2adee74a318503334c07290ca767fd609aebf1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyYWRlZTc0YTMxODUwMzMzNGMwNzI5MGNhNzY3ZmQ2MDlhZWJmMWY=", "commit": {"author": {"name": "Dawid Ci\u0119\u017carkiewicz", "email": "dpc@dpc.pw", "date": "2017-03-13T06:07:16Z"}, "committer": {"name": "Dawid Ci\u0119\u017carkiewicz", "email": "dpc@dpc.pw", "date": "2017-03-18T03:15:05Z"}, "message": "Add `concurrent_recursive_mkdir` test", "tree": {"sha": "bdedd9501ced73f474244172ced7cb84c1668aa0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdedd9501ced73f474244172ced7cb84c1668aa0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2adee74a318503334c07290ca767fd609aebf1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2adee74a318503334c07290ca767fd609aebf1f", "html_url": "https://github.com/rust-lang/rust/commit/f2adee74a318503334c07290ca767fd609aebf1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2adee74a318503334c07290ca767fd609aebf1f/comments", "author": {"login": "dpc", "id": 9209, "node_id": "MDQ6VXNlcjkyMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/9209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpc", "html_url": "https://github.com/dpc", "followers_url": "https://api.github.com/users/dpc/followers", "following_url": "https://api.github.com/users/dpc/following{/other_user}", "gists_url": "https://api.github.com/users/dpc/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpc/subscriptions", "organizations_url": "https://api.github.com/users/dpc/orgs", "repos_url": "https://api.github.com/users/dpc/repos", "events_url": "https://api.github.com/users/dpc/events{/privacy}", "received_events_url": "https://api.github.com/users/dpc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dpc", "id": 9209, "node_id": "MDQ6VXNlcjkyMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/9209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpc", "html_url": "https://github.com/dpc", "followers_url": "https://api.github.com/users/dpc/followers", "following_url": "https://api.github.com/users/dpc/following{/other_user}", "gists_url": "https://api.github.com/users/dpc/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpc/subscriptions", "organizations_url": "https://api.github.com/users/dpc/orgs", "repos_url": "https://api.github.com/users/dpc/repos", "events_url": "https://api.github.com/users/dpc/events{/privacy}", "received_events_url": "https://api.github.com/users/dpc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ec28b796d1206c4442f0269febe2a1cc0794411", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ec28b796d1206c4442f0269febe2a1cc0794411", "html_url": "https://github.com/rust-lang/rust/commit/0ec28b796d1206c4442f0269febe2a1cc0794411"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "7ba88d6a3e13ca2cb3bc908ef8df96777b128a63", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f2adee74a318503334c07290ca767fd609aebf1f/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2adee74a318503334c07290ca767fd609aebf1f/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=f2adee74a318503334c07290ca767fd609aebf1f", "patch": "@@ -1782,7 +1782,7 @@ impl DirBuilder {\n             Err(e) => return Err(e),\n         }\n         match path.parent() {\n-            Some(p) => try!(create_dir_all(p)),\n+            Some(p) => try!(self.create_dir_all(p)),\n             None => return Err(io::Error::new(io::ErrorKind::Other, \"failed to create whole tree\")),\n         }\n         match self.inner.mkdir(path) {\n@@ -1809,6 +1809,7 @@ mod tests {\n     use rand::{StdRng, Rng};\n     use str;\n     use sys_common::io::test::{TempDir, tmpdir};\n+    use thread;\n \n     #[cfg(windows)]\n     use os::windows::fs::{symlink_dir, symlink_file};\n@@ -2276,6 +2277,26 @@ mod tests {\n         assert!(result.is_err());\n     }\n \n+    #[test]\n+    fn concurrent_recursive_mkdir() {\n+        for _ in 0..100 {\n+            let mut dir = tmpdir().join(\"a\");\n+            for _ in 0..100 {\n+                dir = dir.join(\"a\");\n+            }\n+            let mut join = vec!();\n+            for _ in 0..8 {\n+                let dir = dir.clone();\n+                join.push(thread::spawn(move || {\n+                    check!(fs::create_dir_all(&dir));\n+                }))\n+            }\n+\n+            // No `Display` on result of `join()`\n+            join.drain(..).map(|join| join.join().unwrap()).count();\n+        }\n+    }\n+\n     #[test]\n     fn recursive_mkdir_slash() {\n         check!(fs::create_dir_all(&Path::new(\"/\")));"}]}