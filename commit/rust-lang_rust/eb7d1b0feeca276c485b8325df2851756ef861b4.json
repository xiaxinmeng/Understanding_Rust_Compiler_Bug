{"sha": "eb7d1b0feeca276c485b8325df2851756ef861b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViN2QxYjBmZWVjYTI3NmM0ODViODMyNWRmMjg1MTc1NmVmODYxYjQ=", "commit": {"author": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2019-07-28T10:24:29Z"}, "committer": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2019-07-28T10:24:29Z"}, "message": "Inline snapshots for all tests in complete_scope.rs", "tree": {"sha": "865d7ad9ce151de1dd6fee292a78cdcc29576122", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/865d7ad9ce151de1dd6fee292a78cdcc29576122"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb7d1b0feeca276c485b8325df2851756ef861b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb7d1b0feeca276c485b8325df2851756ef861b4", "html_url": "https://github.com/rust-lang/rust/commit/eb7d1b0feeca276c485b8325df2851756ef861b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb7d1b0feeca276c485b8325df2851756ef861b4/comments", "author": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "164ba6092c41fe9b4ecd5bedb5d3d6d849c51639", "url": "https://api.github.com/repos/rust-lang/rust/commits/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639", "html_url": "https://github.com/rust-lang/rust/commit/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639"}], "stats": {"total": 830, "additions": 396, "deletions": 434}, "files": [{"sha": "1baa5227acbc53a64915dcde73410c4801b9bfe0", "filename": "crates/ra_ide_api/src/completion/complete_scope.rs", "status": "modified", "additions": 362, "deletions": 103, "changes": 465, "blob_url": "https://github.com/rust-lang/rust/blob/eb7d1b0feeca276c485b8325df2851756ef861b4/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb7d1b0feeca276c485b8325df2851756ef861b4/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=eb7d1b0feeca276c485b8325df2851756ef861b4", "patch": "@@ -121,172 +121,431 @@ impl ImportResolver {\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{check_completion, CompletionKind};\n+    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+\tuse insta::assert_debug_snapshot_matches;\n \n-    fn check_reference_completion(name: &str, code: &str) {\n-        check_completion(name, code, CompletionKind::Reference);\n+    fn do_reference_completion(code: &str) -> Vec<CompletionItem> {\n+        do_completion(code, CompletionKind::Reference)\n     }\n \n     #[test]\n     fn completes_bindings_from_let() {\n-        check_reference_completion(\n-            \"bindings_from_let\",\n-            r\"\n-            fn quux(x: i32) {\n-                let y = 92;\n-                1 + <|>;\n-                let z = ();\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                fn quux(x: i32) {\n+                    let y = 92;\n+                    1 + <|>;\n+                    let z = ();\n+                }\n+                \"\n+            ),\n+@r###\"\n+       \u22ee[\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"quux\",\n+       \u22ee        source_range: [91; 91),\n+       \u22ee        delete: [91; 91),\n+       \u22ee        insert: \"quux($0)\",\n+       \u22ee        kind: Function,\n+       \u22ee        detail: \"fn quux(x: i32)\",\n+       \u22ee    },\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"x\",\n+       \u22ee        source_range: [91; 91),\n+       \u22ee        delete: [91; 91),\n+       \u22ee        insert: \"x\",\n+       \u22ee        kind: Binding,\n+       \u22ee        detail: \"i32\",\n+       \u22ee    },\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"y\",\n+       \u22ee        source_range: [91; 91),\n+       \u22ee        delete: [91; 91),\n+       \u22ee        insert: \"y\",\n+       \u22ee        kind: Binding,\n+       \u22ee        detail: \"i32\",\n+       \u22ee    },\n+       \u22ee]\n+        \"###\n         );\n     }\n \n     #[test]\n     fn completes_bindings_from_if_let() {\n-        check_reference_completion(\n-            \"bindings_from_if_let\",\n-            r\"\n-            fn quux() {\n-                if let Some(x) = foo() {\n-                    let y = 92;\n-                };\n-                if let Some(a) = bar() {\n-                    let b = 62;\n-                    1 + <|>\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                fn quux() {\n+                    if let Some(x) = foo() {\n+                        let y = 92;\n+                    };\n+                    if let Some(a) = bar() {\n+                        let b = 62;\n+                        1 + <|>\n+                    }\n                 }\n-            }\n-            \",\n+                \"\n+            ),\n+@r###\"\n+       \u22ee[\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"a\",\n+       \u22ee        source_range: [242; 242),\n+       \u22ee        delete: [242; 242),\n+       \u22ee        insert: \"a\",\n+       \u22ee        kind: Binding,\n+       \u22ee    },\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"b\",\n+       \u22ee        source_range: [242; 242),\n+       \u22ee        delete: [242; 242),\n+       \u22ee        insert: \"b\",\n+       \u22ee        kind: Binding,\n+       \u22ee        detail: \"i32\",\n+       \u22ee    },\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"quux\",\n+       \u22ee        source_range: [242; 242),\n+       \u22ee        delete: [242; 242),\n+       \u22ee        insert: \"quux()$0\",\n+       \u22ee        kind: Function,\n+       \u22ee        detail: \"fn quux()\",\n+       \u22ee    },\n+       \u22ee]\n+        \"###\n         );\n     }\n \n     #[test]\n     fn completes_bindings_from_for() {\n-        check_reference_completion(\n-            \"bindings_from_for\",\n-            r\"\n-            fn quux() {\n-                for x in &[1, 2, 3] {\n-                    <|>\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                fn quux() {\n+                    for x in &[1, 2, 3] {\n+                        <|>\n+                    }\n                 }\n-            }\n-            \",\n+                \"\n+            ),\n+@r###\"\n+       \u22ee[\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"quux\",\n+       \u22ee        source_range: [95; 95),\n+       \u22ee        delete: [95; 95),\n+       \u22ee        insert: \"quux()$0\",\n+       \u22ee        kind: Function,\n+       \u22ee        detail: \"fn quux()\",\n+       \u22ee    },\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"x\",\n+       \u22ee        source_range: [95; 95),\n+       \u22ee        delete: [95; 95),\n+       \u22ee        insert: \"x\",\n+       \u22ee        kind: Binding,\n+       \u22ee    },\n+       \u22ee]\n+        \"###\n         );\n     }\n \n     #[test]\n     fn completes_generic_params() {\n-        check_reference_completion(\n-            \"generic_params\",\n-            r\"\n-            fn quux<T>() {\n-                <|>\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                fn quux<T>() {\n+                    <|>\n+                }\n+                \"\n+            ),\n+@r###\"\n+       \u22ee[\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"T\",\n+       \u22ee        source_range: [52; 52),\n+       \u22ee        delete: [52; 52),\n+       \u22ee        insert: \"T\",\n+       \u22ee        kind: TypeParam,\n+       \u22ee    },\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"quux\",\n+       \u22ee        source_range: [52; 52),\n+       \u22ee        delete: [52; 52),\n+       \u22ee        insert: \"quux()$0\",\n+       \u22ee        kind: Function,\n+       \u22ee        detail: \"fn quux<T>()\",\n+       \u22ee    },\n+       \u22ee]\n+        \"###\n         );\n     }\n \n     #[test]\n     fn completes_generic_params_in_struct() {\n-        check_reference_completion(\n-            \"generic_params_in_struct\",\n-            r\"\n-            struct X<T> {\n-                x: <|>\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                struct X<T> {\n+                    x: <|>\n+                }\n+                \"\n+            ),\n+@r###\"\n+       \u22ee[\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"T\",\n+       \u22ee        source_range: [54; 54),\n+       \u22ee        delete: [54; 54),\n+       \u22ee        insert: \"T\",\n+       \u22ee        kind: TypeParam,\n+       \u22ee    },\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"X\",\n+       \u22ee        source_range: [54; 54),\n+       \u22ee        delete: [54; 54),\n+       \u22ee        insert: \"X\",\n+       \u22ee        kind: Struct,\n+       \u22ee    },\n+       \u22ee]\n+        \"###\n         );\n     }\n \n     #[test]\n     fn completes_module_items() {\n-        check_reference_completion(\n-            \"module_items\",\n-            r\"\n-            struct Foo;\n-            enum Baz {}\n-            fn quux() {\n-                <|>\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                struct Foo;\n+                enum Baz {}\n+                fn quux() {\n+                    <|>\n+                }\n+                \"\n+            ),\n+@r###\"\n+       \u22ee[\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"Baz\",\n+       \u22ee        source_range: [105; 105),\n+       \u22ee        delete: [105; 105),\n+       \u22ee        insert: \"Baz\",\n+       \u22ee        kind: Enum,\n+       \u22ee    },\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"Foo\",\n+       \u22ee        source_range: [105; 105),\n+       \u22ee        delete: [105; 105),\n+       \u22ee        insert: \"Foo\",\n+       \u22ee        kind: Struct,\n+       \u22ee    },\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"quux\",\n+       \u22ee        source_range: [105; 105),\n+       \u22ee        delete: [105; 105),\n+       \u22ee        insert: \"quux()$0\",\n+       \u22ee        kind: Function,\n+       \u22ee        detail: \"fn quux()\",\n+       \u22ee    },\n+       \u22ee]\n+        \"###\n         );\n     }\n \n     #[test]\n     fn completes_extern_prelude() {\n-        check_reference_completion(\n-            \"extern_prelude\",\n-            r\"\n-            //- /lib.rs\n-            use <|>;\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                //- /lib.rs\n+                use <|>;\n \n-            //- /other_crate/lib.rs\n-            // nothing here\n-            \",\n+                //- /other_crate/lib.rs\n+                // nothing here\n+                \"\n+            ),\n+@r#\"[\n+    CompletionItem {\n+        label: \"other_crate\",\n+        source_range: [4; 4),\n+        delete: [4; 4),\n+        insert: \"other_crate\",\n+        kind: Module,\n+    },\n+]\"#\n         );\n     }\n \n     #[test]\n     fn completes_module_items_in_nested_modules() {\n-        check_reference_completion(\n-            \"module_items_in_nested_modules\",\n-            r\"\n-            struct Foo;\n-            mod m {\n-                struct Bar;\n-                fn quux() { <|> }\n-            }\n-            \",\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                struct Foo;\n+                mod m {\n+                    struct Bar;\n+                    fn quux() { <|> }\n+                }\n+                \"\n+            ),\n+@r###\"\n+       \u22ee[\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"Bar\",\n+       \u22ee        source_range: [117; 117),\n+       \u22ee        delete: [117; 117),\n+       \u22ee        insert: \"Bar\",\n+       \u22ee        kind: Struct,\n+       \u22ee    },\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"quux\",\n+       \u22ee        source_range: [117; 117),\n+       \u22ee        delete: [117; 117),\n+       \u22ee        insert: \"quux()$0\",\n+       \u22ee        kind: Function,\n+       \u22ee        detail: \"fn quux()\",\n+       \u22ee    },\n+       \u22ee]\n+        \"###\n         );\n     }\n \n     #[test]\n     fn completes_return_type() {\n-        check_reference_completion(\n-            \"return_type\",\n-            r\"\n-            struct Foo;\n-            fn x() -> <|>\n-            \",\n-        )\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                struct Foo;\n+                fn x() -> <|>\n+                \"\n+            ),\n+@r###\"\n+       \u22ee[\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"Foo\",\n+       \u22ee        source_range: [55; 55),\n+       \u22ee        delete: [55; 55),\n+       \u22ee        insert: \"Foo\",\n+       \u22ee        kind: Struct,\n+       \u22ee    },\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"x\",\n+       \u22ee        source_range: [55; 55),\n+       \u22ee        delete: [55; 55),\n+       \u22ee        insert: \"x()$0\",\n+       \u22ee        kind: Function,\n+       \u22ee        detail: \"fn x()\",\n+       \u22ee    },\n+       \u22ee]\n+        \"###\n+        );\n     }\n \n     #[test]\n     fn dont_show_both_completions_for_shadowing() {\n-        check_reference_completion(\n-            \"dont_show_both_completions_for_shadowing\",\n-            r\"\n-            fn foo() {\n-                let bar = 92;\n-                {\n-                    let bar = 62;\n-                    <|>\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                r\"\n+                fn foo() {\n+                    let bar = 92;\n+                    {\n+                        let bar = 62;\n+                        <|>\n+                    }\n                 }\n-            }\n-            \",\n-        )\n+                \"\n+            ),\n+@r###\"\n+       \u22ee[\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"bar\",\n+       \u22ee        source_range: [146; 146),\n+       \u22ee        delete: [146; 146),\n+       \u22ee        insert: \"bar\",\n+       \u22ee        kind: Binding,\n+       \u22ee        detail: \"i32\",\n+       \u22ee    },\n+       \u22ee    CompletionItem {\n+       \u22ee        label: \"foo\",\n+       \u22ee        source_range: [146; 146),\n+       \u22ee        delete: [146; 146),\n+       \u22ee        insert: \"foo()$0\",\n+       \u22ee        kind: Function,\n+       \u22ee        detail: \"fn foo()\",\n+       \u22ee    },\n+       \u22ee]\n+        \"###\n+        );\n     }\n \n     #[test]\n     fn completes_self_in_methods() {\n-        check_reference_completion(\"self_in_methods\", r\"impl S { fn foo(&self) { <|> } }\")\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(r\"impl S { fn foo(&self) { <|> } }\"),\n+@r#\"[\n+    CompletionItem {\n+        label: \"Self\",\n+        source_range: [25; 25),\n+        delete: [25; 25),\n+        insert: \"Self\",\n+        kind: TypeParam,\n+    },\n+    CompletionItem {\n+        label: \"self\",\n+        source_range: [25; 25),\n+        delete: [25; 25),\n+        insert: \"self\",\n+        kind: Binding,\n+        detail: \"&{unknown}\",\n+    },\n+]\"#\n+        );\n     }\n \n     #[test]\n     fn completes_prelude() {\n-        check_reference_completion(\n-            \"completes_prelude\",\n-            \"\n-            //- /main.rs\n-            fn foo() { let x: <|> }\n+        assert_debug_snapshot_matches!(\n+            do_reference_completion(\n+                \"\n+                //- /main.rs\n+                fn foo() { let x: <|> }\n \n-            //- /std/lib.rs\n-            #[prelude_import]\n-            use prelude::*;\n+                //- /std/lib.rs\n+                #[prelude_import]\n+                use prelude::*;\n \n-            mod prelude {\n-                struct Option;\n-            }\n-            \",\n+                mod prelude {\n+                    struct Option;\n+                }\n+                \"\n+            ),\n+@r#\"[\n+    CompletionItem {\n+        label: \"Option\",\n+        source_range: [18; 18),\n+        delete: [18; 18),\n+        insert: \"Option\",\n+        kind: Struct,\n+    },\n+    CompletionItem {\n+        label: \"foo\",\n+        source_range: [18; 18),\n+        delete: [18; 18),\n+        insert: \"foo()$0\",\n+        kind: Function,\n+        detail: \"fn foo()\",\n+    },\n+    CompletionItem {\n+        label: \"std\",\n+        source_range: [18; 18),\n+        delete: [18; 18),\n+        insert: \"std\",\n+        kind: Module,\n+    },\n+]\"#\n         );\n     }\n }"}, {"sha": "e9b717a45be0e12b4393e6dcbda5f18e64d3a8e9", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__bindings_from_for.snap", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_for.snap", "raw_url": "https://github.com/rust-lang/rust/raw/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_for.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_for.snap?ref=164ba6092c41fe9b4ecd5bedb5d3d6d849c51639", "patch": "@@ -1,23 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.119822026Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"quux\",\n-        source_range: [83; 83),\n-        delete: [83; 83),\n-        insert: \"quux()$0\",\n-        kind: Function,\n-        detail: \"fn quux()\",\n-    },\n-    CompletionItem {\n-        label: \"x\",\n-        source_range: [83; 83),\n-        delete: [83; 83),\n-        insert: \"x\",\n-        kind: Binding,\n-    },\n-]"}, {"sha": "f94477b438075322ec817b63d69caf0aeec6460e", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__bindings_from_if_let.snap", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_if_let.snap", "raw_url": "https://github.com/rust-lang/rust/raw/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_if_let.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_if_let.snap?ref=164ba6092c41fe9b4ecd5bedb5d3d6d849c51639", "patch": "@@ -1,31 +0,0 @@\n----\n-created: \"2019-07-23T16:11:48.828805910Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"a\",\n-        source_range: [214; 214),\n-        delete: [214; 214),\n-        insert: \"a\",\n-        kind: Binding,\n-    },\n-    CompletionItem {\n-        label: \"b\",\n-        source_range: [214; 214),\n-        delete: [214; 214),\n-        insert: \"b\",\n-        kind: Binding,\n-        detail: \"i32\",\n-    },\n-    CompletionItem {\n-        label: \"quux\",\n-        source_range: [214; 214),\n-        delete: [214; 214),\n-        insert: \"quux()$0\",\n-        kind: Function,\n-        detail: \"fn quux()\",\n-    },\n-]"}, {"sha": "590e2a820b00fd27ebb0be31a1052728f24caea8", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__bindings_from_let.snap", "status": "removed", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_let.snap", "raw_url": "https://github.com/rust-lang/rust/raw/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_let.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_let.snap?ref=164ba6092c41fe9b4ecd5bedb5d3d6d849c51639", "patch": "@@ -1,32 +0,0 @@\n----\n-created: \"2019-07-23T16:11:48.828811567Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"quux\",\n-        source_range: [79; 79),\n-        delete: [79; 79),\n-        insert: \"quux($0)\",\n-        kind: Function,\n-        detail: \"fn quux(x: i32)\",\n-    },\n-    CompletionItem {\n-        label: \"x\",\n-        source_range: [79; 79),\n-        delete: [79; 79),\n-        insert: \"x\",\n-        kind: Binding,\n-        detail: \"i32\",\n-    },\n-    CompletionItem {\n-        label: \"y\",\n-        source_range: [79; 79),\n-        delete: [79; 79),\n-        insert: \"y\",\n-        kind: Binding,\n-        detail: \"i32\",\n-    },\n-]"}, {"sha": "b339c6c5f9b220188c917ef4d090bc7c30d67478", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__completes_prelude.snap", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_prelude.snap", "raw_url": "https://github.com/rust-lang/rust/raw/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_prelude.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_prelude.snap?ref=164ba6092c41fe9b4ecd5bedb5d3d6d849c51639", "patch": "@@ -1,30 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.139262926Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"Option\",\n-        source_range: [18; 18),\n-        delete: [18; 18),\n-        insert: \"Option\",\n-        kind: Struct,\n-    },\n-    CompletionItem {\n-        label: \"foo\",\n-        source_range: [18; 18),\n-        delete: [18; 18),\n-        insert: \"foo()$0\",\n-        kind: Function,\n-        detail: \"fn foo()\",\n-    },\n-    CompletionItem {\n-        label: \"std\",\n-        source_range: [18; 18),\n-        delete: [18; 18),\n-        insert: \"std\",\n-        kind: Module,\n-    },\n-]"}, {"sha": "158a2e5b934133a660b854126fff6f16bd2c9859", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__dont_show_both_completions_for_shadowing.snap", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_show_both_completions_for_shadowing.snap", "raw_url": "https://github.com/rust-lang/rust/raw/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_show_both_completions_for_shadowing.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_show_both_completions_for_shadowing.snap?ref=164ba6092c41fe9b4ecd5bedb5d3d6d849c51639", "patch": "@@ -1,24 +0,0 @@\n----\n-created: \"2019-07-23T16:11:48.860949870Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"bar\",\n-        source_range: [126; 126),\n-        delete: [126; 126),\n-        insert: \"bar\",\n-        kind: Binding,\n-        detail: \"i32\",\n-    },\n-    CompletionItem {\n-        label: \"foo\",\n-        source_range: [126; 126),\n-        delete: [126; 126),\n-        insert: \"foo()$0\",\n-        kind: Function,\n-        detail: \"fn foo()\",\n-    },\n-]"}, {"sha": "b9449a76c11c9cb4e202ca72585b351aabb1e627", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__extern_prelude.snap", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__extern_prelude.snap", "raw_url": "https://github.com/rust-lang/rust/raw/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__extern_prelude.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__extern_prelude.snap?ref=164ba6092c41fe9b4ecd5bedb5d3d6d849c51639", "patch": "@@ -1,15 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.123197049Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"other_crate\",\n-        source_range: [4; 4),\n-        delete: [4; 4),\n-        insert: \"other_crate\",\n-        kind: Module,\n-    },\n-]"}, {"sha": "eb1a4151af6adfa06c960d164edb98126e5541ed", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__generic_params.snap", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__generic_params.snap", "raw_url": "https://github.com/rust-lang/rust/raw/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__generic_params.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__generic_params.snap?ref=164ba6092c41fe9b4ecd5bedb5d3d6d849c51639", "patch": "@@ -1,23 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.123825399Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"T\",\n-        source_range: [44; 44),\n-        delete: [44; 44),\n-        insert: \"T\",\n-        kind: TypeParam,\n-    },\n-    CompletionItem {\n-        label: \"quux\",\n-        source_range: [44; 44),\n-        delete: [44; 44),\n-        insert: \"quux()$0\",\n-        kind: Function,\n-        detail: \"fn quux<T>()\",\n-    },\n-]"}, {"sha": "52f08267f71d09955b71c73d9084c135a7a23be4", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__generic_params_in_struct.snap", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__generic_params_in_struct.snap", "raw_url": "https://github.com/rust-lang/rust/raw/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__generic_params_in_struct.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__generic_params_in_struct.snap?ref=164ba6092c41fe9b4ecd5bedb5d3d6d849c51639", "patch": "@@ -1,22 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.130778739Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"T\",\n-        source_range: [46; 46),\n-        delete: [46; 46),\n-        insert: \"T\",\n-        kind: TypeParam,\n-    },\n-    CompletionItem {\n-        label: \"X\",\n-        source_range: [46; 46),\n-        delete: [46; 46),\n-        insert: \"X\",\n-        kind: Struct,\n-    },\n-]"}, {"sha": "cee4898c3e8b48c97cf7b7705db0e599ce931e7d", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__module_items.snap", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items.snap", "raw_url": "https://github.com/rust-lang/rust/raw/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items.snap?ref=164ba6092c41fe9b4ecd5bedb5d3d6d849c51639", "patch": "@@ -1,30 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.133106898Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"Baz\",\n-        source_range: [89; 89),\n-        delete: [89; 89),\n-        insert: \"Baz\",\n-        kind: Enum,\n-    },\n-    CompletionItem {\n-        label: \"Foo\",\n-        source_range: [89; 89),\n-        delete: [89; 89),\n-        insert: \"Foo\",\n-        kind: Struct,\n-    },\n-    CompletionItem {\n-        label: \"quux\",\n-        source_range: [89; 89),\n-        delete: [89; 89),\n-        insert: \"quux()$0\",\n-        kind: Function,\n-        detail: \"fn quux()\",\n-    },\n-]"}, {"sha": "ce18e5bb7c2d075a9262ee126329e658b0268ea5", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__module_items_in_nested_modules.snap", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items_in_nested_modules.snap", "raw_url": "https://github.com/rust-lang/rust/raw/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items_in_nested_modules.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items_in_nested_modules.snap?ref=164ba6092c41fe9b4ecd5bedb5d3d6d849c51639", "patch": "@@ -1,23 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.134417551Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"Bar\",\n-        source_range: [101; 101),\n-        delete: [101; 101),\n-        insert: \"Bar\",\n-        kind: Struct,\n-    },\n-    CompletionItem {\n-        label: \"quux\",\n-        source_range: [101; 101),\n-        delete: [101; 101),\n-        insert: \"quux()$0\",\n-        kind: Function,\n-        detail: \"fn quux()\",\n-    },\n-]"}, {"sha": "16dd18431b412ac386322f24c66b7db4eaaf495d", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__return_type.snap", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__return_type.snap", "raw_url": "https://github.com/rust-lang/rust/raw/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__return_type.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__return_type.snap?ref=164ba6092c41fe9b4ecd5bedb5d3d6d849c51639", "patch": "@@ -1,23 +0,0 @@\n----\n-created: \"2019-05-23T22:23:35.140648630Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"Foo\",\n-        source_range: [47; 47),\n-        delete: [47; 47),\n-        insert: \"Foo\",\n-        kind: Struct,\n-    },\n-    CompletionItem {\n-        label: \"x\",\n-        source_range: [47; 47),\n-        delete: [47; 47),\n-        insert: \"x()$0\",\n-        kind: Function,\n-        detail: \"fn x()\",\n-    },\n-]"}, {"sha": "b7bcbe864783eb9b10e650d85eee7af5e41d3306", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__self_in_methods.snap", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__self_in_methods.snap", "raw_url": "https://github.com/rust-lang/rust/raw/164ba6092c41fe9b4ecd5bedb5d3d6d849c51639/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__self_in_methods.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__self_in_methods.snap?ref=164ba6092c41fe9b4ecd5bedb5d3d6d849c51639", "patch": "@@ -1,23 +0,0 @@\n----\n-created: \"2019-07-23T16:11:48.859812318Z\"\n-creator: insta@0.8.1\n-source: crates/ra_ide_api/src/completion/completion_item.rs\n-expression: kind_completions\n----\n-[\n-    CompletionItem {\n-        label: \"Self\",\n-        source_range: [25; 25),\n-        delete: [25; 25),\n-        insert: \"Self\",\n-        kind: TypeParam,\n-    },\n-    CompletionItem {\n-        label: \"self\",\n-        source_range: [25; 25),\n-        delete: [25; 25),\n-        insert: \"self\",\n-        kind: Binding,\n-        detail: \"&{unknown}\",\n-    },\n-]"}, {"sha": "9b9f75af0bfe9583ec7a11f29ec279ef4966a48c", "filename": "crates/ra_ide_api/src/references.rs", "status": "modified", "additions": 34, "deletions": 32, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/eb7d1b0feeca276c485b8325df2851756ef861b4/crates%2Fra_ide_api%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb7d1b0feeca276c485b8325df2851756ef861b4/crates%2Fra_ide_api%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Freferences.rs?ref=eb7d1b0feeca276c485b8325df2851756ef861b4", "patch": "@@ -357,38 +357,40 @@ mod tests {\n         let new_name = \"foo2\";\n         let source_change = analysis.rename(position, new_name).unwrap();\n         assert_debug_snapshot_matches!(&source_change,\n-@r#\"Some(\n-    SourceChange {\n-        label: \"rename\",\n-        source_file_edits: [\n-            SourceFileEdit {\n-                file_id: FileId(\n-                    1,\n-                ),\n-                edit: TextEdit {\n-                    atoms: [\n-                        AtomTextEdit {\n-                            delete: [4; 7),\n-                            insert: \"foo2\",\n-                        },\n-                    ],\n-                },\n-            },\n-        ],\n-        file_system_edits: [\n-            MoveFile {\n-                src: FileId(\n-                    2,\n-                ),\n-                dst_source_root: SourceRootId(\n-                    0,\n-                ),\n-                dst_path: \"foo2/mod.rs\",\n-            },\n-        ],\n-        cursor_position: None,\n-    },\n-)\"#);\n+@r###\"\n+       \u22eeSome(\n+       \u22ee    SourceChange {\n+       \u22ee        label: \"rename\",\n+       \u22ee        source_file_edits: [\n+       \u22ee            SourceFileEdit {\n+       \u22ee                file_id: FileId(\n+       \u22ee                    1,\n+       \u22ee                ),\n+       \u22ee                edit: TextEdit {\n+       \u22ee                    atoms: [\n+       \u22ee                        AtomTextEdit {\n+       \u22ee                            delete: [4; 7),\n+       \u22ee                            insert: \"foo2\",\n+       \u22ee                        },\n+       \u22ee                    ],\n+       \u22ee                },\n+       \u22ee            },\n+       \u22ee        ],\n+       \u22ee        file_system_edits: [\n+       \u22ee            MoveFile {\n+       \u22ee                src: FileId(\n+       \u22ee                    2,\n+       \u22ee                ),\n+       \u22ee                dst_source_root: SourceRootId(\n+       \u22ee                    0,\n+       \u22ee                ),\n+       \u22ee                dst_path: \"foo2/mod.rs\",\n+       \u22ee            },\n+       \u22ee        ],\n+       \u22ee        cursor_position: None,\n+       \u22ee    },\n+       \u22ee)\n+        \"###);\n     }\n \n     fn test_rename(text: &str, new_name: &str, expected: &str) {"}]}