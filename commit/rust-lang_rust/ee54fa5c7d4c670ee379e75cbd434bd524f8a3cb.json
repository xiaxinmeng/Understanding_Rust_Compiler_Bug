{"sha": "ee54fa5c7d4c670ee379e75cbd434bd524f8a3cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlNTRmYTVjN2Q0YzY3MGVlMzc5ZTc1Y2JkNDM0YmQ1MjRmOGEzY2I=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-06T20:33:42Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-06T20:36:01Z"}, "message": "Implement enough support for pointer to get an identity function working.", "tree": {"sha": "1120f4671cafd8304ac29634b26f79bda0edcaf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1120f4671cafd8304ac29634b26f79bda0edcaf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee54fa5c7d4c670ee379e75cbd434bd524f8a3cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee54fa5c7d4c670ee379e75cbd434bd524f8a3cb", "html_url": "https://github.com/rust-lang/rust/commit/ee54fa5c7d4c670ee379e75cbd434bd524f8a3cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee54fa5c7d4c670ee379e75cbd434bd524f8a3cb/comments", "author": null, "committer": null, "parents": [{"sha": "4bd5f834b0a259a3ca39c881f81f01f16c65e066", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bd5f834b0a259a3ca39c881f81f01f16c65e066", "html_url": "https://github.com/rust-lang/rust/commit/4bd5f834b0a259a3ca39c881f81f01f16c65e066"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "9095f9e9c5277869aa5c1d67ce6c0aba9c023eb8", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee54fa5c7d4c670ee379e75cbd434bd524f8a3cb/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee54fa5c7d4c670ee379e75cbd434bd524f8a3cb/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=ee54fa5c7d4c670ee379e75cbd434bd524f8a3cb", "patch": "@@ -615,6 +615,7 @@ fn ty_to_str(&ctxt cx, &t typ) -> str {\n         case (ty_char)         { s += \"char\";                           }\n         case (ty_str)          { s += \"str\";                            }\n         case (ty_box(?tm))     { s += \"@\" + mt_to_str(cx, tm);          }\n+        case (ty_ptr(?tm))     { s += \"*\" + mt_to_str(cx, tm);          }\n         case (ty_vec(?tm))     { s += \"vec[\" + mt_to_str(cx, tm) + \"]\"; }\n         case (ty_port(?t))     { s += \"port[\" + ty_to_str(cx, t) + \"]\"; }\n         case (ty_chan(?t))     { s += \"chan[\" + ty_to_str(cx, t) + \"]\"; }\n@@ -781,6 +782,10 @@ fn fold_ty(&ctxt cx, ty_fold fld, t ty_0) -> t {\n             ty = copy_cname(cx, mk_box(cx, rec(ty=fold_ty(cx, fld, tm.ty),\n                                                mut=tm.mut)), ty);\n         }\n+        case (ty_ptr(?tm)) {\n+            ty = copy_cname(cx, mk_ptr(cx, rec(ty=fold_ty(cx, fld, tm.ty),\n+                                               mut=tm.mut)), ty);\n+        }\n         case (ty_vec(?tm)) {\n             ty = copy_cname(cx, mk_vec(cx, rec(ty=fold_ty(cx, fld, tm.ty),\n                                                           mut=tm.mut)), ty);\n@@ -978,6 +983,7 @@ fn type_is_scalar(&ctxt cx, &t ty) -> bool {\n         case (ty_char) { ret true; }\n         case (ty_type) { ret true; }\n         case (ty_native) { ret true; }\n+        case (ty_ptr(_)) { ret true; }\n         case (_) { ret false; }\n     }\n }"}, {"sha": "3743fb115e8849574b76e07fe265604ddbd004ba", "filename": "src/test/run-pass/type-ptr.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ee54fa5c7d4c670ee379e75cbd434bd524f8a3cb/src%2Ftest%2Frun-pass%2Ftype-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee54fa5c7d4c670ee379e75cbd434bd524f8a3cb/src%2Ftest%2Frun-pass%2Ftype-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-ptr.rs?ref=ee54fa5c7d4c670ee379e75cbd434bd524f8a3cb", "patch": "@@ -1,4 +1,10 @@\n-fn f(*int a) {\n+fn f(*int a) -> *int {\n+   ret a;\n+}\n+\n+fn g(*int a) -> *int {\n+   auto b = f(a);\n+   ret b;\n }\n \n fn main(vec[str] args) {"}]}