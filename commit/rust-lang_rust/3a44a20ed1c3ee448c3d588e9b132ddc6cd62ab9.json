{"sha": "3a44a20ed1c3ee448c3d588e9b132ddc6cd62ab9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhNDRhMjBlZDFjM2VlNDQ4YzNkNTg4ZTliMTMyZGRjNmNkNjJhYjk=", "commit": {"author": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-12-27T23:59:00Z"}, "committer": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2021-01-01T16:59:12Z"}, "message": "The proper name for the rule is \"enclosing scope\"", "tree": {"sha": "08d734411be5ed83e6e33cc420e98884f24266cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08d734411be5ed83e6e33cc420e98884f24266cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a44a20ed1c3ee448c3d588e9b132ddc6cd62ab9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a44a20ed1c3ee448c3d588e9b132ddc6cd62ab9", "html_url": "https://github.com/rust-lang/rust/commit/3a44a20ed1c3ee448c3d588e9b132ddc6cd62ab9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a44a20ed1c3ee448c3d588e9b132ddc6cd62ab9/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b841846ba467f0fe4ec1ee152414e3ae8f7d88e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b841846ba467f0fe4ec1ee152414e3ae8f7d88e", "html_url": "https://github.com/rust-lang/rust/commit/0b841846ba467f0fe4ec1ee152414e3ae8f7d88e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c2c54c9406122e569694a19a1c622ba04f236521", "filename": "compiler/rustc_mir/src/transform/check_consts/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a44a20ed1c3ee448c3d588e9b132ddc6cd62ab9/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a44a20ed1c3ee448c3d588e9b132ddc6cd62ab9/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=3a44a20ed1c3ee448c3d588e9b132ddc6cd62ab9", "patch": "@@ -582,7 +582,7 @@ impl Visitor<'tcx> for Validator<'mir, 'tcx> {\n                 );\n \n                 if borrowed_place_has_mut_interior {\n-                    // Locals without StorageDead follow the \"trailing expression\" rule, meaning\n+                    // Locals without StorageDead follow the \"enclosing scope\" rule, meaning\n                     // they are essentially anonymous static items themselves.\n                     if self.local_has_storage_dead(place.local) {\n                         self.check_op(ops::CellBorrowBehindRef);"}]}