{"sha": "37b38a2f750c95aa653ced2a33c13c9060129800", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3YjM4YTJmNzUwYzk1YWE2NTNjZWQyYTMzYzEzYzkwNjAxMjk4MDA=", "commit": {"author": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2017-03-15T04:04:54Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-03-17T20:28:37Z"}, "message": "Stabilize btree_range, closes #27787", "tree": {"sha": "ff4e3f1b99edaf47c8349b4552e28ae13bde0714", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff4e3f1b99edaf47c8349b4552e28ae13bde0714"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37b38a2f750c95aa653ced2a33c13c9060129800", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37b38a2f750c95aa653ced2a33c13c9060129800", "html_url": "https://github.com/rust-lang/rust/commit/37b38a2f750c95aa653ced2a33c13c9060129800", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37b38a2f750c95aa653ced2a33c13c9060129800/comments", "author": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10510aefb10aaad9e9c382acf973a40938d091ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/10510aefb10aaad9e9c382acf973a40938d091ad", "html_url": "https://github.com/rust-lang/rust/commit/10510aefb10aaad9e9c382acf973a40938d091ad"}], "stats": {"total": 14, "additions": 3, "deletions": 11}, "files": [{"sha": "a746175a5e98298b3572a4378c9c088c18e3c359", "filename": "src/libcollections/btree/map.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/37b38a2f750c95aa653ced2a33c13c9060129800/src%2Flibcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37b38a2f750c95aa653ced2a33c13c9060129800/src%2Flibcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fmap.rs?ref=37b38a2f750c95aa653ced2a33c13c9060129800", "patch": "@@ -724,8 +724,6 @@ impl<K: Ord, V> BTreeMap<K, V> {\n     /// Basic usage:\n     ///\n     /// ```\n-    /// #![feature(btree_range, collections_bound)]\n-    ///\n     /// use std::collections::BTreeMap;\n     /// use std::collections::Bound::Included;\n     ///\n@@ -738,9 +736,7 @@ impl<K: Ord, V> BTreeMap<K, V> {\n     /// }\n     /// assert_eq!(Some((&5, &\"b\")), map.range(4..).next());\n     /// ```\n-    #[unstable(feature = \"btree_range\",\n-               reason = \"matches collection reform specification, waiting for dust to settle\",\n-               issue = \"27787\")]\n+    #[stable(feature = \"btree_range\", since = \"1.17.0\")]\n     pub fn range<T: ?Sized, R>(&self, range: R) -> Range<K, V>\n         where T: Ord, K: Borrow<T>, R: RangeArgument<T>\n     {\n@@ -768,8 +764,6 @@ impl<K: Ord, V> BTreeMap<K, V> {\n     /// Basic usage:\n     ///\n     /// ```\n-    /// #![feature(btree_range)]\n-    ///\n     /// use std::collections::BTreeMap;\n     ///\n     /// let mut map: BTreeMap<&str, i32> = [\"Alice\", \"Bob\", \"Carol\", \"Cheryl\"].iter()\n@@ -782,9 +776,7 @@ impl<K: Ord, V> BTreeMap<K, V> {\n     ///     println!(\"{} => {}\", name, balance);\n     /// }\n     /// ```\n-    #[unstable(feature = \"btree_range\",\n-               reason = \"matches collection reform specification, waiting for dust to settle\",\n-               issue = \"27787\")]\n+    #[stable(feature = \"btree_range\", since = \"1.17.0\")]\n     pub fn range_mut<T: ?Sized, R>(&mut self, range: R) -> RangeMut<K, V>\n         where T: Ord, K: Borrow<T>, R: RangeArgument<T>\n     {"}, {"sha": "a64fffab45c5a05879e0e0076c0f59d76f3d7e53", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37b38a2f750c95aa653ced2a33c13c9060129800/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37b38a2f750c95aa653ced2a33c13c9060129800/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=37b38a2f750c95aa653ced2a33c13c9060129800", "patch": "@@ -129,7 +129,7 @@ mod std {\n }\n \n /// An endpoint of a range of keys.\n-#[unstable(feature = \"collections_bound\", issue = \"27787\")]\n+#[stable(feature = \"collections_bound\", since = \"1.17.0\")]\n #[derive(Clone, Copy, Debug, Hash, PartialEq, Eq)]\n pub enum Bound<T> {\n     /// An inclusive bound."}]}