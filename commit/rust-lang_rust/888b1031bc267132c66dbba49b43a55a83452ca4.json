{"sha": "888b1031bc267132c66dbba49b43a55a83452ca4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4OGIxMDMxYmMyNjcxMzJjNjZkYmJhNDliNDNhNTVhODM0NTJjYTQ=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-10-14T23:51:47Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-11-13T21:38:27Z"}, "message": "limit visibility of copy offload helpers to sys::unix module", "tree": {"sha": "8121d47d93ef8d824af665d66f388f1482e1f62d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8121d47d93ef8d824af665d66f388f1482e1f62d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/888b1031bc267132c66dbba49b43a55a83452ca4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/888b1031bc267132c66dbba49b43a55a83452ca4", "html_url": "https://github.com/rust-lang/rust/commit/888b1031bc267132c66dbba49b43a55a83452ca4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/888b1031bc267132c66dbba49b43a55a83452ca4/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18bfe2a66beb79f912f8d1e344dda5f054cdd9c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/18bfe2a66beb79f912f8d1e344dda5f054cdd9c3", "html_url": "https://github.com/rust-lang/rust/commit/18bfe2a66beb79f912f8d1e344dda5f054cdd9c3"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "b88bca2f2b4ff04a6140f439f818a6e1f6da2fca", "filename": "library/std/src/io/copy.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/888b1031bc267132c66dbba49b43a55a83452ca4/library%2Fstd%2Fsrc%2Fio%2Fcopy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/888b1031bc267132c66dbba49b43a55a83452ca4/library%2Fstd%2Fsrc%2Fio%2Fcopy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fcopy.rs?ref=888b1031bc267132c66dbba49b43a55a83452ca4", "patch": "@@ -1,9 +1,6 @@\n use crate::io::{self, ErrorKind, Read, Write};\n use crate::mem::MaybeUninit;\n \n-#[cfg(all(test, unix))]\n-mod tests;\n-\n /// Copies the entire contents of a reader into a writer.\n ///\n /// This function will continuously read data from `reader` and then"}, {"sha": "0b162f9b30074e6b33db19e8a45d0d43d4cf08b6", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/888b1031bc267132c66dbba49b43a55a83452ca4/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/888b1031bc267132c66dbba49b43a55a83452ca4/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=888b1031bc267132c66dbba49b43a55a83452ca4", "patch": "@@ -1214,7 +1214,7 @@ pub fn copy(from: &Path, to: &Path) -> io::Result<u64> {\n /// if one of the files' cursor +`max_len` would exceed u64::MAX (`EOVERFLOW`).\n /// If the initial file offset was 0 then `Fallback` will only contain `0`.\n #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n-pub(crate) fn copy_regular_files(reader: RawFd, writer: RawFd, max_len: u64) -> CopyResult {\n+pub(super) fn copy_regular_files(reader: RawFd, writer: RawFd, max_len: u64) -> CopyResult {\n     use crate::cmp;\n     use crate::sync::atomic::{AtomicBool, Ordering};\n \n@@ -1302,20 +1302,20 @@ pub(crate) fn copy_regular_files(reader: RawFd, writer: RawFd, max_len: u64) ->\n }\n \n #[derive(PartialEq)]\n-pub(crate) enum SpliceMode {\n+pub(super) enum SpliceMode {\n     Sendfile,\n     Splice,\n }\n \n-pub(crate) enum CopyResult {\n+pub(super) enum CopyResult {\n     Ended(io::Result<u64>),\n     Fallback(u64),\n }\n \n /// performs splice or sendfile between file descriptors\n /// Does _not_ fall back to a generic copy loop.\n #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n-pub(crate) fn sendfile_splice(\n+pub(super) fn sendfile_splice(\n     mode: SpliceMode,\n     reader: RawFd,\n     writer: RawFd,"}, {"sha": "d0a9401b30f9feba2633c59aaa6717fc8689d203", "filename": "library/std/src/sys/unix/kernel_copy.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/888b1031bc267132c66dbba49b43a55a83452ca4/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/888b1031bc267132c66dbba49b43a55a83452ca4/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy.rs?ref=888b1031bc267132c66dbba49b43a55a83452ca4", "patch": "@@ -58,6 +58,9 @@ use crate::os::unix::io::{AsRawFd, FromRawFd, RawFd};\n use crate::process::{ChildStderr, ChildStdin, ChildStdout};\n use crate::sys::fs::{copy_regular_files, sendfile_splice, CopyResult, SpliceMode};\n \n+#[cfg(test)]\n+mod tests;\n+\n pub(crate) fn copy_spec<R: Read + ?Sized, W: Write + ?Sized>(\n     read: &mut R,\n     write: &mut W,"}, {"sha": "fcff5fa934d1c23b40a82fba168121e990408b50", "filename": "library/std/src/sys/unix/kernel_copy/tests.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/888b1031bc267132c66dbba49b43a55a83452ca4/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/888b1031bc267132c66dbba49b43a55a83452ca4/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fkernel_copy%2Ftests.rs?ref=888b1031bc267132c66dbba49b43a55a83452ca4", "previous_filename": "library/std/src/io/copy/tests.rs"}]}