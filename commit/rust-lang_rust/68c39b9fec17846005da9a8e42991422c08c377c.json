{"sha": "68c39b9fec17846005da9a8e42991422c08c377c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4YzM5YjlmZWMxNzg0NjAwNWRhOWE4ZTQyOTkxNDIyYzA4YzM3N2M=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-13T03:40:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-13T03:40:33Z"}, "message": "Auto merge of #52275 - alexcrichton:no-macro-use, r=nrc\n\nrustc: Lint against `#[macro_use]` in 2018 idioms\n\nThis commit adds a lint to the compiler to warn against the `#[macro_use]`\ndirective as part of the `rust_2018_idioms` lint. This lint is turned off by\ndefault and is only enabled when the `use_extern_macros` feature is also\nenabled.\n\nThe lint here isn't fully fleshed out as it's just a simple warning rather than\nsuggestions of how to actually import the macro, but hopefully it's a good base\nto start from!\n\ncc #52043", "tree": {"sha": "ff3bab41b7bd920d7b603deb1d7ba147ac58e958", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff3bab41b7bd920d7b603deb1d7ba147ac58e958"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68c39b9fec17846005da9a8e42991422c08c377c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68c39b9fec17846005da9a8e42991422c08c377c", "html_url": "https://github.com/rust-lang/rust/commit/68c39b9fec17846005da9a8e42991422c08c377c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68c39b9fec17846005da9a8e42991422c08c377c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e92e9ce0d8383ac0126467294575401c00e3b60a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e92e9ce0d8383ac0126467294575401c00e3b60a", "html_url": "https://github.com/rust-lang/rust/commit/e92e9ce0d8383ac0126467294575401c00e3b60a"}, {"sha": "0b969a9d68b29fa53fb0595beb319036210d9e73", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b969a9d68b29fa53fb0595beb319036210d9e73", "html_url": "https://github.com/rust-lang/rust/commit/0b969a9d68b29fa53fb0595beb319036210d9e73"}], "stats": {"total": 100, "additions": 99, "deletions": 1}, "files": [{"sha": "a46b31206224732568d9094dacb59c764fe8aff2", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/68c39b9fec17846005da9a8e42991422c08c377c/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68c39b9fec17846005da9a8e42991422c08c377c/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=68c39b9fec17846005da9a8e42991422c08c377c", "patch": "@@ -322,6 +322,13 @@ declare_lint! {\n     \"detects proc macro derives using inaccessible names from parent modules\"\n }\n \n+declare_lint! {\n+    pub MACRO_USE_EXTERN_CRATE,\n+    Allow,\n+    \"the `#[macro_use]` attribute is now deprecated in favor of using macros \\\n+     via the module system\"\n+}\n+\n /// Does nothing as a lint pass, but registers some `Lint`s\n /// which are used by other parts of the compiler.\n #[derive(Copy, Clone)]\n@@ -379,6 +386,7 @@ impl LintPass for HardwiredLints {\n             INTRA_DOC_LINK_RESOLUTION_FAILURE,\n             WHERE_CLAUSES_OBJECT_SAFETY,\n             PROC_MACRO_DERIVE_RESOLUTION_FALLBACK,\n+            MACRO_USE_EXTERN_CRATE,\n         )\n     }\n }"}, {"sha": "5348a47eed628cd080f8d5dda578d29ba8e0328d", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/68c39b9fec17846005da9a8e42991422c08c377c/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68c39b9fec17846005da9a8e42991422c08c377c/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=68c39b9fec17846005da9a8e42991422c08c377c", "patch": "@@ -43,6 +43,7 @@ extern crate syntax_pos;\n use rustc::lint;\n use rustc::lint::{LateContext, LateLintPass, LintPass, LintArray};\n use rustc::lint::builtin::{BARE_TRAIT_OBJECTS, ABSOLUTE_PATHS_NOT_STARTING_WITH_CRATE};\n+use rustc::lint::builtin::MACRO_USE_EXTERN_CRATE;\n use rustc::session;\n use rustc::util;\n use rustc::hir;\n@@ -179,6 +180,7 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n                     BARE_TRAIT_OBJECTS,\n                     UNREACHABLE_PUB,\n                     UNUSED_EXTERN_CRATES,\n+                    MACRO_USE_EXTERN_CRATE,\n                     ELLIPSIS_INCLUSIVE_RANGE_PATTERNS);\n \n     // Guidelines for creating a future incompatibility lint:"}, {"sha": "ef24a201e0f5b2fe668307ec7409a7f24e58344d", "filename": "src/librustc_resolve/check_unused.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/68c39b9fec17846005da9a8e42991422c08c377c/src%2Flibrustc_resolve%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68c39b9fec17846005da9a8e42991422c08c377c/src%2Flibrustc_resolve%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fcheck_unused.rs?ref=68c39b9fec17846005da9a8e42991422c08c377c", "patch": "@@ -129,7 +129,22 @@ pub fn check_crate(resolver: &mut Resolver, krate: &ast::Crate) {\n         match directive.subclass {\n             _ if directive.used.get() ||\n                  directive.vis.get() == ty::Visibility::Public ||\n-                 directive.span.is_dummy() => {}\n+                 directive.span.is_dummy() => {\n+                if let ImportDirectiveSubclass::MacroUse = directive.subclass {\n+                    if resolver.session.features_untracked().use_extern_macros &&\n+                        !directive.span.is_dummy() {\n+                        resolver.session.buffer_lint(\n+                            lint::builtin::MACRO_USE_EXTERN_CRATE,\n+                            directive.id,\n+                            directive.span,\n+                            \"deprecated `#[macro_use]` directive used to \\\n+                             import macros should be replaced at use sites \\\n+                             with a `use` statement to import the macro \\\n+                             instead\",\n+                        );\n+                    }\n+                }\n+            }\n             ImportDirectiveSubclass::ExternCrate(_) => {\n                 resolver.maybe_unused_extern_crates.push((directive.id, directive.span));\n             }"}, {"sha": "9487fd808cdfd4ae711b4dedc352f0bcbcf5a642", "filename": "src/test/ui/rust-2018/auxiliary/macro-use-warned-against.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/68c39b9fec17846005da9a8e42991422c08c377c/src%2Ftest%2Fui%2Frust-2018%2Fauxiliary%2Fmacro-use-warned-against.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68c39b9fec17846005da9a8e42991422c08c377c/src%2Ftest%2Fui%2Frust-2018%2Fauxiliary%2Fmacro-use-warned-against.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fauxiliary%2Fmacro-use-warned-against.rs?ref=68c39b9fec17846005da9a8e42991422c08c377c", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[macro_export]\n+macro_rules! foo { () => () }"}, {"sha": "6391db85dc5134bdf64adad0dd08d3289261add7", "filename": "src/test/ui/rust-2018/auxiliary/macro-use-warned-against2.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/68c39b9fec17846005da9a8e42991422c08c377c/src%2Ftest%2Fui%2Frust-2018%2Fauxiliary%2Fmacro-use-warned-against2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68c39b9fec17846005da9a8e42991422c08c377c/src%2Ftest%2Fui%2Frust-2018%2Fauxiliary%2Fmacro-use-warned-against2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fauxiliary%2Fmacro-use-warned-against2.rs?ref=68c39b9fec17846005da9a8e42991422c08c377c", "patch": "@@ -0,0 +1,10 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+"}, {"sha": "f7a6b560280800892b5c2c58766f6e03539b1011", "filename": "src/test/ui/rust-2018/macro-use-warned-against.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/68c39b9fec17846005da9a8e42991422c08c377c/src%2Ftest%2Fui%2Frust-2018%2Fmacro-use-warned-against.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68c39b9fec17846005da9a8e42991422c08c377c/src%2Ftest%2Fui%2Frust-2018%2Fmacro-use-warned-against.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fmacro-use-warned-against.rs?ref=68c39b9fec17846005da9a8e42991422c08c377c", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:macro-use-warned-against.rs\n+// aux-build:macro-use-warned-against2.rs\n+// compile-pass\n+\n+#![warn(rust_2018_idioms, unused)]\n+#![feature(use_extern_macros)]\n+\n+#[macro_use] //~ WARN should be replaced at use sites with a `use` statement\n+extern crate macro_use_warned_against;\n+#[macro_use] //~ WARN unused `#[macro_use]`\n+extern crate macro_use_warned_against2;\n+\n+fn main() {\n+    foo!();\n+}"}, {"sha": "bebad31510f566e5849104bef3e73fc84cc9e092", "filename": "src/test/ui/rust-2018/macro-use-warned-against.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/68c39b9fec17846005da9a8e42991422c08c377c/src%2Ftest%2Fui%2Frust-2018%2Fmacro-use-warned-against.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68c39b9fec17846005da9a8e42991422c08c377c/src%2Ftest%2Fui%2Frust-2018%2Fmacro-use-warned-against.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fmacro-use-warned-against.stderr?ref=68c39b9fec17846005da9a8e42991422c08c377c", "patch": "@@ -0,0 +1,26 @@\n+warning: deprecated `#[macro_use]` directive used to import macros should be replaced at use sites with a `use` statement to import the macro instead\n+  --> $DIR/macro-use-warned-against.rs:18:1\n+   |\n+LL | #[macro_use] //~ WARN should be replaced at use sites with a `use` statement\n+   | ^^^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/macro-use-warned-against.rs:15:9\n+   |\n+LL | #![warn(rust_2018_idioms, unused)]\n+   |         ^^^^^^^^^^^^^^^^\n+   = note: #[warn(macro_use_extern_crate)] implied by #[warn(rust_2018_idioms)]\n+\n+warning: unused `#[macro_use]` import\n+  --> $DIR/macro-use-warned-against.rs:20:1\n+   |\n+LL | #[macro_use] //~ WARN unused `#[macro_use]`\n+   | ^^^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/macro-use-warned-against.rs:15:27\n+   |\n+LL | #![warn(rust_2018_idioms, unused)]\n+   |                           ^^^^^^\n+   = note: #[warn(unused_imports)] implied by #[warn(unused)]\n+"}]}