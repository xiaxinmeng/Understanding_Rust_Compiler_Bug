{"sha": "9f9efae790bba41f08befc2af47ef235b03dd8a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmOWVmYWU3OTBiYmE0MWYwOGJlZmMyYWY0N2VmMjM1YjAzZGQ4YTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-26T18:57:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-26T18:57:01Z"}, "message": "auto merge of #10673 : klutzy/rust/quite, r=alexcrichton", "tree": {"sha": "fa78e0a79409ae8ab0f890675e079578041fbee5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa78e0a79409ae8ab0f890675e079578041fbee5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f9efae790bba41f08befc2af47ef235b03dd8a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f9efae790bba41f08befc2af47ef235b03dd8a9", "html_url": "https://github.com/rust-lang/rust/commit/9f9efae790bba41f08befc2af47ef235b03dd8a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f9efae790bba41f08befc2af47ef235b03dd8a9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e03f17eb214e925b15f2c684ddb69a48fbd3d8f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e03f17eb214e925b15f2c684ddb69a48fbd3d8f2", "html_url": "https://github.com/rust-lang/rust/commit/e03f17eb214e925b15f2c684ddb69a48fbd3d8f2"}, {"sha": "5b429622befc7838c9ea7d52d1e447bc0af6d0c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b429622befc7838c9ea7d52d1e447bc0af6d0c8", "html_url": "https://github.com/rust-lang/rust/commit/5b429622befc7838c9ea7d52d1e447bc0af6d0c8"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "5815e5448aee17dd7c433a2b1289cbcba0c778cc", "filename": "src/etc/combine-tests.py", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9f9efae790bba41f08befc2af47ef235b03dd8a9/src%2Fetc%2Fcombine-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/9f9efae790bba41f08befc2af47ef235b03dd8a9/src%2Fetc%2Fcombine-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcombine-tests.py?ref=9f9efae790bba41f08befc2af47ef235b03dd8a9", "patch": "@@ -5,25 +5,28 @@\n # can run it \"fast\": spawning zillions of windows processes is our major build\n # bottleneck (and it doesn't hurt to run faster on other platforms as well).\n \n-import sys, os, re, codecs\n+import sys\n+import os\n+import codecs\n+\n \n def scrub(b):\n-  if sys.version_info >= (3,) and type(b) == bytes:\n-    return b.decode('ascii')\n-  else:\n-    return b\n+    if sys.version_info >= (3,) and type(b) == bytes:\n+        return b.decode('ascii')\n+    else:\n+        return b\n \n src_dir = scrub(os.getenv(\"CFG_SRC_DIR\"))\n if not src_dir:\n-  raise Exception(\"missing env var CFG_SRC_DIR\")\n+    raise Exception(\"missing env var CFG_SRC_DIR\")\n \n run_pass = os.path.join(src_dir, \"src\", \"test\", \"run-pass\")\n run_pass = os.path.abspath(run_pass)\n stage2_tests = []\n \n for t in os.listdir(run_pass):\n     if t.endswith(\".rs\") and not (\n-      t.startswith(\".\") or t.startswith(\"#\") or t.startswith(\"~\")):\n+            t.startswith(\".\") or t.startswith(\"#\") or t.startswith(\"~\")):\n         f = codecs.open(os.path.join(run_pass, t), \"r\", \"utf8\")\n         s = f.read()\n         if not (\"xfail-test\" in s or\n@@ -41,10 +44,11 @@ def scrub(b):\n c.write(\"// AUTO-GENERATED FILE: DO NOT EDIT\\n\")\n c.write(\"#[link(name=\\\"run_pass_stage2\\\", vers=\\\"0.1\\\")];\\n\")\n c.write(\"#[feature(globs, macro_rules, struct_variant, managed_boxes)];\\n\")\n+c.write(\"#[allow(attribute_usage)];\\n\")\n for t in stage2_tests:\n     p = os.path.join(run_pass, t)\n     p = p.replace(\"\\\\\", \"\\\\\\\\\")\n-    c.write(\"#[path = \\\"%s\\\"]\" % p);\n+    c.write(\"#[path = \\\"%s\\\"]\" % p)\n     c.write(\"pub mod t_%d;\\n\" % i)\n     i += 1\n c.close()\n@@ -56,10 +60,10 @@ def scrub(b):\n d.write(\"extern mod extra;\\n\")\n d.write(\"extern mod run_pass_stage2;\\n\")\n d.write(\"use run_pass_stage2::*;\\n\")\n-d.write(\"use std::io;\\n\");\n-d.write(\"use std::io::Writer;\\n\");\n-d.write(\"fn main() {\\n\");\n-d.write(\"    let mut out = io::stdout();\\n\");\n+d.write(\"use std::io;\\n\")\n+d.write(\"use std::io::Writer;\\n\")\n+d.write(\"fn main() {\\n\")\n+d.write(\"    let mut out = io::stdout();\\n\")\n i = 0\n for t in stage2_tests:\n     p = os.path.join(\"test\", \"run-pass\", t)"}]}