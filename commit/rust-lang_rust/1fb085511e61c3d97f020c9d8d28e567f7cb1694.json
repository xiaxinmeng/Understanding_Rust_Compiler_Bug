{"sha": "1fb085511e61c3d97f020c9d8d28e567f7cb1694", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmYjA4NTUxMWU2MWMzZDk3ZjAyMGM5ZDhkMjhlNTY3ZjdjYjE2OTQ=", "commit": {"author": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2018-09-11T14:30:16Z"}, "committer": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2018-10-24T12:59:06Z"}, "message": "Make declare_fn aware of vtable shims.", "tree": {"sha": "710ecbcb199eeeeda302f32f52ec8e176eebdacb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/710ecbcb199eeeeda302f32f52ec8e176eebdacb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fb085511e61c3d97f020c9d8d28e567f7cb1694", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fb085511e61c3d97f020c9d8d28e567f7cb1694", "html_url": "https://github.com/rust-lang/rust/commit/1fb085511e61c3d97f020c9d8d28e567f7cb1694", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fb085511e61c3d97f020c9d8d28e567f7cb1694/comments", "author": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe3f606cda083aec9564add4f7ff6ed4c4a0fff7", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe3f606cda083aec9564add4f7ff6ed4c4a0fff7", "html_url": "https://github.com/rust-lang/rust/commit/fe3f606cda083aec9564add4f7ff6ed4c4a0fff7"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "82d85b6ead485d23e0742b684a1f4e8a6c428344", "filename": "src/librustc_codegen_llvm/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fb085511e61c3d97f020c9d8d28e567f7cb1694/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fb085511e61c3d97f020c9d8d28e567f7cb1694/src%2Flibrustc_codegen_llvm%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcallee.rs?ref=1fb085511e61c3d97f020c9d8d28e567f7cb1694", "patch": "@@ -91,7 +91,7 @@ pub fn get_fn(\n             llfn\n         }\n     } else {\n-        let llfn = declare::declare_fn(cx, &sym, fn_ty);\n+        let llfn = declare::declare_fn(cx, &sym, fn_ty, instance.is_vtable_shim());\n         assert_eq!(common::val_ty(llfn), llptrty);\n         debug!(\"get_fn: not casting pointer!\");\n "}, {"sha": "8087f130afaa0089b62d7708abbeb5f484407d67", "filename": "src/librustc_codegen_llvm/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fb085511e61c3d97f020c9d8d28e567f7cb1694/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fb085511e61c3d97f020c9d8d28e567f7cb1694/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcontext.rs?ref=1fb085511e61c3d97f020c9d8d28e567f7cb1694", "patch": "@@ -412,7 +412,7 @@ impl<'b, 'tcx> CodegenCx<'b, 'tcx> {\n             Abi::C\n         )));\n \n-        let llfn = declare::declare_fn(self, \"rust_eh_unwind_resume\", ty);\n+        let llfn = declare::declare_fn(self, \"rust_eh_unwind_resume\", ty, false);\n         attributes::unwind(llfn, true);\n         attributes::apply_target_cpu_attr(self, llfn);\n         unwresume.set(Some(llfn));"}, {"sha": "0d01e9ef7ddabe47ef0c051031f256119c94d187", "filename": "src/librustc_codegen_llvm/declare.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1fb085511e61c3d97f020c9d8d28e567f7cb1694/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fb085511e61c3d97f020c9d8d28e567f7cb1694/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdeclare.rs?ref=1fb085511e61c3d97f020c9d8d28e567f7cb1694", "patch": "@@ -130,9 +130,11 @@ pub fn declare_fn(\n     cx: &CodegenCx<'ll, 'tcx>,\n     name: &str,\n     fn_type: Ty<'tcx>,\n+    is_vtable_shim: bool,\n ) -> &'ll Value {\n-    debug!(\"declare_rust_fn(name={:?}, fn_type={:?})\", name, fn_type);\n-    let sig = common::ty_fn_sig(cx, fn_type);\n+    debug!(\"declare_rust_fn(name={:?}, fn_type={:?}, is_vtable_shim={:?})\",\n+           name, fn_type, is_vtable_shim);\n+    let sig = common::ty_fn_sig_vtable(cx, fn_type, is_vtable_shim);\n     let sig = cx.tcx.normalize_erasing_late_bound_regions(ty::ParamEnv::reveal_all(), &sig);\n     debug!(\"declare_rust_fn (after region erasure) sig={:?}\", sig);\n \n@@ -189,7 +191,7 @@ pub fn define_fn(\n     if get_defined_value(cx, name).is_some() {\n         cx.sess().fatal(&format!(\"symbol `{}` already defined\", name))\n     } else {\n-        declare_fn(cx, name, fn_type)\n+        declare_fn(cx, name, fn_type, false)\n     }\n }\n "}, {"sha": "aab8613b7561952f1fe9409c02d11939300d6531", "filename": "src/librustc_codegen_llvm/mono_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fb085511e61c3d97f020c9d8d28e567f7cb1694/src%2Flibrustc_codegen_llvm%2Fmono_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fb085511e61c3d97f020c9d8d28e567f7cb1694/src%2Flibrustc_codegen_llvm%2Fmono_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmono_item.rs?ref=1fb085511e61c3d97f020c9d8d28e567f7cb1694", "patch": "@@ -155,7 +155,7 @@ fn predefine_fn<'a, 'tcx>(cx: &CodegenCx<'a, 'tcx>,\n \n     let mono_ty = instance.ty(cx.tcx);\n     let attrs = cx.tcx.codegen_fn_attrs(instance.def_id());\n-    let lldecl = declare::declare_fn(cx, symbol_name, mono_ty);\n+    let lldecl = declare::declare_fn(cx, symbol_name, mono_ty, instance.is_vtable_shim());\n     unsafe { llvm::LLVMRustSetLinkage(lldecl, base::linkage_to_llvm(linkage)) };\n     base::set_link_section(lldecl, &attrs);\n     if linkage == Linkage::LinkOnceODR ||"}]}