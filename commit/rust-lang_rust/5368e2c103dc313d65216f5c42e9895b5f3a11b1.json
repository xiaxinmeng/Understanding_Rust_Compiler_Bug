{"sha": "5368e2c103dc313d65216f5c42e9895b5f3a11b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzNjhlMmMxMDNkYzMxM2Q2NTIxNmY1YzQyZTk4OTViNWYzYTExYjE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-12T22:55:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-12T22:55:02Z"}, "message": "Merge #7989\n\n7989: Remove `ItemTree::source` r=jonas-schievink a=jonas-schievink\n\n`HasSource` should be used instead\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "59b4da5ee127a337cf516151127f900b8920001d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59b4da5ee127a337cf516151127f900b8920001d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5368e2c103dc313d65216f5c42e9895b5f3a11b1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgS/FGCRBK7hj4Ov3rIwAAdHIIABaGmSy6YjMH2eoVWFl6YZQp\nITX0LauE56LnmGnzCRVxYR6nT27pn2eVzpw+wKPUIovy1ks/z2rrYkLVwAq2FFJL\nbGNFLVG7gsaGB4xnoL7YcSZgFNsdsFzmhYg8HDySSJvBXEITpezKU28gZ048++Mh\nBWT/NKJMZfxcULzdLkgo/ZYAov5xGKyPeF61t0DLopjHf56vq5BkQqEbhjo1puN9\n3G80QuAeAchTKs7ETNGRnxl7twSE7oRts4TSUHmuz0ChpmcnQijvrKrAtvnNHmKK\nWzpLJ41knpQ5K5Rd4EHi10NvYC6PHMBe70cQjZJfrFh6Oqq9/98DNhY3qELYBIg=\n=bSoI\n-----END PGP SIGNATURE-----\n", "payload": "tree 59b4da5ee127a337cf516151127f900b8920001d\nparent 437527b22612a17024751c78f69715e625bf6a96\nparent 8447f101ac2170abd30d030b2a5e9a9fdb282d76\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1615589702 +0000\ncommitter GitHub <noreply@github.com> 1615589702 +0000\n\nMerge #7989\n\n7989: Remove `ItemTree::source` r=jonas-schievink a=jonas-schievink\n\n`HasSource` should be used instead\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5368e2c103dc313d65216f5c42e9895b5f3a11b1", "html_url": "https://github.com/rust-lang/rust/commit/5368e2c103dc313d65216f5c42e9895b5f3a11b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5368e2c103dc313d65216f5c42e9895b5f3a11b1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "437527b22612a17024751c78f69715e625bf6a96", "url": "https://api.github.com/repos/rust-lang/rust/commits/437527b22612a17024751c78f69715e625bf6a96", "html_url": "https://github.com/rust-lang/rust/commit/437527b22612a17024751c78f69715e625bf6a96"}, {"sha": "8447f101ac2170abd30d030b2a5e9a9fdb282d76", "url": "https://api.github.com/repos/rust-lang/rust/commits/8447f101ac2170abd30d030b2a5e9a9fdb282d76", "html_url": "https://github.com/rust-lang/rust/commit/8447f101ac2170abd30d030b2a5e9a9fdb282d76"}], "stats": {"total": 22, "additions": 4, "deletions": 18}, "files": [{"sha": "09bcb10dc0c53eee2fb3e992461150bdceb22ec2", "filename": "crates/hir_def/src/item_tree.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5368e2c103dc313d65216f5c42e9895b5f3a11b1/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5368e2c103dc313d65216f5c42e9895b5f3a11b1/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs?ref=5368e2c103dc313d65216f5c42e9895b5f3a11b1", "patch": "@@ -209,18 +209,6 @@ impl ItemTree {\n         }\n     }\n \n-    pub fn source<S: ItemTreeNode>(&self, db: &dyn DefDatabase, of: ItemTreeId<S>) -> S::Source {\n-        // This unwrap cannot fail, since it has either succeeded above, or resulted in an empty\n-        // ItemTree (in which case there is no valid `FileItemTreeId` to call this method with).\n-        let root =\n-            db.parse_or_expand(of.file_id).expect(\"parse_or_expand failed on constructed ItemTree\");\n-\n-        let id = self[of.value].ast_id();\n-        let map = db.ast_id_map(of.file_id);\n-        let ptr = map.get(id);\n-        ptr.to_node(&root)\n-    }\n-\n     fn data(&self) -> &ItemTreeData {\n         self.data.as_ref().expect(\"attempted to access data of empty ItemTree\")\n     }"}, {"sha": "0a4141e698b44b66be923180755f01913d6e8904", "filename": "crates/hir_ty/src/tests.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5368e2c103dc313d65216f5c42e9895b5f3a11b1/crates%2Fhir_ty%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5368e2c103dc313d65216f5c42e9895b5f3a11b1/crates%2Fhir_ty%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests.rs?ref=5368e2c103dc313d65216f5c42e9895b5f3a11b1", "patch": "@@ -19,6 +19,7 @@ use hir_def::{\n     item_scope::ItemScope,\n     keys,\n     nameres::DefMap,\n+    src::HasSource,\n     AssocItemId, DefWithBodyId, LocalModuleId, Lookup, ModuleDefId,\n };\n use hir_expand::{db::AstDatabase, InFile};\n@@ -195,18 +196,15 @@ fn infer_with_mismatches(content: &str, include_mismatches: bool) -> String {\n     defs.sort_by_key(|def| match def {\n         DefWithBodyId::FunctionId(it) => {\n             let loc = it.lookup(&db);\n-            let tree = db.item_tree(loc.id.file_id);\n-            tree.source(&db, loc.id).syntax().text_range().start()\n+            loc.source(&db).value.syntax().text_range().start()\n         }\n         DefWithBodyId::ConstId(it) => {\n             let loc = it.lookup(&db);\n-            let tree = db.item_tree(loc.id.file_id);\n-            tree.source(&db, loc.id).syntax().text_range().start()\n+            loc.source(&db).value.syntax().text_range().start()\n         }\n         DefWithBodyId::StaticId(it) => {\n             let loc = it.lookup(&db);\n-            let tree = db.item_tree(loc.id.file_id);\n-            tree.source(&db, loc.id).syntax().text_range().start()\n+            loc.source(&db).value.syntax().text_range().start()\n         }\n     });\n     for def in defs {"}]}