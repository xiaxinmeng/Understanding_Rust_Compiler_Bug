{"sha": "da07053ee1e80ef44707bd4dd25630d9dd8180dc", "node_id": "C_kwDOAAsO6NoAKGRhMDcwNTNlZTFlODBlZjQ0NzA3YmQ0ZGQyNTYzMGQ5ZGQ4MTgwZGM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-03T16:12:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-03T16:12:10Z"}, "message": "Rollup merge of #105681 - tshepang:doc-mir-visit, r=Nilstrieb\n\nsome fixes/improvements to mir::visit module", "tree": {"sha": "55a73ce832e69b6682a7698fee328ef90545286d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55a73ce832e69b6682a7698fee328ef90545286d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da07053ee1e80ef44707bd4dd25630d9dd8180dc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjtFPaCRBK7hj4Ov3rIwAAS7wIAA+eiAa9R/NyF3IWEZ8cc3Js\nYfE4hBRrcFJ3eSOd3O9DegSxOVgbsV60trotVuXORYUUgpCoM3PBErZl3x+VPR8u\nhAFBvi+nRA3JM4Q9YRLBi+pogdCBzy1FLHYXTTINkZd2KTZPH5vdXJQk9xIvA8ZM\nTHoTxmTQPjzwa1z46IM2hxc7bGT9VNeXwKXeaZh24deXYnPqsmzi8Y301fJfWydX\nNmiIAhDT132mkYHmvwHRIdDbQmxawRRW127h6WiZrceP584GmS7ECryLS593SxHk\nhJruEYaNyhmKfr1IBq+TzlQJcGFM+G++crU/vg1qYaQugu5VUk4f1GrJ34jgck4=\n=pg5d\n-----END PGP SIGNATURE-----\n", "payload": "tree 55a73ce832e69b6682a7698fee328ef90545286d\nparent 258a0fb89eba4ffb1d492401ce7176311ded8927\nparent 5a7e8f8b7970b21c40d28013800a6d4ae0c8374a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1672762330 +0100\ncommitter GitHub <noreply@github.com> 1672762330 +0100\n\nRollup merge of #105681 - tshepang:doc-mir-visit, r=Nilstrieb\n\nsome fixes/improvements to mir::visit module\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da07053ee1e80ef44707bd4dd25630d9dd8180dc", "html_url": "https://github.com/rust-lang/rust/commit/da07053ee1e80ef44707bd4dd25630d9dd8180dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da07053ee1e80ef44707bd4dd25630d9dd8180dc/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "258a0fb89eba4ffb1d492401ce7176311ded8927", "url": "https://api.github.com/repos/rust-lang/rust/commits/258a0fb89eba4ffb1d492401ce7176311ded8927", "html_url": "https://github.com/rust-lang/rust/commit/258a0fb89eba4ffb1d492401ce7176311ded8927"}, {"sha": "5a7e8f8b7970b21c40d28013800a6d4ae0c8374a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a7e8f8b7970b21c40d28013800a6d4ae0c8374a", "html_url": "https://github.com/rust-lang/rust/commit/5a7e8f8b7970b21c40d28013800a6d4ae0c8374a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "1a264d2d5af9a0d6ab1d8eebc2aaba14b9bde5ed", "filename": "compiler/rustc_middle/src/mir/visit.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/da07053ee1e80ef44707bd4dd25630d9dd8180dc/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da07053ee1e80ef44707bd4dd25630d9dd8180dc/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs?ref=da07053ee1e80ef44707bd4dd25630d9dd8180dc", "patch": "@@ -3,15 +3,15 @@\n //! ## Overview\n //!\n //! There are two visitors, one for immutable and one for mutable references,\n-//! but both are generated by the following macro. The code is written according\n-//! to the following conventions:\n+//! but both are generated by the `make_mir_visitor` macro.\n+//! The code is written according to the following conventions:\n //!\n //! - introduce a `visit_foo` and a `super_foo` method for every MIR type\n //! - `visit_foo`, by default, calls `super_foo`\n //! - `super_foo`, by default, destructures the `foo` and calls `visit_foo`\n //!\n-//! This allows you as a user to override `visit_foo` for types are\n-//! interested in, and invoke (within that method) call\n+//! This allows you to override `visit_foo` for types you are\n+//! interested in, and invoke (within that method call)\n //! `self.super_foo` to get the default behavior. Just as in an OO\n //! language, you should never call `super` methods ordinarily except\n //! in that circumstance."}]}