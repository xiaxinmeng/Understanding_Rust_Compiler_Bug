{"sha": "76287ccbb097d9b351657de8f514c5dd7c5955d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2Mjg3Y2NiYjA5N2Q5YjM1MTY1N2RlOGY1MTRjNWRkN2M1OTU1ZDU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-10-24T20:21:49Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-10-24T20:21:49Z"}, "message": "libextra: Make arc clone inline", "tree": {"sha": "650ef6fcf05ab3970f2cf610aebc365d9ec8cb4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/650ef6fcf05ab3970f2cf610aebc365d9ec8cb4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76287ccbb097d9b351657de8f514c5dd7c5955d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76287ccbb097d9b351657de8f514c5dd7c5955d5", "html_url": "https://github.com/rust-lang/rust/commit/76287ccbb097d9b351657de8f514c5dd7c5955d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76287ccbb097d9b351657de8f514c5dd7c5955d5/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7075eb36254e673fad1055148ee1a02447371215", "url": "https://api.github.com/repos/rust-lang/rust/commits/7075eb36254e673fad1055148ee1a02447371215", "html_url": "https://github.com/rust-lang/rust/commit/7075eb36254e673fad1055148ee1a02447371215"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "9474431177e6b42e74d3336724c9cc50a939d797", "filename": "src/libextra/arc.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/76287ccbb097d9b351657de8f514c5dd7c5955d5/src%2Flibextra%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76287ccbb097d9b351657de8f514c5dd7c5955d5/src%2Flibextra%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Farc.rs?ref=76287ccbb097d9b351657de8f514c5dd7c5955d5", "patch": "@@ -148,6 +148,7 @@ impl<T:Freeze + Send> Clone for Arc<T> {\n     * object. However, one of the `arc` objects can be sent to another task,\n     * allowing them to share the underlying data.\n     */\n+    #[inline]\n     fn clone(&self) -> Arc<T> {\n         Arc { x: self.x.clone() }\n     }\n@@ -167,6 +168,7 @@ pub struct MutexArc<T> { priv x: UnsafeArc<MutexArcInner<T>> }\n \n impl<T:Send> Clone for MutexArc<T> {\n     /// Duplicate a mutex-protected Arc. See arc::clone for more details.\n+    #[inline]\n     fn clone(&self) -> MutexArc<T> {\n         // NB: Cloning the underlying mutex is not necessary. Its reference\n         // count would be exactly the same as the shared state's.\n@@ -349,6 +351,7 @@ pub struct RWArc<T> {\n \n impl<T:Freeze + Send> Clone for RWArc<T> {\n     /// Duplicate a rwlock-protected Arc. See arc::clone for more details.\n+    #[inline]\n     fn clone(&self) -> RWArc<T> {\n         RWArc { x: self.x.clone() }\n     }"}]}