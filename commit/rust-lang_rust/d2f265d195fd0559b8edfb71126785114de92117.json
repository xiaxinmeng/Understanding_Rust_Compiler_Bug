{"sha": "d2f265d195fd0559b8edfb71126785114de92117", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyZjI2NWQxOTVmZDA1NTliOGVkZmI3MTEyNjc4NTExNGRlOTIxMTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-19T11:26:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-19T11:26:48Z"}, "message": "auto merge of #12367 : darnuria/rust/tutorial_removing_do_syntax, r=cmr\n\nThe 'do' keyword was deprecated in 0.10 #11868 , and is keep as\r\nreserved keyword  #12157 .\r\n\r\nSo the tutorial part about it doesn't make sense.\r\nThe spawning explanation was move into '15.2 Closure compatibility'.", "tree": {"sha": "17be0260c42edb2d7f7a18e12f432e2f5862b004", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17be0260c42edb2d7f7a18e12f432e2f5862b004"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2f265d195fd0559b8edfb71126785114de92117", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2f265d195fd0559b8edfb71126785114de92117", "html_url": "https://github.com/rust-lang/rust/commit/d2f265d195fd0559b8edfb71126785114de92117", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2f265d195fd0559b8edfb71126785114de92117/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4afcf44d2c70b2c176bdf283082a7bdd4be5826", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4afcf44d2c70b2c176bdf283082a7bdd4be5826", "html_url": "https://github.com/rust-lang/rust/commit/c4afcf44d2c70b2c176bdf283082a7bdd4be5826"}, {"sha": "1ede49f49d381cd1b9b3d9394c1bc0f888e0025d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ede49f49d381cd1b9b3d9394c1bc0f888e0025d", "html_url": "https://github.com/rust-lang/rust/commit/1ede49f49d381cd1b9b3d9394c1bc0f888e0025d"}], "stats": {"total": 57, "additions": 18, "deletions": 39}, "files": [{"sha": "094771897f4f60aa2640387928e095e581e55d02", "filename": "src/doc/tutorial.md", "status": "modified", "additions": 18, "deletions": 39, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/d2f265d195fd0559b8edfb71126785114de92117/src%2Fdoc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/d2f265d195fd0559b8edfb71126785114de92117/src%2Fdoc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftutorial.md?ref=d2f265d195fd0559b8edfb71126785114de92117", "patch": "@@ -1750,6 +1750,24 @@ closures, but they also own them: that is, no other code can access\n them. Owned closures are used in concurrent code, particularly\n for spawning [tasks][tasks].\n \n+Closures can be used to spawn tasks.\n+A practical example of this pattern is found when using the `spawn` function,\n+which starts a new task.\n+\n+~~~~\n+use std::task::spawn;\n+\n+// proc is the closure which will be spawned.\n+spawn(proc() {\n+    debug!(\"I'm a new task\")\n+});\n+~~~~\n+\n+> ***Note:*** If you want to see the output of `debug!` statements, you will need to turn on\n+> `debug!` logging.  To enable `debug!` logging, set the RUST_LOG environment\n+> variable to the name of your crate, which, for a file named `foo.rs`, will be\n+> `foo` (e.g., with bash, `export RUST_LOG=foo`).\n+\n ## Closure compatibility\n \n Rust closures have a convenient subtyping property: you can pass any kind of\n@@ -1771,45 +1789,6 @@ call_twice(function);\n > in small ways. At the moment they can be unsound in some\n > scenarios, particularly with non-copyable types.\n \n-## Do syntax\n-\n-The `do` expression makes it easier to call functions that take procedures\n-as arguments.\n-\n-Consider this function that takes a procedure:\n-\n-~~~~\n-fn call_it(op: proc(v: int)) {\n-    op(10)\n-}\n-~~~~\n-\n-As a caller, if we use a closure to provide the final operator\n-argument, we can write it in a way that has a pleasant, block-like\n-structure.\n-\n-~~~~\n-# fn call_it(op: proc(v: int)) { }\n-call_it(proc(n) {\n-    println!(\"{}\", n);\n-});\n-~~~~\n-\n-A practical example of this pattern is found when using the `spawn` function,\n-which starts a new task.\n-\n-~~~~\n-use std::task::spawn;\n-spawn(proc() {\n-    debug!(\"I'm a new task\")\n-});\n-~~~~\n-\n-If you want to see the output of `debug!` statements, you will need to turn on\n-`debug!` logging.  To enable `debug!` logging, set the RUST_LOG environment\n-variable to the name of your crate, which, for a file named `foo.rs`, will be\n-`foo` (e.g., with bash, `export RUST_LOG=foo`).\n-\n # Methods\n \n Methods are like functions except that they always begin with a special argument,"}]}