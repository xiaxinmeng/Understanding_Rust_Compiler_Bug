{"sha": "70ff6fd46f1e46faca928241448095866d46194d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwZmY2ZmQ0NmYxZTQ2ZmFjYTkyODI0MTQ0ODA5NTg2NmQ0NjE5NGQ=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-07-23T00:21:03Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-05T14:54:49Z"}, "message": "Add error for inconsistent stability `since` value", "tree": {"sha": "9ffc2dbb1d868d211fdcdd98431e15c77f9496fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ffc2dbb1d868d211fdcdd98431e15c77f9496fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70ff6fd46f1e46faca928241448095866d46194d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70ff6fd46f1e46faca928241448095866d46194d", "html_url": "https://github.com/rust-lang/rust/commit/70ff6fd46f1e46faca928241448095866d46194d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70ff6fd46f1e46faca928241448095866d46194d/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5242dce01db3fc42d5ec91eb166cce83194149cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5242dce01db3fc42d5ec91eb166cce83194149cb", "html_url": "https://github.com/rust-lang/rust/commit/5242dce01db3fc42d5ec91eb166cce83194149cb"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "e451cf5cfa1bdcdab6827cb1c34c988f50fbc3ef", "filename": "src/librustc/middle/lib_features.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/70ff6fd46f1e46faca928241448095866d46194d/src%2Flibrustc%2Fmiddle%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70ff6fd46f1e46faca928241448095866d46194d/src%2Flibrustc%2Fmiddle%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flib_features.rs?ref=70ff6fd46f1e46faca928241448095866d46194d", "patch": "@@ -101,6 +101,21 @@ impl<'a, 'tcx> LibFeatureCollector<'a, 'tcx> {\n \n         match (since, already_in_stable, already_in_unstable) {\n             (Some(since), _, false) => {\n+                if let Some(prev_since) = self.lib_features.stable.get(&feature) {\n+                    if *prev_since != since {\n+                        let msg = format!(\n+                            \"feature `{}` is declared stable since {}, \\\n+                             but was previously declared stable since {}\",\n+                            feature,\n+                            since,\n+                            prev_since,\n+                        );\n+                        self.tcx.sess.struct_span_err_with_code(span, &msg,\n+                            DiagnosticId::Error(\"E0711\".into())).emit();\n+                        return;\n+                    }\n+                }\n+\n                 self.lib_features.stable.insert(feature, since);\n             }\n             (None, false, _) => {"}]}