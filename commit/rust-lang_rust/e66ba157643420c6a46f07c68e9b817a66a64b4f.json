{"sha": "e66ba157643420c6a46f07c68e9b817a66a64b4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NmJhMTU3NjQzNDIwYzZhNDZmMDdjNjhlOWI4MTdhNjZhNjRiNGY=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-02T22:53:02Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-13T22:03:44Z"}, "message": "libunicode: fix fallout", "tree": {"sha": "188efb0af2a1dc87d8f2c9c858bf3b8902a4775f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/188efb0af2a1dc87d8f2c9c858bf3b8902a4775f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e66ba157643420c6a46f07c68e9b817a66a64b4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e66ba157643420c6a46f07c68e9b817a66a64b4f", "html_url": "https://github.com/rust-lang/rust/commit/e66ba157643420c6a46f07c68e9b817a66a64b4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e66ba157643420c6a46f07c68e9b817a66a64b4f/comments", "author": null, "committer": null, "parents": [{"sha": "801ae1333c05ab641ff08c14fee776c08f42cff8", "url": "https://api.github.com/repos/rust-lang/rust/commits/801ae1333c05ab641ff08c14fee776c08f42cff8", "html_url": "https://github.com/rust-lang/rust/commit/801ae1333c05ab641ff08c14fee776c08f42cff8"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "33e4df3ca3687f95b4e5b6d61d582cbe58dcc6b4", "filename": "src/libunicode/u_str.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e66ba157643420c6a46f07c68e9b817a66a64b4f/src%2Flibunicode%2Fu_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e66ba157643420c6a46f07c68e9b817a66a64b4f/src%2Flibunicode%2Fu_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunicode%2Fu_str.rs?ref=e66ba157643420c6a46f07c68e9b817a66a64b4f", "patch": "@@ -29,8 +29,7 @@ use tables::grapheme::GraphemeCat;\n \n /// An iterator over the words of a string, separated by a sequence of whitespace\n /// FIXME: This should be opaque\n-pub type Words<'a> =\n-    Filter<'a, &'a str, CharSplits<'a, |char|:'a -> bool>>;\n+pub type Words<'a> = Filter<&'a str, CharSplits<'a, |char|:'a -> bool>, fn(&&str) -> bool>;\n \n /// Methods for Unicode string slices\n pub trait UnicodeStrPrelude for Sized? {\n@@ -143,8 +142,9 @@ impl UnicodeStrPrelude for str {\n \n     #[inline]\n     fn words(&self) -> Words {\n+        fn is_not_empty(s: &&str) -> bool { !s.is_empty() }\n         let f = |c: char| c.is_whitespace();\n-        self.split(f).filter(|s| !s.is_empty())\n+        self.split(f).filter(is_not_empty)\n     }\n \n     #[inline]"}]}