{"sha": "57c683afabbe4e89248e8f2408f09528eaff3f8a", "node_id": "C_kwDOAAsO6NoAKDU3YzY4M2FmYWJiZTRlODkyNDhlOGYyNDA4ZjA5NTI4ZWFmZjNmOGE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-06-29T22:23:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-29T22:23:54Z"}, "message": "Rollup merge of #98685 - camelid:sorting-flag, r=GuillaumeGomez\n\nReplace `sort_modules_alphabetically` boolean with enum\n\nThis fixes the long-standing FIXME there and makes the code easier to\nunderstand. The reference to modules in both the old and new names seems\npotentially wrong since I believe it applies to all items.\n\nr? ``@GuillaumeGomez``", "tree": {"sha": "1bf7f02ac395231789c874283573cbaa746ee57d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bf7f02ac395231789c874283573cbaa746ee57d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57c683afabbe4e89248e8f2408f09528eaff3f8a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJivND6CRBK7hj4Ov3rIwAAnzoIAI+ol8pNPJeAl1UB2Vi5hh4t\nId3GBP3aOH3ht73PYDki9YNtu/WHJs5Bijt6lxXmZb9LbIbX+K27BLyW6VjeoFYP\n8Ip22TtxxCKOKuSfh7fB2RZ+cQLk6ySVu0YTD5QaejbZLvZb5rnXaSVA5SCXgdrO\nxwgHb59b76ClSJJzPxXhk8mEV3kZzOCOlvIRFCl6uGWfQyEmD4W4hkQvrCaKoGlT\nmo/SpK1hEMeP7Gt4s5CdaSnnnO5EZRq45sgI7sWvrMUQr5iv7QsbdG3ZZOQ3+hhD\nEcgB+EQcbtjJ4gQzDeV+JSAh94riDlEiJXq3cUt8RdCKxhD+uuqymxVtrUmBCX0=\n=ySaV\n-----END PGP SIGNATURE-----\n", "payload": "tree 1bf7f02ac395231789c874283573cbaa746ee57d\nparent ad682ad391d8ac1f6b193b3e1e8421695fdaacda\nparent be0b1121e9ede0cc3b322aba8d8a2a9bb48572f6\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1656541434 +0200\ncommitter GitHub <noreply@github.com> 1656541434 +0200\n\nRollup merge of #98685 - camelid:sorting-flag, r=GuillaumeGomez\n\nReplace `sort_modules_alphabetically` boolean with enum\n\nThis fixes the long-standing FIXME there and makes the code easier to\nunderstand. The reference to modules in both the old and new names seems\npotentially wrong since I believe it applies to all items.\n\nr? ``@GuillaumeGomez``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57c683afabbe4e89248e8f2408f09528eaff3f8a", "html_url": "https://github.com/rust-lang/rust/commit/57c683afabbe4e89248e8f2408f09528eaff3f8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57c683afabbe4e89248e8f2408f09528eaff3f8a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad682ad391d8ac1f6b193b3e1e8421695fdaacda", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad682ad391d8ac1f6b193b3e1e8421695fdaacda", "html_url": "https://github.com/rust-lang/rust/commit/ad682ad391d8ac1f6b193b3e1e8421695fdaacda"}, {"sha": "be0b1121e9ede0cc3b322aba8d8a2a9bb48572f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/be0b1121e9ede0cc3b322aba8d8a2a9bb48572f6", "html_url": "https://github.com/rust-lang/rust/commit/be0b1121e9ede0cc3b322aba8d8a2a9bb48572f6"}], "stats": {"total": 48, "additions": 31, "deletions": 17}, "files": [{"sha": "50d154dd278a1faaf08f02864cc28a8ea1c26fe4", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/57c683afabbe4e89248e8f2408f09528eaff3f8a/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57c683afabbe4e89248e8f2408f09528eaff3f8a/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=57c683afabbe4e89248e8f2408f09528eaff3f8a", "patch": "@@ -218,12 +218,9 @@ pub(crate) struct RenderOptions {\n     ///\n     /// Be aware: This option can come both from the CLI and from crate attributes!\n     pub(crate) playground_url: Option<String>,\n-    /// Whether to sort modules alphabetically on a module page instead of using declaration order.\n-    /// `true` by default.\n-    //\n-    // FIXME(misdreavus): the flag name is `--sort-modules-by-appearance` but the meaning is\n-    // inverted once read.\n-    pub(crate) sort_modules_alphabetically: bool,\n+    /// What sorting mode to use for module pages.\n+    /// `ModuleSorting::Alphabetical` by default.\n+    pub(crate) module_sorting: ModuleSorting,\n     /// List of themes to extend the docs with. Original argument name is included to assist in\n     /// displaying errors if it fails a theme check.\n     pub(crate) themes: Vec<StylePath>,\n@@ -281,6 +278,12 @@ pub(crate) struct RenderOptions {\n     pub(crate) no_emit_shared: bool,\n }\n \n+#[derive(Copy, Clone, Debug, PartialEq, Eq)]\n+pub(crate) enum ModuleSorting {\n+    DeclarationOrder,\n+    Alphabetical,\n+}\n+\n #[derive(Copy, Clone, Debug, PartialEq, Eq)]\n pub(crate) enum EmitType {\n     Unversioned,\n@@ -650,7 +653,11 @@ impl Options {\n         let proc_macro_crate = crate_types.contains(&CrateType::ProcMacro);\n         let playground_url = matches.opt_str(\"playground-url\");\n         let maybe_sysroot = matches.opt_str(\"sysroot\").map(PathBuf::from);\n-        let sort_modules_alphabetically = !matches.opt_present(\"sort-modules-by-appearance\");\n+        let module_sorting = if matches.opt_present(\"sort-modules-by-appearance\") {\n+            ModuleSorting::DeclarationOrder\n+        } else {\n+            ModuleSorting::Alphabetical\n+        };\n         let resource_suffix = matches.opt_str(\"resource-suffix\").unwrap_or_default();\n         let enable_minification = !matches.opt_present(\"disable-minification\");\n         let markdown_no_toc = matches.opt_present(\"markdown-no-toc\");\n@@ -731,7 +738,7 @@ impl Options {\n                 external_html,\n                 id_map,\n                 playground_url,\n-                sort_modules_alphabetically,\n+                module_sorting,\n                 themes,\n                 extension_css,\n                 extern_html_root_urls,"}, {"sha": "2ed7a6f1bb144511d97aefabba047ff5423bff80", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/57c683afabbe4e89248e8f2408f09528eaff3f8a/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57c683afabbe4e89248e8f2408f09528eaff3f8a/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=57c683afabbe4e89248e8f2408f09528eaff3f8a", "patch": "@@ -22,7 +22,7 @@ use super::{\n };\n \n use crate::clean::{self, types::ExternalLocation, ExternalCrate};\n-use crate::config::RenderOptions;\n+use crate::config::{ModuleSorting, RenderOptions};\n use crate::docfs::{DocFS, PathError};\n use crate::error::Error;\n use crate::formats::cache::Cache;\n@@ -95,7 +95,7 @@ pub(crate) struct SharedContext<'tcx> {\n     created_dirs: RefCell<FxHashSet<PathBuf>>,\n     /// This flag indicates whether listings of modules (in the side bar and documentation itself)\n     /// should be ordered alphabetically or in order of appearance (in the source code).\n-    pub(super) sort_modules_alphabetically: bool,\n+    pub(super) module_sorting: ModuleSorting,\n     /// Additional CSS files to be added to the generated docs.\n     pub(crate) style_files: Vec<StylePath>,\n     /// Suffix to be added on resource files (if suffix is \"-v2\" then \"light.css\" becomes\n@@ -280,10 +280,13 @@ impl<'tcx> Context<'tcx> {\n             }\n         }\n \n-        if self.shared.sort_modules_alphabetically {\n-            for items in map.values_mut() {\n-                items.sort();\n+        match self.shared.module_sorting {\n+            ModuleSorting::Alphabetical => {\n+                for items in map.values_mut() {\n+                    items.sort();\n+                }\n             }\n+            ModuleSorting::DeclarationOrder => {}\n         }\n         map\n     }\n@@ -394,7 +397,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             external_html,\n             id_map,\n             playground_url,\n-            sort_modules_alphabetically,\n+            module_sorting,\n             themes: style_files,\n             default_settings,\n             extension_css,\n@@ -476,7 +479,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             issue_tracker_base_url,\n             layout,\n             created_dirs: Default::default(),\n-            sort_modules_alphabetically,\n+            module_sorting,\n             style_files,\n             resource_suffix,\n             static_root_path,"}, {"sha": "0fe99463f1d6e2fd2fcd9236d6247809f58b8a34", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/57c683afabbe4e89248e8f2408f09528eaff3f8a/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57c683afabbe4e89248e8f2408f09528eaff3f8a/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=57c683afabbe4e89248e8f2408f09528eaff3f8a", "patch": "@@ -23,6 +23,7 @@ use super::{\n     AssocItemLink, Context, ImplRenderingParameters,\n };\n use crate::clean;\n+use crate::config::ModuleSorting;\n use crate::formats::item_type::ItemType;\n use crate::formats::{AssocItemRender, Impl, RenderMode};\n use crate::html::escape::Escape;\n@@ -246,8 +247,11 @@ fn item_module(w: &mut Buffer, cx: &mut Context<'_>, item: &clean::Item, items:\n         compare_names(lhs.as_str(), rhs.as_str())\n     }\n \n-    if cx.shared.sort_modules_alphabetically {\n-        indices.sort_by(|&i1, &i2| cmp(&items[i1], &items[i2], i1, i2, cx.tcx()));\n+    match cx.shared.module_sorting {\n+        ModuleSorting::Alphabetical => {\n+            indices.sort_by(|&i1, &i2| cmp(&items[i1], &items[i2], i1, i2, cx.tcx()));\n+        }\n+        ModuleSorting::DeclarationOrder => {}\n     }\n     // This call is to remove re-export duplicates in cases such as:\n     //"}]}