{"sha": "bc75cba23feb45b2d1b67ee07e6eb8264c0d5fd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNzVjYmEyM2ZlYjQ1YjJkMWI2N2VlMDdlNmViODI2NGMwZDVmZDY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-07T17:59:44Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-18T14:08:25Z"}, "message": "submod_path_from_attr: simplify & document", "tree": {"sha": "1866a728959946e04a84c1c4fdbcf94ecb336f42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1866a728959946e04a84c1c4fdbcf94ecb336f42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc75cba23feb45b2d1b67ee07e6eb8264c0d5fd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc75cba23feb45b2d1b67ee07e6eb8264c0d5fd6", "html_url": "https://github.com/rust-lang/rust/commit/bc75cba23feb45b2d1b67ee07e6eb8264c0d5fd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc75cba23feb45b2d1b67ee07e6eb8264c0d5fd6/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f509b26a7730d721ef87423a72b3fdf8724b4afa", "url": "https://api.github.com/repos/rust-lang/rust/commits/f509b26a7730d721ef87423a72b3fdf8724b4afa", "html_url": "https://github.com/rust-lang/rust/commit/f509b26a7730d721ef87423a72b3fdf8724b4afa"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "4965615c64cfb7566414070d65708388df98d90a", "filename": "src/librustc_parse/parser/module.rs", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/bc75cba23feb45b2d1b67ee07e6eb8264c0d5fd6/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc75cba23feb45b2d1b67ee07e6eb8264c0d5fd6/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmodule.rs?ref=bc75cba23feb45b2d1b67ee07e6eb8264c0d5fd6", "patch": "@@ -179,21 +179,22 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Derive a submodule path from the first found `#[path = \"path_string\"]`.\n+    /// The provided `dir_path` is joined with the `path_string`.\n     // Public for rustfmt usage.\n     pub fn submod_path_from_attr(attrs: &[Attribute], dir_path: &Path) -> Option<PathBuf> {\n-        if let Some(s) = attr::first_attr_value_str_by_name(attrs, sym::path) {\n-            let s = s.as_str();\n+        // Extract path string from first `#[path = \"path_string\"]` attribute.\n+        let path_string = attr::first_attr_value_str_by_name(attrs, sym::path)?;\n+        let path_string = path_string.as_str();\n \n-            // On windows, the base path might have the form\n-            // `\\\\?\\foo\\bar` in which case it does not tolerate\n-            // mixed `/` and `\\` separators, so canonicalize\n-            // `/` to `\\`.\n-            #[cfg(windows)]\n-            let s = s.replace(\"/\", \"\\\\\");\n-            Some(dir_path.join(&*s))\n-        } else {\n-            None\n-        }\n+        // On windows, the base path might have the form\n+        // `\\\\?\\foo\\bar` in which case it does not tolerate\n+        // mixed `/` and `\\` separators, so canonicalize\n+        // `/` to `\\`.\n+        #[cfg(windows)]\n+        let path_string = path_string.replace(\"/\", \"\\\\\");\n+\n+        Some(dir_path.join(&*path_string))\n     }\n \n     /// Returns a path to a module."}]}