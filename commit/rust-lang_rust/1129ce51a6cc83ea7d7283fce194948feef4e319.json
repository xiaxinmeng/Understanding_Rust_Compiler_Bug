{"sha": "1129ce51a6cc83ea7d7283fce194948feef4e319", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExMjljZTUxYTZjYzgzZWE3ZDcyODNmY2UxOTQ5NDhmZWVmNGUzMTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-09T11:42:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-09T11:42:49Z"}, "message": "Auto merge of #39265 - est31:master, r=petrochenkov\n\nStabilize static lifetime in statics\n\nStabilize the \"static_in_const\" feature. Blockers before this PR can be merged:\n\n* [x] The [FCP with inclination to stabilize](https://github.com/rust-lang/rust/issues/35897#issuecomment-270441437) needs to be over. FCP lasts roughly three weeks, so will be over at Jan 25, aka this thursday.\n* [x] Documentation needs to be added (#37928)\n\nCloses #35897.", "tree": {"sha": "adb445abe019bffb256aa6eafcbbe72340f75789", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adb445abe019bffb256aa6eafcbbe72340f75789"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1129ce51a6cc83ea7d7283fce194948feef4e319", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1129ce51a6cc83ea7d7283fce194948feef4e319", "html_url": "https://github.com/rust-lang/rust/commit/1129ce51a6cc83ea7d7283fce194948feef4e319", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1129ce51a6cc83ea7d7283fce194948feef4e319/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0e46f03d8f3ffe24b1bd1ae857ed86f95b1b3c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0e46f03d8f3ffe24b1bd1ae857ed86f95b1b3c2", "html_url": "https://github.com/rust-lang/rust/commit/b0e46f03d8f3ffe24b1bd1ae857ed86f95b1b3c2"}, {"sha": "f8b6108deba112dcbff621635e00d5800cb425d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8b6108deba112dcbff621635e00d5800cb425d3", "html_url": "https://github.com/rust-lang/rust/commit/f8b6108deba112dcbff621635e00d5800cb425d3"}], "stats": {"total": 37, "additions": 3, "deletions": 34}, "files": [{"sha": "9bad98dda83f83383725584e960187ebc4b43e4f", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1129ce51a6cc83ea7d7283fce194948feef4e319/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1129ce51a6cc83ea7d7283fce194948feef4e319/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=1129ce51a6cc83ea7d7283fce194948feef4e319", "patch": "@@ -238,8 +238,6 @@ enum Elide {\n     FreshLateAnon(Cell<u32>),\n     /// Always use this one lifetime.\n     Exact(Region),\n-    /// Like `Exact(Static)` but requires `#![feature(static_in_const)]`.\n-    Static,\n     /// Less or more than one lifetime were found, error on unspecified.\n     Error(Vec<ElisionFailureInfo>)\n }\n@@ -324,7 +322,7 @@ impl<'a, 'tcx> Visitor<'tcx> for LifetimeContext<'a, 'tcx> {\n             hir::ItemConst(..) => {\n                 // No lifetime parameters, but implied 'static.\n                 let scope = Scope::Elision {\n-                    elide: Elide::Static,\n+                    elide: Elide::Exact(Region::Static),\n                     s: ROOT_SCOPE\n                 };\n                 self.with(scope, |_, this| intravisit::walk_item(this, item));\n@@ -1307,16 +1305,6 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                             return;\n                         }\n                         Elide::Exact(l) => l.shifted(late_depth),\n-                        Elide::Static => {\n-                            if !self.sess.features.borrow().static_in_const {\n-                                self.sess\n-                                    .struct_span_err(span,\n-                                                     \"this needs a `'static` lifetime or the \\\n-                                                      `static_in_const` feature, see #35897\")\n-                                    .emit();\n-                            }\n-                            Region::Static\n-                        }\n                         Elide::Error(ref e) => break Some(e)\n                     };\n                     for lifetime_ref in lifetime_refs {"}, {"sha": "a7c86bf8e06bae014aa2b2c8ed08c2ffe10e6e79", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1129ce51a6cc83ea7d7283fce194948feef4e319/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1129ce51a6cc83ea7d7283fce194948feef4e319/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=1129ce51a6cc83ea7d7283fce194948feef4e319", "patch": "@@ -281,9 +281,6 @@ declare_features! (\n     // Allows untagged unions `union U { ... }`\n     (active, untagged_unions, \"1.13.0\", Some(32836)),\n \n-    // elide `'static` lifetimes in `static`s and `const`s\n-    (active, static_in_const, \"1.13.0\", Some(35897)),\n-\n     // Used to identify the `compiler_builtins` crate\n     // rustc internal\n     (active, compiler_builtins, \"1.13.0\", None),\n@@ -386,6 +383,8 @@ declare_features! (\n     (accepted, item_like_imports, \"1.14.0\", Some(35120)),\n     // Allows using `Self` and associated types in struct expressions and patterns.\n     (accepted, more_struct_aliases, \"1.16.0\", Some(37544)),\n+    // elide `'static` lifetimes in `static`s and `const`s\n+    (accepted, static_in_const, \"1.17.0\", Some(35897)),\n );\n // (changing above list without updating src/doc/reference.md makes @cmr sad)\n "}, {"sha": "c1fc7cdd06cd0f6f9eace1a4d40f5d55181d547c", "filename": "src/test/compile-fail/feature-gate-static-in-const.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b0e46f03d8f3ffe24b1bd1ae857ed86f95b1b3c2/src%2Ftest%2Fcompile-fail%2Ffeature-gate-static-in-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0e46f03d8f3ffe24b1bd1ae857ed86f95b1b3c2/src%2Ftest%2Fcompile-fail%2Ffeature-gate-static-in-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-static-in-const.rs?ref=b0e46f03d8f3ffe24b1bd1ae857ed86f95b1b3c2", "patch": "@@ -1,14 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-static FOO: &str = \"this will work once static_in_const is stable\";\n-//~^ ERROR: this needs a `'static` lifetime or the `static_in_const` feature\n-\n-fn main() {}"}, {"sha": "e8295e5e2da087efc972af75fc874a9fc5bf2641", "filename": "src/test/compile-fail/rfc1623.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1129ce51a6cc83ea7d7283fce194948feef4e319/src%2Ftest%2Fcompile-fail%2Frfc1623.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1129ce51a6cc83ea7d7283fce194948feef4e319/src%2Ftest%2Fcompile-fail%2Frfc1623.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc1623.rs?ref=1129ce51a6cc83ea7d7283fce194948feef4e319", "patch": "@@ -7,7 +7,6 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![feature(static_in_const)]\n #![allow(dead_code)]\n \n fn non_elidable<'a, 'b>(a: &'a u8, b: &'b u8) -> &'a u8 {"}, {"sha": "ac5c0d3b9e72d9c9487ecbcf81b87ba0114bd4a5", "filename": "src/test/incremental/change_add_field/struct_point.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1129ce51a6cc83ea7d7283fce194948feef4e319/src%2Ftest%2Fincremental%2Fchange_add_field%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1129ce51a6cc83ea7d7283fce194948feef4e319/src%2Ftest%2Fincremental%2Fchange_add_field%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_add_field%2Fstruct_point.rs?ref=1129ce51a6cc83ea7d7283fce194948feef4e319", "patch": "@@ -18,7 +18,6 @@\n \n #![feature(rustc_attrs)]\n #![feature(stmt_expr_attributes)]\n-#![feature(static_in_const)]\n #![allow(dead_code)]\n \n // These are expected to require translation."}, {"sha": "4d12b7b390cc91d13e428f6f3156a4e8888d5d41", "filename": "src/test/incremental/change_pub_inherent_method_sig/struct_point.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1129ce51a6cc83ea7d7283fce194948feef4e319/src%2Ftest%2Fincremental%2Fchange_pub_inherent_method_sig%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1129ce51a6cc83ea7d7283fce194948feef4e319/src%2Ftest%2Fincremental%2Fchange_pub_inherent_method_sig%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_pub_inherent_method_sig%2Fstruct_point.rs?ref=1129ce51a6cc83ea7d7283fce194948feef4e319", "patch": "@@ -15,7 +15,6 @@\n \n #![feature(rustc_attrs)]\n #![feature(stmt_expr_attributes)]\n-#![feature(static_in_const)]\n #![allow(dead_code)]\n \n // These are expected to require translation."}, {"sha": "17453933c8abcdc35b87ca4a20a409d8ec817b8d", "filename": "src/test/run-pass/rfc1623.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1129ce51a6cc83ea7d7283fce194948feef4e319/src%2Ftest%2Frun-pass%2Frfc1623.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1129ce51a6cc83ea7d7283fce194948feef4e319/src%2Ftest%2Frun-pass%2Frfc1623.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc1623.rs?ref=1129ce51a6cc83ea7d7283fce194948feef4e319", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(static_in_const)]\n #![allow(dead_code)]\n \n // very simple test for a 'static static with default lifetime"}]}