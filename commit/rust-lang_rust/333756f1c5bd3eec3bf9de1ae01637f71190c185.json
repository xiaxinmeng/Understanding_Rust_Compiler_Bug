{"sha": "333756f1c5bd3eec3bf9de1ae01637f71190c185", "node_id": "C_kwDOAAsO6NoAKDMzMzc1NmYxYzViZDNlZWMzYmY5ZGUxYWUwMTYzN2Y3MTE5MGMxODU", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-03-26T21:19:41Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-03-27T04:15:16Z"}, "message": "Bump const_ptr_offset stabilization to 1.61", "tree": {"sha": "028f84ee65bb987fac58a69e2515dcdaf88d0b7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/028f84ee65bb987fac58a69e2515dcdaf88d0b7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/333756f1c5bd3eec3bf9de1ae01637f71190c185", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmI/5NQACgkQ+boUO5X/\nbYIAhBAAxRmv3uxBL9/htlTpFgDLIzrUo4KpNG3PpkFl2WqkcR+S7mJ9GgzE8nvn\nIBAblU7XfU6eswN+lk0jHs/gAgSb9CEg5HU47blM8HZpfX5PvZfC0FfkpOsvhqod\nlHbH4YNrsjKITLRj1YcsIAyXffRU7HBi8iSgMktBmagKGoCAGVaXUwrHrxyyrtUz\n78Oj1zHNGl/VQDnCPW9R0s2+nXPB1b9mpEdnaobv4gA/ijIaB6g39K2igr5Og1dh\n0rNVV4uOE2Glm8yH2EfBNw2EgP2GSAg2/FYv2AfncuwnVvdTDdlks4g5AOsMwDKs\ng7JjBgCh++AkW6lubvw22VnN8uIdvywWJpwKY8qegUHZE0WxXBjJIfqF3MIRnlwm\nIJDJQlrTPGHE8U4Nt36KWNHSC8rG5jnLMDWhf3fuLlfwinMXPd60Qt0zjYTV1WAv\nxOZO1EoynotH1eFgNdPgCiXzSiaRBPUkDZ/zl7jLHKDxH79BYdbZIQiSNfa/q9tf\nKn+a08iPSrWawAGMqRjDMGSrWU9gA+cSd5bMnvDyVdqklp3ZdmXhm3uFi6MWEUHb\nd/ka2fyQ0snJsDsmdKOJzUudT2YvSISlnDMVyR4yWOQPlN24tuXgXfSLvJg43vVj\nCb+S0ML5jsYj21hiqYoynv4N+zHrIFRnqJj8BpEIKChzzRmRljQ=\n=wkWL\n-----END PGP SIGNATURE-----", "payload": "tree 028f84ee65bb987fac58a69e2515dcdaf88d0b7e\nparent 022756f81408c70888a6a60179a5df0ba097d862\nauthor David Tolnay <dtolnay@gmail.com> 1648329581 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1648354516 -0700\n\nBump const_ptr_offset stabilization to 1.61\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/333756f1c5bd3eec3bf9de1ae01637f71190c185", "html_url": "https://github.com/rust-lang/rust/commit/333756f1c5bd3eec3bf9de1ae01637f71190c185", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/333756f1c5bd3eec3bf9de1ae01637f71190c185/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "022756f81408c70888a6a60179a5df0ba097d862", "url": "https://api.github.com/repos/rust-lang/rust/commits/022756f81408c70888a6a60179a5df0ba097d862", "html_url": "https://github.com/rust-lang/rust/commit/022756f81408c70888a6a60179a5df0ba097d862"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "129402ad23a566c067daf8accfc1b7194e16abc3", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/333756f1c5bd3eec3bf9de1ae01637f71190c185/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/333756f1c5bd3eec3bf9de1ae01637f71190c185/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=333756f1c5bd3eec3bf9de1ae01637f71190c185", "patch": "@@ -1168,7 +1168,7 @@ extern \"rust-intrinsic\" {\n     ///\n     /// The stabilized version of this intrinsic is [`pointer::offset`].\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.61.0\")]\n     pub fn offset<T>(dst: *const T, offset: isize) -> *const T;\n \n     /// Calculates the offset from a pointer, potentially wrapping.\n@@ -1185,7 +1185,7 @@ extern \"rust-intrinsic\" {\n     ///\n     /// The stabilized version of this intrinsic is [`pointer::wrapping_offset`].\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.61.0\")]\n     pub fn arith_offset<T>(dst: *const T, offset: isize) -> *const T;\n \n     /// Equivalent to the appropriate `llvm.memcpy.p0i8.0i8.*` intrinsic, with"}, {"sha": "8cdd98149ad3e29aa251d777d81c21c3b42c2f38", "filename": "library/core/src/ptr/const_ptr.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/333756f1c5bd3eec3bf9de1ae01637f71190c185/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/333756f1c5bd3eec3bf9de1ae01637f71190c185/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs?ref=333756f1c5bd3eec3bf9de1ae01637f71190c185", "patch": "@@ -285,7 +285,7 @@ impl<T: ?Sized> *const T {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.61.0\")]\n     #[inline(always)]\n     pub const unsafe fn offset(self, count: isize) -> *const T\n     where\n@@ -347,7 +347,7 @@ impl<T: ?Sized> *const T {\n     /// ```\n     #[stable(feature = \"ptr_wrapping_offset\", since = \"1.16.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.61.0\")]\n     #[inline(always)]\n     pub const fn wrapping_offset(self, count: isize) -> *const T\n     where\n@@ -566,7 +566,7 @@ impl<T: ?Sized> *const T {\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.61.0\")]\n     #[inline(always)]\n     pub const unsafe fn add(self, count: usize) -> Self\n     where\n@@ -630,7 +630,7 @@ impl<T: ?Sized> *const T {\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.61.0\")]\n     #[inline]\n     pub const unsafe fn sub(self, count: usize) -> Self\n     where\n@@ -693,7 +693,7 @@ impl<T: ?Sized> *const T {\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.61.0\")]\n     #[inline(always)]\n     pub const fn wrapping_add(self, count: usize) -> Self\n     where\n@@ -755,7 +755,7 @@ impl<T: ?Sized> *const T {\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.61.0\")]\n     #[inline]\n     pub const fn wrapping_sub(self, count: usize) -> Self\n     where"}, {"sha": "0c5b16aa01dc7eb9bf0acf4b404ef1cd53db3a77", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/333756f1c5bd3eec3bf9de1ae01637f71190c185/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/333756f1c5bd3eec3bf9de1ae01637f71190c185/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=333756f1c5bd3eec3bf9de1ae01637f71190c185", "patch": "@@ -295,7 +295,7 @@ impl<T: ?Sized> *mut T {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.61.0\")]\n     #[inline(always)]\n     pub const unsafe fn offset(self, count: isize) -> *mut T\n     where\n@@ -358,7 +358,7 @@ impl<T: ?Sized> *mut T {\n     /// ```\n     #[stable(feature = \"ptr_wrapping_offset\", since = \"1.16.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.61.0\")]\n     #[inline(always)]\n     pub const fn wrapping_offset(self, count: isize) -> *mut T\n     where\n@@ -680,7 +680,7 @@ impl<T: ?Sized> *mut T {\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.61.0\")]\n     #[inline(always)]\n     pub const unsafe fn add(self, count: usize) -> Self\n     where\n@@ -744,7 +744,7 @@ impl<T: ?Sized> *mut T {\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.61.0\")]\n     #[inline]\n     pub const unsafe fn sub(self, count: usize) -> Self\n     where\n@@ -807,7 +807,7 @@ impl<T: ?Sized> *mut T {\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.61.0\")]\n     #[inline(always)]\n     pub const fn wrapping_add(self, count: usize) -> Self\n     where\n@@ -869,7 +869,7 @@ impl<T: ?Sized> *mut T {\n     /// ```\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n-    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.61.0\")]\n     #[inline]\n     pub const fn wrapping_sub(self, count: usize) -> Self\n     where"}, {"sha": "26d4fa15d0a7e9fa49411a2873f0a8e480f66120", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/333756f1c5bd3eec3bf9de1ae01637f71190c185/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/333756f1c5bd3eec3bf9de1ae01637f71190c185/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=333756f1c5bd3eec3bf9de1ae01637f71190c185", "patch": "@@ -499,7 +499,7 @@ impl<T> [T] {\n     /// assert_eq!(x, &[3, 4, 6]);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.61.0\")]\n     #[rustc_allow_const_fn_unstable(const_mut_refs)]\n     #[inline]\n     #[must_use]\n@@ -536,7 +536,7 @@ impl<T> [T] {\n     ///\n     /// [`as_ptr`]: slice::as_ptr\n     #[stable(feature = \"slice_ptr_range\", since = \"1.48.0\")]\n-    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.61.0\")]\n     #[inline]\n     #[must_use]\n     pub const fn as_ptr_range(&self) -> Range<*const T> {\n@@ -579,7 +579,7 @@ impl<T> [T] {\n     ///\n     /// [`as_mut_ptr`]: slice::as_mut_ptr\n     #[stable(feature = \"slice_ptr_range\", since = \"1.48.0\")]\n-    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.60.0\")]\n+    #[rustc_const_stable(feature = \"const_ptr_offset\", since = \"1.61.0\")]\n     #[rustc_allow_const_fn_unstable(const_mut_refs)]\n     #[inline]\n     #[must_use]"}]}