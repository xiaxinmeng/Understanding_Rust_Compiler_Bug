{"sha": "98bf7376142633a6674668365d4ea47b9c5be287", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4YmY3Mzc2MTQyNjMzYTY2NzQ2NjgzNjVkNGVhNDdiOWM1YmUyODc=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-06-13T15:04:46Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-06-19T07:52:35Z"}, "message": "s/intern/intern_shallow/", "tree": {"sha": "45309fa429fdddf78d1fae445d760ce863bf4032", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45309fa429fdddf78d1fae445d760ce863bf4032"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98bf7376142633a6674668365d4ea47b9c5be287", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98bf7376142633a6674668365d4ea47b9c5be287", "html_url": "https://github.com/rust-lang/rust/commit/98bf7376142633a6674668365d4ea47b9c5be287", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98bf7376142633a6674668365d4ea47b9c5be287/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "104b108406ab01d4ed96fac87a405602dab91c87", "url": "https://api.github.com/repos/rust-lang/rust/commits/104b108406ab01d4ed96fac87a405602dab91c87", "html_url": "https://github.com/rust-lang/rust/commit/104b108406ab01d4ed96fac87a405602dab91c87"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "9bbcd306651e5638b8b685bef7c5cbc8066b053c", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/98bf7376142633a6674668365d4ea47b9c5be287/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98bf7376142633a6674668365d4ea47b9c5be287/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=98bf7376142633a6674668365d4ea47b9c5be287", "patch": "@@ -59,7 +59,8 @@ enum InternMode {\n struct IsStaticOrFn;\n \n impl<'rt, 'a, 'mir, 'tcx> InternVisitor<'rt, 'a, 'mir, 'tcx> {\n-    fn intern(\n+    /// Intern an allocation without looking at its children\n+    fn intern_shallow(\n         &mut self,\n         ptr: Pointer,\n         mutability: Mutability,\n@@ -152,7 +153,7 @@ for\n                         if let Ok(vtable) = meta.unwrap().to_ptr() {\n                             // explitly choose `Immutable` here, since vtables are immutable, even\n                             // if the reference of the fat pointer is mutable\n-                            self.intern(vtable, Mutability::Immutable)?;\n+                            self.intern_shallow(vtable, Mutability::Immutable)?;\n                         }\n                     }\n                 }\n@@ -206,7 +207,7 @@ for\n                     InternMode::ConstBase => InternMode::Const,\n                     other => other,\n                 };\n-                match self.intern(ptr, intern_mutability)? {\n+                match self.intern_shallow(ptr, intern_mutability)? {\n                     // No need to recurse, these are interned already and statics may have\n                     // cycles, so we don't want to recurse there\n                     Some(IsStaticOrFn) => {},\n@@ -270,7 +271,7 @@ pub fn intern_const_alloc_recursive(\n         leftover_relocations,\n         param_env,\n         mutability,\n-    }.intern(ret.ptr.to_ptr()?, alloc_mutability)?;\n+    }.intern_shallow(ret.ptr.to_ptr()?, alloc_mutability)?;\n \n     while let Some(((mplace, mutability, mode), _)) = ref_tracking.todo.pop() {\n         let interned = InternVisitor {"}]}