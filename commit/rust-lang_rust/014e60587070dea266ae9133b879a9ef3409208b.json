{"sha": "014e60587070dea266ae9133b879a9ef3409208b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxNGU2MDU4NzA3MGRlYTI2NmFlOTEzM2I4NzlhOWVmMzQwOTIwOGI=", "commit": {"author": {"name": "Christian Poveda", "email": "git@christianpoveda.xyz", "date": "2020-06-08T20:16:23Z"}, "committer": {"name": "Christian Poveda", "email": "git@christianpoveda.xyz", "date": "2020-06-19T16:48:46Z"}, "message": "update tests", "tree": {"sha": "00ec8de0af966818229cb1b0c42d3dd83d0cf58b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00ec8de0af966818229cb1b0c42d3dd83d0cf58b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/014e60587070dea266ae9133b879a9ef3409208b", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQRsB8A/3NrzTlMMjT0nUl7150IKUAUCXuzsbgAKCRAnUl7150IK\nUPnRAP0WqU5u8uF6f+Zjw5/FRMcBje9GPhrjrUEti4KeKzDi+QEA5U8CIQuuU3Ui\nVSKT6S+qMQsxpSAFOSf/ojGo/sdvBA4=\n=Dg9R\n-----END PGP SIGNATURE-----", "payload": "tree 00ec8de0af966818229cb1b0c42d3dd83d0cf58b\nparent 2f9d33830c7bf1189dffec72cd4a9319c9e3250f\nauthor Christian Poveda <git@christianpoveda.xyz> 1591647383 -0500\ncommitter Christian Poveda <git@christianpoveda.xyz> 1592585326 -0500\n\nupdate tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/014e60587070dea266ae9133b879a9ef3409208b", "html_url": "https://github.com/rust-lang/rust/commit/014e60587070dea266ae9133b879a9ef3409208b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/014e60587070dea266ae9133b879a9ef3409208b/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f9d33830c7bf1189dffec72cd4a9319c9e3250f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f9d33830c7bf1189dffec72cd4a9319c9e3250f", "html_url": "https://github.com/rust-lang/rust/commit/2f9d33830c7bf1189dffec72cd4a9319c9e3250f"}], "stats": {"total": 107, "additions": 90, "deletions": 17}, "files": [{"sha": "c6660d2f29f622e9f1ec9455d510ae2fa08fe194", "filename": "src/test/ui/consts/const-mut-refs/const_mut_address_of.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_address_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_address_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_address_of.rs?ref=014e60587070dea266ae9133b879a9ef3409208b", "patch": "@@ -1,5 +1,3 @@\n-// check-pass\n-\n #![feature(const_mut_refs)]\n #![feature(const_fn)]\n #![feature(raw_ref_op)]\n@@ -24,7 +22,9 @@ const fn baz(foo: &mut Foo)-> *mut usize {\n \n const _: () = {\n     foo().bar();\n+    //~^ ERROR references in constants may only refer to immutable values\n     baz(&mut foo());\n+    //~^ ERROR references in constants may only refer to immutable values\n };\n \n fn main() {}"}, {"sha": "f4af69701e3f0bef63996bc01686095be720f634", "filename": "src/test/ui/consts/const-mut-refs/const_mut_address_of.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_address_of.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_address_of.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_address_of.stderr?ref=014e60587070dea266ae9133b879a9ef3409208b", "patch": "@@ -0,0 +1,21 @@\n+error[E0658]: references in constants may only refer to immutable values\n+  --> $DIR/const_mut_address_of.rs:24:5\n+   |\n+LL |     foo().bar();\n+   |     ^^^^^ constants require immutable values\n+   |\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+\n+error[E0658]: references in constants may only refer to immutable values\n+  --> $DIR/const_mut_address_of.rs:26:9\n+   |\n+LL |     baz(&mut foo());\n+   |         ^^^^^^^^^^ constants require immutable values\n+   |\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "ddcd94f9db980d6f0954de5ff0dd5fecff9a0cf4", "filename": "src/test/ui/consts/const-mut-refs/const_mut_refs.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_refs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_refs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_refs.rs?ref=014e60587070dea266ae9133b879a9ef3409208b", "patch": "@@ -1,5 +1,3 @@\n-// run-pass\n-\n #![feature(const_mut_refs)]\n \n struct Foo {\n@@ -31,6 +29,9 @@ const fn bazz(foo: &mut Foo) -> usize {\n \n fn main() {\n     let _: [(); foo().bar()] = [(); 1];\n+    //~^ ERROR references in constants may only refer to immutable values\n     let _: [(); baz(&mut foo())] = [(); 2];\n+    //~^ ERROR references in constants may only refer to immutable values\n     let _: [(); bazz(&mut foo())] = [(); 3];\n+    //~^ ERROR references in constants may only refer to immutable values\n }"}, {"sha": "b2aa577ae67f8b1eb6d8f16c93c0cd9401334f31", "filename": "src/test/ui/consts/const-mut-refs/const_mut_refs.stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_refs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_refs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_refs.stderr?ref=014e60587070dea266ae9133b879a9ef3409208b", "patch": "@@ -0,0 +1,30 @@\n+error[E0658]: references in constants may only refer to immutable values\n+  --> $DIR/const_mut_refs.rs:31:17\n+   |\n+LL |     let _: [(); foo().bar()] = [(); 1];\n+   |                 ^^^^^ constants require immutable values\n+   |\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+\n+error[E0658]: references in constants may only refer to immutable values\n+  --> $DIR/const_mut_refs.rs:33:21\n+   |\n+LL |     let _: [(); baz(&mut foo())] = [(); 2];\n+   |                     ^^^^^^^^^^ constants require immutable values\n+   |\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+\n+error[E0658]: references in constants may only refer to immutable values\n+  --> $DIR/const_mut_refs.rs:35:22\n+   |\n+LL |     let _: [(); bazz(&mut foo())] = [(); 3];\n+   |                      ^^^^^^^^^^ constants require immutable values\n+   |\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "9d6ec0a115f8f079e886f3b9271707ab3cbe7034", "filename": "src/test/ui/consts/projection_qualif.mut_refs.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.mut_refs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.mut_refs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.mut_refs.stderr?ref=014e60587070dea266ae9133b879a9ef3409208b", "patch": "@@ -1,3 +1,12 @@\n+error[E0658]: references in constants may only refer to immutable values\n+  --> $DIR/projection_qualif.rs:10:27\n+   |\n+LL |         let b: *mut u32 = &mut a;\n+   |                           ^^^^^^ constants require immutable values\n+   |\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+\n error[E0658]: dereferencing raw pointers in constants is unstable\n   --> $DIR/projection_qualif.rs:11:18\n    |\n@@ -7,6 +16,6 @@ LL |         unsafe { *b = 5; }\n    = note: see issue #51911 <https://github.com/rust-lang/rust/issues/51911> for more information\n    = help: add `#![feature(const_raw_ptr_deref)]` to the crate attributes to enable\n \n-error: aborting due to previous error\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "52fb1106a3368891a2271be34a785fd7e9a621a0", "filename": "src/test/ui/consts/projection_qualif.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.rs?ref=014e60587070dea266ae9133b879a9ef3409208b", "patch": "@@ -7,7 +7,7 @@ use std::cell::Cell;\n const FOO: &u32 = {\n     let mut a = 42;\n     {\n-        let b: *mut u32 = &mut a; //[stock]~ ERROR may only refer to immutable values\n+        let b: *mut u32 = &mut a; //~ ERROR may only refer to immutable values\n         unsafe { *b = 5; } //~ ERROR dereferencing raw pointers in constants\n         //[stock]~^ contains unimplemented expression\n     }"}, {"sha": "beb2c3f075d2bec9a5534b3ff6a480c1a666beeb", "filename": "src/test/ui/consts/read_from_static_mut_ref.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fread_from_static_mut_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fread_from_static_mut_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fread_from_static_mut_ref.rs?ref=014e60587070dea266ae9133b879a9ef3409208b", "patch": "@@ -1,10 +1,8 @@\n-// run-pass\n #![feature(const_mut_refs)]\n #![allow(const_err)]\n \n-static OH_YES: &mut i32 = &mut 42;\n-\n+static OH_NO: &mut i32 = &mut 42;\n+//~^ ERROR references in statics may only refer to immutable values\n fn main() {\n-    // Make sure `OH_YES` can be read.\n-    assert_eq!(*OH_YES, 42);\n+    assert_eq!(*OH_NO, 42);\n }"}, {"sha": "7e37eaa9cfab2b830bdf77949832220ef8400a96", "filename": "src/test/ui/consts/read_from_static_mut_ref.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fread_from_static_mut_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fread_from_static_mut_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fread_from_static_mut_ref.stderr?ref=014e60587070dea266ae9133b879a9ef3409208b", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: references in statics may only refer to immutable values\n+  --> $DIR/read_from_static_mut_ref.rs:4:26\n+   |\n+LL | static OH_NO: &mut i32 = &mut 42;\n+   |                          ^^^^^^^ statics require immutable values\n+   |\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "ab0b7c2b6d449c57a9533d159031b38028b65a5c", "filename": "src/test/ui/consts/static_mut_containing_mut_ref2.mut_refs.stderr", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.mut_refs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.mut_refs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.mut_refs.stderr?ref=014e60587070dea266ae9133b879a9ef3409208b", "patch": "@@ -1,9 +1,12 @@\n-error[E0080]: could not evaluate static initializer\n-  --> $DIR/static_mut_containing_mut_ref2.rs:7:45\n+error[E0658]: references in statics may only refer to immutable values\n+  --> $DIR/static_mut_containing_mut_ref2.rs:7:46\n    |\n LL | pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 42; };\n-   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ modifying a static's initial value from another static's initializer\n+   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ statics require immutable values\n+   |\n+   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n+   = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0080`.\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "8f2ea83c505c8279a854b19060d7472aacf7052a", "filename": "src/test/ui/consts/static_mut_containing_mut_ref2.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/014e60587070dea266ae9133b879a9ef3409208b/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.rs?ref=014e60587070dea266ae9133b879a9ef3409208b", "patch": "@@ -5,8 +5,7 @@\n static mut STDERR_BUFFER_SPACE: u8 = 0;\n \n pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 42; };\n-//[mut_refs]~^ ERROR could not evaluate static initializer\n-//[stock]~^^ ERROR references in statics may only refer to immutable values\n+//~^ ERROR references in statics may only refer to immutable values\n //[stock]~| ERROR static contains unimplemented expression type\n \n fn main() {}"}]}