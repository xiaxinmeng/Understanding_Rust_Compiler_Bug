{"sha": "c98e893badd1204797e261a0ebf2341f01ff1a61", "node_id": "C_kwDOAAsO6NoAKGM5OGU4OTNiYWRkMTIwNDc5N2UyNjFhMGViZjIzNDFmMDFmZjFhNjE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-07-31T21:39:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-31T21:39:41Z"}, "message": "Rollup merge of #99932 - madsmtm:fix-unwinding-debug-assertions, r=Amanieu\n\nFix unwinding on certain platforms when debug assertions are enabled\n\nThis came up on `armv7-apple-ios` when using `-Zbuild-std`.\n\nLooks like this is a leftover from a [conversion from C to Rust](051c2d14fb1e73866376668088971605d38f0c65), where integer wrapping is implicit.\n\nNot at all sure how the unwinding code works!", "tree": {"sha": "cd91f013635fcebf08f8231cf0b26f9322742692", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd91f013635fcebf08f8231cf0b26f9322742692"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c98e893badd1204797e261a0ebf2341f01ff1a61", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi5vadCRBK7hj4Ov3rIwAAFfQIAF/leFWCj9XBSmenrGsgvXMj\nyYDzmPE/YAGJ/tqSPGJYfJknC4WgQ6VyLH3x691BXBa3c/dYFlrmuOpMLmpB9H9O\nx7r8/6APsQmQ7yukGeYvyICSTdhEb31qtKn37CwzwNZ9W+tRIQ9XCB+8z3pXlKkd\nN02bIXgfc1hmtZ8yO/2yewmzmK5N2xZ5M0gof2RDzFsAvZcYm17QSb02M4lbg/vn\nyxxMtgl4ZJ2Nww1X5varmhFPFeQ0nQaHjzvHmpvpIQPFbDG59NsZEzmCyhYOIGIL\nt59nI0ERNtJ9ziVb0zRavHJdytqZKRJfsiN/PvAJImB/96qUWxGp2qR67CwF9vc=\n=5c7O\n-----END PGP SIGNATURE-----\n", "payload": "tree cd91f013635fcebf08f8231cf0b26f9322742692\nparent 9cc06eb54d53e9b29d7ddcf3b26274cef335b75b\nparent 15b7a087471533086df538bc1a21b475f3ef032e\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1659303581 +0200\ncommitter GitHub <noreply@github.com> 1659303581 +0200\n\nRollup merge of #99932 - madsmtm:fix-unwinding-debug-assertions, r=Amanieu\n\nFix unwinding on certain platforms when debug assertions are enabled\n\nThis came up on `armv7-apple-ios` when using `-Zbuild-std`.\n\nLooks like this is a leftover from a [conversion from C to Rust](051c2d14fb1e73866376668088971605d38f0c65), where integer wrapping is implicit.\n\nNot at all sure how the unwinding code works!\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c98e893badd1204797e261a0ebf2341f01ff1a61", "html_url": "https://github.com/rust-lang/rust/commit/c98e893badd1204797e261a0ebf2341f01ff1a61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c98e893badd1204797e261a0ebf2341f01ff1a61/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cc06eb54d53e9b29d7ddcf3b26274cef335b75b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cc06eb54d53e9b29d7ddcf3b26274cef335b75b", "html_url": "https://github.com/rust-lang/rust/commit/9cc06eb54d53e9b29d7ddcf3b26274cef335b75b"}, {"sha": "15b7a087471533086df538bc1a21b475f3ef032e", "url": "https://api.github.com/repos/rust-lang/rust/commits/15b7a087471533086df538bc1a21b475f3ef032e", "html_url": "https://github.com/rust-lang/rust/commit/15b7a087471533086df538bc1a21b475f3ef032e"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "a596592311a640c000f8116fee3eece7e02f30f0", "filename": "library/panic_unwind/src/gcc.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c98e893badd1204797e261a0ebf2341f01ff1a61/library%2Fpanic_unwind%2Fsrc%2Fgcc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c98e893badd1204797e261a0ebf2341f01ff1a61/library%2Fpanic_unwind%2Fsrc%2Fgcc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fpanic_unwind%2Fsrc%2Fgcc.rs?ref=c98e893badd1204797e261a0ebf2341f01ff1a61", "patch": "@@ -306,7 +306,9 @@ unsafe fn find_eh_action(context: *mut uw::_Unwind_Context) -> Result<EHAction,\n     let eh_context = EHContext {\n         // The return address points 1 byte past the call instruction,\n         // which could be in the next IP range in LSDA range table.\n-        ip: if ip_before_instr != 0 { ip } else { ip - 1 },\n+        //\n+        // `ip = -1` has special meaning, so use wrapping sub to allow for that\n+        ip: if ip_before_instr != 0 { ip } else { ip.wrapping_sub(1) },\n         func_start: uw::_Unwind_GetRegionStart(context),\n         get_text_start: &|| uw::_Unwind_GetTextRelBase(context),\n         get_data_start: &|| uw::_Unwind_GetDataRelBase(context),"}]}