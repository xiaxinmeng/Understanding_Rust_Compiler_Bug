{"sha": "be5672ecb2f9397bf9280c6a9d72fa0d6014993d", "node_id": "C_kwDOAAsO6NoAKGJlNTY3MmVjYjJmOTM5N2JmOTI4MGM2YTlkNzJmYTBkNjAxNDk5M2Q", "commit": {"author": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2022-08-10T03:31:45Z"}, "committer": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2022-08-10T03:31:45Z"}, "message": "Stringify non-shorthand visibility correctly", "tree": {"sha": "1c6e4a5f71d81daf1c96d6d91cc591d3ca07475f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c6e4a5f71d81daf1c96d6d91cc591d3ca07475f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be5672ecb2f9397bf9280c6a9d72fa0d6014993d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQTgxeqBxcDGar1sVhy4DhnkZitapAUCYvMmuAAKCRC4DhnkZita\npK47AQCHAgpS5m1pqcOn/S2BufCjZYiQ0TQCkLJpUXY3XIN0dgEA3T3tciTq+TPn\nj4uDgxTVrNSfOWsd4CmWYRnhZbua3gQ=\n=4YLn\n-----END PGP SIGNATURE-----", "payload": "tree 1c6e4a5f71d81daf1c96d6d91cc591d3ca07475f\nparent 34a6cae28e7013ff0e640026a8e46f315426829d\nauthor Jacob Pratt <jacob@jhpratt.dev> 1660102305 -0400\ncommitter Jacob Pratt <jacob@jhpratt.dev> 1660102305 -0400\n\nStringify non-shorthand visibility correctly\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be5672ecb2f9397bf9280c6a9d72fa0d6014993d", "html_url": "https://github.com/rust-lang/rust/commit/be5672ecb2f9397bf9280c6a9d72fa0d6014993d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be5672ecb2f9397bf9280c6a9d72fa0d6014993d/comments", "author": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34a6cae28e7013ff0e640026a8e46f315426829d", "url": "https://api.github.com/repos/rust-lang/rust/commits/34a6cae28e7013ff0e640026a8e46f315426829d", "html_url": "https://github.com/rust-lang/rust/commit/34a6cae28e7013ff0e640026a8e46f315426829d"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "4e498ece7b72592a97e8dd903c5f43fb625d938a", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be5672ecb2f9397bf9280c6a9d72fa0d6014993d/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be5672ecb2f9397bf9280c6a9d72fa0d6014993d/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=be5672ecb2f9397bf9280c6a9d72fa0d6014993d", "patch": "@@ -2602,7 +2602,7 @@ pub struct Visibility {\n #[derive(Clone, Encodable, Decodable, Debug)]\n pub enum VisibilityKind {\n     Public,\n-    Restricted { path: P<Path>, id: NodeId },\n+    Restricted { path: P<Path>, id: NodeId, shorthand: bool },\n     Inherited,\n }\n "}, {"sha": "cd7828a0a5fe61a8e27d1981724a0c136d836c3e", "filename": "compiler/rustc_ast/src/mut_visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be5672ecb2f9397bf9280c6a9d72fa0d6014993d/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be5672ecb2f9397bf9280c6a9d72fa0d6014993d/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs?ref=be5672ecb2f9397bf9280c6a9d72fa0d6014993d", "patch": "@@ -1486,7 +1486,7 @@ pub fn noop_flat_map_stmt_kind<T: MutVisitor>(\n pub fn noop_visit_vis<T: MutVisitor>(visibility: &mut Visibility, vis: &mut T) {\n     match &mut visibility.kind {\n         VisibilityKind::Public | VisibilityKind::Inherited => {}\n-        VisibilityKind::Restricted { path, id } => {\n+        VisibilityKind::Restricted { path, id, shorthand: _ } => {\n             vis.visit_path(path);\n             vis.visit_id(id);\n         }"}, {"sha": "936eaaa54a97ab99d999055e2eb4ac8419771c64", "filename": "compiler/rustc_ast/src/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be5672ecb2f9397bf9280c6a9d72fa0d6014993d/compiler%2Frustc_ast%2Fsrc%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be5672ecb2f9397bf9280c6a9d72fa0d6014993d/compiler%2Frustc_ast%2Fsrc%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fvisit.rs?ref=be5672ecb2f9397bf9280c6a9d72fa0d6014993d", "patch": "@@ -935,7 +935,7 @@ pub fn walk_arm<'a, V: Visitor<'a>>(visitor: &mut V, arm: &'a Arm) {\n }\n \n pub fn walk_vis<'a, V: Visitor<'a>>(visitor: &mut V, vis: &'a Visibility) {\n-    if let VisibilityKind::Restricted { ref path, id } = vis.kind {\n+    if let VisibilityKind::Restricted { ref path, id, shorthand: _ } = vis.kind {\n         visitor.visit_path(path, id);\n     }\n }"}, {"sha": "bd87987010e8fd2a15ae17ef490ef2547a3c6077", "filename": "compiler/rustc_ast_pretty/src/pprust/state/item.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/be5672ecb2f9397bf9280c6a9d72fa0d6014993d/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be5672ecb2f9397bf9280c6a9d72fa0d6014993d/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fitem.rs?ref=be5672ecb2f9397bf9280c6a9d72fa0d6014993d", "patch": "@@ -412,9 +412,9 @@ impl<'a> State<'a> {\n     pub(crate) fn print_visibility(&mut self, vis: &ast::Visibility) {\n         match vis.kind {\n             ast::VisibilityKind::Public => self.word_nbsp(\"pub\"),\n-            ast::VisibilityKind::Restricted { ref path, .. } => {\n+            ast::VisibilityKind::Restricted { ref path, id: _, shorthand } => {\n                 let path = Self::to_string(|s| s.print_path(path, false, 0));\n-                if path == \"crate\" || path == \"self\" || path == \"super\" {\n+                if shorthand && (path == \"crate\" || path == \"self\" || path == \"super\") {\n                     self.word_nbsp(format!(\"pub({})\", path))\n                 } else {\n                     self.word_nbsp(format!(\"pub(in {})\", path))"}, {"sha": "c088b6e1e0e2e36d688e34fde184e16a33963603", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/be5672ecb2f9397bf9280c6a9d72fa0d6014993d/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be5672ecb2f9397bf9280c6a9d72fa0d6014993d/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=be5672ecb2f9397bf9280c6a9d72fa0d6014993d", "patch": "@@ -1295,7 +1295,11 @@ impl<'a> Parser<'a> {\n                 self.bump(); // `in`\n                 let path = self.parse_path(PathStyle::Mod)?; // `path`\n                 self.expect(&token::CloseDelim(Delimiter::Parenthesis))?; // `)`\n-                let vis = VisibilityKind::Restricted { path: P(path), id: ast::DUMMY_NODE_ID };\n+                let vis = VisibilityKind::Restricted {\n+                    path: P(path),\n+                    id: ast::DUMMY_NODE_ID,\n+                    shorthand: false,\n+                };\n                 return Ok(Visibility {\n                     span: lo.to(self.prev_token.span),\n                     kind: vis,\n@@ -1308,7 +1312,11 @@ impl<'a> Parser<'a> {\n                 self.bump(); // `(`\n                 let path = self.parse_path(PathStyle::Mod)?; // `crate`/`super`/`self`\n                 self.expect(&token::CloseDelim(Delimiter::Parenthesis))?; // `)`\n-                let vis = VisibilityKind::Restricted { path: P(path), id: ast::DUMMY_NODE_ID };\n+                let vis = VisibilityKind::Restricted {\n+                    path: P(path),\n+                    id: ast::DUMMY_NODE_ID,\n+                    shorthand: true,\n+                };\n                 return Ok(Visibility {\n                     span: lo.to(self.prev_token.span),\n                     kind: vis,"}, {"sha": "8e71ed7c1120f0342ea6176da719cf0495f58c36", "filename": "src/test/ui/macros/stringify.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/be5672ecb2f9397bf9280c6a9d72fa0d6014993d/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be5672ecb2f9397bf9280c6a9d72fa0d6014993d/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs?ref=be5672ecb2f9397bf9280c6a9d72fa0d6014993d", "patch": "@@ -865,8 +865,9 @@ fn test_vis() {\n     assert_eq!(stringify_vis!(pub(crate)), \"pub(crate) \");\n     assert_eq!(stringify_vis!(pub(self)), \"pub(self) \");\n     assert_eq!(stringify_vis!(pub(super)), \"pub(super) \");\n-    assert_eq!(stringify_vis!(pub(in self)), \"pub(self) \");\n-    assert_eq!(stringify_vis!(pub(in super)), \"pub(super) \");\n+    assert_eq!(stringify_vis!(pub(in crate)), \"pub(in crate) \");\n+    assert_eq!(stringify_vis!(pub(in self)), \"pub(in self) \");\n+    assert_eq!(stringify_vis!(pub(in super)), \"pub(in super) \");\n     assert_eq!(stringify_vis!(pub(in path::to)), \"pub(in path::to) \");\n     assert_eq!(stringify_vis!(pub(in ::path::to)), \"pub(in ::path::to) \");\n     assert_eq!(stringify_vis!(pub(in self::path::to)), \"pub(in self::path::to) \");"}]}