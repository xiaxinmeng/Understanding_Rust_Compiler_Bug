{"sha": "3a8448c3ff811d301c06bae6772b393d0236e363", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhODQ0OGMzZmY4MTFkMzAxYzA2YmFlNjc3MmIzOTNkMDIzNmUzNjM=", "commit": {"author": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-02-12T10:40:36Z"}, "committer": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-02-12T15:16:12Z"}, "message": "Fix rustc_driver swallowing errors when compilation is stopped", "tree": {"sha": "9be4d260ba0626dd79366bbe9dda747e0e7dc7cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9be4d260ba0626dd79366bbe9dda747e0e7dc7cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a8448c3ff811d301c06bae6772b393d0236e363", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a8448c3ff811d301c06bae6772b393d0236e363", "html_url": "https://github.com/rust-lang/rust/commit/3a8448c3ff811d301c06bae6772b393d0236e363", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a8448c3ff811d301c06bae6772b393d0236e363/comments", "author": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1731801163df1d3a8d4ddfa68adac2ec833ef7f", "html_url": "https://github.com/rust-lang/rust/commit/d1731801163df1d3a8d4ddfa68adac2ec833ef7f"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "12cea3062885de9dad9d6100a8ffa70bc4caab8a", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3a8448c3ff811d301c06bae6772b393d0236e363/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a8448c3ff811d301c06bae6772b393d0236e363/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=3a8448c3ff811d301c06bae6772b393d0236e363", "patch": "@@ -296,6 +296,11 @@ pub fn compile_input(\n                         (control.after_analysis.callback)(&mut state);\n                     });\n \n+                    // Plugins like clippy and rust-semverver stop the analysis early,\n+                    // but want to still return an error if errors during the analysis\n+                    // happened:\n+                    tcx.sess.compile_status()?;\n+\n                     if control.after_analysis.stop == Compilation::Stop {\n                         return result.and_then(|_| Err(CompileIncomplete::Stopped));\n                     }"}]}