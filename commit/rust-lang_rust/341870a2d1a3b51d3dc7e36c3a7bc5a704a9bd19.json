{"sha": "341870a2d1a3b51d3dc7e36c3a7bc5a704a9bd19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0MTg3MGEyZDFhM2I1MWQzZGM3ZTM2YzNhN2JjNWE3MDRhOWJkMTk=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-09T08:35:27Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-09T08:36:07Z"}, "message": "Fix the span for `for` expressions", "tree": {"sha": "b846497210d30f6fe3bf0daa95bc9c03404e70e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b846497210d30f6fe3bf0daa95bc9c03404e70e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/341870a2d1a3b51d3dc7e36c3a7bc5a704a9bd19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/341870a2d1a3b51d3dc7e36c3a7bc5a704a9bd19", "html_url": "https://github.com/rust-lang/rust/commit/341870a2d1a3b51d3dc7e36c3a7bc5a704a9bd19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/341870a2d1a3b51d3dc7e36c3a7bc5a704a9bd19/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "287a544a309b840fd715fe1d5b651b5116bf08fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/287a544a309b840fd715fe1d5b651b5116bf08fa", "html_url": "https://github.com/rust-lang/rust/commit/287a544a309b840fd715fe1d5b651b5116bf08fa"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3cc16006b1b9c08a0812ad7033a8d562755f6b3f", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/341870a2d1a3b51d3dc7e36c3a7bc5a704a9bd19/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/341870a2d1a3b51d3dc7e36c3a7bc5a704a9bd19/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=341870a2d1a3b51d3dc7e36c3a7bc5a704a9bd19", "patch": "@@ -2880,7 +2880,7 @@ impl<'a> Parser<'a> {\n         try!(self.expect_keyword(keywords::In));\n         let expr = try!(self.parse_expr_res(RESTRICTION_NO_STRUCT_LITERAL));\n         let loop_block = try!(self.parse_block());\n-        let hi = self.span.hi;\n+        let hi = self.last_span.hi;\n \n         Ok(self.mk_expr(lo, hi, ExprForLoop(pat, expr, loop_block, opt_ident)))\n     }"}]}