{"sha": "5366009fe47ab06e53b68811873448de52c5cd8f", "node_id": "C_kwDOAAsO6NoAKDUzNjYwMDlmZTQ3YWIwNmU1M2I2ODgxMTg3MzQ0OGRlNTJjNWNkOGY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-09T21:03:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-09T21:03:04Z"}, "message": "Auto merge of #12987 - Veykril:ellipsis-recov, r=Veykril\n\nRecover from missing ellipsis in record literals for path expressions", "tree": {"sha": "ff75ae01722e96147b4d8656445dd58cf7a6830b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff75ae01722e96147b4d8656445dd58cf7a6830b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5366009fe47ab06e53b68811873448de52c5cd8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5366009fe47ab06e53b68811873448de52c5cd8f", "html_url": "https://github.com/rust-lang/rust/commit/5366009fe47ab06e53b68811873448de52c5cd8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5366009fe47ab06e53b68811873448de52c5cd8f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d186986af23cb42b19d4058ca67b5da9e73d2cb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d186986af23cb42b19d4058ca67b5da9e73d2cb0", "html_url": "https://github.com/rust-lang/rust/commit/d186986af23cb42b19d4058ca67b5da9e73d2cb0"}, {"sha": "49d24f639f60325000463f6bb20d832c0ac72da6", "url": "https://api.github.com/repos/rust-lang/rust/commits/49d24f639f60325000463f6bb20d832c0ac72da6", "html_url": "https://github.com/rust-lang/rust/commit/49d24f639f60325000463f6bb20d832c0ac72da6"}], "stats": {"total": 123, "additions": 116, "deletions": 7}, "files": [{"sha": "dcaceade652ab654263e2f20d865e58395175abe", "filename": "crates/parser/src/grammar/expressions.rs", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/5366009fe47ab06e53b68811873448de52c5cd8f/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5366009fe47ab06e53b68811873448de52c5cd8f/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=5366009fe47ab06e53b68811873448de52c5cd8f", "patch": "@@ -564,8 +564,10 @@ fn path_expr(p: &mut Parser<'_>, r: Restrictions) -> (CompletedMarker, BlockLike\n // test record_lit\n // fn foo() {\n //     S {};\n+//     S { x };\n //     S { x, y: 32, };\n //     S { x, y: 32, ..Default::default() };\n+//     S { x: ::default() };\n //     TupleStruct { 0: 1 };\n // }\n pub(crate) fn record_expr_field_list(p: &mut Parser<'_>) {\n@@ -582,16 +584,26 @@ pub(crate) fn record_expr_field_list(p: &mut Parser<'_>) {\n \n         match p.current() {\n             IDENT | INT_NUMBER => {\n-                // test_err record_literal_before_ellipsis_recovery\n+                // test_err record_literal_missing_ellipsis_recovery\n                 // fn main() {\n-                //     S { field ..S::default() }\n+                //     S { S::default() }\n                 // }\n-                if p.nth_at(1, T![:]) || p.nth_at(1, T![..]) {\n-                    name_ref_or_index(p);\n-                    p.expect(T![:]);\n+                if p.nth_at(1, T![::]) {\n+                    m.abandon(p);\n+                    p.expect(T![..]);\n+                    expr(p);\n+                } else {\n+                    // test_err record_literal_before_ellipsis_recovery\n+                    // fn main() {\n+                    //     S { field ..S::default() }\n+                    // }\n+                    if p.nth_at(1, T![:]) || p.nth_at(1, T![..]) {\n+                        name_ref_or_index(p);\n+                        p.expect(T![:]);\n+                    }\n+                    expr(p);\n+                    m.complete(p, RECORD_EXPR_FIELD);\n                 }\n-                expr(p);\n-                m.complete(p, RECORD_EXPR_FIELD);\n             }\n             T![.] if p.at(T![..]) => {\n                 m.abandon(p);"}, {"sha": "0c5b618e6f05c37a223cd8b4ea6d085f94b3186a", "filename": "crates/parser/test_data/parser/inline/err/0014_record_literal_missing_ellipsis_recovery.rast", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/5366009fe47ab06e53b68811873448de52c5cd8f/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_record_literal_missing_ellipsis_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/5366009fe47ab06e53b68811873448de52c5cd8f/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_record_literal_missing_ellipsis_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_record_literal_missing_ellipsis_recovery.rast?ref=5366009fe47ab06e53b68811873448de52c5cd8f", "patch": "@@ -0,0 +1,43 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"main\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        WHITESPACE \"\\n    \"\n+        RECORD_EXPR\n+          PATH\n+            PATH_SEGMENT\n+              NAME_REF\n+                IDENT \"S\"\n+          WHITESPACE \" \"\n+          RECORD_EXPR_FIELD_LIST\n+            L_CURLY \"{\"\n+            WHITESPACE \" \"\n+            CALL_EXPR\n+              PATH_EXPR\n+                PATH\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"S\"\n+                  COLON2 \"::\"\n+                  PATH_SEGMENT\n+                    NAME_REF\n+                      IDENT \"default\"\n+              ARG_LIST\n+                L_PAREN \"(\"\n+                R_PAREN \")\"\n+            WHITESPACE \" \"\n+            R_CURLY \"}\"\n+        WHITESPACE \"\\n\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+error 19: expected DOT2"}, {"sha": "1b594e8ab962cf8084cc0b5970f38133fd3e6785", "filename": "crates/parser/test_data/parser/inline/err/0014_record_literal_missing_ellipsis_recovery.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5366009fe47ab06e53b68811873448de52c5cd8f/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_record_literal_missing_ellipsis_recovery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5366009fe47ab06e53b68811873448de52c5cd8f/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_record_literal_missing_ellipsis_recovery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_record_literal_missing_ellipsis_recovery.rs?ref=5366009fe47ab06e53b68811873448de52c5cd8f", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    S { S::default() }\n+}"}, {"sha": "00948c322f4c949ff757ba9711ee128074ceb8f7", "filename": "crates/parser/test_data/parser/inline/ok/0061_record_lit.rast", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/5366009fe47ab06e53b68811873448de52c5cd8f/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_record_lit.rast", "raw_url": "https://github.com/rust-lang/rust/raw/5366009fe47ab06e53b68811873448de52c5cd8f/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_record_lit.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_record_lit.rast?ref=5366009fe47ab06e53b68811873448de52c5cd8f", "patch": "@@ -24,6 +24,26 @@ SOURCE_FILE\n               R_CURLY \"}\"\n           SEMICOLON \";\"\n         WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          RECORD_EXPR\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"S\"\n+            WHITESPACE \" \"\n+            RECORD_EXPR_FIELD_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \" \"\n+              RECORD_EXPR_FIELD\n+                PATH_EXPR\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"x\"\n+              WHITESPACE \" \"\n+              R_CURLY \"}\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n         EXPR_STMT\n           RECORD_EXPR\n             PATH\n@@ -100,6 +120,35 @@ SOURCE_FILE\n               R_CURLY \"}\"\n           SEMICOLON \";\"\n         WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          RECORD_EXPR\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"S\"\n+            WHITESPACE \" \"\n+            RECORD_EXPR_FIELD_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \" \"\n+              RECORD_EXPR_FIELD\n+                NAME_REF\n+                  IDENT \"x\"\n+                COLON \":\"\n+                WHITESPACE \" \"\n+                CALL_EXPR\n+                  PATH_EXPR\n+                    PATH\n+                      PATH_SEGMENT\n+                        COLON2 \"::\"\n+                        NAME_REF\n+                          IDENT \"default\"\n+                  ARG_LIST\n+                    L_PAREN \"(\"\n+                    R_PAREN \")\"\n+              WHITESPACE \" \"\n+              R_CURLY \"}\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n         EXPR_STMT\n           RECORD_EXPR\n             PATH"}, {"sha": "86411fbb7dc050866e96bf08da1b82218d374330", "filename": "crates/parser/test_data/parser/inline/ok/0061_record_lit.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5366009fe47ab06e53b68811873448de52c5cd8f/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_record_lit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5366009fe47ab06e53b68811873448de52c5cd8f/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_record_lit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_record_lit.rs?ref=5366009fe47ab06e53b68811873448de52c5cd8f", "patch": "@@ -1,6 +1,8 @@\n fn foo() {\n     S {};\n+    S { x };\n     S { x, y: 32, };\n     S { x, y: 32, ..Default::default() };\n+    S { x: ::default() };\n     TupleStruct { 0: 1 };\n }"}]}