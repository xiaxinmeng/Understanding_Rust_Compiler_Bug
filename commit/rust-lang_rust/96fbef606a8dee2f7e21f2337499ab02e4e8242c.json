{"sha": "96fbef606a8dee2f7e21f2337499ab02e4e8242c", "node_id": "C_kwDOAAsO6NoAKDk2ZmJlZjYwNmE4ZGVlMmY3ZTIxZjIzMzc0OTlhYjAyZTRlODI0MmM", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-10-20T15:03:09Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-10-20T15:03:09Z"}, "message": "Remove obsolete test module", "tree": {"sha": "4efe89f8781db147d3a013ebc998d74db1c745a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4efe89f8781db147d3a013ebc998d74db1c745a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96fbef606a8dee2f7e21f2337499ab02e4e8242c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96fbef606a8dee2f7e21f2337499ab02e4e8242c", "html_url": "https://github.com/rust-lang/rust/commit/96fbef606a8dee2f7e21f2337499ab02e4e8242c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96fbef606a8dee2f7e21f2337499ab02e4e8242c/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5051717856dd325027e003c6b64497a2b113ba07", "url": "https://api.github.com/repos/rust-lang/rust/commits/5051717856dd325027e003c6b64497a2b113ba07", "html_url": "https://github.com/rust-lang/rust/commit/5051717856dd325027e003c6b64497a2b113ba07"}], "stats": {"total": 52, "additions": 0, "deletions": 52}, "files": [{"sha": "b5970ec9645a1f284717c57e1a3d3cdd732ca44c", "filename": "crates/hir_expand/src/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/96fbef606a8dee2f7e21f2337499ab02e4e8242c/crates%2Fhir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96fbef606a8dee2f7e21f2337499ab02e4e8242c/crates%2Fhir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Flib.rs?ref=96fbef606a8dee2f7e21f2337499ab02e4e8242c", "patch": "@@ -38,9 +38,6 @@ use crate::{\n     proc_macro::ProcMacroExpander,\n };\n \n-#[cfg(test)]\n-mod test_db;\n-\n /// Input to the analyzer is a set of files, where each file is identified by\n /// `FileId` and contains source code. However, another source of source code in\n /// Rust are macros: each macro can be thought of as producing a \"temporary"}, {"sha": "7168a94624a43f8b6f770636aaa82715d87f4f85", "filename": "crates/hir_expand/src/test_db.rs", "status": "removed", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/5051717856dd325027e003c6b64497a2b113ba07/crates%2Fhir_expand%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5051717856dd325027e003c6b64497a2b113ba07/crates%2Fhir_expand%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Ftest_db.rs?ref=5051717856dd325027e003c6b64497a2b113ba07", "patch": "@@ -1,49 +0,0 @@\n-//! Database used for testing `hir_expand`.\n-\n-use std::{\n-    fmt, panic,\n-    sync::{Arc, Mutex},\n-};\n-\n-use base_db::{salsa, AnchoredPath, CrateId, FileId, FileLoader, FileLoaderDelegate};\n-use rustc_hash::FxHashSet;\n-\n-#[salsa::database(\n-    base_db::SourceDatabaseExtStorage,\n-    base_db::SourceDatabaseStorage,\n-    crate::db::AstDatabaseStorage\n-)]\n-#[derive(Default)]\n-pub(crate) struct TestDB {\n-    storage: salsa::Storage<TestDB>,\n-    events: Mutex<Option<Vec<salsa::Event>>>,\n-}\n-\n-impl fmt::Debug for TestDB {\n-    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.debug_struct(\"TestDB\").finish()\n-    }\n-}\n-\n-impl salsa::Database for TestDB {\n-    fn salsa_event(&self, event: salsa::Event) {\n-        let mut events = self.events.lock().unwrap();\n-        if let Some(events) = &mut *events {\n-            events.push(event);\n-        }\n-    }\n-}\n-\n-impl panic::RefUnwindSafe for TestDB {}\n-\n-impl FileLoader for TestDB {\n-    fn file_text(&self, file_id: FileId) -> Arc<String> {\n-        FileLoaderDelegate(self).file_text(file_id)\n-    }\n-    fn resolve_path(&self, path: AnchoredPath) -> Option<FileId> {\n-        FileLoaderDelegate(self).resolve_path(path)\n-    }\n-    fn relevant_crates(&self, file_id: FileId) -> Arc<FxHashSet<CrateId>> {\n-        FileLoaderDelegate(self).relevant_crates(file_id)\n-    }\n-}"}]}