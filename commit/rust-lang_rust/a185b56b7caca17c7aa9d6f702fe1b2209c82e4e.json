{"sha": "a185b56b7caca17c7aa9d6f702fe1b2209c82e4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExODViNTZiN2NhY2ExN2M3YWE5ZDZmNzAyZmUxYjIyMDljODJlNGU=", "commit": {"author": {"name": "Tatsuyuki Ishi", "email": "ishitatsuyuki@gmail.com", "date": "2018-03-18T14:02:06Z"}, "committer": {"name": "Tatsuyuki Ishi", "email": "ishitatsuyuki@gmail.com", "date": "2018-03-19T02:41:28Z"}, "message": "Address review comments", "tree": {"sha": "466100d0d7eae30a20d65f9b9ab2e6792cc864f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/466100d0d7eae30a20d65f9b9ab2e6792cc864f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a185b56b7caca17c7aa9d6f702fe1b2209c82e4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a185b56b7caca17c7aa9d6f702fe1b2209c82e4e", "html_url": "https://github.com/rust-lang/rust/commit/a185b56b7caca17c7aa9d6f702fe1b2209c82e4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a185b56b7caca17c7aa9d6f702fe1b2209c82e4e/comments", "author": {"login": "ishitatsuyuki", "id": 12389383, "node_id": "MDQ6VXNlcjEyMzg5Mzgz", "avatar_url": "https://avatars.githubusercontent.com/u/12389383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishitatsuyuki", "html_url": "https://github.com/ishitatsuyuki", "followers_url": "https://api.github.com/users/ishitatsuyuki/followers", "following_url": "https://api.github.com/users/ishitatsuyuki/following{/other_user}", "gists_url": "https://api.github.com/users/ishitatsuyuki/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishitatsuyuki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishitatsuyuki/subscriptions", "organizations_url": "https://api.github.com/users/ishitatsuyuki/orgs", "repos_url": "https://api.github.com/users/ishitatsuyuki/repos", "events_url": "https://api.github.com/users/ishitatsuyuki/events{/privacy}", "received_events_url": "https://api.github.com/users/ishitatsuyuki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ishitatsuyuki", "id": 12389383, "node_id": "MDQ6VXNlcjEyMzg5Mzgz", "avatar_url": "https://avatars.githubusercontent.com/u/12389383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishitatsuyuki", "html_url": "https://github.com/ishitatsuyuki", "followers_url": "https://api.github.com/users/ishitatsuyuki/followers", "following_url": "https://api.github.com/users/ishitatsuyuki/following{/other_user}", "gists_url": "https://api.github.com/users/ishitatsuyuki/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishitatsuyuki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishitatsuyuki/subscriptions", "organizations_url": "https://api.github.com/users/ishitatsuyuki/orgs", "repos_url": "https://api.github.com/users/ishitatsuyuki/repos", "events_url": "https://api.github.com/users/ishitatsuyuki/events{/privacy}", "received_events_url": "https://api.github.com/users/ishitatsuyuki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bb89f1b3cf1e4b5fa83391872136251c0030c1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bb89f1b3cf1e4b5fa83391872136251c0030c1e", "html_url": "https://github.com/rust-lang/rust/commit/1bb89f1b3cf1e4b5fa83391872136251c0030c1e"}], "stats": {"total": 51, "additions": 39, "deletions": 12}, "files": [{"sha": "e39a2c2f5dcd9d8dbfe0e6a7e99a2ffd5a20a409", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a185b56b7caca17c7aa9d6f702fe1b2209c82e4e/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a185b56b7caca17c7aa9d6f702fe1b2209c82e4e/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=a185b56b7caca17c7aa9d6f702fe1b2209c82e4e", "patch": "@@ -1476,13 +1476,15 @@ pub fn in_rustc_thread<F, R>(f: F) -> Result<R, Box<Any + Send>>\n         } else if rlim.rlim_max < STACK_SIZE as libc::rlim_t {\n             true\n         } else {\n+            std::rt::deinit_stack_guard();\n             rlim.rlim_cur = STACK_SIZE as libc::rlim_t;\n             if libc::setrlimit(libc::RLIMIT_STACK, &mut rlim) != 0 {\n                 let err = io::Error::last_os_error();\n-                error!(\"in_rustc_thread: error calling setrlimit: {}\", err);\n-                true\n+                // We have already deinited the stack. Further corruption is\n+                // not allowed.\n+                panic!(\"in_rustc_thread: error calling setrlimit: {}\", err);\n             } else {\n-                std::thread::update_stack_guard();\n+                std::rt::update_stack_guard();\n                 false\n             }\n         }"}, {"sha": "8f945470b7e94b25646f6336a14cfa7d3b84dd1f", "filename": "src/libstd/rt.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a185b56b7caca17c7aa9d6f702fe1b2209c82e4e/src%2Flibstd%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a185b56b7caca17c7aa9d6f702fe1b2209c82e4e/src%2Flibstd%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt.rs?ref=a185b56b7caca17c7aa9d6f702fe1b2209c82e4e", "patch": "@@ -73,3 +73,18 @@ fn lang_start<T: ::process::Termination + 'static>\n {\n     lang_start_internal(&move || main().report(), argc, argv)\n }\n+\n+/// Function used for reverting changes to the main stack before setrlimit().\n+/// This is POSIX (non-Linux) specific and unlikely to be directly stabilized.\n+#[unstable(feature = \"rustc_stack_internals\", issue = \"0\")]\n+pub unsafe fn deinit_stack_guard() {\n+    ::sys::thread::guard::deinit();\n+}\n+\n+/// Function used for resetting the main stack guard address after setrlimit().\n+/// This is POSIX specific and unlikely to be directly stabilized.\n+#[unstable(feature = \"rustc_stack_internals\", issue = \"0\")]\n+pub unsafe fn update_stack_guard() {\n+    let main_guard = ::sys::thread::guard::init();\n+    ::sys_common::thread_info::reset_guard(main_guard);\n+}"}, {"sha": "d94e11a5207cb6264916a3f45ed6baab653b7876", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a185b56b7caca17c7aa9d6f702fe1b2209c82e4e/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a185b56b7caca17c7aa9d6f702fe1b2209c82e4e/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=a185b56b7caca17c7aa9d6f702fe1b2209c82e4e", "patch": "@@ -222,7 +222,7 @@ pub mod guard {\n #[cfg_attr(test, allow(dead_code))]\n pub mod guard {\n     use libc;\n-    use libc::mmap;\n+    use libc::{mmap, munmap};\n     use libc::{PROT_NONE, MAP_PRIVATE, MAP_ANON, MAP_FAILED, MAP_FIXED};\n     use ops::Range;\n     use sys::os;\n@@ -336,6 +336,24 @@ pub mod guard {\n         }\n     }\n \n+    pub unsafe fn deinit() {\n+        if !cfg!(target_os = \"linux\") {\n+            if let Some(mut stackaddr) = get_stack_start() {\n+                // Ensure address is aligned. Same as above.\n+                let remainder = (stackaddr as usize) % PAGE_SIZE;\n+                if remainder != 0 {\n+                    stackaddr = ((stackaddr as usize) + PAGE_SIZE - remainder)\n+                        as *mut libc::c_void;\n+                }\n+\n+                // Undo the guard page mapping.\n+                if munmap(stackaddr, PAGE_SIZE) != 0 {\n+                    panic!(\"unable to deallocate the guard page\");\n+                }\n+            }\n+        }\n+    }\n+\n     #[cfg(any(target_os = \"macos\",\n               target_os = \"bitrig\",\n               target_os = \"openbsd\","}, {"sha": "71aee673cfe3ee57e7893a54c1e1823493713693", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a185b56b7caca17c7aa9d6f702fe1b2209c82e4e/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a185b56b7caca17c7aa9d6f702fe1b2209c82e4e/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=a185b56b7caca17c7aa9d6f702fe1b2209c82e4e", "patch": "@@ -208,14 +208,6 @@ pub use self::local::{LocalKey, AccessError};\n #[unstable(feature = \"libstd_thread_internals\", issue = \"0\")]\n #[doc(hidden)] pub use self::local::os::Key as __OsLocalKeyInner;\n \n-/// Function used for resetting the main stack guard address after setrlimit().\n-/// This is POSIX specific and unlikely to be directly stabilized.\n-#[unstable(feature = \"rustc_stack_internals\", issue = \"0\")]\n-pub unsafe fn update_stack_guard() {\n-    let main_guard = imp::guard::init();\n-    thread_info::reset_guard(main_guard);\n-}\n-\n ////////////////////////////////////////////////////////////////////////////////\n // Builder\n ////////////////////////////////////////////////////////////////////////////////"}]}