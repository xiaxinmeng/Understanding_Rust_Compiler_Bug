{"sha": "70855f5a07bb17e6690c32832dec452cb211b18a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwODU1ZjVhMDdiYjE3ZTY2OTBjMzI4MzJkZWM0NTJjYjIxMWIxOGE=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-31T23:18:07Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-02-01T04:13:56Z"}, "message": "move smallintmap to oldsmallintmap", "tree": {"sha": "b9bffafcba4e94f4dc530c88f625fb8cf3bf19b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9bffafcba4e94f4dc530c88f625fb8cf3bf19b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70855f5a07bb17e6690c32832dec452cb211b18a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70855f5a07bb17e6690c32832dec452cb211b18a", "html_url": "https://github.com/rust-lang/rust/commit/70855f5a07bb17e6690c32832dec452cb211b18a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70855f5a07bb17e6690c32832dec452cb211b18a/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ba7114515db355ca36065d2730e3ee6c84cd6d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ba7114515db355ca36065d2730e3ee6c84cd6d1", "html_url": "https://github.com/rust-lang/rust/commit/9ba7114515db355ca36065d2730e3ee6c84cd6d1"}], "stats": {"total": 45, "additions": 23, "deletions": 22}, "files": [{"sha": "daa335fed9379a3a094830a00c0a51fe18da4385", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=70855f5a07bb17e6690c32832dec452cb211b18a", "patch": "@@ -34,8 +34,8 @@ use core::uint;\n use core::vec;\n use std::map::{Map, HashMap};\n use std::map;\n-use std::smallintmap::{Map, SmallIntMap};\n-use std::smallintmap;\n+use std::oldsmallintmap::{Map, SmallIntMap};\n+use std::oldsmallintmap;\n use syntax::ast_util::{path_to_ident};\n use syntax::attr;\n use syntax::codemap::span;\n@@ -248,7 +248,7 @@ pub type lint_settings = {\n };\n \n pub fn mk_lint_settings() -> lint_settings {\n-    {default_settings: smallintmap::mk(),\n+    {default_settings: oldsmallintmap::mk(),\n      settings_map: HashMap()}\n }\n \n@@ -273,7 +273,8 @@ pub fn get_lint_settings_level(settings: lint_settings,\n // This is kind of unfortunate. It should be somewhere else, or we should use\n // a persistent data structure...\n fn clone_lint_modes(modes: lint_modes) -> lint_modes {\n-    smallintmap::SmallIntMap_(@smallintmap::SmallIntMap_ { v: copy modes.v })\n+    oldsmallintmap::SmallIntMap_(@oldsmallintmap::SmallIntMap_\n+    {v: copy modes.v})\n }\n \n type ctxt_ = {dict: lint_dict,\n@@ -393,7 +394,7 @@ fn build_settings_item(i: @ast::item, &&cx: ctxt, v: visit::vt<ctxt>) {\n \n pub fn build_settings_crate(sess: session::Session, crate: @ast::crate) {\n     let cx = ctxt_({dict: get_lint_dict(),\n-                    curr: smallintmap::mk(),\n+                    curr: oldsmallintmap::mk(),\n                     is_default: true,\n                     sess: sess});\n "}, {"sha": "d0f9c9316167520a2fb3d6d046ec36135c993696", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=70855f5a07bb17e6690c32832dec452cb211b18a", "patch": "@@ -76,7 +76,7 @@ use core::option::{is_none, is_some};\n use core::option;\n use core::uint;\n use std::map::HashMap;\n-use std::smallintmap;\n+use std::oldsmallintmap;\n use std::{map, time, list};\n use syntax::ast_map::{path, path_elt_to_str, path_mod, path_name};\n use syntax::ast_util::{def_id_of_def, local_def, path_to_ident};"}, {"sha": "b07e3ef7b81744594457542d4ba532476d9fa191", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=70855f5a07bb17e6690c32832dec452cb211b18a", "patch": "@@ -42,7 +42,7 @@ use core::to_bytes;\n use core::uint;\n use core::vec;\n use std::map::HashMap;\n-use std::{map, smallintmap};\n+use std::{map, oldsmallintmap};\n use syntax::ast::*;\n use syntax::ast_util::{is_local, local_def};\n use syntax::ast_util;\n@@ -785,7 +785,7 @@ type type_cache = HashMap<ast::def_id, ty_param_bounds_and_ty>;\n \n type constness_cache = HashMap<ast::def_id, const_eval::constness>;\n \n-pub type node_type_table = @smallintmap::SmallIntMap<t>;\n+pub type node_type_table = @oldsmallintmap::SmallIntMap<t>;\n \n fn mk_rcache() -> creader_cache {\n     type val = {cnum: int, pos: uint, len: uint};\n@@ -837,7 +837,7 @@ pub fn mk_ctxt(s: session::Session,\n         def_map: dm,\n         region_map: region_map,\n         region_paramd_items: region_paramd_items,\n-        node_types: @smallintmap::mk(),\n+        node_types: @oldsmallintmap::mk(),\n         node_type_substs: map::HashMap(),\n         items: amap,\n         intrinsic_defs: map::HashMap(),\n@@ -2799,7 +2799,7 @@ pub fn br_hashmap<V:Copy>() -> HashMap<bound_region, V> {\n \n pub fn node_id_to_type(cx: ctxt, id: ast::node_id) -> t {\n     //io::println(fmt!(\"%?/%?\", id, cx.node_types.size()));\n-    match smallintmap::find(*cx.node_types, id as uint) {\n+    match oldsmallintmap::find(*cx.node_types, id as uint) {\n        Some(t) => t,\n        None => cx.sess.bug(\n            fmt!(\"node_id_to_type: no type for node `%s`\",\n@@ -3175,7 +3175,7 @@ pub fn expr_kind(tcx: ctxt,\n         }\n \n         ast::expr_cast(*) => {\n-            match smallintmap::find(*tcx.node_types, expr.id as uint) {\n+            match oldsmallintmap::find(*tcx.node_types, expr.id as uint) {\n                 Some(t) => {\n                     if ty::type_is_immediate(t) {\n                         RvalueDatumExpr"}, {"sha": "2a39022e8d41c08be7ea01fe8904b2fd705c039f", "filename": "src/librustc/middle/typeck/infer/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs?ref=70855f5a07bb17e6690c32832dec452cb211b18a", "patch": "@@ -281,7 +281,7 @@ use core::result;\n use core::vec;\n use std::list::Nil;\n use std::map::HashMap;\n-use std::smallintmap;\n+use std::oldsmallintmap;\n use syntax::ast::{ret_style, purity};\n use syntax::ast::{m_const, m_imm, m_mutbl};\n use syntax::ast::{unsafe_fn, impure_fn, pure_fn, extern_fn};\n@@ -353,7 +353,7 @@ pub fn fixup_err_to_str(f: fixup_err) -> ~str {\n \n fn new_ValsAndBindings<V:Copy, T:Copy>() -> ValsAndBindings<V, T> {\n     ValsAndBindings {\n-        vals: smallintmap::mk(),\n+        vals: oldsmallintmap::mk(),\n         mut bindings: ~[]\n     }\n }"}, {"sha": "3b38197c51c449f06f27e5d5ed1e820895a37560", "filename": "src/librustc/middle/typeck/infer/unify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs?ref=70855f5a07bb17e6690c32832dec452cb211b18a", "patch": "@@ -10,7 +10,7 @@\n \n use core::prelude::*;\n use core::result;\n-use std::smallintmap::SmallIntMap;\n+use std::oldsmallintmap::SmallIntMap;\n \n use middle::ty::{Vid, expected_found, IntVarValue};\n use middle::ty;"}, {"sha": "5059de1314907f60483ad40cfd2a1f648281377d", "filename": "src/librustc/middle/typeck/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fmod.rs?ref=70855f5a07bb17e6690c32832dec452cb211b18a", "patch": "@@ -69,7 +69,7 @@ use std::list::{List, Nil, Cons};\n use std::list;\n use std::map::HashMap;\n use std::map;\n-use std::smallintmap;\n+use std::oldsmallintmap;\n use syntax::ast::{provided, required, spanned};\n use syntax::ast_map::node_id_to_str;\n use syntax::ast_util::{local_def, respan, split_trait_methods};\n@@ -212,7 +212,7 @@ pub enum crate_ctxt {\n // Functions that write types into the node type table\n pub fn write_ty_to_tcx(tcx: ty::ctxt, node_id: ast::node_id, ty: ty::t) {\n     debug!(\"write_ty_to_tcx(%d, %s)\", node_id, ppaux::ty_to_str(tcx, ty));\n-    smallintmap::insert(*tcx.node_types, node_id as uint, ty);\n+    oldsmallintmap::insert(*tcx.node_types, node_id as uint, ty);\n }\n pub fn write_substs_to_tcx(tcx: ty::ctxt,\n                            node_id: ast::node_id,"}, {"sha": "803e75e4cf7a3c034146b2db63267bbb31856b87", "filename": "src/libstd/oldsmallintmap.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Flibstd%2Foldsmallintmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Flibstd%2Foldsmallintmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Foldsmallintmap.rs?ref=70855f5a07bb17e6690c32832dec452cb211b18a", "patch": "@@ -172,7 +172,7 @@ impl<V: Copy> SmallIntMap<V>: ops::Index<uint, V> {\n \n #[cfg(test)]\n mod tests {\n-    use smallintmap::{mk, SmallIntMap};\n+    use super::{mk, SmallIntMap};\n \n     use core::option::None;\n ", "previous_filename": "src/libstd/smallintmap.rs"}, {"sha": "86b0f680234373cb859ceff05bf19a8d6c2bd97a", "filename": "src/libstd/std.rc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Flibstd%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Flibstd%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstd.rc?ref=70855f5a07bb17e6690c32832dec452cb211b18a", "patch": "@@ -82,7 +82,7 @@ pub mod list;\n pub mod map;\n pub mod priority_queue;\n pub mod rope;\n-pub mod smallintmap;\n+pub mod oldsmallintmap;\n pub mod sort;\n pub mod treemap;\n "}, {"sha": "60efb14e2dc962305512116298ba0619ef868b47", "filename": "src/test/bench/std-smallintmap.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Ftest%2Fbench%2Fstd-smallintmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70855f5a07bb17e6690c32832dec452cb211b18a/src%2Ftest%2Fbench%2Fstd-smallintmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fstd-smallintmap.rs?ref=70855f5a07bb17e6690c32832dec452cb211b18a", "patch": "@@ -8,11 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// Microbenchmark for the smallintmap library\n+// Microbenchmark for the oldsmallintmap library\n \n extern mod std;\n-use std::smallintmap;\n-use std::smallintmap::SmallIntMap;\n+use std::oldsmallintmap;\n+use std::oldsmallintmap::SmallIntMap;\n use io::WriterUtil;\n \n fn append_sequential(min: uint, max: uint, map: SmallIntMap<uint>) {\n@@ -43,7 +43,7 @@ fn main() {\n     let mut appendf = 0.0;\n \n     for uint::range(0u, rep) |_r| {\n-        let map = smallintmap::mk();\n+        let map = oldsmallintmap::mk();\n         let start = std::time::precise_time_s();\n         append_sequential(0u, max, map);\n         let mid = std::time::precise_time_s();"}]}