{"sha": "a476af22e8f4ec6a95561f0243b2ebd2936ee557", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0NzZhZjIyZThmNGVjNmE5NTU2MWYwMjQzYjJlYmQyOTM2ZWU1NTc=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-29T12:51:34Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-12-02T16:03:03Z"}, "message": "Correct error on partially unreachable or-pat in `if let`", "tree": {"sha": "d35f8fe513b591fe335bb5453fd2dc20bd99c116", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d35f8fe513b591fe335bb5453fd2dc20bd99c116"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a476af22e8f4ec6a95561f0243b2ebd2936ee557", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a476af22e8f4ec6a95561f0243b2ebd2936ee557", "html_url": "https://github.com/rust-lang/rust/commit/a476af22e8f4ec6a95561f0243b2ebd2936ee557", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a476af22e8f4ec6a95561f0243b2ebd2936ee557/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c7bd52a7824fd1177e0b5c65ad063a23657d8b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c7bd52a7824fd1177e0b5c65ad063a23657d8b4", "html_url": "https://github.com/rust-lang/rust/commit/5c7bd52a7824fd1177e0b5c65ad063a23657d8b4"}], "stats": {"total": 49, "additions": 24, "deletions": 25}, "files": [{"sha": "c65df62c824b33e2f7ce300da9998c85e089011f", "filename": "src/librustc_mir/hair/pattern/check_match.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a476af22e8f4ec6a95561f0243b2ebd2936ee557/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a476af22e8f4ec6a95561f0243b2ebd2936ee557/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs?ref=a476af22e8f4ec6a95561f0243b2ebd2936ee557", "patch": "@@ -414,16 +414,9 @@ fn check_arms<'p, 'tcx>(\n                         hir::MatchSource::IfDesugar { .. } | hir::MatchSource::WhileDesugar => {\n                             bug!()\n                         }\n-                        hir::MatchSource::IfLetDesugar { .. } => {\n-                            cx.tcx.lint_hir(\n-                                lint::builtin::IRREFUTABLE_LET_PATTERNS,\n-                                hir_pat.hir_id,\n-                                pat.span,\n-                                \"irrefutable if-let pattern\",\n-                            );\n-                        }\n \n-                        hir::MatchSource::WhileLetDesugar => {\n+                        hir::MatchSource::IfLetDesugar { .. }\n+                        | hir::MatchSource::WhileLetDesugar => {\n                             // check which arm we're on.\n                             match arm_index {\n                                 // The arm with the user-specified pattern.\n@@ -437,11 +430,20 @@ fn check_arms<'p, 'tcx>(\n                                 }\n                                 // The arm with the wildcard pattern.\n                                 1 => {\n+                                    let msg = match source {\n+                                        hir::MatchSource::IfLetDesugar { .. } => {\n+                                            \"irrefutable if-let pattern\"\n+                                        }\n+                                        hir::MatchSource::WhileLetDesugar => {\n+                                            \"irrefutable while-let pattern\"\n+                                        }\n+                                        _ => bug!(),\n+                                    };\n                                     cx.tcx.lint_hir(\n                                         lint::builtin::IRREFUTABLE_LET_PATTERNS,\n                                         hir_pat.hir_id,\n                                         pat.span,\n-                                        \"irrefutable while-let pattern\",\n+                                        msg,\n                                     );\n                                 }\n                                 _ => bug!(),"}, {"sha": "5a7f82063b8ab4ad8f6d0cc9a2578cd78e30339a", "filename": "src/test/ui/pattern/usefulness/top-level-alternation.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a476af22e8f4ec6a95561f0243b2ebd2936ee557/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Ftop-level-alternation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a476af22e8f4ec6a95561f0243b2ebd2936ee557/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Ftop-level-alternation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Ftop-level-alternation.rs?ref=a476af22e8f4ec6a95561f0243b2ebd2936ee557", "patch": "@@ -2,8 +2,7 @@\n \n fn main() {\n     while let 0..=2 | 1 = 0 {} //~ ERROR unreachable pattern\n-    if let 0..=2 | 1 = 0 {} //~ WARN irrefutable if-let pattern\n-    // this one ^ is incorrect\n+    if let 0..=2 | 1 = 0 {} //~ ERROR unreachable pattern\n \n     match 0u8 {\n         0"}, {"sha": "772927f42f577a2597c27c8879e1d3ea8aad016a", "filename": "src/test/ui/pattern/usefulness/top-level-alternation.stderr", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a476af22e8f4ec6a95561f0243b2ebd2936ee557/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Ftop-level-alternation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a476af22e8f4ec6a95561f0243b2ebd2936ee557/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Ftop-level-alternation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Ftop-level-alternation.stderr?ref=a476af22e8f4ec6a95561f0243b2ebd2936ee557", "patch": "@@ -10,67 +10,65 @@ note: lint level defined here\n LL | #![deny(unreachable_patterns)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n-warning: irrefutable if-let pattern\n+error: unreachable pattern\n   --> $DIR/top-level-alternation.rs:5:20\n    |\n LL |     if let 0..=2 | 1 = 0 {}\n    |                    ^\n-   |\n-   = note: `#[warn(irrefutable_let_patterns)]` on by default\n \n error: unreachable pattern\n-  --> $DIR/top-level-alternation.rs:10:15\n+  --> $DIR/top-level-alternation.rs:9:15\n    |\n LL |             | 0 => {}\n    |               ^\n \n error: unreachable pattern\n-  --> $DIR/top-level-alternation.rs:15:15\n+  --> $DIR/top-level-alternation.rs:14:15\n    |\n LL |             | Some(0) => {}\n    |               ^^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/top-level-alternation.rs:20:9\n+  --> $DIR/top-level-alternation.rs:19:9\n    |\n LL |         (0, 0) => {}\n    |         ^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/top-level-alternation.rs:40:9\n+  --> $DIR/top-level-alternation.rs:39:9\n    |\n LL |         _ => {}\n    |         ^\n \n error: unreachable pattern\n-  --> $DIR/top-level-alternation.rs:44:9\n+  --> $DIR/top-level-alternation.rs:43:9\n    |\n LL |         Some(_) => {}\n    |         ^^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/top-level-alternation.rs:45:9\n+  --> $DIR/top-level-alternation.rs:44:9\n    |\n LL |         None => {}\n    |         ^^^^\n \n error: unreachable pattern\n-  --> $DIR/top-level-alternation.rs:50:9\n+  --> $DIR/top-level-alternation.rs:49:9\n    |\n LL |         None\n    |         ^^^^\n \n error: unreachable pattern\n-  --> $DIR/top-level-alternation.rs:51:15\n+  --> $DIR/top-level-alternation.rs:50:15\n    |\n LL |             | Some(_) => {}\n    |               ^^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/top-level-alternation.rs:55:9\n+  --> $DIR/top-level-alternation.rs:54:9\n    |\n LL |         1..=2 => {},\n    |         ^^^^^\n \n-error: aborting due to 10 previous errors\n+error: aborting due to 11 previous errors\n "}]}