{"sha": "16da4e15af02f92d4c7e7cfe36344a276096585d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2ZGE0ZTE1YWYwMmY5MmQ0YzdlN2NmZTM2MzQ0YTI3NjA5NjU4NWQ=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-02-07T19:48:12Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-02-13T23:08:27Z"}, "message": "use node_id for indexing in ast_to_ty_cache", "tree": {"sha": "aa223363c3d7fe69112d9e63a99871d538f7d456", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa223363c3d7fe69112d9e63a99871d538f7d456"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16da4e15af02f92d4c7e7cfe36344a276096585d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16da4e15af02f92d4c7e7cfe36344a276096585d", "html_url": "https://github.com/rust-lang/rust/commit/16da4e15af02f92d4c7e7cfe36344a276096585d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16da4e15af02f92d4c7e7cfe36344a276096585d/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0419e36b76a3d00dd313dcb3b079604d3440d2ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/0419e36b76a3d00dd313dcb3b079604d3440d2ff", "html_url": "https://github.com/rust-lang/rust/commit/0419e36b76a3d00dd313dcb3b079604d3440d2ff"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "d0e6025c3eff80ecab715c6de1a577120684e23c", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/16da4e15af02f92d4c7e7cfe36344a276096585d/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16da4e15af02f92d4c7e7cfe36344a276096585d/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=16da4e15af02f92d4c7e7cfe36344a276096585d", "patch": "@@ -262,7 +262,7 @@ struct ctxt_ {\n     needs_drop_cache: HashMap<t, bool>,\n     needs_unwind_cleanup_cache: HashMap<t, bool>,\n     mut tc_cache: LinearMap<uint, TypeContents>,\n-    ast_ty_to_ty_cache: HashMap<@ast::Ty, ast_ty_to_ty_cache_entry>,\n+    ast_ty_to_ty_cache: HashMap<node_id, ast_ty_to_ty_cache_entry>,\n     enum_var_cache: HashMap<def_id, @~[VariantInfo]>,\n     trait_method_cache: HashMap<def_id, @~[method]>,\n     ty_param_bounds: HashMap<ast::node_id, param_bounds>,"}, {"sha": "3ee604426c9f78737cd056971e7a6e97b6997f04", "filename": "src/librustc/middle/typeck/astconv.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/16da4e15af02f92d4c7e7cfe36344a276096585d/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16da4e15af02f92d4c7e7cfe36344a276096585d/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs?ref=16da4e15af02f92d4c7e7cfe36344a276096585d", "patch": "@@ -277,7 +277,7 @@ pub fn ast_ty_to_ty<AC: AstConv, RS: region_scope Copy Durable>(\n \n     let tcx = self.tcx();\n \n-    match tcx.ast_ty_to_ty_cache.find(&ast_ty) {\n+    match tcx.ast_ty_to_ty_cache.find(&ast_ty.id) {\n       Some(ty::atttce_resolved(ty)) => return ty,\n       Some(ty::atttce_unresolved) => {\n         tcx.sess.span_fatal(ast_ty.span, ~\"illegal recursive type; \\\n@@ -287,7 +287,7 @@ pub fn ast_ty_to_ty<AC: AstConv, RS: region_scope Copy Durable>(\n       None => { /* go on */ }\n     }\n \n-    tcx.ast_ty_to_ty_cache.insert(ast_ty, ty::atttce_unresolved);\n+    tcx.ast_ty_to_ty_cache.insert(ast_ty.id, ty::atttce_unresolved);\n     let typ = match /*bad*/copy ast_ty.node {\n       ast::ty_nil => ty::mk_nil(tcx),\n       ast::ty_bot => ty::mk_bot(tcx),\n@@ -409,7 +409,7 @@ pub fn ast_ty_to_ty<AC: AstConv, RS: region_scope Copy Durable>(\n       }\n     };\n \n-    tcx.ast_ty_to_ty_cache.insert(ast_ty, ty::atttce_resolved(typ));\n+    tcx.ast_ty_to_ty_cache.insert(ast_ty.id, ty::atttce_resolved(typ));\n     return typ;\n }\n "}]}