{"sha": "2e0d07540702ac6cabcc5670660c72f898d5cbd2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlMGQwNzU0MDcwMmFjNmNhYmNjNTY3MDY2MGM3MmY4OThkNWNiZDI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-10-01T00:39:37Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-10-01T00:39:37Z"}, "message": "Fix bug in bind thunks failing top drop unbound args; add test and adjust rustc to use bind again.", "tree": {"sha": "df48c5f8070eb55f00db7c435e569782dee26d09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df48c5f8070eb55f00db7c435e569782dee26d09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e0d07540702ac6cabcc5670660c72f898d5cbd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e0d07540702ac6cabcc5670660c72f898d5cbd2", "html_url": "https://github.com/rust-lang/rust/commit/2e0d07540702ac6cabcc5670660c72f898d5cbd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e0d07540702ac6cabcc5670660c72f898d5cbd2/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62c224ffe4845ed3a1f651d05ea0be84d5c870ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/62c224ffe4845ed3a1f651d05ea0be84d5c870ea", "html_url": "https://github.com/rust-lang/rust/commit/62c224ffe4845ed3a1f651d05ea0be84d5c870ea"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "9ca5120d5f7e65c7481de74cb38f50089b1832b6", "filename": "src/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2e0d07540702ac6cabcc5670660c72f898d5cbd2/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/2e0d07540702ac6cabcc5670660c72f898d5cbd2/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=2e0d07540702ac6cabcc5670660c72f898d5cbd2", "patch": "@@ -462,6 +462,7 @@ TEST_XFAILS_LLVM := $(TASK_XFAILS) \\\n                       deep.rs \\\n                       deref.rs \\\n                       destructor-ordering.rs \\\n+                      drop-bind-thunk-args.rs \\\n                       drop-on-empty-block-exit.rs \\\n                       export-non-interference.rs \\\n                       exterior.rs \\"}, {"sha": "ce6f5d922f7ae6606c66e4d5c97fdb2a4e2e10f2", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2e0d07540702ac6cabcc5670660c72f898d5cbd2/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/2e0d07540702ac6cabcc5670660c72f898d5cbd2/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=2e0d07540702ac6cabcc5670660c72f898d5cbd2", "patch": "@@ -1640,12 +1640,28 @@ let trans_visitor\n         get_element_ptr closure_target_cell Abi.fn_field_code\n       in\n \n+      let self_args_cell =\n+        get_element_ptr all_self_args_cell Abi.calltup_elt_args\n+      in\n+\n+      let self_ty_params_cell =\n+        get_element_ptr all_self_args_cell Abi.calltup_elt_ty_params\n+      in\n+\n         merge_bound_args\n           self_args_rty callee_args_rty\n           arg_slots arg_bound_flags;\n         iflog (fun _ -> annotate \"call through to closure target fn\");\n \n         call_code (code_of_cell closure_target_code_cell);\n+\n+        (* Drop the args we were passed. *)\n+        Array.iteri\n+          (fun i slot ->\n+             let cell = get_element_ptr self_args_cell i in\n+               drop_slot self_ty_params_cell cell slot)\n+          unbound_slots;\n+\n         trans_glue_frame_exit fix spill g\n \n "}, {"sha": "1e82ee8fb06defa50c58ce396566703dde1d7246", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2e0d07540702ac6cabcc5670660c72f898d5cbd2/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e0d07540702ac6cabcc5670660c72f898d5cbd2/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=2e0d07540702ac6cabcc5670660c72f898d5cbd2", "patch": "@@ -51,7 +51,7 @@ state type fn_ctxt = rec(ValueRef llfn,\n type terminator = fn(@fn_ctxt cx, builder build);\n \n tag cleanup {\n-    clean(fn(@block_ctxt cx, ValueRef v), ValueRef);\n+    clean(fn(@block_ctxt cx));\n }\n \n state type block_ctxt = rec(BasicBlockRef llbb,\n@@ -303,8 +303,7 @@ fn trans_lit(@block_ctxt cx, &ast.lit lit) -> ValueRef {\n                                   vec(p2i(C_str(cx.fcx.tcx, s)),\n                                       C_int(len)));\n             v = cx.build.IntToPtr(v, T_ptr(T_str()));\n-            auto f = drop_str;\n-            cx.cleanups += vec(clean(f, v));\n+            cx.cleanups += vec(clean(bind drop_str(_, v)));\n             ret v;\n         }\n     }\n@@ -496,8 +495,8 @@ fn trans_block(@fn_ctxt cx, &ast.block b, terminator term) {\n \n     for (cleanup c in bcx.cleanups) {\n         alt (c) {\n-            case (clean(?cfn, ?v)) {\n-                cfn(bcx, v);\n+            case (clean(?cfn)) {\n+                cfn(bcx);\n             }\n         }\n     }"}, {"sha": "3a89cd5c445fe87bd873ff571aa259210d42ac6d", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2e0d07540702ac6cabcc5670660c72f898d5cbd2/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/2e0d07540702ac6cabcc5670660c72f898d5cbd2/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=2e0d07540702ac6cabcc5670660c72f898d5cbd2", "patch": "@@ -338,6 +338,10 @@ debug_fn(rust_task *task, type_desc *t, rust_fn *fn)\n     debug_tydesc_helper(task, t);\n     task->log(rust_log::STDLIB, \"  thunk at 0x%\" PRIxPTR, fn->thunk);\n     task->log(rust_log::STDLIB, \"  closure at 0x%\" PRIxPTR, fn->closure);\n+    if (fn->closure) {\n+        task->log(rust_log::STDLIB, \"    refcount %\" PRIdPTR,\n+                  fn->closure->ref_count);\n+    }\n }\n \n extern \"C\" CDECL void *"}, {"sha": "1198af40cec8afade098044e6b6f10e325a5d065", "filename": "src/test/run-pass/drop-bind-thunk-args.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2e0d07540702ac6cabcc5670660c72f898d5cbd2/src%2Ftest%2Frun-pass%2Fdrop-bind-thunk-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e0d07540702ac6cabcc5670660c72f898d5cbd2/src%2Ftest%2Frun-pass%2Fdrop-bind-thunk-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdrop-bind-thunk-args.rs?ref=2e0d07540702ac6cabcc5670660c72f898d5cbd2", "patch": "@@ -0,0 +1,8 @@\n+fn f(@int x) { }\n+\n+fn main() {\n+  auto x = @10;\n+  auto ff = bind f(_);\n+  ff(x);\n+  ff(x);\n+}\n\\ No newline at end of file"}]}