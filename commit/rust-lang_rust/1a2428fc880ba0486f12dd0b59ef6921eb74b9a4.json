{"sha": "1a2428fc880ba0486f12dd0b59ef6921eb74b9a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhMjQyOGZjODgwYmEwNDg2ZjEyZGQwYjU5ZWY2OTIxZWI3NGI5YTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-02T15:41:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-02T15:41:19Z"}, "message": "Auto merge of #39402 - king6cong:master, r=nrc\n\ncomment rewording and argument unifying", "tree": {"sha": "d079e8e97b1d9c7863e6ee97a424b6807b707d6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d079e8e97b1d9c7863e6ee97a424b6807b707d6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a2428fc880ba0486f12dd0b59ef6921eb74b9a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a2428fc880ba0486f12dd0b59ef6921eb74b9a4", "html_url": "https://github.com/rust-lang/rust/commit/1a2428fc880ba0486f12dd0b59ef6921eb74b9a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a2428fc880ba0486f12dd0b59ef6921eb74b9a4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5f54743dbad00aa4eb76c557c8d4824a7b770de", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5f54743dbad00aa4eb76c557c8d4824a7b770de", "html_url": "https://github.com/rust-lang/rust/commit/d5f54743dbad00aa4eb76c557c8d4824a7b770de"}, {"sha": "701c32ed4ab5014671f7237ab115817b9130d3bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/701c32ed4ab5014671f7237ab115817b9130d3bb", "html_url": "https://github.com/rust-lang/rust/commit/701c32ed4ab5014671f7237ab115817b9130d3bb"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "a04a5b106b8f1e3546549ffbff5890ad2a9f669e", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1a2428fc880ba0486f12dd0b59ef6921eb74b9a4/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a2428fc880ba0486f12dd0b59ef6921eb74b9a4/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=1a2428fc880ba0486f12dd0b59ef6921eb74b9a4", "patch": "@@ -741,15 +741,15 @@ pub fn phase_2_configure_and_expand<F>(sess: &Session,\n          \"checking for inline asm in case the target doesn't support it\",\n          || no_asm::check_crate(sess, &krate));\n \n-    time(sess.time_passes(),\n+    time(time_passes,\n          \"early lint checks\",\n          || lint::check_ast_crate(sess, &krate));\n \n-    time(sess.time_passes(),\n+    time(time_passes,\n          \"AST validation\",\n          || ast_validation::check_crate(sess, &krate));\n \n-    time(sess.time_passes(), \"name resolution\", || -> CompileResult {\n+    time(time_passes, \"name resolution\", || -> CompileResult {\n         // Since import resolution will eventually happen in expansion,\n         // don't perform `after_expand` until after import resolution.\n         after_expand(&krate)?;\n@@ -770,7 +770,7 @@ pub fn phase_2_configure_and_expand<F>(sess: &Session,\n     })?;\n \n     // Lower ast -> hir.\n-    let hir_forest = time(sess.time_passes(), \"lowering ast -> hir\", || {\n+    let hir_forest = time(time_passes, \"lowering ast -> hir\", || {\n         let hir_crate = lower_crate(sess, &krate, &mut resolver);\n \n         if sess.opts.debugging_opts.hir_stats {\n@@ -780,7 +780,7 @@ pub fn phase_2_configure_and_expand<F>(sess: &Session,\n         hir_map::Forest::new(hir_crate, &sess.dep_graph)\n     });\n \n-    // Discard hygiene data, which isn't required past lowering to HIR.\n+    // Discard hygiene data, which isn't required after lowering to HIR.\n     if !keep_hygiene_data(sess) {\n         syntax::ext::hygiene::reset_hygiene_data();\n     }"}]}