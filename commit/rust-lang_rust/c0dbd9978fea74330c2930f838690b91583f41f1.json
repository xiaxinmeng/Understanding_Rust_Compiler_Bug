{"sha": "c0dbd9978fea74330c2930f838690b91583f41f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZGJkOTk3OGZlYTc0MzMwYzI5MzBmODM4NjkwYjkxNTgzZjQxZjE=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-12-17T13:55:54Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-12-17T14:45:04Z"}, "message": "Move AtomicU64 usage to AtomicUsize", "tree": {"sha": "34fb425ee362b0125dbeaad4cf18a87b52b63eac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34fb425ee362b0125dbeaad4cf18a87b52b63eac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0dbd9978fea74330c2930f838690b91583f41f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0dbd9978fea74330c2930f838690b91583f41f1", "html_url": "https://github.com/rust-lang/rust/commit/c0dbd9978fea74330c2930f838690b91583f41f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0dbd9978fea74330c2930f838690b91583f41f1/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47bb7606f30e9d397a7a32604e5f5bdb6ac583e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/47bb7606f30e9d397a7a32604e5f5bdb6ac583e0", "html_url": "https://github.com/rust-lang/rust/commit/47bb7606f30e9d397a7a32604e5f5bdb6ac583e0"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "aa7f4f2155dd13fc494b53fa019ce2700e18d861", "filename": "src/librustc/dep_graph/graph.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c0dbd9978fea74330c2930f838690b91583f41f1/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0dbd9978fea74330c2930f838690b91583f41f1/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fgraph.rs?ref=c0dbd9978fea74330c2930f838690b91583f41f1", "patch": "@@ -3,7 +3,7 @@ use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_index::vec::{Idx, IndexVec};\n use smallvec::SmallVec;\n-use rustc_data_structures::sync::{Lrc, Lock, AtomicU32, AtomicU64, Ordering};\n+use rustc_data_structures::sync::{Lrc, Lock, AtomicU32, AtomicUsize, Ordering};\n use rustc_data_structures::sharded::{self, Sharded};\n use std::sync::atomic::Ordering::SeqCst;\n use std::env;\n@@ -485,8 +485,8 @@ impl DepGraph {\n         if cfg!(debug_assertions) {\n             let current_dep_graph = &self.data.as_ref().unwrap().current;\n \n-            Some((current_dep_graph.total_read_count.load(SeqCst),\n-                  current_dep_graph.total_duplicate_read_count.load(SeqCst)))\n+            Some((current_dep_graph.total_read_count.load(SeqCst) as u64,\n+                  current_dep_graph.total_duplicate_read_count.load(SeqCst) as u64))\n         } else {\n             None\n         }\n@@ -970,8 +970,8 @@ pub(super) struct CurrentDepGraph {\n \n     /// These are simple counters that are for profiling and\n     /// debugging and only active with `debug_assertions`.\n-    total_read_count: AtomicU64,\n-    total_duplicate_read_count: AtomicU64,\n+    total_read_count: AtomicUsize,\n+    total_duplicate_read_count: AtomicUsize,\n }\n \n impl CurrentDepGraph {\n@@ -1012,8 +1012,8 @@ impl CurrentDepGraph {\n             )),\n             anon_id_seed: stable_hasher.finish(),\n             forbidden_edge,\n-            total_read_count: AtomicU64::new(0),\n-            total_duplicate_read_count: AtomicU64::new(0),\n+            total_read_count: AtomicUsize::new(0),\n+            total_duplicate_read_count: AtomicUsize::new(0),\n         }\n     }\n "}, {"sha": "02611a36aaebc4c6ba213fb7d765e42d51cbb29c", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c0dbd9978fea74330c2930f838690b91583f41f1/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0dbd9978fea74330c2930f838690b91583f41f1/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=c0dbd9978fea74330c2930f838690b91583f41f1", "patch": "@@ -24,6 +24,7 @@\n #![feature(integer_atomics)]\n #![feature(test)]\n #![feature(associated_type_bounds)]\n+#![feature(cfg_target_has_atomic)]\n \n #![cfg_attr(unix, feature(libc))]\n "}, {"sha": "c4aed0628ba4275ac14582411053e63c8fba0b2f", "filename": "src/librustc_data_structures/sync.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c0dbd9978fea74330c2930f838690b91583f41f1/src%2Flibrustc_data_structures%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0dbd9978fea74330c2930f838690b91583f41f1/src%2Flibrustc_data_structures%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fsync.rs?ref=c0dbd9978fea74330c2930f838690b91583f41f1", "patch": "@@ -317,7 +317,9 @@ cfg_if! {\n         pub use parking_lot::MutexGuard as LockGuard;\n         pub use parking_lot::MappedMutexGuard as MappedLockGuard;\n \n-        pub use std::sync::atomic::{AtomicBool, AtomicUsize, AtomicU32, AtomicU64};\n+        pub use std::sync::atomic::{AtomicBool, AtomicUsize, AtomicU32};\n+        #[cfg(target_has_atomic = \"64\")]\n+        pub use std::sync::atomic::{AtomicU64};\n \n         pub use crossbeam_utils::atomic::AtomicCell;\n "}, {"sha": "4e72249aed12935e0c226472e41ed2fbc325a80e", "filename": "src/librustc_session/session.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c0dbd9978fea74330c2930f838690b91583f41f1/src%2Flibrustc_session%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0dbd9978fea74330c2930f838690b91583f41f1/src%2Flibrustc_session%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fsession.rs?ref=c0dbd9978fea74330c2930f838690b91583f41f1", "patch": "@@ -14,7 +14,7 @@ use rustc_errors::ErrorReported;\n \n use rustc_data_structures::base_n;\n use rustc_data_structures::sync::{\n-    self, Lrc, Lock, OneThread, Once, AtomicU64, AtomicUsize, Ordering,\n+    self, Lrc, Lock, OneThread, Once, AtomicUsize, Ordering,\n     Ordering::SeqCst,\n };\n use rustc_data_structures::impl_stable_hash_via_hash;\n@@ -119,7 +119,7 @@ pub struct Session {\n     /// If `-zprint-fuel=crate`, `Some(crate)`.\n     pub print_fuel_crate: Option<String>,\n     /// Always set to zero and incremented so that we can print fuel expended by a crate.\n-    pub print_fuel: AtomicU64,\n+    pub print_fuel: AtomicUsize,\n \n     /// Loaded up early on in the initialization of this `Session` to avoid\n     /// false positives about a job server in our environment.\n@@ -1116,7 +1116,7 @@ fn build_session_(\n         out_of_fuel: false,\n     });\n     let print_fuel_crate = sopts.debugging_opts.print_fuel.clone();\n-    let print_fuel = AtomicU64::new(0);\n+    let print_fuel = AtomicUsize::new(0);\n \n     let working_dir = env::current_dir().unwrap_or_else(|e|\n         parse_sess.span_diagnostic"}]}