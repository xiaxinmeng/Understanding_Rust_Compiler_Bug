{"sha": "2ba567fc2799990f183f7b46e649bb8ce2de6787", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiYTU2N2ZjMjc5OTk5MGYxODNmN2I0NmU2NDliYjhjZTJkZTY3ODc=", "commit": {"author": {"name": "Franc\u0327ois Mockers", "email": "mockersf@gmail.com", "date": "2018-10-16T23:21:40Z"}, "committer": {"name": "Franc\u0327ois Mockers", "email": "mockersf@gmail.com", "date": "2018-10-16T23:21:40Z"}, "message": "fix other tests failing due to change in case or new suggestion for extern crate", "tree": {"sha": "c40c82a855a821c5dd3ac2bf854d804184ddaa29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c40c82a855a821c5dd3ac2bf854d804184ddaa29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ba567fc2799990f183f7b46e649bb8ce2de6787", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ba567fc2799990f183f7b46e649bb8ce2de6787", "html_url": "https://github.com/rust-lang/rust/commit/2ba567fc2799990f183f7b46e649bb8ce2de6787", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ba567fc2799990f183f7b46e649bb8ce2de6787/comments", "author": {"login": "mockersf", "id": 8672791, "node_id": "MDQ6VXNlcjg2NzI3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/8672791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mockersf", "html_url": "https://github.com/mockersf", "followers_url": "https://api.github.com/users/mockersf/followers", "following_url": "https://api.github.com/users/mockersf/following{/other_user}", "gists_url": "https://api.github.com/users/mockersf/gists{/gist_id}", "starred_url": "https://api.github.com/users/mockersf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mockersf/subscriptions", "organizations_url": "https://api.github.com/users/mockersf/orgs", "repos_url": "https://api.github.com/users/mockersf/repos", "events_url": "https://api.github.com/users/mockersf/events{/privacy}", "received_events_url": "https://api.github.com/users/mockersf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mockersf", "id": 8672791, "node_id": "MDQ6VXNlcjg2NzI3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/8672791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mockersf", "html_url": "https://github.com/mockersf", "followers_url": "https://api.github.com/users/mockersf/followers", "following_url": "https://api.github.com/users/mockersf/following{/other_user}", "gists_url": "https://api.github.com/users/mockersf/gists{/gist_id}", "starred_url": "https://api.github.com/users/mockersf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mockersf/subscriptions", "organizations_url": "https://api.github.com/users/mockersf/orgs", "repos_url": "https://api.github.com/users/mockersf/repos", "events_url": "https://api.github.com/users/mockersf/events{/privacy}", "received_events_url": "https://api.github.com/users/mockersf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad4cea408df885f4c5b026aaafa0beed4e365c61", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad4cea408df885f4c5b026aaafa0beed4e365c61", "html_url": "https://github.com/rust-lang/rust/commit/ad4cea408df885f4c5b026aaafa0beed4e365c61"}], "stats": {"total": 106, "additions": 54, "deletions": 52}, "files": [{"sha": "a24ba5d97b11c9cd7e6696ec553f400849e81562", "filename": "src/test/ui/blind/blind-item-block-item-shadow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fblind%2Fblind-item-block-item-shadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fblind%2Fblind-item-block-item-shadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblind%2Fblind-item-block-item-shadow.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -7,7 +7,7 @@ LL |         use foo::Bar;\n    |             ^^^^^^^^ `Bar` reimported here\n    |\n    = note: `Bar` must be defined only once in the type namespace of this block\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL |         use foo::Bar as OtherBar;\n    |             ^^^^^^^^^^^^^^^^^^^^"}, {"sha": "7874189534403ae5064759bdea0ddff664b01832", "filename": "src/test/ui/blind/blind-item-item-shadow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fblind%2Fblind-item-item-shadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fblind%2Fblind-item-item-shadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblind%2Fblind-item-item-shadow.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -8,7 +8,7 @@ LL | use foo::foo;\n    |     ^^^^^^^^ `foo` reimported here\n    |\n    = note: `foo` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use foo::foo as other_foo;\n    |     ^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "436d594921b0795960a54ab8e39b8def132f4beb", "filename": "src/test/ui/double-import.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fdouble-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fdouble-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdouble-import.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -7,7 +7,7 @@ LL | use sub2::foo; //~ ERROR the name `foo` is defined multiple times\n    |     ^^^^^^^^^ `foo` reimported here\n    |\n    = note: `foo` must be defined only once in the value namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use sub2::foo as other_foo; //~ ERROR the name `foo` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "f1d6e63c713af763a51a32196886f1e151a84b82", "filename": "src/test/ui/double-type-import.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fdouble-type-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fdouble-type-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdouble-type-import.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -7,7 +7,7 @@ LL |     use self::bar::X;\n    |         ^^^^^^^^^^^^ `X` reimported here\n    |\n    = note: `X` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL |     use self::bar::X as OtherX;\n    |         ^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "eced6b303e8537c297a6a5033ea35aa0d651a18b", "filename": "src/test/ui/duplicate/duplicate-check-macro-exports.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fduplicate%2Fduplicate-check-macro-exports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fduplicate%2Fduplicate-check-macro-exports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fduplicate%2Fduplicate-check-macro-exports.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -8,7 +8,7 @@ LL | macro_rules! panic { () => {} } //~ ERROR the name `panic` is defined multi\n    | ^^^^^^^^^^^^^^^^^^ `panic` redefined here\n    |\n    = note: `panic` must be defined only once in the macro namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | pub use std::panic as other_panic;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "0d112a4f02ea9543a99f2ff2ec018c54133d2525", "filename": "src/test/ui/error-codes/E0252.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Ferror-codes%2FE0252.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Ferror-codes%2FE0252.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0252.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -7,7 +7,7 @@ LL | use bar::baz; //~ ERROR E0252\n    |     ^^^^^^^^ `baz` reimported here\n    |\n    = note: `baz` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use bar::baz as other_baz; //~ ERROR E0252\n    |     ^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "5e833f1ee3901cc7f0fa539b59e88f4bd82f6d8b", "filename": "src/test/ui/error-codes/E0254.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Ferror-codes%2FE0254.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Ferror-codes%2FE0254.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0254.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -8,7 +8,7 @@ LL | use foo::alloc;\n    |     ^^^^^^^^^^ `alloc` reimported here\n    |\n    = note: `alloc` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use foo::alloc as other_alloc;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "d01a4c002e76f0f51fcc99c73357ace1af7d3c6f", "filename": "src/test/ui/error-codes/E0255.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Ferror-codes%2FE0255.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Ferror-codes%2FE0255.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0255.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -8,7 +8,7 @@ LL | fn foo() {} //~ ERROR E0255\n    | ^^^^^^^^ `foo` redefined here\n    |\n    = note: `foo` must be defined only once in the value namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use bar::foo as other_foo;\n    |     ^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "8c3e3f851aed70ad24505509cfb0cfb926e5884b", "filename": "src/test/ui/error-codes/E0259.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Ferror-codes%2FE0259.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Ferror-codes%2FE0259.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0259.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -5,12 +5,13 @@ LL | extern crate alloc;\n    | ------------------- previous import of the extern crate `alloc` here\n LL | \n LL | extern crate libc as alloc;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   | |\n-   | `alloc` reimported here\n-   | You can use `as` to change the binding name of the import\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ `alloc` reimported here\n    |\n    = note: `alloc` must be defined only once in the type namespace of this module\n+help: you can use `as` to change the binding name of the import\n+   |\n+LL | extern crate libc as other_alloc;\n+   |\n \n error: aborting due to previous error\n "}, {"sha": "08792a33921040c447c557887ae76e463f03ccb0", "filename": "src/test/ui/error-codes/E0260.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Ferror-codes%2FE0260.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Ferror-codes%2FE0260.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0260.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -8,7 +8,7 @@ LL | mod alloc {\n    | ^^^^^^^^^ `alloc` redefined here\n    |\n    = note: `alloc` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | extern crate alloc as other_alloc;\n    |"}, {"sha": "32198acec772647055854cf7f3c7b4975996a856", "filename": "src/test/ui/error-codes/E0430.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Ferror-codes%2FE0430.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Ferror-codes%2FE0430.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0430.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -15,7 +15,7 @@ LL | use std::fmt::{self, self}; //~ ERROR E0430\n    |                previous import of the module `fmt` here\n    |\n    = note: `fmt` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::fmt::{self, self as other_fmt}; //~ ERROR E0430\n    |                      ^^^^^^^^^^^^^^^^^"}, {"sha": "f8a5de3654cdcaee9cb85504e011297a1b7e73d3", "filename": "src/test/ui/extern/extern-crate-rename.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fextern%2Fextern-crate-rename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fextern%2Fextern-crate-rename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fextern-crate-rename.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -4,12 +4,13 @@ error[E0259]: the name `m1` is defined multiple times\n LL | extern crate m1;\n    | ---------------- previous import of the extern crate `m1` here\n LL | extern crate m2 as m1; //~ ERROR is defined multiple times\n-   | ^^^^^^^^^^^^^^^^^^^^^^\n-   | |\n-   | `m1` reimported here\n-   | You can use `as` to change the binding name of the import\n+   | ^^^^^^^^^^^^^^^^^^^^^^ `m1` reimported here\n    |\n    = note: `m1` must be defined only once in the type namespace of this module\n+help: you can use `as` to change the binding name of the import\n+   |\n+LL | extern crate m2 as other_m1; //~ ERROR is defined multiple times\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "5d51981e8afa9599aeb0a1305f8a18292f37050f", "filename": "src/test/ui/imports/duplicate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fimports%2Fduplicate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fimports%2Fduplicate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fduplicate.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -7,7 +7,7 @@ LL |     use a::foo; //~ ERROR the name `foo` is defined multiple times\n    |         ^^^^^^ `foo` reimported here\n    |\n    = note: `foo` must be defined only once in the value namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL |     use a::foo as other_foo; //~ ERROR the name `foo` is defined multiple times\n    |         ^^^^^^^^^^^^^^^^^^^"}, {"sha": "e4cefe9d7a4da634a4e0b0e2ea3be543b90ad831", "filename": "src/test/ui/issues/issue-19498.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fissues%2Fissue-19498.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fissues%2Fissue-19498.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-19498.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -8,7 +8,7 @@ LL | mod A {} //~ ERROR the name `A` is defined multiple times\n    | ^^^^^ `A` redefined here\n    |\n    = note: `A` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use self::A as OtherA;\n    |     ^^^^^^^^^^^^^^^^^\n@@ -23,7 +23,7 @@ LL | pub mod B {} //~ ERROR the name `B` is defined multiple times\n    | ^^^^^^^^^ `B` redefined here\n    |\n    = note: `B` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use self::B as OtherB;\n    |     ^^^^^^^^^^^^^^^^^\n@@ -37,7 +37,7 @@ LL |     mod D {} //~ ERROR the name `D` is defined multiple times\n    |     ^^^^^ `D` redefined here\n    |\n    = note: `D` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL |     use C::D as OtherD;\n    |         ^^^^^^^^^^^^^^"}, {"sha": "f9a97ac7c99c7045ff8c5227026e9a2333b860ea", "filename": "src/test/ui/issues/issue-24081.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fissues%2Fissue-24081.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fissues%2Fissue-24081.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-24081.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -8,7 +8,7 @@ LL | type Add = bool; //~ ERROR the name `Add` is defined multiple times\n    | ^^^^^^^^^^^^^^^^ `Add` redefined here\n    |\n    = note: `Add` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::ops::Add as OtherAdd;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -23,7 +23,7 @@ LL | struct Sub { x: f32 } //~ ERROR the name `Sub` is defined multiple times\n    | ^^^^^^^^^^ `Sub` redefined here\n    |\n    = note: `Sub` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::ops::Sub as OtherSub;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -38,7 +38,7 @@ LL | enum Mul { A, B } //~ ERROR the name `Mul` is defined multiple times\n    | ^^^^^^^^ `Mul` redefined here\n    |\n    = note: `Mul` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::ops::Mul as OtherMul;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -53,7 +53,7 @@ LL | mod Div { } //~ ERROR the name `Div` is defined multiple times\n    | ^^^^^^^ `Div` redefined here\n    |\n    = note: `Div` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::ops::Div as OtherDiv;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -68,7 +68,7 @@ LL | trait Rem {  } //~ ERROR the name `Rem` is defined multiple times\n    | ^^^^^^^^^ `Rem` redefined here\n    |\n    = note: `Rem` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::ops::Rem as OtherRem;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "33e7c37882180baafe886ef7b6a7ced1504c3974", "filename": "src/test/ui/issues/issue-25396.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fissues%2Fissue-25396.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fissues%2Fissue-25396.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-25396.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -7,7 +7,7 @@ LL | use bar::baz; //~ ERROR the name `baz` is defined multiple times\n    |     ^^^^^^^^ `baz` reimported here\n    |\n    = note: `baz` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use bar::baz as other_baz; //~ ERROR the name `baz` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^\n@@ -21,7 +21,7 @@ LL | use bar::Quux; //~ ERROR the name `Quux` is defined multiple times\n    |     ^^^^^^^^^ `Quux` reimported here\n    |\n    = note: `Quux` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use bar::Quux as OtherQuux; //~ ERROR the name `Quux` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n@@ -35,7 +35,7 @@ LL | use bar::blah; //~ ERROR the name `blah` is defined multiple times\n    |     ^^^^^^^^^ `blah` reimported here\n    |\n    = note: `blah` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use bar::blah as other_blah; //~ ERROR the name `blah` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -49,7 +49,7 @@ LL | use bar::WOMP; //~ ERROR the name `WOMP` is defined multiple times\n    |     ^^^^^^^^^ `WOMP` reimported here\n    |\n    = note: `WOMP` must be defined only once in the value namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use bar::WOMP as OtherWOMP; //~ ERROR the name `WOMP` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "f2a43b0db798f3c32e04ecc91f6a6b2b96e6b8d7", "filename": "src/test/ui/issues/issue-26886.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fissues%2Fissue-26886.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fissues%2Fissue-26886.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-26886.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -7,7 +7,7 @@ LL | use std::sync::Arc; //~ ERROR the name `Arc` is defined multiple times\n    |     ^^^^^^^^^^^^^^ `Arc` reimported here\n    |\n    = note: `Arc` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::sync::Arc as OtherArc; //~ ERROR the name `Arc` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -22,7 +22,7 @@ LL | use std::sync; //~ ERROR the name `sync` is defined multiple times\n    |     ^^^^^^^^^ `sync` reimported here\n    |\n    = note: `sync` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::sync as other_sync; //~ ERROR the name `sync` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "f3acd65e6a269e5b9375f9c781ce4b63be91d43d", "filename": "src/test/ui/issues/issue-32354-suggest-import-rename.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fissues%2Fissue-32354-suggest-import-rename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fissues%2Fissue-32354-suggest-import-rename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32354-suggest-import-rename.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -7,7 +7,7 @@ LL | use extension2::ConstructorExtension; //~ ERROR is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `ConstructorExtension` reimported here\n    |\n    = note: `ConstructorExtension` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use extension2::ConstructorExtension as OtherConstructorExtension; //~ ERROR is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "99c15976666e2d4d01e6f6d6209d0dee6656367f", "filename": "src/test/ui/issues/issue-45799-bad-extern-crate-rename-suggestion-formatting.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fissues%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fissues%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45799-bad-extern-crate-rename-suggestion-formatting.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -5,7 +5,7 @@ LL | extern crate std;\n    | ^^^^^^^^^^^^^^^^^ `std` reimported here\n    |\n    = note: `std` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | extern crate std as other_std;\n    |"}, {"sha": "029f76d152a37356bfb291e57421bd5c8f5b52d8", "filename": "src/test/ui/issues/issue-8640.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fissues%2Fissue-8640.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fissues%2Fissue-8640.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-8640.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -7,7 +7,7 @@ LL |     mod bar {}\n    |     ^^^^^^^ `bar` redefined here\n    |\n    = note: `bar` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL |     use baz::bar as other_bar;\n    |         ^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "fbc54124a088d772d888631e23e52e6caae4d2f3", "filename": "src/test/ui/no-std-inject.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fno-std-inject.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fno-std-inject.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fno-std-inject.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -5,7 +5,7 @@ LL | extern crate core; //~ ERROR: the name `core` is defined multiple times\n    | ^^^^^^^^^^^^^^^^^^ `core` reimported here\n    |\n    = note: `core` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | extern crate core as other_core; //~ ERROR: the name `core` is defined multiple times\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "83577b245b78ddfaaf7d6e8e4642e6499a336589", "filename": "src/test/ui/resolve/resolve-conflict-extern-crate-vs-extern-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-extern-crate-vs-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-extern-crate-vs-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-extern-crate-vs-extern-crate.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -5,7 +5,7 @@ LL | extern crate std;\n    | ^^^^^^^^^^^^^^^^^ `std` reimported here\n    |\n    = note: `std` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | extern crate std as other_std;\n    |"}, {"sha": "adb66b994db69bbde96f95269e1a1255885c1a4a", "filename": "src/test/ui/resolve/resolve-conflict-import-vs-extern-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-import-vs-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-import-vs-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-import-vs-extern-crate.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -5,7 +5,7 @@ LL | use std::slice as std; //~ ERROR the name `std` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^ `std` reimported here\n    |\n    = note: `std` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::slice as other_std; //~ ERROR the name `std` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "15f826305bf386a3c4c95e5505896576592fff99", "filename": "src/test/ui/resolve/resolve-conflict-import-vs-import.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-import-vs-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-import-vs-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-import-vs-import.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -7,7 +7,7 @@ LL | use std::mem::transmute;\n    |     ^^^^^^^^^^^^^^^^^^^ `transmute` reimported here\n    |\n    = note: `transmute` must be defined only once in the value namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::mem::transmute as other_transmute;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "8e0baf3be6fbd030227e340def5cc32be6e80b5a", "filename": "src/test/ui/resolve/resolve-conflict-item-vs-extern-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-item-vs-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-item-vs-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-item-vs-extern-crate.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -5,7 +5,7 @@ LL | mod std {}    //~ ERROR the name `std` is defined multiple times\n    | ^^^^^^^ `std` redefined here\n    |\n    = note: `std` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL |  as other_std// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n    |  ^^^^^^^^^^^^"}, {"sha": "5305ddbd2ef6d6b0c8254119f9dacfbf46f7b879", "filename": "src/test/ui/resolve/resolve-conflict-item-vs-import.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-item-vs-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-item-vs-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-item-vs-import.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -8,7 +8,7 @@ LL | fn transmute() {}\n    | ^^^^^^^^^^^^^^ `transmute` redefined here\n    |\n    = note: `transmute` must be defined only once in the value namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::mem::transmute as other_transmute;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "e5cafa3ac986fde5078f4c7ee029d1f39da64d23", "filename": "src/test/ui/resolve/resolve-conflict-type-vs-import.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-type-vs-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-type-vs-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-conflict-type-vs-import.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -8,7 +8,7 @@ LL | struct Iter;\n    | ^^^^^^^^^^^^ `Iter` redefined here\n    |\n    = note: `Iter` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::slice::Iter as OtherIter;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "86ea348ac47b7d924c75fb83043e711b63006020", "filename": "src/test/ui/unresolved/unresolved-extern-mod-suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Funresolved%2Funresolved-extern-mod-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Funresolved%2Funresolved-extern-mod-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funresolved%2Funresolved-extern-mod-suggestion.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -7,7 +7,7 @@ LL | use core;\n    |     ^^^^ `core` reimported here\n    |\n    = note: `core` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use core as other_core;\n    |     ^^^^^^^^^^^^^^^^^^"}, {"sha": "adef47ac8fb7969ccc42202b6cc2c6768949e49c", "filename": "src/test/ui/use/use-mod.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fuse%2Fuse-mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fuse%2Fuse-mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-mod.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -23,7 +23,7 @@ LL |     self\n    |     ^^^^ `bar` reimported here\n    |\n    = note: `bar` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL |     self as other_bar\n    |"}, {"sha": "56db03fd16331c3f48ad8d5a1b5ee3f8bcda5565", "filename": "src/test/ui/use/use-paths-as-items.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fuse%2Fuse-paths-as-items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fuse%2Fuse-paths-as-items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-paths-as-items.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -7,7 +7,7 @@ LL | use std::mem; //~ ERROR the name `mem` is defined multiple times\n    |     ^^^^^^^^ `mem` reimported here\n    |\n    = note: `mem` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | use std::mem as other_mem; //~ ERROR the name `mem` is defined multiple times\n    |     ^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "ce2fb7cb92c5647e123e6999b66aabe76ce624ee", "filename": "src/test/ui/variants/variant-namespacing.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fvariants%2Fvariant-namespacing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ba567fc2799990f183f7b46e649bb8ce2de6787/src%2Ftest%2Fui%2Fvariants%2Fvariant-namespacing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariants%2Fvariant-namespacing.stderr?ref=2ba567fc2799990f183f7b46e649bb8ce2de6787", "patch": "@@ -8,7 +8,7 @@ LL | pub use variant_namespacing::XE::{XStruct, XTuple, XUnit};\n    |                                   ^^^^^^^ `XStruct` reimported here\n    |\n    = note: `XStruct` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | pub use variant_namespacing::XE::{XStruct as OtherXStruct, XTuple, XUnit};\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -23,7 +23,7 @@ LL | pub use variant_namespacing::XE::{XStruct, XTuple, XUnit};\n    |                                            ^^^^^^ `XTuple` reimported here\n    |\n    = note: `XTuple` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | pub use variant_namespacing::XE::{XStruct, XTuple as OtherXTuple, XUnit};\n    |                                            ^^^^^^^^^^^^^^^^^^^^^\n@@ -38,7 +38,7 @@ LL | pub use variant_namespacing::XE::{XStruct, XTuple, XUnit};\n    |                                                    ^^^^^ `XUnit` reimported here\n    |\n    = note: `XUnit` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | pub use variant_namespacing::XE::{XStruct, XTuple, XUnit as OtherXUnit};\n    |                                                    ^^^^^^^^^^^^^^^^^^^\n@@ -53,7 +53,7 @@ LL | pub use E::{Struct, Tuple, Unit};\n    |             ^^^^^^ `Struct` reimported here\n    |\n    = note: `Struct` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | pub use E::{Struct as OtherStruct, Tuple, Unit};\n    |             ^^^^^^^^^^^^^^^^^^^^^\n@@ -68,7 +68,7 @@ LL | pub use E::{Struct, Tuple, Unit};\n    |                     ^^^^^ `Tuple` reimported here\n    |\n    = note: `Tuple` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | pub use E::{Struct, Tuple as OtherTuple, Unit};\n    |                     ^^^^^^^^^^^^^^^^^^^\n@@ -83,7 +83,7 @@ LL | pub use E::{Struct, Tuple, Unit};\n    |                            ^^^^ `Unit` reimported here\n    |\n    = note: `Unit` must be defined only once in the type namespace of this module\n-help: You can use `as` to change the binding name of the import\n+help: you can use `as` to change the binding name of the import\n    |\n LL | pub use E::{Struct, Tuple, Unit as OtherUnit};\n    |                            ^^^^^^^^^^^^^^^^^"}]}