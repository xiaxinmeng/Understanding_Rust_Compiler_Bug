{"sha": "9d7fc21967fd3719bc95d4c7d063cd0b04d1a921", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkN2ZjMjE5NjdmZDM3MTliYzk1ZDRjN2QwNjNjZDBiMDRkMWE5MjE=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-05-05T22:53:38Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-05T23:53:25Z"}, "message": "Consolidating expr_to_str functions.", "tree": {"sha": "dc07adcb775ee2219668165700702809b89fd348", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc07adcb775ee2219668165700702809b89fd348"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d7fc21967fd3719bc95d4c7d063cd0b04d1a921", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d7fc21967fd3719bc95d4c7d063cd0b04d1a921", "html_url": "https://github.com/rust-lang/rust/commit/9d7fc21967fd3719bc95d4c7d063cd0b04d1a921", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d7fc21967fd3719bc95d4c7d063cd0b04d1a921/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3b98f3046ed7fdffd18d05971fe4122d955ce15", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3b98f3046ed7fdffd18d05971fe4122d955ce15", "html_url": "https://github.com/rust-lang/rust/commit/b3b98f3046ed7fdffd18d05971fe4122d955ce15"}], "stats": {"total": 30, "additions": 8, "deletions": 22}, "files": [{"sha": "d3f9394cf8b6140c1cb41bc09566c958a5c43b34", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9d7fc21967fd3719bc95d4c7d063cd0b04d1a921/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d7fc21967fd3719bc95d4c7d063cd0b04d1a921/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=9d7fc21967fd3719bc95d4c7d063cd0b04d1a921", "patch": "@@ -12,15 +12,12 @@ import std.option.none;\n \n import front.ast;\n import front.creader;\n-import pretty.pprust;\n import driver.session;\n import middle.ty;\n import back.Link;\n import back.x86;\n import back.abi;\n \n-import pretty.pprust;\n-\n import middle.ty.pat_ty;\n \n import util.common;\n@@ -5397,7 +5394,7 @@ fn trans_log(int lvl, @block_ctxt cx, @ast.expr e) -> result {\n fn trans_check_expr(@block_ctxt cx, @ast.expr e) -> result {\n     auto cond_res = trans_expr(cx, e);\n \n-    auto expr_str = pretty.pprust.expr_to_str(e);\n+    auto expr_str = util.common.expr_to_str(e);\n     auto fail_cx = new_sub_block_ctxt(cx, \"fail\");\n     auto fail_res = trans_fail(fail_cx, some[common.span](e.span), expr_str);\n "}, {"sha": "5baa6b7afe0d7c00a23f1b4aa5ca406cf6f36b03", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d7fc21967fd3719bc95d4c7d063cd0b04d1a921/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d7fc21967fd3719bc95d4c7d063cd0b04d1a921/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=9d7fc21967fd3719bc95d4c7d063cd0b04d1a921", "patch": "@@ -1963,7 +1963,7 @@ fn replace_expr_type(@ast.expr expr, tup(vec[t], t) new_tyt) -> @ast.expr {\n         }\n         case (_) {\n             log_err \"unhandled expr type in replace_expr_type(): \" +\n-                pretty.pprust.expr_to_str(expr);\n+                util.common.expr_to_str(expr);\n             fail;\n         }\n     }"}, {"sha": "65e443dfffc2186661c9c6b7a0782fd510e01f7b", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9d7fc21967fd3719bc95d4c7d063cd0b04d1a921/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d7fc21967fd3719bc95d4c7d063cd0b04d1a921/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=9d7fc21967fd3719bc95d4c7d063cd0b04d1a921", "patch": "@@ -42,8 +42,6 @@ import std.option.none;\n import std.option.some;\n import std.option.from_maybe;\n \n-import pretty.pprust;\n-\n import util.typestate_ann.ts_ann;\n \n type ty_table = hashmap[ast.def_id, ty.t];\n@@ -1476,7 +1474,7 @@ mod Pushdown {\n             case (_) {\n                 fcx.ccx.sess.span_unimpl(e.span,\n                     #fmt(\"type unification for expression variant: %s\",\n-                         pretty.pprust.expr_to_str(e)));\n+                         util.common.expr_to_str(e)));\n                 fail;\n             }\n         }\n@@ -1735,7 +1733,7 @@ fn require_pure_function(@crate_ctxt ccx, &ast.def_id d_id, &span sp) -> () {\n \n fn check_expr(&@fn_ctxt fcx, @ast.expr expr) -> @ast.expr {\n     //fcx.ccx.sess.span_warn(expr.span, \"typechecking expr \" +\n-    //                       pretty.pprust.expr_to_str(expr));\n+    //                       util.common.expr_to_str(expr));\n \n     // A generic function to factor out common logic from call and bind\n     // expressions."}, {"sha": "3111b0127a0dcc330e731150cb2d68fe6e83e1eb", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9d7fc21967fd3719bc95d4c7d063cd0b04d1a921/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d7fc21967fd3719bc95d4c7d063cd0b04d1a921/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=9d7fc21967fd3719bc95d4c7d063cd0b04d1a921", "patch": "@@ -41,15 +41,6 @@ fn block_to_str(&ast.block blk) -> str {\n     ret writer.get_str();\n }\n \n-fn expr_to_str(&@ast.expr e) -> str {\n-    auto writer = io.string_writer();\n-    auto s = @rec(s=pp.mkstate(writer.get_writer(), 78u),\n-                  comments=option.none[vec[lexer.cmnt]],\n-                  mutable cur_cmnt=0u);\n-    print_expr(s, e);\n-    ret writer.get_str();\n-}\n-\n fn pat_to_str(&@ast.pat p) -> str {\n     auto writer = io.string_writer();\n     auto s = @rec(s=pp.mkstate(writer.get_writer(), 78u),"}, {"sha": "b736b0482785afb4685476d3620a839757a49c5b", "filename": "src/comp/util/common.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9d7fc21967fd3719bc95d4c7d063cd0b04d1a921/src%2Fcomp%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d7fc21967fd3719bc95d4c7d063cd0b04d1a921/src%2Fcomp%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Futil%2Fcommon.rs?ref=9d7fc21967fd3719bc95d4c7d063cd0b04d1a921", "patch": "@@ -122,22 +122,22 @@ fn plain_ann(middle.ty.ctxt tcx) -> ast.ann {\n                    none[vec[middle.ty.t]], none[@ts_ann]);\n }\n \n-fn expr_to_str(&ast.expr e) -> str {\n+fn expr_to_str(&@ast.expr e) -> str {\n   let str_writer s = string_writer();\n   auto out_ = mkstate(s.get_writer(), 80u);\n   auto out = @rec(s=out_,\n                   comments=none[vec[front.lexer.cmnt]],\n                   mutable cur_cmnt=0u);\n-  print_expr(out, @e);\n+  print_expr(out, e);\n   ret s.get_str();\n }\n \n fn log_expr(&ast.expr e) -> () {\n-    log(expr_to_str(e));\n+    log(expr_to_str(@e));\n }\n \n fn log_expr_err(&ast.expr e) -> () {\n-    log_err(expr_to_str(e));\n+    log_err(expr_to_str(@e));\n }\n \n fn block_to_str(&ast.block b) -> str {"}]}