{"sha": "2e562c158fd43d105c0c3f035aafe24c0e648b1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNTYyYzE1OGZkNDNkMTA1YzBjM2YwMzVhYWZlMjRjMGU2NDhiMWU=", "commit": {"author": {"name": "Clemens Wasser", "email": "clemens.wasser@gmail.com", "date": "2020-07-30T14:23:07Z"}, "committer": {"name": "Clemens Wasser", "email": "clemens.wasser@gmail.com", "date": "2020-07-30T14:28:29Z"}, "message": "ra_project_model: Fix configuration of features\n\nThis commit fixes the handling of user-defined configuration\nof some cargo options. Previously you could either specify\n`--all-features`, `--no-default-features` or `--features`.\nNow you can specify either `--all-features` or `--no-default-features`\nand `--features`. This commit also corrects the `--features`\ncommand-line argument creation inside of `load_extern_resources`.", "tree": {"sha": "84337797d0bd3ab4851fcb36191fb54739b8e1c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84337797d0bd3ab4851fcb36191fb54739b8e1c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e562c158fd43d105c0c3f035aafe24c0e648b1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e562c158fd43d105c0c3f035aafe24c0e648b1e", "html_url": "https://github.com/rust-lang/rust/commit/2e562c158fd43d105c0c3f035aafe24c0e648b1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e562c158fd43d105c0c3f035aafe24c0e648b1e/comments", "author": {"login": "clemenswasser", "id": 26170289, "node_id": "MDQ6VXNlcjI2MTcwMjg5", "avatar_url": "https://avatars.githubusercontent.com/u/26170289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clemenswasser", "html_url": "https://github.com/clemenswasser", "followers_url": "https://api.github.com/users/clemenswasser/followers", "following_url": "https://api.github.com/users/clemenswasser/following{/other_user}", "gists_url": "https://api.github.com/users/clemenswasser/gists{/gist_id}", "starred_url": "https://api.github.com/users/clemenswasser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clemenswasser/subscriptions", "organizations_url": "https://api.github.com/users/clemenswasser/orgs", "repos_url": "https://api.github.com/users/clemenswasser/repos", "events_url": "https://api.github.com/users/clemenswasser/events{/privacy}", "received_events_url": "https://api.github.com/users/clemenswasser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clemenswasser", "id": 26170289, "node_id": "MDQ6VXNlcjI2MTcwMjg5", "avatar_url": "https://avatars.githubusercontent.com/u/26170289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clemenswasser", "html_url": "https://github.com/clemenswasser", "followers_url": "https://api.github.com/users/clemenswasser/followers", "following_url": "https://api.github.com/users/clemenswasser/following{/other_user}", "gists_url": "https://api.github.com/users/clemenswasser/gists{/gist_id}", "starred_url": "https://api.github.com/users/clemenswasser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clemenswasser/subscriptions", "organizations_url": "https://api.github.com/users/clemenswasser/orgs", "repos_url": "https://api.github.com/users/clemenswasser/repos", "events_url": "https://api.github.com/users/clemenswasser/events{/privacy}", "received_events_url": "https://api.github.com/users/clemenswasser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d9f8ac2739e7d02bcbc69e933682c2ef305f987", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d9f8ac2739e7d02bcbc69e933682c2ef305f987", "html_url": "https://github.com/rust-lang/rust/commit/8d9f8ac2739e7d02bcbc69e933682c2ef305f987"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "10513542e262d3b4c0d549463fa9c07fcdcddcf2", "filename": "crates/ra_project_model/src/cargo_workspace.rs", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/2e562c158fd43d105c0c3f035aafe24c0e648b1e/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e562c158fd43d105c0c3f035aafe24c0e648b1e/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs?ref=2e562c158fd43d105c0c3f035aafe24c0e648b1e", "patch": "@@ -144,12 +144,15 @@ impl CargoWorkspace {\n         meta.manifest_path(cargo_toml.to_path_buf());\n         if cargo_features.all_features {\n             meta.features(CargoOpt::AllFeatures);\n-        } else if cargo_features.no_default_features {\n-            // FIXME: `NoDefaultFeatures` is mutual exclusive with `SomeFeatures`\n-            // https://github.com/oli-obk/cargo_metadata/issues/79\n-            meta.features(CargoOpt::NoDefaultFeatures);\n-        } else if !cargo_features.features.is_empty() {\n-            meta.features(CargoOpt::SomeFeatures(cargo_features.features.clone()));\n+        } else {\n+            if cargo_features.no_default_features {\n+                // FIXME: `NoDefaultFeatures` is mutual exclusive with `SomeFeatures`\n+                // https://github.com/oli-obk/cargo_metadata/issues/79\n+                meta.features(CargoOpt::NoDefaultFeatures);\n+            }\n+            if !cargo_features.features.is_empty() {\n+                meta.features(CargoOpt::SomeFeatures(cargo_features.features.clone()));\n+            }\n         }\n         if let Some(parent) = cargo_toml.parent() {\n             meta.current_dir(parent.to_path_buf());\n@@ -289,12 +292,16 @@ pub fn load_extern_resources(\n     cmd.args(&[\"check\", \"--message-format=json\", \"--manifest-path\"]).arg(cargo_toml);\n     if cargo_features.all_features {\n         cmd.arg(\"--all-features\");\n-    } else if cargo_features.no_default_features {\n-        // FIXME: `NoDefaultFeatures` is mutual exclusive with `SomeFeatures`\n-        // https://github.com/oli-obk/cargo_metadata/issues/79\n-        cmd.arg(\"--no-default-features\");\n     } else {\n-        cmd.args(&cargo_features.features);\n+        if cargo_features.no_default_features {\n+            // FIXME: `NoDefaultFeatures` is mutual exclusive with `SomeFeatures`\n+            // https://github.com/oli-obk/cargo_metadata/issues/79\n+            cmd.arg(\"--no-default-features\");\n+        }\n+        if !cargo_features.features.is_empty() {\n+            cmd.arg(\"--features\");\n+            cmd.arg(cargo_features.features.join(\" \"));\n+        }\n     }\n \n     let output = cmd.output()?;"}]}