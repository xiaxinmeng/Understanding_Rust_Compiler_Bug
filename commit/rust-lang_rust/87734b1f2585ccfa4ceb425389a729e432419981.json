{"sha": "87734b1f2585ccfa4ceb425389a729e432419981", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3NzM0YjFmMjU4NWNjZmE0Y2ViNDI1Mzg5YTcyOWU0MzI0MTk5ODE=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-04-01T19:13:08Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-04-14T19:45:03Z"}, "message": "Fix tests", "tree": {"sha": "624df2b46f6661e0e7b0b7302264d29de7a4b572", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/624df2b46f6661e0e7b0b7302264d29de7a4b572"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87734b1f2585ccfa4ceb425389a729e432419981", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAlyzjcAACgkQtAh+UQ6Y\nsWSHOw//VH2PtvYqXVNlFB6Cr1t0RodaF51rpAsF5oZcR1MMFN5pwlm4cpZEWHnx\n4xvgn09ly2MxjQ4pR43iatRoswAfRdLvU6p0IfDW9IqovdHbCtoe4o4DQ5QOxiY1\n74Dntbd715mulPRsXvDlCl9RSdoLUWdPyC+l5sOo8rim0+x1GiViSN9Gbo3FlvYC\nE4eDLG9AMEYMMfjBijpgykNOll2L5roJ72d8+ELqnbhTHWVlodIVhfsP9MQc1dUc\nfS+qaXunlcolgzVzUSHYIEW8DLeOZynWthEtr1u12hE29iPP0ZHg3TlAn7mzWmP9\n+O+HY2zYRl0Pf9H1HKIglmyDJpS6fvVdofH4ck1nHXaSQAArItw7vD7YKwcSBdne\nVA7PX1jzPUtLFb94gC9+YXq5AlQIwO+E5vO33fvARhK+SR3t+kQyEobEAZ9l9+7i\n2Uca981LjRj+1UykTAiTS63kxPAlhhd65H+vvpgMqjXcEbiXseQTHr3Kra6Z26Me\n5c8bZv9Q7Z1khqIDc037yCnv3VJzHlE34QQv9pTSOHQmxhmFCd0mCoZ8oJpkC0HW\nQ6+Xto2pqtbQ6UUU2jhJGKhqkbcCO1qhbtL/gxffcilRp9i0qecG8D/CY9AIzG2K\n0pDDfcQeyp7FLI6blifOYwMsU2J/IrRbQ8Xx9CZjEAbymhKwKwc=\n=wnzu\n-----END PGP SIGNATURE-----", "payload": "tree 624df2b46f6661e0e7b0b7302264d29de7a4b572\nparent a6ae8abdd656c34430504a51044cb70434214bc5\nauthor Aaron Hill <aa1ronham@gmail.com> 1554145988 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1555271103 -0400\n\nFix tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87734b1f2585ccfa4ceb425389a729e432419981", "html_url": "https://github.com/rust-lang/rust/commit/87734b1f2585ccfa4ceb425389a729e432419981", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87734b1f2585ccfa4ceb425389a729e432419981/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6ae8abdd656c34430504a51044cb70434214bc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6ae8abdd656c34430504a51044cb70434214bc5", "html_url": "https://github.com/rust-lang/rust/commit/a6ae8abdd656c34430504a51044cb70434214bc5"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "e07ef35c5d519d348ee77dd5df01eb8a0dc7219d", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 28, "deletions": 7, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/87734b1f2585ccfa4ceb425389a729e432419981/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87734b1f2585ccfa4ceb425389a729e432419981/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=87734b1f2585ccfa4ceb425389a729e432419981", "patch": "@@ -291,6 +291,15 @@ pub struct ExternEntry {\n     pub public: bool\n }\n \n+impl ExternEntry {\n+    pub fn new_public(location: Option<String>) -> ExternEntry {\n+        ExternEntry {\n+            location,\n+            public: true\n+        }\n+    }\n+}\n+\n impl Externs {\n     pub fn new(data: BTreeMap<String, BTreeSet<ExternEntry>>) -> Externs {\n         Externs(data)\n@@ -2705,7 +2714,7 @@ mod tests {\n         build_session_options_and_crate_config,\n         to_crate_config\n     };\n-    use crate::session::config::{LtoCli, LinkerPluginLto, PgoGenerate};\n+    use crate::session::config::{LtoCli, LinkerPluginLto, PgoGenerate, ExternEntry};\n     use crate::session::build_session;\n     use crate::session::search_paths::SearchPath;\n     use std::collections::{BTreeMap, BTreeSet};\n@@ -2851,33 +2860,45 @@ mod tests {\n         v1.externs = Externs::new(mk_map(vec![\n             (\n                 String::from(\"a\"),\n-                mk_set(vec![Some(String::from(\"b\")), Some(String::from(\"c\"))]),\n+                mk_set(vec![ExternEntry::new_public(Some(String::from(\"b\"))),\n+                            ExternEntry::new_public(Some(String::from(\"c\")))\n+                            ]),\n             ),\n             (\n                 String::from(\"d\"),\n-                mk_set(vec![Some(String::from(\"e\")), Some(String::from(\"f\"))]),\n+                mk_set(vec![ExternEntry::new_public(Some(String::from(\"e\"))),\n+                            ExternEntry::new_public(Some(String::from(\"f\")))\n+                            ]),\n             ),\n         ]));\n \n         v2.externs = Externs::new(mk_map(vec![\n             (\n                 String::from(\"d\"),\n-                mk_set(vec![Some(String::from(\"e\")), Some(String::from(\"f\"))]),\n+                mk_set(vec![ExternEntry::new_public(Some(String::from(\"e\"))),\n+                            ExternEntry::new_public(Some(String::from(\"f\")))\n+                            ]),\n             ),\n             (\n                 String::from(\"a\"),\n-                mk_set(vec![Some(String::from(\"b\")), Some(String::from(\"c\"))]),\n+                mk_set(vec![ExternEntry::new_public(Some(String::from(\"b\"))),\n+                            ExternEntry::new_public(Some(String::from(\"c\")))\n+                            ]),\n             ),\n         ]));\n \n         v3.externs = Externs::new(mk_map(vec![\n             (\n                 String::from(\"a\"),\n-                mk_set(vec![Some(String::from(\"b\")), Some(String::from(\"c\"))]),\n+                mk_set(vec![ExternEntry::new_public(Some(String::from(\"b\"))),\n+                            ExternEntry::new_public(Some(String::from(\"c\")))\n+                            ]),\n             ),\n             (\n                 String::from(\"d\"),\n-                mk_set(vec![Some(String::from(\"f\")), Some(String::from(\"e\"))]),\n+                mk_set(vec![ExternEntry::new_public(Some(String::from(\"f\"))),\n+                            ExternEntry::new_public(Some(String::from(\"e\")))\n+                            ]),\n             ),\n         ]));\n "}]}