{"sha": "783a00e7962bcf348aedaa0446c12b03ba1f0397", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4M2EwMGU3OTYyYmNmMzQ4YWVkYWEwNDQ2YzEyYjAzYmExZjAzOTc=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lindsey@composition.al", "date": "2014-03-17T00:12:49Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-03-18T20:49:53Z"}, "message": "Typo fixes.", "tree": {"sha": "68ecd918aec6bbd994dddb489b36a4f87fc49248", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68ecd918aec6bbd994dddb489b36a4f87fc49248"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/783a00e7962bcf348aedaa0446c12b03ba1f0397", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/783a00e7962bcf348aedaa0446c12b03ba1f0397", "html_url": "https://github.com/rust-lang/rust/commit/783a00e7962bcf348aedaa0446c12b03ba1f0397", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/783a00e7962bcf348aedaa0446c12b03ba1f0397/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "168cd3a2f57ff418ebf87433bff678c85cad6a18", "url": "https://api.github.com/repos/rust-lang/rust/commits/168cd3a2f57ff418ebf87433bff678c85cad6a18", "html_url": "https://github.com/rust-lang/rust/commit/168cd3a2f57ff418ebf87433bff678c85cad6a18"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "5d41f297e7d052f39a2aa2c5c192c150177a9e31", "filename": "src/doc/rustdoc.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/783a00e7962bcf348aedaa0446c12b03ba1f0397/src%2Fdoc%2Frustdoc.md", "raw_url": "https://github.com/rust-lang/rust/raw/783a00e7962bcf348aedaa0446c12b03ba1f0397/src%2Fdoc%2Frustdoc.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc.md?ref=783a00e7962bcf348aedaa0446c12b03ba1f0397", "patch": "@@ -43,7 +43,7 @@ pub fn recalibrate() {\n Doc comments are markdown, and are currently parsed with the\n [sundown][sundown] library. rustdoc does not yet do any fanciness such as\n referencing other items inline, like javadoc's `@see`. One exception to this\n-is that the first paragrah will be used as the \"summary\" of an item in the\n+is that the first paragraph will be used as the \"summary\" of an item in the\n generated documentation:\n \n ~~~\n@@ -79,11 +79,11 @@ rustdoc can also generate JSON, for consumption by other tools, with\n \n # Using the Documentation\n \n-The web pages generated by rustdoc present the same logical heirarchy that one\n+The web pages generated by rustdoc present the same logical hierarchy that one\n writes a library with. Every kind of item (function, struct, etc) has its own\n color, and one can always click on a colored type to jump to its\n documentation. There is a search bar at the top, which is powered by some\n-javascript and a statically-generated search index. No special web server is\n+JavaScript and a statically-generated search index. No special web server is\n required for the search.\n \n [sundown]: https://github.com/vmg/sundown/\n@@ -108,7 +108,7 @@ code, the `ignore` string can be added to the three-backtick form of markdown\n code block.\n \n     /**\n-    # nested codefences confuse sundown => indentation + comment to\n+    # nested code fences confuse sundown => indentation + comment to\n     #  avoid failing tests\n     ```\n     // This is a testable code block\n@@ -126,7 +126,7 @@ You can specify that the test's execution should fail with the `should_fail`\n directive.\n \n     /**\n-    # nested codefences confuse sundown => indentation + comment to\n+    # nested code fences confuse sundown => indentation + comment to\n     #  avoid failing tests\n     ```should_fail\n     // This code block is expected to generate a failure when run\n@@ -138,7 +138,7 @@ You can specify that the code block should be compiled but not run with the\n `no_run` directive.\n \n     /**\n-    # nested codefences confuse sundown => indentation + comment to\n+    # nested code fences confuse sundown => indentation + comment to\n     #  avoid failing tests\n     ```no_run\n     // This code will be compiled but not executed\n@@ -153,7 +153,7 @@ testing the code block (NB. the space after the `#` is required, so\n that one can still write things like `#[deriving(Eq)]`).\n \n     /**\n-    # nested codefences confuse sundown => indentation + comment to\n+    # nested code fences confuse sundown => indentation + comment to\n     #  avoid failing tests\n     ```rust\n     # /!\\ The three following lines are comments, which are usually stripped off by\n@@ -162,7 +162,7 @@ that one can still write things like `#[deriving(Eq)]`).\n     # these first five lines but a non breakable one.\n     #\n     #\u00a0// showing 'fib' in this documentation would just be tedious and detracts from\n-    #\u00a0// what's actualy being documented.\n+    #\u00a0// what's actually being documented.\n     #\u00a0fn fib(n: int) { n + 2 }\n \n     do spawn { fib(200); }\n@@ -190,7 +190,7 @@ $ rustdoc --test lib.rs --test-args '--help'\n ~~~\n \n When testing a library, code examples will often show how functions are used,\n-and this code often requires `use`-ing paths from the crate. To accomodate this,\n+and this code often requires `use`-ing paths from the crate. To accommodate this,\n rustdoc will implicitly add `extern crate <crate>;` where `<crate>` is the name of\n the crate being tested to the top of each code example. This means that rustdoc\n must be able to find a compiled version of the library crate being tested. Extra"}]}