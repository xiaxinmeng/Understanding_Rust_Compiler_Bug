{"sha": "0e527baf775221dc25cba5c48cbf44d28893d8cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNTI3YmFmNzc1MjIxZGMyNWNiYTVjNDhjYmY0NGQyODg5M2Q4Y2Q=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-11-27T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-12-06T19:48:08Z"}, "message": "Retain assembly operands span when lowering AST to HIR", "tree": {"sha": "1bc46f73a4084f8a726fa2772c8cb172325e5256", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bc46f73a4084f8a726fa2772c8cb172325e5256"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e527baf775221dc25cba5c48cbf44d28893d8cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e527baf775221dc25cba5c48cbf44d28893d8cd", "html_url": "https://github.com/rust-lang/rust/commit/0e527baf775221dc25cba5c48cbf44d28893d8cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e527baf775221dc25cba5c48cbf44d28893d8cd/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8eca423ea13bb0612df4b8f2c20c5228f54d0c2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8eca423ea13bb0612df4b8f2c20c5228f54d0c2d", "html_url": "https://github.com/rust-lang/rust/commit/8eca423ea13bb0612df4b8f2c20c5228f54d0c2d"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "1bd96b2b4c89beb3e433a3d8b416ac498cd42d6e", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e527baf775221dc25cba5c48cbf44d28893d8cd/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e527baf775221dc25cba5c48cbf44d28893d8cd/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=0e527baf775221dc25cba5c48cbf44d28893d8cd", "patch": "@@ -768,7 +768,7 @@ fn never_loop_expr(expr: &Expr<'_>, main_loop_id: HirId) -> NeverLoopResult {\n         ExprKind::InlineAsm(ref asm) => asm\n             .operands\n             .iter()\n-            .map(|o| match o {\n+            .map(|(o, _)| match o {\n                 InlineAsmOperand::In { expr, .. }\n                 | InlineAsmOperand::InOut { expr, .. }\n                 | InlineAsmOperand::Const { expr }"}, {"sha": "d942d4e12b10629518cf54d5fac19c97281e1e37", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e527baf775221dc25cba5c48cbf44d28893d8cd/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e527baf775221dc25cba5c48cbf44d28893d8cd/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=0e527baf775221dc25cba5c48cbf44d28893d8cd", "patch": "@@ -517,7 +517,7 @@ impl<'a, 'tcx> SpanlessHash<'a, 'tcx> {\n                     }\n                 }\n                 asm.options.hash(&mut self.s);\n-                for op in asm.operands {\n+                for (op, _op_sp) in asm.operands {\n                     match op {\n                         InlineAsmOperand::In { reg, expr } => {\n                             reg.hash(&mut self.s);"}, {"sha": "323d8745538859bf7e4e106bdec3ed0151d322f3", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e527baf775221dc25cba5c48cbf44d28893d8cd/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e527baf775221dc25cba5c48cbf44d28893d8cd/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=0e527baf775221dc25cba5c48cbf44d28893d8cd", "patch": "@@ -293,7 +293,7 @@ fn print_expr(cx: &LateContext<'_>, expr: &hir::Expr<'_>, indent: usize) {\n             println!(\"{}template: {}\", ind, InlineAsmTemplatePiece::to_string(asm.template));\n             println!(\"{}options: {:?}\", ind, asm.options);\n             println!(\"{}operands:\", ind);\n-            for op in asm.operands {\n+            for (op, _op_sp) in asm.operands {\n                 match op {\n                     hir::InlineAsmOperand::In { expr, .. }\n                     | hir::InlineAsmOperand::InOut { expr, .. }"}]}