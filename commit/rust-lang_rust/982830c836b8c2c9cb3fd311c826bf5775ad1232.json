{"sha": "982830c836b8c2c9cb3fd311c826bf5775ad1232", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4MjgzMGM4MzZiOGMyYzljYjNmZDMxMWM4MjZiZjU3NzVhZDEyMzI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-09T22:12:28Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-10T18:37:22Z"}, "message": "librustc: Allow the type parameter version of `Self` to be spelled with a capital S", "tree": {"sha": "212ecef83162bda78cf6e94bc42e2cd0c603387a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/212ecef83162bda78cf6e94bc42e2cd0c603387a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/982830c836b8c2c9cb3fd311c826bf5775ad1232", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/982830c836b8c2c9cb3fd311c826bf5775ad1232", "html_url": "https://github.com/rust-lang/rust/commit/982830c836b8c2c9cb3fd311c826bf5775ad1232", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/982830c836b8c2c9cb3fd311c826bf5775ad1232/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61210e01f97c304dece415c915458c3ad5db8973", "url": "https://api.github.com/repos/rust-lang/rust/commits/61210e01f97c304dece415c915458c3ad5db8973", "html_url": "https://github.com/rust-lang/rust/commit/61210e01f97c304dece415c915458c3ad5db8973"}], "stats": {"total": 69, "additions": 60, "deletions": 9}, "files": [{"sha": "3dce81df5f3c3f467f2f25d40d34757017ac2ea0", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/982830c836b8c2c9cb3fd311c826bf5775ad1232/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/982830c836b8c2c9cb3fd311c826bf5775ad1232/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=982830c836b8c2c9cb3fd311c826bf5775ad1232", "patch": "@@ -850,6 +850,8 @@ fn Resolver(session: Session, lang_items: LanguageItems,\n         current_trait_refs: None,\n \n         self_ident: special_idents::self_,\n+        type_self_ident: special_idents::type_self,\n+\n         primitive_type_table: @PrimitiveTypeTable(session.\n                                                   parse_sess.interner),\n \n@@ -905,6 +907,8 @@ struct Resolver {\n \n     // The ident for the keyword \"self\".\n     self_ident: ident,\n+    // The ident for the non-keyword \"Self\".\n+    type_self_ident: ident,\n \n     // The idents for the primitive types.\n     primitive_type_table: @PrimitiveTypeTable,\n@@ -3803,6 +3807,8 @@ impl Resolver {\n                 (*self.type_ribs).push(self_type_rib);\n                 self_type_rib.bindings.insert(self.self_ident,\n                                               dl_def(def_self_ty(item.id)));\n+                self_type_rib.bindings.insert(self.type_self_ident,\n+                                              dl_def(def_self_ty(item.id)));\n \n                 // Create a new rib for the trait-wide type parameters.\n                 do self.with_type_parameter_rib"}, {"sha": "93c030636239a8705782da2649ba5ad1593377af", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 38, "deletions": 9, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/982830c836b8c2c9cb3fd311c826bf5775ad1232/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/982830c836b8c2c9cb3fd311c826bf5775ad1232/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=982830c836b8c2c9cb3fd311c826bf5775ad1232", "patch": "@@ -340,6 +340,7 @@ mod special_idents {\n     const clownshoes_foreign_mod: ident = ident { repr: 33 };\n     const unnamed_field: ident = ident { repr: 34 };\n     const c_abi: ident = ident { repr: 35 };\n+    const type_self: ident = ident { repr: 36 };    // `Self`\n }\n \n struct ident_interner {\n@@ -379,15 +380,43 @@ fn mk_ident_interner() -> @ident_interner {\n                 // the indices here must correspond to the numbers in\n                 // special_idents.\n                 let init_vec = ~[\n-                    @~\"_\", @~\"anon\", @~\"drop\", @~\"\", @~\"unary\", @~\"!\",\n-                    @~\"[]\", @~\"unary-\", @~\"__extensions__\", @~\"self\",\n-                    @~\"item\", @~\"block\", @~\"stmt\", @~\"pat\", @~\"expr\",\n-                    @~\"ty\", @~\"ident\", @~\"path\", @~\"tt\", @~\"matchers\",\n-                    @~\"str\", @~\"TyVisitor\", @~\"arg\", @~\"descrim\",\n-                    @~\"__rust_abi\", @~\"__rust_stack_shim\", @~\"TyDesc\",\n-                    @~\"dtor\", @~\"main\", @~\"<opaque>\", @~\"blk\", @~\"static\",\n-                    @~\"intrinsic\", @~\"__foreign_mod__\", @~\"__field__\",\n-                    @~\"C\"\n+                    @~\"_\",                  // 0\n+                    @~\"anon\",               // 1\n+                    @~\"drop\",               // 2\n+                    @~\"\",                   // 3\n+                    @~\"unary\",              // 4\n+                    @~\"!\",                  // 5\n+                    @~\"[]\",                 // 6\n+                    @~\"unary-\",             // 7\n+                    @~\"__extensions__\",     // 8\n+                    @~\"self\",               // 9\n+                    @~\"item\",               // 10\n+                    @~\"block\",              // 11\n+                    @~\"stmt\",               // 12\n+                    @~\"pat\",                // 13\n+                    @~\"expr\",               // 14\n+                    @~\"ty\",                 // 15\n+                    @~\"ident\",              // 16\n+                    @~\"path\",               // 17\n+                    @~\"tt\",                 // 18\n+                    @~\"matchers\",           // 19\n+                    @~\"str\",                // 20\n+                    @~\"TyVisitor\",          // 21\n+                    @~\"arg\",                // 22\n+                    @~\"descrim\",            // 23\n+                    @~\"__rust_abi\",         // 24\n+                    @~\"__rust_stack_shim\",  // 25\n+                    @~\"TyDesc\",             // 26\n+                    @~\"dtor\",               // 27\n+                    @~\"main\",               // 28\n+                    @~\"<opaque>\",           // 29\n+                    @~\"blk\",                // 30\n+                    @~\"static\",             // 31\n+                    @~\"intrinsic\",          // 32\n+                    @~\"__foreign_mod__\",    // 33\n+                    @~\"__field__\",          // 34\n+                    @~\"C\",                  // 35\n+                    @~\"Self\",               // 36\n                 ];\n \n                 let rv = @ident_interner {"}, {"sha": "ea42045fc46f1c72bcacf9c3df85e3a72acd089a", "filename": "src/test/run-pass/self-type-param.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/982830c836b8c2c9cb3fd311c826bf5775ad1232/src%2Ftest%2Frun-pass%2Fself-type-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/982830c836b8c2c9cb3fd311c826bf5775ad1232/src%2Ftest%2Frun-pass%2Fself-type-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fself-type-param.rs?ref=982830c836b8c2c9cb3fd311c826bf5775ad1232", "patch": "@@ -0,0 +1,16 @@\n+trait MyTrait {\n+    fn f(&self) -> Self;\n+}\n+\n+struct S {\n+    x: int\n+}\n+\n+impl S : MyTrait {\n+    fn f(&self) -> S {\n+        S { x: 3 }\n+    }\n+}\n+\n+fn main() {}\n+"}]}