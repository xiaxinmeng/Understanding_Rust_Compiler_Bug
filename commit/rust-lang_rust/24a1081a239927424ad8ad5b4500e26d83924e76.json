{"sha": "24a1081a239927424ad8ad5b4500e26d83924e76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0YTEwODFhMjM5OTI3NDI0YWQ4YWQ1YjQ1MDBlMjZkODM5MjRlNzY=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-26T19:43:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-26T19:43:33Z"}, "message": "Rollup merge of #81401 - ehuss:tidy-cleanup, r=Mark-Simulacrum\n\ntidy: Some code cleanup.\n\nThis is just some cleanup that shouldn't have any change in behavior.  (See commit messages for more details.)\n\n* Remove cargo check. This test wasn't working, and is no longer valid.\n* Remove edition filter exceptions. They are no longer necessary.\n* Remove unnecessary trailing semicolon.  Otherwise the warning will prevent tidy from building after the beta branch.", "tree": {"sha": "72e1e2e486a5e1b973b1bca361ace34a8348e511", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72e1e2e486a5e1b973b1bca361ace34a8348e511"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24a1081a239927424ad8ad5b4500e26d83924e76", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgEHDmCRBK7hj4Ov3rIwAAdHIIACLkrRYqAboitcxPlSMz9v9v\nkcFVw+7ByCyFLVIMG+aC388VUA835WudD8rfwXTRYUFu8oYDQKSAN2UyN/BaNWSH\n0yiYlctlomCwyH/Ijb5Lf4bu2sqkeKLX5wHlvXN1ePeOJZIMjCRCY7KyMS/GxjBM\nfVVDLzlnDpuJrvf8HikrmkHGa0UDMD48bnQmIsnEUALAhLG4B3G9/g8FuVP2Aa+e\np6wLAeQCTgHOoi+MG3Rpu+mpb04cS/TjgDcZ5cRj6t42DoIJ4T/R/CEVpL/fBqws\nRLX20c48gzaOLe2elSLMztleCVh03iOaTp55abO6MNgt3/iiganYrXh/he2o/IU=\n=9aaJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 72e1e2e486a5e1b973b1bca361ace34a8348e511\nparent 9da36082c2d54de74be9679cf63518e11cbc7fa1\nparent 6f22f512ec8e4fce13d2d3675b6549e867bea824\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1611690213 +0900\ncommitter GitHub <noreply@github.com> 1611690213 +0900\n\nRollup merge of #81401 - ehuss:tidy-cleanup, r=Mark-Simulacrum\n\ntidy: Some code cleanup.\n\nThis is just some cleanup that shouldn't have any change in behavior.  (See commit messages for more details.)\n\n* Remove cargo check. This test wasn't working, and is no longer valid.\n* Remove edition filter exceptions. They are no longer necessary.\n* Remove unnecessary trailing semicolon.  Otherwise the warning will prevent tidy from building after the beta branch.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24a1081a239927424ad8ad5b4500e26d83924e76", "html_url": "https://github.com/rust-lang/rust/commit/24a1081a239927424ad8ad5b4500e26d83924e76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24a1081a239927424ad8ad5b4500e26d83924e76/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9da36082c2d54de74be9679cf63518e11cbc7fa1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9da36082c2d54de74be9679cf63518e11cbc7fa1", "html_url": "https://github.com/rust-lang/rust/commit/9da36082c2d54de74be9679cf63518e11cbc7fa1"}, {"sha": "6f22f512ec8e4fce13d2d3675b6549e867bea824", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f22f512ec8e4fce13d2d3675b6549e867bea824", "html_url": "https://github.com/rust-lang/rust/commit/6f22f512ec8e4fce13d2d3675b6549e867bea824"}], "stats": {"total": 113, "additions": 2, "deletions": 111}, "files": [{"sha": "e06616a59f38c16becbd95cfbfe5759ef9898034", "filename": "src/tools/tidy/src/cargo.rs", "status": "removed", "additions": 0, "deletions": 90, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/9da36082c2d54de74be9679cf63518e11cbc7fa1/src%2Ftools%2Ftidy%2Fsrc%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9da36082c2d54de74be9679cf63518e11cbc7fa1/src%2Ftools%2Ftidy%2Fsrc%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fcargo.rs?ref=9da36082c2d54de74be9679cf63518e11cbc7fa1", "patch": "@@ -1,90 +0,0 @@\n-//! Tidy check to ensure that `[dependencies]` and `extern crate` are in sync.\n-//!\n-//! This tidy check ensures that all crates listed in the `[dependencies]`\n-//! section of a `Cargo.toml` are present in the corresponding `lib.rs` as\n-//! `extern crate` declarations. This should help us keep the DAG correctly\n-//! structured through various refactorings to prune out unnecessary edges.\n-\n-use std::fs;\n-use std::path::Path;\n-\n-pub fn check(path: &Path, bad: &mut bool) {\n-    if !super::filter_dirs(path) {\n-        return;\n-    }\n-    for entry in t!(path.read_dir(), path).map(|e| t!(e)) {\n-        // Look for `Cargo.toml` with a sibling `src/lib.rs` or `lib.rs`.\n-        if entry.file_name().to_str() == Some(\"Cargo.toml\") {\n-            if path.join(\"src/lib.rs\").is_file() {\n-                verify(&entry.path(), &path.join(\"src/lib.rs\"), bad)\n-            }\n-            if path.join(\"lib.rs\").is_file() {\n-                verify(&entry.path(), &path.join(\"lib.rs\"), bad)\n-            }\n-        } else if t!(entry.file_type()).is_dir() {\n-            check(&entry.path(), bad);\n-        }\n-    }\n-}\n-\n-/// Verifies that the dependencies in Cargo.toml at `tomlfile` are synced with\n-/// the `extern crate` annotations in the lib.rs at `libfile`.\n-fn verify(tomlfile: &Path, libfile: &Path, bad: &mut bool) {\n-    let toml = t!(fs::read_to_string(&tomlfile));\n-    let librs = t!(fs::read_to_string(&libfile));\n-\n-    if toml.contains(\"name = \\\"bootstrap\\\"\") {\n-        return;\n-    }\n-\n-    // \"Poor man's TOML parser\" -- just assume we use one syntax for now.\n-    //\n-    // We just look for:\n-    //\n-    // ````\n-    // [dependencies]\n-    // name = ...\n-    // name2 = ...\n-    // name3 = ...\n-    // ```\n-    //\n-    // If we encounter a line starting with `[` then we assume it's the end of\n-    // the dependency section and bail out.\n-    let deps = match toml.find(\"[dependencies]\") {\n-        Some(i) => &toml[i + 1..],\n-        None => return,\n-    };\n-    for line in deps.lines() {\n-        if line.starts_with('[') {\n-            break;\n-        }\n-\n-        let krate = match line.split_once('=') {\n-            None => continue,\n-            Some((krate, _)) => krate.trim(),\n-        };\n-\n-        // Don't worry about depending on core/std while not writing `extern crate\n-        // core/std` -- that's intentional.\n-        if krate == \"core\" || krate == \"std\" {\n-            continue;\n-        }\n-\n-        // This is intentional -- this dependency just makes the crate available\n-        // for others later on.\n-        let allowed = krate.starts_with(\"panic\");\n-        if toml.contains(\"name = \\\"std\\\"\") && allowed {\n-            continue;\n-        }\n-\n-        if !librs.contains(&format!(\"extern crate {}\", krate)) {\n-            tidy_error!(\n-                bad,\n-                \"{} doesn't have `extern crate {}`, but Cargo.toml \\\n-                              depends on it\",\n-                libfile.display(),\n-                krate\n-            );\n-        }\n-    }\n-}"}, {"sha": "283c43e325c05422c7003f069005b025d97ad2ab", "filename": "src/tools/tidy/src/edition.rs", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/24a1081a239927424ad8ad5b4500e26d83924e76/src%2Ftools%2Ftidy%2Fsrc%2Fedition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24a1081a239927424ad8ad5b4500e26d83924e76/src%2Ftools%2Ftidy%2Fsrc%2Fedition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fedition.rs?ref=24a1081a239927424ad8ad5b4500e26d83924e76", "patch": "@@ -2,20 +2,6 @@\n \n use std::path::Path;\n \n-fn filter_dirs(path: &Path) -> bool {\n-    // FIXME: just use super::filter_dirs after the submodules are updated.\n-    if super::filter_dirs(path) {\n-        return true;\n-    }\n-    let skip = [\n-        \"src/doc/book/second-edition\",\n-        \"src/doc/book/2018-edition\",\n-        \"src/doc/book/ci/stable-check\",\n-        \"src/doc/reference/stable-check\",\n-    ];\n-    skip.iter().any(|p| path.ends_with(p))\n-}\n-\n fn is_edition_2018(mut line: &str) -> bool {\n     line = line.trim();\n     line == \"edition = \\\"2018\\\"\" || line == \"edition = \\'2018\\'\"\n@@ -24,7 +10,7 @@ fn is_edition_2018(mut line: &str) -> bool {\n pub fn check(path: &Path, bad: &mut bool) {\n     super::walk(\n         path,\n-        &mut |path| filter_dirs(path) || path.ends_with(\"src/test\"),\n+        &mut |path| super::filter_dirs(path) || path.ends_with(\"src/test\"),\n         &mut |entry, contents| {\n             let file = entry.path();\n             let filename = file.file_name().unwrap();"}, {"sha": "cb84fd8be6fec2ad4c7164750495bf743cdf4632", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24a1081a239927424ad8ad5b4500e26d83924e76/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24a1081a239927424ad8ad5b4500e26d83924e76/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=24a1081a239927424ad8ad5b4500e26d83924e76", "patch": "@@ -422,7 +422,7 @@ fn map_lib_features(\n                         mf(Err($msg), file, i + 1);\n                         continue;\n                     }};\n-                };\n+                }\n                 if let Some((ref name, ref mut f)) = becoming_feature {\n                     if f.tracking_issue.is_none() {\n                         f.tracking_issue = find_attr_val(line, \"issue\").and_then(handle_issue_none);"}, {"sha": "27972c4992442b7b268c4ab4bfc8967e29b462c6", "filename": "src/tools/tidy/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/24a1081a239927424ad8ad5b4500e26d83924e76/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24a1081a239927424ad8ad5b4500e26d83924e76/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs?ref=24a1081a239927424ad8ad5b4500e26d83924e76", "patch": "@@ -40,7 +40,6 @@ macro_rules! tidy_error {\n }\n \n pub mod bins;\n-pub mod cargo;\n pub mod debug_artifacts;\n pub mod deps;\n pub mod edition;"}, {"sha": "2ac96e404acb9e61940c5e7061a3724101ea41ec", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24a1081a239927424ad8ad5b4500e26d83924e76/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24a1081a239927424ad8ad5b4500e26d83924e76/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=24a1081a239927424ad8ad5b4500e26d83924e76", "patch": "@@ -49,10 +49,6 @@ fn main() {\n     style::check(&compiler_path, &mut bad);\n     style::check(&library_path, &mut bad);\n \n-    cargo::check(&src_path, &mut bad);\n-    cargo::check(&compiler_path, &mut bad);\n-    cargo::check(&library_path, &mut bad);\n-\n     edition::check(&src_path, &mut bad);\n     edition::check(&compiler_path, &mut bad);\n     edition::check(&library_path, &mut bad);"}]}