{"sha": "c502dee41ec38e6e0096abaa50a48e792e4c9d40", "node_id": "C_kwDOAAsO6NoAKGM1MDJkZWU0MWVjMzhlNmUwMDk2YWJhYTUwYTQ4ZTc5MmU0YzlkNDA", "commit": {"author": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2022-11-30T06:50:13Z"}, "committer": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2022-11-30T06:50:13Z"}, "message": "Use `snippet_with_context` instead of `_with_macro_callsite`", "tree": {"sha": "1b0fb8e69a58d3953477732074ec8766577d1555", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b0fb8e69a58d3953477732074ec8766577d1555"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c502dee41ec38e6e0096abaa50a48e792e4c9d40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c502dee41ec38e6e0096abaa50a48e792e4c9d40", "html_url": "https://github.com/rust-lang/rust/commit/c502dee41ec38e6e0096abaa50a48e792e4c9d40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c502dee41ec38e6e0096abaa50a48e792e4c9d40/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4b53c9c14705475b6e9041b56c441c981e86423", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4b53c9c14705475b6e9041b56c441c981e86423", "html_url": "https://github.com/rust-lang/rust/commit/a4b53c9c14705475b6e9041b56c441c981e86423"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "874d36ca9f4e378704019c8ae971c046c68d898c", "filename": "clippy_lints/src/manual_let_else.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c502dee41ec38e6e0096abaa50a48e792e4c9d40/clippy_lints%2Fsrc%2Fmanual_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c502dee41ec38e6e0096abaa50a48e792e4c9d40/clippy_lints%2Fsrc%2Fmanual_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_let_else.rs?ref=c502dee41ec38e6e0096abaa50a48e792e4c9d40", "patch": "@@ -2,7 +2,7 @@ use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::higher::IfLetOrMatch;\n use clippy_utils::msrvs::{self, Msrv};\n use clippy_utils::peel_blocks;\n-use clippy_utils::source::{snippet, snippet_with_macro_callsite};\n+use clippy_utils::source::snippet_with_context;\n use clippy_utils::ty::is_type_diagnostic_item;\n use clippy_utils::visitors::{for_each_expr, Descend};\n use if_chain::if_chain;\n@@ -141,16 +141,10 @@ fn emit_manual_let_else(cx: &LateContext<'_>, span: Span, expr: &Expr<'_>, pat:\n             // * unused binding collision detection with existing ones\n             // * putting patterns with at the top level | inside ()\n             // for this to be machine applicable.\n-            let app = Applicability::HasPlaceholders;\n-\n-            let snippet_fn = if span.from_expansion() {\n-                snippet\n-            } else {\n-                snippet_with_macro_callsite\n-            };\n-            let sn_pat = snippet_fn(cx, pat.span, \"\");\n-            let sn_expr = snippet_fn(cx, expr.span, \"\");\n-            let sn_else = snippet_fn(cx, else_body.span, \"\");\n+            let mut app = Applicability::HasPlaceholders;\n+            let (sn_pat, _) = snippet_with_context(cx, pat.span, span.ctxt(), \"\", &mut app);\n+            let (sn_expr, _) = snippet_with_context(cx, expr.span, span.ctxt(), \"\", &mut app);\n+            let (sn_else, _) = snippet_with_context(cx, else_body.span, span.ctxt(), \"\", &mut app);\n \n             let else_bl = if matches!(else_body.kind, ExprKind::Block(..)) {\n                 sn_else.into_owned()"}]}