{"sha": "bcb8a06ef7929417f09ed5055692d8afc59b3c70", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjYjhhMDZlZjc5Mjk0MTdmMDllZDUwNTU2OTJkOGFmYzU5YjNjNzA=", "commit": {"author": {"name": "NODA, Kai", "email": "nodakai@gmail.com", "date": "2018-06-23T08:51:19Z"}, "committer": {"name": "NODA, Kai", "email": "nodakai@gmail.com", "date": "2018-07-10T14:50:00Z"}, "message": "bootstrap: write texts to a .tmp file first for atomicity\n\nIf you are using a hard-linked file as your config.toml, this change will affect the way other instances of the file is modified.\nThe original version would modify all other instances whereas the new version will leave others unchanged, reducing the ref count by one.\n\nSigned-off-by: NODA, Kai <nodakai@gmail.com>", "tree": {"sha": "58d2336c97597b5fdd006352e076f6e0aa7932fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58d2336c97597b5fdd006352e076f6e0aa7932fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcb8a06ef7929417f09ed5055692d8afc59b3c70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcb8a06ef7929417f09ed5055692d8afc59b3c70", "html_url": "https://github.com/rust-lang/rust/commit/bcb8a06ef7929417f09ed5055692d8afc59b3c70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcb8a06ef7929417f09ed5055692d8afc59b3c70/comments", "author": {"login": "nodakai", "id": 90726, "node_id": "MDQ6VXNlcjkwNzI2", "avatar_url": "https://avatars.githubusercontent.com/u/90726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nodakai", "html_url": "https://github.com/nodakai", "followers_url": "https://api.github.com/users/nodakai/followers", "following_url": "https://api.github.com/users/nodakai/following{/other_user}", "gists_url": "https://api.github.com/users/nodakai/gists{/gist_id}", "starred_url": "https://api.github.com/users/nodakai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nodakai/subscriptions", "organizations_url": "https://api.github.com/users/nodakai/orgs", "repos_url": "https://api.github.com/users/nodakai/repos", "events_url": "https://api.github.com/users/nodakai/events{/privacy}", "received_events_url": "https://api.github.com/users/nodakai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nodakai", "id": 90726, "node_id": "MDQ6VXNlcjkwNzI2", "avatar_url": "https://avatars.githubusercontent.com/u/90726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nodakai", "html_url": "https://github.com/nodakai", "followers_url": "https://api.github.com/users/nodakai/followers", "following_url": "https://api.github.com/users/nodakai/following{/other_user}", "gists_url": "https://api.github.com/users/nodakai/gists{/gist_id}", "starred_url": "https://api.github.com/users/nodakai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nodakai/subscriptions", "organizations_url": "https://api.github.com/users/nodakai/orgs", "repos_url": "https://api.github.com/users/nodakai/repos", "events_url": "https://api.github.com/users/nodakai/events{/privacy}", "received_events_url": "https://api.github.com/users/nodakai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc491526dd0b5d8c8c25faa6400599e08ede1907", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc491526dd0b5d8c8c25faa6400599e08ede1907", "html_url": "https://github.com/rust-lang/rust/commit/fc491526dd0b5d8c8c25faa6400599e08ede1907"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "d1aa32236aeeebde54e81b5a03d4ec40b3d917a3", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bcb8a06ef7929417f09ed5055692d8afc59b3c70/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/bcb8a06ef7929417f09ed5055692d8afc59b3c70/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=bcb8a06ef7929417f09ed5055692d8afc59b3c70", "patch": "@@ -303,6 +303,14 @@ def default_build_triple():\n     return \"{}-{}\".format(cputype, ostype)\n \n \n+@contextlib.contextmanager\n+def output(filepath):\n+    tmp = filepath + '.tmp'\n+    with open(tmp, 'w') as f:\n+        yield f\n+    os.rename(tmp, filepath)\n+\n+\n class RustBuild(object):\n     \"\"\"Provide all the methods required to build Rust\"\"\"\n     def __init__(self):\n@@ -346,7 +354,7 @@ def download_stage0(self):\n             self._download_stage0_helper(filename, \"rustc\")\n             self.fix_executable(\"{}/bin/rustc\".format(self.bin_root()))\n             self.fix_executable(\"{}/bin/rustdoc\".format(self.bin_root()))\n-            with open(self.rustc_stamp(), 'w') as rust_stamp:\n+            with output(self.rustc_stamp()) as rust_stamp:\n                 rust_stamp.write(self.date)\n \n             # This is required so that we don't mix incompatible MinGW\n@@ -363,7 +371,7 @@ def download_stage0(self):\n             filename = \"cargo-{}-{}.tar.gz\".format(cargo_channel, self.build)\n             self._download_stage0_helper(filename, \"cargo\")\n             self.fix_executable(\"{}/bin/cargo\".format(self.bin_root()))\n-            with open(self.cargo_stamp(), 'w') as cargo_stamp:\n+            with output(self.cargo_stamp()) as cargo_stamp:\n                 cargo_stamp.write(self.date)\n \n     def _download_stage0_helper(self, filename, pattern):\n@@ -776,7 +784,7 @@ def bootstrap(help_triggered):\n     if build.use_vendored_sources:\n         if not os.path.exists('.cargo'):\n             os.makedirs('.cargo')\n-        with open('.cargo/config', 'w') as cargo_config:\n+        with output('.cargo/config') as cargo_config:\n             cargo_config.write(\"\"\"\n                 [source.crates-io]\n                 replace-with = 'vendored-sources'"}, {"sha": "9fdba044f4be3da82b035e5bc110c4a477f9085d", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bcb8a06ef7929417f09ed5055692d8afc59b3c70/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/bcb8a06ef7929417f09ed5055692d8afc59b3c70/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=bcb8a06ef7929417f09ed5055692d8afc59b3c70", "patch": "@@ -432,7 +432,7 @@ def configure_section(lines, config):\n # order that we read it in.\n p(\"\")\n p(\"writing `config.toml` in current directory\")\n-with open('config.toml', 'w') as f:\n+with bootstrap.output('config.toml') as f:\n     for section in section_order:\n         if section == 'target':\n             for target in targets:\n@@ -442,7 +442,7 @@ def configure_section(lines, config):\n             for line in sections[section]:\n                 f.write(line + \"\\n\")\n \n-with open('Makefile', 'w') as f:\n+with bootstrap.output('Makefile') as f:\n     contents = os.path.join(rust_dir, 'src', 'bootstrap', 'mk', 'Makefile.in')\n     contents = open(contents).read()\n     contents = contents.replace(\"$(CFG_SRC_DIR)\", rust_dir + '/')"}]}