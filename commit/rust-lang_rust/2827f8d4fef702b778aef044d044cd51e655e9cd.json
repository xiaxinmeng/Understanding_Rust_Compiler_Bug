{"sha": "2827f8d4fef702b778aef044d044cd51e655e9cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MjdmOGQ0ZmVmNzAyYjc3OGFlZjA0NGQwNDRjZDUxZTY1NWU5Y2Q=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-02-26T14:27:56Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-03-01T10:18:49Z"}, "message": "hir: remove NodeId from TypeBinding", "tree": {"sha": "35437af3c1c459844f232d8fcae490b3f8a21ffa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35437af3c1c459844f232d8fcae490b3f8a21ffa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2827f8d4fef702b778aef044d044cd51e655e9cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2827f8d4fef702b778aef044d044cd51e655e9cd", "html_url": "https://github.com/rust-lang/rust/commit/2827f8d4fef702b778aef044d044cd51e655e9cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2827f8d4fef702b778aef044d044cd51e655e9cd/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a29ceb9f51390293e0833f763b7490e70da255c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a29ceb9f51390293e0833f763b7490e70da255c5", "html_url": "https://github.com/rust-lang/rust/commit/a29ceb9f51390293e0833f763b7490e70da255c5"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "33d95149e9c0c57023f5d1899c74589415eb7664", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2827f8d4fef702b778aef044d044cd51e655e9cd/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2827f8d4fef702b778aef044d044cd51e655e9cd/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=2827f8d4fef702b778aef044d044cd51e655e9cd", "patch": "@@ -1151,10 +1151,9 @@ impl<'a> LoweringContext<'a> {\n \n     fn lower_ty_binding(&mut self, b: &TypeBinding,\n                         itctx: ImplTraitContext<'_>) -> hir::TypeBinding {\n-        let LoweredNodeId { node_id, hir_id } = self.lower_node_id(b.id);\n+        let LoweredNodeId { node_id: _, hir_id } = self.lower_node_id(b.id);\n \n         hir::TypeBinding {\n-            id: node_id,\n             hir_id,\n             ident: b.ident,\n             ty: self.lower_ty(&b.ty, itctx),\n@@ -1982,14 +1981,13 @@ impl<'a> LoweringContext<'a> {\n                     let LoweredNodeId { node_id: _, hir_id } = this.next_id();\n                     hir::Ty { node: hir::TyKind::Tup(tys), hir_id, span }\n                 };\n-                let LoweredNodeId { node_id, hir_id } = this.next_id();\n+                let LoweredNodeId { node_id: _, hir_id } = this.next_id();\n \n                 (\n                     hir::GenericArgs {\n                         args: hir_vec![GenericArg::Type(mk_tup(this, inputs, span))],\n                         bindings: hir_vec![\n                             hir::TypeBinding {\n-                                id: node_id,\n                                 hir_id,\n                                 ident: Ident::from_str(FN_OUTPUT_NAME),\n                                 ty: output\n@@ -2326,13 +2324,12 @@ impl<'a> LoweringContext<'a> {\n             };\n \n             // \"<Output = T>\"\n-            let LoweredNodeId { node_id, hir_id } = this.next_id();\n+            let LoweredNodeId { node_id: _, hir_id } = this.next_id();\n             let future_params = P(hir::GenericArgs {\n                 args: hir_vec![],\n                 bindings: hir_vec![hir::TypeBinding {\n                     ident: Ident::from_str(FN_OUTPUT_NAME),\n                     ty: output_ty,\n-                    id: node_id,\n                     hir_id,\n                     span,\n                 }],"}, {"sha": "3d272c0e251c9572615ab1cea878107dda224257", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2827f8d4fef702b778aef044d044cd51e655e9cd/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2827f8d4fef702b778aef044d044cd51e655e9cd/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=2827f8d4fef702b778aef044d044cd51e655e9cd", "patch": "@@ -1737,7 +1737,6 @@ pub enum ImplItemKind {\n // Bind a type to an associated type: `A=Foo`.\n #[derive(Clone, RustcEncodable, RustcDecodable, Debug)]\n pub struct TypeBinding {\n-    pub id: NodeId,\n     pub hir_id: HirId,\n     pub ident: Ident,\n     pub ty: P<Ty>,"}, {"sha": "d601d1e15578f58ff9fb962bc56eac47f363e8e8", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2827f8d4fef702b778aef044d044cd51e655e9cd/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2827f8d4fef702b778aef044d044cd51e655e9cd/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=2827f8d4fef702b778aef044d044cd51e655e9cd", "patch": "@@ -294,7 +294,6 @@ impl_stable_hash_for!(struct hir::MethodSig {\n });\n \n impl_stable_hash_for!(struct hir::TypeBinding {\n-    id,\n     hir_id,\n     ident -> (ident.name),\n     ty,"}]}