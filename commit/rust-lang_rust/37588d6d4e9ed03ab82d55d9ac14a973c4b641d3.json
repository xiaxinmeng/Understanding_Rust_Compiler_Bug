{"sha": "37588d6d4e9ed03ab82d55d9ac14a973c4b641d3", "node_id": "C_kwDOAAsO6NoAKDM3NTg4ZDZkNGU5ZWQwM2FiODJkNTVkOWFjMTRhOTczYzRiNjQxZDM", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-27T15:57:40Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-30T07:59:21Z"}, "message": "lint: port pass-by-value diagnostics\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "e26dc897f725ea793902d2f07536e85ab73d5a50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e26dc897f725ea793902d2f07536e85ab73d5a50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37588d6d4e9ed03ab82d55d9ac14a973c4b641d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37588d6d4e9ed03ab82d55d9ac14a973c4b641d3", "html_url": "https://github.com/rust-lang/rust/commit/37588d6d4e9ed03ab82d55d9ac14a973c4b641d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37588d6d4e9ed03ab82d55d9ac14a973c4b641d3/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "855f23773b3d6a4c14a8d7c92af35f86e990cfb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/855f23773b3d6a4c14a8d7c92af35f86e990cfb5", "html_url": "https://github.com/rust-lang/rust/commit/855f23773b3d6a4c14a8d7c92af35f86e990cfb5"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "e3c588b6ff1ec23db1d3ca29eddf47a13a13af0a", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/37588d6d4e9ed03ab82d55d9ac14a973c4b641d3/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/37588d6d4e9ed03ab82d55d9ac14a973c4b641d3/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=37588d6d4e9ed03ab82d55d9ac14a973c4b641d3", "patch": "@@ -128,3 +128,6 @@ lint-non-upper_case-global = {$sort} `{$name}` should have an upper case name\n lint-noop-method-call = call to `.{$method}()` on a reference in this situation does nothing\n     .label = unnecessary method call\n     .note = the type `{$receiver_ty}` which `{$method}` is being called on is the same as the type returned from `{$method}`, so the method call does not do anything and can be removed\n+\n+lint-pass-by-value = passing `{$ty}` by reference\n+    .suggestion = try passing by value"}, {"sha": "af5e5faf1f568aef60d44de98c57acafe0b69615", "filename": "compiler/rustc_lint/src/pass_by_value.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/37588d6d4e9ed03ab82d55d9ac14a973c4b641d3/compiler%2Frustc_lint%2Fsrc%2Fpass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37588d6d4e9ed03ab82d55d9ac14a973c4b641d3/compiler%2Frustc_lint%2Fsrc%2Fpass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fpass_by_value.rs?ref=37588d6d4e9ed03ab82d55d9ac14a973c4b641d3", "patch": "@@ -1,5 +1,5 @@\n use crate::{LateContext, LateLintPass, LintContext};\n-use rustc_errors::Applicability;\n+use rustc_errors::{fluent, Applicability};\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_hir::{GenericArg, PathSegment, QPath, TyKind};\n@@ -30,10 +30,11 @@ impl<'tcx> LateLintPass<'tcx> for PassByValue {\n                 }\n                 if let Some(t) = path_for_pass_by_value(cx, &inner_ty) {\n                     cx.struct_span_lint(PASS_BY_VALUE, ty.span, |lint| {\n-                        lint.build(&format!(\"passing `{}` by reference\", t))\n+                        lint.build(fluent::lint::pass_by_value)\n+                            .set_arg(\"ty\", t.clone())\n                             .span_suggestion(\n                                 ty.span,\n-                                \"try passing by value\",\n+                                fluent::lint::suggestion,\n                                 t,\n                                 // Changing type of function argument\n                                 Applicability::MaybeIncorrect,"}]}