{"sha": "c55d3f1ba1e78466d2f5703a9e291f4849ddcc94", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1NWQzZjFiYTFlNzg0NjZkMmY1NzAzYTllMjkxZjQ4NDlkZGNjOTQ=", "commit": {"author": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-06-27T21:39:22Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-07-17T03:25:51Z"}, "message": "rt: Move personality to functions from their landing pads\n\nThis is for llvm/cc714e214298cfbf11de65b46de31900d51422cf", "tree": {"sha": "f69a1d4f336bd11aa9ac09a45834c23bc7d03ea9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f69a1d4f336bd11aa9ac09a45834c23bc7d03ea9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c55d3f1ba1e78466d2f5703a9e291f4849ddcc94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c55d3f1ba1e78466d2f5703a9e291f4849ddcc94", "html_url": "https://github.com/rust-lang/rust/commit/c55d3f1ba1e78466d2f5703a9e291f4849ddcc94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c55d3f1ba1e78466d2f5703a9e291f4849ddcc94/comments", "author": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea317e8ea40f0d50fc5d1874bed039040f978596", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea317e8ea40f0d50fc5d1874bed039040f978596", "html_url": "https://github.com/rust-lang/rust/commit/ea317e8ea40f0d50fc5d1874bed039040f978596"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "8643131d0fb74eadb5196b219e324b359e6a9822", "filename": "src/rt/rust_try.ll", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c55d3f1ba1e78466d2f5703a9e291f4849ddcc94/src%2Frt%2Frust_try.ll", "raw_url": "https://github.com/rust-lang/rust/raw/c55d3f1ba1e78466d2f5703a9e291f4849ddcc94/src%2Frt%2Frust_try.ll", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_try.ll?ref=c55d3f1ba1e78466d2f5703a9e291f4849ddcc94", "patch": "@@ -14,7 +14,9 @@\n \n ; See also: libstd/rt/unwind/mod.rs\n \n-define i8* @rust_try(void (i8*)* %f, i8* %env) {\n+define i8* @rust_try(void (i8*)* %f, i8* %env)\n+    personality i8* bitcast (i32 (...)* @rust_eh_personality_catch to i8*)\n+{\n \n     %1 = invoke i8* @rust_try_inner(void (i8*)* %f, i8* %env)\n         to label %normal\n@@ -24,13 +26,15 @@ normal:\n     ret i8* %1\n \n catch:\n-    landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @rust_eh_personality_catch to i8*)\n-        catch i8* null\n-    ; rust_try_inner's landing pad does not resume unwinds, so execution will never reach here\n+    landingpad { i8*, i32 } catch i8* null\n+    ; rust_try_inner's landing pad does not resume unwinds, so execution will\n+    ; never reach here\n     ret i8* null\n }\n \n-define internal i8* @rust_try_inner(void (i8*)* %f, i8* %env) {\n+define internal i8* @rust_try_inner(void (i8*)* %f, i8* %env)\n+    personality i8* bitcast (i32 (...)* @rust_eh_personality to i8*)\n+{\n \n     invoke void %f(i8* %env)\n         to label %normal\n@@ -40,8 +44,7 @@ normal:\n     ret i8* null\n \n catch:\n-    %1 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @rust_eh_personality to i8*)\n-        catch i8* null\n+    %1 = landingpad { i8*, i32 } catch i8* null\n     ; extract and return pointer to the exception object\n     %2 = extractvalue { i8*, i32 } %1, 0\n     ret i8* %2"}, {"sha": "c38e6081bf2d3fdc07e1788ac15cb911c733a539", "filename": "src/rt/rust_try_msvc_64.ll", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c55d3f1ba1e78466d2f5703a9e291f4849ddcc94/src%2Frt%2Frust_try_msvc_64.ll", "raw_url": "https://github.com/rust-lang/rust/raw/c55d3f1ba1e78466d2f5703a9e291f4849ddcc94/src%2Frt%2Frust_try_msvc_64.ll", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_try_msvc_64.ll?ref=c55d3f1ba1e78466d2f5703a9e291f4849ddcc94", "patch": "@@ -21,7 +21,9 @@\n ;\n ; See also: src/libstd/rt/unwind/seh.rs\n \n-define i8* @rust_try(void (i8*)* %f, i8* %env) {\n+define i8* @rust_try(void (i8*)* %f, i8* %env)\n+    personality i8* bitcast (i32 (...)* @__C_specific_handler to i8*)\n+{\n     invoke void %f(i8* %env)\n         to label %normal\n         unwind label %catch\n@@ -58,8 +60,8 @@ normal:\n ; but apparently LLVM chokes on this, so we do the more complicated thing to\n ; placate it.\n catch:\n-    %vals = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__C_specific_handler to i8*)\n-        catch i8* bitcast (i32 (i8*, i8*)* @__rust_try_filter to i8*)\n+    %vals = landingpad { i8*, i32 }\n+              catch i8* bitcast (i32 (i8*, i8*)* @__rust_try_filter to i8*)\n     %ehptr = extractvalue { i8*, i32 } %vals, 0\n     %sel = extractvalue { i8*, i32 } %vals, 1\n     %filter_sel = call i32 @llvm.eh.typeid.for(i8* bitcast (i32 (i8*, i8*)* @__rust_try_filter to i8*))"}]}