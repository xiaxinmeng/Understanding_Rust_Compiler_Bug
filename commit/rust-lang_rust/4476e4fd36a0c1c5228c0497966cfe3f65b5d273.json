{"sha": "4476e4fd36a0c1c5228c0497966cfe3f65b5d273", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0NzZlNGZkMzZhMGMxYzUyMjhjMDQ5Nzk2NmNmZTNmNjViNWQyNzM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-08T23:16:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-08T23:16:02Z"}, "message": "Rollup merge of #58261 - taiki-e:librustc_incremental-2018, r=Centril\n\nlibrustc_incremental => 2018\n\nTransitions `librustc_incremental` to Rust 2018; cc #58099\n\nr? @Centril", "tree": {"sha": "736f29f6d4f6ca2bf0dd51ed2ad650ebd1517c29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/736f29f6d4f6ca2bf0dd51ed2ad650ebd1517c29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4476e4fd36a0c1c5228c0497966cfe3f65b5d273", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcXg2yCRBK7hj4Ov3rIwAAdHIIAAOjwifdaiuDB28+YVHM/q12\ngpE8+nQPTXp5zlMNJBVT9LZUuRfeGofGgnKo7SFoFLBrecWDW4jUjaRGBhdOYFRg\nbxt+qzPazl3UxfuA04Jm7kUoo7vDPawO3tMLBAv4oeWq2rQKo8re0hyViii+gpI9\noABNShHp+IWMv/ogBkmC50DaYxS5OKaLtTYgpWkDbKbg/fcAdUhypUFfcw5NIXfd\ntIHUrAwkNeCIJ3xTCLg7pV/Z3f/fKqu68kQS4oOI/LYJtfItNZlZTNpqprCIlg8z\ninjbCJz8bLfr3zUJ8ZDdsRWeeOZaS3yiC54z/H7K/SoTmiCG0RcMShuHgclUO3s=\n=tQt7\n-----END PGP SIGNATURE-----\n", "payload": "tree 736f29f6d4f6ca2bf0dd51ed2ad650ebd1517c29\nparent c3d365f4604dd10d7a4248d4ba63ff4deb901547\nparent 4f2e97e0ed4a988a037a132f1efdd9456f1c1315\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1549667762 +0100\ncommitter GitHub <noreply@github.com> 1549667762 +0100\n\nRollup merge of #58261 - taiki-e:librustc_incremental-2018, r=Centril\n\nlibrustc_incremental => 2018\n\nTransitions `librustc_incremental` to Rust 2018; cc #58099\n\nr? @Centril\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4476e4fd36a0c1c5228c0497966cfe3f65b5d273", "html_url": "https://github.com/rust-lang/rust/commit/4476e4fd36a0c1c5228c0497966cfe3f65b5d273", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4476e4fd36a0c1c5228c0497966cfe3f65b5d273/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3d365f4604dd10d7a4248d4ba63ff4deb901547", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3d365f4604dd10d7a4248d4ba63ff4deb901547", "html_url": "https://github.com/rust-lang/rust/commit/c3d365f4604dd10d7a4248d4ba63ff4deb901547"}, {"sha": "4f2e97e0ed4a988a037a132f1efdd9456f1c1315", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f2e97e0ed4a988a037a132f1efdd9456f1c1315", "html_url": "https://github.com/rust-lang/rust/commit/4f2e97e0ed4a988a037a132f1efdd9456f1c1315"}], "stats": {"total": 61, "additions": 29, "deletions": 32}, "files": [{"sha": "10b448b7fec3f90f752ee8f26c76d7b158aa1977", "filename": "src/librustc_incremental/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4476e4fd36a0c1c5228c0497966cfe3f65b5d273/src%2Flibrustc_incremental%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4476e4fd36a0c1c5228c0497966cfe3f65b5d273/src%2Flibrustc_incremental%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2FCargo.toml?ref=4476e4fd36a0c1c5228c0497966cfe3f65b5d273", "patch": "@@ -2,6 +2,7 @@\n authors = [\"The Rust Project Developers\"]\n name = \"rustc_incremental\"\n version = \"0.0.0\"\n+edition = \"2018\"\n \n [lib]\n name = \"rustc_incremental\""}, {"sha": "b715a32cb0573144b7c88affad90427cf951cf22", "filename": "src/librustc_incremental/assert_dep_graph.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4476e4fd36a0c1c5228c0497966cfe3f65b5d273/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4476e4fd36a0c1c5228c0497966cfe3f65b5d273/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_dep_graph.rs?ref=4476e4fd36a0c1c5228c0497966cfe3f65b5d273", "patch": "@@ -217,7 +217,7 @@ fn check_paths<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     }\n }\n \n-fn dump_graph(tcx: TyCtxt) {\n+fn dump_graph(tcx: TyCtxt<'_, '_, '_>) {\n     let path: String = env::var(\"RUST_DEP_GRAPH\").unwrap_or_else(|_| \"dep_graph\".to_string());\n     let query = tcx.dep_graph.query();\n \n@@ -261,11 +261,11 @@ pub struct GraphvizDepGraph<'q>(FxHashSet<&'q DepNode>,\n impl<'a, 'tcx, 'q> dot::GraphWalk<'a> for GraphvizDepGraph<'q> {\n     type Node = &'q DepNode;\n     type Edge = (&'q DepNode, &'q DepNode);\n-    fn nodes(&self) -> dot::Nodes<&'q DepNode> {\n+    fn nodes(&self) -> dot::Nodes<'_, &'q DepNode> {\n         let nodes: Vec<_> = self.0.iter().cloned().collect();\n         nodes.into()\n     }\n-    fn edges(&self) -> dot::Edges<(&'q DepNode, &'q DepNode)> {\n+    fn edges(&self) -> dot::Edges<'_, (&'q DepNode, &'q DepNode)> {\n         self.1[..].into()\n     }\n     fn source(&self, edge: &(&'q DepNode, &'q DepNode)) -> &'q DepNode {\n@@ -279,18 +279,18 @@ impl<'a, 'tcx, 'q> dot::GraphWalk<'a> for GraphvizDepGraph<'q> {\n impl<'a, 'tcx, 'q> dot::Labeller<'a> for GraphvizDepGraph<'q> {\n     type Node = &'q DepNode;\n     type Edge = (&'q DepNode, &'q DepNode);\n-    fn graph_id(&self) -> dot::Id {\n+    fn graph_id(&self) -> dot::Id<'_> {\n         dot::Id::new(\"DependencyGraph\").unwrap()\n     }\n-    fn node_id(&self, n: &&'q DepNode) -> dot::Id {\n+    fn node_id(&self, n: &&'q DepNode) -> dot::Id<'_> {\n         let s: String =\n             format!(\"{:?}\", n).chars()\n                               .map(|c| if c == '_' || c.is_alphanumeric() { c } else { '_' })\n                               .collect();\n         debug!(\"n={:?} s={:?}\", n, s);\n         dot::Id::new(s).unwrap()\n     }\n-    fn node_label(&self, n: &&'q DepNode) -> dot::LabelText {\n+    fn node_label(&self, n: &&'q DepNode) -> dot::LabelText<'_> {\n         dot::LabelText::label(format!(\"{:?}\", n))\n     }\n }"}, {"sha": "346ddaa485804c9914f8cc6fe5c930bf76a36d42", "filename": "src/librustc_incremental/lib.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4476e4fd36a0c1c5228c0497966cfe3f65b5d273/src%2Flibrustc_incremental%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4476e4fd36a0c1c5228c0497966cfe3f65b5d273/src%2Flibrustc_incremental%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Flib.rs?ref=4476e4fd36a0c1c5228c0497966cfe3f65b5d273", "patch": "@@ -7,16 +7,13 @@\n \n #![recursion_limit=\"256\"]\n \n-extern crate graphviz;\n+#![deny(rust_2018_idioms)]\n+\n #[macro_use] extern crate rustc;\n-extern crate rustc_data_structures;\n-extern crate serialize as rustc_serialize;\n-extern crate rand;\n-extern crate rustc_fs_util;\n+#[allow(unused_extern_crates)]\n+extern crate serialize as rustc_serialize; // used by deriving\n \n #[macro_use] extern crate log;\n-extern crate syntax;\n-extern crate syntax_pos;\n \n mod assert_dep_graph;\n pub mod assert_module_sources;"}, {"sha": "9b52199465b5c11c1a22559aaa066e096d0dbced", "filename": "src/librustc_incremental/persist/dirty_clean.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4476e4fd36a0c1c5228c0497966cfe3f65b5d273/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4476e4fd36a0c1c5228c0497966cfe3f65b5d273/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs?ref=4476e4fd36a0c1c5228c0497966cfe3f65b5d273", "patch": "@@ -538,7 +538,7 @@ impl<'a, 'tcx> ItemLikeVisitor<'tcx> for DirtyCleanVisitor<'a, 'tcx> {\n ///\n /// Also make sure that the `label` and `except` fields do not\n /// both exist.\n-fn check_config(tcx: TyCtxt, attr: &Attribute) -> bool {\n+fn check_config(tcx: TyCtxt<'_, '_, '_>, attr: &Attribute) -> bool {\n     debug!(\"check_config(attr={:?})\", attr);\n     let config = &tcx.sess.parse_sess.config;\n     debug!(\"check_config: config={:?}\", config);\n@@ -573,7 +573,7 @@ fn check_config(tcx: TyCtxt, attr: &Attribute) -> bool {\n     }\n }\n \n-fn expect_associated_value(tcx: TyCtxt, item: &NestedMetaItem) -> ast::Name {\n+fn expect_associated_value(tcx: TyCtxt<'_, '_, '_>, item: &NestedMetaItem) -> ast::Name {\n     if let Some(value) = item.value_str() {\n         value\n     } else {"}, {"sha": "ecf8bc4a88084680ef977697605c7eab0b0196cf", "filename": "src/librustc_incremental/persist/load.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4476e4fd36a0c1c5228c0497966cfe3f65b5d273/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4476e4fd36a0c1c5228c0497966cfe3f65b5d273/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fload.rs?ref=4476e4fd36a0c1c5228c0497966cfe3f65b5d273", "patch": "@@ -9,7 +9,6 @@ use rustc::util::common::time_ext;\n use rustc_serialize::Decodable as RustcDecodable;\n use rustc_serialize::opaque::Decoder;\n use std::path::Path;\n-use std;\n \n use super::data::*;\n use super::fs::*;"}, {"sha": "3aad4f5abb884330459bda4644db04e0642b7865", "filename": "src/librustc_incremental/persist/mod.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4476e4fd36a0c1c5228c0497966cfe3f65b5d273/src%2Flibrustc_incremental%2Fpersist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4476e4fd36a0c1c5228c0497966cfe3f65b5d273/src%2Flibrustc_incremental%2Fpersist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fmod.rs?ref=4476e4fd36a0c1c5228c0497966cfe3f65b5d273", "patch": "@@ -10,16 +10,16 @@ mod save;\n mod work_product;\n mod file_format;\n \n-pub use self::fs::finalize_session_directory;\n-pub use self::fs::garbage_collect_session_directories;\n-pub use self::fs::in_incr_comp_dir;\n-pub use self::fs::in_incr_comp_dir_sess;\n-pub use self::fs::prepare_session_directory;\n-pub use self::load::dep_graph_tcx_init;\n-pub use self::load::load_dep_graph;\n-pub use self::load::load_query_result_cache;\n-pub use self::load::LoadResult;\n-pub use self::save::save_dep_graph;\n-pub use self::save::save_work_product_index;\n-pub use self::work_product::copy_cgu_workproducts_to_incr_comp_cache_dir;\n-pub use self::work_product::delete_workproduct_files;\n+pub use fs::finalize_session_directory;\n+pub use fs::garbage_collect_session_directories;\n+pub use fs::in_incr_comp_dir;\n+pub use fs::in_incr_comp_dir_sess;\n+pub use fs::prepare_session_directory;\n+pub use load::dep_graph_tcx_init;\n+pub use load::load_dep_graph;\n+pub use load::load_query_result_cache;\n+pub use load::LoadResult;\n+pub use save::save_dep_graph;\n+pub use save::save_work_product_index;\n+pub use work_product::copy_cgu_workproducts_to_incr_comp_cache_dir;\n+pub use work_product::delete_workproduct_files;"}, {"sha": "34fe2f1c25d0445399e81ac60a6e65990c2c854e", "filename": "src/librustc_incremental/persist/save.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4476e4fd36a0c1c5228c0497966cfe3f65b5d273/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4476e4fd36a0c1c5228c0497966cfe3f65b5d273/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs?ref=4476e4fd36a0c1c5228c0497966cfe3f65b5d273", "patch": "@@ -129,7 +129,7 @@ fn save_in<F>(sess: &Session, path_buf: PathBuf, encode: F)\n     }\n }\n \n-fn encode_dep_graph(tcx: TyCtxt,\n+fn encode_dep_graph(tcx: TyCtxt<'_, '_, '_>,\n                     encoder: &mut Encoder) {\n     // First encode the commandline arguments hash\n     tcx.sess.opts.dep_tracking_hash().encode(encoder).unwrap();\n@@ -234,7 +234,7 @@ fn encode_work_product_index(work_products: &FxHashMap<WorkProductId, WorkProduc\n     serialized_products.encode(encoder).unwrap();\n }\n \n-fn encode_query_cache(tcx: TyCtxt,\n+fn encode_query_cache(tcx: TyCtxt<'_, '_, '_>,\n                       encoder: &mut Encoder) {\n     time(tcx.sess, \"serialize query result cache\", || {\n         tcx.serialize_query_result_cache(encoder).unwrap();"}, {"sha": "3495b27c5ebca6df5fa02c84c8fb660ad523d1de", "filename": "src/librustc_incremental/persist/work_product.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4476e4fd36a0c1c5228c0497966cfe3f65b5d273/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4476e4fd36a0c1c5228c0497966cfe3f65b5d273/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs?ref=4476e4fd36a0c1c5228c0497966cfe3f65b5d273", "patch": "@@ -1,6 +1,6 @@\n //! This module contains files for saving intermediate work-products.\n \n-use persist::fs::*;\n+use crate::persist::fs::*;\n use rustc::dep_graph::{WorkProduct, WorkProductId, WorkProductFileKind};\n use rustc::session::Session;\n use rustc_fs_util::link_or_copy;"}]}