{"sha": "9927b3173b28fc334683cf3b5b254526c735911e", "node_id": "C_kwDOAAsO6NoAKDk5MjdiMzE3M2IyOGZjMzM0NjgzY2YzYjViMjU0NTI2YzczNTkxMWU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-20T15:36:19Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-20T21:12:08Z"}, "message": "detect bad vtables on an upcast", "tree": {"sha": "9cdcdb04fb8184402e996a3b4960a286c6059f09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cdcdb04fb8184402e996a3b4960a286c6059f09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9927b3173b28fc334683cf3b5b254526c735911e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9927b3173b28fc334683cf3b5b254526c735911e", "html_url": "https://github.com/rust-lang/rust/commit/9927b3173b28fc334683cf3b5b254526c735911e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9927b3173b28fc334683cf3b5b254526c735911e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0318f07bddd9911cb23d33eb668a911de2a02f3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0318f07bddd9911cb23d33eb668a911de2a02f3a", "html_url": "https://github.com/rust-lang/rust/commit/0318f07bddd9911cb23d33eb668a911de2a02f3a"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "883387851eaf0234db6ec5abfc736b89d67b39a5", "filename": "compiler/rustc_const_eval/src/interpret/cast.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9927b3173b28fc334683cf3b5b254526c735911e/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9927b3173b28fc334683cf3b5b254526c735911e/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fcast.rs?ref=9927b3173b28fc334683cf3b5b254526c735911e", "patch": "@@ -297,10 +297,13 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                     Immediate::new_slice(ptr, length.eval_usize(*self.tcx, self.param_env), self);\n                 self.write_immediate(val, dest)\n             }\n-            (&ty::Dynamic(ref _data_a, ..), &ty::Dynamic(ref data_b, ..)) => {\n+            (&ty::Dynamic(ref data_a, ..), &ty::Dynamic(ref data_b, ..)) => {\n                 let (old_data, old_vptr) = self.read_immediate(src)?.to_scalar_pair()?;\n                 let old_vptr = self.scalar_to_ptr(old_vptr)?;\n-                let (ty, _) = self.get_ptr_vtable(old_vptr)?;\n+                let (ty, old_trait) = self.get_ptr_vtable(old_vptr)?;\n+                if old_trait != data_a.principal() {\n+                    throw_ub_format!(\"upcast on a pointer whose vtable does not match its type\");\n+                }\n                 let new_vptr = self.get_vtable_ptr(ty, data_b.principal())?;\n                 self.write_immediate(Immediate::new_dyn_trait(old_data, new_vptr, self), dest)\n             }"}]}