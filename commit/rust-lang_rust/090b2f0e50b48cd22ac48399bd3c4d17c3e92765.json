{"sha": "090b2f0e50b48cd22ac48399bd3c4d17c3e92765", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5MGIyZjBlNTBiNDhjZDIyYWM0ODM5OWJkM2M0ZDE3YzNlOTI3NjU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-28T18:33:00Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-28T18:33:00Z"}, "message": "Fix incorrect `FileId` and remove broken shortcut\n\nApparently we were using the crate's root file instead of the file\ncontaining the block.", "tree": {"sha": "73a3ed7fa6ae337a1c8cb69f10ff9f0101cd6fce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73a3ed7fa6ae337a1c8cb69f10ff9f0101cd6fce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/090b2f0e50b48cd22ac48399bd3c4d17c3e92765", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/090b2f0e50b48cd22ac48399bd3c4d17c3e92765", "html_url": "https://github.com/rust-lang/rust/commit/090b2f0e50b48cd22ac48399bd3c4d17c3e92765", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/090b2f0e50b48cd22ac48399bd3c4d17c3e92765/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa1b500d2f412119454de7f9e98ec2664b604108", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa1b500d2f412119454de7f9e98ec2664b604108", "html_url": "https://github.com/rust-lang/rust/commit/fa1b500d2f412119454de7f9e98ec2664b604108"}], "stats": {"total": 25, "additions": 9, "deletions": 16}, "files": [{"sha": "6169b3bbcbdd851a000bb8bc51f243dcfb400008", "filename": "crates/hir_def/src/nameres.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/090b2f0e50b48cd22ac48399bd3c4d17c3e92765/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/090b2f0e50b48cd22ac48399bd3c4d17c3e92765/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres.rs?ref=090b2f0e50b48cd22ac48399bd3c4d17c3e92765", "patch": "@@ -199,24 +199,18 @@ impl DefMap {\n \n     pub(crate) fn block_def_map_query(db: &dyn DefDatabase, block_id: BlockId) -> Arc<DefMap> {\n         let block: BlockLoc = db.lookup_intern_block(block_id);\n-        let item_tree = db.item_tree(block.ast_id.file_id);\n-        let block_items = item_tree.inner_items_of_block(block.ast_id.value);\n-\n         let parent = block.module.def_map(db);\n \n-        if block_items.is_empty() {\n-            // If there are no inner items, nothing new is brought into scope, so we can just return\n-            // the parent DefMap. This keeps DefMap parent chains short.\n-            return parent;\n-        }\n+        // FIXME: It would be good to just return the parent map when the block has no items, but\n+        // we rely on `def_map.block` in a few places, which is `Some` for the inner `DefMap`.\n \n         let block_info =\n             BlockInfo { block: block_id, parent, parent_module: block.module.local_id };\n \n         let mut def_map = DefMap::empty(block.module.krate, block_info.parent.edition);\n         def_map.block = Some(block_info);\n \n-        let def_map = collector::collect_defs(db, def_map, Some(block.ast_id.value));\n+        let def_map = collector::collect_defs(db, def_map, Some(block.ast_id));\n         Arc::new(def_map)\n     }\n "}, {"sha": "ae98fadac29785514ffdb72376f97fccb12588d1", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/090b2f0e50b48cd22ac48399bd3c4d17c3e92765/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/090b2f0e50b48cd22ac48399bd3c4d17c3e92765/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=090b2f0e50b48cd22ac48399bd3c4d17c3e92765", "patch": "@@ -48,7 +48,7 @@ const FIXED_POINT_LIMIT: usize = 8192;\n pub(super) fn collect_defs(\n     db: &dyn DefDatabase,\n     mut def_map: DefMap,\n-    block: Option<FileAstId<ast::BlockExpr>>,\n+    block: Option<AstId<ast::BlockExpr>>,\n ) -> DefMap {\n     let crate_graph = db.crate_graph();\n \n@@ -261,11 +261,10 @@ impl DefCollector<'_> {\n         }\n     }\n \n-    fn seed_with_inner(&mut self, block: FileAstId<ast::BlockExpr>) {\n-        let file_id = self.db.crate_graph()[self.def_map.krate].root_file_id;\n-        let item_tree = self.db.item_tree(file_id.into());\n+    fn seed_with_inner(&mut self, block: AstId<ast::BlockExpr>) {\n+        let item_tree = self.db.item_tree(block.file_id);\n         let module_id = self.def_map.root;\n-        self.def_map.modules[module_id].origin = ModuleOrigin::CrateRoot { definition: file_id };\n+        self.def_map.modules[module_id].origin = ModuleOrigin::BlockExpr { block };\n         if item_tree\n             .top_level_attrs(self.db, self.def_map.krate)\n             .cfg()\n@@ -275,11 +274,11 @@ impl DefCollector<'_> {\n                 def_collector: &mut *self,\n                 macro_depth: 0,\n                 module_id,\n-                file_id: file_id.into(),\n+                file_id: block.file_id,\n                 item_tree: &item_tree,\n                 mod_dir: ModDir::root(),\n             }\n-            .collect(item_tree.inner_items_of_block(block));\n+            .collect(item_tree.inner_items_of_block(block.value));\n         }\n     }\n "}]}