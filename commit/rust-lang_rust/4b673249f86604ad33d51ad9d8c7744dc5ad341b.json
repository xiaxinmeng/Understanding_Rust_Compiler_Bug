{"sha": "4b673249f86604ad33d51ad9d8c7744dc5ad341b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNjczMjQ5Zjg2NjA0YWQzM2Q1MWFkOWQ4Yzc3NDRkYzVhZDM0MWI=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-03-21T18:01:51Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-03-21T18:01:51Z"}, "message": "Fix type_dependent_defs ICE on method calls", "tree": {"sha": "904f62f31f8736964362d0db2023fec417903988", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/904f62f31f8736964362d0db2023fec417903988"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b673249f86604ad33d51ad9d8c7744dc5ad341b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b673249f86604ad33d51ad9d8c7744dc5ad341b", "html_url": "https://github.com/rust-lang/rust/commit/4b673249f86604ad33d51ad9d8c7744dc5ad341b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b673249f86604ad33d51ad9d8c7744dc5ad341b/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75af15ee6ca0c12b699a17984b033363cd25e9c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/75af15ee6ca0c12b699a17984b033363cd25e9c3", "html_url": "https://github.com/rust-lang/rust/commit/75af15ee6ca0c12b699a17984b033363cd25e9c3"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "76cbc670969880406426610d06338ec1d461dd86", "filename": "src/librustc_passes/rvalue_promotion.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4b673249f86604ad33d51ad9d8c7744dc5ad341b/src%2Flibrustc_passes%2Frvalue_promotion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b673249f86604ad33d51ad9d8c7744dc5ad341b/src%2Flibrustc_passes%2Frvalue_promotion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Frvalue_promotion.rs?ref=4b673249f86604ad33d51ad9d8c7744dc5ad341b", "patch": "@@ -373,10 +373,14 @@ fn check_expr<'a, 'tcx>(v: &mut CheckCrateVisitor<'a, 'tcx>, e: &hir::Expr, node\n             }\n         }\n         hir::ExprMethodCall(..) => {\n-            let def_id = v.tables.type_dependent_defs()[e.hir_id].def_id();\n-            match v.tcx.associated_item(def_id).container {\n-                ty::ImplContainer(_) => v.handle_const_fn_call(def_id, node_ty),\n-                ty::TraitContainer(_) => v.promotable = false\n+            if let Some(def) = v.tables.type_dependent_defs().get(e.hir_id) {\n+                let def_id = def.def_id();\n+                match v.tcx.associated_item(def_id).container {\n+                    ty::ImplContainer(_) => v.handle_const_fn_call(def_id, node_ty),\n+                    ty::TraitContainer(_) => v.promotable = false\n+                }\n+            } else {\n+                v.tcx.sess.delay_span_bug(e.span, \"no type-dependent def for method call\");\n             }\n         }\n         hir::ExprStruct(..) => {"}, {"sha": "64264999fd2f1c671a175077f0a65f35ae2d17b7", "filename": "src/test/compile-fail/type-dependent-def-issue-49241.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4b673249f86604ad33d51ad9d8c7744dc5ad341b/src%2Ftest%2Fcompile-fail%2Ftype-dependent-def-issue-49241.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b673249f86604ad33d51ad9d8c7744dc5ad341b/src%2Ftest%2Fcompile-fail%2Ftype-dependent-def-issue-49241.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-dependent-def-issue-49241.rs?ref=4b673249f86604ad33d51ad9d8c7744dc5ad341b", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let v = vec![0];\n+    const l: usize = v.count(); //~ ERROR can't capture dynamic environment in a fn item\n+    let s: [u32; l] = v.into_iter().collect(); //~ ERROR constant evaluation error\n+}"}]}