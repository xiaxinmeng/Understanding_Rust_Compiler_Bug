{"sha": "386ab1ed5ccc83b1fd5b50034929b3ee78b9ad15", "node_id": "C_kwDOAAsO6NoAKDM4NmFiMWVkNWNjYzgzYjFmZDViNTAwMzQ5MjliM2VlNzhiOWFkMTU", "commit": {"author": {"name": "Roc Yu", "email": "rocyu@protonmail.com", "date": "2021-12-20T00:38:59Z"}, "committer": {"name": "Roc Yu", "email": "rocyu@protonmail.com", "date": "2021-12-20T00:38:59Z"}, "message": "Remove 'need_backline' field of `DocFragment`", "tree": {"sha": "344712fe49a5a3880bfa234903c54a903918abaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/344712fe49a5a3880bfa234903c54a903918abaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/386ab1ed5ccc83b1fd5b50034929b3ee78b9ad15", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyzuvo1e1RYSrfuC8UGjOUUp50n8FAmG/0LkACgkQUGjOUUp5\n0n8WRBAAiLFwSzEbOu/BXX44PouZpSbVxnLtJ9pGeiWGn7clqtWmttFfutA3TtqH\nM1G5o0cewot7p8CMVbWI1LqZkSsTLCkdKf5DB6GA2+B27yYtp2F6KFQ9LCdYx41K\n9OphhcJethj+4P5DQINxnMAO3H02fbm6go6htxayvA6jsM0qHg5D71dwlzsUEShD\nnLKgPP1fEC8fGCKi+6aoUcKR4TiwL09st+oaenfPy/mT42e1yJ6JD0hRkRImSkyp\nFiFAwvxyFh+g5BDQXpucBgWkrJiz/Ph8AVlDuYZdLIlaBdOkm0ztcc8TVORRCnN4\n0KnkSqxEnm/0dSrpWz8xhdwZkJN2TjG6nFtDeQoT1LlE69fhdsOrwZXiw9BvYr+m\nrJ7xwgvYFCmdIm4/88ACoxp+ewKz4Z5ZrQgVkeNFA++S3Xlvwd6Xi3+M/yN67UsO\n5OTlbpzKTDqNnkjdZY7sePpDJtCkFfjVGdLwgqkmL07FbLAWsI5DeM1oQtKiQGPd\n8Nj/JsFr77TJTHbKUzHygP4EMcfy0BJkql+Dg8J49xokDGWhW4+DkYyTFG9YKIuZ\nOTFlA4xKmeufCmYwKGkhvEIXsq+uwWXiZwYsLFsveimv9gNW9riTWSD4tjxGeALb\nmKTX+E3U65Z9w8aD7RMvvl2D+XkJf9nWmK/H2SKABf/mQYgJ0G0=\n=aaIZ\n-----END PGP SIGNATURE-----", "payload": "tree 344712fe49a5a3880bfa234903c54a903918abaf\nparent 38167a806cd14dd744d4770c7e13ab2c5e44e69c\nauthor Roc Yu <rocyu@protonmail.com> 1639960739 -0500\ncommitter Roc Yu <rocyu@protonmail.com> 1639960739 -0500\n\nRemove 'need_backline' field of `DocFragment`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/386ab1ed5ccc83b1fd5b50034929b3ee78b9ad15", "html_url": "https://github.com/rust-lang/rust/commit/386ab1ed5ccc83b1fd5b50034929b3ee78b9ad15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/386ab1ed5ccc83b1fd5b50034929b3ee78b9ad15/comments", "author": {"login": "vacuus", "id": 61440569, "node_id": "MDQ6VXNlcjYxNDQwNTY5", "avatar_url": "https://avatars.githubusercontent.com/u/61440569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vacuus", "html_url": "https://github.com/vacuus", "followers_url": "https://api.github.com/users/vacuus/followers", "following_url": "https://api.github.com/users/vacuus/following{/other_user}", "gists_url": "https://api.github.com/users/vacuus/gists{/gist_id}", "starred_url": "https://api.github.com/users/vacuus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vacuus/subscriptions", "organizations_url": "https://api.github.com/users/vacuus/orgs", "repos_url": "https://api.github.com/users/vacuus/repos", "events_url": "https://api.github.com/users/vacuus/events{/privacy}", "received_events_url": "https://api.github.com/users/vacuus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vacuus", "id": 61440569, "node_id": "MDQ6VXNlcjYxNDQwNTY5", "avatar_url": "https://avatars.githubusercontent.com/u/61440569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vacuus", "html_url": "https://github.com/vacuus", "followers_url": "https://api.github.com/users/vacuus/followers", "following_url": "https://api.github.com/users/vacuus/following{/other_user}", "gists_url": "https://api.github.com/users/vacuus/gists{/gist_id}", "starred_url": "https://api.github.com/users/vacuus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vacuus/subscriptions", "organizations_url": "https://api.github.com/users/vacuus/orgs", "repos_url": "https://api.github.com/users/vacuus/repos", "events_url": "https://api.github.com/users/vacuus/events{/privacy}", "received_events_url": "https://api.github.com/users/vacuus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38167a806cd14dd744d4770c7e13ab2c5e44e69c", "url": "https://api.github.com/repos/rust-lang/rust/commits/38167a806cd14dd744d4770c7e13ab2c5e44e69c", "html_url": "https://github.com/rust-lang/rust/commit/38167a806cd14dd744d4770c7e13ab2c5e44e69c"}], "stats": {"total": 47, "additions": 18, "deletions": 29}, "files": [{"sha": "cb4896fbfd23ddfed38c3d9bbc026b2dd8286b5b", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 18, "deletions": 28, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/386ab1ed5ccc83b1fd5b50034929b3ee78b9ad15/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/386ab1ed5ccc83b1fd5b50034929b3ee78b9ad15/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=386ab1ed5ccc83b1fd5b50034929b3ee78b9ad15", "patch": "@@ -914,7 +914,6 @@ crate struct DocFragment {\n     crate parent_module: Option<DefId>,\n     crate doc: Symbol,\n     crate kind: DocFragmentKind,\n-    crate need_backline: bool,\n     crate indent: usize,\n }\n \n@@ -930,20 +929,16 @@ crate enum DocFragmentKind {\n     RawDoc,\n }\n \n-// The goal of this function is to apply the `DocFragment` transformations that are required when\n-// transforming into the final markdown. So the transformations in here are:\n-//\n-// * Applying the computed indent to each lines in each doc fragment (a `DocFragment` can contain\n-//   multiple lines in case of `#[doc = \"\"]`).\n-// * Adding backlines between `DocFragment`s and adding an extra one if required (stored in the\n-//   `need_backline` field).\n+/// The goal of this function is to apply the `DocFragment` transformation that is required when\n+/// transforming into the final Markdown, which is applying the computed indent to each line in\n+/// each doc fragment (a `DocFragment` can contain multiple lines in case of `#[doc = \"\"]`).\n+///\n+/// Note: remove the trailing newline where appropriate\n fn add_doc_fragment(out: &mut String, frag: &DocFragment) {\n     let s = frag.doc.as_str();\n     let mut iter = s.lines();\n     if s == \"\" {\n-        if frag.need_backline {\n-            out.push('\\n');\n-        }\n+        out.push('\\n');\n         return;\n     }\n     while let Some(line) = iter.next() {\n@@ -955,9 +950,6 @@ fn add_doc_fragment(out: &mut String, frag: &DocFragment) {\n         }\n         out.push('\\n');\n     }\n-    if !frag.need_backline {\n-        out.pop();\n-    }\n }\n \n /// Collapse a collection of [`DocFragment`]s into one string,\n@@ -967,6 +959,7 @@ crate fn collapse_doc_fragments(doc_strings: &[DocFragment]) -> String {\n     for frag in doc_strings {\n         add_doc_fragment(&mut acc, frag);\n     }\n+    acc.pop();\n     acc\n }\n \n@@ -1032,7 +1025,6 @@ impl Attributes {\n         additional_attrs: Option<(&[ast::Attribute], DefId)>,\n     ) -> Attributes {\n         let mut doc_strings: Vec<DocFragment> = vec![];\n-\n         let clean_attr = |(attr, parent_module): (&ast::Attribute, Option<DefId>)| {\n             if let Some(value) = attr.doc_str() {\n                 trace!(\"got doc_str={:?}\", value);\n@@ -1043,18 +1035,8 @@ impl Attributes {\n                     DocFragmentKind::RawDoc\n                 };\n \n-                let frag = DocFragment {\n-                    span: attr.span,\n-                    doc: value,\n-                    kind,\n-                    parent_module,\n-                    need_backline: false,\n-                    indent: 0,\n-                };\n-\n-                if let Some(prev) = doc_strings.last_mut() {\n-                    prev.need_backline = true;\n-                }\n+                let frag =\n+                    DocFragment { span: attr.span, doc: value, kind, parent_module, indent: 0 };\n \n                 doc_strings.push(frag);\n \n@@ -1090,6 +1072,7 @@ impl Attributes {\n             }\n             add_doc_fragment(&mut out, new_frag);\n         }\n+        out.pop();\n         if out.is_empty() { None } else { Some(out) }\n     }\n \n@@ -1098,10 +1081,17 @@ impl Attributes {\n     /// The module can be different if this is a re-export with added documentation.\n     crate fn collapsed_doc_value_by_module_level(&self) -> FxHashMap<Option<DefId>, String> {\n         let mut ret = FxHashMap::default();\n+        if self.doc_strings.len() == 0 {\n+            return ret;\n+        }\n+        let last_index = self.doc_strings.len() - 1;\n \n-        for new_frag in self.doc_strings.iter() {\n+        for (i, new_frag) in self.doc_strings.iter().enumerate() {\n             let out = ret.entry(new_frag.parent_module).or_default();\n             add_doc_fragment(out, new_frag);\n+            if i == last_index {\n+                out.pop();\n+            }\n         }\n         ret\n     }"}, {"sha": "baff839cdc88c8befd5709048285cca5b8cb8419", "filename": "src/librustdoc/passes/unindent_comments/tests.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/386ab1ed5ccc83b1fd5b50034929b3ee78b9ad15/src%2Flibrustdoc%2Fpasses%2Funindent_comments%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/386ab1ed5ccc83b1fd5b50034929b3ee78b9ad15/src%2Flibrustdoc%2Fpasses%2Funindent_comments%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Funindent_comments%2Ftests.rs?ref=386ab1ed5ccc83b1fd5b50034929b3ee78b9ad15", "patch": "@@ -12,7 +12,6 @@ fn create_doc_fragment(s: &str) -> Vec<DocFragment> {\n         parent_module: None,\n         doc: Symbol::intern(s),\n         kind: DocFragmentKind::SugaredDoc,\n-        need_backline: false,\n         indent: 0,\n     }]\n }"}]}