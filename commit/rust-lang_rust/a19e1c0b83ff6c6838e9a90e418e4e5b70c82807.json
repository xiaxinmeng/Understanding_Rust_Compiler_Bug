{"sha": "a19e1c0b83ff6c6838e9a90e418e4e5b70c82807", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExOWUxYzBiODNmZjZjNjgzOGU5YTkwZTQxOGU0ZTViNzBjODI4MDc=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-01-26T03:35:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-26T03:35:04Z"}, "message": "Merge pull request #2369 from davidalber/fix-configuration-snippets\n\nFixing straightforward configuration snippets (Part 1)", "tree": {"sha": "71b37fd51181b43ea6637d7888fd127b70d67e4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71b37fd51181b43ea6637d7888fd127b70d67e4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a19e1c0b83ff6c6838e9a90e418e4e5b70c82807", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaaqHoCRBK7hj4Ov3rIwAAdHIIAC2N9oU8/QHVcFYI9KFeTknx\nPwyBk2hcz+I54WEZdJB0ZJVDyY0MP0jAPJrBokfUa5TsgsQ3fo2wz4zONpYLm0BB\nrpHJtzqjWc0ej4r9keusdUmCloGqBEFtkDOlOX7vh6SUG9BImO9Pl2bUlVlQyDGg\n+4mhdLW/aw4ljEAoyGj4H/91feTeXzb4KH4tq5SpPyuWPurKElicuxCx5vcFyBSh\ncH/8Iyry+gHZFG10JD24EUAip48lXqZwN9fCUSzDpfqasF25ubdA+mnZhMwacnTn\nkgdHLexNh1eslHvraP+Ze2gDOceuEzcJQYq2BzjTRAU0AcNoXS6o79i0imUXm7k=\n=cAZi\n-----END PGP SIGNATURE-----\n", "payload": "tree 71b37fd51181b43ea6637d7888fd127b70d67e4c\nparent dfae6a99c061a0af561b9fe36e2f38e0849ac6d5\nparent 2afd1eada3e0fb08ab31a50beac9e6cead06cd94\nauthor Seiichi Uchida <seuchida@gmail.com> 1516937704 +0900\ncommitter GitHub <noreply@github.com> 1516937704 +0900\n\nMerge pull request #2369 from davidalber/fix-configuration-snippets\n\nFixing straightforward configuration snippets (Part 1)"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a19e1c0b83ff6c6838e9a90e418e4e5b70c82807", "html_url": "https://github.com/rust-lang/rust/commit/a19e1c0b83ff6c6838e9a90e418e4e5b70c82807", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a19e1c0b83ff6c6838e9a90e418e4e5b70c82807/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfae6a99c061a0af561b9fe36e2f38e0849ac6d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5", "html_url": "https://github.com/rust-lang/rust/commit/dfae6a99c061a0af561b9fe36e2f38e0849ac6d5"}, {"sha": "2afd1eada3e0fb08ab31a50beac9e6cead06cd94", "url": "https://api.github.com/repos/rust-lang/rust/commits/2afd1eada3e0fb08ab31a50beac9e6cead06cd94", "html_url": "https://github.com/rust-lang/rust/commit/2afd1eada3e0fb08ab31a50beac9e6cead06cd94"}], "stats": {"total": 319, "additions": 182, "deletions": 137}, "files": [{"sha": "5334ca6e4c28065b890373ae33d3fe758e7c670d", "filename": "Configurations.md", "status": "modified", "additions": 182, "deletions": 137, "changes": 319, "blob_url": "https://github.com/rust-lang/rust/blob/a19e1c0b83ff6c6838e9a90e418e4e5b70c82807/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/a19e1c0b83ff6c6838e9a90e418e4e5b70c82807/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=a19e1c0b83ff6c6838e9a90e418e4e5b70c82807", "patch": "@@ -31,27 +31,31 @@ Indent on expressions or items.\n #### `\"Block\"` (default):\n \n ```rust\n-let lorem = vec![\n-    \"ipsum\",\n-    \"dolor\",\n-    \"sit\",\n-    \"amet\",\n-    \"consectetur\",\n-    \"adipiscing\",\n-    \"elit\",\n-];\n+fn main() {\n+    let lorem = vec![\n+        \"ipsum\",\n+        \"dolor\",\n+        \"sit\",\n+        \"amet\",\n+        \"consectetur\",\n+        \"adipiscing\",\n+        \"elit\",\n+    ];\n+}\n ```\n \n #### `\"Visual\"`:\n \n ```rust\n-let lorem = vec![\"ipsum\",\n-                 \"dolor\",\n-                 \"sit\",\n-                 \"amet\",\n-                 \"consectetur\",\n-                 \"adipiscing\",\n-                 \"elit\"];\n+fn main() {\n+    let lorem = vec![\"ipsum\",\n+                     \"dolor\",\n+                     \"sit\",\n+                     \"amet\",\n+                     \"consectetur\",\n+                     \"adipiscing\",\n+                     \"elit\"];\n+}\n ```\n \n ### Control flow\n@@ -124,29 +128,33 @@ fn lorem(ipsum: usize,\n #### `\"Block\"` (default):\n \n ```rust\n-lorem(\n-    \"lorem\",\n-    \"ipsum\",\n-    \"dolor\",\n-    \"sit\",\n-    \"amet\",\n-    \"consectetur\",\n-    \"adipiscing\",\n-    \"elit\",\n-);\n+fn main() {\n+    lorem(\n+        \"lorem\",\n+        \"ipsum\",\n+        \"dolor\",\n+        \"sit\",\n+        \"amet\",\n+        \"consectetur\",\n+        \"adipiscing\",\n+        \"elit\",\n+    );\n+}\n ```\n \n #### `\"Visual\"`:\n \n ```rust\n-lorem(\"lorem\",\n-      \"ipsum\",\n-      \"dolor\",\n-      \"sit\",\n-      \"amet\",\n-      \"consectetur\",\n-      \"adipiscing\",\n-      \"elit\");\n+fn main() {\n+    lorem(\"lorem\",\n+          \"ipsum\",\n+          \"dolor\",\n+          \"sit\",\n+          \"amet\",\n+          \"consectetur\",\n+          \"adipiscing\",\n+          \"elit\");\n+}\n ```\n \n ### Generics\n@@ -161,7 +169,7 @@ fn lorem<\n     Amet: Eq = usize,\n     Adipiscing: Eq = usize,\n     Consectetur: Eq = usize,\n-    Elit: Eq = usize\n+    Elit: Eq = usize,\n >(\n     ipsum: Ipsum,\n     dolor: Dolor,\n@@ -184,15 +192,15 @@ fn lorem<Ipsum: Eq = usize,\n          Amet: Eq = usize,\n          Adipiscing: Eq = usize,\n          Consectetur: Eq = usize,\n-         Elit: Eq = usize>\n-    (ipsum: Ipsum,\n-     dolor: Dolor,\n-     sit: Sit,\n-     amet: Amet,\n-     adipiscing: Adipiscing,\n-     consectetur: Consectetur,\n-     elit: Elit)\n-     -> T {\n+         Elit: Eq = usize>(\n+    ipsum: Ipsum,\n+    dolor: Dolor,\n+    sit: Sit,\n+    amet: Amet,\n+    adipiscing: Adipiscing,\n+    consectetur: Consectetur,\n+    elit: Elit)\n+    -> T {\n     // body\n }\n ```\n@@ -202,17 +210,21 @@ fn lorem<Ipsum: Eq = usize,\n #### `\"Block\"` (default):\n \n ```rust\n-let lorem = Lorem {\n-    ipsum: dolor,\n-    sit: amet,\n-};\n+fn main() {\n+    let lorem = Lorem {\n+        ipsum: dolor,\n+        sit: amet,\n+    };\n+}\n ```\n \n #### `\"Visual\"`:\n \n ```rust\n-let lorem = Lorem { ipsum: dolor,\n-                    sit: amet, };\n+fn main() {\n+    let lorem = Lorem { ipsum: dolor,\n+                        sit: amet, };\n+}\n ```\n \n See also: [`struct_lit_single_line`](#struct_lit_single_line), [`indent_style`](#indent_style).\n@@ -227,7 +239,7 @@ where\n     Ipsum: Eq,\n     Dolor: Eq,\n     Sit: Eq,\n-    Amet: Eq\n+    Amet: Eq,\n {\n     // body\n }\n@@ -274,7 +286,11 @@ fn main() {\n         \"adipiscing\",\n     );\n \n-    let lorem = Lorem { ipsum: dolor, sit: amet };\n+    let lorem = Lorem {\n+        ipsum: dolor,\n+        sit: amet,\n+    };\n+    let lorem = Lorem { ipsum: dolor };\n \n     let lorem = if ipsum { dolor } else { sit };\n }\n@@ -319,16 +335,16 @@ Where to put a binary operator when a binary expression goes multiline.\n #### `\"Front\"` (default):\n \n ```rust\n-let or = foo\n-    || bar\n-    || foobar;\n+fn main() {\n+    let or = foofoofoofoofoofoofoofoofoofoofoofoofoofoofoofoo\n+        || barbarbarbarbarbarbarbarbarbarbarbarbarbarbarbar;\n \n-let sum = 1234\n-    + 5678\n-    + 910;\n+    let sum = 123456789012345678901234567890 + 123456789012345678901234567890\n+        + 123456789012345678901234567890;\n \n-let range = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n-    ..bbbbbbbbbbbbbbbbbbbbbbbbbbbbb;\n+    let range = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n+        ..bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb;\n+}\n ```\n \n #### `\"Back\"`:\n@@ -488,13 +504,18 @@ Replace strings of _ wildcards by a single .. in tuple patterns\n #### `false` (default):\n \n ```rust\n-let (lorem, ipsum, _, _) = (1, 2, 3, 4);\n+fn main() {\n+    let (lorem, ipsum, _, _) = (1, 2, 3, 4);\n+    let (lorem, ipsum, ..) = (1, 2, 3, 4);\n+}\n ```\n \n #### `true`:\n \n ```rust\n-let (lorem, ipsum, ..) = (1, 2, 3, 4);\n+fn main() {\n+    let (lorem, ipsum, ..) = (1, 2, 3, 4);\n+}\n ```\n \n ## `control_brace_style`\n@@ -508,34 +529,40 @@ Brace style for control flow constructs\n #### `\"AlwaysSameLine\"` (default):\n \n ```rust\n-if lorem {\n-    println!(\"ipsum!\");\n-} else {\n-    println!(\"dolor!\");\n+fn main() {\n+    if lorem {\n+        println!(\"ipsum!\");\n+    } else {\n+        println!(\"dolor!\");\n+    }\n }\n ```\n \n #### `\"AlwaysNextLine\"`:\n \n ```rust\n-if lorem\n-{\n-    println!(\"ipsum!\");\n-}\n-else\n-{\n-    println!(\"dolor!\");\n+fn main() {\n+    if lorem\n+    {\n+        println!(\"ipsum!\");\n+    }\n+    else\n+    {\n+        println!(\"dolor!\");\n+    }\n }\n ```\n \n #### `\"ClosingNextLine\"`:\n \n ```rust\n-if lorem {\n-    println!(\"ipsum!\");\n-}\n-else {\n-    println!(\"dolor!\");\n+fn main() {\n+    if lorem {\n+        println!(\"ipsum!\");\n+    }\n+    else {\n+        println!(\"dolor!\");\n+    }\n }\n ```\n \n@@ -637,33 +664,41 @@ trait Lorem {\n \n ```rust\n trait Lorem {\n-    fn lorem(ipsum: Ipsum,\n-             dolor: Dolor,\n-             sit: Sit,\n-             amet: Amet);\n-\n-    fn lorem(ipsum: Ipsum,\n-             dolor: Dolor,\n-             sit: Sit,\n-             amet: Amet) {\n+    fn lorem(\n+        ipsum: Ipsum,\n+        dolor: Dolor,\n+        sit: Sit,\n+        amet: Amet,\n+    );\n+\n+    fn lorem(\n+        ipsum: Ipsum,\n+        dolor: Dolor,\n+        sit: Sit,\n+        amet: Amet,\n+    ) {\n         // body\n     }\n \n-    fn lorem(ipsum: Ipsum,\n-             dolor: Dolor,\n-             sit: Sit,\n-             amet: Amet,\n-             consectetur: Consectetur,\n-             adipiscing: Adipiscing,\n-             elit: Elit);\n-\n-    fn lorem(ipsum: Ipsum,\n-             dolor: Dolor,\n-             sit: Sit,\n-             amet: Amet,\n-             consectetur: Consectetur,\n-             adipiscing: Adipiscing,\n-             elit: Elit) {\n+    fn lorem(\n+        ipsum: Ipsum,\n+        dolor: Dolor,\n+        sit: Sit,\n+        amet: Amet,\n+        consectetur: Consectetur,\n+        adipiscing: Adipiscing,\n+        elit: Elit,\n+    );\n+\n+    fn lorem(\n+        ipsum: Ipsum,\n+        dolor: Dolor,\n+        sit: Sit,\n+        amet: Amet,\n+        consectetur: Consectetur,\n+        adipiscing: Adipiscing,\n+        elit: Elit,\n+    ) {\n         // body\n     }\n }\n@@ -748,7 +783,8 @@ struct Lorem {\n }\n \n struct Dolor<T>\n-    where T: Eq\n+where\n+    T: Eq,\n {\n     sit: T,\n }\n@@ -763,7 +799,8 @@ struct Lorem\n }\n \n struct Dolor<T>\n-    where T: Eq\n+where\n+    T: Eq,\n {\n     sit: T,\n }\n@@ -777,7 +814,8 @@ struct Lorem {\n }\n \n struct Dolor<T>\n-    where T: Eq {\n+where\n+    T: Eq, {\n     sit: T,\n }\n ```\n@@ -862,16 +900,17 @@ impl<T> Lorem for T\n where\n     Option<T>: Ipsum,\n {\n-    ...\n+    // body\n }\n ```\n \n #### `true`:\n \n ```rust\n impl<T> Lorem for T\n-where Option<T>: Ipsum {\n-    ...\n+where Option<T>: Ipsum\n+{\n+    // body\n }\n ```\n \n@@ -915,15 +954,19 @@ Format string literals where necessary\n #### `false` (default):\n \n ```rust\n-let lorem = \"ipsum dolor sit amet consectetur adipiscing elit lorem ipsum dolor sit\";\n+fn main() {\n+    let lorem =\n+        \"ipsum dolor sit amet consectetur adipiscing elit lorem ipsum dolor sit amet consectetur adipiscing\";\n+}\n ```\n \n #### `true`:\n \n ```rust\n-let lorem =\n-    \"ipsum dolor sit amet consectetur \\\n-     adipiscing elit lorem ipsum dolor sit\";\n+fn main() {\n+    let lorem = \"ipsum dolor sit amet consectetur adipiscing elit lorem ipsum dolor sit amet \\\n+                 consectetur adipiscing\";\n+}\n ```\n \n See also [`max_width`](#max_width).\n@@ -966,18 +1009,16 @@ Indent style of imports\n #### `\"Visual\"` (default):\n \n ```rust\n-use foo::{xxx,\n-          yyy,\n-          zzz};\n+use foo::{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,\n+          zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz};\n ```\n \n #### `\"Block\"`:\n \n ```rust\n use foo::{\n-    xxx,\n-    yyy,\n-    zzz,\n+    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy,\n+    zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz,\n };\n ```\n \n@@ -994,10 +1035,10 @@ Item layout inside a imports block\n #### `\"Mixed\"` (default):\n \n ```rust\n-use foo::{xxx, yyy, zzz};\n+use foo::{xxxxxxxxxxxxxxxxxx, yyyyyyyyyyyyyyyyyy, zzzzzzzzzzzzzzzzzz};\n \n-use foo::{aaa, bbb, ccc,\n-          ddd, eee, fff};\n+use foo::{aaaaaaaaaaaaaaaaaa, bbbbbbbbbbbbbbbbbb, cccccccccccccccccc, dddddddddddddddddd,\n+          eeeeeeeeeeeeeeeeee, ffffffffffffffffff};\n ```\n \n #### `\"Horizontal\"`:\n@@ -1013,14 +1054,14 @@ use foo::{aaa, bbb, ccc, ddd, eee, fff};\n #### `\"HorizontalVertical\"`:\n \n ```rust\n-use foo::{xxx, yyy, zzz};\n+use foo::{xxxxxxxxxxxxxxxxxx, yyyyyyyyyyyyyyyyyy, zzzzzzzzzzzzzzzzzz};\n \n-use foo::{aaa,\n-          bbb,\n-          ccc,\n-          ddd,\n-          eee,\n-          fff};\n+use foo::{aaaaaaaaaaaaaaaaaa,\n+          bbbbbbbbbbbbbbbbbb,\n+          cccccccccccccccccc,\n+          dddddddddddddddddd,\n+          eeeeeeeeeeeeeeeeee,\n+          ffffffffffffffffff};\n ```\n \n #### `\"Vertical\"`:\n@@ -1050,22 +1091,26 @@ Put a trailing comma after a block based match arm (non-block arms are not affec\n #### `false` (default):\n \n ```rust\n-match lorem {\n-    Lorem::Ipsum => {\n-        println!(\"ipsum\");\n+fn main() {\n+    match lorem {\n+        Lorem::Ipsum => {\n+            println!(\"ipsum\");\n+        }\n+        Lorem::Dolor => println!(\"dolor\"),\n     }\n-    Lorem::Dolor => println!(\"dolor\"),\n }\n ```\n \n #### `true`:\n \n ```rust\n-match lorem {\n-    Lorem::Ipsum => {\n-        println!(\"ipsum\");\n-    },\n-    Lorem::Dolor => println!(\"dolor\"),\n+fn main() {\n+    match lorem {\n+        Lorem::Ipsum => {\n+            println!(\"ipsum\");\n+        },\n+        Lorem::Dolor => println!(\"dolor\"),\n+    }\n }\n ```\n "}]}