{"sha": "832f7b758f28d36030df27c888ef9248ba584859", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMmY3Yjc1OGYyOGQzNjAzMGRmMjdjODg4ZWY5MjQ4YmE1ODQ4NTk=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-05-02T21:12:47Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-05-03T19:53:01Z"}, "message": "librustc: Add argument to allow choosing \"linker\"", "tree": {"sha": "a5ea566999bd213310be402ac5713d52a992113c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5ea566999bd213310be402ac5713d52a992113c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/832f7b758f28d36030df27c888ef9248ba584859", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/832f7b758f28d36030df27c888ef9248ba584859", "html_url": "https://github.com/rust-lang/rust/commit/832f7b758f28d36030df27c888ef9248ba584859", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/832f7b758f28d36030df27c888ef9248ba584859/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a31cdb9bf9bff6071ab972808c7e50e216cf5b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a31cdb9bf9bff6071ab972808c7e50e216cf5b0", "html_url": "https://github.com/rust-lang/rust/commit/9a31cdb9bf9bff6071ab972808c7e50e216cf5b0"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "de6469e81807d679975e06531ee05069541b66d9", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/832f7b758f28d36030df27c888ef9248ba584859/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/832f7b758f28d36030df27c888ef9248ba584859/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=832f7b758f28d36030df27c888ef9248ba584859", "patch": "@@ -752,18 +752,26 @@ pub fn link_binary(sess: Session,\n     // instead of hard-coded gcc.\n     // For win32, there is no cc command,\n     // so we add a condition to make it use gcc.\n-    let cc_prog: ~str = if sess.targ_cfg.os == session::os_android {\n-        match &sess.opts.android_cross_path {\n-            &Some(copy path) => {\n-                fmt!(\"%s/bin/arm-linux-androideabi-gcc\", path)\n-            }\n-            &None => {\n-                sess.fatal(~\"need Android NDK path for linking \\\n-                             (--android-cross-path)\")\n+    let cc_prog: ~str = match sess.opts.linker {\n+        Some(copy linker) => linker,\n+        None => {\n+            if sess.targ_cfg.os == session::os_android {\n+                match &sess.opts.android_cross_path {\n+                    &Some(copy path) => {\n+                        fmt!(\"%s/bin/arm-linux-androideabi-gcc\", path)\n+                    }\n+                    &None => {\n+                        sess.fatal(~\"need Android NDK path for linking \\\n+                                     (--android-cross-path)\")\n+                    }\n+                }\n+            } else if sess.targ_cfg.os == session::os_win32 {\n+                ~\"gcc\"\n+            } else {\n+                ~\"cc\"\n             }\n         }\n-    } else if sess.targ_cfg.os == session::os_win32 { ~\"gcc\" }\n-    else { ~\"cc\" };\n+    };\n     // The invocations of cc share some flags across platforms\n \n "}, {"sha": "02940ea9905bacf8ab474e67cb1d001c9abd5936", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/832f7b758f28d36030df27c888ef9248ba584859/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/832f7b758f28d36030df27c888ef9248ba584859/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=832f7b758f28d36030df27c888ef9248ba584859", "patch": "@@ -650,7 +650,7 @@ pub fn build_session_options(binary: @~str,\n     };\n \n     let addl_lib_search_paths = getopts::opt_strs(matches, ~\"L\").map(|s| Path(*s));\n-\n+    let linker = getopts::opt_maybe_str(matches, ~\"linker\");\n     let linker_args = getopts::opt_strs(matches, ~\"link-args\").flat_map( |a| {\n         let mut args = ~[];\n         for str::each_split_char(*a, ' ') |arg| {\n@@ -676,6 +676,7 @@ pub fn build_session_options(binary: @~str,\n         jit: jit,\n         output_type: output_type,\n         addl_lib_search_paths: addl_lib_search_paths,\n+        linker: linker,\n         linker_args: linker_args,\n         maybe_sysroot: sysroot_opt,\n         target_triple: target,\n@@ -760,6 +761,7 @@ pub fn optgroups() -> ~[getopts::groups::OptGroup] {\n   optmulti(\"L\", \"\",   \"Add a directory to the library search path\",\n                               \"PATH\"),\n   optflag(\"\",  \"lib\", \"Compile a library crate\"),\n+  optopt(\"\", \"linker\", \"Program to use for linking instead of the default.\", \"LINKER\"),\n   optmulti(\"\",  \"link-args\", \"FLAGS is a space-separated list of flags\n                             passed to the linker\", \"FLAGS\"),\n   optflag(\"\",  \"ls\",  \"List the symbols defined by a library crate\"),"}, {"sha": "29cb5a71f31655caa460bb730c86343d1271c54b", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/832f7b758f28d36030df27c888ef9248ba584859/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/832f7b758f28d36030df27c888ef9248ba584859/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=832f7b758f28d36030df27c888ef9248ba584859", "patch": "@@ -124,6 +124,7 @@ pub struct options {\n     jit: bool,\n     output_type: back::link::output_type,\n     addl_lib_search_paths: ~[Path],\n+    linker: Option<~str>,\n     linker_args: ~[~str],\n     maybe_sysroot: Option<Path>,\n     target_triple: ~str,\n@@ -302,7 +303,8 @@ pub fn basic_options() -> @options {\n         jit: false,\n         output_type: link::output_type_exe,\n         addl_lib_search_paths: ~[],\n-        linker_args:~[],\n+        linker: None,\n+        linker_args: ~[],\n         maybe_sysroot: None,\n         target_triple: host_triple(),\n         target_feature: ~\"\","}]}