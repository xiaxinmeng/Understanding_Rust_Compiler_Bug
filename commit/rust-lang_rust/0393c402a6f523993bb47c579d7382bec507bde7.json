{"sha": "0393c402a6f523993bb47c579d7382bec507bde7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzOTNjNDAyYTZmNTIzOTkzYmI0N2M1NzlkNzM4MmJlYzUwN2JkZTc=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-15T11:35:08Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-15T11:35:08Z"}, "message": "std::vec::raw: clean up docs.", "tree": {"sha": "2b3b6c5b9ab515db186d2b0489b1a499551b93bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b3b6c5b9ab515db186d2b0489b1a499551b93bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0393c402a6f523993bb47c579d7382bec507bde7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0393c402a6f523993bb47c579d7382bec507bde7", "html_url": "https://github.com/rust-lang/rust/commit/0393c402a6f523993bb47c579d7382bec507bde7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0393c402a6f523993bb47c579d7382bec507bde7/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a43bf3ff99c0c801c4524f0f96d8d57e758e1044", "url": "https://api.github.com/repos/rust-lang/rust/commits/a43bf3ff99c0c801c4524f0f96d8d57e758e1044", "html_url": "https://github.com/rust-lang/rust/commit/a43bf3ff99c0c801c4524f0f96d8d57e758e1044"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "c14068a7c88d68427b1ce6e18a9e4ad1b9120dbc", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0393c402a6f523993bb47c579d7382bec507bde7/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0393c402a6f523993bb47c579d7382bec507bde7/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=0393c402a6f523993bb47c579d7382bec507bde7", "patch": "@@ -2349,12 +2349,12 @@ pub mod raw {\n     }\n }\n \n-/// Operations on `[u8]`\n+/// Operations on `[u8]`.\n pub mod bytes {\n     use vec::raw;\n     use ptr;\n \n-    /// A trait for operations on mutable operations on `[u8]`\n+    /// A trait for operations on mutable `[u8]`s.\n     pub trait MutableByteVector {\n         /// Sets all bytes of the receiver to the given value.\n         fn set_memory(self, value: u8);\n@@ -2372,7 +2372,9 @@ pub mod bytes {\n     /**\n       * Copies data from one vector to another.\n       *\n-      * Copies `src` to `dst`. The source and destination may overlap.\n+      * Copies `src` to `dst`. The source and destination may\n+      * overlap. Fails if the length of `dst` is less than the length\n+      * of `src`.\n       */\n     #[inline]\n     pub fn copy_memory(dst: &mut [u8], src: &[u8]) {\n@@ -2381,7 +2383,7 @@ pub mod bytes {\n     }\n \n     /**\n-     * Allocate space in `dst` and append the data in `src`.\n+     * Allocate space in `dst` and append the data to `src`.\n      */\n     #[inline]\n     pub fn push_bytes(dst: &mut ~[u8], src: &[u8]) {"}]}