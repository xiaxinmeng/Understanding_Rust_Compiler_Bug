{"sha": "bf01bcb451d20d770091acb5cde4a024d91a0740", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMDFiY2I0NTFkMjBkNzcwMDkxYWNiNWNkZTRhMDI0ZDkxYTA3NDA=", "commit": {"author": {"name": "Edd Barrett", "email": "vext01@gmail.com", "date": "2018-11-07T12:34:43Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-11-26T04:27:18Z"}, "message": "Conditionally compile in only the extra argument.", "tree": {"sha": "d652c446ae79a37bf3cecbce50e769f1eacc7fba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d652c446ae79a37bf3cecbce50e769f1eacc7fba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf01bcb451d20d770091acb5cde4a024d91a0740", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf01bcb451d20d770091acb5cde4a024d91a0740", "html_url": "https://github.com/rust-lang/rust/commit/bf01bcb451d20d770091acb5cde4a024d91a0740", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf01bcb451d20d770091acb5cde4a024d91a0740/comments", "author": {"login": "vext01", "id": 604955, "node_id": "MDQ6VXNlcjYwNDk1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/604955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vext01", "html_url": "https://github.com/vext01", "followers_url": "https://api.github.com/users/vext01/followers", "following_url": "https://api.github.com/users/vext01/following{/other_user}", "gists_url": "https://api.github.com/users/vext01/gists{/gist_id}", "starred_url": "https://api.github.com/users/vext01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vext01/subscriptions", "organizations_url": "https://api.github.com/users/vext01/orgs", "repos_url": "https://api.github.com/users/vext01/repos", "events_url": "https://api.github.com/users/vext01/events{/privacy}", "received_events_url": "https://api.github.com/users/vext01/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a43a7a07785fdaca7c04ae2ba2f29512dcca58f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a43a7a07785fdaca7c04ae2ba2f29512dcca58f4", "html_url": "https://github.com/rust-lang/rust/commit/a43a7a07785fdaca7c04ae2ba2f29512dcca58f4"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "b6e07942f8667662cd0e894812141700e41cdc53", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bf01bcb451d20d770091acb5cde4a024d91a0740/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/bf01bcb451d20d770091acb5cde4a024d91a0740/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=bf01bcb451d20d770091acb5cde4a024d91a0740", "patch": "@@ -705,17 +705,14 @@ extern \"C\" LLVMMetadataRef LLVMRustDIBuilderCreateStaticVariable(\n         FPVal->getValueAPF().bitcastToAPInt().getZExtValue());\n   }\n \n-#if LLVM_VERSION_GE(8, 0)\n-  llvm::DIGlobalVariableExpression *VarExpr = Builder->createGlobalVariableExpression(\n-      unwrapDI<DIDescriptor>(Context), Name, LinkageName,\n-      unwrapDI<DIFile>(File), LineNo, unwrapDI<DIType>(Ty), IsLocalToUnit,\n-      InitExpr, unwrapDIPtr<MDNode>(Decl), nullptr, AlignInBits);\n-#else\n   llvm::DIGlobalVariableExpression *VarExpr = Builder->createGlobalVariableExpression(\n       unwrapDI<DIDescriptor>(Context), Name, LinkageName,\n       unwrapDI<DIFile>(File), LineNo, unwrapDI<DIType>(Ty), IsLocalToUnit,\n-      InitExpr, unwrapDIPtr<MDNode>(Decl), AlignInBits);\n+      InitExpr, unwrapDIPtr<MDNode>(Decl),\n+#if LLVM_VERSION_GE(8, 0)\n+      /* templateParams */ nullptr,\n #endif\n+      AlignInBits);\n \n   InitVal->setMetadata(\"dbg\", VarExpr);\n "}]}