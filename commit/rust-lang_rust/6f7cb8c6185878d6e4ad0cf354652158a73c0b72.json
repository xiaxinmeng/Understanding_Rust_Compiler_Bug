{"sha": "6f7cb8c6185878d6e4ad0cf354652158a73c0b72", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmN2NiOGM2MTg1ODc4ZDZlNGFkMGNmMzU0NjUyMTU4YTczYzBiNzI=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-10-14T01:23:34Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-11-25T14:26:16Z"}, "message": "Override `LoanPath` Eq impl to enforce invariant: eq lp's always have eq types.", "tree": {"sha": "4ac622daa1bf51c3b9d8c51abd360f03c8c8406c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ac622daa1bf51c3b9d8c51abd360f03c8c8406c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f7cb8c6185878d6e4ad0cf354652158a73c0b72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f7cb8c6185878d6e4ad0cf354652158a73c0b72", "html_url": "https://github.com/rust-lang/rust/commit/6f7cb8c6185878d6e4ad0cf354652158a73c0b72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f7cb8c6185878d6e4ad0cf354652158a73c0b72/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1217b829e85ec4720ba9a1c43c173d4015eae651", "url": "https://api.github.com/repos/rust-lang/rust/commits/1217b829e85ec4720ba9a1c43c173d4015eae651", "html_url": "https://github.com/rust-lang/rust/commit/1217b829e85ec4720ba9a1c43c173d4015eae651"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "aab434371a14cc37f1a9441e21c310ad2e733407", "filename": "src/librustc/middle/borrowck/mod.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6f7cb8c6185878d6e4ad0cf354652158a73c0b72/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f7cb8c6185878d6e4ad0cf354652158a73c0b72/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs?ref=6f7cb8c6185878d6e4ad0cf354652158a73c0b72", "patch": "@@ -282,12 +282,33 @@ impl<'tcx> Loan<'tcx> {\n     }\n }\n \n-#[deriving(PartialEq, Eq, Hash, Show)]\n+#[deriving(Eq, Hash, Show)]\n pub struct LoanPath<'tcx> {\n     kind: LoanPathKind<'tcx>,\n     ty: ty::Ty<'tcx>,\n }\n \n+impl<'tcx> LoanPath<'tcx> {\n+    pub fn eq_debug(&self, that: &LoanPath<'tcx>, tcx: &ty::ctxt<'tcx>) -> bool {\n+        let r = self.kind == that.kind;\n+        if r && self.ty != that.ty {\n+            panic!(\"eq variants ineq types: {} == {}, {} != {}\",\n+                   self.repr(tcx), that.repr(tcx),\n+                   self.ty.repr(tcx), that.ty.repr(tcx));\n+        }\n+        r\n+    }\n+}\n+\n+impl<'tcx> PartialEq for LoanPath<'tcx> {\n+    fn eq(&self, that: &LoanPath<'tcx>) -> bool {\n+        let r = self.kind == that.kind;\n+        debug_assert!(self.ty == that.ty || !r,\n+                      \"Somehow loan paths are equal though their tys are not.\");\n+        r\n+    }\n+}\n+\n #[deriving(PartialEq, Eq, Hash, Show)]\n pub enum LoanPathKind<'tcx> {\n     LpVar(ast::NodeId),                         // `x` in doc.rs"}]}