{"sha": "a9752596d3d377e34f99512eb6bc256512509610", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5NzUyNTk2ZDNkMzc3ZTM0Zjk5NTEyZWI2YmMyNTY1MTI1MDk2MTA=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-09-07T20:22:36Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-10-13T20:37:26Z"}, "message": "Add more tests for underscore imports", "tree": {"sha": "4eb4886e796bc8f0f8c687bf0b79039245dd05ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4eb4886e796bc8f0f8c687bf0b79039245dd05ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9752596d3d377e34f99512eb6bc256512509610", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9752596d3d377e34f99512eb6bc256512509610", "html_url": "https://github.com/rust-lang/rust/commit/a9752596d3d377e34f99512eb6bc256512509610", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9752596d3d377e34f99512eb6bc256512509610/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa2ae564d391a3da10bca2a79ab529a9925fbe58", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa2ae564d391a3da10bca2a79ab529a9925fbe58", "html_url": "https://github.com/rust-lang/rust/commit/aa2ae564d391a3da10bca2a79ab529a9925fbe58"}], "stats": {"total": 145, "additions": 145, "deletions": 0}, "files": [{"sha": "bea61eae6b51a38e64bd8ff92e4069177ff7b342", "filename": "src/test/ui/underscore-imports/hygiene-2.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/a9752596d3d377e34f99512eb6bc256512509610/src%2Ftest%2Fui%2Funderscore-imports%2Fhygiene-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9752596d3d377e34f99512eb6bc256512509610/src%2Ftest%2Fui%2Funderscore-imports%2Fhygiene-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-imports%2Fhygiene-2.rs?ref=a9752596d3d377e34f99512eb6bc256512509610", "patch": "@@ -0,0 +1,33 @@\n+// Make sure that underscore imports with different contexts can exist in the\n+// same scope.\n+\n+// check-pass\n+\n+#![feature(decl_macro)]\n+\n+mod x {\n+    pub use std::ops::Deref as _;\n+}\n+\n+macro n() {\n+    pub use crate::x::*;\n+}\n+\n+#[macro_export]\n+macro_rules! p {\n+    () => { pub use crate::x::*; }\n+}\n+\n+macro m($y:ident) {\n+    mod $y {\n+        crate::n!(); // Reexport of `Deref` should not be imported in `main`\n+        crate::p!(); // Reexport of `Deref` should be imported into `main`\n+    }\n+}\n+\n+m!(y);\n+\n+fn main() {\n+    use crate::y::*;\n+    (&()).deref();\n+}"}, {"sha": "a254f6eaa59807ea0a2721f9698b918a0d58851a", "filename": "src/test/ui/underscore-imports/hygiene.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/a9752596d3d377e34f99512eb6bc256512509610/src%2Ftest%2Fui%2Funderscore-imports%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9752596d3d377e34f99512eb6bc256512509610/src%2Ftest%2Fui%2Funderscore-imports%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-imports%2Fhygiene.rs?ref=a9752596d3d377e34f99512eb6bc256512509610", "patch": "@@ -0,0 +1,40 @@\n+// Make sure that underscore imports have the same hygiene considerations as\n+// other imports.\n+\n+#![feature(decl_macro)]\n+\n+mod x {\n+    pub use std::ops::Deref as _;\n+}\n+\n+\n+macro glob_import() {\n+    pub use crate::x::*;\n+}\n+\n+macro underscore_import() {\n+    use std::ops::DerefMut as _;\n+}\n+\n+mod y {\n+    crate::glob_import!();\n+    crate::underscore_import!();\n+}\n+\n+macro create_module($y:ident) {\n+    mod $y {\n+        crate::glob_import!();\n+        crate::underscore_import!();\n+    }\n+}\n+\n+create_module!(z);\n+\n+fn main() {\n+    use crate::y::*;\n+    use crate::z::*;\n+    glob_import!();\n+    underscore_import!();\n+    (&()).deref();              //~ ERROR no method named `deref`\n+    (&mut ()).deref_mut();      //~ ERROR no method named `deref_mut`\n+}"}, {"sha": "44cfc5cc5d22e21cbb17df7860b34e732f38c667", "filename": "src/test/ui/underscore-imports/hygiene.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a9752596d3d377e34f99512eb6bc256512509610/src%2Ftest%2Fui%2Funderscore-imports%2Fhygiene.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9752596d3d377e34f99512eb6bc256512509610/src%2Ftest%2Fui%2Funderscore-imports%2Fhygiene.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-imports%2Fhygiene.stderr?ref=a9752596d3d377e34f99512eb6bc256512509610", "patch": "@@ -0,0 +1,27 @@\n+error[E0599]: no method named `deref` found for type `&()` in the current scope\n+  --> $DIR/hygiene.rs:38:11\n+   |\n+LL |     (&()).deref();\n+   |           ^^^^^ method not found in `&()`\n+   |\n+   = help: items from traits can only be used if the trait is in scope\n+help: the following trait is implemented but not in scope; perhaps add a `use` for it:\n+   |\n+LL | use std::ops::Deref;\n+   |\n+\n+error[E0599]: no method named `deref_mut` found for type `&mut ()` in the current scope\n+  --> $DIR/hygiene.rs:39:15\n+   |\n+LL |     (&mut ()).deref_mut();\n+   |               ^^^^^^^^^ method not found in `&mut ()`\n+   |\n+   = help: items from traits can only be used if the trait is in scope\n+help: the following trait is implemented but not in scope; perhaps add a `use` for it:\n+   |\n+LL | use std::ops::DerefMut;\n+   |\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0599`."}, {"sha": "43f527bc9a4087866163a38a59b61c10ba088d76", "filename": "src/test/ui/underscore-imports/macro-expanded.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/a9752596d3d377e34f99512eb6bc256512509610/src%2Ftest%2Fui%2Funderscore-imports%2Fmacro-expanded.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9752596d3d377e34f99512eb6bc256512509610/src%2Ftest%2Fui%2Funderscore-imports%2Fmacro-expanded.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-imports%2Fmacro-expanded.rs?ref=a9752596d3d377e34f99512eb6bc256512509610", "patch": "@@ -0,0 +1,45 @@\n+// Check that macro expanded underscore imports behave as expected\n+\n+// check-pass\n+\n+#![feature(decl_macro, rustc_attrs)]\n+\n+mod x {\n+    pub use std::ops::Not as _;\n+}\n+\n+macro m() {\n+    mod w {\n+        mod y {\n+            pub use std::ops::Deref as _;\n+        }\n+        use crate::x::*;\n+        use self::y::*;\n+        use std::ops::DerefMut as _;\n+        fn f() {\n+            false.not();\n+            (&()).deref();\n+            (&mut ()).deref_mut();\n+        }\n+    }\n+}\n+\n+#[rustc_macro_transparency = \"transparent\"]\n+macro n() {\n+    mod z {\n+        pub use std::ops::Deref as _;\n+    }\n+    use crate::x::*;\n+    use crate::z::*;\n+    use std::ops::DerefMut as _;\n+    fn f() {\n+        false.not();\n+        (&()).deref();\n+        (&mut ()).deref_mut();\n+    }\n+}\n+\n+m!();\n+n!();\n+\n+fn main() {}"}]}