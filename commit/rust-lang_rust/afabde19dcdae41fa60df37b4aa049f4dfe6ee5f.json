{"sha": "afabde19dcdae41fa60df37b4aa049f4dfe6ee5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmYWJkZTE5ZGNkYWU0MWZhNjBkZjM3YjRhYTA0OWY0ZGZlNmVlNWY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-30T00:54:05Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-30T00:54:05Z"}, "message": "More fixes to fast-check.", "tree": {"sha": "697a3f3c288192330b8367bb103043a2731085d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/697a3f3c288192330b8367bb103043a2731085d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afabde19dcdae41fa60df37b4aa049f4dfe6ee5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afabde19dcdae41fa60df37b4aa049f4dfe6ee5f", "html_url": "https://github.com/rust-lang/rust/commit/afabde19dcdae41fa60df37b4aa049f4dfe6ee5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afabde19dcdae41fa60df37b4aa049f4dfe6ee5f/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a82aeb7af6be8968c7575635283790a73b874118", "url": "https://api.github.com/repos/rust-lang/rust/commits/a82aeb7af6be8968c7575635283790a73b874118", "html_url": "https://github.com/rust-lang/rust/commit/a82aeb7af6be8968c7575635283790a73b874118"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "b77682aaa02472f8a0bd6172cca0308fc37b235b", "filename": "mk/tests.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/afabde19dcdae41fa60df37b4aa049f4dfe6ee5f/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/afabde19dcdae41fa60df37b4aa049f4dfe6ee5f/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=afabde19dcdae41fa60df37b4aa049f4dfe6ee5f", "patch": "@@ -206,11 +206,11 @@ stage2/lib/$(FT_LIB): test/$(FT).rc $(SREQ2)\n \t@$(call E, compile_and_link: $@)\n \t$(STAGE2) --shared -o $@ $<\n \n-test/$(FT_DRIVER): test/$(FT_DRIVER).rs stage2/lib/$(FT_LIB) $(SREQ2)\n+test/$(FT_DRIVER)$(X): test/$(FT_DRIVER).rs stage2/lib/$(FT_LIB) $(SREQ2)\n \t@$(call E, compile_and_link: $@)\n \t$(STAGE2) -o $@ $<\n \n-test/$(FT_DRIVER).out: test/$(FT_DRIVER) $(SREQ2)\n+test/$(FT_DRIVER).out: test/$(FT_DRIVER)$(X) $(SREQ2)\n \t$(Q)$(call CFG_RUN_TEST, $<) | tee $@\n \n "}, {"sha": "2dc76bd793bbf2ea1d52ffd90c45ca300c8a42d9", "filename": "src/comp/front/eval.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/afabde19dcdae41fa60df37b4aa049f4dfe6ee5f/src%2Fcomp%2Ffront%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afabde19dcdae41fa60df37b4aa049f4dfe6ee5f/src%2Fcomp%2Ffront%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Feval.rs?ref=afabde19dcdae41fa60df37b4aa049f4dfe6ee5f", "patch": "@@ -285,7 +285,11 @@ fn eval_crate_directive(ctx cx, env e, @ast::crate_directive cdir, str prefix,\n                 case (some(?f)) { file_path = f; }\n                 case (none) { }\n             }\n-            auto full_path = prefix + std::fs::path_sep() + file_path;\n+            auto full_path = if (std::fs::path_is_absolute(file_path)) {\n+                file_path\n+            } else {\n+                prefix + std::fs::path_sep() + file_path\n+            };\n             if (cx.mode == mode_depend) { cx.deps += [full_path]; ret; }\n             auto p0 =\n                 new_parser(cx.sess, e, full_path, cx.chpos,\n@@ -306,7 +310,11 @@ fn eval_crate_directive(ctx cx, env e, @ast::crate_directive cdir, str prefix,\n         case (ast::cdir_dir_mod(?id, ?dir_opt, ?cdirs, ?attrs)) {\n             auto path = id;\n             alt (dir_opt) { case (some(?d)) { path = d; } case (none) { } }\n-            auto full_path = prefix + std::fs::path_sep() + path;\n+            auto full_path = if (std::fs::path_is_absolute(path)) {\n+                path\n+            } else {\n+                prefix + std::fs::path_sep() + path\n+            };\n             auto m0 = eval_crate_directives_to_mod(cx, e, cdirs, full_path);\n             auto i = @rec(ident=id,\n                           attrs=attrs,"}, {"sha": "d1ee5048ddd29d32dbd7a20ee9bd3f46bbf7525e", "filename": "src/etc/combine-tests.py", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/afabde19dcdae41fa60df37b4aa049f4dfe6ee5f/src%2Fetc%2Fcombine-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/afabde19dcdae41fa60df37b4aa049f4dfe6ee5f/src%2Fetc%2Fcombine-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcombine-tests.py?ref=afabde19dcdae41fa60df37b4aa049f4dfe6ee5f", "patch": "@@ -17,6 +17,7 @@ def scrub(b):\n   raise Exception(\"missing env var CFG_SRC_DIR\")\n \n run_pass = os.path.join(src_dir, \"src\", \"test\", \"run-pass\")\n+run_pass = os.path.abspath(run_pass)\n stage2_tests = []\n take_args = {}\n \n@@ -32,17 +33,13 @@ def scrub(b):\n \n stage2_tests.sort()\n \n-# add a .. prefix because we're about to write down into test/..\n-parent_run_pass = os.path.join(\"..\", run_pass);\n-\n-\n c = open(\"test/run_pass_stage2.rc\", \"w\")\n i = 0\n c.write(\"// AUTO-GENERATED FILE: DO NOT EDIT\\n\")\n c.write(\"#[link(name=\\\"run_pass_stage2\\\", vers=\\\"0.1\\\")];\\n\")\n for t in stage2_tests:\n     c.write(\"mod t_%d = \\\"%s\\\";\\n\"\n-            % (i, os.path.join(parent_run_pass, t)))\n+            % (i, os.path.join(run_pass, t)))\n     i += 1\n c.close()\n "}]}