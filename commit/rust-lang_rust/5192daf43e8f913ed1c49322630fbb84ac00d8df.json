{"sha": "5192daf43e8f913ed1c49322630fbb84ac00d8df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxOTJkYWY0M2U4ZjkxM2VkMWM0OTMyMjYzMGZiYjg0YWMwMGQ4ZGY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-10-19T15:17:02Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-10-19T15:17:02Z"}, "message": "adjust miri sysroot determination", "tree": {"sha": "02055e4ff1e2136668e4d1775975e908b3c1da20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02055e4ff1e2136668e4d1775975e908b3c1da20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5192daf43e8f913ed1c49322630fbb84ac00d8df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5192daf43e8f913ed1c49322630fbb84ac00d8df", "html_url": "https://github.com/rust-lang/rust/commit/5192daf43e8f913ed1c49322630fbb84ac00d8df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5192daf43e8f913ed1c49322630fbb84ac00d8df/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f704c099ebd51e2fe34209d5a733501f317e37b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f704c099ebd51e2fe34209d5a733501f317e37b8", "html_url": "https://github.com/rust-lang/rust/commit/f704c099ebd51e2fe34209d5a733501f317e37b8"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "0b7aa0750a199beec791022281f24e6a536c166d", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5192daf43e8f913ed1c49322630fbb84ac00d8df/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5192daf43e8f913ed1c49322630fbb84ac00d8df/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=5192daf43e8f913ed1c49322630fbb84ac00d8df", "patch": "@@ -427,7 +427,7 @@ impl Step for Miri {\n             // (We do this separately from the above so that when the setup actually\n             // happens we get some output.)\n             // We re-use the `cargo` from above.\n-            cargo.arg(\"--env\");\n+            cargo.arg(\"--print-sysroot\");\n \n             // FIXME: Is there a way in which we can re-use the usual `run` helpers?\n             let miri_sysroot = if builder.config.dry_run {\n@@ -437,13 +437,11 @@ impl Step for Miri {\n                 let out = cargo.output()\n                     .expect(\"We already ran `cargo miri setup` before and that worked\");\n                 assert!(out.status.success(), \"`cargo miri setup` returned with non-0 exit code\");\n-                // Output is \"MIRI_SYSROOT=<str>\\n\".\n+                // Output is \"<sysroot>\\n\".\n                 let stdout = String::from_utf8(out.stdout)\n                     .expect(\"`cargo miri setup` stdout is not valid UTF-8\");\n-                let stdout = stdout.trim();\n-                builder.verbose(&format!(\"`cargo miri setup --env` returned: {:?}\", stdout));\n-                let sysroot = stdout.splitn(2, '=')\n-                    .nth(1).expect(\"`cargo miri setup` stdout did not contain '='\");\n+                let sysroot = stdout.trim_end();\n+                builder.verbose(&format!(\"`cargo miri setup --print-sysroot` said: {:?}\", sysroot));\n                 sysroot.to_owned()\n             };\n "}]}