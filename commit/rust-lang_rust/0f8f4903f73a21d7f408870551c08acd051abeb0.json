{"sha": "0f8f4903f73a21d7f408870551c08acd051abeb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmOGY0OTAzZjczYTIxZDdmNDA4ODcwNTUxYzA4YWNkMDUxYWJlYjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-17T02:57:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-17T02:57:40Z"}, "message": "Auto merge of #51382 - GuillaumeGomez:intra-link-lint, r=QuietMisdreavus\n\nAdd lint for intra link resolution failure\n\nThis PR is almost done, just remains this note:\n\n```\nnote: requested on the command line with `-W intra-link-resolution-failure`\n```\n\nI have no idea why my lint is considered as being passed through command line and wasn't able to find where it was set. If anyone has an idea, it'd be very helpful!\n\ncc @QuietMisdreavus", "tree": {"sha": "153096172dafabb7a33ba69592194812e1faea13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/153096172dafabb7a33ba69592194812e1faea13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f8f4903f73a21d7f408870551c08acd051abeb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f8f4903f73a21d7f408870551c08acd051abeb0", "html_url": "https://github.com/rust-lang/rust/commit/0f8f4903f73a21d7f408870551c08acd051abeb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f8f4903f73a21d7f408870551c08acd051abeb0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68da15eae9c9cd2cb7a544f895105eb067d4b1c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/68da15eae9c9cd2cb7a544f895105eb067d4b1c9", "html_url": "https://github.com/rust-lang/rust/commit/68da15eae9c9cd2cb7a544f895105eb067d4b1c9"}, {"sha": "6a03884ce99df2002ddaa1155de65384f7767cd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a03884ce99df2002ddaa1155de65384f7767cd5", "html_url": "https://github.com/rust-lang/rust/commit/6a03884ce99df2002ddaa1155de65384f7767cd5"}], "stats": {"total": 144, "additions": 133, "deletions": 11}, "files": [{"sha": "7d4a18c2a570b20f85d94fe4287738994eb041ba", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=0f8f4903f73a21d7f408870551c08acd051abeb0", "patch": "@@ -298,6 +298,12 @@ declare_lint! {\n     \"detects duplicate macro exports\"\n }\n \n+declare_lint! {\n+    pub INTRA_DOC_LINK_RESOLUTION_FAILURE,\n+    Warn,\n+    \"warn about documentation intra links resolution failure\"\n+}\n+\n /// Does nothing as a lint pass, but registers some `Lint`s\n /// which are used by other parts of the compiler.\n #[derive(Copy, Clone)]\n@@ -351,6 +357,7 @@ impl LintPass for HardwiredLints {\n             UNSTABLE_NAME_COLLISIONS,\n             DUPLICATE_ASSOCIATED_TYPE_BINDINGS,\n             DUPLICATE_MACRO_EXPORTS,\n+            INTRA_DOC_LINK_RESOLUTION_FAILURE,\n         )\n     }\n }"}, {"sha": "79796d788719a7be3a7cc78583f63cb3110a2ae7", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=0f8f4903f73a21d7f408870551c08acd051abeb0", "patch": "@@ -1665,3 +1665,36 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TrivialConstraints {\n         }\n     }\n }\n+\n+/// Does nothing as a lint pass, but registers some `Lint`s\n+/// which are used by other parts of the compiler.\n+#[derive(Copy, Clone)]\n+pub struct SoftLints;\n+\n+impl LintPass for SoftLints {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(\n+            WHILE_TRUE,\n+            BOX_POINTERS,\n+            NON_SHORTHAND_FIELD_PATTERNS,\n+            UNSAFE_CODE,\n+            MISSING_DOCS,\n+            MISSING_COPY_IMPLEMENTATIONS,\n+            MISSING_DEBUG_IMPLEMENTATIONS,\n+            ANONYMOUS_PARAMETERS,\n+            UNUSED_DOC_COMMENTS,\n+            UNCONDITIONAL_RECURSION,\n+            PLUGIN_AS_LIBRARY,\n+            PRIVATE_NO_MANGLE_FNS,\n+            PRIVATE_NO_MANGLE_STATICS,\n+            NO_MANGLE_CONST_ITEMS,\n+            NO_MANGLE_GENERIC_ITEMS,\n+            MUTABLE_TRANSMUTES,\n+            UNSTABLE_FEATURES,\n+            UNIONS_WITH_DROP_FIELDS,\n+            UNREACHABLE_PUB,\n+            TYPE_ALIAS_BOUNDS,\n+            TRIVIAL_BOUNDS,\n+        )\n+    }\n+}"}, {"sha": "9ac22f8dceb05558ed97f648f50be1dee787634c", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=0f8f4903f73a21d7f408870551c08acd051abeb0", "patch": "@@ -60,6 +60,9 @@ use builtin::*;\n use types::*;\n use unused::*;\n \n+/// Useful for other parts of the compiler.\n+pub use builtin::SoftLints;\n+\n /// Tell the `LintStore` about all the built-in lints (the ones\n /// defined in this crate and the ones defined in\n /// `rustc::lint::builtin`)."}, {"sha": "8d3cf22350900f6e0db2593fcd1018b31dbe1e15", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=0f8f4903f73a21d7f408870551c08acd051abeb0", "patch": "@@ -21,7 +21,7 @@ pub use self::Visibility::{Public, Inherited};\n \n use syntax;\n use rustc_target::spec::abi::Abi;\n-use syntax::ast::{self, AttrStyle, Ident};\n+use syntax::ast::{self, AttrStyle, NodeId, Ident};\n use syntax::attr;\n use syntax::codemap::{dummy_spanned, Spanned};\n use syntax::feature_gate::UnstableFeatures;\n@@ -46,9 +46,10 @@ use rustc::middle::stability;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_typeck::hir_ty_to_ty;\n use rustc::infer::region_constraints::{RegionConstraintData, Constraint};\n+use rustc::lint as lint;\n+\n use std::collections::hash_map::Entry;\n use std::fmt;\n-\n use std::default::Default;\n use std::{mem, slice, vec};\n use std::iter::{FromIterator, once};\n@@ -1283,10 +1284,16 @@ fn resolution_failure(\n                 link_range.end + code_dox_len,\n             );\n \n-            diag = cx.sess().struct_span_warn(sp, &msg);\n+            diag = cx.tcx.struct_span_lint_node(lint::builtin::INTRA_DOC_LINK_RESOLUTION_FAILURE,\n+                                                NodeId::new(0),\n+                                                sp,\n+                                                &msg);\n             diag.span_label(sp, \"cannot be resolved, ignoring\");\n         } else {\n-            diag = cx.sess().struct_span_warn(sp, &msg);\n+            diag = cx.tcx.struct_span_lint_node(lint::builtin::INTRA_DOC_LINK_RESOLUTION_FAILURE,\n+                                                NodeId::new(0),\n+                                                sp,\n+                                                &msg);\n \n             let last_new_line_offset = dox[..link_range.start].rfind('\\n').map_or(0, |n| n + 1);\n             let line = dox[last_new_line_offset..].lines().next().unwrap_or(\"\");\n@@ -1303,8 +1310,13 @@ fn resolution_failure(\n         }\n         diag\n     } else {\n-        cx.sess().struct_span_warn(sp, &msg)\n+        cx.tcx.struct_span_lint_node(lint::builtin::INTRA_DOC_LINK_RESOLUTION_FAILURE,\n+                                     NodeId::new(0),\n+                                     sp,\n+                                     &msg)\n     };\n+    diag.help(\"to escape `[` and `]` characters, just add '\\\\' before them like \\\n+               `\\\\[` or `\\\\]`\");\n     diag.emit();\n }\n "}, {"sha": "e858f10860b411df97397910571caabe6efe7832", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=0f8f4903f73a21d7f408870551c08acd051abeb0", "patch": "@@ -17,7 +17,7 @@ use rustc::middle::cstore::CrateStore;\n use rustc::middle::privacy::AccessLevels;\n use rustc::ty::{self, TyCtxt, AllArenas};\n use rustc::hir::map as hir_map;\n-use rustc::lint;\n+use rustc::lint::{self, LintPass};\n use rustc::session::config::ErrorOutputType;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_resolve as resolve;\n@@ -187,16 +187,33 @@ pub fn run_core(search_paths: SearchPaths,\n         _ => None\n     };\n \n-    let warning_lint = lint::builtin::WARNINGS.name_lower();\n+    let intra_link_resolution_failure_name = lint::builtin::INTRA_DOC_LINK_RESOLUTION_FAILURE.name;\n+    let warnings_lint_name = lint::builtin::WARNINGS.name;\n+    let lints = lint::builtin::HardwiredLints.get_lints()\n+                    .iter()\n+                    .chain(rustc_lint::SoftLints.get_lints())\n+                    .filter_map(|lint| {\n+                        if lint.name == warnings_lint_name ||\n+                           lint.name == intra_link_resolution_failure_name {\n+                            None\n+                        } else {\n+                            Some((lint.name_lower(), lint::Allow))\n+                        }\n+                    })\n+                    .collect::<Vec<_>>();\n \n     let host_triple = TargetTriple::from_triple(config::host_triple());\n     // plays with error output here!\n     let sessopts = config::Options {\n         maybe_sysroot,\n         search_paths,\n         crate_types: vec![config::CrateTypeRlib],\n-        lint_opts: if !allow_warnings { vec![(warning_lint, lint::Allow)] } else { vec![] },\n-        lint_cap: Some(lint::Allow),\n+        lint_opts: if !allow_warnings {\n+            lints\n+        } else {\n+            vec![]\n+        },\n+        lint_cap: Some(lint::Forbid),\n         cg,\n         externs,\n         target_triple: triple.unwrap_or(host_triple),"}, {"sha": "88e4237f8e2b7eb2aa411bbf52a82bc391cb23b7", "filename": "src/libstd/sys/unix/ext/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Flibstd%2Fsys%2Funix%2Fext%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Flibstd%2Fsys%2Funix%2Fext%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fmod.rs?ref=0f8f4903f73a21d7f408870551c08acd051abeb0", "patch": "@@ -35,6 +35,7 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![doc(cfg(unix))]\n+#![allow(missing_docs)]\n \n pub mod io;\n pub mod ffi;"}, {"sha": "1f10609f32c482f42b0c8e9d650aabb7e76fd0db", "filename": "src/libstd/sys/windows/ext/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fmod.rs?ref=0f8f4903f73a21d7f408870551c08acd051abeb0", "patch": "@@ -18,6 +18,7 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![doc(cfg(windows))]\n+#![allow(missing_docs)]\n \n pub mod ffi;\n pub mod fs;"}, {"sha": "85d19c8354788f35fb151d5791e2a4fcbd7c7980", "filename": "src/test/rustdoc-ui/deny-intra-link-resolution-failure.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.rs?ref=0f8f4903f73a21d7f408870551c08acd051abeb0", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![deny(intra_doc_link_resolution_failure)]\n+\n+/// [v2] //~ ERROR\n+pub fn foo() {}"}, {"sha": "66ee48ed4c9c011adafca2c8bcee9cd6cce53b5c", "filename": "src/test/rustdoc-ui/deny-intra-link-resolution-failure.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.stderr?ref=0f8f4903f73a21d7f408870551c08acd051abeb0", "patch": "@@ -0,0 +1,13 @@\n+error: `[v2]` cannot be resolved, ignoring it...\n+  --> $DIR/deny-intra-link-resolution-failure.rs:13:6\n+   |\n+13 | /// [v2] //~ ERROR\n+   |      ^^ cannot be resolved, ignoring\n+   |\n+note: lint level defined here\n+  --> $DIR/deny-intra-link-resolution-failure.rs:11:9\n+   |\n+11 | #![deny(intra_doc_link_resolution_failure)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = help: to escape `[` and `]` characters, just add '/' before them like `/[` or `/]`\n+"}, {"sha": "2a51e94b1f5d78c69850231fe54f3154ea701901", "filename": "src/test/rustdoc-ui/intra-links-warning.stderr", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr?ref=0f8f4903f73a21d7f408870551c08acd051abeb0", "patch": "@@ -3,48 +3,65 @@ warning: `[Foo::baz]` cannot be resolved, ignoring it...\n    |\n 13 |        //! Test with [Foo::baz], [Bar::foo], ...\n    |                       ^^^^^^^^ cannot be resolved, ignoring\n+   |\n+   = note: #[warn(intra_doc_link_resolution_failure)] on by default\n+   = help: to escape `[` and `]` characters, just add '/' before them like `/[` or `/]`\n \n warning: `[Bar::foo]` cannot be resolved, ignoring it...\n   --> $DIR/intra-links-warning.rs:13:35\n    |\n 13 |        //! Test with [Foo::baz], [Bar::foo], ...\n    |                                   ^^^^^^^^ cannot be resolved, ignoring\n+   |\n+   = help: to escape `[` and `]` characters, just add '/' before them like `/[` or `/]`\n \n warning: `[Uniooon::X]` cannot be resolved, ignoring it...\n   --> $DIR/intra-links-warning.rs:14:13\n    |\n 14 |      //! , [Uniooon::X] and [Qux::Z].\n    |             ^^^^^^^^^^ cannot be resolved, ignoring\n+   |\n+   = help: to escape `[` and `]` characters, just add '/' before them like `/[` or `/]`\n \n warning: `[Qux::Z]` cannot be resolved, ignoring it...\n   --> $DIR/intra-links-warning.rs:14:30\n    |\n 14 |      //! , [Uniooon::X] and [Qux::Z].\n    |                              ^^^^^^ cannot be resolved, ignoring\n+   |\n+   = help: to escape `[` and `]` characters, just add '/' before them like `/[` or `/]`\n \n warning: `[Uniooon::X]` cannot be resolved, ignoring it...\n   --> $DIR/intra-links-warning.rs:16:14\n    |\n 16 |       //! , [Uniooon::X] and [Qux::Z].\n    |              ^^^^^^^^^^ cannot be resolved, ignoring\n+   |\n+   = help: to escape `[` and `]` characters, just add '/' before them like `/[` or `/]`\n \n warning: `[Qux::Z]` cannot be resolved, ignoring it...\n   --> $DIR/intra-links-warning.rs:16:31\n    |\n 16 |       //! , [Uniooon::X] and [Qux::Z].\n    |                               ^^^^^^ cannot be resolved, ignoring\n+   |\n+   = help: to escape `[` and `]` characters, just add '/' before them like `/[` or `/]`\n \n warning: `[Qux:Y]` cannot be resolved, ignoring it...\n   --> $DIR/intra-links-warning.rs:18:13\n    |\n 18 |        /// [Qux:Y]\n    |             ^^^^^ cannot be resolved, ignoring\n+   |\n+   = help: to escape `[` and `]` characters, just add '/' before them like `/[` or `/]`\n \n warning: `[BarA]` cannot be resolved, ignoring it...\n   --> $DIR/intra-links-warning.rs:24:10\n    |\n 24 | /// bar [BarA] bar\n    |          ^^^^ cannot be resolved, ignoring\n+   |\n+   = help: to escape `[` and `]` characters, just add '/' before them like `/[` or `/]`\n \n warning: `[BarB]` cannot be resolved, ignoring it...\n   --> $DIR/intra-links-warning.rs:28:1\n@@ -60,6 +77,7 @@ warning: `[BarB]` cannot be resolved, ignoring it...\n            \n             bar [BarB] bar\n                  ^^^^\n+   = help: to escape `[` and `]` characters, just add '/' before them like `/[` or `/]`\n \n warning: `[BarC]` cannot be resolved, ignoring it...\n   --> $DIR/intra-links-warning.rs:35:1\n@@ -77,6 +95,7 @@ warning: `[BarC]` cannot be resolved, ignoring it...\n            \n            bar [BarC] bar\n                 ^^^^\n+   = help: to escape `[` and `]` characters, just add '/' before them like `/[` or `/]`\n \n warning: `[BarD]` cannot be resolved, ignoring it...\n   --> $DIR/intra-links-warning.rs:48:1\n@@ -88,6 +107,7 @@ warning: `[BarD]` cannot be resolved, ignoring it...\n            \n            bar [BarD] bar\n                 ^^^^\n+   = help: to escape `[` and `]` characters, just add '/' before them like `/[` or `/]`\n \n warning: `[BarF]` cannot be resolved, ignoring it...\n   --> $DIR/intra-links-warning.rs:53:9\n@@ -102,4 +122,5 @@ warning: `[BarF]` cannot be resolved, ignoring it...\n            \n            bar [BarF] bar\n                 ^^^^\n+   = help: to escape `[` and `]` characters, just add '/' before them like `/[` or `/]`\n "}, {"sha": "39e753daadbd1e587adf981880358a3a264d2305", "filename": "src/test/rustdoc/cap-lints.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Ftest%2Frustdoc%2Fcap-lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f8f4903f73a21d7f408870551c08acd051abeb0/src%2Ftest%2Frustdoc%2Fcap-lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fcap-lints.rs?ref=0f8f4903f73a21d7f408870551c08acd051abeb0", "patch": "@@ -13,8 +13,8 @@\n // therefore should not concern itself with the lints.\n #[deny(warnings)]\n \n-// @has cap_lints/struct.foo.html //pre '#[must_use]'\n+// @has cap_lints/struct.Foo.html //pre '#[must_use]'\n #[must_use]\n-pub struct foo {\n+pub struct Foo {\n     field: i32,\n }"}]}