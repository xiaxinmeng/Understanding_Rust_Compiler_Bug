{"sha": "07cfc252a1d34b25fcb6c84403071bd183794ae2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3Y2ZjMjUyYTFkMzRiMjVmY2I2Yzg0NDAzMDcxYmQxODM3OTRhZTI=", "commit": {"author": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2014-10-03T17:46:41Z"}, "committer": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2014-10-06T23:32:30Z"}, "message": "Remove core::any::AnyPrivate\n\n[Previously](https://github.com/rust-lang/rust/commit/e5da6a71a6a0b46dd3630fc8326e6d5906a1fde6),\nthe `Any` trait was split into a private portion and an (empty) public\nportion, in order to hide the implementation strategy used for\ndowncasting. However, the [new\nrules](https://github.com/rust-lang/rust/commit/e9ad12c0cae5c43ada6641c7dc840a0fbe5010a2)\nfor privacy forbid `AnyPrivate` from actually being private.\n\nThis patch thus reverts the introduction of `AnyPrivate`.\n\nAlthough this is unlikely to break any real code, it removes a public\ntrait and is therefore a:\n\n[breaking-change]", "tree": {"sha": "0b557caad6b4ea6f63df9d0daaf8703c49f9a31a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b557caad6b4ea6f63df9d0daaf8703c49f9a31a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07cfc252a1d34b25fcb6c84403071bd183794ae2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07cfc252a1d34b25fcb6c84403071bd183794ae2", "html_url": "https://github.com/rust-lang/rust/commit/07cfc252a1d34b25fcb6c84403071bd183794ae2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07cfc252a1d34b25fcb6c84403071bd183794ae2/comments", "author": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5ba2f5517b1f90d07969ca3facdf5132e42436c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5ba2f5517b1f90d07969ca3facdf5132e42436c", "html_url": "https://github.com/rust-lang/rust/commit/b5ba2f5517b1f90d07969ca3facdf5132e42436c"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "c4b07d42e693afbf953a85c2c55ae0cc0113e883", "filename": "src/libcore/any.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/07cfc252a1d34b25fcb6c84403071bd183794ae2/src%2Flibcore%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cfc252a1d34b25fcb6c84403071bd183794ae2/src%2Flibcore%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fany.rs?ref=07cfc252a1d34b25fcb6c84403071bd183794ae2", "patch": "@@ -91,20 +91,15 @@ pub enum Void { }\n /// Every type with no non-`'static` references implements `Any`, so `Any` can\n /// be used as a trait object to emulate the effects dynamic typing.\n #[stable]\n-pub trait Any: AnyPrivate + 'static {}\n-\n-/// An inner trait to ensure that only this module can call `get_type_id()`.\n-pub trait AnyPrivate {\n+pub trait Any: 'static {\n     /// Get the `TypeId` of `self`\n     fn get_type_id(&self) -> TypeId;\n }\n \n-impl<T: 'static> AnyPrivate for T {\n+impl<T: 'static> Any for T {\n     fn get_type_id(&self) -> TypeId { TypeId::of::<T>() }\n }\n \n-impl<T: 'static + AnyPrivate> Any for T {}\n-\n ///////////////////////////////////////////////////////////////////////////////\n // Extension methods for Any trait objects.\n // Implemented as three extension traits so that the methods can be generic."}]}