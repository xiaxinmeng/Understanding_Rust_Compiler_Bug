{"sha": "8fc3088b2aba397c0f561ce978b2d4a47f8a9eab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmYzMwODhiMmFiYTM5N2MwZjU2MWNlOTc4YjJkNGE0N2Y4YTllYWI=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-09-27T04:35:42Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-10-02T03:44:30Z"}, "message": "rename vec::raw::form_slice to buf_as_slice\n\nThis matches the str::raw function.", "tree": {"sha": "5df5d2dce591686d740d46fdc54545e2e4fd3bc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5df5d2dce591686d740d46fdc54545e2e4fd3bc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fc3088b2aba397c0f561ce978b2d4a47f8a9eab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fc3088b2aba397c0f561ce978b2d4a47f8a9eab", "html_url": "https://github.com/rust-lang/rust/commit/8fc3088b2aba397c0f561ce978b2d4a47f8a9eab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fc3088b2aba397c0f561ce978b2d4a47f8a9eab/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81423a3866fb6cd4cadd28ed49273d7e22d48c17", "url": "https://api.github.com/repos/rust-lang/rust/commits/81423a3866fb6cd4cadd28ed49273d7e22d48c17", "html_url": "https://github.com/rust-lang/rust/commit/81423a3866fb6cd4cadd28ed49273d7e22d48c17"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "e8a88f3bc1b91c91dc51c8e18365a5ef7d2e41e3", "filename": "src/libcore/str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8fc3088b2aba397c0f561ce978b2d4a47f8a9eab/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fc3088b2aba397c0f561ce978b2d4a47f8a9eab/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=8fc3088b2aba397c0f561ce978b2d4a47f8a9eab", "patch": "@@ -349,7 +349,7 @@ pub pure fn to_bytes(s: &str) -> ~[u8] unsafe {\n #[inline(always)]\n pub pure fn byte_slice<T>(s: &str, f: fn(v: &[u8]) -> T) -> T {\n     do as_buf(s) |p,n| {\n-        unsafe { vec::raw::form_slice(p, n-1u, f) }\n+        unsafe { vec::raw::buf_as_slice(p, n-1u, f) }\n     }\n }\n "}, {"sha": "7d0421c0730153c5ca13c0dd75772d3a47f1ef2d", "filename": "src/libcore/uint-template.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8fc3088b2aba397c0f561ce978b2d4a47f8a9eab/src%2Flibcore%2Fuint-template.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fc3088b2aba397c0f561ce978b2d4a47f8a9eab/src%2Flibcore%2Fuint-template.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fuint-template.rs?ref=8fc3088b2aba397c0f561ce978b2d4a47f8a9eab", "patch": "@@ -226,8 +226,7 @@ pub pure fn to_str_bytes<U>(neg: bool, num: T, radix: uint,\n                 *ptr::mut_offset(mp, i) = '-' as u8;\n             }\n \n-            vec::raw::form_slice(ptr::offset(p, i),\n-                                 len - i, f)\n+            vec::raw::buf_as_slice(ptr::offset(p, i), len - i, f)\n         }\n     }\n }"}, {"sha": "ce82215a87c8babbb9e177f316a84eeb9dd4cd8c", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8fc3088b2aba397c0f561ce978b2d4a47f8a9eab/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fc3088b2aba397c0f561ce978b2d4a47f8a9eab/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=8fc3088b2aba397c0f561ce978b2d4a47f8a9eab", "patch": "@@ -1741,8 +1741,9 @@ pub mod raw {\n      * not bytes).\n      */\n     #[inline(always)]\n-    pub unsafe fn form_slice<T,U>(p: *T, len: uint,\n-                                  f: fn(v: &[T]) -> U) -> U {\n+    pub unsafe fn buf_as_slice<T,U>(p: *T,\n+                                    len: uint,\n+                                    f: fn(v: &[T]) -> U) -> U {\n         let pair = (p, len * sys::size_of::<T>());\n         let v : *(&blk/[T]) =\n             ::cast::reinterpret_cast(&addr_of(&pair));"}, {"sha": "0a8354be71f76e9e1e2d4fbb6deb8aa354ca3bf6", "filename": "src/rustc/metadata/loader.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8fc3088b2aba397c0f561ce978b2d4a47f8a9eab/src%2Frustc%2Fmetadata%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fc3088b2aba397c0f561ce978b2d4a47f8a9eab/src%2Frustc%2Fmetadata%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Floader.rs?ref=8fc3088b2aba397c0f561ce978b2d4a47f8a9eab", "patch": "@@ -193,7 +193,7 @@ fn get_metadata_section(os: os,\n                        vlen);\n                 let minsz = uint::min(vlen, csz);\n                 let mut version_ok = false;\n-                do vec::raw::form_slice(cvbuf, minsz) |buf0| {\n+                do vec::raw::buf_as_slice(cvbuf, minsz) |buf0| {\n                     version_ok = (buf0 ==\n                                   encoder::metadata_encoding_version);\n                 }\n@@ -202,7 +202,7 @@ fn get_metadata_section(os: os,\n                 let cvbuf1 = ptr::offset(cvbuf, vlen);\n                 debug!(\"inflating %u bytes of compressed metadata\",\n                        csz - vlen);\n-                do vec::raw::form_slice(cvbuf1, csz-vlen) |bytes| {\n+                do vec::raw::buf_as_slice(cvbuf1, csz-vlen) |bytes| {\n                     let inflated = flate::inflate_bytes(bytes);\n                     found = move Some(@(move inflated));\n                 }"}]}