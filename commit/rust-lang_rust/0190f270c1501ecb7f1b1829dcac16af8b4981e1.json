{"sha": "0190f270c1501ecb7f1b1829dcac16af8b4981e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxOTBmMjcwYzE1MDFlY2I3ZjFiMTgyOWRjYWMxNmFmOGI0OTgxZTE=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-09-24T09:01:09Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-11-19T00:14:33Z"}, "message": "rustc_trans: check for layout::I1 instead of TyBool.", "tree": {"sha": "3966684f99c9147b8e4017805d5eb1a219ae45f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3966684f99c9147b8e4017805d5eb1a219ae45f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0190f270c1501ecb7f1b1829dcac16af8b4981e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0190f270c1501ecb7f1b1829dcac16af8b4981e1", "html_url": "https://github.com/rust-lang/rust/commit/0190f270c1501ecb7f1b1829dcac16af8b4981e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0190f270c1501ecb7f1b1829dcac16af8b4981e1/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abbc1ddbd05d4e738591aba6f589c3ecc1233105", "url": "https://api.github.com/repos/rust-lang/rust/commits/abbc1ddbd05d4e738591aba6f589c3ecc1233105", "html_url": "https://github.com/rust-lang/rust/commit/abbc1ddbd05d4e738591aba6f589c3ecc1233105"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "752de4d28356d89fd8ae09ee3726cbf6be874a10", "filename": "src/librustc_trans/abi.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0190f270c1501ecb7f1b1829dcac16af8b4981e1/src%2Flibrustc_trans%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0190f270c1501ecb7f1b1829dcac16af8b4981e1/src%2Flibrustc_trans%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fabi.rs?ref=0190f270c1501ecb7f1b1829dcac16af8b4981e1", "patch": "@@ -695,17 +695,15 @@ impl<'a, 'tcx> FnType<'tcx> {\n \n         let arg_of = |ty: Ty<'tcx>, is_return: bool| {\n             let mut arg = ArgType::new(ccx.layout_of(ty));\n-            if ty.is_bool() {\n+            if let layout::Abi::Scalar(layout::Int(layout::I1, _)) = arg.layout.abi {\n                 arg.attrs.set(ArgAttribute::ZExt);\n-            } else {\n-                if arg.layout.is_zst() {\n-                    // For some forsaken reason, x86_64-pc-windows-gnu\n-                    // doesn't ignore zero-sized struct arguments.\n-                    // The same is true for s390x-unknown-linux-gnu.\n-                    if is_return || rust_abi ||\n-                       (!win_x64_gnu && !linux_s390x) {\n-                        arg.ignore();\n-                    }\n+            } else if arg.layout.is_zst() {\n+                // For some forsaken reason, x86_64-pc-windows-gnu\n+                // doesn't ignore zero-sized struct arguments.\n+                // The same is true for s390x-unknown-linux-gnu.\n+                if is_return || rust_abi ||\n+                    (!win_x64_gnu && !linux_s390x) {\n+                    arg.ignore();\n                 }\n             }\n             arg"}, {"sha": "cd152a391b8aefbd55d78a66497920d298ef0cf6", "filename": "src/librustc_trans/mir/block.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0190f270c1501ecb7f1b1829dcac16af8b4981e1/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0190f270c1501ecb7f1b1829dcac16af8b4981e1/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fblock.rs?ref=0190f270c1501ecb7f1b1829dcac16af8b4981e1", "patch": "@@ -12,7 +12,7 @@ use llvm::{self, ValueRef, BasicBlockRef};\n use rustc::middle::lang_items;\n use rustc::middle::const_val::{ConstEvalErr, ConstInt, ErrKind};\n use rustc::ty::{self, TypeFoldable};\n-use rustc::ty::layout::LayoutOf;\n+use rustc::ty::layout::{self, LayoutOf};\n use rustc::traits;\n use rustc::mir;\n use abi::{Abi, FnType, ArgType};\n@@ -673,7 +673,7 @@ impl<'a, 'tcx> MirContext<'a, 'tcx> {\n             } else {\n                 llval = bcx.load(llval, align.non_abi());\n             }\n-            if arg.layout.ty == bcx.tcx().types.bool {\n+            if let layout::Abi::Scalar(layout::Int(layout::I1, _)) = arg.layout.abi {\n                 bcx.range_metadata(llval, 0..2);\n                 // We store bools as i8 so we need to truncate to i1.\n                 llval = base::to_immediate(bcx, llval, arg.layout);"}, {"sha": "08b05c33bb2713d61f7cc0dba69838596feba60c", "filename": "src/librustc_trans/mir/constant.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0190f270c1501ecb7f1b1829dcac16af8b4981e1/src%2Flibrustc_trans%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0190f270c1501ecb7f1b1829dcac16af8b4981e1/src%2Flibrustc_trans%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fconstant.rs?ref=0190f270c1501ecb7f1b1829dcac16af8b4981e1", "patch": "@@ -454,7 +454,8 @@ impl<'a, 'tcx> MirConstContext<'a, 'tcx> {\n                                 span_bug!(span, \"dereference of non-constant pointer `{:?}`\",\n                                           Value(base));\n                             }\n-                            if projected_ty.is_bool() {\n+                            let layout = self.ccx.layout_of(projected_ty);\n+                            if let layout::Abi::Scalar(layout::Int(layout::I1, _)) = layout.abi {\n                                 let i1_type = Type::i1(self.ccx);\n                                 if val_ty(val) != i1_type {\n                                     unsafe {"}]}