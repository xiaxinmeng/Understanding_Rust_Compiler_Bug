{"sha": "ddff7f0e50c1184c5cfa1a54c7bd2b6848ed85d6", "node_id": "C_kwDOAAsO6NoAKGRkZmY3ZjBlNTBjMTE4NGM1Y2ZhMWE1NGM3YmQyYjY4NDhlZDg1ZDY", "commit": {"author": {"name": "Chris Denton", "email": "chris@chrisdenton.dev", "date": "2023-04-28T01:19:00Z"}, "committer": {"name": "Chris Denton", "email": "chris@chrisdenton.dev", "date": "2023-04-28T01:30:45Z"}, "message": "remove_dir_all: delete directory with fewer perms\n\nIf opening a directory with `FILE_LIST_DIRECTORY` access fails then we should try opening without requesting that access. We may still be able to delete it if it's empty or a link.", "tree": {"sha": "db3e2c3656b64b4d4b6d6d1fdd6eddcba00e2b84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db3e2c3656b64b4d4b6d6d1fdd6eddcba00e2b84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddff7f0e50c1184c5cfa1a54c7bd2b6848ed85d6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmRLIcYACgkQcTRy8vRW\nJ943OhAAgFHsAhW6qEy9isELOiNSmH+eut5RCKBFuxRCOd9pid0ZtPtAqIQtC26N\nBO+pzozd/co2iJx5uTUUFm70zjiyT2bGVsq2Gok5VSWDg285GHRxkTI5VvcDfqQc\nB8PrCLZ51eilC+OwnVs850Y2Gy69+x5ypUKUQAbkklTa9prF28eS7ZnL6EOPhJFR\n6rQFubwjdrwAGW9DnFFCxxwZL8e8zUpzrXXsvhEp1q/Ga++OUCXbii8mvvBHZrxE\n4UatvXPvFJLOWYhDARoW0Bayn77TJwadnJaLELXQtT2nC6L/12PMtVDoKLzVjC6U\ngfkMEaoUg4XTd7lZBYMROjTDhWjUNE1G+fE6shOrwp3Iy7tpgv8QscMXV8ZQXAKN\naR2OtMevl/gaw8eEjo8OXxANkh8ixsvaAdVsQUaascuzwCAUZW54Yi/aQG9ZBb/i\nvDE3IxJdCzZo59k3Brp3rPk2pW1Qe60O4Gpyf/zq67rbdXICtngeH4jZ6MQThelw\n2K+cq9hYMu5Hhe2Qdka99BDVnlX7WS13DAXQLSa5UB1jxTuMP+U1XF7b7z85kLbm\nvxXh4ha1r+DqnV6fuLWIDCrfkPYnGoabC7sRw77oHOqUSD6tU6LaJZdUDspGXnQe\n3Rz/Ixu8tXaCBOOedMOL1JJJBQFtXggDYvjHSf6CwPcFzOmh9tc=\n=yz96\n-----END PGP SIGNATURE-----", "payload": "tree db3e2c3656b64b4d4b6d6d1fdd6eddcba00e2b84\nparent 1a6ae3d692cfb52b21d0f45ba50b659486e53d6c\nauthor Chris Denton <chris@chrisdenton.dev> 1682644740 +0100\ncommitter Chris Denton <chris@chrisdenton.dev> 1682645445 +0100\n\nremove_dir_all: delete directory with fewer perms\n\nIf opening a directory with `FILE_LIST_DIRECTORY` access fails then we should try opening without requesting that access. We may still be able to delete it if it's empty or a link.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddff7f0e50c1184c5cfa1a54c7bd2b6848ed85d6", "html_url": "https://github.com/rust-lang/rust/commit/ddff7f0e50c1184c5cfa1a54c7bd2b6848ed85d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddff7f0e50c1184c5cfa1a54c7bd2b6848ed85d6/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a6ae3d692cfb52b21d0f45ba50b659486e53d6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a6ae3d692cfb52b21d0f45ba50b659486e53d6c", "html_url": "https://github.com/rust-lang/rust/commit/1a6ae3d692cfb52b21d0f45ba50b659486e53d6c"}], "stats": {"total": 41, "additions": 22, "deletions": 19}, "files": [{"sha": "8ed62cdddcd9c33559cf0702300022575747356e", "filename": "library/std/src/sys/windows/fs.rs", "status": "modified", "additions": 22, "deletions": 19, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/ddff7f0e50c1184c5cfa1a54c7bd2b6848ed85d6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddff7f0e50c1184c5cfa1a54c7bd2b6848ed85d6/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs?ref=ddff7f0e50c1184c5cfa1a54c7bd2b6848ed85d6", "patch": "@@ -1132,26 +1132,29 @@ fn remove_dir_all_iterative(f: &File, delete: fn(&File) -> io::Result<()>) -> io\n                     &dir,\n                     &name,\n                     c::SYNCHRONIZE | c::DELETE | c::FILE_LIST_DIRECTORY,\n-                )?;\n-                dirlist.push(child_dir);\n-            } else {\n-                for i in 1..=MAX_RETRIES {\n-                    let result = open_link_no_reparse(&dir, &name, c::SYNCHRONIZE | c::DELETE);\n-                    match result {\n-                        Ok(f) => delete(&f)?,\n-                        // Already deleted, so skip.\n-                        Err(e) if e.kind() == io::ErrorKind::NotFound => break,\n-                        // Retry a few times if the file is locked or a delete is already in progress.\n-                        Err(e)\n-                            if i < MAX_RETRIES\n-                                && (e.raw_os_error() == Some(c::ERROR_DELETE_PENDING as _)\n-                                    || e.raw_os_error()\n-                                        == Some(c::ERROR_SHARING_VIOLATION as _)) => {}\n-                        // Otherwise return the error.\n-                        Err(e) => return Err(e),\n-                    }\n-                    thread::yield_now();\n+                );\n+                // On success, add the handle to the queue.\n+                // If opening the directory fails we treat it the same as a file\n+                if let Ok(child_dir) = child_dir {\n+                    dirlist.push(child_dir);\n+                    continue;\n+                }\n+            }\n+            for i in 1..=MAX_RETRIES {\n+                let result = open_link_no_reparse(&dir, &name, c::SYNCHRONIZE | c::DELETE);\n+                match result {\n+                    Ok(f) => delete(&f)?,\n+                    // Already deleted, so skip.\n+                    Err(e) if e.kind() == io::ErrorKind::NotFound => break,\n+                    // Retry a few times if the file is locked or a delete is already in progress.\n+                    Err(e)\n+                        if i < MAX_RETRIES\n+                            && (e.raw_os_error() == Some(c::ERROR_DELETE_PENDING as _)\n+                                || e.raw_os_error() == Some(c::ERROR_SHARING_VIOLATION as _)) => {}\n+                    // Otherwise return the error.\n+                    Err(e) => return Err(e),\n                 }\n+                thread::yield_now();\n             }\n         }\n         // If there were no more files then delete the directory."}]}