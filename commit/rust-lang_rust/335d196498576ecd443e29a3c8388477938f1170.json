{"sha": "335d196498576ecd443e29a3c8388477938f1170", "node_id": "C_kwDOAAsO6NoAKDMzNWQxOTY0OTg1NzZlY2Q0NDNlMjlhM2M4Mzg4NDc3OTM4ZjExNzA", "commit": {"author": {"name": "Martin Kr\u00f6ning", "email": "mkroening@posteo.net", "date": "2022-03-25T10:46:34Z"}, "committer": {"name": "Martin Kr\u00f6ning", "email": "mkroening@posteo.net", "date": "2022-03-25T10:52:11Z"}, "message": "Remove hermitkernel targets\n\nRustyHermit now maintains custom json targets, which are distributed with the kernel. [1]\n\n[1]: https://github.com/hermitcore/libhermit-rs/pull/395", "tree": {"sha": "01d8c5707f906bee3d7e8c891ca82ebbd3dd655e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01d8c5707f906bee3d7e8c891ca82ebbd3dd655e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/335d196498576ecd443e29a3c8388477938f1170", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/335d196498576ecd443e29a3c8388477938f1170", "html_url": "https://github.com/rust-lang/rust/commit/335d196498576ecd443e29a3c8388477938f1170", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/335d196498576ecd443e29a3c8388477938f1170/comments", "author": {"login": "mkroening", "id": 28776973, "node_id": "MDQ6VXNlcjI4Nzc2OTcz", "avatar_url": "https://avatars.githubusercontent.com/u/28776973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkroening", "html_url": "https://github.com/mkroening", "followers_url": "https://api.github.com/users/mkroening/followers", "following_url": "https://api.github.com/users/mkroening/following{/other_user}", "gists_url": "https://api.github.com/users/mkroening/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkroening/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkroening/subscriptions", "organizations_url": "https://api.github.com/users/mkroening/orgs", "repos_url": "https://api.github.com/users/mkroening/repos", "events_url": "https://api.github.com/users/mkroening/events{/privacy}", "received_events_url": "https://api.github.com/users/mkroening/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mkroening", "id": 28776973, "node_id": "MDQ6VXNlcjI4Nzc2OTcz", "avatar_url": "https://avatars.githubusercontent.com/u/28776973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkroening", "html_url": "https://github.com/mkroening", "followers_url": "https://api.github.com/users/mkroening/followers", "following_url": "https://api.github.com/users/mkroening/following{/other_user}", "gists_url": "https://api.github.com/users/mkroening/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkroening/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkroening/subscriptions", "organizations_url": "https://api.github.com/users/mkroening/orgs", "repos_url": "https://api.github.com/users/mkroening/repos", "events_url": "https://api.github.com/users/mkroening/events{/privacy}", "received_events_url": "https://api.github.com/users/mkroening/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a0c55046c7092d9e019dad03729e8d32e38df72", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a0c55046c7092d9e019dad03729e8d32e38df72", "html_url": "https://github.com/rust-lang/rust/commit/8a0c55046c7092d9e019dad03729e8d32e38df72"}], "stats": {"total": 142, "additions": 0, "deletions": 142}, "files": [{"sha": "6e9d6c6221ccc58ec8f7ef9bfe14231cd0c25aaf", "filename": "compiler/rustc_target/src/spec/aarch64_unknown_none_hermitkernel.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8a0c55046c7092d9e019dad03729e8d32e38df72/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_none_hermitkernel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a0c55046c7092d9e019dad03729e8d32e38df72/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_none_hermitkernel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_unknown_none_hermitkernel.rs?ref=8a0c55046c7092d9e019dad03729e8d32e38df72", "patch": "@@ -1,16 +0,0 @@\n-use crate::spec::Target;\n-\n-pub fn target() -> Target {\n-    let mut base = super::hermit_kernel_base::opts();\n-    base.max_atomic_width = Some(128);\n-    base.abi = \"softfloat\".to_string();\n-    base.features = \"+strict-align,-neon,-fp-armv8\".to_string();\n-\n-    Target {\n-        llvm_target: \"aarch64-unknown-hermit\".to_string(),\n-        pointer_width: 64,\n-        data_layout: \"e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128\".to_string(),\n-        arch: \"aarch64\".to_string(),\n-        options: base,\n-    }\n-}"}, {"sha": "ce3dad26458d0c3d113b4e63f76e4275466002c9", "filename": "compiler/rustc_target/src/spec/hermit_kernel_base.rs", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8a0c55046c7092d9e019dad03729e8d32e38df72/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhermit_kernel_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a0c55046c7092d9e019dad03729e8d32e38df72/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhermit_kernel_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhermit_kernel_base.rs?ref=8a0c55046c7092d9e019dad03729e8d32e38df72", "patch": "@@ -1,21 +0,0 @@\n-use crate::spec::{LinkArgs, LinkerFlavor, LldFlavor, PanicStrategy, TargetOptions};\n-\n-pub fn opts() -> TargetOptions {\n-    let mut pre_link_args = LinkArgs::new();\n-    pre_link_args.insert(\n-        LinkerFlavor::Lld(LldFlavor::Ld),\n-        vec![\"--build-id\".to_string(), \"--hash-style=gnu\".to_string(), \"--Bstatic\".to_string()],\n-    );\n-\n-    TargetOptions {\n-        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n-        disable_redzone: true,\n-        linker: Some(\"rust-lld\".to_owned()),\n-        executables: true,\n-        pre_link_args,\n-        panic_strategy: PanicStrategy::Abort,\n-        position_independent_executables: true,\n-        static_position_independent_executables: true,\n-        ..Default::default()\n-    }\n-}"}, {"sha": "f2ca28ba5f9351245b209a0c67b12b4620b3d955", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/335d196498576ecd443e29a3c8388477938f1170/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/335d196498576ecd443e29a3c8388477938f1170/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=335d196498576ecd443e29a3c8388477938f1170", "patch": "@@ -63,7 +63,6 @@ mod freebsd_base;\n mod fuchsia_base;\n mod haiku_base;\n mod hermit_base;\n-mod hermit_kernel_base;\n mod illumos_base;\n mod l4re_base;\n mod linux_base;\n@@ -971,9 +970,6 @@ supported_targets! {\n     (\"aarch64-unknown-hermit\", aarch64_unknown_hermit),\n     (\"x86_64-unknown-hermit\", x86_64_unknown_hermit),\n \n-    (\"aarch64-unknown-none-hermitkernel\", aarch64_unknown_none_hermitkernel),\n-    (\"x86_64-unknown-none-hermitkernel\", x86_64_unknown_none_hermitkernel),\n-\n     (\"riscv32i-unknown-none-elf\", riscv32i_unknown_none_elf),\n     (\"riscv32im-unknown-none-elf\", riscv32im_unknown_none_elf),\n     (\"riscv32imc-unknown-none-elf\", riscv32imc_unknown_none_elf),"}, {"sha": "359cb0f6881de502f3ec49bcafc5ce013bd104ce", "filename": "compiler/rustc_target/src/spec/x86_64_unknown_none_hermitkernel.rs", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8a0c55046c7092d9e019dad03729e8d32e38df72/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_none_hermitkernel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a0c55046c7092d9e019dad03729e8d32e38df72/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_none_hermitkernel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_none_hermitkernel.rs?ref=8a0c55046c7092d9e019dad03729e8d32e38df72", "patch": "@@ -1,21 +0,0 @@\n-use crate::spec::{StackProbeType, Target};\n-\n-pub fn target() -> Target {\n-    let mut base = super::hermit_kernel_base::opts();\n-    base.cpu = \"x86-64\".to_string();\n-    base.max_atomic_width = Some(64);\n-    base.features =\n-        \"-mmx,-sse,-sse2,-sse3,-ssse3,-sse4.1,-sse4.2,-3dnow,-3dnowa,-avx,-avx2,+soft-float\"\n-            .to_string();\n-    // don't use probe-stack=inline-asm until rust#83139 and rust#84667 are resolved\n-    base.stack_probes = StackProbeType::Call;\n-\n-    Target {\n-        llvm_target: \"x86_64-unknown-hermit\".to_string(),\n-        pointer_width: 64,\n-        data_layout: \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\n-            .to_string(),\n-        arch: \"x86_64\".to_string(),\n-        options: base,\n-    }\n-}"}, {"sha": "2cf26603273844f696a3b64923a0c1946f603f7b", "filename": "src/doc/rustc/src/SUMMARY.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/335d196498576ecd443e29a3c8388477938f1170/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/335d196498576ecd443e29a3c8388477938f1170/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md?ref=335d196498576ecd443e29a3c8388477938f1170", "patch": "@@ -17,7 +17,6 @@\n     - [aarch64-apple-ios-sim](platform-support/aarch64-apple-ios-sim.md)\n     - [armv7-unknown-linux-uclibceabi](platform-support/armv7-unknown-linux-uclibceabi.md)\n     - [armv7-unknown-linux-uclibceabihf](platform-support/armv7-unknown-linux-uclibceabihf.md)\n-    - [aarch64-unknown-none-hermitkernel](platform-support/aarch64-unknown-none-hermitkernel.md)\n     - [\\*-kmc-solid_\\*](platform-support/kmc-solid.md)\n     - [*-unknown-openbsd](platform-support/openbsd.md)\n     - [x86_64-unknown-none](platform-support/x86_64-unknown-none.md)"}, {"sha": "8fc5a0d312b06f110c1ea0eb6da63f92f14b8e25", "filename": "src/doc/rustc/src/platform-support.md", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/335d196498576ecd443e29a3c8388477938f1170/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "raw_url": "https://github.com/rust-lang/rust/raw/335d196498576ecd443e29a3c8388477938f1170/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md?ref=335d196498576ecd443e29a3c8388477938f1170", "patch": "@@ -207,7 +207,6 @@ target | std | host | notes\n [`aarch64-kmc-solid_asp3`](platform-support/kmc-solid.md) | \u2713 |  | ARM64 SOLID with TOPPERS/ASP3\n `aarch64-unknown-freebsd` | \u2713 | \u2713 | ARM64 FreeBSD\n `aarch64-unknown-hermit` | \u2713 |  | ARM64 HermitCore\n-[`aarch64-unknown-none-hermitkernel`](platform-support/aarch64-unknown-none-hermitkernel.md) | * |  | ARM64 HermitCore kernel\n `aarch64-unknown-uefi` | * |  | ARM64 UEFI\n `aarch64-unknown-linux-gnu_ilp32` | \u2713 | \u2713 | ARM64 Linux (ILP32 ABI)\n `aarch64-unknown-netbsd` | \u2713 | \u2713 |\n@@ -293,7 +292,6 @@ target | std | host | notes\n `x86_64-unknown-hermit` | \u2713 |  | HermitCore\n `x86_64-unknown-l4re-uclibc` | ? |  |\n [`x86_64-unknown-none`](platform-support/x86_64-unknown-none.md) | * |  | Freestanding/bare-metal x86_64, softfloat\n-`x86_64-unknown-none-hermitkernel` | * |  | HermitCore kernel\n `x86_64-unknown-none-linuxkernel` | * |  | Linux kernel modules\n [`x86_64-unknown-openbsd`](platform-support/openbsd.md) | \u2713 | \u2713 | 64-bit OpenBSD\n `x86_64-unknown-uefi` | * |  | 64-bit UEFI"}, {"sha": "b8967f631878c8d0230c0a686ef6e6cafd99b0d5", "filename": "src/doc/rustc/src/platform-support/aarch64-unknown-none-hermitkernel.md", "status": "removed", "additions": 0, "deletions": 77, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/8a0c55046c7092d9e019dad03729e8d32e38df72/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Faarch64-unknown-none-hermitkernel.md", "raw_url": "https://github.com/rust-lang/rust/raw/8a0c55046c7092d9e019dad03729e8d32e38df72/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Faarch64-unknown-none-hermitkernel.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Faarch64-unknown-none-hermitkernel.md?ref=8a0c55046c7092d9e019dad03729e8d32e38df72", "patch": "@@ -1,77 +0,0 @@\n-# `aarch64-unknown-none-hermitkernel`\n-\n-**Tier: 3**\n-\n-Required to build the kernel for [HermitCore](https://github.com/hermitcore/hermit-playground)\n-or [RustyHermit](https://github.com/hermitcore/rusty-hermit).\n-The result is a bare-metal aarch64 binary in ELF format.\n-\n-## Target maintainers\n-\n-- Stefan Lankes, https://github.com/stlankes\n-\n-## Requirements\n-\n-This target is cross-compiled. There is no support for `std`, but the\n-library operating system provides a simple allocator to use `alloc`.\n-\n-By default, Rust code generated for this target does not use any vector or\n-floating-point registers. This allows the generated code to build the library\n-operaring system, which may need to avoid the use of such\n-registers or which may have special considerations about the use of such\n-registers (e.g. saving and restoring them to avoid breaking userspace code\n-using the same registers). In contrast to `aarch64-unknown-none-softfloat`,\n-the target is completly relocatable, which is a required feature of RustyHermit.\n-\n-By default, code generated with this target should run on any `aarch64`\n-hardware; enabling additional target features may raise this baseline.\n-On `aarch64-unknown-none-hermitkernel`, `extern \"C\"` uses the [standard System V calling\n-convention](https://github.com/ARM-software/abi-aa/releases/download/2021Q3/sysvabi64.pdf),\n-without red zones.\n-\n-This target generated binaries in the ELF format.\n-\n-## Building the target\n-\n-Typical you should not use the target directly. The target `aarch64-unknown-hermit`\n-builds the _user space_ of RustyHermit and supports red zones and floating-point\n-operations.\n-To build and link the kernel to the application, the crate\n-[hermit-sys](https://github.com/hermitcore/rusty-hermit/tree/master/hermit-sys)\n-should be used by adding the following lines to the `Cargo.toml` file of\n-your application.\n-\n-```toml\n-[target.'cfg(target_os = \"hermit\")'.dependencies]\n-hermit-sys = \"0.1.*\"\n-```\n-\n-The crate `hermit-sys` uses the target `aarch64-unknown-none-hermitkernel`\n-to build the kernel.\n-\n-## Building Rust programs\n-\n-Rust does not yet ship pre-compiled artifacts for this target. To compile for\n-this target, you need to build the crate `hermit-sys` (see\n-\"Building the target\" above).\n-\n-## Testing\n-\n-As `aarch64-unknown-none-hermitkernel` does not support `std`\n-and does not support running any Rust testsuite.\n-\n-## Cross-compilation toolchains and C code\n-\n-If you want to compile C code along with Rust you will need an\n-appropriate `aarch64` toolchain.\n-\n-Rust *may* be able to use an `aarch64-linux-gnu-` toolchain with appropriate\n-standalone flags to build for this toolchain (depending on the assumptions of\n-that toolchain, see below), or you may wish to use a separate\n-`aarch64-unknown-none` (or `aarch64-elf-`) toolchain.\n-\n-On some `aarch64` hosts that use ELF binaries, you *may* be able to use the host\n-C toolchain, if it does not introduce assumptions about the host environment\n-that don't match the expectations of a standalone environment. Otherwise, you\n-may need a separate toolchain for standalone/freestanding development, just as\n-when cross-compiling from a non-`aarch64` platform."}]}