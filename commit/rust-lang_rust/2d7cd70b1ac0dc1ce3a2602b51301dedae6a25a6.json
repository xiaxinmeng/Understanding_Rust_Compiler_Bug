{"sha": "2d7cd70b1ac0dc1ce3a2602b51301dedae6a25a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkN2NkNzBiMWFjMGRjMWNlM2EyNjAyYjUxMzAxZGVkYWU2YTI1YTY=", "commit": {"author": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2018-06-02T14:11:57Z"}, "committer": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2018-06-02T14:46:25Z"}, "message": "add missing inline's and optimizations", "tree": {"sha": "c9fb87fd2d351d95172e76f2c2e9be386d87dd89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9fb87fd2d351d95172e76f2c2e9be386d87dd89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d7cd70b1ac0dc1ce3a2602b51301dedae6a25a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d7cd70b1ac0dc1ce3a2602b51301dedae6a25a6", "html_url": "https://github.com/rust-lang/rust/commit/2d7cd70b1ac0dc1ce3a2602b51301dedae6a25a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d7cd70b1ac0dc1ce3a2602b51301dedae6a25a6/comments", "author": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ff67ee0d7b4f9f962809a82d9078f353e200818", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ff67ee0d7b4f9f962809a82d9078f353e200818", "html_url": "https://github.com/rust-lang/rust/commit/6ff67ee0d7b4f9f962809a82d9078f353e200818"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "4a817ebc43b34f6013a81bc228515dde21b76699", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2d7cd70b1ac0dc1ce3a2602b51301dedae6a25a6/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d7cd70b1ac0dc1ce3a2602b51301dedae6a25a6/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=2d7cd70b1ac0dc1ce3a2602b51301dedae6a25a6", "patch": "@@ -244,7 +244,12 @@ impl Layout {\n             .ok_or(LayoutErr { private: () })?;\n         let alloc_size = padded_size.checked_mul(n)\n             .ok_or(LayoutErr { private: () })?;\n-        Ok((Layout::from_size_align(alloc_size, self.align())?, padded_size))\n+\n+        unsafe {\n+            // self.align is already known to be valid and alloc_size has been\n+            // padded already.\n+            Ok((Layout::from_size_align_unchecked(alloc_size, self.align()), padded_size))\n+        }\n     }\n \n     /// Creates a layout describing the record for `self` followed by\n@@ -258,11 +263,10 @@ impl Layout {\n     /// (assuming that the record itself starts at offset 0).\n     ///\n     /// On arithmetic overflow, returns `LayoutErr`.\n+    #[inline]\n     pub fn extend(&self, next: Self) -> Result<(Self, usize), LayoutErr> {\n         let new_align = cmp::max(self.align(), next.align());\n-        let realigned = Layout::from_size_align(self.size(), new_align)?;\n-\n-        let pad = realigned.padding_needed_for(next.align());\n+        let pad = self.padding_needed_for(next.align());\n \n         let offset = self.size().checked_add(pad)\n             .ok_or(LayoutErr { private: () })?;\n@@ -285,6 +289,7 @@ impl Layout {\n     /// aligned.\n     ///\n     /// On arithmetic overflow, returns `LayoutErr`.\n+    #[inline]\n     pub fn repeat_packed(&self, n: usize) -> Result<Self, LayoutErr> {\n         let size = self.size().checked_mul(n).ok_or(LayoutErr { private: () })?;\n         Layout::from_size_align(size, self.align())\n@@ -305,6 +310,7 @@ impl Layout {\n     ///  `extend`.)\n     ///\n     /// On arithmetic overflow, returns `LayoutErr`.\n+    #[inline]\n     pub fn extend_packed(&self, next: Self) -> Result<(Self, usize), LayoutErr> {\n         let new_size = self.size().checked_add(next.size())\n             .ok_or(LayoutErr { private: () })?;\n@@ -315,6 +321,7 @@ impl Layout {\n     /// Creates a layout describing the record for a `[T; n]`.\n     ///\n     /// On arithmetic overflow, returns `LayoutErr`.\n+    #[inline]\n     pub fn array<T>(n: usize) -> Result<Self, LayoutErr> {\n         Layout::new::<T>()\n             .repeat(n)"}]}