{"sha": "cc1a6b99b0fd5440d528283116c4e94b6a8df4c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjMWE2Yjk5YjBmZDU0NDBkNTI4MjgzMTE2YzRlOTRiNmE4ZGY0YzY=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-07-31T20:24:31Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-08-03T17:09:36Z"}, "message": "Delete dummy crate store", "tree": {"sha": "2fa3f4097f5c08a7f1fb684548dfebc4d850d326", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fa3f4097f5c08a7f1fb684548dfebc4d850d326"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc1a6b99b0fd5440d528283116c4e94b6a8df4c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc1a6b99b0fd5440d528283116c4e94b6a8df4c6", "html_url": "https://github.com/rust-lang/rust/commit/cc1a6b99b0fd5440d528283116c4e94b6a8df4c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc1a6b99b0fd5440d528283116c4e94b6a8df4c6/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4beecaed36f6c8ba8f73f06d89fd20267887749", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4beecaed36f6c8ba8f73f06d89fd20267887749", "html_url": "https://github.com/rust-lang/rust/commit/d4beecaed36f6c8ba8f73f06d89fd20267887749"}], "stats": {"total": 63, "additions": 0, "deletions": 63}, "files": [{"sha": "793a3f2abc140b7211bddf63d964ce3a8b7bc4c7", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/cc1a6b99b0fd5440d528283116c4e94b6a8df4c6/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc1a6b99b0fd5440d528283116c4e94b6a8df4c6/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=cc1a6b99b0fd5440d528283116c4e94b6a8df4c6", "patch": "@@ -260,69 +260,6 @@ pub trait CrateStore {\n \n pub type CrateStoreDyn = dyn CrateStore + sync::Sync;\n \n-/// A dummy crate store that does not support any non-local crates,\n-/// for test purposes.\n-pub struct DummyCrateStore;\n-\n-#[allow(unused_variables)]\n-impl CrateStore for DummyCrateStore {\n-    fn crate_data_as_rc_any(&self, krate: CrateNum) -> Lrc<dyn Any>\n-        { bug!(\"crate_data_as_rc_any\") }\n-    // item info\n-    fn visibility_untracked(&self, def: DefId) -> ty::Visibility { bug!(\"visibility\") }\n-    fn item_generics_cloned_untracked(&self, def: DefId, sess: &Session) -> ty::Generics\n-        { bug!(\"item_generics_cloned\") }\n-\n-    // trait/impl-item info\n-    fn associated_item_cloned_untracked(&self, def: DefId) -> ty::AssociatedItem\n-        { bug!(\"associated_item_cloned\") }\n-\n-    // crate metadata\n-    fn dep_kind_untracked(&self, cnum: CrateNum) -> DepKind { bug!(\"is_explicitly_linked\") }\n-    fn export_macros_untracked(&self, cnum: CrateNum) { bug!(\"export_macros\") }\n-    fn crate_name_untracked(&self, cnum: CrateNum) -> Symbol { bug!(\"crate_name\") }\n-    fn crate_disambiguator_untracked(&self, cnum: CrateNum) -> CrateDisambiguator {\n-        bug!(\"crate_disambiguator\")\n-    }\n-    fn crate_hash_untracked(&self, cnum: CrateNum) -> Svh { bug!(\"crate_hash\") }\n-    fn crate_edition_untracked(&self, cnum: CrateNum) -> Edition { bug!(\"crate_edition_untracked\") }\n-\n-    // resolve\n-    fn def_key(&self, def: DefId) -> DefKey { bug!(\"def_key\") }\n-    fn def_path(&self, def: DefId) -> hir_map::DefPath {\n-        bug!(\"relative_def_path\")\n-    }\n-    fn def_path_hash(&self, def: DefId) -> hir_map::DefPathHash {\n-        bug!(\"def_path_hash\")\n-    }\n-    fn def_path_table(&self, cnum: CrateNum) -> Lrc<DefPathTable> {\n-        bug!(\"def_path_table\")\n-    }\n-    fn struct_field_names_untracked(&self, def: DefId) -> Vec<ast::Name> {\n-        bug!(\"struct_field_names\")\n-    }\n-    fn item_children_untracked(&self, did: DefId, sess: &Session) -> Vec<def::Export> {\n-        bug!(\"item_children\")\n-    }\n-    fn load_macro_untracked(&self, did: DefId, sess: &Session) -> LoadedMacro { bug!(\"load_macro\") }\n-\n-    fn crates_untracked(&self) -> Vec<CrateNum> { vec![] }\n-\n-    // utility functions\n-    fn extern_mod_stmt_cnum_untracked(&self, emod_id: ast::NodeId) -> Option<CrateNum> { None }\n-    fn encode_metadata<'a, 'tcx>(&self,\n-                                 tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-                                 link_meta: &LinkMeta)\n-                                 -> EncodedMetadata {\n-        bug!(\"encode_metadata\")\n-    }\n-    fn metadata_encoding_version(&self) -> &[u8] { bug!(\"metadata_encoding_version\") }\n-    fn postorder_cnums_untracked(&self) -> Vec<CrateNum> { bug!(\"postorder_cnums_untracked\") }\n-\n-    // access to the metadata loader\n-    fn metadata_loader(&self) -> &dyn MetadataLoader { bug!(\"metadata_loader\") }\n-}\n-\n pub trait CrateLoader {\n     fn process_extern_crate(&mut self, item: &ast::Item, defs: &Definitions) -> CrateNum;\n "}]}