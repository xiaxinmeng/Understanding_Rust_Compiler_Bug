{"sha": "01209f1e3aed4cd0960fe81dd1d1470650ae8b85", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxMjA5ZjFlM2FlZDRjZDA5NjBmZTgxZGQxZDE0NzA2NTBhZThiODU=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-12-09T22:45:53Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-12-29T18:27:59Z"}, "message": "Add method .as_mut_slice() to MutableVector\n\nThis method is primarily intended to allow for converting a [T, ..N] to\na &mut [T].", "tree": {"sha": "c24728d17fbfd1e9c90f61e6585f411b46750fb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c24728d17fbfd1e9c90f61e6585f411b46750fb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01209f1e3aed4cd0960fe81dd1d1470650ae8b85", "comment_count": 17, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01209f1e3aed4cd0960fe81dd1d1470650ae8b85", "html_url": "https://github.com/rust-lang/rust/commit/01209f1e3aed4cd0960fe81dd1d1470650ae8b85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01209f1e3aed4cd0960fe81dd1d1470650ae8b85/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa5d779a3590b1ed1559e0489138040a71ae688b", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa5d779a3590b1ed1559e0489138040a71ae688b", "html_url": "https://github.com/rust-lang/rust/commit/aa5d779a3590b1ed1559e0489138040a71ae688b"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "450cf1a4ef25cc1ed282e793f2941b42aab6d51e", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/01209f1e3aed4cd0960fe81dd1d1470650ae8b85/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01209f1e3aed4cd0960fe81dd1d1470650ae8b85/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=01209f1e3aed4cd0960fe81dd1d1470650ae8b85", "patch": "@@ -2069,6 +2069,10 @@ fn merge_sort<T>(v: &mut [T], compare: |&T, &T| -> Ordering) {\n /// Extension methods for vectors such that their elements are\n /// mutable.\n pub trait MutableVector<'a, T> {\n+    /// Work with `self` as a mut slice.\n+    /// Primarily intended for getting a &mut [T] from a [T, ..N].\n+    fn as_mut_slice(self) -> &'a mut [T];\n+\n     /// Return a slice that points into another slice.\n     fn mut_slice(self, start: uint, end: uint) -> &'a mut [T];\n \n@@ -2302,6 +2306,8 @@ pub trait MutableVector<'a, T> {\n \n impl<'a,T> MutableVector<'a, T> for &'a mut [T] {\n     #[inline]\n+    fn as_mut_slice(self) -> &'a mut [T] { self }\n+\n     fn mut_slice(self, start: uint, end: uint) -> &'a mut [T] {\n         assert!(start <= end);\n         assert!(end <= self.len());"}]}