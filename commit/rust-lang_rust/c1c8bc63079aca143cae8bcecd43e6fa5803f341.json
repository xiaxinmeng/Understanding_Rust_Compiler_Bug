{"sha": "c1c8bc63079aca143cae8bcecd43e6fa5803f341", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxYzhiYzYzMDc5YWNhMTQzY2FlOGJjZWNkNDNlNmZhNTgwM2YzNDE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-16T20:15:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-16T20:15:56Z"}, "message": "Auto merge of #5473 - Toxyxer:map-flatten-for-option, r=flip1995\n\nMap flatten for option\n\nFixes #5175\n\nchangelog:\n- Trigger the map_flatten lint when map is called on an option\n- Add test for such case", "tree": {"sha": "6878e813096362ba3043c368a554c00bc7e868aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6878e813096362ba3043c368a554c00bc7e868aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1c8bc63079aca143cae8bcecd43e6fa5803f341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1c8bc63079aca143cae8bcecd43e6fa5803f341", "html_url": "https://github.com/rust-lang/rust/commit/c1c8bc63079aca143cae8bcecd43e6fa5803f341", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1c8bc63079aca143cae8bcecd43e6fa5803f341/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3704954bd16838383a00b14e078a03c92de42ace", "url": "https://api.github.com/repos/rust-lang/rust/commits/3704954bd16838383a00b14e078a03c92de42ace", "html_url": "https://github.com/rust-lang/rust/commit/3704954bd16838383a00b14e078a03c92de42ace"}, {"sha": "72a8fc24e600c7a2b01799b824af8c9c8d67de1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/72a8fc24e600c7a2b01799b824af8c9c8d67de1f", "html_url": "https://github.com/rust-lang/rust/commit/72a8fc24e600c7a2b01799b824af8c9c8d67de1f"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "608b351c3e1f55526cda89719aa610aff90c5361", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c1c8bc63079aca143cae8bcecd43e6fa5803f341/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1c8bc63079aca143cae8bcecd43e6fa5803f341/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=c1c8bc63079aca143cae8bcecd43e6fa5803f341", "patch": "@@ -2484,7 +2484,7 @@ fn lint_ok_expect(cx: &LateContext<'_, '_>, expr: &hir::Expr<'_>, ok_args: &[hir\n     }\n }\n \n-/// lint use of `map().flatten()` for `Iterators`\n+/// lint use of `map().flatten()` for `Iterators` and 'Options'\n fn lint_map_flatten<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx hir::Expr<'_>, map_args: &'tcx [hir::Expr<'_>]) {\n     // lint if caller of `.map().flatten()` is an Iterator\n     if match_trait_method(cx, expr, &paths::ITERATOR) {\n@@ -2503,6 +2503,24 @@ fn lint_map_flatten<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx hir::Expr<\n             Applicability::MachineApplicable,\n         );\n     }\n+\n+    // lint if caller of `.map().flatten()` is an Option\n+    if match_type(cx, cx.tables.expr_ty(&map_args[0]), &paths::OPTION) {\n+        let msg = \"called `map(..).flatten()` on an `Option`. \\\n+                    This is more succinctly expressed by calling `.and_then(..)`\";\n+        let self_snippet = snippet(cx, map_args[0].span, \"..\");\n+        let func_snippet = snippet(cx, map_args[1].span, \"..\");\n+        let hint = format!(\"{0}.and_then({1})\", self_snippet, func_snippet);\n+        span_lint_and_sugg(\n+            cx,\n+            MAP_FLATTEN,\n+            expr.span,\n+            msg,\n+            \"try using `and_then` instead\",\n+            hint,\n+            Applicability::MachineApplicable,\n+        );\n+    }\n }\n \n /// lint use of `map().unwrap_or_else()` for `Option`s and `Result`s"}, {"sha": "7ac368878ab7ea341ea7c71c4896eb7be5cf6813", "filename": "tests/ui/map_flatten.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c1c8bc63079aca143cae8bcecd43e6fa5803f341/tests%2Fui%2Fmap_flatten.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c1c8bc63079aca143cae8bcecd43e6fa5803f341/tests%2Fui%2Fmap_flatten.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_flatten.fixed?ref=c1c8bc63079aca143cae8bcecd43e6fa5803f341", "patch": "@@ -5,4 +5,5 @@\n \n fn main() {\n     let _: Vec<_> = vec![5_i8; 6].into_iter().flat_map(|x| 0..x).collect();\n+    let _: Option<_> = (Some(Some(1))).and_then(|x| x);\n }"}, {"sha": "a608601039ce783c80e3dfa2a3abdc4d94ea5dc5", "filename": "tests/ui/map_flatten.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c1c8bc63079aca143cae8bcecd43e6fa5803f341/tests%2Fui%2Fmap_flatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1c8bc63079aca143cae8bcecd43e6fa5803f341/tests%2Fui%2Fmap_flatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_flatten.rs?ref=c1c8bc63079aca143cae8bcecd43e6fa5803f341", "patch": "@@ -5,4 +5,5 @@\n \n fn main() {\n     let _: Vec<_> = vec![5_i8; 6].into_iter().map(|x| 0..x).flatten().collect();\n+    let _: Option<_> = (Some(Some(1))).map(|x| x).flatten();\n }"}, {"sha": "3cf2abd5b6d85a506a47e9fda694420c36bc3aff", "filename": "tests/ui/map_flatten.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c1c8bc63079aca143cae8bcecd43e6fa5803f341/tests%2Fui%2Fmap_flatten.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c1c8bc63079aca143cae8bcecd43e6fa5803f341/tests%2Fui%2Fmap_flatten.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_flatten.stderr?ref=c1c8bc63079aca143cae8bcecd43e6fa5803f341", "patch": "@@ -6,5 +6,11 @@ LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(|x| 0..x).flatten().colle\n    |\n    = note: `-D clippy::map-flatten` implied by `-D warnings`\n \n-error: aborting due to previous error\n+error: called `map(..).flatten()` on an `Option`. This is more succinctly expressed by calling `.and_then(..)`\n+  --> $DIR/map_flatten.rs:8:24\n+   |\n+LL |     let _: Option<_> = (Some(Some(1))).map(|x| x).flatten();\n+   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `and_then` instead: `(Some(Some(1))).and_then(|x| x)`\n+\n+error: aborting due to 2 previous errors\n "}]}