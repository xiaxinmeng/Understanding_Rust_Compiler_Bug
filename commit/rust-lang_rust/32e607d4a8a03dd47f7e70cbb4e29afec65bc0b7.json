{"sha": "32e607d4a8a03dd47f7e70cbb4e29afec65bc0b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyZTYwN2Q0YThhMDNkZDQ3ZjdlNzBjYmI0ZTI5YWZlYzY1YmMwYjc=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-07-24T15:16:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-24T15:16:34Z"}, "message": "Rollup merge of #43374 - stjepang:fix-sort-randomization-comment, r=alexcrichton\n\nClarify that sort_unstable is deterministic\n\n@frankmcsherry complained that the documentation said \"it is randomized but deterministic\", which is a contradictory statement.\n\nThis PR uses a different and clearer wording.", "tree": {"sha": "028642fd6161e199fd0bc420aae0cfb8bd8692da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/028642fd6161e199fd0bc420aae0cfb8bd8692da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32e607d4a8a03dd47f7e70cbb4e29afec65bc0b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32e607d4a8a03dd47f7e70cbb4e29afec65bc0b7", "html_url": "https://github.com/rust-lang/rust/commit/32e607d4a8a03dd47f7e70cbb4e29afec65bc0b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32e607d4a8a03dd47f7e70cbb4e29afec65bc0b7/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1537da0e8e87c66ed4934b6ea245736a6bb63b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1537da0e8e87c66ed4934b6ea245736a6bb63b7", "html_url": "https://github.com/rust-lang/rust/commit/f1537da0e8e87c66ed4934b6ea245736a6bb63b7"}, {"sha": "9a510553ee7657ac0dfcbad81e0b1df4953005e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a510553ee7657ac0dfcbad81e0b1df4953005e4", "html_url": "https://github.com/rust-lang/rust/commit/9a510553ee7657ac0dfcbad81e0b1df4953005e4"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "ec7a2b6d0e8d92595fe8154b03e0e7b72887e3d8", "filename": "src/liballoc/slice.rs", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/32e607d4a8a03dd47f7e70cbb4e29afec65bc0b7/src%2Fliballoc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32e607d4a8a03dd47f7e70cbb4e29afec65bc0b7/src%2Fliballoc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fslice.rs?ref=32e607d4a8a03dd47f7e70cbb4e29afec65bc0b7", "patch": "@@ -1252,12 +1252,13 @@ impl<T> [T] {\n     ///\n     /// # Current implementation\n     ///\n-    /// The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],\n-    /// which is a quicksort variant designed to be very fast on certain kinds of patterns,\n-    /// sometimes achieving linear time. It is randomized but deterministic, and falls back to\n-    /// heapsort on degenerate inputs.\n+    /// The current algorithm is based on [pattern-defeating quicksort][pdqsort] by Orson Peters,\n+    /// which combines the fast average case of randomized quicksort with the fast worst case of\n+    /// heapsort, while achieving linear time on slices with certain patterns. It uses some\n+    /// randomization to avoid degenerate cases, but with a fixed seed to always provide\n+    /// deterministic behavior.\n     ///\n-    /// It is generally faster than stable sorting, except in a few special cases, e.g. when the\n+    /// It is typically faster than stable sorting, except in a few special cases, e.g. when the\n     /// slice consists of several concatenated sorted sequences.\n     ///\n     /// # Examples\n@@ -1286,12 +1287,13 @@ impl<T> [T] {\n     ///\n     /// # Current implementation\n     ///\n-    /// The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],\n-    /// which is a quicksort variant designed to be very fast on certain kinds of patterns,\n-    /// sometimes achieving linear time. It is randomized but deterministic, and falls back to\n-    /// heapsort on degenerate inputs.\n+    /// The current algorithm is based on [pattern-defeating quicksort][pdqsort] by Orson Peters,\n+    /// which combines the fast average case of randomized quicksort with the fast worst case of\n+    /// heapsort, while achieving linear time on slices with certain patterns. It uses some\n+    /// randomization to avoid degenerate cases, but with a fixed seed to always provide\n+    /// deterministic behavior.\n     ///\n-    /// It is generally faster than stable sorting, except in a few special cases, e.g. when the\n+    /// It is typically faster than stable sorting, except in a few special cases, e.g. when the\n     /// slice consists of several concatenated sorted sequences.\n     ///\n     /// # Examples\n@@ -1323,12 +1325,13 @@ impl<T> [T] {\n     ///\n     /// # Current implementation\n     ///\n-    /// The current algorithm is based on Orson Peters' [pattern-defeating quicksort][pdqsort],\n-    /// which is a quicksort variant designed to be very fast on certain kinds of patterns,\n-    /// sometimes achieving linear time. It is randomized but deterministic, and falls back to\n-    /// heapsort on degenerate inputs.\n+    /// The current algorithm is based on [pattern-defeating quicksort][pdqsort] by Orson Peters,\n+    /// which combines the fast average case of randomized quicksort with the fast worst case of\n+    /// heapsort, while achieving linear time on slices with certain patterns. It uses some\n+    /// randomization to avoid degenerate cases, but with a fixed seed to always provide\n+    /// deterministic behavior.\n     ///\n-    /// It is generally faster than stable sorting, except in a few special cases, e.g. when the\n+    /// It is typically faster than stable sorting, except in a few special cases, e.g. when the\n     /// slice consists of several concatenated sorted sequences.\n     ///\n     /// # Examples"}]}