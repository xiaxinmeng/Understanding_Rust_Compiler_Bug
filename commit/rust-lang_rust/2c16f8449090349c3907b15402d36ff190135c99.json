{"sha": "2c16f8449090349c3907b15402d36ff190135c99", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMTZmODQ0OTA5MDM0OWMzOTA3YjE1NDAyZDM2ZmYxOTAxMzVjOTk=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-10-16T16:03:21Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-10-24T17:50:11Z"}, "message": "rustc_driver: Remove unnecessary use of crate store", "tree": {"sha": "aae17abc89e08794f57e0755102fc326a47e5311", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aae17abc89e08794f57e0755102fc326a47e5311"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c16f8449090349c3907b15402d36ff190135c99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c16f8449090349c3907b15402d36ff190135c99", "html_url": "https://github.com/rust-lang/rust/commit/2c16f8449090349c3907b15402d36ff190135c99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c16f8449090349c3907b15402d36ff190135c99/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e0007f829661e57d008d2e908c95f6e84b04b25", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e0007f829661e57d008d2e908c95f6e84b04b25", "html_url": "https://github.com/rust-lang/rust/commit/8e0007f829661e57d008d2e908c95f6e84b04b25"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "15adf7e4add73ac640d0514729ca8e9a4043a82f", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2c16f8449090349c3907b15402d36ff190135c99/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c16f8449090349c3907b15402d36ff190135c99/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=2c16f8449090349c3907b15402d36ff190135c99", "patch": "@@ -36,11 +36,11 @@ use rustc::session::config::nightly_options;\n use rustc::session::{early_error, early_warn};\n use rustc::lint::Lint;\n use rustc::lint;\n+use rustc::middle::cstore::MetadataLoader;\n use rustc::hir::def_id::LOCAL_CRATE;\n use rustc::ty::TyCtxt;\n use rustc::util::common::{set_time_depth, time, print_time_passes_entry, ErrorReported};\n use rustc_metadata::locator;\n-use rustc_metadata::cstore::CStore;\n use rustc_codegen_utils::codegen_backend::CodegenBackend;\n use rustc_interface::interface;\n use rustc_interface::util::get_codegen_sysroot;\n@@ -277,7 +277,7 @@ pub fn run_compiler(\n             compiler.output_file(),\n         ).and_then(|| RustcDefaultCalls::list_metadata(\n             sess,\n-            compiler.cstore(),\n+            &*compiler.codegen_backend().metadata_loader(),\n             &matches,\n             compiler.input()\n         ));\n@@ -614,7 +614,7 @@ fn show_content_with_pager(content: &String) {\n \n impl RustcDefaultCalls {\n     pub fn list_metadata(sess: &Session,\n-                         cstore: &CStore,\n+                         metadata_loader: &dyn MetadataLoader,\n                          matches: &getopts::Matches,\n                          input: &Input)\n                          -> Compilation {\n@@ -626,7 +626,7 @@ impl RustcDefaultCalls {\n                     let mut v = Vec::new();\n                     locator::list_file_metadata(&sess.target.target,\n                                                 path,\n-                                                cstore,\n+                                                metadata_loader,\n                                                 &mut v)\n                             .unwrap();\n                     println!(\"{}\", String::from_utf8(v).unwrap());"}, {"sha": "b9f7879203815d809baaa12be6023e40479f9fe1", "filename": "src/librustc_metadata/locator.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2c16f8449090349c3907b15402d36ff190135c99/src%2Flibrustc_metadata%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c16f8449090349c3907b15402d36ff190135c99/src%2Flibrustc_metadata%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flocator.rs?ref=2c16f8449090349c3907b15402d36ff190135c99", "patch": "@@ -212,7 +212,7 @@\n //! no means all of the necessary details. Take a look at the rest of\n //! metadata::locator or metadata::creader for all the juicy details!\n \n-use crate::cstore::{MetadataBlob, CStore};\n+use crate::cstore::MetadataBlob;\n use crate::creader::Library;\n use crate::schema::{METADATA_HEADER, rustc_version};\n \n@@ -914,7 +914,7 @@ fn get_metadata_section_imp(target: &Target,\n /// A diagnostic function for dumping crate metadata to an output stream.\n pub fn list_file_metadata(target: &Target,\n                           path: &Path,\n-                          cstore: &CStore,\n+                          metadata_loader: &dyn MetadataLoader,\n                           out: &mut dyn io::Write)\n                           -> io::Result<()> {\n     let filename = path.file_name().unwrap().to_str().unwrap();\n@@ -925,7 +925,7 @@ pub fn list_file_metadata(target: &Target,\n     } else {\n         CrateFlavor::Dylib\n     };\n-    match get_metadata_section(target, flavor, path, &*cstore.metadata_loader) {\n+    match get_metadata_section(target, flavor, path, metadata_loader) {\n         Ok(metadata) => metadata.list_crate_metadata(out),\n         Err(msg) => write!(out, \"{}\\n\", msg),\n     }"}]}