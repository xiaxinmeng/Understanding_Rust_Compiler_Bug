{"sha": "ac0458a597674a4afc01a11b97b6b6385727050d", "node_id": "C_kwDOAAsO6NoAKGFjMDQ1OGE1OTc2NzRhNGFmYzAxYTExYjk3YjZiNjM4NTcyNzA1MGQ", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-03-21T17:26:02Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-03-21T17:47:37Z"}, "message": "stall on on constants that contain infer vars in const_eval_resolve", "tree": {"sha": "57ff2360e7cb9f54102adc6c55adbd3ce52154d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57ff2360e7cb9f54102adc6c55adbd3ce52154d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac0458a597674a4afc01a11b97b6b6385727050d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac0458a597674a4afc01a11b97b6b6385727050d", "html_url": "https://github.com/rust-lang/rust/commit/ac0458a597674a4afc01a11b97b6b6385727050d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac0458a597674a4afc01a11b97b6b6385727050d/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47f78a2487010d884bd40af173fddd4ac9d9aba8", "url": "https://api.github.com/repos/rust-lang/rust/commits/47f78a2487010d884bd40af173fddd4ac9d9aba8", "html_url": "https://github.com/rust-lang/rust/commit/47f78a2487010d884bd40af173fddd4ac9d9aba8"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "155ee210ebe38d0f737763743e6b58b7b76cdf51", "filename": "compiler/rustc_middle/src/mir/interpret/queries.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ac0458a597674a4afc01a11b97b6b6385727050d/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac0458a597674a4afc01a11b97b6b6385727050d/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fqueries.rs?ref=ac0458a597674a4afc01a11b97b6b6385727050d", "patch": "@@ -1,6 +1,7 @@\n use super::{ErrorHandled, EvalToConstValueResult, GlobalId};\n \n use crate::mir;\n+use crate::ty::fold::TypeFoldable;\n use crate::ty::subst::InternalSubsts;\n use crate::ty::{self, TyCtxt};\n use rustc_hir::def_id::DefId;\n@@ -38,6 +39,13 @@ impl<'tcx> TyCtxt<'tcx> {\n         ct: ty::Unevaluated<'tcx>,\n         span: Option<Span>,\n     ) -> EvalToConstValueResult<'tcx> {\n+        // Cannot resolve `Unevaluated` constants that contain inference\n+        // variables. We reject those here since `resolve_opt_const_arg`\n+        // would fail otherwise\n+        if ct.substs.has_infer_types_or_consts() {\n+            return Err(ErrorHandled::TooGeneric);\n+        }\n+\n         match ty::Instance::resolve_opt_const_arg(self, param_env, ct.def, ct.substs) {\n             Ok(Some(instance)) => {\n                 let cid = GlobalId { instance, promoted: ct.promoted };"}]}