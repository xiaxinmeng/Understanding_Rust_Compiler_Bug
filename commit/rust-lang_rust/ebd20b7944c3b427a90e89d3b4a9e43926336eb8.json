{"sha": "ebd20b7944c3b427a90e89d3b4a9e43926336eb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViZDIwYjc5NDRjM2I0MjdhOTBlODlkM2I0YTllNDM5MjYzMzZlYjg=", "commit": {"author": {"name": "Zack Corr", "email": "zack@z0w0.me", "date": "2013-02-09T09:19:31Z"}, "committer": {"name": "Zack Corr", "email": "zack@z0w0.me", "date": "2013-02-09T09:19:31Z"}, "message": "Rename dec/inc_weak_task_count to inc/dec_live_count and remove register_task/unregister_task. Closes #4768", "tree": {"sha": "f09f4e4139ff0a5b6199e6bd6c9a77970c4fc7d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f09f4e4139ff0a5b6199e6bd6c9a77970c4fc7d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebd20b7944c3b427a90e89d3b4a9e43926336eb8", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebd20b7944c3b427a90e89d3b4a9e43926336eb8", "html_url": "https://github.com/rust-lang/rust/commit/ebd20b7944c3b427a90e89d3b4a9e43926336eb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebd20b7944c3b427a90e89d3b4a9e43926336eb8/comments", "author": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c2b4edff5009ff4d2330723d9acbc85af4b12ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c2b4edff5009ff4d2330723d9acbc85af4b12ab", "html_url": "https://github.com/rust-lang/rust/commit/0c2b4edff5009ff4d2330723d9acbc85af4b12ab"}], "stats": {"total": 71, "additions": 26, "deletions": 45}, "files": [{"sha": "1002fdb0c8c3e9778d9ff0e723bd5261550ad515", "filename": "src/libcore/private/weak_task.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ebd20b7944c3b427a90e89d3b4a9e43926336eb8/src%2Flibcore%2Fprivate%2Fweak_task.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebd20b7944c3b427a90e89d3b4a9e43926336eb8/src%2Flibcore%2Fprivate%2Fweak_task.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprivate%2Fweak_task.rs?ref=ebd20b7944c3b427a90e89d3b4a9e43926336eb8", "patch": "@@ -40,12 +40,12 @@ pub unsafe fn weaken_task(f: &fn(Port<ShutdownMsg>)) {\n     let task = get_task_id();\n     // Expect the weak task service to be alive\n     assert service.try_send(RegisterWeakTask(task, shutdown_chan));\n-    unsafe { rust_inc_weak_task_count(); }\n+    unsafe { rust_inc_kernel_live_count(); }\n     do fn&() {\n         let shutdown_port = swap_unwrap(&mut *shutdown_port);\n         f(shutdown_port)\n     }.finally || {\n-        unsafe { rust_dec_weak_task_count(); }\n+        unsafe { rust_dec_kernel_live_count(); }\n         // Service my have already exited\n         service.send(UnregisterWeakTask(task));\n     }\n@@ -78,11 +78,11 @@ fn create_global_service() -> ~WeakTaskService {\n             let port = swap_unwrap(&mut *port);\n             // The weak task service is itself a weak task\n             debug!(\"weakening the weak service task\");\n-            unsafe { rust_inc_weak_task_count(); }\n+            unsafe { rust_inc_kernel_live_count(); }\n             run_weak_task_service(port);\n         }.finally {\n             debug!(\"unweakening the weak service task\");\n-            unsafe { rust_dec_weak_task_count(); }\n+            unsafe { rust_dec_kernel_live_count(); }\n         }\n     }\n \n@@ -126,8 +126,8 @@ fn run_weak_task_service(port: Port<ServiceMsg>) {\n }\n \n extern {\n-    unsafe fn rust_inc_weak_task_count();\n-    unsafe fn rust_dec_weak_task_count();\n+    unsafe fn rust_inc_kernel_live_count();\n+    unsafe fn rust_dec_kernel_live_count();\n }\n \n #[test]"}, {"sha": "df54e47770bcaf07d8984839939b8e09a11e67f7", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ebd20b7944c3b427a90e89d3b4a9e43926336eb8/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/ebd20b7944c3b427a90e89d3b4a9e43926336eb8/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=ebd20b7944c3b427a90e89d3b4a9e43926336eb8", "patch": "@@ -945,15 +945,15 @@ rust_get_global_data_ptr() {\n }\n \n extern \"C\" void\n-rust_inc_weak_task_count() {\n+rust_inc_kernel_live_count() {\n     rust_task *task = rust_get_current_task();\n-    task->kernel->inc_weak_task_count();\n+    task->kernel->inc_live_count();\n }\n \n extern \"C\" void\n-rust_dec_weak_task_count() {\n+rust_dec_kernel_live_count() {\n     rust_task *task = rust_get_current_task();\n-    task->kernel->dec_weak_task_count();\n+    task->kernel->dec_live_count();\n }\n \n //"}, {"sha": "6b7a82414161cb791514037214fccb92705d2555", "filename": "src/rt/rust_kernel.cpp", "status": "modified", "additions": 10, "deletions": 27, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/ebd20b7944c3b427a90e89d3b4a9e43926336eb8/src%2Frt%2Frust_kernel.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/ebd20b7944c3b427a90e89d3b4a9e43926336eb8/src%2Frt%2Frust_kernel.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.cpp?ref=ebd20b7944c3b427a90e89d3b4a9e43926336eb8", "patch": "@@ -291,12 +291,20 @@ rust_kernel::set_exit_status(int code) {\n }\n \n void\n-rust_kernel::register_task() {\n-    KLOG_(\"Registering task\");\n+rust_kernel::inc_live_count() {\n     uintptr_t new_non_weak_tasks = sync::increment(non_weak_tasks);\n     KLOG_(\"New non-weak tasks %\" PRIdPTR, new_non_weak_tasks);\n }\n \n+void\n+rust_kernel::dec_live_count() {\n+    uintptr_t new_non_weak_tasks = sync::decrement(non_weak_tasks);\n+    KLOG_(\"New non-weak tasks %\" PRIdPTR, new_non_weak_tasks);\n+    if (new_non_weak_tasks == 0) {\n+        begin_shutdown();\n+    }\n+}\n+\n void\n rust_kernel::allow_scheduler_exit() {\n     scoped_lock with(sched_lock);\n@@ -315,31 +323,6 @@ rust_kernel::allow_scheduler_exit() {\n     osmain_sched->allow_exit();\n }\n \n-void\n-rust_kernel::unregister_task() {\n-    KLOG_(\"Unregistering task\");\n-    uintptr_t new_non_weak_tasks = sync::decrement(non_weak_tasks);\n-    KLOG_(\"New non-weak tasks %\" PRIdPTR, new_non_weak_tasks);\n-    if (new_non_weak_tasks == 0) {\n-        begin_shutdown();\n-    }\n-}\n-\n-void\n-rust_kernel::inc_weak_task_count() {\n-    uintptr_t new_non_weak_tasks = sync::decrement(non_weak_tasks);\n-    KLOG_(\"New non-weak tasks %\" PRIdPTR, new_non_weak_tasks);\n-    if (new_non_weak_tasks == 0) {\n-        begin_shutdown();\n-    }\n-}\n-\n-void\n-rust_kernel::dec_weak_task_count() {\n-    uintptr_t new_non_weak_tasks = sync::increment(non_weak_tasks);\n-    KLOG_(\"New non-weak tasks %\" PRIdPTR, new_non_weak_tasks);\n-}\n-\n void\n rust_kernel::begin_shutdown() {\n     {"}, {"sha": "01ebf5ab57b95046c6667c624d2db7835feae60f", "filename": "src/rt/rust_kernel.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ebd20b7944c3b427a90e89d3b4a9e43926336eb8/src%2Frt%2Frust_kernel.h", "raw_url": "https://github.com/rust-lang/rust/raw/ebd20b7944c3b427a90e89d3b4a9e43926336eb8/src%2Frt%2Frust_kernel.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.h?ref=ebd20b7944c3b427a90e89d3b4a9e43926336eb8", "patch": "@@ -160,10 +160,8 @@ class rust_kernel {\n     rust_sched_id main_sched_id() { return main_scheduler; }\n     rust_sched_id osmain_sched_id() { return osmain_scheduler; }\n \n-    void register_task();\n-    void unregister_task();\n-    void inc_weak_task_count();\n-    void dec_weak_task_count();\n+    void inc_live_count();\n+    void dec_live_count();\n \n     void register_exit_function(spawn_fn runner, fn_env_pair *f);\n };"}, {"sha": "e3a5d9db91ffa628234c038431f7dd031d1d28bf", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ebd20b7944c3b427a90e89d3b4a9e43926336eb8/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/ebd20b7944c3b427a90e89d3b4a9e43926336eb8/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=ebd20b7944c3b427a90e89d3b4a9e43926336eb8", "patch": "@@ -123,7 +123,7 @@ rust_scheduler::create_task(rust_task *spawner, const char *name) {\n         cur_thread = (thread_no + 1) % max_num_threads;\n     }\n     KLOG(kernel, kern, \"Creating task %s, on thread %d.\", name, thread_no);\n-    kernel->register_task();\n+    kernel->inc_live_count();\n     rust_sched_launcher *thread = threads[thread_no];\n     return thread->get_loop()->create_task(spawner, name);\n }\n@@ -138,7 +138,7 @@ rust_scheduler::release_task() {\n             need_exit = true;\n         }\n     }\n-    kernel->unregister_task();\n+    kernel->dec_live_count();\n     if (need_exit) {\n         exit();\n     }"}, {"sha": "7ab07df0bfef10146b760b4cf3bf6d1a0968622a", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ebd20b7944c3b427a90e89d3b4a9e43926336eb8/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/ebd20b7944c3b427a90e89d3b4a9e43926336eb8/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=ebd20b7944c3b427a90e89d3b4a9e43926336eb8", "patch": "@@ -189,6 +189,6 @@ rust_raw_thread_start\n rust_raw_thread_join_delete\n rust_register_exit_function\n rust_get_global_data_ptr\n-rust_inc_weak_task_count\n-rust_dec_weak_task_count\n+rust_inc_kernel_live_count\n+rust_dec_kernel_live_count\n rust_get_exchange_count_ptr"}]}