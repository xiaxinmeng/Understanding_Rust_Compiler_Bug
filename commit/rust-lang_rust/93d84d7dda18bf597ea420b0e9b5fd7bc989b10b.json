{"sha": "93d84d7dda18bf597ea420b0e9b5fd7bc989b10b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzZDg0ZDdkZGExOGJmNTk3ZWE0MjBiMGU5YjVmZDdiYzk4OWIxMGI=", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2019-11-23T17:15:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-23T17:15:59Z"}, "message": "Rollup merge of #4766 - phansch:fix_fp_in_derive_hash_xor_eq, r=flip1995\n\nFix false positive in derive_hash_xor_eq\n\nThis fixes a false positive in derive_hash_xor_eq where the lint was\ntriggering on user-defined traits called `Hash`.\n\nchangelog: Fix false positive in `derive_hash_xor_eq`\n\nFixes #4658", "tree": {"sha": "50fa6bd2cb62b51f18b8d4f4e9443feff1a5d793", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50fa6bd2cb62b51f18b8d4f4e9443feff1a5d793"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93d84d7dda18bf597ea420b0e9b5fd7bc989b10b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd2WlPCRBK7hj4Ov3rIwAAdHIIAIcWizxrKqLdDLn61IwaS+Xf\nSRXlxnHd/Tq+N6pMvcoZehjleuFENfJWwwWenxn/n6KyknVZAae0PiFVA+qmz2wR\nmj97p9gaZRJvVBj9lEC1FZsNDnrQj2z24scYbVBFPHNBc4ALZO2nc31Zq5KJ9rok\nqvye+5SWKpCtDKXpJVSGcZnBmDydzd7Jx8ch9HUeCDCyJ3DchbQ5WxkiJK6RDnIn\nRMFttzpyWses7YqV2S+0ClX3z/2m792kZ9GKTE20g1Mrhlf7vGBf+CO2jZRAUT+h\nqnQlL/P6tBrZrhCv4f85eaRBj0Na+DkVTvyEzKduzalopgu8M7AMyWnuw/YQ068=\n=Vgp9\n-----END PGP SIGNATURE-----\n", "payload": "tree 50fa6bd2cb62b51f18b8d4f4e9443feff1a5d793\nparent 016857db6521472fa9be052ab23384bb1d23da66\nparent 78b7e8544bc961be55e896bbd6e42b1697963638\nauthor Philipp Krones <hello@philkrones.com> 1574529359 +0100\ncommitter GitHub <noreply@github.com> 1574529359 +0100\n\nRollup merge of #4766 - phansch:fix_fp_in_derive_hash_xor_eq, r=flip1995\n\nFix false positive in derive_hash_xor_eq\n\nThis fixes a false positive in derive_hash_xor_eq where the lint was\ntriggering on user-defined traits called `Hash`.\n\nchangelog: Fix false positive in `derive_hash_xor_eq`\n\nFixes #4658\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93d84d7dda18bf597ea420b0e9b5fd7bc989b10b", "html_url": "https://github.com/rust-lang/rust/commit/93d84d7dda18bf597ea420b0e9b5fd7bc989b10b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93d84d7dda18bf597ea420b0e9b5fd7bc989b10b/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "016857db6521472fa9be052ab23384bb1d23da66", "url": "https://api.github.com/repos/rust-lang/rust/commits/016857db6521472fa9be052ab23384bb1d23da66", "html_url": "https://github.com/rust-lang/rust/commit/016857db6521472fa9be052ab23384bb1d23da66"}, {"sha": "78b7e8544bc961be55e896bbd6e42b1697963638", "url": "https://api.github.com/repos/rust-lang/rust/commits/78b7e8544bc961be55e896bbd6e42b1697963638", "html_url": "https://github.com/rust-lang/rust/commit/78b7e8544bc961be55e896bbd6e42b1697963638"}], "stats": {"total": 58, "additions": 45, "deletions": 13}, "files": [{"sha": "f60ed90cd7c1e3eaaf76cb8d0128a1b1574b956a", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93d84d7dda18bf597ea420b0e9b5fd7bc989b10b/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93d84d7dda18bf597ea420b0e9b5fd7bc989b10b/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=93d84d7dda18bf597ea420b0e9b5fd7bc989b10b", "patch": "@@ -90,6 +90,7 @@ fn check_hash_peq<'a, 'tcx>(\n     if_chain! {\n         if match_path(&trait_ref.path, &paths::HASH);\n         if let Some(peq_trait_def_id) = cx.tcx.lang_items().eq_trait();\n+        if !&trait_ref.trait_def_id().is_local();\n         then {\n             // Look for the PartialEq implementations for `ty`\n             cx.tcx.for_each_relevant_impl(peq_trait_def_id, ty, |impl_id| {"}, {"sha": "10abe22d53e5c1338c8f136eacc301e8c77e4128", "filename": "tests/ui/derive_hash_xor_eq.rs", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/93d84d7dda18bf597ea420b0e9b5fd7bc989b10b/tests%2Fui%2Fderive_hash_xor_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93d84d7dda18bf597ea420b0e9b5fd7bc989b10b/tests%2Fui%2Fderive_hash_xor_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive_hash_xor_eq.rs?ref=93d84d7dda18bf597ea420b0e9b5fd7bc989b10b", "patch": "@@ -1,5 +1,3 @@\n-use std::hash::{Hash, Hasher};\n-\n #[derive(PartialEq, Hash)]\n struct Foo;\n \n@@ -30,8 +28,27 @@ impl PartialEq<Baz> for Baz {\n #[derive(PartialEq)]\n struct Bah;\n \n-impl Hash for Bah {\n-    fn hash<H: Hasher>(&self, _: &mut H) {}\n+impl std::hash::Hash for Bah {\n+    fn hash<H: std::hash::Hasher>(&self, _: &mut H) {}\n+}\n+\n+#[derive(PartialEq)]\n+struct Foo2;\n+\n+trait Hash {}\n+\n+// We don't want to lint on user-defined traits called `Hash`\n+impl Hash for Foo2 {}\n+\n+mod use_hash {\n+    use std::hash::{Hash, Hasher};\n+\n+    #[derive(PartialEq)]\n+    struct Foo3;\n+\n+    impl Hash for Foo3 {\n+        fn hash<H: std::hash::Hasher>(&self, _: &mut H) {}\n+    }\n }\n \n fn main() {}"}, {"sha": "10c38bb42e39baaebb5cfe21e7e0500e08d3d75d", "filename": "tests/ui/derive_hash_xor_eq.stderr", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/93d84d7dda18bf597ea420b0e9b5fd7bc989b10b/tests%2Fui%2Fderive_hash_xor_eq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/93d84d7dda18bf597ea420b0e9b5fd7bc989b10b/tests%2Fui%2Fderive_hash_xor_eq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive_hash_xor_eq.stderr?ref=93d84d7dda18bf597ea420b0e9b5fd7bc989b10b", "patch": "@@ -1,12 +1,12 @@\n error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n-  --> $DIR/derive_hash_xor_eq.rs:12:10\n+  --> $DIR/derive_hash_xor_eq.rs:10:10\n    |\n LL | #[derive(Hash)]\n    |          ^^^^\n    |\n    = note: `#[deny(clippy::derive_hash_xor_eq)]` on by default\n note: `PartialEq` implemented here\n-  --> $DIR/derive_hash_xor_eq.rs:15:1\n+  --> $DIR/derive_hash_xor_eq.rs:13:1\n    |\n LL | / impl PartialEq for Bar {\n LL | |     fn eq(&self, _: &Bar) -> bool {\n@@ -16,13 +16,13 @@ LL | | }\n    | |_^\n \n error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n-  --> $DIR/derive_hash_xor_eq.rs:21:10\n+  --> $DIR/derive_hash_xor_eq.rs:19:10\n    |\n LL | #[derive(Hash)]\n    |          ^^^^\n    |\n note: `PartialEq` implemented here\n-  --> $DIR/derive_hash_xor_eq.rs:24:1\n+  --> $DIR/derive_hash_xor_eq.rs:22:1\n    |\n LL | / impl PartialEq<Baz> for Baz {\n LL | |     fn eq(&self, _: &Baz) -> bool {\n@@ -32,18 +32,32 @@ LL | | }\n    | |_^\n \n error: you are implementing `Hash` explicitly but have derived `PartialEq`\n-  --> $DIR/derive_hash_xor_eq.rs:33:1\n+  --> $DIR/derive_hash_xor_eq.rs:31:1\n    |\n-LL | / impl Hash for Bah {\n-LL | |     fn hash<H: Hasher>(&self, _: &mut H) {}\n+LL | / impl std::hash::Hash for Bah {\n+LL | |     fn hash<H: std::hash::Hasher>(&self, _: &mut H) {}\n LL | | }\n    | |_^\n    |\n note: `PartialEq` implemented here\n-  --> $DIR/derive_hash_xor_eq.rs:30:10\n+  --> $DIR/derive_hash_xor_eq.rs:28:10\n    |\n LL | #[derive(PartialEq)]\n    |          ^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error: you are implementing `Hash` explicitly but have derived `PartialEq`\n+  --> $DIR/derive_hash_xor_eq.rs:49:5\n+   |\n+LL | /     impl Hash for Foo3 {\n+LL | |         fn hash<H: std::hash::Hasher>(&self, _: &mut H) {}\n+LL | |     }\n+   | |_____^\n+   |\n+note: `PartialEq` implemented here\n+  --> $DIR/derive_hash_xor_eq.rs:46:14\n+   |\n+LL |     #[derive(PartialEq)]\n+   |              ^^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n "}]}