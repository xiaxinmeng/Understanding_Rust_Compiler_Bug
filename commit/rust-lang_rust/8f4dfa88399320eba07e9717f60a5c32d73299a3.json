{"sha": "8f4dfa88399320eba07e9717f60a5c32d73299a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNGRmYTg4Mzk5MzIwZWJhMDdlOTcxN2Y2MGE1YzMyZDczMjk5YTM=", "commit": {"author": {"name": "Ilya Bobyr", "email": "ilya.bobyr@gmail.com", "date": "2020-06-04T03:36:53Z"}, "committer": {"name": "Ilya Bobyr", "email": "ilya.bobyr@gmail.com", "date": "2020-06-07T08:27:06Z"}, "message": "Free `default()` forwarding to `Default::default()`\n\nWhen creating default values a trait method needs to be called with an\nexplicit trait name.  `Default::default()` seems redundant.  A free\nfunction on the other hand, when imported directly, seems to be a better\nAPI, as it is just `default()`.  When implementing the trait, a method\nis still required.", "tree": {"sha": "edd1613f6fff1759b648b42a23f0d8af00256823", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edd1613f6fff1759b648b42a23f0d8af00256823"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f4dfa88399320eba07e9717f60a5c32d73299a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f4dfa88399320eba07e9717f60a5c32d73299a3", "html_url": "https://github.com/rust-lang/rust/commit/8f4dfa88399320eba07e9717f60a5c32d73299a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f4dfa88399320eba07e9717f60a5c32d73299a3/comments", "author": {"login": "ilya-bobyr", "id": 694419, "node_id": "MDQ6VXNlcjY5NDQxOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/694419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilya-bobyr", "html_url": "https://github.com/ilya-bobyr", "followers_url": "https://api.github.com/users/ilya-bobyr/followers", "following_url": "https://api.github.com/users/ilya-bobyr/following{/other_user}", "gists_url": "https://api.github.com/users/ilya-bobyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilya-bobyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilya-bobyr/subscriptions", "organizations_url": "https://api.github.com/users/ilya-bobyr/orgs", "repos_url": "https://api.github.com/users/ilya-bobyr/repos", "events_url": "https://api.github.com/users/ilya-bobyr/events{/privacy}", "received_events_url": "https://api.github.com/users/ilya-bobyr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ilya-bobyr", "id": 694419, "node_id": "MDQ6VXNlcjY5NDQxOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/694419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilya-bobyr", "html_url": "https://github.com/ilya-bobyr", "followers_url": "https://api.github.com/users/ilya-bobyr/followers", "following_url": "https://api.github.com/users/ilya-bobyr/following{/other_user}", "gists_url": "https://api.github.com/users/ilya-bobyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilya-bobyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilya-bobyr/subscriptions", "organizations_url": "https://api.github.com/users/ilya-bobyr/orgs", "repos_url": "https://api.github.com/users/ilya-bobyr/repos", "events_url": "https://api.github.com/users/ilya-bobyr/events{/privacy}", "received_events_url": "https://api.github.com/users/ilya-bobyr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "450abe80f193ccefbfcd48214d70520f2d507f0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/450abe80f193ccefbfcd48214d70520f2d507f0e", "html_url": "https://github.com/rust-lang/rust/commit/450abe80f193ccefbfcd48214d70520f2d507f0e"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "9a8d65cd4e06b93e37e075f100a589b18e97eba5", "filename": "src/libcore/default.rs", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/8f4dfa88399320eba07e9717f60a5c32d73299a3/src%2Flibcore%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f4dfa88399320eba07e9717f60a5c32d73299a3/src%2Flibcore%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fdefault.rs?ref=8f4dfa88399320eba07e9717f60a5c32d73299a3", "patch": "@@ -115,6 +115,50 @@ pub trait Default: Sized {\n     fn default() -> Self;\n }\n \n+/// Return the default value of a type according to the `Default` trait.\n+///\n+/// The type to return is inferred from context; this is equivalent to\n+/// `Default::default()` but shorter to type.\n+///\n+/// For example:\n+/// ```\n+/// #![feature(default_free_fn)]\n+///\n+/// use std::default::default;\n+///\n+/// #[derive(Default)]\n+/// struct AppConfig {\n+///     foo: FooConfig,\n+///     bar: BarConfig,\n+/// }\n+///\n+/// #[derive(Default)]\n+/// struct FooConfig {\n+///     foo: i32,\n+/// }\n+///\n+/// #[derive(Default)]\n+/// struct BarConfig {\n+///     bar: f32,\n+///     baz: u8,\n+/// }\n+///\n+/// fn main() {\n+///     let options = AppConfig {\n+///         foo: default(),\n+///         bar: BarConfig {\n+///             bar: 10.1,\n+///             ..default()\n+///         },\n+///     };\n+/// }\n+/// ```\n+#[unstable(feature = \"default_free_fn\", issue = \"73014\")]\n+#[inline]\n+pub fn default<T: Default>() -> T {\n+    Default::default()\n+}\n+\n /// Derive macro generating an impl of the trait `Default`.\n #[rustc_builtin_macro]\n #[stable(feature = \"builtin_macro_prelude\", since = \"1.38.0\")]"}, {"sha": "b687f0b0af0ad90f60c98d9d0a6f44e182055bbf", "filename": "src/test/ui/resolve/issue-2356.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8f4dfa88399320eba07e9717f60a5c32d73299a3/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8f4dfa88399320eba07e9717f60a5c32d73299a3/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr?ref=8f4dfa88399320eba07e9717f60a5c32d73299a3", "patch": "@@ -14,7 +14,16 @@ error[E0425]: cannot find function `default` in this scope\n   --> $DIR/issue-2356.rs:31:5\n    |\n LL |     default();\n-   |     ^^^^^^^ help: try: `Self::default`\n+   |     ^^^^^^^\n+   |\n+help: try\n+   |\n+LL |     Self::default();\n+   |     ^^^^^^^^^^^^^\n+help: consider importing this function\n+   |\n+LL | use std::default::default;\n+   |\n \n error[E0425]: cannot find value `whiskers` in this scope\n   --> $DIR/issue-2356.rs:39:5"}]}