{"sha": "b9e85bf60ab4376a321f03078c06cd95ea5143ef", "node_id": "C_kwDOAAsO6NoAKGI5ZTg1YmY2MGFiNDM3NmEzMjFmMDMwNzhjMDZjZDk1ZWE1MTQzZWY", "commit": {"author": {"name": "Colin Baumgarten", "email": "colin.baumgarten@gmail.com", "date": "2022-09-30T22:40:59Z"}, "committer": {"name": "Colin Baumgarten", "email": "colin.baumgarten@gmail.com", "date": "2022-09-30T23:05:01Z"}, "message": "Detect and reject out-of-range integers in format string literals\n\nUntil now out-of-range integers in format string literals\nwere silently ignored. They wrapped around to zero at\nusize::MAX, producing unexpected results.\n\nWhen using debug builds of rustc, such integers in format string\nliterals even cause an 'attempt to add with overflow' panic in\nrustc.\n\nFix this by producing an error diagnostic for integers in format\nstring literals which do not fit into usize.\n\nFixes #102528", "tree": {"sha": "d5e0b17555b953ef234b34452d8f3a601e0b8323", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5e0b17555b953ef234b34452d8f3a601e0b8323"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9e85bf60ab4376a321f03078c06cd95ea5143ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9e85bf60ab4376a321f03078c06cd95ea5143ef", "html_url": "https://github.com/rust-lang/rust/commit/b9e85bf60ab4376a321f03078c06cd95ea5143ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9e85bf60ab4376a321f03078c06cd95ea5143ef/comments", "author": {"login": "colinba", "id": 20019801, "node_id": "MDQ6VXNlcjIwMDE5ODAx", "avatar_url": "https://avatars.githubusercontent.com/u/20019801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colinba", "html_url": "https://github.com/colinba", "followers_url": "https://api.github.com/users/colinba/followers", "following_url": "https://api.github.com/users/colinba/following{/other_user}", "gists_url": "https://api.github.com/users/colinba/gists{/gist_id}", "starred_url": "https://api.github.com/users/colinba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colinba/subscriptions", "organizations_url": "https://api.github.com/users/colinba/orgs", "repos_url": "https://api.github.com/users/colinba/repos", "events_url": "https://api.github.com/users/colinba/events{/privacy}", "received_events_url": "https://api.github.com/users/colinba/received_events", "type": "User", "site_admin": false}, "committer": {"login": "colinba", "id": 20019801, "node_id": "MDQ6VXNlcjIwMDE5ODAx", "avatar_url": "https://avatars.githubusercontent.com/u/20019801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colinba", "html_url": "https://github.com/colinba", "followers_url": "https://api.github.com/users/colinba/followers", "following_url": "https://api.github.com/users/colinba/following{/other_user}", "gists_url": "https://api.github.com/users/colinba/gists{/gist_id}", "starred_url": "https://api.github.com/users/colinba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colinba/subscriptions", "organizations_url": "https://api.github.com/users/colinba/orgs", "repos_url": "https://api.github.com/users/colinba/repos", "events_url": "https://api.github.com/users/colinba/events{/privacy}", "received_events_url": "https://api.github.com/users/colinba/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75d3027fb5ce1af6712e4503c9574802212101bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/75d3027fb5ce1af6712e4503c9574802212101bd", "html_url": "https://github.com/rust-lang/rust/commit/75d3027fb5ce1af6712e4503c9574802212101bd"}], "stats": {"total": 45, "additions": 40, "deletions": 5}, "files": [{"sha": "1394993abade94013f6e66849f9ba00aa6aff02d", "filename": "compiler/rustc_parse_format/src/lib.rs", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b9e85bf60ab4376a321f03078c06cd95ea5143ef/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9e85bf60ab4376a321f03078c06cd95ea5143ef/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs?ref=b9e85bf60ab4376a321f03078c06cd95ea5143ef", "patch": "@@ -740,20 +740,40 @@ impl<'a> Parser<'a> {\n         word\n     }\n \n-    /// Optionally parses an integer at the current position. This doesn't deal\n-    /// with overflow at all, it's just accumulating digits.\n     fn integer(&mut self) -> Option<usize> {\n-        let mut cur = 0;\n+        let mut cur: usize = 0;\n         let mut found = false;\n+        let mut overflow = false;\n+        let start = self.current_pos();\n         while let Some(&(_, c)) = self.cur.peek() {\n             if let Some(i) = c.to_digit(10) {\n-                cur = cur * 10 + i as usize;\n+                let (tmp, mul_overflow) = cur.overflowing_mul(10);\n+                let (tmp, add_overflow) = tmp.overflowing_add(i as usize);\n+                if mul_overflow || add_overflow {\n+                    overflow = true;\n+                }\n+                cur = tmp;\n                 found = true;\n                 self.cur.next();\n             } else {\n                 break;\n             }\n         }\n+\n+        if overflow {\n+            let end = self.current_pos();\n+            let overflowed_int = &self.input[start..end];\n+            self.err(\n+                format!(\n+                    \"integer `{}` does not fit into the type `usize` whose range is `0..={}`\",\n+                    overflowed_int,\n+                    usize::MAX\n+                ),\n+                \"integer out of range for `usize`\",\n+                self.span(start, end),\n+            );\n+        }\n+\n         if found { Some(cur) } else { None }\n     }\n "}, {"sha": "3f9cb149b53eb402fec088035257425eca1c36e9", "filename": "compiler/rustc_parse_format/src/tests.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b9e85bf60ab4376a321f03078c06cd95ea5143ef/compiler%2Frustc_parse_format%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9e85bf60ab4376a321f03078c06cd95ea5143ef/compiler%2Frustc_parse_format%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse_format%2Fsrc%2Ftests.rs?ref=b9e85bf60ab4376a321f03078c06cd95ea5143ef", "patch": "@@ -57,6 +57,21 @@ fn invalid06() {\n     musterr(\"{:>>>}\")\n }\n \n+#[test]\n+fn invalid_position() {\n+    musterr(\"{18446744073709551616}\");\n+}\n+\n+#[test]\n+fn invalid_width() {\n+    musterr(\"{:18446744073709551616}\");\n+}\n+\n+#[test]\n+fn invalid_precision() {\n+    musterr(\"{:.18446744073709551616}\");\n+}\n+\n #[test]\n fn format_nothing() {\n     same("}, {"sha": "799ce9d5daa888573c48100239baa23df32300d6", "filename": "library/alloc/src/fmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9e85bf60ab4376a321f03078c06cd95ea5143ef/library%2Falloc%2Fsrc%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9e85bf60ab4376a321f03078c06cd95ea5143ef/library%2Falloc%2Fsrc%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Ffmt.rs?ref=b9e85bf60ab4376a321f03078c06cd95ea5143ef", "patch": "@@ -327,7 +327,7 @@\n //! - `text` must not contain any `'{'` or `'}'` characters,\n //! - `ws` is any character for which [`char::is_whitespace`] returns `true`, has no semantic\n //!   meaning and is completely optional,\n-//! - `integer` is a decimal integer that may contain leading zeroes and\n+//! - `integer` is a decimal integer that may contain leading zeroes and must fit into an `usize` and\n //! - `identifier` is an `IDENTIFIER_OR_KEYWORD` (not an `IDENTIFIER`) as defined by the [Rust language reference](https://doc.rust-lang.org/reference/identifiers.html).\n //!\n //! # Formatting traits"}]}