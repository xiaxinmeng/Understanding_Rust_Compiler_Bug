{"sha": "3ebfa1856e3d839068131be8794821c4e3d029ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYmZhMTg1NmUzZDgzOTA2ODEzMWJlODc5NDgyMWM0ZTNkMDI5ZWQ=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-08T22:19:55Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-12T19:50:47Z"}, "message": "Rename in librustdoc.", "tree": {"sha": "ec8432552053678aa56532b90b843221d18cf26a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec8432552053678aa56532b90b843221d18cf26a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ebfa1856e3d839068131be8794821c4e3d029ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ebfa1856e3d839068131be8794821c4e3d029ed", "html_url": "https://github.com/rust-lang/rust/commit/3ebfa1856e3d839068131be8794821c4e3d029ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ebfa1856e3d839068131be8794821c4e3d029ed/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f2c18cdbd755afc722fa2a38c97a6dc6d134453", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f2c18cdbd755afc722fa2a38c97a6dc6d134453", "html_url": "https://github.com/rust-lang/rust/commit/1f2c18cdbd755afc722fa2a38c97a6dc6d134453"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "4d8d0040cdcd77dcc937351a32cbf810be92e00d", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ebfa1856e3d839068131be8794821c4e3d029ed/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ebfa1856e3d839068131be8794821c4e3d029ed/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=3ebfa1856e3d839068131be8794821c4e3d029ed", "patch": "@@ -16,7 +16,7 @@ use rustc::infer::region_constraints::{RegionConstraintData, Constraint};\n use rustc::middle::resolve_lifetime as rl;\n use rustc::middle::lang_items;\n use rustc::middle::stability;\n-use rustc::mir::interpret::{GlobalId, ConstValue};\n+use rustc::mir::interpret::GlobalId;\n use rustc::hir;\n use rustc::hir::def::{CtorKind, DefKind, Res};\n use rustc::hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n@@ -3075,7 +3075,7 @@ impl<'tcx> Clean<Type> for Ty<'tcx> {\n             ty::Slice(ty) => Slice(box ty.clean(cx)),\n             ty::Array(ty, n) => {\n                 let mut n = cx.tcx.lift(&n).expect(\"array lift failed\");\n-                if let ConstValue::Unevaluated(def_id, substs) = n.val {\n+                if let ty::ConstKind::Unevaluated(def_id, substs) = n.val {\n                     let param_env = cx.tcx.param_env(def_id);\n                     let cid = GlobalId {\n                         instance: ty::Instance::new(def_id, substs),\n@@ -4234,7 +4234,7 @@ fn name_from_pat(p: &hir::Pat) -> String {\n \n fn print_const(cx: &DocContext<'_>, n: &ty::Const<'_>) -> String {\n     match n.val {\n-        ConstValue::Unevaluated(def_id, _) => {\n+        ty::ConstKind::Unevaluated(def_id, _) => {\n             if let Some(hir_id) = cx.tcx.hir().as_local_hir_id(def_id) {\n                 print_const_expr(cx, cx.tcx.hir().body_owned_by(hir_id))\n             } else {"}]}