{"sha": "0dba01aee15a45b8417c06df69e38af6956e03a8", "node_id": "C_kwDOAAsO6NoAKDBkYmEwMWFlZTE1YTQ1Yjg0MTdjMDZkZjY5ZTM4YWY2OTU2ZTAzYTg", "commit": {"author": {"name": "123vivekr", "email": "123vivekr@gmail.com", "date": "2022-02-13T12:24:09Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2022-03-21T21:56:09Z"}, "message": "Add `short_item_threshold` config option\n\nAllow custom short item threshold values via config", "tree": {"sha": "e7b05a8cbd4f603667c63319a003b9b96a9e9720", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7b05a8cbd4f603667c63319a003b9b96a9e9720"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0dba01aee15a45b8417c06df69e38af6956e03a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0dba01aee15a45b8417c06df69e38af6956e03a8", "html_url": "https://github.com/rust-lang/rust/commit/0dba01aee15a45b8417c06df69e38af6956e03a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0dba01aee15a45b8417c06df69e38af6956e03a8/comments", "author": {"login": "123vivekr", "id": 28249428, "node_id": "MDQ6VXNlcjI4MjQ5NDI4", "avatar_url": "https://avatars.githubusercontent.com/u/28249428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/123vivekr", "html_url": "https://github.com/123vivekr", "followers_url": "https://api.github.com/users/123vivekr/followers", "following_url": "https://api.github.com/users/123vivekr/following{/other_user}", "gists_url": "https://api.github.com/users/123vivekr/gists{/gist_id}", "starred_url": "https://api.github.com/users/123vivekr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/123vivekr/subscriptions", "organizations_url": "https://api.github.com/users/123vivekr/orgs", "repos_url": "https://api.github.com/users/123vivekr/repos", "events_url": "https://api.github.com/users/123vivekr/events{/privacy}", "received_events_url": "https://api.github.com/users/123vivekr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e41329ce87409df929ecfa191297f944472cc999", "url": "https://api.github.com/repos/rust-lang/rust/commits/e41329ce87409df929ecfa191297f944472cc999", "html_url": "https://github.com/rust-lang/rust/commit/e41329ce87409df929ecfa191297f944472cc999"}], "stats": {"total": 115, "additions": 110, "deletions": 5}, "files": [{"sha": "a47439b9ba96c6a17209c40d603d57292fae7aa9", "filename": "Configurations.md", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/0dba01aee15a45b8417c06df69e38af6956e03a8/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/0dba01aee15a45b8417c06df69e38af6956e03a8/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=0dba01aee15a45b8417c06df69e38af6956e03a8", "patch": "@@ -2200,6 +2200,40 @@ specific version of rustfmt is used in your CI, use this option.\n - **Possible values**: any published version (e.g. `\"0.3.8\"`)\n - **Stable**: No (tracking issue: [#3386](https://github.com/rust-lang/rustfmt/issues/3386))\n \n+## `short_array_element_width_threshold`\n+\n+The width threshold for an array element to be considered \"short\".\n+\n+The layout of an array is dependent on the length of each of its elements. \n+If the length of every element in an array is below this threshold (all elements are \"short\") then the array can be formatted in the mixed/compressed style, but if any one element has a length that exceeds this threshold then the array elements will have to be formatted vertically.\n+\n+- **Default value**: `10`\n+- **Possible values**: any positive integer that is less than or equal to the value specified for [`max_width`](#max_width)\n+- **Stable**: Yes\n+\n+#### `10` (default):\n+```rust\n+fn main() {\n+    pub const FORMAT_TEST: [u64; 5] = [\n+        0x0000000000000000,\n+        0xaaaaaaaaaaaaaaaa,\n+        0xbbbbbbbbbbbbbbbb,\n+        0xcccccccccccccccc,\n+        0xdddddddddddddddd,\n+    ];\n+}\n+```\n+#### `20`:\n+```rust\n+fn main() {\n+    pub const FORMAT_TEST: [u64; 5] = [\n+        0x0000000000000000, 0xaaaaaaaaaaaaaaaa, 0xbbbbbbbbbbbbbbbb, 0xcccccccccccccccc,\n+        0xdddddddddddddddd,\n+    ];\n+}\n+```\n+See also [`max_width`](#max_width).\n+\n ## `skip_children`\n \n Don't reformat out of line modules"}, {"sha": "18e1854612bf79de163227e7c79d572505bfc206", "filename": "src/config/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0dba01aee15a45b8417c06df69e38af6956e03a8/src%2Fconfig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dba01aee15a45b8417c06df69e38af6956e03a8/src%2Fconfig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fmod.rs?ref=0dba01aee15a45b8417c06df69e38af6956e03a8", "patch": "@@ -106,6 +106,8 @@ create_config! {\n     // Misc.\n     remove_nested_parens: bool, true, true, \"Remove nested parens\";\n     combine_control_expr: bool, true, false, \"Combine control expressions with function calls\";\n+    short_array_element_width_threshold: usize, 10, true,\n+        \"Width threshold for an array element to be considered short\";\n     overflow_delimited_expr: bool, false, false,\n         \"Allow trailing bracket/brace delimited expressions to overflow\";\n     struct_field_align_threshold: usize, 0, false,\n@@ -591,6 +593,7 @@ spaces_around_ranges = false\n binop_separator = \"Front\"\n remove_nested_parens = true\n combine_control_expr = true\n+short_array_element_width_threshold = 10\n overflow_delimited_expr = false\n struct_field_align_threshold = 0\n enum_discrim_align_threshold = 0"}, {"sha": "80aed998d7377d83c16925e2d0fe55ef5fa2f943", "filename": "src/overflow.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0dba01aee15a45b8417c06df69e38af6956e03a8/src%2Foverflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dba01aee15a45b8417c06df69e38af6956e03a8/src%2Foverflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foverflow.rs?ref=0dba01aee15a45b8417c06df69e38af6956e03a8", "patch": "@@ -26,8 +26,6 @@ use crate::spanned::Spanned;\n use crate::types::{can_be_overflowed_type, SegmentParam};\n use crate::utils::{count_newlines, extra_offset, first_line_width, last_line_width, mk_sp};\n \n-const SHORT_ITEM_THRESHOLD: usize = 10;\n-\n /// A list of `format!`-like macros, that take a long format string and a list of arguments to\n /// format.\n ///\n@@ -572,7 +570,12 @@ impl<'a> Context<'a> {\n                             if one_line {\n                                 tactic = DefinitiveListTactic::SpecialMacro(num_args_before);\n                             };\n-                        } else if is_every_expr_simple(&self.items) && no_long_items(list_items) {\n+                        } else if is_every_expr_simple(&self.items)\n+                            && no_long_items(\n+                                list_items,\n+                                self.context.config.short_array_element_width_threshold(),\n+                            )\n+                        {\n                             tactic = DefinitiveListTactic::Mixed;\n                         }\n                     }\n@@ -755,9 +758,9 @@ fn shape_from_indent_style(\n     }\n }\n \n-fn no_long_items(list: &[ListItem]) -> bool {\n+fn no_long_items(list: &[ListItem], short_array_element_width_threshold: usize) -> bool {\n     list.iter()\n-        .all(|item| item.inner_as_ref().len() <= SHORT_ITEM_THRESHOLD)\n+        .all(|item| item.inner_as_ref().len() <= short_array_element_width_threshold)\n }\n \n /// In case special-case style is required, returns an offset from which we start horizontal layout."}, {"sha": "7d0d70919a607f1126bc52ccd5790ed636e834ff", "filename": "tests/source/configs/short_array_element_width_threshold/10.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0dba01aee15a45b8417c06df69e38af6956e03a8/tests%2Fsource%2Fconfigs%2Fshort_array_element_width_threshold%2F10.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dba01aee15a45b8417c06df69e38af6956e03a8/tests%2Fsource%2Fconfigs%2Fshort_array_element_width_threshold%2F10.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fshort_array_element_width_threshold%2F10.rs?ref=0dba01aee15a45b8417c06df69e38af6956e03a8", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-short_array_element_width_threshold: 10\n+\n+fn main() {\n+    pub const FORMAT_TEST: [u64; 5] = [\n+        0x0000000000000000,\n+        0xaaaaaaaaaaaaaaaa,\n+        0xbbbbbbbbbbbbbbbb,\n+        0xcccccccccccccccc,\n+        0xdddddddddddddddd,\n+    ];\n+}\n\\ No newline at end of file"}, {"sha": "8a93a51d6a2814a667df2a446c12d672082b7347", "filename": "tests/source/configs/short_array_element_width_threshold/20.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0dba01aee15a45b8417c06df69e38af6956e03a8/tests%2Fsource%2Fconfigs%2Fshort_array_element_width_threshold%2F20.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dba01aee15a45b8417c06df69e38af6956e03a8/tests%2Fsource%2Fconfigs%2Fshort_array_element_width_threshold%2F20.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fshort_array_element_width_threshold%2F20.rs?ref=0dba01aee15a45b8417c06df69e38af6956e03a8", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-short_array_element_width_threshold: 20\n+\n+fn main() {\n+    pub const FORMAT_TEST: [u64; 5] = [\n+        0x0000000000000000,\n+        0xaaaaaaaaaaaaaaaa,\n+        0xbbbbbbbbbbbbbbbb,\n+        0xcccccccccccccccc,\n+        0xdddddddddddddddd,\n+    ];\n+}\n\\ No newline at end of file"}, {"sha": "710b6fe7c4ba0c764483e12f539644aca109bf3b", "filename": "tests/source/configs/short_array_element_width_threshold/greater_than_max_width.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0dba01aee15a45b8417c06df69e38af6956e03a8/tests%2Fsource%2Fconfigs%2Fshort_array_element_width_threshold%2Fgreater_than_max_width.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dba01aee15a45b8417c06df69e38af6956e03a8/tests%2Fsource%2Fconfigs%2Fshort_array_element_width_threshold%2Fgreater_than_max_width.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fshort_array_element_width_threshold%2Fgreater_than_max_width.rs?ref=0dba01aee15a45b8417c06df69e38af6956e03a8", "patch": "@@ -0,0 +1,12 @@\n+// rustfmt-max_width: 20\n+// rustfmt-short_array_element_width_threshold: 30\n+\n+fn main() {\n+    pub const FORMAT_TEST: [u64; 5] = [\n+        0x0000000000000000,\n+        0xaaaaaaaaaaaaaaaa,\n+        0xbbbbbbbbbbbbbbbb,\n+        0xcccccccccccccccc,\n+        0xdddddddddddddddd,\n+    ];\n+}"}, {"sha": "78c4adba1c1f184a1b099735d429e06aa70627a3", "filename": "tests/target/configs/short_array_element_width_threshold/10.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0dba01aee15a45b8417c06df69e38af6956e03a8/tests%2Ftarget%2Fconfigs%2Fshort_array_element_width_threshold%2F10.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dba01aee15a45b8417c06df69e38af6956e03a8/tests%2Ftarget%2Fconfigs%2Fshort_array_element_width_threshold%2F10.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fshort_array_element_width_threshold%2F10.rs?ref=0dba01aee15a45b8417c06df69e38af6956e03a8", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-short_array_element_width_threshold: 10\n+\n+fn main() {\n+    pub const FORMAT_TEST: [u64; 5] = [\n+        0x0000000000000000,\n+        0xaaaaaaaaaaaaaaaa,\n+        0xbbbbbbbbbbbbbbbb,\n+        0xcccccccccccccccc,\n+        0xdddddddddddddddd,\n+    ];\n+}"}, {"sha": "6084690652f0682651bc29fcd59ce47d0e861981", "filename": "tests/target/configs/short_array_element_width_threshold/20.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0dba01aee15a45b8417c06df69e38af6956e03a8/tests%2Ftarget%2Fconfigs%2Fshort_array_element_width_threshold%2F20.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dba01aee15a45b8417c06df69e38af6956e03a8/tests%2Ftarget%2Fconfigs%2Fshort_array_element_width_threshold%2F20.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fshort_array_element_width_threshold%2F20.rs?ref=0dba01aee15a45b8417c06df69e38af6956e03a8", "patch": "@@ -0,0 +1,8 @@\n+// rustfmt-short_array_element_width_threshold: 20\n+\n+fn main() {\n+    pub const FORMAT_TEST: [u64; 5] = [\n+        0x0000000000000000, 0xaaaaaaaaaaaaaaaa, 0xbbbbbbbbbbbbbbbb, 0xcccccccccccccccc,\n+        0xdddddddddddddddd,\n+    ];\n+}"}, {"sha": "710b6fe7c4ba0c764483e12f539644aca109bf3b", "filename": "tests/target/configs/short_array_element_width_threshold/greater_than_max_width.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0dba01aee15a45b8417c06df69e38af6956e03a8/tests%2Ftarget%2Fconfigs%2Fshort_array_element_width_threshold%2Fgreater_than_max_width.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dba01aee15a45b8417c06df69e38af6956e03a8/tests%2Ftarget%2Fconfigs%2Fshort_array_element_width_threshold%2Fgreater_than_max_width.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fshort_array_element_width_threshold%2Fgreater_than_max_width.rs?ref=0dba01aee15a45b8417c06df69e38af6956e03a8", "patch": "@@ -0,0 +1,12 @@\n+// rustfmt-max_width: 20\n+// rustfmt-short_array_element_width_threshold: 30\n+\n+fn main() {\n+    pub const FORMAT_TEST: [u64; 5] = [\n+        0x0000000000000000,\n+        0xaaaaaaaaaaaaaaaa,\n+        0xbbbbbbbbbbbbbbbb,\n+        0xcccccccccccccccc,\n+        0xdddddddddddddddd,\n+    ];\n+}"}]}