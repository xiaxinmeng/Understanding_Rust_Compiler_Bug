{"sha": "6695690d495ff7b2ffb6dd78db4ae9b9639dee67", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2OTU2OTBkNDk1ZmY3YjJmZmI2ZGQ3OGRiNGFlOWI5NjM5ZGVlNjc=", "commit": {"author": {"name": "Sebastian Widua", "email": "seppel3210@gmail.com", "date": "2021-01-31T11:19:09Z"}, "committer": {"name": "Sebastian Widua", "email": "seppel3210@gmail.com", "date": "2021-01-31T11:19:09Z"}, "message": "Fix small typo", "tree": {"sha": "10ca541bf4829ab013896dfd7c1cd5bb2b9aa76d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10ca541bf4829ab013896dfd7c1cd5bb2b9aa76d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6695690d495ff7b2ffb6dd78db4ae9b9639dee67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6695690d495ff7b2ffb6dd78db4ae9b9639dee67", "html_url": "https://github.com/rust-lang/rust/commit/6695690d495ff7b2ffb6dd78db4ae9b9639dee67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6695690d495ff7b2ffb6dd78db4ae9b9639dee67/comments", "author": {"login": "Seppel3210", "id": 34406239, "node_id": "MDQ6VXNlcjM0NDA2MjM5", "avatar_url": "https://avatars.githubusercontent.com/u/34406239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Seppel3210", "html_url": "https://github.com/Seppel3210", "followers_url": "https://api.github.com/users/Seppel3210/followers", "following_url": "https://api.github.com/users/Seppel3210/following{/other_user}", "gists_url": "https://api.github.com/users/Seppel3210/gists{/gist_id}", "starred_url": "https://api.github.com/users/Seppel3210/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Seppel3210/subscriptions", "organizations_url": "https://api.github.com/users/Seppel3210/orgs", "repos_url": "https://api.github.com/users/Seppel3210/repos", "events_url": "https://api.github.com/users/Seppel3210/events{/privacy}", "received_events_url": "https://api.github.com/users/Seppel3210/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Seppel3210", "id": 34406239, "node_id": "MDQ6VXNlcjM0NDA2MjM5", "avatar_url": "https://avatars.githubusercontent.com/u/34406239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Seppel3210", "html_url": "https://github.com/Seppel3210", "followers_url": "https://api.github.com/users/Seppel3210/followers", "following_url": "https://api.github.com/users/Seppel3210/following{/other_user}", "gists_url": "https://api.github.com/users/Seppel3210/gists{/gist_id}", "starred_url": "https://api.github.com/users/Seppel3210/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Seppel3210/subscriptions", "organizations_url": "https://api.github.com/users/Seppel3210/orgs", "repos_url": "https://api.github.com/users/Seppel3210/repos", "events_url": "https://api.github.com/users/Seppel3210/events{/privacy}", "received_events_url": "https://api.github.com/users/Seppel3210/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b3242982202707be2485b1e4cf5f3b34466a38d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b3242982202707be2485b1e4cf5f3b34466a38d", "html_url": "https://github.com/rust-lang/rust/commit/9b3242982202707be2485b1e4cf5f3b34466a38d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3218b3535c97027a43cc2b3da51ab67064cbbd66", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6695690d495ff7b2ffb6dd78db4ae9b9639dee67/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6695690d495ff7b2ffb6dd78db4ae9b9639dee67/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=6695690d495ff7b2ffb6dd78db4ae9b9639dee67", "patch": "@@ -972,7 +972,7 @@ impl String {\n         self.vec.try_reserve(additional)\n     }\n \n-    /// Tries to reserves the minimum capacity for exactly `additional` more elements to\n+    /// Tries to reserve the minimum capacity for exactly `additional` more elements to\n     /// be inserted in the given `String`. After calling `reserve_exact`,\n     /// capacity will be greater than or equal to `self.len() + additional`.\n     /// Does nothing if the capacity is already sufficient."}]}