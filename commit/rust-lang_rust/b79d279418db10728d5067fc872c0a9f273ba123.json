{"sha": "b79d279418db10728d5067fc872c0a9f273ba123", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3OWQyNzk0MThkYjEwNzI4ZDUwNjdmYzg3MmMwYTlmMjczYmExMjM=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-18T16:10:01Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-18T16:10:01Z"}, "message": "fix typo", "tree": {"sha": "5fa488bc804e51b1ee765b8e63fac7c8cb8097f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fa488bc804e51b1ee765b8e63fac7c8cb8097f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b79d279418db10728d5067fc872c0a9f273ba123", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b79d279418db10728d5067fc872c0a9f273ba123", "html_url": "https://github.com/rust-lang/rust/commit/b79d279418db10728d5067fc872c0a9f273ba123", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b79d279418db10728d5067fc872c0a9f273ba123/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc2d29450ed5bd0f72179a2a3da8ac4ecf86c47a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc2d29450ed5bd0f72179a2a3da8ac4ecf86c47a", "html_url": "https://github.com/rust-lang/rust/commit/fc2d29450ed5bd0f72179a2a3da8ac4ecf86c47a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "100c526c4c615544f029da1bdf24a597fb980fd4", "filename": "src/doc/tarpl/exotic-sizes.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b79d279418db10728d5067fc872c0a9f273ba123/src%2Fdoc%2Ftarpl%2Fexotic-sizes.md", "raw_url": "https://github.com/rust-lang/rust/raw/b79d279418db10728d5067fc872c0a9f273ba123/src%2Fdoc%2Ftarpl%2Fexotic-sizes.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftarpl%2Fexotic-sizes.md?ref=b79d279418db10728d5067fc872c0a9f273ba123", "patch": "@@ -63,7 +63,7 @@ context.\n Rust largely understands that any operation that produces or stores a ZST can be\n reduced to a no-op. For instance, a `HashSet<T>` can be effeciently implemented\n as a thin wrapper around `HashMap<T, ()>` because all the operations `HashMap`\n-normally does to store and retrieve keys will be completely stripped in\n+normally does to store and retrieve values will be completely stripped in\n monomorphization.\n \n Similarly `Result<(), ()>` and `Option<()>` are effectively just fancy `bool`s."}]}