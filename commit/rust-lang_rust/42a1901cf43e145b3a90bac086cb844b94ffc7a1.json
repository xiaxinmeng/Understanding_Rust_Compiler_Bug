{"sha": "42a1901cf43e145b3a90bac086cb844b94ffc7a1", "node_id": "C_kwDOAAsO6NoAKDQyYTE5MDFjZjQzZTE0NWIzYTkwYmFjMDg2Y2I4NDRiOTRmZmM3YTE", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-08-30T23:47:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-30T23:47:20Z"}, "message": "Rollup merge of #101192 - TaKO8Ki:remove-path-string, r=compiler-errors\n\nRemove path string", "tree": {"sha": "5152f5c65a7ea39a30e94a873f17ca157d1f9173", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5152f5c65a7ea39a30e94a873f17ca157d1f9173"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42a1901cf43e145b3a90bac086cb844b94ffc7a1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjDqGICRBK7hj4Ov3rIwAAltIIAFrrS3OV0Fa5krJs2WES9k5N\nWSvJ4Jmrlan/f9tqWnz7Bwcvig8seTQx/5zkHTu3ztWJ+hayyN7GGu5YhWKroXQO\nsznr4ZEFi3aktytT2QA7Sc5jh/ZLjy2eyzFYB5FVEAgsVTBFUtzloGRUCo6XSd8o\nZqhuyOTTc21FFmeo0kgxr5Py3i6mfARnvvy8fOvxkZ+cy2YlfICH8+GYbAU6Pabz\ntsbqS5BBm3JTmcUgZ82sOHPh0H5LLrsDYseIZEcr98TusrJtIgE3RofNbdvLJNGo\n57jxeVVLKahEtTqsVY6OD3gwvQkcDhrm+Pjbk8kbWsUH/nLH05vL8UY8TggE84U=\n=dpFy\n-----END PGP SIGNATURE-----\n", "payload": "tree 5152f5c65a7ea39a30e94a873f17ca157d1f9173\nparent 60e8550fafd4b4a36ce8083d31d45c02d55a56c9\nparent f6252a48621ef444ab0a4cb6e7d90315cd4702ec\nauthor Yuki Okushi <jtitor@2k36.org> 1661903240 +0900\ncommitter GitHub <noreply@github.com> 1661903240 +0900\n\nRollup merge of #101192 - TaKO8Ki:remove-path-string, r=compiler-errors\n\nRemove path string\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42a1901cf43e145b3a90bac086cb844b94ffc7a1", "html_url": "https://github.com/rust-lang/rust/commit/42a1901cf43e145b3a90bac086cb844b94ffc7a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42a1901cf43e145b3a90bac086cb844b94ffc7a1/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60e8550fafd4b4a36ce8083d31d45c02d55a56c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/60e8550fafd4b4a36ce8083d31d45c02d55a56c9", "html_url": "https://github.com/rust-lang/rust/commit/60e8550fafd4b4a36ce8083d31d45c02d55a56c9"}, {"sha": "f6252a48621ef444ab0a4cb6e7d90315cd4702ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6252a48621ef444ab0a4cb6e7d90315cd4702ec", "html_url": "https://github.com/rust-lang/rust/commit/f6252a48621ef444ab0a4cb6e7d90315cd4702ec"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "3a6119a627368fb18da0c9e7f4638546ce339428", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/42a1901cf43e145b3a90bac086cb844b94ffc7a1/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42a1901cf43e145b3a90bac086cb844b94ffc7a1/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=42a1901cf43e145b3a90bac086cb844b94ffc7a1", "patch": "@@ -2055,22 +2055,22 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n             (exp_found.expected.kind(), exp_found.found.kind())\n         {\n             if let ty::Adt(found_def, found_substs) = *found_ty.kind() {\n-                let path_str = format!(\"{:?}\", exp_def);\n                 if exp_def == &found_def {\n-                    let opt_msg = \"you can convert from `&Option<T>` to `Option<&T>` using \\\n-                                       `.as_ref()`\";\n-                    let result_msg = \"you can convert from `&Result<T, E>` to \\\n-                                          `Result<&T, &E>` using `.as_ref()`\";\n                     let have_as_ref = &[\n-                        (\"std::option::Option\", opt_msg),\n-                        (\"core::option::Option\", opt_msg),\n-                        (\"std::result::Result\", result_msg),\n-                        (\"core::result::Result\", result_msg),\n+                        (\n+                            sym::Option,\n+                            \"you can convert from `&Option<T>` to `Option<&T>` using \\\n+                        `.as_ref()`\",\n+                        ),\n+                        (\n+                            sym::Result,\n+                            \"you can convert from `&Result<T, E>` to \\\n+                        `Result<&T, &E>` using `.as_ref()`\",\n+                        ),\n                     ];\n-                    if let Some(msg) = have_as_ref\n-                        .iter()\n-                        .find_map(|(path, msg)| (&path_str == path).then_some(msg))\n-                    {\n+                    if let Some(msg) = have_as_ref.iter().find_map(|(name, msg)| {\n+                        self.tcx.is_diagnostic_item(*name, exp_def.did()).then_some(msg)\n+                    }) {\n                         let mut show_suggestion = true;\n                         for (exp_ty, found_ty) in\n                             iter::zip(exp_substs.types(), found_substs.types())"}]}