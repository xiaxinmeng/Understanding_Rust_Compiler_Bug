{"sha": "e04690440b6d77b4da9bfcf593a641133033ae44", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwNDY5MDQ0MGI2ZDc3YjRkYTliZmNmNTkzYTY0MTEzMzAzM2FlNDQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-01T03:55:28Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-01T03:55:28Z"}, "message": "syntax: de-closure-ify `check_or_expected`.", "tree": {"sha": "94907d958cdf40701ae67947d2942989fcea91a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94907d958cdf40701ae67947d2942989fcea91a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e04690440b6d77b4da9bfcf593a641133033ae44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e04690440b6d77b4da9bfcf593a641133033ae44", "html_url": "https://github.com/rust-lang/rust/commit/e04690440b6d77b4da9bfcf593a641133033ae44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e04690440b6d77b4da9bfcf593a641133033ae44/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49780d21b63e0557627e185ed71c84e33eed0c4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/49780d21b63e0557627e185ed71c84e33eed0c4b", "html_url": "https://github.com/rust-lang/rust/commit/49780d21b63e0557627e185ed71c84e33eed0c4b"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "95f84d5cb3314ebe2120ccb8c7bca5d369938cfc", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e04690440b6d77b4da9bfcf593a641133033ae44/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e04690440b6d77b4da9bfcf593a641133033ae44/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=e04690440b6d77b4da9bfcf593a641133033ae44", "patch": "@@ -549,37 +549,37 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n-    fn check_or_expected(&mut self, ok: bool, mk_type: impl FnOnce() -> TokenType) -> bool {\n+    fn check_or_expected(&mut self, ok: bool, typ: TokenType) -> bool {\n         if ok {\n             true\n         } else {\n-            self.expected_tokens.push(mk_type());\n+            self.expected_tokens.push(typ);\n             false\n         }\n     }\n \n     crate fn check_ident(&mut self) -> bool {\n-        self.check_or_expected(self.token.is_ident(), || TokenType::Ident)\n+        self.check_or_expected(self.token.is_ident(), TokenType::Ident)\n     }\n \n     fn check_path(&mut self) -> bool {\n-        self.check_or_expected(self.token.is_path_start(), || TokenType::Path)\n+        self.check_or_expected(self.token.is_path_start(), TokenType::Path)\n     }\n \n     fn check_type(&mut self) -> bool {\n-        self.check_or_expected(self.token.can_begin_type(), || TokenType::Type)\n+        self.check_or_expected(self.token.can_begin_type(), TokenType::Type)\n     }\n \n     fn check_const_arg(&mut self) -> bool {\n-        self.check_or_expected(self.token.can_begin_const_arg(), || TokenType::Const)\n+        self.check_or_expected(self.token.can_begin_const_arg(), TokenType::Const)\n     }\n \n     /// Checks to see if the next token is either `+` or `+=`.\n     /// Otherwise returns `false`.\n     fn check_plus(&mut self) -> bool {\n         self.check_or_expected(\n             self.token.is_like_plus(),\n-            || TokenType::Token(token::BinOp(token::Plus)),\n+            TokenType::Token(token::BinOp(token::Plus)),\n         )\n     }\n "}]}