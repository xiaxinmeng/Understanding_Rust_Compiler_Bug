{"sha": "0e53b788309c446788335b4fbb478490eea1e667", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNTNiNzg4MzA5YzQ0Njc4ODMzNWI0ZmJiNDc4NDkwZWVhMWU2Njc=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-02-17T23:33:27Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-05-27T19:08:45Z"}, "message": "Make anon params lint warn-by-default", "tree": {"sha": "24db26efbaba625629b6a02dabc07c23b90f21af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24db26efbaba625629b6a02dabc07c23b90f21af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e53b788309c446788335b4fbb478490eea1e667", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e53b788309c446788335b4fbb478490eea1e667", "html_url": "https://github.com/rust-lang/rust/commit/0e53b788309c446788335b4fbb478490eea1e667", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e53b788309c446788335b4fbb478490eea1e667/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcb405667c3b1726ff4c21da1cc93839d183033a", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcb405667c3b1726ff4c21da1cc93839d183033a", "html_url": "https://github.com/rust-lang/rust/commit/dcb405667c3b1726ff4c21da1cc93839d183033a"}], "stats": {"total": 131, "additions": 109, "deletions": 22}, "files": [{"sha": "9e1542017116049baf697ae9c132c1aff1f38a2f", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0e53b788309c446788335b4fbb478490eea1e667/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e53b788309c446788335b4fbb478490eea1e667/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=0e53b788309c446788335b4fbb478490eea1e667", "patch": "@@ -69,6 +69,7 @@\n #![feature(catch_expr)]\n #![feature(test)]\n #![feature(in_band_lifetimes)]\n+#![feature(macro_at_most_once_rep)]\n \n #![recursion_limit=\"512\"]\n "}, {"sha": "56b7da4c5da8c534e3565d54f703652a608ad04e", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/0e53b788309c446788335b4fbb478490eea1e667/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e53b788309c446788335b4fbb478490eea1e667/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=0e53b788309c446788335b4fbb478490eea1e667", "patch": "@@ -77,8 +77,9 @@ pub struct Lint {\n     /// e.g. \"imports that are never used\"\n     pub desc: &'static str,\n \n-    /// Deny lint after this edition\n-    pub edition_deny: Option<Edition>,\n+    /// Starting at the given edition, default to the given lint level. If this is `None`, then use\n+    /// `default_level`.\n+    pub edition_lint_opts: Option<(Edition, Level)>,\n }\n \n impl Lint {\n@@ -88,41 +89,40 @@ impl Lint {\n     }\n \n     pub fn default_level(&self, session: &Session) -> Level {\n-        if let Some(edition_deny) = self.edition_deny {\n-            if session.edition() >= edition_deny {\n-                return Level::Deny\n-            }\n-        }\n-        self.default_level\n+        self.edition_lint_opts\n+            .filter(|(e, _)| *e <= session.edition())\n+            .map(|(_, l)| l)\n+            .unwrap_or(self.default_level)\n     }\n }\n \n /// Declare a static item of type `&'static Lint`.\n #[macro_export]\n macro_rules! declare_lint {\n-    ($vis: vis $NAME: ident, $Level: ident, $desc: expr, $edition: expr) => (\n+    ($vis: vis $NAME: ident, $Level: ident, $desc: expr) => (\n         $vis static $NAME: &$crate::lint::Lint = &$crate::lint::Lint {\n             name: stringify!($NAME),\n             default_level: $crate::lint::$Level,\n             desc: $desc,\n-            edition_deny: Some($edition)\n+            edition_lint_opts: None,\n         };\n     );\n-    ($vis: vis $NAME: ident, $Level: ident, $desc: expr) => (\n+    ($vis: vis $NAME: ident, $Level: ident, $desc: expr,\n+     $lint_edition: expr => $edition_level: ident $(,)?\n+    ) => (\n         $vis static $NAME: &$crate::lint::Lint = &$crate::lint::Lint {\n             name: stringify!($NAME),\n             default_level: $crate::lint::$Level,\n             desc: $desc,\n-            edition_deny: None,\n+            edition_lint_opts: Some(($lint_edition, $crate::lint::Level::$edition_level)),\n         };\n     );\n }\n \n /// Declare a static `LintArray` and return it as an expression.\n #[macro_export]\n macro_rules! lint_array {\n-    ($( $lint:expr ),*,) => { lint_array!( $( $lint ),* ) };\n-    ($( $lint:expr ),*) => {{\n+    ($( $lint:expr ),* $(,)?) => {{\n          static ARRAY: LintArray = &[ $( &$lint ),* ];\n          ARRAY\n     }}"}, {"sha": "8a0850595c889c9eee14ef155f5bb62c50e4086b", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/0e53b788309c446788335b4fbb478490eea1e667/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e53b788309c446788335b4fbb478490eea1e667/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=0e53b788309c446788335b4fbb478490eea1e667", "patch": "@@ -43,6 +43,7 @@ use std::collections::HashSet;\n \n use syntax::ast;\n use syntax::attr;\n+use syntax::edition::Edition;\n use syntax::feature_gate::{AttributeGate, AttributeType, Stability, deprecated_attributes};\n use syntax_pos::{BytePos, Span, SyntaxContext};\n use syntax::symbol::keywords;\n@@ -616,7 +617,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingDebugImplementations {\n declare_lint! {\n     pub ANONYMOUS_PARAMETERS,\n     Allow,\n-    \"detects anonymous parameters\"\n+    \"detects anonymous parameters\",\n+    Edition::Edition2018 => Warn,\n }\n \n /// Checks for use of anonymous parameters (RFC 1685)\n@@ -637,9 +639,29 @@ impl EarlyLintPass for AnonymousParameters {\n                     match arg.pat.node {\n                         ast::PatKind::Ident(_, ident, None) => {\n                             if ident.name == keywords::Invalid.name() {\n-                                cx.span_lint(ANONYMOUS_PARAMETERS,\n-                                             arg.pat.span,\n-                                             \"use of deprecated anonymous parameter\");\n+                                let ty_snip = cx\n+                                    .sess\n+                                    .codemap()\n+                                    .span_to_snippet(arg.ty.span);\n+\n+                                let (ty_snip, appl) = if let Ok(snip) = ty_snip {\n+                                    (snip, Applicability::MachineApplicable)\n+                                } else {\n+                                    (\"<type>\".to_owned(), Applicability::HasPlaceholders)\n+                                };\n+\n+                                cx.struct_span_lint(\n+                                    ANONYMOUS_PARAMETERS,\n+                                    arg.pat.span,\n+                                    \"anonymous parameters are deprecated and will be \\\n+                                     removed in the next edition.\"\n+                                ).span_suggestion_with_applicability(\n+                                    arg.pat.span,\n+                                    \"Try naming the parameter or explicitly \\\n+                                    ignoring it\",\n+                                    format!(\"_: {}\", ty_snip),\n+                                    appl\n+                                ).emit();\n                             }\n                         }\n                         _ => (),"}, {"sha": "c5994d0536ee007299bc6ac9a528b6331896a05e", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0e53b788309c446788335b4fbb478490eea1e667/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e53b788309c446788335b4fbb478490eea1e667/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=0e53b788309c446788335b4fbb478490eea1e667", "patch": "@@ -29,6 +29,7 @@\n #![feature(macro_vis_matcher)]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]\n+#![feature(macro_at_most_once_rep)]\n \n extern crate syntax;\n #[macro_use]"}, {"sha": "7303af73cac9ef9b17112311e519b64287230e76", "filename": "src/test/compile-fail-fulldeps/auxiliary/lint_for_crate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_for_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_for_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_for_crate.rs?ref=0e53b788309c446788335b4fbb478490eea1e667", "patch": "@@ -13,6 +13,7 @@\n #![feature(plugin_registrar, rustc_private)]\n #![feature(box_syntax)]\n #![feature(macro_vis_matcher)]\n+#![feature(macro_at_most_once_rep)]\n \n #[macro_use] extern crate rustc;\n extern crate rustc_plugin;"}, {"sha": "3f3997726c93996e6846bfa3a73c69ef36a2e9f2", "filename": "src/test/compile-fail-fulldeps/auxiliary/lint_group_plugin_test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs?ref=0e53b788309c446788335b4fbb478490eea1e667", "patch": "@@ -13,6 +13,7 @@\n #![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n #![feature(macro_vis_matcher)]\n+#![feature(macro_at_most_once_rep)]\n \n // Load rustc as a plugin to get macros\n #[macro_use]"}, {"sha": "ab39709c529dcd3298361937db77ad02f761c942", "filename": "src/test/compile-fail-fulldeps/auxiliary/lint_plugin_test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fauxiliary%2Flint_plugin_test.rs?ref=0e53b788309c446788335b4fbb478490eea1e667", "patch": "@@ -13,6 +13,7 @@\n #![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n #![feature(macro_vis_matcher)]\n+#![feature(macro_at_most_once_rep)]\n \n extern crate syntax;\n "}, {"sha": "4d37ba920f3d6bfb3add472d237646ecd34e86de", "filename": "src/test/compile-fail/anon-params-deprecated.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fcompile-fail%2Fanon-params-deprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fcompile-fail%2Fanon-params-deprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fanon-params-deprecated.rs?ref=0e53b788309c446788335b4fbb478490eea1e667", "patch": "@@ -12,13 +12,13 @@\n // Test for the anonymous_parameters deprecation lint (RFC 1685)\n \n trait T {\n-    fn foo(i32); //~ ERROR use of deprecated anonymous parameter\n+    fn foo(i32); //~ ERROR anonymous parameters are deprecated\n                  //~| WARNING hard error\n \n     fn bar_with_default_impl(String, String) {}\n-    //~^ ERROR use of deprecated anonymous parameter\n+    //~^ ERROR anonymous parameters are deprecated\n     //~| WARNING hard error\n-    //~| ERROR use of deprecated anonymous parameter\n+    //~| ERROR anonymous parameters are deprecated\n     //~| WARNING hard error\n }\n "}, {"sha": "5f320135edfd1715faef57475a9bad7bc51af953", "filename": "src/test/compile-fail/future-incompatible-lint-group.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fcompile-fail%2Ffuture-incompatible-lint-group.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fcompile-fail%2Ffuture-incompatible-lint-group.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffuture-incompatible-lint-group.rs?ref=0e53b788309c446788335b4fbb478490eea1e667", "patch": "@@ -11,7 +11,7 @@\n #![deny(future_incompatible)]\n \n trait Tr {\n-    fn f(u8) {} //~ ERROR use of deprecated anonymous parameter\n+    fn f(u8) {} //~ ERROR anonymous parameters are deprecated\n                 //~^ WARN this was previously accepted\n }\n "}, {"sha": "e3246673fabaf7f81ce59490f2d8f560a8b6925d", "filename": "src/test/run-pass-fulldeps/auxiliary/lint_for_crate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Flint_for_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Flint_for_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Flint_for_crate.rs?ref=0e53b788309c446788335b4fbb478490eea1e667", "patch": "@@ -13,6 +13,7 @@\n #![feature(plugin_registrar, rustc_private)]\n #![feature(box_syntax)]\n #![feature(macro_vis_matcher)]\n+#![feature(macro_at_most_once_rep)]\n \n #[macro_use] extern crate rustc;\n extern crate rustc_plugin;"}, {"sha": "63b4a6a1c62dfc5b977a13947ad0ba54f5ca8c00", "filename": "src/test/run-pass-fulldeps/proc-macro/auxiliary/issue-40001-plugin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fissue-40001-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fissue-40001-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fissue-40001-plugin.rs?ref=0e53b788309c446788335b4fbb478490eea1e667", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n #![feature(box_syntax, plugin, plugin_registrar, rustc_private)]\n #![feature(macro_vis_matcher)]\n+#![feature(macro_at_most_once_rep)]\n #![crate_type = \"dylib\"]\n \n #[macro_use]"}, {"sha": "3f3997726c93996e6846bfa3a73c69ef36a2e9f2", "filename": "src/test/ui-fulldeps/auxiliary/lint_group_plugin_test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_group_plugin_test.rs?ref=0e53b788309c446788335b4fbb478490eea1e667", "patch": "@@ -13,6 +13,7 @@\n #![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n #![feature(macro_vis_matcher)]\n+#![feature(macro_at_most_once_rep)]\n \n // Load rustc as a plugin to get macros\n #[macro_use]"}, {"sha": "ab39709c529dcd3298361937db77ad02f761c942", "filename": "src/test/ui-fulldeps/auxiliary/lint_plugin_test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint_plugin_test.rs?ref=0e53b788309c446788335b4fbb478490eea1e667", "patch": "@@ -13,6 +13,7 @@\n #![feature(plugin_registrar)]\n #![feature(box_syntax, rustc_private)]\n #![feature(macro_vis_matcher)]\n+#![feature(macro_at_most_once_rep)]\n \n extern crate syntax;\n "}, {"sha": "de223d9ccf7b6b46e1f3624b4810f13bf43e61c5", "filename": "src/test/ui/lint-anon-param-edition.fixed", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fui%2Flint-anon-param-edition.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fui%2Flint-anon-param-edition.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint-anon-param-edition.fixed?ref=0e53b788309c446788335b4fbb478490eea1e667", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// tests that the anonymous_parameters lint is warn-by-default on the 2018 edition\n+\n+// compile-pass\n+// compile-flags: --edition=2018\n+// run-rustfix\n+\n+trait Foo {\n+    fn foo(_: u8);\n+    //^ WARN anonymous parameters are deprecated\n+    //| WARN this was previously accepted\n+}\n+\n+fn main() {}"}, {"sha": "35406806df99c13a6f37694dc483495aa6b06cb5", "filename": "src/test/ui/lint-anon-param-edition.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fui%2Flint-anon-param-edition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fui%2Flint-anon-param-edition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint-anon-param-edition.rs?ref=0e53b788309c446788335b4fbb478490eea1e667", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// tests that the anonymous_parameters lint is warn-by-default on the 2018 edition\n+\n+// compile-pass\n+// compile-flags: --edition=2018\n+// run-rustfix\n+\n+trait Foo {\n+    fn foo(u8);\n+    //^ WARN anonymous parameters are deprecated\n+    //| WARN this was previously accepted\n+}\n+\n+fn main() {}"}, {"sha": "de347770aec77aa7d52ab68716268b7d13675c27", "filename": "src/test/ui/lint-anon-param-edition.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fui%2Flint-anon-param-edition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e53b788309c446788335b4fbb478490eea1e667/src%2Ftest%2Fui%2Flint-anon-param-edition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint-anon-param-edition.stderr?ref=0e53b788309c446788335b4fbb478490eea1e667", "patch": "@@ -0,0 +1,10 @@\n+warning: anonymous parameters are deprecated and will be removed in the next edition.\n+  --> $DIR/lint-anon-param-edition.rs:18:12\n+   |\n+LL |     fn foo(u8);\n+   |            ^^ help: Try naming the parameter or explicitly ignoring it: `_: u8`\n+   |\n+   = note: #[warn(anonymous_parameters)] on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #41686 <https://github.com/rust-lang/rust/issues/41686>\n+"}]}