{"sha": "a1c3eb60433163e341feddb7c1a1cc7f65421764", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExYzNlYjYwNDMzMTYzZTM0MWZlZGRiN2MxYTFjYzdmNjU0MjE3NjQ=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-03-05T13:08:27Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-03-05T15:39:20Z"}, "message": "Don't always eval arguments inside .expect(), use unwrap_or_else and closure. (clippy::expect_fun_call)", "tree": {"sha": "bf59560530f56084cb7c5cf3cc4dccc7b6d043d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf59560530f56084cb7c5cf3cc4dccc7b6d043d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1c3eb60433163e341feddb7c1a1cc7f65421764", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1c3eb60433163e341feddb7c1a1cc7f65421764", "html_url": "https://github.com/rust-lang/rust/commit/a1c3eb60433163e341feddb7c1a1cc7f65421764", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1c3eb60433163e341feddb7c1a1cc7f65421764/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fc5c118dd328e786c1f389feac259f65409589c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fc5c118dd328e786c1f389feac259f65409589c", "html_url": "https://github.com/rust-lang/rust/commit/3fc5c118dd328e786c1f389feac259f65409589c"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "9c9a00295c3fa2026c6e5b29672d9380cf838103", "filename": "src/librustdoc/docfs.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a1c3eb60433163e341feddb7c1a1cc7f65421764/src%2Flibrustdoc%2Fdocfs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1c3eb60433163e341feddb7c1a1cc7f65421764/src%2Flibrustdoc%2Fdocfs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdocfs.rs?ref=a1c3eb60433163e341feddb7c1a1cc7f65421764", "patch": "@@ -90,14 +90,14 @@ impl DocFS {\n             let sender = self.errors.sender.clone().unwrap();\n             rayon::spawn(move || match fs::write(&path, &contents) {\n                 Ok(_) => {\n-                    sender\n-                        .send(None)\n-                        .expect(&format!(\"failed to send error on \\\"{}\\\"\", path.display()));\n+                    sender.send(None).unwrap_or_else(|_| {\n+                        panic!(\"failed to send error on \\\"{}\\\"\", path.display())\n+                    });\n                 }\n                 Err(e) => {\n-                    sender\n-                        .send(Some(format!(\"\\\"{}\\\": {}\", path.display(), e)))\n-                        .expect(&format!(\"failed to send non-error on \\\"{}\\\"\", path.display()));\n+                    sender.send(Some(format!(\"\\\"{}\\\": {}\", path.display(), e))).unwrap_or_else(\n+                        |_| panic!(\"failed to send non-error on \\\"{}\\\"\", path.display()),\n+                    );\n                 }\n             });\n             Ok(())"}, {"sha": "55f9df9caafb274a72d0fca8e7541ecabb2f3f10", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a1c3eb60433163e341feddb7c1a1cc7f65421764/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1c3eb60433163e341feddb7c1a1cc7f65421764/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=a1c3eb60433163e341feddb7c1a1cc7f65421764", "patch": "@@ -158,7 +158,7 @@ pub fn test_main_static_abort(tests: &[&TestDescAndFn]) {\n             .filter(|test| test.desc.name.as_slice() == name)\n             .map(make_owned_test)\n             .next()\n-            .expect(&format!(\"couldn't find a test with the provided name '{}'\", name));\n+            .unwrap_or_else(|| panic!(\"couldn't find a test with the provided name '{}'\", name));\n         let TestDescAndFn { desc, testfn } = test;\n         let testfn = match testfn {\n             StaticTestFn(f) => f,"}]}