{"sha": "c7f464774901d40483a6edc4f1294e1648dee4d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3ZjQ2NDc3NDkwMWQ0MDQ4M2E2ZWRjNGYxMjk0ZTE2NDhkZWU0ZDU=", "commit": {"author": {"name": "Matthias Einwag", "email": "matthias.einwag@live.com", "date": "2020-09-23T15:37:02Z"}, "committer": {"name": "Matthias Einwag", "email": "matthias.einwag@live.com", "date": "2020-09-23T15:37:02Z"}, "message": "Move unlink on download into download function\n\nSince this is required by all callsites its easier to have it in the\nfunction itself.", "tree": {"sha": "11b1afe2df88b9909db0155bb384ae4ef486ac4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11b1afe2df88b9909db0155bb384ae4ef486ac4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7f464774901d40483a6edc4f1294e1648dee4d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7f464774901d40483a6edc4f1294e1648dee4d5", "html_url": "https://github.com/rust-lang/rust/commit/c7f464774901d40483a6edc4f1294e1648dee4d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7f464774901d40483a6edc4f1294e1648dee4d5/comments", "author": {"login": "Matthias247", "id": 6330334, "node_id": "MDQ6VXNlcjYzMzAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6330334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Matthias247", "html_url": "https://github.com/Matthias247", "followers_url": "https://api.github.com/users/Matthias247/followers", "following_url": "https://api.github.com/users/Matthias247/following{/other_user}", "gists_url": "https://api.github.com/users/Matthias247/gists{/gist_id}", "starred_url": "https://api.github.com/users/Matthias247/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Matthias247/subscriptions", "organizations_url": "https://api.github.com/users/Matthias247/orgs", "repos_url": "https://api.github.com/users/Matthias247/repos", "events_url": "https://api.github.com/users/Matthias247/events{/privacy}", "received_events_url": "https://api.github.com/users/Matthias247/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Matthias247", "id": 6330334, "node_id": "MDQ6VXNlcjYzMzAzMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6330334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Matthias247", "html_url": "https://github.com/Matthias247", "followers_url": "https://api.github.com/users/Matthias247/followers", "following_url": "https://api.github.com/users/Matthias247/following{/other_user}", "gists_url": "https://api.github.com/users/Matthias247/gists{/gist_id}", "starred_url": "https://api.github.com/users/Matthias247/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Matthias247/subscriptions", "organizations_url": "https://api.github.com/users/Matthias247/orgs", "repos_url": "https://api.github.com/users/Matthias247/repos", "events_url": "https://api.github.com/users/Matthias247/events{/privacy}", "received_events_url": "https://api.github.com/users/Matthias247/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df4d59512e496ff010c8710e8ea8e2db4a7f4822", "url": "https://api.github.com/repos/rust-lang/rust/commits/df4d59512e496ff010c8710e8ea8e2db4a7f4822", "html_url": "https://github.com/rust-lang/rust/commit/df4d59512e496ff010c8710e8ea8e2db4a7f4822"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "2896d90ac94b4873bafdb9c522f3503571ea2ef0", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c7f464774901d40483a6edc4f1294e1648dee4d5/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/c7f464774901d40483a6edc4f1294e1648dee4d5/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=c7f464774901d40483a6edc4f1294e1648dee4d5", "patch": "@@ -200,15 +200,11 @@ async function bootstrapExtension(config: Config, state: PersistentState): Promi\n     const dest = path.join(config.globalStoragePath, \"rust-analyzer.vsix\");\n \n     await downloadWithRetryDialog(state, async () => {\n-        // Unlinking the exe file before moving new one on its place should prevent ETXTBSY error.\n-        await fs.unlink(dest).catch(err => {\n-            if (err.code !== \"ENOENT\") throw err;\n-        });\n-\n         await download({\n             url: artifact.browser_download_url,\n             dest,\n             progressTitle: \"Downloading rust-analyzer extension\",\n+            overwrite: true,\n         });\n     });\n \n@@ -330,17 +326,13 @@ async function getServer(config: Config, state: PersistentState): Promise<string\n     assert(!!artifact, `Bad release: ${JSON.stringify(release)}`);\n \n     await downloadWithRetryDialog(state, async () => {\n-        // Unlinking the exe file before moving new one on its place should prevent ETXTBSY error.\n-        await fs.unlink(dest).catch(err => {\n-            if (err.code !== \"ENOENT\") throw err;\n-        });\n-\n         await download({\n             url: artifact.browser_download_url,\n             dest,\n             progressTitle: \"Downloading rust-analyzer server\",\n             gunzip: true,\n-            mode: 0o755\n+            mode: 0o755,\n+            overwrite: true,\n         });\n     });\n "}, {"sha": "e746465d1d391f201e63473bc3983ec3f21bc9dc", "filename": "editors/code/src/net.ts", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c7f464774901d40483a6edc4f1294e1648dee4d5/editors%2Fcode%2Fsrc%2Fnet.ts", "raw_url": "https://github.com/rust-lang/rust/raw/c7f464774901d40483a6edc4f1294e1648dee4d5/editors%2Fcode%2Fsrc%2Fnet.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fnet.ts?ref=c7f464774901d40483a6edc4f1294e1648dee4d5", "patch": "@@ -76,6 +76,7 @@ interface DownloadOpts {\n     dest: string;\n     mode?: number;\n     gunzip?: boolean;\n+    overwrite?: boolean,\n }\n \n export async function download(opts: DownloadOpts) {\n@@ -85,6 +86,13 @@ export async function download(opts: DownloadOpts) {\n     const randomHex = crypto.randomBytes(5).toString(\"hex\");\n     const tempFile = path.join(dest.dir, `${dest.name}${randomHex}`);\n \n+    if (opts.overwrite) {\n+        // Unlinking the exe file before moving new one on its place should prevent ETXTBSY error.\n+        await fs.promises.unlink(opts.dest).catch(err => {\n+            if (err.code !== \"ENOENT\") throw err;\n+        });\n+    }\n+\n     await vscode.window.withProgress(\n         {\n             location: vscode.ProgressLocation.Notification,"}]}