{"sha": "430583c8b4efdccb19e87b2f312fc22118c6685c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzMDU4M2M4YjRlZmRjY2IxOWU4N2IyZjMxMmZjMjIxMThjNjY4NWM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-11-28T02:41:17Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-11-28T19:29:53Z"}, "message": "librustc: Allow &T to be assigned to *T. r=nmatsakis", "tree": {"sha": "1d3b0768851ac9988de2ebb5938d40fe04b3b30d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d3b0768851ac9988de2ebb5938d40fe04b3b30d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/430583c8b4efdccb19e87b2f312fc22118c6685c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/430583c8b4efdccb19e87b2f312fc22118c6685c", "html_url": "https://github.com/rust-lang/rust/commit/430583c8b4efdccb19e87b2f312fc22118c6685c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/430583c8b4efdccb19e87b2f312fc22118c6685c/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07f4031bb40967f9c5c0ee61b71e1d9cffd34b58", "url": "https://api.github.com/repos/rust-lang/rust/commits/07f4031bb40967f9c5c0ee61b71e1d9cffd34b58", "html_url": "https://github.com/rust-lang/rust/commit/07f4031bb40967f9c5c0ee61b71e1d9cffd34b58"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "fc1db7930e99458f79a466b12acc3177b6118068", "filename": "src/librustc/middle/typeck/infer/assignment.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/430583c8b4efdccb19e87b2f312fc22118c6685c/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fassignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/430583c8b4efdccb19e87b2f312fc22118c6685c/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fassignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fassignment.rs?ref=430583c8b4efdccb19e87b2f312fc22118c6685c", "patch": "@@ -136,9 +136,9 @@ priv impl Assign {\n \n         match (a_bnd, b_bnd) {\n             (Some(a_bnd), Some(b_bnd)) => {\n-                // check for a case where a non-region pointer (@, ~) is\n-                // being assigned to a region pointer:\n                 match (ty::get(a_bnd).sty, ty::get(b_bnd).sty) {\n+                    // check for a case where a non-region pointer (@, ~) is\n+                    // being assigned to a region pointer:\n                     (ty::ty_box(_), ty::ty_rptr(r_b, mt_b)) => {\n                         let nr_b = ty::mk_box(self.infcx.tcx,\n                                               {ty: mt_b.ty, mutbl: m_const});\n@@ -184,8 +184,16 @@ priv impl Assign {\n                                         a, nr_b, m_imm, b_f.meta.region)\n                     }\n \n+                    // check for &T being assigned to *T:\n+                    (ty::ty_rptr(_, ref a_t), ty::ty_ptr(ref b_t)) => {\n+                        match Sub(*self).mts(*a_t, *b_t) {\n+                            Ok(_) => Ok(None),\n+                            Err(e) => Err(e)\n+                        }\n+                    }\n+\n+                    // otherwise, assignment follows normal subtype rules:\n                     _ => {\n-                        // otherwise, assignment follows normal subtype rules:\n                         to_ares(Sub(*self).tys(a, b))\n                     }\n                 }"}, {"sha": "f205798c36af63298249676c18e2c40891a355eb", "filename": "src/test/run-pass/unsafe-pointer-assignability.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/430583c8b4efdccb19e87b2f312fc22118c6685c/src%2Ftest%2Frun-pass%2Funsafe-pointer-assignability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/430583c8b4efdccb19e87b2f312fc22118c6685c/src%2Ftest%2Frun-pass%2Funsafe-pointer-assignability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funsafe-pointer-assignability.rs?ref=430583c8b4efdccb19e87b2f312fc22118c6685c", "patch": "@@ -0,0 +1,12 @@\n+fn f(x: *int) {\n+    unsafe {\n+        assert *x == 3;\n+    }\n+}\n+\n+fn main() {\n+    f(&3);\n+}\n+\n+\n+"}]}