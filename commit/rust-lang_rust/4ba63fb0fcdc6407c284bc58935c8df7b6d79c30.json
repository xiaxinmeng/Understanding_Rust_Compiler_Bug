{"sha": "4ba63fb0fcdc6407c284bc58935c8df7b6d79c30", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiYTYzZmIwZmNkYzY0MDdjMjg0YmM1ODkzNWM4ZGY3YjZkNzljMzA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-10-15T07:50:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-10-15T09:03:32Z"}, "message": "explain our shell encoding", "tree": {"sha": "09560e85b9eaeff3a81522cc51f741c772c6b1ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09560e85b9eaeff3a81522cc51f741c772c6b1ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ba63fb0fcdc6407c284bc58935c8df7b6d79c30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ba63fb0fcdc6407c284bc58935c8df7b6d79c30", "html_url": "https://github.com/rust-lang/rust/commit/4ba63fb0fcdc6407c284bc58935c8df7b6d79c30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ba63fb0fcdc6407c284bc58935c8df7b6d79c30/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42c1e779cbacf71550aa3ea725c72cb65e8293fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/42c1e779cbacf71550aa3ea725c72cb65e8293fd", "html_url": "https://github.com/rust-lang/rust/commit/42c1e779cbacf71550aa3ea725c72cb65e8293fd"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "15c66f8c0dbaa993a5fe0bf892ffef109b421518", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4ba63fb0fcdc6407c284bc58935c8df7b6d79c30/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ba63fb0fcdc6407c284bc58935c8df7b6d79c30/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=4ba63fb0fcdc6407c284bc58935c8df7b6d79c30", "patch": "@@ -340,6 +340,11 @@ path = \"lib.rs\"\n     let sysroot = if is_host { dir.join(\"HOST\") } else { PathBuf::from(dir) };\n     std::env::set_var(\"MIRI_SYSROOT\", &sysroot); // pass the env var to the processes we spawn, which will turn it into \"--sysroot\" flags\n     if print_env {\n+        // Escape an arbitrary string for the shell: by wrapping it in `'`, the only special\n+        // character we have to worry about is `'` itself. Everything else is taken literally\n+        // in these strings. `'` is encoded as `'\"'\"'`: the outer `'` end and being a\n+        // `'`-quoted string, respectively; the `\"'\"` in the middle represents a single `'`.\n+        // (We could use `'\\''` instead of `'\"'\"'` if we wanted but let's avoid backslashes.)\n         println!(\"MIRI_SYSROOT='{}'\", sysroot.display().to_string().replace('\\'', r#\"'\"'\"'\"#));\n     } else if !ask_user {\n         println!(\"A libstd for Miri is now available in `{}`.\", sysroot.display());"}]}