{"sha": "ca76a77791d2933770ecf9479eea407bfe5a9946", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNzZhNzc3OTFkMjkzMzc3MGVjZjk0NzllZWE0MDdiZmU1YTk5NDY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-30T12:55:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-30T12:55:26Z"}, "message": "Merge #7091\n\n7091: Add an option for extra env vars in the Code extension r=lf- a=lf-\n\nI was debugging some issues with the RA extension around getting `cargo check` to work and it was particularly frustrating to get the RA_LOG variable set on the server since I had to change it in a login file. This should make that easier.\n\nCo-authored-by: lf- <lf-@users.noreply.github.com>", "tree": {"sha": "372c42f052763432b9e65d2d501afd7890beaad3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/372c42f052763432b9e65d2d501afd7890beaad3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca76a77791d2933770ecf9479eea407bfe5a9946", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf7Hi+CRBK7hj4Ov3rIwAAdHIIAHOY9rC8O3uB4+pOgyew5wCF\nA+Ok7jrQiGP25FZfbbgOf32Kok+qShCvSHingMV7bpIvNWmAY/hHl6uYFRo+QgH4\nO3/WqPJKtWvuZuqCWDeJFqLDeV4Ic3GENwE/jhA4IOmDabBD8IAdLQEGUgP0rYU/\nSL1WAz3KgjaDNrHANqrR/4EXNRdAp/HHRmM8LMlG8RZqnZGbjZZM0/KFbDHF5HV0\ntVlz8KYkfhYFl2gRU/xMzmkn88ddHudWbLYrNUlsEGfODLPHPhcGSQUp7nM/XMS0\n/RvHfT/MN9JwH/3MNecQ2l3WE7xNoVOtrm7amEm+1x6Y90ao3C7uA/KIaV68I2g=\n=5c6V\n-----END PGP SIGNATURE-----\n", "payload": "tree 372c42f052763432b9e65d2d501afd7890beaad3\nparent efc76e2c886a0c121b014a587123e2854c5f57df\nparent f7f6ac3554d0b5e380985b1a2070000bfd8ef77b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1609332926 +0000\ncommitter GitHub <noreply@github.com> 1609332926 +0000\n\nMerge #7091\n\n7091: Add an option for extra env vars in the Code extension r=lf- a=lf-\n\nI was debugging some issues with the RA extension around getting `cargo check` to work and it was particularly frustrating to get the RA_LOG variable set on the server since I had to change it in a login file. This should make that easier.\n\nCo-authored-by: lf- <lf-@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca76a77791d2933770ecf9479eea407bfe5a9946", "html_url": "https://github.com/rust-lang/rust/commit/ca76a77791d2933770ecf9479eea407bfe5a9946", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca76a77791d2933770ecf9479eea407bfe5a9946/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efc76e2c886a0c121b014a587123e2854c5f57df", "url": "https://api.github.com/repos/rust-lang/rust/commits/efc76e2c886a0c121b014a587123e2854c5f57df", "html_url": "https://github.com/rust-lang/rust/commit/efc76e2c886a0c121b014a587123e2854c5f57df"}, {"sha": "f7f6ac3554d0b5e380985b1a2070000bfd8ef77b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7f6ac3554d0b5e380985b1a2070000bfd8ef77b", "html_url": "https://github.com/rust-lang/rust/commit/f7f6ac3554d0b5e380985b1a2070000bfd8ef77b"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "587f11b902b26750eda78745755cb1a244a16b64", "filename": "editors/code/package.json", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ca76a77791d2933770ecf9479eea407bfe5a9946/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/ca76a77791d2933770ecf9479eea407bfe5a9946/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=ca76a77791d2933770ecf9479eea407bfe5a9946", "patch": "@@ -283,6 +283,14 @@\n                     \"default\": null,\n                     \"markdownDescription\": \"Path to rust-analyzer executable (points to bundled binary by default). If this is set, then `#rust-analyzer.updates.channel#` setting is not used\"\n                 },\n+                \"rust-analyzer.server.extraEnv\": {\n+                    \"type\": [\n+                        \"null\",\n+                        \"object\"\n+                    ],\n+                    \"default\": null,\n+                    \"markdownDescription\": \"Extra environment variables that will be passed to the rust-analyzer executable. Useful for passing e.g. `RA_LOG` for debugging.\"\n+                },\n                 \"rust-analyzer.trace.server\": {\n                     \"type\": \"string\",\n                     \"scope\": \"window\","}, {"sha": "539e487ec966f03ea4cb6b03e9f51773e7f589e3", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ca76a77791d2933770ecf9479eea407bfe5a9946/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/ca76a77791d2933770ecf9479eea407bfe5a9946/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=ca76a77791d2933770ecf9479eea407bfe5a9946", "patch": "@@ -6,6 +6,10 @@ import { DocumentSemanticsTokensSignature, DocumentSemanticsTokensEditsSignature\n import { assert } from './util';\n import { WorkspaceEdit } from 'vscode';\n \n+export interface Env {\n+    [name: string]: string;\n+}\n+\n function renderCommand(cmd: ra.CommandLink) {\n     return `[${cmd.title}](command:${cmd.command}?${encodeURIComponent(JSON.stringify(cmd.arguments))} '${cmd.tooltip!}')`;\n }\n@@ -27,14 +31,17 @@ async function semanticHighlightingWorkaround<R, F extends (...args: any[]) => v\n     return res;\n }\n \n-export function createClient(serverPath: string, cwd: string): lc.LanguageClient {\n+export function createClient(serverPath: string, cwd: string, extraEnv: Env): lc.LanguageClient {\n     // '.' Is the fallback if no folder is open\n     // TODO?: Workspace folders support Uri's (eg: file://test.txt).\n     // It might be a good idea to test if the uri points to a file.\n \n+    const newEnv = Object.assign({}, process.env);\n+    Object.assign(newEnv, extraEnv);\n+\n     const run: lc.Executable = {\n         command: serverPath,\n-        options: { cwd },\n+        options: { cwd, env: newEnv },\n     };\n     const serverOptions: lc.ServerOptions = {\n         run,"}, {"sha": "fe9f3b4a87b0b1dd4ec807b91eb70b066aeb387f", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca76a77791d2933770ecf9479eea407bfe5a9946/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/ca76a77791d2933770ecf9479eea407bfe5a9946/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=ca76a77791d2933770ecf9479eea407bfe5a9946", "patch": "@@ -1,4 +1,5 @@\n import * as vscode from 'vscode';\n+import { Env } from './client';\n import { log } from \"./util\";\n \n export type UpdatesChannel = \"stable\" | \"nightly\";\n@@ -13,6 +14,7 @@ export class Config {\n     readonly rootSection = \"rust-analyzer\";\n     private readonly requiresReloadOpts = [\n         \"serverPath\",\n+        \"server\",\n         \"cargo\",\n         \"procMacro\",\n         \"files\",\n@@ -92,6 +94,7 @@ export class Config {\n     }\n \n     get serverPath() { return this.get<null | string>(\"serverPath\"); }\n+    get serverExtraEnv() { return this.get<Env | null>(\"server.extraEnv\") ?? {}; }\n     get channel() { return this.get<UpdatesChannel>(\"updates.channel\"); }\n     get askBeforeDownload() { return this.get<boolean>(\"updates.askBeforeDownload\"); }\n     get traceExtension() { return this.get<boolean>(\"trace.extension\"); }"}, {"sha": "e7585184bd439741100593a69fa4699e6f55295d", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca76a77791d2933770ecf9479eea407bfe5a9946/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/ca76a77791d2933770ecf9479eea407bfe5a9946/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=ca76a77791d2933770ecf9479eea407bfe5a9946", "patch": "@@ -24,7 +24,7 @@ export class Ctx {\n         serverPath: string,\n         cwd: string,\n     ): Promise<Ctx> {\n-        const client = createClient(serverPath, cwd);\n+        const client = createClient(serverPath, cwd, config.serverExtraEnv);\n \n         const statusBar = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n         extCtx.subscriptions.push(statusBar);"}]}