{"sha": "086927480be716a14f9c68954d417b544066184b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4NjkyNzQ4MGJlNzE2YTE0ZjljNjg5NTRkNDE3YjU0NDA2NjE4NGI=", "commit": {"author": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2020-02-04T22:00:40Z"}, "committer": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2020-02-12T19:20:56Z"}, "message": "Add notice about using new consts in new code on int modules", "tree": {"sha": "b3bd6828a5ee72e38f74f7a933f5ab7a4cc91a3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3bd6828a5ee72e38f74f7a933f5ab7a4cc91a3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/086927480be716a14f9c68954d417b544066184b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/086927480be716a14f9c68954d417b544066184b", "html_url": "https://github.com/rust-lang/rust/commit/086927480be716a14f9c68954d417b544066184b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/086927480be716a14f9c68954d417b544066184b/comments", "author": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "committer": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c67de2570f881a0601f15c7c15e1fb9a26f2d3bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/c67de2570f881a0601f15c7c15e1fb9a26f2d3bf", "html_url": "https://github.com/rust-lang/rust/commit/c67de2570f881a0601f15c7c15e1fb9a26f2d3bf"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "08cb7959468689ceb44d7a633e2a9b6d26ebaf50", "filename": "src/libcore/num/i128.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fi128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fi128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fi128.rs?ref=086927480be716a14f9c68954d417b544066184b", "patch": "@@ -1,6 +1,9 @@\n //! The 128-bit signed integer type.\n //!\n //! *[See also the `i128` primitive type](../../std/primitive.i128.html).*\n+//!\n+//! Although using these constants won\u2019t cause compilation warnings,\n+//! new code should use the associated constants directly on the primitive type.\n \n #![stable(feature = \"i128\", since = \"1.26.0\")]\n "}, {"sha": "288eaceba59d6babd5f53187e2e73909eb195eb3", "filename": "src/libcore/num/i16.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fi16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fi16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fi16.rs?ref=086927480be716a14f9c68954d417b544066184b", "patch": "@@ -1,6 +1,9 @@\n //! The 16-bit signed integer type.\n //!\n //! *[See also the `i16` primitive type](../../std/primitive.i16.html).*\n+//!\n+//! Although using these constants won\u2019t cause compilation warnings,\n+//! new code should use the associated constants directly on the primitive type.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}, {"sha": "0e1a2ec56ccb2419b003425d87c94c815b4f24e7", "filename": "src/libcore/num/i32.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fi32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fi32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fi32.rs?ref=086927480be716a14f9c68954d417b544066184b", "patch": "@@ -1,6 +1,9 @@\n //! The 32-bit signed integer type.\n //!\n //! *[See also the `i32` primitive type](../../std/primitive.i32.html).*\n+//!\n+//! Although using these constants won\u2019t cause compilation warnings,\n+//! new code should use the associated constants directly on the primitive type.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}, {"sha": "27f7092710b347872842c2016b556cd122e42f27", "filename": "src/libcore/num/i64.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fi64.rs?ref=086927480be716a14f9c68954d417b544066184b", "patch": "@@ -1,6 +1,9 @@\n //! The 64-bit signed integer type.\n //!\n //! *[See also the `i64` primitive type](../../std/primitive.i64.html).*\n+//!\n+//! Although using these constants won\u2019t cause compilation warnings,\n+//! new code should use the associated constants directly on the primitive type.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}, {"sha": "e84b421e1a4447c9785f3b751b8d0bbe7e993831", "filename": "src/libcore/num/i8.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fi8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fi8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fi8.rs?ref=086927480be716a14f9c68954d417b544066184b", "patch": "@@ -1,6 +1,9 @@\n //! The 8-bit signed integer type.\n //!\n //! *[See also the `i8` primitive type](../../std/primitive.i8.html).*\n+//!\n+//! Although using these constants won\u2019t cause compilation warnings,\n+//! new code should use the associated constants directly on the primitive type.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}, {"sha": "0dcfa4a2bd134509a29179cf6b001725c14c5a80", "filename": "src/libcore/num/isize.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fisize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fisize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fisize.rs?ref=086927480be716a14f9c68954d417b544066184b", "patch": "@@ -1,6 +1,9 @@\n //! The pointer-sized signed integer type.\n //!\n //! *[See also the `isize` primitive type](../../std/primitive.isize.html).*\n+//!\n+//! Although using these constants won\u2019t cause compilation warnings,\n+//! new code should use the associated constants directly on the primitive type.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}, {"sha": "dd45ff141539fcd4c7d8b58e51bc3eddbf3b64c5", "filename": "src/libcore/num/u128.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fu128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fu128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fu128.rs?ref=086927480be716a14f9c68954d417b544066184b", "patch": "@@ -1,6 +1,9 @@\n //! The 128-bit unsigned integer type.\n //!\n //! *[See also the `u128` primitive type](../../std/primitive.u128.html).*\n+//!\n+//! Although using these constants won\u2019t cause compilation warnings,\n+//! new code should use the associated constants directly on the primitive type.\n \n #![stable(feature = \"i128\", since = \"1.26.0\")]\n int_module! { u128, #[stable(feature = \"i128\", since=\"1.26.0\")] }"}, {"sha": "738071643b63963d1884914c1ed833c5c314d93c", "filename": "src/libcore/num/u16.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fu16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fu16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fu16.rs?ref=086927480be716a14f9c68954d417b544066184b", "patch": "@@ -1,6 +1,9 @@\n //! The 16-bit unsigned integer type.\n //!\n //! *[See also the `u16` primitive type](../../std/primitive.u16.html).*\n+//!\n+//! Although using these constants won\u2019t cause compilation warnings,\n+//! new code should use the associated constants directly on the primitive type.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}, {"sha": "9800c9099748fece634361a65ec82b83b0587e72", "filename": "src/libcore/num/u32.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fu32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fu32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fu32.rs?ref=086927480be716a14f9c68954d417b544066184b", "patch": "@@ -1,6 +1,9 @@\n //! The 32-bit unsigned integer type.\n //!\n //! *[See also the `u32` primitive type](../../std/primitive.u32.html).*\n+//!\n+//! Although using these constants won\u2019t cause compilation warnings,\n+//! new code should use the associated constants directly on the primitive type.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}, {"sha": "fb686c396f033e4075b02816f870624a3fa88a36", "filename": "src/libcore/num/u64.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fu64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fu64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fu64.rs?ref=086927480be716a14f9c68954d417b544066184b", "patch": "@@ -1,6 +1,9 @@\n //! The 64-bit unsigned integer type.\n //!\n //! *[See also the `u64` primitive type](../../std/primitive.u64.html).*\n+//!\n+//! Although using these constants won\u2019t cause compilation warnings,\n+//! new code should use the associated constants directly on the primitive type.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}, {"sha": "c03cbdda25dbbbcd41b34595d4ba980c7ba894b7", "filename": "src/libcore/num/u8.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fu8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fu8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fu8.rs?ref=086927480be716a14f9c68954d417b544066184b", "patch": "@@ -1,6 +1,9 @@\n //! The 8-bit unsigned integer type.\n //!\n //! *[See also the `u8` primitive type](../../std/primitive.u8.html).*\n+//!\n+//! Although using these constants won\u2019t cause compilation warnings,\n+//! new code should use the associated constants directly on the primitive type.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}, {"sha": "a89304161524463aeb55f15b97784fc4d69fa45e", "filename": "src/libcore/num/usize.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fusize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/086927480be716a14f9c68954d417b544066184b/src%2Flibcore%2Fnum%2Fusize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fusize.rs?ref=086927480be716a14f9c68954d417b544066184b", "patch": "@@ -1,6 +1,9 @@\n //! The pointer-sized unsigned integer type.\n //!\n //! *[See also the `usize` primitive type](../../std/primitive.usize.html).*\n+//!\n+//! Although using these constants won\u2019t cause compilation warnings,\n+//! new code should use the associated constants directly on the primitive type.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}]}