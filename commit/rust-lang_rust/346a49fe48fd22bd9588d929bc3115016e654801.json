{"sha": "346a49fe48fd22bd9588d929bc3115016e654801", "node_id": "C_kwDOAAsO6NoAKDM0NmE0OWZlNDhmZDIyYmQ5NTg4ZDkyOWJjMzExNTAxNmU2NTQ4MDE", "commit": {"author": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-10-02T11:57:10Z"}, "committer": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-10-02T12:07:13Z"}, "message": "Make Hash{Set,Map}::with_hasher unstably const", "tree": {"sha": "6704500fa72588d96411e45bdd80016c5a52bcfb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6704500fa72588d96411e45bdd80016c5a52bcfb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/346a49fe48fd22bd9588d929bc3115016e654801", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/346a49fe48fd22bd9588d929bc3115016e654801", "html_url": "https://github.com/rust-lang/rust/commit/346a49fe48fd22bd9588d929bc3115016e654801", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/346a49fe48fd22bd9588d929bc3115016e654801/comments", "author": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2590e6e892cce1105cc57b480aa07a51ae95fe5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2590e6e892cce1105cc57b480aa07a51ae95fe5", "html_url": "https://github.com/rust-lang/rust/commit/c2590e6e892cce1105cc57b480aa07a51ae95fe5"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "34983b976e3e6d48ac26a3b15030b2b84660e41f", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/346a49fe48fd22bd9588d929bc3115016e654801/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346a49fe48fd22bd9588d929bc3115016e654801/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=346a49fe48fd22bd9588d929bc3115016e654801", "patch": "@@ -280,7 +280,8 @@ impl<K, V, S> HashMap<K, V, S> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"hashmap_build_hasher\", since = \"1.7.0\")]\n-    pub fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {\n+    #[rustc_const_unstable(feature = \"const_collections_with_hasher\", issue = \"102575\")]\n+    pub const fn with_hasher(hash_builder: S) -> HashMap<K, V, S> {\n         HashMap { base: base::HashMap::with_hasher(hash_builder) }\n     }\n "}, {"sha": "65634f2063f36da25633548a6be59ce94a7dda21", "filename": "library/std/src/collections/hash/map/tests.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/346a49fe48fd22bd9588d929bc3115016e654801/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346a49fe48fd22bd9588d929bc3115016e654801/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap%2Ftests.rs?ref=346a49fe48fd22bd9588d929bc3115016e654801", "patch": "@@ -1115,3 +1115,9 @@ fn from_array() {\n     // that's a problem!\n     let _must_not_require_type_annotation = HashMap::from([(1, 2)]);\n }\n+\n+#[test]\n+fn const_with_hasher() {\n+    const X: HashMap<(), (), ()> = HashMap::with_hasher(());\n+    assert_eq!(X.len(), 0);\n+}"}, {"sha": "c36eeae3388db4a52837e3042e883e5ed3ece6be", "filename": "library/std/src/collections/hash/set.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/346a49fe48fd22bd9588d929bc3115016e654801/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346a49fe48fd22bd9588d929bc3115016e654801/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs?ref=346a49fe48fd22bd9588d929bc3115016e654801", "patch": "@@ -376,7 +376,8 @@ impl<T, S> HashSet<T, S> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"hashmap_build_hasher\", since = \"1.7.0\")]\n-    pub fn with_hasher(hasher: S) -> HashSet<T, S> {\n+    #[rustc_const_unstable(feature = \"const_collections_with_hasher\", issue = \"102575\")]\n+    pub const fn with_hasher(hasher: S) -> HashSet<T, S> {\n         HashSet { base: base::HashSet::with_hasher(hasher) }\n     }\n "}, {"sha": "941a0450cc770f9fe4cc96268ee539f560532d1f", "filename": "library/std/src/collections/hash/set/tests.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/346a49fe48fd22bd9588d929bc3115016e654801/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346a49fe48fd22bd9588d929bc3115016e654801/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset%2Ftests.rs?ref=346a49fe48fd22bd9588d929bc3115016e654801", "patch": "@@ -496,3 +496,9 @@ fn from_array() {\n     // that's a problem!\n     let _must_not_require_type_annotation = HashSet::from([1, 2]);\n }\n+\n+#[test]\n+fn const_with_hasher() {\n+    const X: HashSet<(), ()> = HashSet::with_hasher(());\n+    assert_eq!(X.len(), 0);\n+}"}, {"sha": "353785d3d12a0c211a953dabc3765ace137eca47", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/346a49fe48fd22bd9588d929bc3115016e654801/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346a49fe48fd22bd9588d929bc3115016e654801/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=346a49fe48fd22bd9588d929bc3115016e654801", "patch": "@@ -351,6 +351,7 @@\n // Only used in tests/benchmarks:\n //\n // Only for const-ness:\n+#![feature(const_collections_with_hasher)]\n #![feature(const_io_structs)]\n #![feature(const_ip)]\n #![feature(const_ipv4)]"}]}