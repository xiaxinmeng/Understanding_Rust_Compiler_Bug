{"sha": "f34678c0976086523f56a0f974e76cfc5ca2fc40", "node_id": "C_kwDOAAsO6NoAKGYzNDY3OGMwOTc2MDg2NTIzZjU2YTBmOTc0ZTc2Y2ZjNWNhMmZjNDA", "commit": {"author": {"name": "bohan", "email": "bohan-zhang@foxmail.com", "date": "2023-05-11T18:09:46Z"}, "committer": {"name": "bohan", "email": "bohan-zhang@foxmail.com", "date": "2023-05-18T01:22:29Z"}, "message": "fix(resolve): replace bindings to dummy for unresolved imports", "tree": {"sha": "3b06a0b935d0e51280ba43bc0fcfdf765cda116d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b06a0b935d0e51280ba43bc0fcfdf765cda116d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f34678c0976086523f56a0f974e76cfc5ca2fc40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f34678c0976086523f56a0f974e76cfc5ca2fc40", "html_url": "https://github.com/rust-lang/rust/commit/f34678c0976086523f56a0f974e76cfc5ca2fc40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f34678c0976086523f56a0f974e76cfc5ca2fc40/comments", "author": {"login": "bvanjoi", "id": 30187863, "node_id": "MDQ6VXNlcjMwMTg3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/30187863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bvanjoi", "html_url": "https://github.com/bvanjoi", "followers_url": "https://api.github.com/users/bvanjoi/followers", "following_url": "https://api.github.com/users/bvanjoi/following{/other_user}", "gists_url": "https://api.github.com/users/bvanjoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bvanjoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bvanjoi/subscriptions", "organizations_url": "https://api.github.com/users/bvanjoi/orgs", "repos_url": "https://api.github.com/users/bvanjoi/repos", "events_url": "https://api.github.com/users/bvanjoi/events{/privacy}", "received_events_url": "https://api.github.com/users/bvanjoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bvanjoi", "id": 30187863, "node_id": "MDQ6VXNlcjMwMTg3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/30187863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bvanjoi", "html_url": "https://github.com/bvanjoi", "followers_url": "https://api.github.com/users/bvanjoi/followers", "following_url": "https://api.github.com/users/bvanjoi/following{/other_user}", "gists_url": "https://api.github.com/users/bvanjoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bvanjoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bvanjoi/subscriptions", "organizations_url": "https://api.github.com/users/bvanjoi/orgs", "repos_url": "https://api.github.com/users/bvanjoi/repos", "events_url": "https://api.github.com/users/bvanjoi/events{/privacy}", "received_events_url": "https://api.github.com/users/bvanjoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24c180c438b5ee9a150d20b9822bd7712bef8f62", "url": "https://api.github.com/repos/rust-lang/rust/commits/24c180c438b5ee9a150d20b9822bd7712bef8f62", "html_url": "https://github.com/rust-lang/rust/commit/24c180c438b5ee9a150d20b9822bd7712bef8f62"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "a2da9833c6601d62fbedf1ed2356d0a42ccaac7e", "filename": "compiler/rustc_resolve/src/imports.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f34678c0976086523f56a0f974e76cfc5ca2fc40/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f34678c0976086523f56a0f974e76cfc5ca2fc40/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs?ref=f34678c0976086523f56a0f974e76cfc5ca2fc40", "patch": "@@ -405,11 +405,12 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n         t\n     }\n \n-    // Define a dummy resolution containing a `Res::Err` as a placeholder for a failed resolution,\n-    // also mark such failed imports as used to avoid duplicate diagnostics.\n-    fn import_dummy_binding(&mut self, import: &'a Import<'a>) {\n+    // Define a dummy resolution containing a `Res::Err` as a placeholder for a failed\n+    // or indeterminate resolution, also mark such failed imports as used to avoid duplicate diagnostics.\n+    fn import_dummy_binding(&mut self, import: &'a Import<'a>, is_indeterminate: bool) {\n         if let ImportKind::Single { target, ref target_bindings, .. } = import.kind {\n-            if target_bindings.iter().any(|binding| binding.get().is_some()) {\n+            if !(is_indeterminate || target_bindings.iter().all(|binding| binding.get().is_none()))\n+            {\n                 return; // Has resolution, do not create the dummy binding\n             }\n             let dummy_binding = self.dummy_binding;\n@@ -474,7 +475,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n \n             // If this import is unresolved then create a dummy import\n             // resolution for it so that later resolve stages won't complain.\n-            self.import_dummy_binding(import);\n+            self.import_dummy_binding(import, is_indeterminate);\n \n             if let Some(err) = unresolved_import_error {\n                 if let ImportKind::Single { source, ref source_bindings, .. } = import.kind {"}, {"sha": "4144a4b40d427b6ce8d0b076b2800660d70c58b6", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f34678c0976086523f56a0f974e76cfc5ca2fc40/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f34678c0976086523f56a0f974e76cfc5ca2fc40/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=f34678c0976086523f56a0f974e76cfc5ca2fc40", "patch": "@@ -85,6 +85,7 @@ pub mod rustdoc;\n \n fluent_messages! { \"../messages.ftl\" }\n \n+#[derive(Debug)]\n enum Weak {\n     Yes,\n     No,"}, {"sha": "2ba827eeb4c6786080a003b5b574b93984282748", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f34678c0976086523f56a0f974e76cfc5ca2fc40/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f34678c0976086523f56a0f974e76cfc5ca2fc40/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=f34678c0976086523f56a0f974e76cfc5ca2fc40", "patch": "@@ -421,7 +421,7 @@ pub enum TrimmedDefPaths {\n     GoodPath,\n }\n \n-#[derive(Clone, Hash)]\n+#[derive(Clone, Hash, Debug)]\n pub enum ResolveDocLinks {\n     /// Do not resolve doc links.\n     None,"}, {"sha": "0c10259bcd71669397035df08851ddcb39add3a7", "filename": "tests/ui/imports/issue-109343.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f34678c0976086523f56a0f974e76cfc5ca2fc40/tests%2Fui%2Fimports%2Fissue-109343.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f34678c0976086523f56a0f974e76cfc5ca2fc40/tests%2Fui%2Fimports%2Fissue-109343.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimports%2Fissue-109343.rs?ref=f34678c0976086523f56a0f974e76cfc5ca2fc40", "patch": "@@ -0,0 +1,10 @@\n+#![crate_type = \"lib\"]\n+\n+pub mod f {}\n+pub use unresolved::f;\n+//~^ ERROR unresolved import `unresolved`\n+\n+/// [g]\n+pub use f as g;\n+\n+fn main() {}"}, {"sha": "8d9a3aee98024267bd02aecc9119ea51d51c7623", "filename": "tests/ui/imports/issue-109343.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f34678c0976086523f56a0f974e76cfc5ca2fc40/tests%2Fui%2Fimports%2Fissue-109343.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f34678c0976086523f56a0f974e76cfc5ca2fc40/tests%2Fui%2Fimports%2Fissue-109343.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimports%2Fissue-109343.stderr?ref=f34678c0976086523f56a0f974e76cfc5ca2fc40", "patch": "@@ -0,0 +1,11 @@\n+error[E0432]: unresolved import `unresolved`\n+  --> $DIR/issue-109343.rs:4:9\n+   |\n+LL | pub use unresolved::f;\n+   |         ^^^^^^^^^^ maybe a missing crate `unresolved`?\n+   |\n+   = help: consider adding `extern crate unresolved` to use the `unresolved` crate\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0432`."}]}