{"sha": "9c50aa88105946a979afcfe0b2780195e73c2331", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNTBhYTg4MTA1OTQ2YTk3OWFmY2ZlMGIyNzgwMTk1ZTczYzIzMzE=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-09-19T19:12:51Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-09-19T19:15:08Z"}, "message": "Mention how to install master Rust in CONTRIBUTING", "tree": {"sha": "1b3cfcd82fed885a37c38930ef58662571fdc615", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b3cfcd82fed885a37c38930ef58662571fdc615"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c50aa88105946a979afcfe0b2780195e73c2331", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJboqA9AAoJELb6Bqbg4mZb3JsQALK7t7XSU9KN4oc9Kj7s86TM\n6MS9G8IfFhVkkfpFYFdPTXwiAjV1v38QicY5vRkgpGPLC0pTmiYw4eGPvV5i2Vye\nuhekffRV851L561CELSiVZiBYgNYhCT99dnoBQYTMC5OPIQ4+AGNA/tlUWATpb3w\nMpoq+Yl1PrRj8WPLe1o9GytfkoC+r5bD2o56XuujYVqbRpE0lxth2duhlBmG4UGF\n8iZHSYBbIPlcixzebi2AJ4/V7R8iHNdWnXObDBonu4vz4vHwgi5WQyB1632Jgxa1\nK0iJwWsCk8FiqneQPXqXfmkvrwZ3wj3530F/nvkjUS4uO7j0YsMWRBkrE1JEZq5+\ng1/BpSKe0yLAXxqsFdgxQ1aGdFEsUe177Ci1mhCzdnVSyj7T0/JSOqWBac17M82H\nJNNXcGKmWQ1CYIUTWFQWfaFkIS3UDQLBYzIT56Cf+KSQOvm+0TAIL3viTtDUjg/U\nwTdBWVFgIkLOvQ4rjVPvcN5XAJEqGaLPmSOorxk1bbpv2br7hcw6n1+XkGrJSpyJ\ngGlcgU0Bq5IPKdZIo2vq+G5plWFMtoeSsov+0Gqwkgimxx0KT1cdjyr2DHIdj56z\n5FAYuDphra/WeGxlWNMwiaOD2ADlbS19boRjVo3re7of7CEmRgGwCsEPPIMp4Onw\ndq22UuO7Gq9rarcqg5XT\n=uyBX\n-----END PGP SIGNATURE-----", "payload": "tree 1b3cfcd82fed885a37c38930ef58662571fdc615\nparent 3fee6d64384347539bcd5cad5c02d2a06fb3ad67\nauthor Philipp Hansch <dev@phansch.net> 1537384371 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1537384508 +0200\n\nMention how to install master Rust in CONTRIBUTING\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c50aa88105946a979afcfe0b2780195e73c2331", "html_url": "https://github.com/rust-lang/rust/commit/9c50aa88105946a979afcfe0b2780195e73c2331", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c50aa88105946a979afcfe0b2780195e73c2331/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fee6d64384347539bcd5cad5c02d2a06fb3ad67", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fee6d64384347539bcd5cad5c02d2a06fb3ad67", "html_url": "https://github.com/rust-lang/rust/commit/3fee6d64384347539bcd5cad5c02d2a06fb3ad67"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "fc5372bd7a0b97158c69c99de5024b7d5e5688b8", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9c50aa88105946a979afcfe0b2780195e73c2331/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/9c50aa88105946a979afcfe0b2780195e73c2331/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=9c50aa88105946a979afcfe0b2780195e73c2331", "patch": "@@ -19,7 +19,7 @@ All contributors are expected to follow the [Rust Code of Conduct](http://www.ru\n   * [Running test suite](#running-test-suite)\n   * [Testing manually](#testing-manually)\n   * [How Clippy works](#how-clippy-works)\n-  * [Fixing nightly build failures](#fixing-nightly-build-failures)\n+  * [Fixing nightly build failures](#fixing-build-failures-caused-by-rust)\n * [Contributions](#contributions)\n \n ## Getting started\n@@ -202,16 +202,29 @@ The difference between `EarlyLintPass` and `LateLintPass` is that the methods of\n \n That's why the `else_if_without_else` example uses the `register_early_lint_pass` function. Because the [actual lint logic][else_if_without_else] does not depend on any type information.\n \n-### Fixing nightly build failures\n+### Fixing build failures caused by Rust\n \n-Clippy will sometimes break with new nightly version releases. This is expected because Clippy still depends on nightly Rust. Most of the times we have to adapt to the changes and only very rarely there's an actual bug in rust.\n+Clippy will sometimes break because Clippy still depends on unstable internal Rust features. Most of the times we have to adapt to the changes and only very rarely there's an actual bug in rust.\n \n-In order to find out why Clippy does not work properly with a new nightly version, you can use the [rust-toolstate commit history][toolstate_commit_history].\n+In order to find out why Clippy does not work properly with a new Rust commit, you can use the [rust-toolstate commit history][toolstate_commit_history].\n You will then have to look for the last commit that contains `test-pass -> build-fail` or `test-pass` -> `test-fail` for the `clippy-driver` component. [Here][toolstate_commit] is an example.\n \n The commit message contains a link to the PR. The PRs are usually small enough to discover the breaking API change and if they are bigger, they likely include some discussion that may help you to fix Clippy.\n \n-Fixing nightly build failures is also a good way to learn about actual rustc internals.\n+Fixing build failures caused by rustc changes is also a good way to learn about actual rustc internals.\n+\n+If you decide to make Clippy work again with a Rust commit that breaks Clippy,\n+you probably want to install the latest Rust from master locally and run Clippy\n+using that version of Rust.\n+\n+You can use [rustup-toolchain-install-master][rtim] to do that:\n+\n+```\n+cargo install rustup-toolchain-install-master\n+rustup-toolchain-install-master -n master --force\n+rustup override set master\n+cargo test\n+```\n \n ## Contributions\n \n@@ -235,3 +248,4 @@ All code in this repository is under the [Mozilla Public License, 2.0](https://w\n [late_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc/lint/trait.LateLintPass.html\n [toolstate_commit_history]: https://github.com/rust-lang-nursery/rust-toolstate/commits/master\n [toolstate_commit]: https://github.com/rust-lang-nursery/rust-toolstate/commit/6ce0459f6bfa7c528ae1886492a3e0b5ef0ee547\n+[rtim]: https://github.com/kennytm/rustup-toolchain-install-master"}]}