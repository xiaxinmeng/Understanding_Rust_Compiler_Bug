{"sha": "ef1e107df147a82b74089ab9797ce35effe24e5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmMWUxMDdkZjE0N2E4MmI3NDA4OWFiOTc5N2NlMzVlZmZlMjRlNWU=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-19T21:22:00Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-19T21:22:00Z"}, "message": "Merge #273\n\n273: Add a test to ensure that we can parse each file r=matklad a=DJMcNab\n\nNote that this has a non-spurious failure in ra_analysis/src/mock_analysis.\r\n\r\nProbably fixes #195.\r\n\r\nIf my understanding is correct, fixes #214 and fixes #225.\n\nCo-authored-by: DJMcNab <36049421+djmcnab@users.noreply.github.com>", "tree": {"sha": "e54a25733ffc2c3b19385b299779d763615cb81e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e54a25733ffc2c3b19385b299779d763615cb81e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef1e107df147a82b74089ab9797ce35effe24e5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef1e107df147a82b74089ab9797ce35effe24e5e", "html_url": "https://github.com/rust-lang/rust/commit/ef1e107df147a82b74089ab9797ce35effe24e5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef1e107df147a82b74089ab9797ce35effe24e5e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "0e1c01cdb8e6b346edd5d68d9cc72cbce1ce9793", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e1c01cdb8e6b346edd5d68d9cc72cbce1ce9793", "html_url": "https://github.com/rust-lang/rust/commit/0e1c01cdb8e6b346edd5d68d9cc72cbce1ce9793"}, {"sha": "a3b842fb8b7b5503b1c4fc49355edd4f2fe0d28d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3b842fb8b7b5503b1c4fc49355edd4f2fe0d28d", "html_url": "https://github.com/rust-lang/rust/commit/a3b842fb8b7b5503b1c4fc49355edd4f2fe0d28d"}], "stats": {"total": 730, "additions": 496, "deletions": 234}, "files": [{"sha": "4f8c46ab3c2821a0722f6a7d8dbc1c0cad7efd0c", "filename": "crates/ra_syntax/src/grammar/expressions.rs", "status": "modified", "additions": 39, "deletions": 33, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=ef1e107df147a82b74089ab9797ce35effe24e5e", "patch": "@@ -64,6 +64,20 @@ pub(crate) fn block(p: &mut Parser) {\n                         if p.at(R_CURLY) {\n                             m.abandon(p);\n                         } else {\n+                            // test no_semi_after_block\n+                            // fn foo() {\n+                            //     if true {}\n+                            //     loop {}\n+                            //     match () {}\n+                            //     while true {}\n+                            //     for _ in () {}\n+                            //     {}\n+                            //     {}\n+                            //     macro_rules! test {\n+                            //          () => {}\n+                            //     }\n+                            //     test!{}\n+                            // }\n                             if is_blocklike {\n                                 p.eat(SEMI);\n                             } else {\n@@ -143,7 +157,7 @@ fn current_op(p: &Parser) -> (u8, Op) {\n \n     let bp = match p.current() {\n         EQ => 1,\n-        DOTDOT => 2,\n+        DOTDOT | DOTDOTEQ => 2,\n         EQEQ | NEQ | L_ANGLE | R_ANGLE => 5,\n         PIPE => 6,\n         CARET => 7,\n@@ -158,13 +172,13 @@ fn current_op(p: &Parser) -> (u8, Op) {\n // Parses expression with binding power of at least bp.\n fn expr_bp(p: &mut Parser, r: Restrictions, bp: u8) -> BlockLike {\n     let mut lhs = match lhs(p, r) {\n-        Some(lhs) => {\n+        Some((lhs, blocklike)) => {\n             // test stmt_bin_expr_ambiguity\n             // fn foo() {\n             //     let _ = {1} & 2;\n             //     {1} &2;\n             // }\n-            if r.prefer_stmt && is_block(lhs.kind()) {\n+            if r.prefer_stmt && blocklike.is_block() {\n                 return BlockLike::Block;\n             }\n             lhs\n@@ -173,7 +187,7 @@ fn expr_bp(p: &mut Parser, r: Restrictions, bp: u8) -> BlockLike {\n     };\n \n     loop {\n-        let is_range = p.current() == DOTDOT;\n+        let is_range = p.current() == DOTDOT || p.current() == DOTDOTEQ;\n         let (op_bp, op) = current_op(p);\n         if op_bp < bp {\n             break;\n@@ -191,29 +205,12 @@ fn expr_bp(p: &mut Parser, r: Restrictions, bp: u8) -> BlockLike {\n     BlockLike::NotBlock\n }\n \n-// test no_semi_after_block\n-// fn foo() {\n-//     if true {}\n-//     loop {}\n-//     match () {}\n-//     while true {}\n-//     for _ in () {}\n-//     {}\n-//     {}\n-// }\n-fn is_block(kind: SyntaxKind) -> bool {\n-    match kind {\n-        IF_EXPR | WHILE_EXPR | FOR_EXPR | LOOP_EXPR | MATCH_EXPR | BLOCK_EXPR => true,\n-        _ => false,\n-    }\n-}\n-\n const LHS_FIRST: TokenSet = token_set_union![\n     token_set![AMP, STAR, EXCL, DOTDOT, MINUS],\n     atom::ATOM_EXPR_FIRST,\n ];\n \n-fn lhs(p: &mut Parser, r: Restrictions) -> Option<CompletedMarker> {\n+fn lhs(p: &mut Parser, r: Restrictions) -> Option<(CompletedMarker, BlockLike)> {\n     let m;\n     let kind = match p.current() {\n         // test ref_expr\n@@ -246,19 +243,28 @@ fn lhs(p: &mut Parser, r: Restrictions) -> Option<CompletedMarker> {\n             if p.at_ts(EXPR_FIRST) {\n                 expr_bp(p, r, 2);\n             }\n-            return Some(m.complete(p, RANGE_EXPR));\n+            return Some((m.complete(p, RANGE_EXPR), BlockLike::NotBlock));\n         }\n         _ => {\n-            let lhs = atom::atom_expr(p, r)?;\n-            return Some(postfix_expr(p, r, lhs));\n+            let (lhs, blocklike) = atom::atom_expr(p, r)?;\n+            return Some((\n+                postfix_expr(p, lhs, !(r.prefer_stmt && blocklike.is_block())),\n+                blocklike,\n+            ));\n         }\n     };\n     expr_bp(p, r, 255);\n-    Some(m.complete(p, kind))\n+    Some((m.complete(p, kind), BlockLike::NotBlock))\n }\n \n-fn postfix_expr(p: &mut Parser, r: Restrictions, mut lhs: CompletedMarker) -> CompletedMarker {\n-    let mut allow_calls = !r.prefer_stmt || !is_block(lhs.kind());\n+fn postfix_expr(\n+    p: &mut Parser,\n+    mut lhs: CompletedMarker,\n+    // Calls are disallowed if the type is a block and we prefer statements because the call cannot be disambiguated from a tuple\n+    // E.g. `while true {break}();` is parsed as\n+    // `while true {break}; ();`\n+    mut allow_calls: bool,\n+) -> CompletedMarker {\n     loop {\n         lhs = match p.current() {\n             // test stmt_postfix_expr_ambiguity\n@@ -406,20 +412,20 @@ fn arg_list(p: &mut Parser) {\n //     let _ = ::a::<b>;\n //     let _ = format!();\n // }\n-fn path_expr(p: &mut Parser, r: Restrictions) -> CompletedMarker {\n+fn path_expr(p: &mut Parser, r: Restrictions) -> (CompletedMarker, BlockLike) {\n     assert!(paths::is_path_start(p) || p.at(L_ANGLE));\n     let m = p.start();\n     paths::expr_path(p);\n     match p.current() {\n         L_CURLY if !r.forbid_structs => {\n             named_field_list(p);\n-            m.complete(p, STRUCT_LIT)\n+            (m.complete(p, STRUCT_LIT), BlockLike::Block)\n         }\n         EXCL => {\n-            items::macro_call_after_excl(p);\n-            m.complete(p, MACRO_CALL)\n+            let block_like = items::macro_call_after_excl(p);\n+            return (m.complete(p, MACRO_CALL), block_like);\n         }\n-        _ => m.complete(p, PATH_EXPR),\n+        _ => (m.complete(p, PATH_EXPR), BlockLike::NotBlock),\n     }\n }\n "}, {"sha": "cd7d62affb3bc6667460762da9c71a53afa4202b", "filename": "crates/ra_syntax/src/grammar/expressions/atom.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=ef1e107df147a82b74089ab9797ce35effe24e5e", "patch": "@@ -61,9 +61,9 @@ pub(super) const ATOM_EXPR_FIRST: TokenSet = token_set_union![\n \n const EXPR_RECOVERY_SET: TokenSet = token_set![LET_KW];\n \n-pub(super) fn atom_expr(p: &mut Parser, r: Restrictions) -> Option<CompletedMarker> {\n+pub(super) fn atom_expr(p: &mut Parser, r: Restrictions) -> Option<(CompletedMarker, BlockLike)> {\n     if let Some(m) = literal(p) {\n-        return Some(m);\n+        return Some((m, BlockLike::NotBlock));\n     }\n     if paths::is_path_start(p) || p.at(L_ANGLE) {\n         return Some(path_expr(p, r));\n@@ -114,7 +114,11 @@ pub(super) fn atom_expr(p: &mut Parser, r: Restrictions) -> Option<CompletedMark\n             return None;\n         }\n     };\n-    Some(done)\n+    let blocklike = match done.kind() {\n+        IF_EXPR | WHILE_EXPR | FOR_EXPR | LOOP_EXPR | MATCH_EXPR | BLOCK_EXPR => BlockLike::Block,\n+        _ => BlockLike::NotBlock,\n+    };\n+    Some((done, blocklike))\n }\n \n // test tuple_expr\n@@ -349,6 +353,7 @@ pub(crate) fn match_arm_list(p: &mut Parser) {\n // fn foo() {\n //     match () {\n //         _ => (),\n+//         _ if Test>{field: 0} => (),\n //         X | Y if Z => (),\n //         | X | Y if Z => (),\n //         | X => (),\n@@ -362,7 +367,7 @@ fn match_arm(p: &mut Parser) -> BlockLike {\n         patterns::pattern(p);\n     }\n     if p.eat(IF_KW) {\n-        expr_no_struct(p);\n+        expr(p);\n     }\n     p.expect(FAT_ARROW);\n     let ret = expr_stmt(p);"}, {"sha": "64cdf0b1b04abcc82cebee1e239fce556cea98f3", "filename": "crates/ra_syntax/src/grammar/patterns.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fpatterns.rs?ref=ef1e107df147a82b74089ab9797ce35effe24e5e", "patch": "@@ -14,9 +14,13 @@ pub(super) fn pattern_r(p: &mut Parser, recovery_set: TokenSet) {\n     if let Some(lhs) = atom_pat(p, recovery_set) {\n         // test range_pat\n         // fn main() {\n-        //     match 92 { 0 ... 100 => () }\n+        //     match 92 {\n+        //         0 ... 100 => (),\n+        //         101 ..= 200 => (),\n+        //         200 .. 301=> (),\n+        //     }\n         // }\n-        if p.at(DOTDOTDOT) {\n+        if p.at(DOTDOTDOT) || p.at(DOTDOTEQ) || p.at(DOTDOT) {\n             let m = lhs.precede(p);\n             p.bump();\n             atom_pat(p, recovery_set);"}, {"sha": "02421def1600bd465a9ce7ea2844b049eb87f6c9", "filename": "crates/ra_syntax/src/parser_api.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Fsrc%2Fparser_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Fsrc%2Fparser_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparser_api.rs?ref=ef1e107df147a82b74089ab9797ce35effe24e5e", "patch": "@@ -36,7 +36,7 @@ impl<'t> Parser<'t> {\n         self.current() == kind\n     }\n \n-    /// Checks if the current token is `kind`.\n+    /// Checks if the current token is in `kinds`.\n     pub(crate) fn at_ts(&self, kinds: TokenSet) -> bool {\n         kinds.contains(self.current())\n     }"}, {"sha": "3380fa4ca13156f5ea507d64f243b6a4be6d7171", "filename": "crates/ra_syntax/tests/data/parser/inline/0069_match_arm.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0069_match_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0069_match_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0069_match_arm.rs?ref=ef1e107df147a82b74089ab9797ce35effe24e5e", "patch": "@@ -1,6 +1,7 @@\n fn foo() {\n     match () {\n         _ => (),\n+        _ if Test>{field: 0} => (),\n         X | Y if Z => (),\n         | X | Y if Z => (),\n         | X => (),"}, {"sha": "e5647765cb00014ae0b349cd4ec158ea03fc47b2", "filename": "crates/ra_syntax/tests/data/parser/inline/0069_match_arm.txt", "status": "modified", "additions": 117, "deletions": 77, "changes": 194, "blob_url": "https://github.com/rust-lang/rust/blob/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0069_match_arm.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0069_match_arm.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0069_match_arm.txt?ref=ef1e107df147a82b74089ab9797ce35effe24e5e", "patch": "@@ -1,5 +1,5 @@\n-SOURCE_FILE@[0; 125)\n-  FN_DEF@[0; 124)\n+SOURCE_FILE@[0; 161)\n+  FN_DEF@[0; 160)\n     FN_KW@[0; 2)\n     WHITESPACE@[2; 3)\n     NAME@[3; 6)\n@@ -8,18 +8,18 @@ SOURCE_FILE@[0; 125)\n       L_PAREN@[6; 7)\n       R_PAREN@[7; 8)\n     WHITESPACE@[8; 9)\n-    BLOCK@[9; 124)\n+    BLOCK@[9; 160)\n       L_CURLY@[9; 10)\n       WHITESPACE@[10; 15)\n-      EXPR_STMT@[15; 122)\n-        MATCH_EXPR@[15; 121)\n+      EXPR_STMT@[15; 158)\n+        MATCH_EXPR@[15; 157)\n           MATCH_KW@[15; 20)\n           WHITESPACE@[20; 21)\n           TUPLE_EXPR@[21; 23)\n             L_PAREN@[21; 22)\n             R_PAREN@[22; 23)\n           WHITESPACE@[23; 24)\n-          MATCH_ARM_LIST@[24; 121)\n+          MATCH_ARM_LIST@[24; 157)\n             L_CURLY@[24; 25)\n             WHITESPACE@[25; 34)\n             MATCH_ARM@[34; 41)\n@@ -33,76 +33,116 @@ SOURCE_FILE@[0; 125)\n                 R_PAREN@[40; 41)\n             COMMA@[41; 42)\n             WHITESPACE@[42; 51)\n-            MATCH_ARM@[51; 67)\n-              BIND_PAT@[51; 52)\n-                NAME@[51; 52)\n-                  IDENT@[51; 52) \"X\"\n+            MATCH_ARM@[51; 77)\n+              PLACEHOLDER_PAT@[51; 52)\n+                UNDERSCORE@[51; 52)\n               WHITESPACE@[52; 53)\n-              PIPE@[53; 54)\n-              WHITESPACE@[54; 55)\n-              BIND_PAT@[55; 56)\n-                NAME@[55; 56)\n-                  IDENT@[55; 56) \"Y\"\n-              WHITESPACE@[56; 57)\n-              IF_KW@[57; 59)\n-              WHITESPACE@[59; 60)\n-              PATH_EXPR@[60; 61)\n-                PATH@[60; 61)\n-                  PATH_SEGMENT@[60; 61)\n-                    NAME_REF@[60; 61)\n-                      IDENT@[60; 61) \"Z\"\n-              WHITESPACE@[61; 62)\n-              FAT_ARROW@[62; 64)\n-              WHITESPACE@[64; 65)\n-              TUPLE_EXPR@[65; 67)\n-                L_PAREN@[65; 66)\n-                R_PAREN@[66; 67)\n-            COMMA@[67; 68)\n-            WHITESPACE@[68; 77)\n-            MATCH_ARM@[77; 95)\n-              PIPE@[77; 78)\n-              WHITESPACE@[78; 79)\n-              BIND_PAT@[79; 80)\n-                NAME@[79; 80)\n-                  IDENT@[79; 80) \"X\"\n-              WHITESPACE@[80; 81)\n-              PIPE@[81; 82)\n-              WHITESPACE@[82; 83)\n-              BIND_PAT@[83; 84)\n-                NAME@[83; 84)\n-                  IDENT@[83; 84) \"Y\"\n-              WHITESPACE@[84; 85)\n-              IF_KW@[85; 87)\n-              WHITESPACE@[87; 88)\n-              PATH_EXPR@[88; 89)\n-                PATH@[88; 89)\n-                  PATH_SEGMENT@[88; 89)\n-                    NAME_REF@[88; 89)\n-                      IDENT@[88; 89) \"Z\"\n-              WHITESPACE@[89; 90)\n-              FAT_ARROW@[90; 92)\n+              IF_KW@[53; 55)\n+              WHITESPACE@[55; 56)\n+              BIN_EXPR@[56; 71)\n+                PATH_EXPR@[56; 60)\n+                  PATH@[56; 60)\n+                    PATH_SEGMENT@[56; 60)\n+                      NAME_REF@[56; 60)\n+                        IDENT@[56; 60) \"Test\"\n+                R_ANGLE@[60; 61)\n+                BLOCK_EXPR@[61; 71)\n+                  BLOCK@[61; 71)\n+                    L_CURLY@[61; 62)\n+                    EXPR_STMT@[62; 67)\n+                      PATH_EXPR@[62; 67)\n+                        PATH@[62; 67)\n+                          PATH_SEGMENT@[62; 67)\n+                            NAME_REF@[62; 67)\n+                              IDENT@[62; 67) \"field\"\n+                              err: `expected SEMI`\n+                              err: `expected expression`\n+                    EXPR_STMT@[67; 68)\n+                      ERROR@[67; 68)\n+                        COLON@[67; 68)\n+                        err: `expected SEMI`\n+                    WHITESPACE@[68; 69)\n+                    LITERAL@[69; 70)\n+                      INT_NUMBER@[69; 70) \"0\"\n+                    R_CURLY@[70; 71)\n+              WHITESPACE@[71; 72)\n+              FAT_ARROW@[72; 74)\n+              WHITESPACE@[74; 75)\n+              TUPLE_EXPR@[75; 77)\n+                L_PAREN@[75; 76)\n+                R_PAREN@[76; 77)\n+            COMMA@[77; 78)\n+            WHITESPACE@[78; 87)\n+            MATCH_ARM@[87; 103)\n+              BIND_PAT@[87; 88)\n+                NAME@[87; 88)\n+                  IDENT@[87; 88) \"X\"\n+              WHITESPACE@[88; 89)\n+              PIPE@[89; 90)\n+              WHITESPACE@[90; 91)\n+              BIND_PAT@[91; 92)\n+                NAME@[91; 92)\n+                  IDENT@[91; 92) \"Y\"\n               WHITESPACE@[92; 93)\n-              TUPLE_EXPR@[93; 95)\n-                L_PAREN@[93; 94)\n-                R_PAREN@[94; 95)\n-            COMMA@[95; 96)\n-            WHITESPACE@[96; 105)\n-            MATCH_ARM@[105; 114)\n-              PIPE@[105; 106)\n-              WHITESPACE@[106; 107)\n-              BIND_PAT@[107; 108)\n-                NAME@[107; 108)\n-                  IDENT@[107; 108) \"X\"\n-              WHITESPACE@[108; 109)\n-              FAT_ARROW@[109; 111)\n-              WHITESPACE@[111; 112)\n-              TUPLE_EXPR@[112; 114)\n-                L_PAREN@[112; 113)\n-                R_PAREN@[113; 114)\n-            COMMA@[114; 115)\n-            WHITESPACE@[115; 120)\n-            R_CURLY@[120; 121)\n-        SEMI@[121; 122)\n-      WHITESPACE@[122; 123)\n-      R_CURLY@[123; 124)\n-  WHITESPACE@[124; 125)\n+              IF_KW@[93; 95)\n+              WHITESPACE@[95; 96)\n+              PATH_EXPR@[96; 97)\n+                PATH@[96; 97)\n+                  PATH_SEGMENT@[96; 97)\n+                    NAME_REF@[96; 97)\n+                      IDENT@[96; 97) \"Z\"\n+              WHITESPACE@[97; 98)\n+              FAT_ARROW@[98; 100)\n+              WHITESPACE@[100; 101)\n+              TUPLE_EXPR@[101; 103)\n+                L_PAREN@[101; 102)\n+                R_PAREN@[102; 103)\n+            COMMA@[103; 104)\n+            WHITESPACE@[104; 113)\n+            MATCH_ARM@[113; 131)\n+              PIPE@[113; 114)\n+              WHITESPACE@[114; 115)\n+              BIND_PAT@[115; 116)\n+                NAME@[115; 116)\n+                  IDENT@[115; 116) \"X\"\n+              WHITESPACE@[116; 117)\n+              PIPE@[117; 118)\n+              WHITESPACE@[118; 119)\n+              BIND_PAT@[119; 120)\n+                NAME@[119; 120)\n+                  IDENT@[119; 120) \"Y\"\n+              WHITESPACE@[120; 121)\n+              IF_KW@[121; 123)\n+              WHITESPACE@[123; 124)\n+              PATH_EXPR@[124; 125)\n+                PATH@[124; 125)\n+                  PATH_SEGMENT@[124; 125)\n+                    NAME_REF@[124; 125)\n+                      IDENT@[124; 125) \"Z\"\n+              WHITESPACE@[125; 126)\n+              FAT_ARROW@[126; 128)\n+              WHITESPACE@[128; 129)\n+              TUPLE_EXPR@[129; 131)\n+                L_PAREN@[129; 130)\n+                R_PAREN@[130; 131)\n+            COMMA@[131; 132)\n+            WHITESPACE@[132; 141)\n+            MATCH_ARM@[141; 150)\n+              PIPE@[141; 142)\n+              WHITESPACE@[142; 143)\n+              BIND_PAT@[143; 144)\n+                NAME@[143; 144)\n+                  IDENT@[143; 144) \"X\"\n+              WHITESPACE@[144; 145)\n+              FAT_ARROW@[145; 147)\n+              WHITESPACE@[147; 148)\n+              TUPLE_EXPR@[148; 150)\n+                L_PAREN@[148; 149)\n+                R_PAREN@[149; 150)\n+            COMMA@[150; 151)\n+            WHITESPACE@[151; 156)\n+            R_CURLY@[156; 157)\n+        SEMI@[157; 158)\n+      WHITESPACE@[158; 159)\n+      R_CURLY@[159; 160)\n+  WHITESPACE@[160; 161)"}, {"sha": "4919665cb57817f1f844f33c3bbb6c64aa44bc3c", "filename": "crates/ra_syntax/tests/data/parser/inline/0086_no_semi_after_block.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0086_no_semi_after_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0086_no_semi_after_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0086_no_semi_after_block.rs?ref=ef1e107df147a82b74089ab9797ce35effe24e5e", "patch": "@@ -6,4 +6,8 @@ fn foo() {\n     for _ in () {}\n     {}\n     {}\n+    macro_rules! test {\n+         () => {}\n+    }\n+    test!{}\n }"}, {"sha": "63b2300916b74d64252410851ce857e98a99a6fd", "filename": "crates/ra_syntax/tests/data/parser/inline/0086_no_semi_after_block.txt", "status": "modified", "additions": 46, "deletions": 10, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0086_no_semi_after_block.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0086_no_semi_after_block.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0086_no_semi_after_block.txt?ref=ef1e107df147a82b74089ab9797ce35effe24e5e", "patch": "@@ -1,5 +1,5 @@\n-SOURCE_FILE@[0; 107)\n-  FN_DEF@[0; 106)\n+SOURCE_FILE@[0; 167)\n+  FN_DEF@[0; 166)\n     FN_KW@[0; 2)\n     WHITESPACE@[2; 3)\n     NAME@[3; 6)\n@@ -8,7 +8,7 @@ SOURCE_FILE@[0; 107)\n       L_PAREN@[6; 7)\n       R_PAREN@[7; 8)\n     WHITESPACE@[8; 9)\n-    BLOCK@[9; 106)\n+    BLOCK@[9; 166)\n       L_CURLY@[9; 10)\n       WHITESPACE@[10; 15)\n       EXPR_STMT@[15; 25)\n@@ -78,10 +78,46 @@ SOURCE_FILE@[0; 107)\n             L_CURLY@[95; 96)\n             R_CURLY@[96; 97)\n       WHITESPACE@[97; 102)\n-      BLOCK_EXPR@[102; 104)\n-        BLOCK@[102; 104)\n-          L_CURLY@[102; 103)\n-          R_CURLY@[103; 104)\n-      WHITESPACE@[104; 105)\n-      R_CURLY@[105; 106)\n-  WHITESPACE@[106; 107)\n+      EXPR_STMT@[102; 104)\n+        BLOCK_EXPR@[102; 104)\n+          BLOCK@[102; 104)\n+            L_CURLY@[102; 103)\n+            R_CURLY@[103; 104)\n+      WHITESPACE@[104; 109)\n+      EXPR_STMT@[109; 152)\n+        MACRO_CALL@[109; 152)\n+          PATH@[109; 120)\n+            PATH_SEGMENT@[109; 120)\n+              NAME_REF@[109; 120)\n+                IDENT@[109; 120) \"macro_rules\"\n+          EXCL@[120; 121)\n+          WHITESPACE@[121; 122)\n+          IDENT@[122; 126) \"test\"\n+          WHITESPACE@[126; 127)\n+          TOKEN_TREE@[127; 152)\n+            L_CURLY@[127; 128)\n+            WHITESPACE@[128; 138)\n+            TOKEN_TREE@[138; 140)\n+              L_PAREN@[138; 139)\n+              R_PAREN@[139; 140)\n+            WHITESPACE@[140; 141)\n+            FAT_ARROW@[141; 143)\n+            WHITESPACE@[143; 144)\n+            TOKEN_TREE@[144; 146)\n+              L_CURLY@[144; 145)\n+              R_CURLY@[145; 146)\n+            WHITESPACE@[146; 151)\n+            R_CURLY@[151; 152)\n+      WHITESPACE@[152; 157)\n+      MACRO_CALL@[157; 164)\n+        PATH@[157; 161)\n+          PATH_SEGMENT@[157; 161)\n+            NAME_REF@[157; 161)\n+              IDENT@[157; 161) \"test\"\n+        EXCL@[161; 162)\n+        TOKEN_TREE@[162; 164)\n+          L_CURLY@[162; 163)\n+          R_CURLY@[163; 164)\n+      WHITESPACE@[164; 165)\n+      R_CURLY@[165; 166)\n+  WHITESPACE@[166; 167)"}, {"sha": "c12ab6fcea28665598cc8fe6c56483319f26fae5", "filename": "crates/ra_syntax/tests/data/parser/inline/0094_range_pat.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0094_range_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0094_range_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0094_range_pat.rs?ref=ef1e107df147a82b74089ab9797ce35effe24e5e", "patch": "@@ -1,3 +1,7 @@\n fn main() {\n-    match 92 { 0 ... 100 => () }\n+    match 92 {\n+        0 ... 100 => (),\n+        101 ..= 200 => (),\n+        200 .. 301=> (),\n+    }\n }"}, {"sha": "d47f38903a2ed6f1a52d049827867a7455b57944", "filename": "crates/ra_syntax/tests/data/parser/inline/0094_range_pat.txt", "status": "modified", "additions": 60, "deletions": 26, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0094_range_pat.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0094_range_pat.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2F0094_range_pat.txt?ref=ef1e107df147a82b74089ab9797ce35effe24e5e", "patch": "@@ -1,5 +1,5 @@\n-SOURCE_FILE@[0; 47)\n-  FN_DEF@[0; 46)\n+SOURCE_FILE@[0; 112)\n+  FN_DEF@[0; 111)\n     FN_KW@[0; 2)\n     WHITESPACE@[2; 3)\n     NAME@[3; 7)\n@@ -8,35 +8,69 @@ SOURCE_FILE@[0; 47)\n       L_PAREN@[7; 8)\n       R_PAREN@[8; 9)\n     WHITESPACE@[9; 10)\n-    BLOCK@[10; 46)\n+    BLOCK@[10; 111)\n       L_CURLY@[10; 11)\n       WHITESPACE@[11; 16)\n-      MATCH_EXPR@[16; 44)\n+      MATCH_EXPR@[16; 109)\n         MATCH_KW@[16; 21)\n         WHITESPACE@[21; 22)\n         LITERAL@[22; 24)\n           INT_NUMBER@[22; 24) \"92\"\n         WHITESPACE@[24; 25)\n-        MATCH_ARM_LIST@[25; 44)\n+        MATCH_ARM_LIST@[25; 109)\n           L_CURLY@[25; 26)\n-          WHITESPACE@[26; 27)\n-          MATCH_ARM@[27; 42)\n-            RANGE_PAT@[27; 36)\n-              LITERAL@[27; 28)\n-                INT_NUMBER@[27; 28) \"0\"\n-              WHITESPACE@[28; 29)\n-              DOTDOTDOT@[29; 32)\n-              WHITESPACE@[32; 33)\n-              LITERAL@[33; 36)\n-                INT_NUMBER@[33; 36) \"100\"\n-            WHITESPACE@[36; 37)\n-            FAT_ARROW@[37; 39)\n-            WHITESPACE@[39; 40)\n-            TUPLE_EXPR@[40; 42)\n-              L_PAREN@[40; 41)\n-              R_PAREN@[41; 42)\n-          WHITESPACE@[42; 43)\n-          R_CURLY@[43; 44)\n-      WHITESPACE@[44; 45)\n-      R_CURLY@[45; 46)\n-  WHITESPACE@[46; 47)\n+          WHITESPACE@[26; 35)\n+          MATCH_ARM@[35; 50)\n+            RANGE_PAT@[35; 44)\n+              LITERAL@[35; 36)\n+                INT_NUMBER@[35; 36) \"0\"\n+              WHITESPACE@[36; 37)\n+              DOTDOTDOT@[37; 40)\n+              WHITESPACE@[40; 41)\n+              LITERAL@[41; 44)\n+                INT_NUMBER@[41; 44) \"100\"\n+            WHITESPACE@[44; 45)\n+            FAT_ARROW@[45; 47)\n+            WHITESPACE@[47; 48)\n+            TUPLE_EXPR@[48; 50)\n+              L_PAREN@[48; 49)\n+              R_PAREN@[49; 50)\n+          COMMA@[50; 51)\n+          WHITESPACE@[51; 60)\n+          MATCH_ARM@[60; 77)\n+            RANGE_PAT@[60; 71)\n+              LITERAL@[60; 63)\n+                INT_NUMBER@[60; 63) \"101\"\n+              WHITESPACE@[63; 64)\n+              DOTDOTEQ@[64; 67)\n+              WHITESPACE@[67; 68)\n+              LITERAL@[68; 71)\n+                INT_NUMBER@[68; 71) \"200\"\n+            WHITESPACE@[71; 72)\n+            FAT_ARROW@[72; 74)\n+            WHITESPACE@[74; 75)\n+            TUPLE_EXPR@[75; 77)\n+              L_PAREN@[75; 76)\n+              R_PAREN@[76; 77)\n+          COMMA@[77; 78)\n+          WHITESPACE@[78; 87)\n+          MATCH_ARM@[87; 102)\n+            RANGE_PAT@[87; 97)\n+              LITERAL@[87; 90)\n+                INT_NUMBER@[87; 90) \"200\"\n+              WHITESPACE@[90; 91)\n+              DOTDOT@[91; 93)\n+              WHITESPACE@[93; 94)\n+              LITERAL@[94; 97)\n+                INT_NUMBER@[94; 97) \"301\"\n+            FAT_ARROW@[97; 99)\n+            WHITESPACE@[99; 100)\n+            TUPLE_EXPR@[100; 102)\n+              L_PAREN@[100; 101)\n+              R_PAREN@[101; 102)\n+          COMMA@[102; 103)\n+          WHITESPACE@[103; 108)\n+          R_CURLY@[108; 109)\n+      WHITESPACE@[109; 110)\n+      R_CURLY@[110; 111)\n+  WHITESPACE@[111; 112)"}, {"sha": "f9ff444d400c35a00c63bf237ac7f565a23a9dd5", "filename": "crates/ra_syntax/tests/data/parser/ok/0029_range_forms.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0029_range_forms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0029_range_forms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0029_range_forms.rs?ref=ef1e107df147a82b74089ab9797ce35effe24e5e", "patch": "@@ -3,4 +3,9 @@ fn foo() {\n     ..z = 2;\n     x = false..1 == 1;\n     let x = 1..;\n+    \n+    ..=1 + 1;\n+    ..=z = 2;\n+    x = false..=1 == 1;\n+    let x = 1..;\n }"}, {"sha": "e3706bfbd0fd9bf0fe42c0f277679f6a622a3168", "filename": "crates/ra_syntax/tests/data/parser/ok/0029_range_forms.txt", "status": "modified", "additions": 80, "deletions": 6, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0029_range_forms.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0029_range_forms.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0029_range_forms.txt?ref=ef1e107df147a82b74089ab9797ce35effe24e5e", "patch": "@@ -1,5 +1,5 @@\n-SOURCE_FILE@[0; 79)\n-  FN_DEF@[0; 78)\n+SOURCE_FILE@[0; 153)\n+  FN_DEF@[0; 152)\n     FN_KW@[0; 2)\n     WHITESPACE@[2; 3)\n     NAME@[3; 6)\n@@ -8,7 +8,7 @@ SOURCE_FILE@[0; 79)\n       L_PAREN@[6; 7)\n       R_PAREN@[7; 8)\n     WHITESPACE@[8; 9)\n-    BLOCK@[9; 78)\n+    BLOCK@[9; 152)\n       L_CURLY@[9; 10)\n       WHITESPACE@[10; 15)\n       EXPR_STMT@[15; 23)\n@@ -78,6 +78,80 @@ SOURCE_FILE@[0; 79)\n             INT_NUMBER@[72; 73) \"1\"\n           DOTDOT@[73; 75)\n         SEMI@[75; 76)\n-      WHITESPACE@[76; 77)\n-      R_CURLY@[77; 78)\n-  WHITESPACE@[78; 79)\n+      WHITESPACE@[76; 86)\n+      err: `expected expression`\n+      EXPR_STMT@[86; 89)\n+        ERROR@[86; 89)\n+          DOTDOTEQ@[86; 89)\n+          err: `expected SEMI`\n+      EXPR_STMT@[89; 95)\n+        BIN_EXPR@[89; 94)\n+          LITERAL@[89; 90)\n+            INT_NUMBER@[89; 90) \"1\"\n+          WHITESPACE@[90; 91)\n+          PLUS@[91; 92)\n+          WHITESPACE@[92; 93)\n+          LITERAL@[93; 94)\n+            INT_NUMBER@[93; 94) \"1\"\n+        SEMI@[94; 95)\n+      WHITESPACE@[95; 100)\n+      err: `expected expression`\n+      EXPR_STMT@[100; 103)\n+        ERROR@[100; 103)\n+          DOTDOTEQ@[100; 103)\n+          err: `expected SEMI`\n+      EXPR_STMT@[103; 109)\n+        BIN_EXPR@[103; 108)\n+          PATH_EXPR@[103; 104)\n+            PATH@[103; 104)\n+              PATH_SEGMENT@[103; 104)\n+                NAME_REF@[103; 104)\n+                  IDENT@[103; 104) \"z\"\n+          WHITESPACE@[104; 105)\n+          EQ@[105; 106)\n+          WHITESPACE@[106; 107)\n+          LITERAL@[107; 108)\n+            INT_NUMBER@[107; 108) \"2\"\n+        SEMI@[108; 109)\n+      WHITESPACE@[109; 114)\n+      EXPR_STMT@[114; 133)\n+        BIN_EXPR@[114; 132)\n+          PATH_EXPR@[114; 115)\n+            PATH@[114; 115)\n+              PATH_SEGMENT@[114; 115)\n+                NAME_REF@[114; 115)\n+                  IDENT@[114; 115) \"x\"\n+          WHITESPACE@[115; 116)\n+          EQ@[116; 117)\n+          WHITESPACE@[117; 118)\n+          RANGE_EXPR@[118; 132)\n+            LITERAL@[118; 123)\n+              FALSE_KW@[118; 123)\n+            DOTDOTEQ@[123; 126)\n+            BIN_EXPR@[126; 132)\n+              LITERAL@[126; 127)\n+                INT_NUMBER@[126; 127) \"1\"\n+              WHITESPACE@[127; 128)\n+              EQEQ@[128; 130)\n+              WHITESPACE@[130; 131)\n+              LITERAL@[131; 132)\n+                INT_NUMBER@[131; 132) \"1\"\n+        SEMI@[132; 133)\n+      WHITESPACE@[133; 138)\n+      LET_STMT@[138; 150)\n+        LET_KW@[138; 141)\n+        WHITESPACE@[141; 142)\n+        BIND_PAT@[142; 143)\n+          NAME@[142; 143)\n+            IDENT@[142; 143) \"x\"\n+        WHITESPACE@[143; 144)\n+        EQ@[144; 145)\n+        WHITESPACE@[145; 146)\n+        RANGE_EXPR@[146; 149)\n+          LITERAL@[146; 147)\n+            INT_NUMBER@[146; 147) \"1\"\n+          DOTDOT@[147; 149)\n+        SEMI@[149; 150)\n+      WHITESPACE@[150; 151)\n+      R_CURLY@[151; 152)\n+  WHITESPACE@[152; 153)"}, {"sha": "c17b6ffa606872c498a6e28f28bb2f0929e03675", "filename": "crates/ra_syntax/tests/test.rs", "status": "modified", "additions": 45, "deletions": 2, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef1e107df147a82b74089ab9797ce35effe24e5e/crates%2Fra_syntax%2Ftests%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Ftest.rs?ref=ef1e107df147a82b74089ab9797ce35effe24e5e", "patch": "@@ -6,7 +6,7 @@ extern crate walkdir;\n use std::{\n     fmt::Write,\n     fs,\n-    path::{Path, PathBuf},\n+    path::{Path, PathBuf, Component},\n };\n \n use ra_syntax::{\n@@ -37,6 +37,47 @@ fn parser_fuzz_tests() {\n     }\n }\n \n+/// Test that Rust-analyzer can parse and validate the rust-analyser\n+/// TODO: Use this as a benchmark\n+#[test]\n+fn self_hosting_parsing() {\n+    use std::ffi::OsStr;\n+    let empty_vec = vec![];\n+    let dir = project_dir().join(\"crates\");\n+    let mut count = 0;\n+    for entry in walkdir::WalkDir::new(dir)\n+        .into_iter()\n+        .filter_entry(|entry| {\n+            !entry\n+                .path()\n+                .components()\n+                // TODO: this more neatly\n+                .any(|component| {\n+                    // Get all files which are not in the crates/ra_syntax/tests/data folder\n+                    component == Component::Normal(OsStr::new(\"data\"))\n+                })\n+        })\n+        .map(|e| e.unwrap())\n+        .filter(|entry| {\n+            // Get all `.rs ` files\n+            !entry.path().is_dir() && (entry.path().extension() == Some(OsStr::new(\"rs\")))\n+        })\n+    {\n+        count += 1;\n+        let text = read_text(entry.path());\n+        let node = SourceFileNode::parse(&text);\n+        let errors = node.errors();\n+        assert_eq!(\n+            errors, empty_vec,\n+            \"There should be no errors in the file {:?}\",\n+            entry\n+        );\n+    }\n+    assert!(\n+        count > 30,\n+        \"self_hosting_parsing found too few files - is it running in the right directory?\"\n+    )\n+}\n /// Read file and normalize newlines.\n ///\n /// `rustc` seems to always normalize `\\r\\n` newlines to `\\n`:\n@@ -49,7 +90,9 @@ fn parser_fuzz_tests() {\n ///\n /// so this should always be correct.\n fn read_text(path: &Path) -> String {\n-    fs::read_to_string(path).unwrap().replace(\"\\r\\n\", \"\\n\")\n+    fs::read_to_string(path)\n+        .expect(&format!(\"File at {:?} should be valid\", path))\n+        .replace(\"\\r\\n\", \"\\n\")\n }\n \n pub fn dir_tests<F>(paths: &[&str], f: F)"}, {"sha": "5e3d64eef2fd797706db61dcc8cf0f937d785afd", "filename": "editors/code/package-lock.json", "status": "modified", "additions": 78, "deletions": 72, "changes": 150, "blob_url": "https://github.com/rust-lang/rust/blob/ef1e107df147a82b74089ab9797ce35effe24e5e/editors%2Fcode%2Fpackage-lock.json", "raw_url": "https://github.com/rust-lang/rust/raw/ef1e107df147a82b74089ab9797ce35effe24e5e/editors%2Fcode%2Fpackage-lock.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage-lock.json?ref=ef1e107df147a82b74089ab9797ce35effe24e5e", "patch": "@@ -17,9 +17,9 @@\n             \"dev\": true\n         },\n         \"ajv\": {\n-            \"version\": \"6.6.1\",\n-            \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-6.6.1.tgz\",\n-            \"integrity\": \"sha512-ZoJjft5B+EJBjUyu9C9Hc0OZyPZSSlOF+plzouTrg6UlA8f+e/n8NIgBFG/9tppJtpPWfthHakK7juJdNDODww==\",\n+            \"version\": \"6.6.2\",\n+            \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-6.6.2.tgz\",\n+            \"integrity\": \"sha512-FBHEW6Jf5TB9MGBgUUA9XHkTbjXYfAUjY43ACMfmdMRHniyoMHjHjzD50OK8LGDWQwp4rWEsIq5kEqq7rvIM1g==\",\n             \"dev\": true,\n             \"requires\": {\n                 \"fast-deep-equal\": \"2.0.1\",\n@@ -193,12 +193,6 @@\n                         \"strip-ansi\": \"3.0.1\",\n                         \"supports-color\": \"2.0.0\"\n                     }\n-                },\n-                \"supports-color\": {\n-                    \"version\": \"2.0.0\",\n-                    \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz\",\n-                    \"integrity\": \"sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=\",\n-                    \"dev\": true\n                 }\n             }\n         },\n@@ -298,12 +292,6 @@\n                         \"color-convert\": \"1.9.3\"\n                     }\n                 },\n-                \"has-flag\": {\n-                    \"version\": \"3.0.0\",\n-                    \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n-                    \"integrity\": \"sha1-tdRU3CGZriJWmfNGfloH87lVuv0=\",\n-                    \"dev\": true\n-                },\n                 \"supports-color\": {\n                     \"version\": \"5.5.0\",\n                     \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n@@ -409,9 +397,9 @@\n             }\n         },\n         \"commander\": {\n-            \"version\": \"2.18.0\",\n-            \"resolved\": \"https://registry.npmjs.org/commander/-/commander-2.18.0.tgz\",\n-            \"integrity\": \"sha512-6CYPa+JP2ftfRU2qkDK+UTVeQYosOg/2GbcjIcKPHfinyOLPVGXu/ovN86RP49Re5ndJK1N0kuiidFFuepc4ZQ==\",\n+            \"version\": \"2.19.0\",\n+            \"resolved\": \"https://registry.npmjs.org/commander/-/commander-2.19.0.tgz\",\n+            \"integrity\": \"sha512-6tvAOO+D6OENvRAh524Dh9jcfKTYDQAqvqezbCW82xj5X0pSrcpxtvRKHLG0yBY6SD7PSDrJaj+0AiOcKVd1Xg==\",\n             \"dev\": true\n         },\n         \"concat-map\": {\n@@ -437,7 +425,7 @@\n         },\n         \"css-select\": {\n             \"version\": \"1.2.0\",\n-            \"resolved\": \"https://registry.npmjs.org/css-select/-/css-select-1.2.0.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/css-select/-/css-select-1.2.0.tgz\",\n             \"integrity\": \"sha1-KzoRBTnFNV8c2NMUYj6HCxIeyFg=\",\n             \"dev\": true,\n             \"requires\": {\n@@ -473,7 +461,7 @@\n         },\n         \"deep-assign\": {\n             \"version\": \"1.0.0\",\n-            \"resolved\": \"https://registry.npmjs.org/deep-assign/-/deep-assign-1.0.0.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/deep-assign/-/deep-assign-1.0.0.tgz\",\n             \"integrity\": \"sha1-sJJ0O+hCfcYh6gBnzex+cN0Z83s=\",\n             \"dev\": true,\n             \"requires\": {\n@@ -502,9 +490,9 @@\n             \"dev\": true\n         },\n         \"diff\": {\n-            \"version\": \"3.3.1\",\n-            \"resolved\": \"https://registry.npmjs.org/diff/-/diff-3.3.1.tgz\",\n-            \"integrity\": \"sha512-MKPHZDMB0o6yHyDryUOScqZibp914ksXwAMYMTHj6KO8UeKsRYNJD3oNCKjTqZon+V488P7N/HzXF8t7ZR95ww==\",\n+            \"version\": \"3.5.0\",\n+            \"resolved\": \"https://registry.npmjs.org/diff/-/diff-3.5.0.tgz\",\n+            \"integrity\": \"sha512-A46qtFgd+g7pDZinpnwiRJtxbC1hpgf0uzP3iG89scHk0AUC7A1TGxf5OiiOUv/JMZR8GOt8hL900hV0bOy5xA==\",\n             \"dev\": true\n         },\n         \"dom-serializer\": {\n@@ -519,7 +507,7 @@\n             \"dependencies\": {\n                 \"domelementtype\": {\n                     \"version\": \"1.1.3\",\n-                    \"resolved\": \"https://registry.npmjs.org/domelementtype/-/domelementtype-1.1.3.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/domelementtype/-/domelementtype-1.1.3.tgz\",\n                     \"integrity\": \"sha1-vSh3PiZCiBrsUVRJJCmcXNgiGFs=\",\n                     \"dev\": true\n                 }\n@@ -928,13 +916,13 @@\n                 },\n                 \"string_decoder\": {\n                     \"version\": \"0.10.31\",\n-                    \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",\n                     \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",\n                     \"dev\": true\n                 },\n                 \"through2\": {\n                     \"version\": \"0.6.5\",\n-                    \"resolved\": \"https://registry.npmjs.org/through2/-/through2-0.6.5.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/through2/-/through2-0.6.5.tgz\",\n                     \"integrity\": \"sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -1078,7 +1066,7 @@\n             \"integrity\": \"sha512-sNvOCzEQNr/qrvJgc3UG/kD4QtlHycrzwS+6mfTrrSq97BvaYcPZZI1ZSqGSPR73Cxn4LKTD4PttRwfU7jWq5g==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"ajv\": \"6.6.1\",\n+                \"ajv\": \"6.6.2\",\n                 \"har-schema\": \"2.0.0\"\n             }\n         },\n@@ -1101,9 +1089,9 @@\n             }\n         },\n         \"has-flag\": {\n-            \"version\": \"2.0.0\",\n-            \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-2.0.0.tgz\",\n-            \"integrity\": \"sha1-6CB68cx7MNRGzHC3NLXovhj4jVE=\",\n+            \"version\": \"3.0.0\",\n+            \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\n+            \"integrity\": \"sha1-tdRU3CGZriJWmfNGfloH87lVuv0=\",\n             \"dev\": true\n         },\n         \"has-symbols\": {\n@@ -1129,7 +1117,7 @@\n                 \"domutils\": \"1.5.1\",\n                 \"entities\": \"1.1.2\",\n                 \"inherits\": \"2.0.3\",\n-                \"readable-stream\": \"3.0.6\"\n+                \"readable-stream\": \"3.1.0\"\n             }\n         },\n         \"http-signature\": {\n@@ -1160,9 +1148,9 @@\n             \"dev\": true\n         },\n         \"is\": {\n-            \"version\": \"3.2.1\",\n-            \"resolved\": \"https://registry.npmjs.org/is/-/is-3.2.1.tgz\",\n-            \"integrity\": \"sha1-0Kwq1V63sL7JJqUmb2xmKqqD3KU=\",\n+            \"version\": \"3.3.0\",\n+            \"resolved\": \"https://registry.npmjs.org/is/-/is-3.3.0.tgz\",\n+            \"integrity\": \"sha512-nW24QBoPcFGGHJGUwnfpI7Yc5CdqWNdsyHQszVE/z2pKHXzh7FZ5GWhJqSyaQ9wMkQnsTx+kAI8bHlCX4tKdbg==\",\n             \"dev\": true\n         },\n         \"is-absolute\": {\n@@ -1331,7 +1319,7 @@\n         },\n         \"kind-of\": {\n             \"version\": \"1.1.0\",\n-            \"resolved\": \"https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz\",\n             \"integrity\": \"sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ=\",\n             \"dev\": true\n         },\n@@ -1488,6 +1476,12 @@\n                     \"integrity\": \"sha512-b0553uYA5YAEGgyYIGYROzKQ7X5RAqedkfjiZxwi0kL1g3bOaBNNZfYkzt/CL0umgD5wc9Jec2FbB98CjkMRvQ==\",\n                     \"dev\": true\n                 },\n+                \"diff\": {\n+                    \"version\": \"3.3.1\",\n+                    \"resolved\": \"https://registry.npmjs.org/diff/-/diff-3.3.1.tgz\",\n+                    \"integrity\": \"sha512-MKPHZDMB0o6yHyDryUOScqZibp914ksXwAMYMTHj6KO8UeKsRYNJD3oNCKjTqZon+V488P7N/HzXF8t7ZR95ww==\",\n+                    \"dev\": true\n+                },\n                 \"glob\": {\n                     \"version\": \"7.1.2\",\n                     \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.1.2.tgz\",\n@@ -1501,6 +1495,21 @@\n                         \"once\": \"1.4.0\",\n                         \"path-is-absolute\": \"1.0.1\"\n                     }\n+                },\n+                \"has-flag\": {\n+                    \"version\": \"2.0.0\",\n+                    \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-2.0.0.tgz\",\n+                    \"integrity\": \"sha1-6CB68cx7MNRGzHC3NLXovhj4jVE=\",\n+                    \"dev\": true\n+                },\n+                \"supports-color\": {\n+                    \"version\": \"4.4.0\",\n+                    \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-4.4.0.tgz\",\n+                    \"integrity\": \"sha512-rKC3+DyXWgK0ZLKwmRsrkyHVZAjNkfzeehuFWdGGcqGDTZFH73+RH6S/RDAAxl9GusSjZSUWYLmT9N5pzXFOXQ==\",\n+                    \"dev\": true,\n+                    \"requires\": {\n+                        \"has-flag\": \"2.0.0\"\n+                    }\n                 }\n             }\n         },\n@@ -1535,7 +1544,7 @@\n             \"dev\": true,\n             \"requires\": {\n                 \"has\": \"1.0.3\",\n-                \"is\": \"3.2.1\"\n+                \"is\": \"3.3.0\"\n             }\n         },\n         \"normalize-path\": {\n@@ -1635,13 +1644,13 @@\n         },\n         \"os-homedir\": {\n             \"version\": \"1.0.2\",\n-            \"resolved\": \"https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz\",\n             \"integrity\": \"sha1-/7xJiDNuDoM94MFox+8VISGqf7M=\",\n             \"dev\": true\n         },\n         \"os-tmpdir\": {\n             \"version\": \"1.0.2\",\n-            \"resolved\": \"https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz\",\n             \"integrity\": \"sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=\",\n             \"dev\": true\n         },\n@@ -1657,11 +1666,11 @@\n         },\n         \"parse-semver\": {\n             \"version\": \"1.1.1\",\n-            \"resolved\": \"https://registry.npmjs.org/parse-semver/-/parse-semver-1.1.1.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/parse-semver/-/parse-semver-1.1.1.tgz\",\n             \"integrity\": \"sha1-mkr9bfBj3Egm+T+6SpnPIj9mbLg=\",\n             \"dev\": true,\n             \"requires\": {\n-                \"semver\": \"5.5.1\"\n+                \"semver\": \"5.6.0\"\n             }\n         },\n         \"parse5\": {\n@@ -1681,7 +1690,7 @@\n         },\n         \"path-is-absolute\": {\n             \"version\": \"1.0.1\",\n-            \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n             \"integrity\": \"sha1-F0uSaHNVNP+8es5r9TpanhtcX18=\",\n             \"dev\": true\n         },\n@@ -1738,9 +1747,9 @@\n             \"dev\": true\n         },\n         \"psl\": {\n-            \"version\": \"1.1.29\",\n-            \"resolved\": \"https://registry.npmjs.org/psl/-/psl-1.1.29.tgz\",\n-            \"integrity\": \"sha512-AeUmQ0oLN02flVHXWh9sSJF7mcdFq0ppid/JkErufc3hGIV/AMa8Fo9VgDo/cT2jFdOWoFvHp90qqBH54W+gjQ==\",\n+            \"version\": \"1.1.31\",\n+            \"resolved\": \"https://registry.npmjs.org/psl/-/psl-1.1.31.tgz\",\n+            \"integrity\": \"sha512-/6pt4+C+T+wZUieKR620OpzN/LlnNKuWjy1iFLQ/UG35JqHlR/89MP1d96dUfkf6Dne3TuLQzOYEYshJ+Hx8mw==\",\n             \"dev\": true\n         },\n         \"pump\": {\n@@ -1807,9 +1816,9 @@\n             }\n         },\n         \"readable-stream\": {\n-            \"version\": \"3.0.6\",\n-            \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-3.0.6.tgz\",\n-            \"integrity\": \"sha512-9E1oLoOWfhSXHGv6QlwXJim7uNzd9EVlWK+21tCU9Ju/kR0/p2AZYPz4qSchgO8PlLIH4FpZYfzwS+rEksZjIg==\",\n+            \"version\": \"3.1.0\",\n+            \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-3.1.0.tgz\",\n+            \"integrity\": \"sha512-vpydAvIJvPODZNagCPuHG87O9JNPtvFEtjHHRVwNVsVVRBqemvPJkc2SYbxJsiZXawJdtZNmkmnsPuE3IgsG0A==\",\n             \"dev\": true,\n             \"requires\": {\n                 \"inherits\": \"2.0.3\",\n@@ -1885,9 +1894,9 @@\n             \"dev\": true\n         },\n         \"resolve\": {\n-            \"version\": \"1.8.1\",\n-            \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.8.1.tgz\",\n-            \"integrity\": \"sha512-AicPrAC7Qu1JxPCZ9ZgCZlY35QgFnNqc+0LtbRNxnVw4TXvjQ72wnuL9JQcEBgXkI9JM8MsT9kaQoHcpCRJOYA==\",\n+            \"version\": \"1.9.0\",\n+            \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.9.0.tgz\",\n+            \"integrity\": \"sha512-TZNye00tI67lwYvzxCxHGjwTNlUV70io54/Ed4j6PscB8xVfuBJpRenI/o6dVk0cY0PYTY27AgCoGGxRnYuItQ==\",\n             \"dev\": true,\n             \"requires\": {\n                 \"path-parse\": \"1.0.6\"\n@@ -1924,9 +1933,9 @@\n             \"dev\": true\n         },\n         \"semver\": {\n-            \"version\": \"5.5.1\",\n-            \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.5.1.tgz\",\n-            \"integrity\": \"sha512-PqpAxfrEhlSUWge8dwIp4tZnQ25DIOthpiaHNIthsjEFQD6EvqUKUDM7L8O2rShkFccYo1VjJR0coWfNkCubRw==\"\n+            \"version\": \"5.6.0\",\n+            \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.6.0.tgz\",\n+            \"integrity\": \"sha512-RS9R6R35NYgQn++fkDWaOmqGoj4Ek9gGs+DPxNUZKuwE183xjJroKvyo1IzVFeXvUrvmALy6FWD5xrdJT25gMg==\"\n         },\n         \"source-map\": {\n             \"version\": \"0.6.1\",\n@@ -1955,7 +1964,7 @@\n         },\n         \"sprintf-js\": {\n             \"version\": \"1.0.3\",\n-            \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz\",\n             \"integrity\": \"sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=\",\n             \"dev\": true\n         },\n@@ -2057,17 +2066,14 @@\n             }\n         },\n         \"supports-color\": {\n-            \"version\": \"4.4.0\",\n-            \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-4.4.0.tgz\",\n-            \"integrity\": \"sha512-rKC3+DyXWgK0ZLKwmRsrkyHVZAjNkfzeehuFWdGGcqGDTZFH73+RH6S/RDAAxl9GusSjZSUWYLmT9N5pzXFOXQ==\",\n-            \"dev\": true,\n-            \"requires\": {\n-                \"has-flag\": \"2.0.0\"\n-            }\n+            \"version\": \"2.0.0\",\n+            \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz\",\n+            \"integrity\": \"sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=\",\n+            \"dev\": true\n         },\n         \"tar\": {\n             \"version\": \"2.2.1\",\n-            \"resolved\": \"https://registry.npmjs.org/tar/-/tar-2.2.1.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/tar/-/tar-2.2.1.tgz\",\n             \"integrity\": \"sha1-jk0qJWwOIYXGsYrWlK7JaLg8sdE=\",\n             \"dev\": true,\n             \"requires\": {\n@@ -2162,7 +2168,7 @@\n             \"integrity\": \"sha512-Q5srk/4vDM54WJsJio3XNn6K2sCG+CQ8G5Wz6bZhRZoAe/+TxjWB/GlFAnYEbkYVlON9FMk/fE3h2RLpPXo4lQ==\",\n             \"dev\": true,\n             \"requires\": {\n-                \"psl\": \"1.1.29\",\n+                \"psl\": \"1.1.31\",\n                 \"punycode\": \"1.4.1\"\n             },\n             \"dependencies\": {\n@@ -2189,13 +2195,13 @@\n                 \"babel-code-frame\": \"6.26.0\",\n                 \"builtin-modules\": \"1.1.1\",\n                 \"chalk\": \"2.4.1\",\n-                \"commander\": \"2.18.0\",\n-                \"diff\": \"3.3.1\",\n+                \"commander\": \"2.19.0\",\n+                \"diff\": \"3.5.0\",\n                 \"glob\": \"7.1.3\",\n                 \"js-yaml\": \"3.12.0\",\n                 \"minimatch\": \"3.0.4\",\n-                \"resolve\": \"1.8.1\",\n-                \"semver\": \"5.5.1\",\n+                \"resolve\": \"1.9.0\",\n+                \"semver\": \"5.6.0\",\n                 \"tslib\": \"1.9.3\",\n                 \"tsutils\": \"2.29.0\"\n             }\n@@ -2248,7 +2254,7 @@\n             \"dependencies\": {\n                 \"underscore\": {\n                     \"version\": \"1.8.3\",\n-                    \"resolved\": \"https://registry.npmjs.org/underscore/-/underscore-1.8.3.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/underscore/-/underscore-1.8.3.tgz\",\n                     \"integrity\": \"sha1-Tz+1OxBuYJf8+ctBCfKl6b36UCI=\",\n                     \"dev\": true\n                 }\n@@ -2489,7 +2495,7 @@\n             \"dev\": true,\n             \"requires\": {\n                 \"cheerio\": \"1.0.0-rc.2\",\n-                \"commander\": \"2.18.0\",\n+                \"commander\": \"2.19.0\",\n                 \"denodeify\": \"1.2.1\",\n                 \"glob\": \"7.1.3\",\n                 \"lodash\": \"4.17.11\",\n@@ -2499,7 +2505,7 @@\n                 \"osenv\": \"0.1.5\",\n                 \"parse-semver\": \"1.1.1\",\n                 \"read\": \"1.0.7\",\n-                \"semver\": \"5.5.1\",\n+                \"semver\": \"5.6.0\",\n                 \"tmp\": \"0.0.29\",\n                 \"url-join\": \"1.1.0\",\n                 \"vso-node-api\": \"6.1.2-preview\",\n@@ -2522,7 +2528,7 @@\n                 \"gulp-vinyl-zip\": \"2.1.2\",\n                 \"mocha\": \"4.1.0\",\n                 \"request\": \"2.88.0\",\n-                \"semver\": \"5.5.1\",\n+                \"semver\": \"5.6.0\",\n                 \"source-map-support\": \"0.5.9\",\n                 \"url-parse\": \"1.4.4\",\n                 \"vinyl-fs\": \"3.0.3\",\n@@ -2539,7 +2545,7 @@\n             \"resolved\": \"https://registry.npmjs.org/vscode-languageclient/-/vscode-languageclient-5.2.1.tgz\",\n             \"integrity\": \"sha512-7jrS/9WnV0ruqPamN1nE7qCxn0phkH5LjSgSp9h6qoJGoeAKzwKz/PF6M+iGA/aklx4GLZg1prddhEPQtuXI1Q==\",\n             \"requires\": {\n-                \"semver\": \"5.5.1\",\n+                \"semver\": \"5.6.0\",\n                 \"vscode-languageserver-protocol\": \"3.14.1\"\n             }\n         },"}]}