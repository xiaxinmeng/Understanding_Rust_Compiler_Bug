{"sha": "443881a37b8183e82fdd55c40956bd012b27a28d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0Mzg4MWEzN2I4MTgzZTgyZmRkNTVjNDA5NTZiZDAxMmIyN2EyOGQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2018-12-16T13:08:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-12-16T13:08:13Z"}, "message": "Rollup merge of #53506 - phungleson:fix-from-docs-atomic, r=KodrAus\n\nDocumentation for impl From for AtomicBool and other Atomic types\n\nAs part of issue #51430 (cc @skade).\n\nThe impl is very simple, so not sure if we need to go into any details.", "tree": {"sha": "05961f58ba2ffdac52a03094cc5abd6a97fca6b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05961f58ba2ffdac52a03094cc5abd6a97fca6b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/443881a37b8183e82fdd55c40956bd012b27a28d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcFk49CRBK7hj4Ov3rIwAAdHIIAFTQCKjDQc8mG4G/QNMmv78b\nswwaWfvxZzusd9feTolZXqSMaWfYQxD95ij7xh1W3xlbXOa6xyDBe1J/AjeWlfjA\nHihKj7AJ+UQV1sSiuaIyNgZ0GgOjQnRJt7gnNWSGvAV3eWhdwvX3Lg6zJG2F1G80\nD6Vp9O+gIl+wQ/W4KX/ftOFc4S1VENQJ8/T8AQS7CyB9dw3FjWlVpJPfet/OrMVI\nuckfRVemovZutRxZbps9C+EMT+ECPp5HoTodMF2R++/zAtfucJ3kjcO5R2cc591e\npYczpNZHq4BdN1EpPTIuM5Djjs/bv5SaEcRBhgR0uOZjydmtKJPhhJCGEnInlak=\n=/eri\n-----END PGP SIGNATURE-----\n", "payload": "tree 05961f58ba2ffdac52a03094cc5abd6a97fca6b9\nparent 748d354af3145d4292ea84142f73bb8114e3db12\nparent 94c1c7328ad04318375d404c6c9adb94b769b18a\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1544965693 +0100\ncommitter GitHub <noreply@github.com> 1544965693 +0100\n\nRollup merge of #53506 - phungleson:fix-from-docs-atomic, r=KodrAus\n\nDocumentation for impl From for AtomicBool and other Atomic types\n\nAs part of issue #51430 (cc @skade).\n\nThe impl is very simple, so not sure if we need to go into any details.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/443881a37b8183e82fdd55c40956bd012b27a28d", "html_url": "https://github.com/rust-lang/rust/commit/443881a37b8183e82fdd55c40956bd012b27a28d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/443881a37b8183e82fdd55c40956bd012b27a28d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "748d354af3145d4292ea84142f73bb8114e3db12", "url": "https://api.github.com/repos/rust-lang/rust/commits/748d354af3145d4292ea84142f73bb8114e3db12", "html_url": "https://github.com/rust-lang/rust/commit/748d354af3145d4292ea84142f73bb8114e3db12"}, {"sha": "94c1c7328ad04318375d404c6c9adb94b769b18a", "url": "https://api.github.com/repos/rust-lang/rust/commits/94c1c7328ad04318375d404c6c9adb94b769b18a", "html_url": "https://github.com/rust-lang/rust/commit/94c1c7328ad04318375d404c6c9adb94b769b18a"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "d2683e31eefb84fc04089034f8cf8d2fdb11a305", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/443881a37b8183e82fdd55c40956bd012b27a28d/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/443881a37b8183e82fdd55c40956bd012b27a28d/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=443881a37b8183e82fdd55c40956bd012b27a28d", "patch": "@@ -1072,6 +1072,15 @@ impl<T> AtomicPtr<T> {\n #[cfg(target_has_atomic = \"8\")]\n #[stable(feature = \"atomic_bool_from\", since = \"1.24.0\")]\n impl From<bool> for AtomicBool {\n+    /// Converts a `bool` into an `AtomicBool`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::sync::atomic::AtomicBool;\n+    /// let atomic_bool = AtomicBool::from(true);\n+    /// assert_eq!(format!(\"{:?}\", atomic_bool), \"true\")\n+    /// ```\n     #[inline]\n     fn from(b: bool) -> Self { Self::new(b) }\n }\n@@ -1126,8 +1135,12 @@ macro_rules! atomic_int {\n \n         #[$stable_from]\n         impl From<$int_type> for $atomic_type {\n-            #[inline]\n-            fn from(v: $int_type) -> Self { Self::new(v) }\n+            doc_comment! {\n+                concat!(\n+\"Converts an `\", stringify!($int_type), \"` into an `\", stringify!($atomic_type), \"`.\"),\n+                #[inline]\n+                fn from(v: $int_type) -> Self { Self::new(v) }\n+            }\n         }\n \n         #[$stable_debug]"}]}