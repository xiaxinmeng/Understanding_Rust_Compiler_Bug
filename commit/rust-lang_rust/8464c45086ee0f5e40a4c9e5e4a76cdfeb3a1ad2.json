{"sha": "8464c45086ee0f5e40a4c9e5e4a76cdfeb3a1ad2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0NjRjNDUwODZlZTBmNWU0MGE0YzllNWU0YTc2Y2RmZWIzYTFhZDI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-27T09:36:40Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-27T09:36:40Z"}, "message": "remove relative_path_buf workaround\n\nThe upstream problem was fixed with the change to 1.0", "tree": {"sha": "85231799bdc84bcd43ceceee08fe7714a9f21faa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85231799bdc84bcd43ceceee08fe7714a9f21faa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8464c45086ee0f5e40a4c9e5e4a76cdfeb3a1ad2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8464c45086ee0f5e40a4c9e5e4a76cdfeb3a1ad2", "html_url": "https://github.com/rust-lang/rust/commit/8464c45086ee0f5e40a4c9e5e4a76cdfeb3a1ad2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8464c45086ee0f5e40a4c9e5e4a76cdfeb3a1ad2/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da5528824a836a4f36f44f90adc9fadcc98ca75b", "url": "https://api.github.com/repos/rust-lang/rust/commits/da5528824a836a4f36f44f90adc9fadcc98ca75b", "html_url": "https://github.com/rust-lang/rust/commit/da5528824a836a4f36f44f90adc9fadcc98ca75b"}], "stats": {"total": 18, "additions": 4, "deletions": 14}, "files": [{"sha": "0d1ab48438d02d717eef8fe36988d2d52c9e6d50", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8464c45086ee0f5e40a4c9e5e4a76cdfeb3a1ad2/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8464c45086ee0f5e40a4c9e5e4a76cdfeb3a1ad2/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=8464c45086ee0f5e40a4c9e5e4a76cdfeb3a1ad2", "patch": "@@ -134,10 +134,7 @@ impl<T: SourceDatabaseExt> FileLoader for FileLoaderDelegate<&'_ T> {\n     ) -> Option<FileId> {\n         let path = {\n             let mut path = self.0.file_relative_path(anchor);\n-            // Workaround for relative path API: turn `lib.rs` into ``.\n-            if !path.pop() {\n-                path = RelativePathBuf::default();\n-            }\n+            assert!(path.pop());\n             path.push(relative_path);\n             path.normalize()\n         };"}, {"sha": "334cdd692ac2813e54a3cf9fb3e35637184eee0a", "filename": "crates/ra_hir/src/nameres/mod_resolution.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8464c45086ee0f5e40a4c9e5e4a76cdfeb3a1ad2/crates%2Fra_hir%2Fsrc%2Fnameres%2Fmod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8464c45086ee0f5e40a4c9e5e4a76cdfeb3a1ad2/crates%2Fra_hir%2Fsrc%2Fnameres%2Fmod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Fmod_resolution.rs?ref=8464c45086ee0f5e40a4c9e5e4a76cdfeb3a1ad2", "patch": "@@ -30,10 +30,7 @@ impl ModDir {\n             None => path.push(&name.to_string()),\n             Some(attr_path) => {\n                 if self.root_non_dir_owner {\n-                    // Workaround for relative path API: turn `lib.rs` into ``.\n-                    if !path.pop() {\n-                        path = RelativePathBuf::default();\n-                    }\n+                    assert!(path.pop());\n                 }\n                 path.push(attr_path);\n             }\n@@ -48,17 +45,13 @@ impl ModDir {\n         name: &Name,\n         attr_path: Option<&SmolStr>,\n     ) -> Result<(FileId, ModDir), RelativePathBuf> {\n-        let empty_path = RelativePathBuf::default();\n         let file_id = file_id.original_file(db);\n \n         let mut candidate_files = Vec::new();\n         match attr_to_path(attr_path) {\n             Some(attr_path) => {\n-                let base = if self.root_non_dir_owner {\n-                    self.path.parent().unwrap_or(&empty_path)\n-                } else {\n-                    &self.path\n-                };\n+                let base =\n+                    if self.root_non_dir_owner { self.path.parent().unwrap() } else { &self.path };\n                 candidate_files.push(base.join(attr_path))\n             }\n             None => {"}]}