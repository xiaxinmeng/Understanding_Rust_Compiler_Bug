{"sha": "79246e8e9a4cac5dc4330da4af4342f3d95b688d", "node_id": "C_kwDOAAsO6NoAKDc5MjQ2ZThlOWE0Y2FjNWRjNDMzMGRhNGFmNDM0MmYzZDk1YjY4OGQ", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-07-21T21:00:28Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-07-29T17:30:25Z"}, "message": "Remove box syntax from doctest.rs", "tree": {"sha": "8b55c4af90a0e282d7db6a641ea8e0bb53d144c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b55c4af90a0e282d7db6a641ea8e0bb53d144c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79246e8e9a4cac5dc4330da4af4342f3d95b688d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79246e8e9a4cac5dc4330da4af4342f3d95b688d", "html_url": "https://github.com/rust-lang/rust/commit/79246e8e9a4cac5dc4330da4af4342f3d95b688d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79246e8e9a4cac5dc4330da4af4342f3d95b688d/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e62f6a0e872d6016320586195f06447408fb15e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e62f6a0e872d6016320586195f06447408fb15e1", "html_url": "https://github.com/rust-lang/rust/commit/e62f6a0e872d6016320586195f06447408fb15e1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "213f564ce2db593adcf111041aefdba1d48bf7b6", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79246e8e9a4cac5dc4330da4af4342f3d95b688d/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79246e8e9a4cac5dc4330da4af4342f3d95b688d/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=79246e8e9a4cac5dc4330da4af4342f3d95b688d", "patch": "@@ -740,7 +740,7 @@ fn check_if_attr_is_complete(source: &str, edition: Edition) -> bool {\n                 rustc_errors::fallback_fluent_bundle(rustc_errors::DEFAULT_LOCALE_RESOURCES, false);\n \n             let emitter = EmitterWriter::new(\n-                box io::sink(),\n+                Box::new(io::sink()),\n                 None,\n                 None,\n                 fallback_bundle,\n@@ -751,7 +751,7 @@ fn check_if_attr_is_complete(source: &str, edition: Edition) -> bool {\n                 false,\n             );\n \n-            let handler = Handler::with_emitter(false, None, box emitter);\n+            let handler = Handler::with_emitter(false, None, Box::new(emitter));\n             let sess = ParseSess::with_span_handler(handler, sm);\n             let mut parser =\n                 match maybe_new_parser_from_source_str(&sess, filename, source.to_owned()) {"}]}