{"sha": "798ce4ab59ab2ca84caacc4472499409a8516db3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5OGNlNGFiNTlhYjJjYTg0Y2FhY2M0NDcyNDk5NDA5YTg1MTZkYjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-25T20:37:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-25T20:37:38Z"}, "message": "Auto merge of #30856 - mneumann:thread_local_extern, r=alexcrichton\n\nThis will correctly add the thread_local attribute to the external static variable ```errno```:\n\n```rust\nextern {\n     #[thread_local]\n     static errno: c_int;\n}\n```\n\nBefore this commit, the thread_local attribute is ignored. Fixes #30795.\n\nThanks @alexcrichton for pointing out the solution.", "tree": {"sha": "cd4669d5cc33642d94a8a65232749e3857e5a7bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd4669d5cc33642d94a8a65232749e3857e5a7bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/798ce4ab59ab2ca84caacc4472499409a8516db3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/798ce4ab59ab2ca84caacc4472499409a8516db3", "html_url": "https://github.com/rust-lang/rust/commit/798ce4ab59ab2ca84caacc4472499409a8516db3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/798ce4ab59ab2ca84caacc4472499409a8516db3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9852e2e550306a738653a5d4d16cab43454776f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9852e2e550306a738653a5d4d16cab43454776f", "html_url": "https://github.com/rust-lang/rust/commit/c9852e2e550306a738653a5d4d16cab43454776f"}, {"sha": "78d954425dcf9d224b2034dd558f7958165e2877", "url": "https://api.github.com/repos/rust-lang/rust/commits/78d954425dcf9d224b2034dd558f7958165e2877", "html_url": "https://github.com/rust-lang/rust/commit/78d954425dcf9d224b2034dd558f7958165e2877"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "06a4d3f1f6411fc98ac555572b5560e0732932f8", "filename": "src/librustc_trans/trans/foreign.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/798ce4ab59ab2ca84caacc4472499409a8516db3/src%2Flibrustc_trans%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/798ce4ab59ab2ca84caacc4472499409a8516db3/src%2Flibrustc_trans%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fforeign.rs?ref=798ce4ab59ab2ca84caacc4472499409a8516db3", "patch": "@@ -39,6 +39,7 @@ use syntax::attr;\n use syntax::codemap::Span;\n use syntax::parse::token::{InternedString, special_idents};\n use syntax::ast;\n+use syntax::attr::AttrMetaMethods;\n \n use rustc_front::print::pprust;\n use rustc_front::hir;\n@@ -120,8 +121,8 @@ pub fn register_static(ccx: &CrateContext,\n     let llty = type_of::type_of(ccx, ty);\n \n     let ident = link_name(foreign_item);\n-    match attr::first_attr_value_str_by_name(&foreign_item.attrs,\n-                                             \"linkage\") {\n+    let c = match attr::first_attr_value_str_by_name(&foreign_item.attrs,\n+                                                     \"linkage\") {\n         // If this is a static with a linkage specified, then we need to handle\n         // it a little specially. The typesystem prevents things like &T and\n         // extern \"C\" fn() from being non-null, so we can't just declare a\n@@ -166,7 +167,16 @@ pub fn register_static(ccx: &CrateContext,\n         }\n         None => // Generate an external declaration.\n             declare::declare_global(ccx, &ident[..], llty),\n+    };\n+\n+    // Handle thread-local external statics.\n+    for attr in foreign_item.attrs.iter() {\n+        if attr.check_name(\"thread_local\") {\n+            llvm::set_thread_local(c, true);\n+        }\n     }\n+\n+    return c;\n }\n \n // only use this for foreign function ABIs and glue, use `get_extern_rust_fn` for Rust functions"}, {"sha": "d1971a5e1aea40403f0a486d23d25285de263685", "filename": "src/test/auxiliary/thread-local-extern-static.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/798ce4ab59ab2ca84caacc4472499409a8516db3/src%2Ftest%2Fauxiliary%2Fthread-local-extern-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/798ce4ab59ab2ca84caacc4472499409a8516db3/src%2Ftest%2Fauxiliary%2Fthread-local-extern-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fthread-local-extern-static.rs?ref=798ce4ab59ab2ca84caacc4472499409a8516db3", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(thread_local)]\n+#![feature(cfg_target_thread_local)]\n+#![crate_type = \"lib\"]\n+\n+#[no_mangle]\n+#[cfg_attr(target_thread_local, thread_local)]\n+pub static FOO: u32 = 3;"}, {"sha": "92a95cad0d38a4daeb334f5358cd6956a0e225da", "filename": "src/test/run-pass/thread-local-extern-static.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/798ce4ab59ab2ca84caacc4472499409a8516db3/src%2Ftest%2Frun-pass%2Fthread-local-extern-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/798ce4ab59ab2ca84caacc4472499409a8516db3/src%2Ftest%2Frun-pass%2Fthread-local-extern-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fthread-local-extern-static.rs?ref=798ce4ab59ab2ca84caacc4472499409a8516db3", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-windows\n+// aux-build:thread-local-extern-static.rs\n+\n+#![feature(thread_local)]\n+#![feature(cfg_target_thread_local)]\n+\n+extern crate thread_local_extern_static;\n+\n+extern {\n+    #[cfg_attr(target_thread_local, thread_local)]\n+    static FOO: u32;\n+}\n+\n+fn main() {\n+    assert_eq!(FOO, 3);\n+}"}]}