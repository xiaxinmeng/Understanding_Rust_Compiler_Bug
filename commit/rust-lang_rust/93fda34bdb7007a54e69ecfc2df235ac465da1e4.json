{"sha": "93fda34bdb7007a54e69ecfc2df235ac465da1e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzZmRhMzRiZGI3MDA3YTU0ZTY5ZWNmYzJkZjIzNWFjNDY1ZGExZTQ=", "commit": {"author": {"name": "zseri", "email": "zseri.devel@ytrizja.de", "date": "2021-03-05T19:02:48Z"}, "committer": {"name": "zseri", "email": "zseri.devel@ytrizja.de", "date": "2021-03-05T19:02:48Z"}, "message": "stabilize feature(osstring_ascii)", "tree": {"sha": "d6bf806e9d3d88e3d22231c7784823673796c25f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6bf806e9d3d88e3d22231c7784823673796c25f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93fda34bdb7007a54e69ecfc2df235ac465da1e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93fda34bdb7007a54e69ecfc2df235ac465da1e4", "html_url": "https://github.com/rust-lang/rust/commit/93fda34bdb7007a54e69ecfc2df235ac465da1e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93fda34bdb7007a54e69ecfc2df235ac465da1e4/comments", "author": {"login": "fogti", "id": 1618343, "node_id": "MDQ6VXNlcjE2MTgzNDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1618343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fogti", "html_url": "https://github.com/fogti", "followers_url": "https://api.github.com/users/fogti/followers", "following_url": "https://api.github.com/users/fogti/following{/other_user}", "gists_url": "https://api.github.com/users/fogti/gists{/gist_id}", "starred_url": "https://api.github.com/users/fogti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fogti/subscriptions", "organizations_url": "https://api.github.com/users/fogti/orgs", "repos_url": "https://api.github.com/users/fogti/repos", "events_url": "https://api.github.com/users/fogti/events{/privacy}", "received_events_url": "https://api.github.com/users/fogti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fogti", "id": 1618343, "node_id": "MDQ6VXNlcjE2MTgzNDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1618343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fogti", "html_url": "https://github.com/fogti", "followers_url": "https://api.github.com/users/fogti/followers", "following_url": "https://api.github.com/users/fogti/following{/other_user}", "gists_url": "https://api.github.com/users/fogti/gists{/gist_id}", "starred_url": "https://api.github.com/users/fogti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fogti/subscriptions", "organizations_url": "https://api.github.com/users/fogti/orgs", "repos_url": "https://api.github.com/users/fogti/repos", "events_url": "https://api.github.com/users/fogti/events{/privacy}", "received_events_url": "https://api.github.com/users/fogti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fd946c63a6c3aae9788bd459d278cb2efa77099", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fd946c63a6c3aae9788bd459d278cb2efa77099", "html_url": "https://github.com/rust-lang/rust/commit/8fd946c63a6c3aae9788bd459d278cb2efa77099"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "5e0ce0358f782eeb4c663f95e015312fc4c92b98", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/93fda34bdb7007a54e69ecfc2df235ac465da1e4/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93fda34bdb7007a54e69ecfc2df235ac465da1e4/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=93fda34bdb7007a54e69ecfc2df235ac465da1e4", "patch": "@@ -715,7 +715,6 @@ impl OsStr {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(osstring_ascii)]\n     /// use std::ffi::OsString;\n     ///\n     /// let mut s = OsString::from(\"GR\u00dc\u00dfE, J\u00dcRGEN \u2764\");\n@@ -724,7 +723,7 @@ impl OsStr {\n     ///\n     /// assert_eq!(\"gr\u00dc\u00dfe, j\u00dcrgen \u2764\", s);\n     /// ```\n-    #[unstable(feature = \"osstring_ascii\", issue = \"70516\")]\n+    #[stable(feature = \"osstring_ascii\", since = \"1.52.0\")]\n     #[inline]\n     pub fn make_ascii_lowercase(&mut self) {\n         self.inner.make_ascii_lowercase()\n@@ -741,7 +740,6 @@ impl OsStr {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(osstring_ascii)]\n     /// use std::ffi::OsString;\n     ///\n     /// let mut s = OsString::from(\"Gr\u00fc\u00dfe, J\u00fcrgen \u2764\");\n@@ -750,7 +748,7 @@ impl OsStr {\n     ///\n     /// assert_eq!(\"GR\u00fc\u00dfE, J\u00fcRGEN \u2764\", s);\n     /// ```\n-    #[unstable(feature = \"osstring_ascii\", issue = \"70516\")]\n+    #[stable(feature = \"osstring_ascii\", since = \"1.52.0\")]\n     #[inline]\n     pub fn make_ascii_uppercase(&mut self) {\n         self.inner.make_ascii_uppercase()\n@@ -767,13 +765,12 @@ impl OsStr {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(osstring_ascii)]\n     /// use std::ffi::OsString;\n     /// let s = OsString::from(\"Gr\u00fc\u00dfe, J\u00fcrgen \u2764\");\n     ///\n     /// assert_eq!(\"gr\u00fc\u00dfe, j\u00fcrgen \u2764\", s.to_ascii_lowercase());\n     /// ```\n-    #[unstable(feature = \"osstring_ascii\", issue = \"70516\")]\n+    #[stable(feature = \"osstring_ascii\", since = \"1.52.0\")]\n     pub fn to_ascii_lowercase(&self) -> OsString {\n         OsString::from_inner(self.inner.to_ascii_lowercase())\n     }\n@@ -789,13 +786,12 @@ impl OsStr {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(osstring_ascii)]\n     /// use std::ffi::OsString;\n     /// let s = OsString::from(\"Gr\u00fc\u00dfe, J\u00fcrgen \u2764\");\n     ///\n     /// assert_eq!(\"GR\u00fc\u00dfE, J\u00fcRGEN \u2764\", s.to_ascii_uppercase());\n     /// ```\n-    #[unstable(feature = \"osstring_ascii\", issue = \"70516\")]\n+    #[stable(feature = \"osstring_ascii\", since = \"1.52.0\")]\n     pub fn to_ascii_uppercase(&self) -> OsString {\n         OsString::from_inner(self.inner.to_ascii_uppercase())\n     }\n@@ -805,7 +801,6 @@ impl OsStr {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(osstring_ascii)]\n     /// use std::ffi::OsString;\n     ///\n     /// let ascii = OsString::from(\"hello!\\n\");\n@@ -814,7 +809,7 @@ impl OsStr {\n     /// assert!(ascii.is_ascii());\n     /// assert!(!non_ascii.is_ascii());\n     /// ```\n-    #[unstable(feature = \"osstring_ascii\", issue = \"70516\")]\n+    #[stable(feature = \"osstring_ascii\", since = \"1.52.0\")]\n     #[inline]\n     pub fn is_ascii(&self) -> bool {\n         self.inner.is_ascii()\n@@ -828,14 +823,13 @@ impl OsStr {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(osstring_ascii)]\n     /// use std::ffi::OsString;\n     ///\n     /// assert!(OsString::from(\"Ferris\").eq_ignore_ascii_case(\"FERRIS\"));\n     /// assert!(OsString::from(\"Ferr\u00f6s\").eq_ignore_ascii_case(\"FERR\u00f6S\"));\n     /// assert!(!OsString::from(\"Ferr\u00f6s\").eq_ignore_ascii_case(\"FERR\u00d6S\"));\n     /// ```\n-    #[unstable(feature = \"osstring_ascii\", issue = \"70516\")]\n+    #[stable(feature = \"osstring_ascii\", since = \"1.52.0\")]\n     pub fn eq_ignore_ascii_case<S: AsRef<OsStr>>(&self, other: S) -> bool {\n         self.inner.eq_ignore_ascii_case(&other.as_ref().inner)\n     }"}]}