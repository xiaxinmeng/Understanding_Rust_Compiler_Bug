{"sha": "6c9fdc7922e01a47a8398a0f10f30debdfbad938", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjOWZkYzc5MjJlMDFhNDdhODM5OGEwZjEwZjMwZGViZGZiYWQ5Mzg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-13T15:40:05Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-13T15:40:05Z"}, "message": "expand comment", "tree": {"sha": "96de9a77d7fe8a25d6de1acdb6e28ee23bfa534b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96de9a77d7fe8a25d6de1acdb6e28ee23bfa534b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c9fdc7922e01a47a8398a0f10f30debdfbad938", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c9fdc7922e01a47a8398a0f10f30debdfbad938", "html_url": "https://github.com/rust-lang/rust/commit/6c9fdc7922e01a47a8398a0f10f30debdfbad938", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c9fdc7922e01a47a8398a0f10f30debdfbad938/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81307d72992d709c5f3086a620a94d91694e4096", "url": "https://api.github.com/repos/rust-lang/rust/commits/81307d72992d709c5f3086a620a94d91694e4096", "html_url": "https://github.com/rust-lang/rust/commit/81307d72992d709c5f3086a620a94d91694e4096"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "c166980a150d3f76e65b7ce172d8eed1f62cf67b", "filename": "src/terminator/drop.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c9fdc7922e01a47a8398a0f10f30debdfbad938/src%2Fterminator%2Fdrop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c9fdc7922e01a47a8398a0f10f30debdfbad938/src%2Fterminator%2Fdrop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fdrop.rs?ref=6c9fdc7922e01a47a8398a0f10f30debdfbad938", "patch": "@@ -11,7 +11,9 @@ use value::Value;\n impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n     pub(crate) fn drop_lvalue(&mut self, lval: Lvalue<'tcx>, instance: ty::Instance<'tcx>, ty: Ty<'tcx>, span: Span) -> EvalResult<'tcx> {\n         trace!(\"drop_lvalue: {:#?}\", lval);\n-        // We take the address of the object.\n+        // We take the address of the object.  This may well be unaligned, which is fine for us here.\n+        // However, unaligned accesses will probably make the actual drop implementation fail -- a problem shared\n+        // by rustc.\n         let val = match self.force_allocation(lval)? {\n             Lvalue::Ptr { ptr, extra: LvalueExtra::Vtable(vtable), aligned: _ } => ptr.to_value_with_vtable(vtable),\n             Lvalue::Ptr { ptr, extra: LvalueExtra::Length(len), aligned: _ } => ptr.to_value_with_len(len),"}]}