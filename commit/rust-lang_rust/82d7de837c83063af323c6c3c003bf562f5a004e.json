{"sha": "82d7de837c83063af323c6c3c003bf562f5a004e", "node_id": "C_kwDOAAsO6NoAKDgyZDdkZTgzN2M4MzA2M2FmMzIzYzZjM2MwMDNiZjU2MmY1YTAwNGU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-04T17:52:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-04T17:52:28Z"}, "message": "Rollup merge of #103958 - chenyukang:yukang/fix-103951-count-limit, r=jyn514\n\nTest tidy should not count untracked paths towards entries limit\n\nFixes #103951\nr? `@jyn514`", "tree": {"sha": "32163f1ce25ff42eae5170ab63914f2ae9d446c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32163f1ce25ff42eae5170ab63914f2ae9d446c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82d7de837c83063af323c6c3c003bf562f5a004e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjZVFcCRBK7hj4Ov3rIwAAfkIIABBlv3AvoTkK7ZgoJZqpLYBl\nR3ekOXXyoWI0tIh6yORenmINKcHF0VcLqQwCfzrQIpzAdbtwYa6IDlfomwPmRcjV\ndXnHW7FRjSs7DhC3m/T2xVngN8ZgODhfV32PN9XwHv6JKVD67ZWeyEaBs7Gr1rOd\nhjNbJsAWRgK3BosHSaKOv9cDRHUhLdjdK/+SPBv+pEMjcIOgNKf3ewA873YbjiCu\nWQqhRxM1Vql9Ym0UGE0UdY8Yo9qcC03Y4IjuodJebf9kov2+JuFPNyn5Y8/OooqC\naCK8utW3gJOMxHw+DXi97nhrStYt8puWzp7uvRDfjiRTYeKKyLVAsnKzFNeTkZk=\n=85T1\n-----END PGP SIGNATURE-----\n", "payload": "tree 32163f1ce25ff42eae5170ab63914f2ae9d446c1\nparent f7ed72de4031adfe775261f16faa2d1814475879\nparent 18511ba1cb6199aae13d7c8dd987e328259a4702\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1667584348 +0100\ncommitter GitHub <noreply@github.com> 1667584348 +0100\n\nRollup merge of #103958 - chenyukang:yukang/fix-103951-count-limit, r=jyn514\n\nTest tidy should not count untracked paths towards entries limit\n\nFixes #103951\nr? `@jyn514`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82d7de837c83063af323c6c3c003bf562f5a004e", "html_url": "https://github.com/rust-lang/rust/commit/82d7de837c83063af323c6c3c003bf562f5a004e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82d7de837c83063af323c6c3c003bf562f5a004e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7ed72de4031adfe775261f16faa2d1814475879", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7ed72de4031adfe775261f16faa2d1814475879", "html_url": "https://github.com/rust-lang/rust/commit/f7ed72de4031adfe775261f16faa2d1814475879"}, {"sha": "18511ba1cb6199aae13d7c8dd987e328259a4702", "url": "https://api.github.com/repos/rust-lang/rust/commits/18511ba1cb6199aae13d7c8dd987e328259a4702", "html_url": "https://github.com/rust-lang/rust/commit/18511ba1cb6199aae13d7c8dd987e328259a4702"}], "stats": {"total": 61, "additions": 35, "deletions": 26}, "files": [{"sha": "b73a4d6f2da50c81ba6d90cde0b596ce3c8ea3a6", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/82d7de837c83063af323c6c3c003bf562f5a004e/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/82d7de837c83063af323c6c3c003bf562f5a004e/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=82d7de837c83063af323c6c3c003bf562f5a004e", "patch": "@@ -4937,6 +4937,7 @@ name = \"tidy\"\n version = \"0.1.0\"\n dependencies = [\n  \"cargo_metadata 0.14.0\",\n+ \"ignore\",\n  \"lazy_static\",\n  \"miropt-test-tools\",\n  \"regex\","}, {"sha": "97d038da702d5b727497f787702ad559fe87def8", "filename": "src/tools/tidy/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/82d7de837c83063af323c6c3c003bf562f5a004e/src%2Ftools%2Ftidy%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/82d7de837c83063af323c6c3c003bf562f5a004e/src%2Ftools%2Ftidy%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2FCargo.toml?ref=82d7de837c83063af323c6c3c003bf562f5a004e", "patch": "@@ -10,6 +10,7 @@ regex = \"1\"\n miropt-test-tools = { path = \"../miropt-test-tools\" }\n lazy_static = \"1\"\n walkdir = \"2\"\n+ignore = \"0.4.18\"\n \n [[bin]]\n name = \"rust-tidy\""}, {"sha": "aee36f061c5d166f9edf592149767b2da5c3a028", "filename": "src/tools/tidy/src/ui_tests.rs", "status": "modified", "additions": 33, "deletions": 26, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/82d7de837c83063af323c6c3c003bf562f5a004e/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82d7de837c83063af323c6c3c003bf562f5a004e/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs?ref=82d7de837c83063af323c6c3c003bf562f5a004e", "patch": "@@ -2,6 +2,8 @@\n //! - the number of entries in each directory must be less than `ENTRY_LIMIT`\n //! - there are no stray `.stderr` files\n \n+use ignore::Walk;\n+use ignore::WalkBuilder;\n use std::fs;\n use std::path::Path;\n \n@@ -11,34 +13,39 @@ const ROOT_ENTRY_LIMIT: usize = 941;\n const ISSUES_ENTRY_LIMIT: usize = 2117;\n \n fn check_entries(path: &Path, bad: &mut bool) {\n-    let dirs = walkdir::WalkDir::new(&path.join(\"test/ui\"))\n-        .into_iter()\n-        .filter_entry(|e| e.file_type().is_dir());\n-    for dir in dirs {\n-        if let Ok(dir) = dir {\n-            let dir_path = dir.path();\n+    for dir in Walk::new(&path.join(\"test/ui\")) {\n+        if let Ok(entry) = dir {\n+            if entry.file_type().map(|ft| ft.is_dir()).unwrap_or(false) {\n+                let dir_path = entry.path();\n+                // Use special values for these dirs.\n+                let is_root = path.join(\"test/ui\") == dir_path;\n+                let is_issues_dir = path.join(\"test/ui/issues\") == dir_path;\n+                let limit = if is_root {\n+                    ROOT_ENTRY_LIMIT\n+                } else if is_issues_dir {\n+                    ISSUES_ENTRY_LIMIT\n+                } else {\n+                    ENTRY_LIMIT\n+                };\n \n-            // Use special values for these dirs.\n-            let is_root = path.join(\"test/ui\") == dir_path;\n-            let is_issues_dir = path.join(\"test/ui/issues\") == dir_path;\n-            let limit = if is_root {\n-                ROOT_ENTRY_LIMIT\n-            } else if is_issues_dir {\n-                ISSUES_ENTRY_LIMIT\n-            } else {\n-                ENTRY_LIMIT\n-            };\n+                let count = WalkBuilder::new(&dir_path)\n+                    .max_depth(Some(1))\n+                    .build()\n+                    .into_iter()\n+                    .collect::<Vec<_>>()\n+                    .len()\n+                    - 1; // remove the dir itself\n \n-            let count = std::fs::read_dir(dir_path).unwrap().count();\n-            if count > limit {\n-                tidy_error!(\n-                    bad,\n-                    \"following path contains more than {} entries, \\\n-                    you should move the test to some relevant subdirectory (current: {}): {}\",\n-                    limit,\n-                    count,\n-                    dir_path.display()\n-                );\n+                if count > limit {\n+                    tidy_error!(\n+                        bad,\n+                        \"following path contains more than {} entries, \\\n+                            you should move the test to some relevant subdirectory (current: {}): {}\",\n+                        limit,\n+                        count,\n+                        dir_path.display()\n+                    );\n+                }\n             }\n         }\n     }"}]}