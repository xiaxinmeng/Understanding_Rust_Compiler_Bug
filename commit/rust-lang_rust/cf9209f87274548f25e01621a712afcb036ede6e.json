{"sha": "cf9209f87274548f25e01621a712afcb036ede6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmOTIwOWY4NzI3NDU0OGYyNWUwMTYyMWE3MTJhZmNiMDM2ZWRlNmU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-04-25T22:36:00Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-05-12T17:16:37Z"}, "message": "Improve results", "tree": {"sha": "e3579633343aa420299a5584941a70e19c7aaa5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3579633343aa420299a5584941a70e19c7aaa5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf9209f87274548f25e01621a712afcb036ede6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf9209f87274548f25e01621a712afcb036ede6e", "html_url": "https://github.com/rust-lang/rust/commit/cf9209f87274548f25e01621a712afcb036ede6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf9209f87274548f25e01621a712afcb036ede6e/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6db79f2ca07e4e533f4e940462a42f1093e52f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6db79f2ca07e4e533f4e940462a42f1093e52f3", "html_url": "https://github.com/rust-lang/rust/commit/e6db79f2ca07e4e533f4e940462a42f1093e52f3"}], "stats": {"total": 79, "additions": 53, "deletions": 26}, "files": [{"sha": "ba92ac7bd306e9e561e2669ea0ce9e1d3d118286", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 49, "deletions": 26, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/cf9209f87274548f25e01621a712afcb036ede6e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/cf9209f87274548f25e01621a712afcb036ede6e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=cf9209f87274548f25e01621a712afcb036ede6e", "patch": "@@ -454,12 +454,16 @@\n                         var obj = searchIndex[results[i].id];\n                         obj.lev = results[i].lev;\n                         if (isType !== true || obj.type) {\n+                            var res = buildHrefAndPath(obj);\n+                            obj.displayPath = pathSplitter(res[0]);\n+                            obj.fullPath = obj.displayPath + obj.name;\n+                            obj.href = res[1];\n                             out.push(obj);\n+                            if (out.length >= MAX_RESULTS) {\n+                                break;\n+                            }\n                         }\n                     }\n-                    if (out.length >= MAX_RESULTS) {\n-                        break;\n-                    }\n                 }\n                 return out;\n             }\n@@ -1017,6 +1021,12 @@\n                     ALIASES[window.currentCrate][query.raw]) {\n                 var aliases = ALIASES[window.currentCrate][query.raw];\n                 for (var i = 0; i < aliases.length; ++i) {\n+                    aliases[i].is_alias = true;\n+                    aliases[i].alias = query.raw;\n+                    var res = buildHrefAndPath(aliases[i]);\n+                    aliases[i].displayPath = pathSplitter(res[0]);\n+                    aliases[i].fullPath = aliases[i].displayPath + aliases[i].name;\n+                    aliases[i].href = res[1];\n                     ret['others'].unshift(aliases[i]);\n                     if (ret['others'].length > MAX_RESULTS) {\n                         ret['others'].pop();\n@@ -1179,16 +1189,6 @@\n             };\n         }\n \n-        function escape(content) {\n-            var h1 = document.createElement('h1');\n-            h1.textContent = content;\n-            return h1.innerHTML;\n-        }\n-\n-        function pathSplitter(path) {\n-            return '<span>' + path.replace(/::/g, '::</span><span>');\n-        }\n-\n         function buildHrefAndPath(item) {\n             var displayPath;\n             var href;\n@@ -1227,19 +1227,30 @@\n             return [displayPath, href];\n         }\n \n+        function escape(content) {\n+            var h1 = document.createElement('h1');\n+            h1.textContent = content;\n+            return h1.innerHTML;\n+        }\n+\n+        function pathSplitter(path) {\n+            return '<span>' + path.replace(/::/g, '::</span><span>');\n+        }\n+\n         function addTab(array, query, display) {\n             var extraStyle = '';\n             if (display === false) {\n                 extraStyle = ' style=\"display: none;\"';\n             }\n \n             var output = '';\n+            var duplicates = {};\n             if (array.length > 0) {\n                 output = '<table class=\"search-results\"' + extraStyle + '>';\n                 var shown = [];\n \n                 array.forEach(function(item) {\n-                    var name, type, href, displayPath;\n+                    var name, type;\n \n                     var id_ty = item.ty + item.path + item.name;\n                     if (shown.indexOf(id_ty) !== -1) {\n@@ -1250,15 +1261,23 @@\n                     name = item.name;\n                     type = itemTypes[item.ty];\n \n-                    var res = buildHrefAndPath(item);\n-                    var href = res[1];\n-                    var displayPath = res[0];\n+                    if (item.is_alias !== true) {\n+                        var fullPath = item.displayPath + name;\n+\n+                        if (duplicates[fullPath]) {\n+                            return;\n+                        }\n+                        duplicates[fullPath] = true;\n+                    }\n \n                     output += '<tr class=\"' + type + ' result\"><td>' +\n-                              '<a href=\"' + href + '\">' +\n-                              pathSplitter(displayPath) + '<span class=\"' + type + '\">' +\n+                              '<a href=\"' + item.href + '\">' +\n+                              (item.is_alias === true ?\n+                               ('<span><b>' + item.alias + ' </b></span><span ' +\n+                                  'class=\"grey\"><i>&nbsp;- see&nbsp;</i></span>') : '') +\n+                              item.displayPath + '<span class=\"' + type + '\">' +\n                               name + '</span></a></td><td>' +\n-                              '<a href=\"' + href + '\">' +\n+                              '<a href=\"' + item.href + '\">' +\n                               '<span class=\"desc\">' + escape(item.desc) +\n                               '&nbsp;</span></a></td></tr>';\n                 });\n@@ -1284,8 +1303,7 @@\n             if (results['others'].length === 1 &&\n                 getCurrentValue('rustdoc-go-to-only-result') === \"true\") {\n                 var elem = document.createElement('a');\n-                var res = buildHrefAndPath(results['others'][0]);\n-                elem.href = res[1];\n+                elem.href = results['others'][0].href;\n                 elem.style.display = 'none';\n                 // For firefox, we need the element to be in the DOM so it can be clicked.\n                 document.body.appendChild(elem);\n@@ -1347,12 +1365,13 @@\n                 }\n             }\n             if (queries.length > 1) {\n-                function getSmallest(arrays, positions) {\n+                function getSmallest(arrays, positions, notDuplicates) {\n                     var start = null;\n \n                     for (var it = 0; it < positions.length; ++it) {\n                         if (arrays[it].length > positions[it] &&\n-                            (start === null || start > arrays[it][positions[it]].lev)) {\n+                            (start === null || start > arrays[it][positions[it]].lev) &&\n+                            !notDuplicates[arrays[it][positions[it]].fullPath]) {\n                             start = arrays[it][positions[it]].lev;\n                         }\n                     }\n@@ -1362,19 +1381,23 @@\n                 function mergeArrays(arrays) {\n                     var ret = [];\n                     var positions = [];\n+                    var notDuplicates = {};\n \n                     for (var x = 0; x < arrays.length; ++x) {\n                         positions.push(0);\n                     }\n                     while (ret.length < MAX_RESULTS) {\n-                        var smallest = getSmallest(arrays, positions);\n+                        var smallest = getSmallest(arrays, positions, notDuplicates);\n+\n                         if (smallest === null) {\n                             break;\n                         }\n                         for (x = 0; x < arrays.length && ret.length < MAX_RESULTS; ++x) {\n                             if (arrays[x].length > positions[x] &&\n-                                    arrays[x][positions[x]].lev === smallest) {\n+                                    arrays[x][positions[x]].lev === smallest &&\n+                                    !notDuplicates[arrays[x][positions[x]].fullPath]) {\n                                 ret.push(arrays[x][positions[x]]);\n+                                notDuplicates[arrays[x][positions[x]].fullPath] = true;\n                                 positions[x] += 1;\n                             }\n                         }"}, {"sha": "08df4adf57d34273f8866638ae81d417abb17ee3", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cf9209f87274548f25e01621a712afcb036ede6e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/cf9209f87274548f25e01621a712afcb036ede6e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=cf9209f87274548f25e01621a712afcb036ede6e", "patch": "@@ -1326,4 +1326,8 @@ kbd {\n }\n #all-types > p {\n \tmargin: 5px 0;\n+}\n+\n+.search-results td span.grey {\n+\tcolor: #ccc;\n }\n\\ No newline at end of file"}]}