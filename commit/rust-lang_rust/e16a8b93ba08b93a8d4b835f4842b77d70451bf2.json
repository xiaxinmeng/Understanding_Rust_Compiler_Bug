{"sha": "e16a8b93ba08b93a8d4b835f4842b77d70451bf2", "node_id": "C_kwDOAAsO6NoAKGUxNmE4YjkzYmEwOGI5M2E4ZDRiODM1ZjQ4NDJiNzdkNzA0NTFiZjI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-01T22:37:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-01T22:37:15Z"}, "message": "Auto merge of #10008 - Jarcho:issue_9882, r=Manishearth\n\nTreat custom enum discriminant values as constants\n\nfixes #9882\nchangelog: All lints: Don't lint in enum discriminant values when the suggestion won't work in a const context", "tree": {"sha": "a01ebcf7e478b66c62e050eb3203949018dc52f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a01ebcf7e478b66c62e050eb3203949018dc52f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e16a8b93ba08b93a8d4b835f4842b77d70451bf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e16a8b93ba08b93a8d4b835f4842b77d70451bf2", "html_url": "https://github.com/rust-lang/rust/commit/e16a8b93ba08b93a8d4b835f4842b77d70451bf2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e16a8b93ba08b93a8d4b835f4842b77d70451bf2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be0eb20fff7f222200d0160da1e2537592a0314e", "url": "https://api.github.com/repos/rust-lang/rust/commits/be0eb20fff7f222200d0160da1e2537592a0314e", "html_url": "https://github.com/rust-lang/rust/commit/be0eb20fff7f222200d0160da1e2537592a0314e"}, {"sha": "a1b15f13f7187b9c61e1d691a339b32550dfed43", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1b15f13f7187b9c61e1d691a339b32550dfed43", "html_url": "https://github.com/rust-lang/rust/commit/a1b15f13f7187b9c61e1d691a339b32550dfed43"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "09ed7255a2b2f737a40b58627bbe953cfa498139", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e16a8b93ba08b93a8d4b835f4842b77d70451bf2/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e16a8b93ba08b93a8d4b835f4842b77d70451bf2/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=e16a8b93ba08b93a8d4b835f4842b77d70451bf2", "patch": "@@ -196,7 +196,7 @@ pub fn in_constant(cx: &LateContext<'_>, id: HirId) -> bool {\n     let parent_id = cx.tcx.hir().get_parent_item(id).def_id;\n     match cx.tcx.hir().get_by_def_id(parent_id) {\n         Node::Item(&Item {\n-            kind: ItemKind::Const(..) | ItemKind::Static(..),\n+            kind: ItemKind::Const(..) | ItemKind::Static(..) | ItemKind::Enum(..),\n             ..\n         })\n         | Node::TraitItem(&TraitItem {"}, {"sha": "925cbf25368fbd18b3ceb6b537b38070e82266a4", "filename": "tests/ui/cast_lossless_integer.fixed", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e16a8b93ba08b93a8d4b835f4842b77d70451bf2/tests%2Fui%2Fcast_lossless_integer.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e16a8b93ba08b93a8d4b835f4842b77d70451bf2/tests%2Fui%2Fcast_lossless_integer.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_integer.fixed?ref=e16a8b93ba08b93a8d4b835f4842b77d70451bf2", "patch": "@@ -45,3 +45,9 @@ mod cast_lossless_in_impl {\n         }\n     }\n }\n+\n+#[derive(PartialEq, Debug)]\n+#[repr(i64)]\n+enum Test {\n+    A = u32::MAX as i64 + 1,\n+}"}, {"sha": "c82bd9108d23bfb8ad03bc97911c76d49e00cb67", "filename": "tests/ui/cast_lossless_integer.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e16a8b93ba08b93a8d4b835f4842b77d70451bf2/tests%2Fui%2Fcast_lossless_integer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e16a8b93ba08b93a8d4b835f4842b77d70451bf2/tests%2Fui%2Fcast_lossless_integer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_integer.rs?ref=e16a8b93ba08b93a8d4b835f4842b77d70451bf2", "patch": "@@ -45,3 +45,9 @@ mod cast_lossless_in_impl {\n         }\n     }\n }\n+\n+#[derive(PartialEq, Debug)]\n+#[repr(i64)]\n+enum Test {\n+    A = u32::MAX as i64 + 1,\n+}"}]}