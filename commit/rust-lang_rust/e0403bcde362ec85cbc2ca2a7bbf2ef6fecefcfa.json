{"sha": "e0403bcde362ec85cbc2ca2a7bbf2ef6fecefcfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwNDAzYmNkZTM2MmVjODVjYmMyY2EyYTdiYmYyZWY2ZmVjZWZjZmE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-21T01:38:48Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-21T21:18:57Z"}, "message": "lowering: bug! -> panic!", "tree": {"sha": "94b2d7775c93c896968eae35112d484faefc4f92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94b2d7775c93c896968eae35112d484faefc4f92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0403bcde362ec85cbc2ca2a7bbf2ef6fecefcfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0403bcde362ec85cbc2ca2a7bbf2ef6fecefcfa", "html_url": "https://github.com/rust-lang/rust/commit/e0403bcde362ec85cbc2ca2a7bbf2ef6fecefcfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0403bcde362ec85cbc2ca2a7bbf2ef6fecefcfa/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f68ab03c3dd1df24063dcf8fc84cf56fa83a27b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f68ab03c3dd1df24063dcf8fc84cf56fa83a27b", "html_url": "https://github.com/rust-lang/rust/commit/0f68ab03c3dd1df24063dcf8fc84cf56fa83a27b"}], "stats": {"total": 35, "additions": 17, "deletions": 18}, "files": [{"sha": "239dec9e9746bf45e43181ba1a30212976242b84", "filename": "src/librustc_ast_lowering/expr.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e0403bcde362ec85cbc2ca2a7bbf2ef6fecefcfa/src%2Flibrustc_ast_lowering%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0403bcde362ec85cbc2ca2a7bbf2ef6fecefcfa/src%2Flibrustc_ast_lowering%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fexpr.rs?ref=e0403bcde362ec85cbc2ca2a7bbf2ef6fecefcfa", "patch": "@@ -1,6 +1,5 @@\n use super::{ImplTraitContext, LoweringContext, ParamMode, ParenthesizedGenericArgs};\n \n-use rustc::bug;\n use rustc_ast::ast::*;\n use rustc_ast::attr;\n use rustc_ast::ptr::P as AstP;\n@@ -757,7 +756,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                 Some(movability)\n             }\n             Some(hir::GeneratorKind::Async(_)) => {\n-                bug!(\"non-`async` closure body turned `async` during lowering\");\n+                panic!(\"non-`async` closure body turned `async` during lowering\");\n             }\n             None => {\n                 if movability == Movability::Static {"}, {"sha": "e66770a5bee35da598ab0508ecc86b04aeb6c01e", "filename": "src/librustc_ast_lowering/item.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e0403bcde362ec85cbc2ca2a7bbf2ef6fecefcfa/src%2Flibrustc_ast_lowering%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0403bcde362ec85cbc2ca2a7bbf2ef6fecefcfa/src%2Flibrustc_ast_lowering%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fitem.rs?ref=e0403bcde362ec85cbc2ca2a7bbf2ef6fecefcfa", "patch": "@@ -2,7 +2,6 @@ use super::{AnonymousLifetimeMode, LoweringContext, ParamMode};\n use super::{ImplTraitContext, ImplTraitPosition, ImplTraitTypeIdVisitor};\n use crate::Arena;\n \n-use rustc::bug;\n use rustc_ast::ast::*;\n use rustc_ast::attr;\n use rustc_ast::node_id::NodeMap;\n@@ -432,7 +431,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                 self.lower_param_bounds(bounds, ImplTraitContext::disallowed()),\n             ),\n             ItemKind::MacroDef(..) | ItemKind::MacCall(..) => {\n-                bug!(\"`TyMac` should have been expanded by now\")\n+                panic!(\"`TyMac` should have been expanded by now\")\n             }\n         }\n \n@@ -784,7 +783,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n \n                 (generics, kind)\n             }\n-            AssocItemKind::MacCall(..) => bug!(\"macro item shouldn't exist at this point\"),\n+            AssocItemKind::MacCall(..) => panic!(\"macro item shouldn't exist at this point\"),\n         };\n \n         hir::TraitItem {\n@@ -865,7 +864,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                 };\n                 (generics, kind)\n             }\n-            AssocItemKind::MacCall(..) => bug!(\"`TyMac` should have been expanded by now\"),\n+            AssocItemKind::MacCall(..) => panic!(\"`TyMac` should have been expanded by now\"),\n         };\n \n         hir::ImplItem {"}, {"sha": "5cd869f60ab8c9825d564fde30011eccde7ce3ed", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e0403bcde362ec85cbc2ca2a7bbf2ef6fecefcfa/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0403bcde362ec85cbc2ca2a7bbf2ef6fecefcfa/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=e0403bcde362ec85cbc2ca2a7bbf2ef6fecefcfa", "patch": "@@ -38,7 +38,6 @@\n \n use rustc::dep_graph::DepGraph;\n use rustc::hir::map::definitions::{DefKey, DefPathData, Definitions};\n-use rustc::{bug, span_bug};\n use rustc_ast::ast;\n use rustc_ast::ast::*;\n use rustc_ast::attr;\n@@ -675,7 +674,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n     fn expect_full_res(&mut self, id: NodeId) -> Res<NodeId> {\n         self.resolver.get_partial_res(id).map_or(Res::Err, |pr| {\n             if pr.unresolved_segments() != 0 {\n-                bug!(\"path not fully resolved: {:?}\", pr);\n+                panic!(\"path not fully resolved: {:?}\", pr);\n             }\n             pr.base_res()\n         })\n@@ -1343,7 +1342,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                     }\n                 }\n             }\n-            TyKind::MacCall(_) => bug!(\"`TyKind::MacCall` should have been expanded by now\"),\n+            TyKind::MacCall(_) => panic!(\"`TyKind::MacCall` should have been expanded by now\"),\n             TyKind::CVarArgs => {\n                 self.sess.delay_span_bug(\n                     t.span,\n@@ -1578,7 +1577,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                         hir::LifetimeName::Param(param_name) => {\n                             (param_name, hir::LifetimeParamKind::Explicit)\n                         }\n-                        _ => bug!(\"expected `LifetimeName::Param` or `ParamName::Plain`\"),\n+                        _ => panic!(\"expected `LifetimeName::Param` or `ParamName::Plain`\"),\n                     };\n \n                     self.output_lifetime_params.push(hir::GenericParam {\n@@ -2099,7 +2098,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                     | hir::LifetimeName::Underscore\n                     | hir::LifetimeName::Static => hir::ParamName::Plain(lt.name.ident()),\n                     hir::LifetimeName::ImplicitObjectLifetimeDefault => {\n-                        span_bug!(\n+                        self.sess.diagnostic().span_bug(\n                             param.ident.span,\n                             \"object-lifetime-default should not occur here\",\n                         );\n@@ -2166,7 +2165,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n     ) -> hir::TraitRef<'hir> {\n         let path = match self.lower_qpath(p.ref_id, &None, &p.path, ParamMode::Explicit, itctx) {\n             hir::QPath::Resolved(None, path) => path,\n-            qpath => bug!(\"lower_trait_ref: unexpected QPath `{:?}`\", qpath),\n+            qpath => panic!(\"lower_trait_ref: unexpected QPath `{:?}`\", qpath),\n         };\n         hir::TraitRef { path, hir_ref_id: self.lower_node_id(p.ref_id) }\n     }"}, {"sha": "44bde42ba11cf0895036ff8086068323e74db1aa", "filename": "src/librustc_ast_lowering/path.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e0403bcde362ec85cbc2ca2a7bbf2ef6fecefcfa/src%2Flibrustc_ast_lowering%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0403bcde362ec85cbc2ca2a7bbf2ef6fecefcfa/src%2Flibrustc_ast_lowering%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fpath.rs?ref=e0403bcde362ec85cbc2ca2a7bbf2ef6fecefcfa", "patch": "@@ -1,7 +1,6 @@\n use super::{AnonymousLifetimeMode, ImplTraitContext, LoweringContext, ParamMode};\n use super::{GenericArgsCtor, ParenthesizedGenericArgs};\n \n-use rustc::span_bug;\n use rustc_ast::ast::{self, *};\n use rustc_errors::{struct_span_err, Applicability};\n use rustc_hir as hir;\n@@ -163,12 +162,15 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         }\n \n         // We should've returned in the for loop above.\n-        span_bug!(\n+\n+        self.sess.diagnostic().span_bug(\n             p.span,\n-            \"lower_qpath: no final extension segment in {}..{}\",\n-            proj_start,\n-            p.segments.len()\n-        )\n+            &format!(\n+                \"lower_qpath: no final extension segment in {}..{}\",\n+                proj_start,\n+                p.segments.len()\n+            ),\n+        );\n     }\n \n     crate fn lower_path_extra("}]}