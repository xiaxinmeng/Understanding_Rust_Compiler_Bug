{"sha": "433f0e8d1fbd25693172f71e5a577bb9625b45b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzM2YwZThkMWZiZDI1NjkzMTcyZjcxZTVhNTc3YmI5NjI1YjQ1YjA=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-08T22:43:37Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-14T18:08:26Z"}, "message": "std: Set overlap/noinherit flags on windows sockets\n\nThis commit modifies the socket creation functions on windows to always specify\nthe `WSA_FLAG_OVERLAPPED` and `WSA_FLAG_NO_HANDLE_INHERIT` flags by default. The\noverlapped flag enables IOCP APIs on Windows to be used with the socket at no\ncost, enabling better interoperation with external libraries. The no handle\ninherit flag mirrors the upcoming change to Unix to set CLOEXEC by default for\nall handles.\n\nCloses #24206", "tree": {"sha": "49e1f1b5d040f6e52697334dedf582c8b055a85a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49e1f1b5d040f6e52697334dedf582c8b055a85a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/433f0e8d1fbd25693172f71e5a577bb9625b45b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/433f0e8d1fbd25693172f71e5a577bb9625b45b0", "html_url": "https://github.com/rust-lang/rust/commit/433f0e8d1fbd25693172f71e5a577bb9625b45b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/433f0e8d1fbd25693172f71e5a577bb9625b45b0/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "926f38e588bb99aff1902fa94ab82b1db89cbbce", "url": "https://api.github.com/repos/rust-lang/rust/commits/926f38e588bb99aff1902fa94ab82b1db89cbbce", "html_url": "https://github.com/rust-lang/rust/commit/926f38e588bb99aff1902fa94ab82b1db89cbbce"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "2d3c25826983f2ff5a81d255b6d133fbd25a8482", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/433f0e8d1fbd25693172f71e5a577bb9625b45b0/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/433f0e8d1fbd25693172f71e5a577bb9625b45b0/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=433f0e8d1fbd25693172f71e5a577bb9625b45b0", "patch": "@@ -44,6 +44,8 @@ pub const WSA_WAIT_TIMEOUT: libc::DWORD = libc::consts::os::extra::WAIT_TIMEOUT;\n pub const WSA_WAIT_EVENT_0: libc::DWORD = libc::consts::os::extra::WAIT_OBJECT_0;\n pub const WSA_WAIT_FAILED: libc::DWORD = libc::consts::os::extra::WAIT_FAILED;\n pub const WSAESHUTDOWN: libc::c_int = 10058;\n+pub const WSA_FLAG_OVERLAPPED: libc::DWORD = 0x01;\n+pub const WSA_FLAG_NO_HANDLE_INHERIT: libc::DWORD = 0x80;\n \n pub const ERROR_NO_MORE_FILES: libc::DWORD = 18;\n pub const TOKEN_READ: libc::DWORD = 0x20008;"}, {"sha": "f47c785bd263c605e8265282878d6f3e56d1bd4f", "filename": "src/libstd/sys/windows/net.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/433f0e8d1fbd25693172f71e5a577bb9625b45b0/src%2Flibstd%2Fsys%2Fwindows%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/433f0e8d1fbd25693172f71e5a577bb9625b45b0/src%2Flibstd%2Fsys%2Fwindows%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fnet.rs?ref=433f0e8d1fbd25693172f71e5a577bb9625b45b0", "patch": "@@ -80,7 +80,11 @@ impl Socket {\n             SocketAddr::V4(..) => libc::AF_INET,\n             SocketAddr::V6(..) => libc::AF_INET6,\n         };\n-        match unsafe { libc::socket(fam, ty, 0) } {\n+        let socket = unsafe {\n+            c::WSASocketW(fam, ty, 0, 0 as *mut _, 0,\n+                          c::WSA_FLAG_OVERLAPPED | c::WSA_FLAG_NO_HANDLE_INHERIT)\n+        };\n+        match socket {\n             INVALID_SOCKET => Err(last_error()),\n             n => Ok(Socket(n)),\n         }\n@@ -103,7 +107,9 @@ impl Socket {\n             match c::WSASocketW(info.iAddressFamily,\n                                 info.iSocketType,\n                                 info.iProtocol,\n-                                &mut info, 0, 0) {\n+                                &mut info, 0,\n+                                c::WSA_FLAG_OVERLAPPED |\n+                                    c::WSA_FLAG_NO_HANDLE_INHERIT) {\n                 INVALID_SOCKET => Err(last_error()),\n                 n => Ok(Socket(n)),\n             }"}]}