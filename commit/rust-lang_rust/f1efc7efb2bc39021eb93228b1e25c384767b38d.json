{"sha": "f1efc7efb2bc39021eb93228b1e25c384767b38d", "node_id": "C_kwDOAAsO6NoAKGYxZWZjN2VmYjJiYzM5MDIxZWI5MzIyOGIxZTI1YzM4NDc2N2IzOGQ", "commit": {"author": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2021-10-23T18:34:09Z"}, "committer": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2021-10-23T18:35:24Z"}, "message": "Make sure `CreateDirectoryW` works for path lengths > 247", "tree": {"sha": "d55a1d283fcd28efd5358b1566b8b16a4309eb30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d55a1d283fcd28efd5358b1566b8b16a4309eb30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1efc7efb2bc39021eb93228b1e25c384767b38d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmF0Ve0ACgkQcTRy8vRW\nJ969kg//bTXqK6FWAVLoesjv3ubYrI9RNR+NlKm7cEMuFymnh+uHqxyuBF8TkxwI\n42I69lX0PZTvYTY+cp7gy4Em05fSaUTnLwFunELdoWOXbAV4m2d+G2/qqMrcMEuq\nWHD5w3NgkOSjAy5SOX/KGvTRXamJm51eFJDhedBc4T2t0cA++YV9VTK8Z6Yq/bHg\n7cbSWwjJRCs9LJKnXOJQsJ8+IJbRGLjofdG+OW/yma2fqS0AppUSDVVv4HQbQgoN\n+HDcpK2YaxLtFFUH/UBcSnMexHbyrgiOp8Y6xe1mHMypWP2z1ioAXIJjiO74T2D2\nFDfC6ezn00sXVVVNyYpoW0Brov7SVJ/fQZ5m8D7ra0/c6Px7NK+I48t4lr4RZXF2\nY+gy5j9s+4ULjeqhaLCeWfZWCbzRRVKeyScBoN77G5nGGfEiT7O9SHAuQvmWmsZg\nYzbQg/ike/i0W6u7v9uO+kW5MnPKknssgUmfYBNA2pIh3PWKAG3xtZtCqAgGTLJ0\nDgyf4HAlxOEyguVLIeI+N7MX9/g7tSxnQkH1eRZuu/Etx+7JL3QZDq5sfNYvZ20q\n8UZmjlpupSVzIYlWzbjm23Pl+EOHv+MkqVge5Y6YVjKKSfW890SneYgYsAbfADdE\nh0B5gkFGiGCTY0bYD8q5PPpFbr3+R2h8ssHNQn3tKiXxSUgPZcI=\n=KCK0\n-----END PGP SIGNATURE-----", "payload": "tree d55a1d283fcd28efd5358b1566b8b16a4309eb30\nparent 3e2d60624162845238fa3b2fbb874eee51daa983\nauthor Chris Denton <christophersdenton@gmail.com> 1635014049 +0100\ncommitter Chris Denton <christophersdenton@gmail.com> 1635014124 +0100\n\nMake sure `CreateDirectoryW` works for path lengths > 247\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1efc7efb2bc39021eb93228b1e25c384767b38d", "html_url": "https://github.com/rust-lang/rust/commit/f1efc7efb2bc39021eb93228b1e25c384767b38d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1efc7efb2bc39021eb93228b1e25c384767b38d/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e2d60624162845238fa3b2fbb874eee51daa983", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e2d60624162845238fa3b2fbb874eee51daa983", "html_url": "https://github.com/rust-lang/rust/commit/3e2d60624162845238fa3b2fbb874eee51daa983"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "628de13156c67f4bff68fee4cff9f7d1161f45ed", "filename": "library/std/src/fs/tests.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f1efc7efb2bc39021eb93228b1e25c384767b38d/library%2Fstd%2Fsrc%2Ffs%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1efc7efb2bc39021eb93228b1e25c384767b38d/library%2Fstd%2Fsrc%2Ffs%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs%2Ftests.rs?ref=f1efc7efb2bc39021eb93228b1e25c384767b38d", "patch": "@@ -1411,3 +1411,32 @@ fn symlink_hard_link() {\n     // \"hard_link\" should still appear as a symlink.\n     assert!(check!(fs::symlink_metadata(tmpdir.join(\"hard_link\"))).file_type().is_symlink());\n }\n+\n+/// Ensure `fs::create_dir` works on Windows with longer paths.\n+#[test]\n+#[cfg(windows)]\n+fn create_dir_long_paths() {\n+    use crate::{ffi::OsStr, iter, os::windows::ffi::OsStrExt};\n+    const PATH_LEN: usize = 247;\n+\n+    let tmpdir = tmpdir();\n+    let mut path = tmpdir.path().to_path_buf();\n+    path.push(\"a\");\n+    let mut path = path.into_os_string();\n+\n+    let utf16_len = path.encode_wide().count();\n+    if utf16_len >= PATH_LEN {\n+        // Skip the test in the unlikely event the local user has a long temp directory path.\n+        // This should not affect CI.\n+        return;\n+    }\n+    // Increase the length of the path.\n+    path.extend(iter::repeat(OsStr::new(\"a\")).take(PATH_LEN - utf16_len));\n+\n+    // This should succeed.\n+    fs::create_dir(&path).unwrap();\n+\n+    // This will fail if the path isn't converted to verbatim.\n+    path.push(\"a\");\n+    fs::create_dir(&path).unwrap();\n+}"}, {"sha": "ad3f44fee8d7c0f68dac7dbea9428b637fcc96e1", "filename": "library/std/src/sys/windows/path.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f1efc7efb2bc39021eb93228b1e25c384767b38d/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1efc7efb2bc39021eb93228b1e25c384767b38d/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fpath.rs?ref=f1efc7efb2bc39021eb93228b1e25c384767b38d", "patch": "@@ -150,7 +150,11 @@ fn parse_next_component(path: &OsStr, verbatim: bool) -> (&OsStr, &OsStr) {\n ///\n /// This path may or may not have a verbatim prefix.\n pub(crate) fn maybe_verbatim(path: &Path) -> io::Result<Vec<u16>> {\n-    const LEGACY_MAX_PATH: usize = 260;\n+    // Normally the MAX path is 260 UTF-16 code units (including the NULL).\n+    // However, for APIs such as CreateDirectory[1], the limit is 248.\n+    //\n+    // [1]: https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-createdirectorya#parameters\n+    const LEGACY_MAX_PATH: usize = 248;\n     // UTF-16 encoded code points, used in parsing and building UTF-16 paths.\n     // All of these are in the ASCII range so they can be cast directly to `u16`.\n     const SEP: u16 = b'\\\\' as _;"}, {"sha": "c6c84519f419cbe750582153d96e906d59e7de69", "filename": "library/std/src/sys/windows/path/tests.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f1efc7efb2bc39021eb93228b1e25c384767b38d/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fpath%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1efc7efb2bc39021eb93228b1e25c384767b38d/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fpath%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fpath%2Ftests.rs?ref=f1efc7efb2bc39021eb93228b1e25c384767b38d", "patch": "@@ -81,6 +81,13 @@ fn verbatim() {\n     check(r\"\\\\server\\share\", r\"\\\\server\\share\");\n     check(r\"\\\\.\\COM1\", r\"\\\\.\\COM1\");\n \n+    // Check that paths of length 247 are converted to verbatim.\n+    // This is necessary for `CreateDirectory`.\n+    check(\n+        r\"C:\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n+        r\"\\\\?\\C:\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n+    );\n+\n     // Make sure opening a drive will work.\n     check(\"Z:\", \"Z:\");\n "}]}