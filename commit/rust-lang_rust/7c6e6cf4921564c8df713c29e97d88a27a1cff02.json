{"sha": "7c6e6cf4921564c8df713c29e97d88a27a1cff02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNmU2Y2Y0OTIxNTY0YzhkZjcxM2MyOWU5N2Q4OGEyN2ExY2ZmMDI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-14T00:38:31Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-07-25T08:22:10Z"}, "message": "for references, validate alignment and handle ZSTs", "tree": {"sha": "981849c6d5c7b2fc9bd86a0c44b8c474e767f944", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/981849c6d5c7b2fc9bd86a0c44b8c474e767f944"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c6e6cf4921564c8df713c29e97d88a27a1cff02", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAll2/7IACgkQpp+NIls6\n19lKIhAAtFKJYF0qzXUQOBuu1tPz67CtVfJSarwLdZgIAeVbF3bBD8YrJTxTi+cY\nKesx+2Nel53HbO/h1vEXHH3JA/rMvGIECHdmQ8yZbW8DYhh4VWJbH/r6rmO1qhrR\nC5b6AvSaBQeYSxcNN3JVC04c8BJOo/Pufx9dk+DuEo3Crw5YG5WLLoYPBi9MYuEJ\nI6OgpCidyjAVVdfTFIc4ui10VacaTIf+8eIseNWYRWvCWdtyYDvgwdHAVx01mdh4\nwGDthGcC8/ObNChodBVnqTXkGUZx6IzET3PydDDgUvu7OCqvwVT576zrfBbPA8nX\nrbLSATkzASPt/6xaFmteE0yDm2OyfEYdzELCUhDL04ltNH/NUwDVUEHgTSeYTD4l\n6y5NHHAs4MYrzWVRqFzOHcIHoXqQRRrrz3URJ7jx1boyvKzGFWidUKKMTwxaCJh7\ni5NeFLBIUkJzm52wQHu/RXmNc+hEwVLtrcpQLF1Zze7Jw0oRRYlXLWW6WO8LL4mI\nasHnQeSH4km/2ohlC7l9NbCMIffKUwYKiNF5nE3WC9m+wLcG/qHS1sMv92OdP+MB\nV5NgH3cSyjRDSiU4VnoecoIqacT/DBFt1he9EvYAhCGkVe2iBWsIigGwEJR/hSz5\nrFyGMD6rHjwjP+AO6IvU/a6Q0QwNHjsf3tVZvqCL9KM1ReQep10=\n=E4UY\n-----END PGP SIGNATURE-----", "payload": "tree 981849c6d5c7b2fc9bd86a0c44b8c474e767f944\nparent 1f9153fac3ed5678c45baae77a306fff3f753d57\nauthor Ralf Jung <post@ralfj.de> 1499992711 -0700\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1500970930 +0200\n\nfor references, validate alignment and handle ZSTs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c6e6cf4921564c8df713c29e97d88a27a1cff02", "html_url": "https://github.com/rust-lang/rust/commit/7c6e6cf4921564c8df713c29e97d88a27a1cff02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c6e6cf4921564c8df713c29e97d88a27a1cff02/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f9153fac3ed5678c45baae77a306fff3f753d57", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f9153fac3ed5678c45baae77a306fff3f753d57", "html_url": "https://github.com/rust-lang/rust/commit/1f9153fac3ed5678c45baae77a306fff3f753d57"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "af7e9e2e66d0d7239a04e7be85cf7e4381b826e6", "filename": "src/librustc_mir/interpret/lvalue.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7c6e6cf4921564c8df713c29e97d88a27a1cff02/src%2Flibrustc_mir%2Finterpret%2Flvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c6e6cf4921564c8df713c29e97d88a27a1cff02/src%2Flibrustc_mir%2Finterpret%2Flvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Flvalue.rs?ref=7c6e6cf4921564c8df713c29e97d88a27a1cff02", "patch": "@@ -505,9 +505,18 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n     fn validate_ptr(&mut self, val: Value, pointee_ty: Ty<'tcx>, vctx: ValidationCtx) -> EvalResult<'tcx> {\n         use self::TyMutability::*;\n \n-        // Acquire lock\n-        let (len, _) = self.size_and_align_of_dst(pointee_ty, val)?;\n-        let ptr = val.into_ptr(&mut self.memory)?.to_ptr()?;\n+        // Check alignment and non-NULLness\n+        let (len, align) = self.size_and_align_of_dst(pointee_ty, val)?;\n+        let ptr = val.into_ptr(&mut self.memory)?;\n+        self.memory.check_align(ptr, align)?;\n+\n+        // For ZSTs, do no more\n+        if len == 0 {\n+            return Ok(())\n+        }\n+\n+        // Acquire lock (also establishing that this is in-bounds etc.)\n+        let ptr = ptr.to_ptr()?;\n         let access = match vctx.mutbl { MutMutable => AccessKind::Write, MutImmutable => AccessKind::Read };\n         match vctx.op {\n             ValidationOp::Acquire => self.memory.acquire_lock(ptr, len, vctx.region, access)?,"}, {"sha": "083c92cfd1c7a7019abad5cb13064061f1b1b00b", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c6e6cf4921564c8df713c29e97d88a27a1cff02/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c6e6cf4921564c8df713c29e97d88a27a1cff02/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=7c6e6cf4921564c8df713c29e97d88a27a1cff02", "patch": "@@ -386,7 +386,7 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n         self.layout.endian\n     }\n \n-    /// Check that the pointer is aligned and non-NULL\n+    /// Check that the pointer is aligned AND non-NULL.\n     pub fn check_align(&self, ptr: Pointer, align: u64) -> EvalResult<'tcx> {\n         let offset = match ptr.into_inner_primval() {\n             PrimVal::Ptr(ptr) => {"}]}