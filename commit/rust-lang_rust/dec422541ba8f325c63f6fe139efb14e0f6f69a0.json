{"sha": "dec422541ba8f325c63f6fe139efb14e0f6f69a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlYzQyMjU0MWJhOGYzMjVjNjNmNmZlMTM5ZWZiMTRlMGY2ZjY5YTA=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-05-11T14:28:57Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-05-11T14:28:57Z"}, "message": "Rollup merge of #25291 - johannhof:let-expressions-example, r=steveklabnik\n\nMaybe it's me, but I really needed an example to understand if let and refutable statements.\r\nPlaypen: http://is.gd/mjX3Gf\r\n\r\nLet me know if the variable names are too, uh, culinary.", "tree": {"sha": "f608e209960ed5746617a1b1d84a58b434638bfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f608e209960ed5746617a1b1d84a58b434638bfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dec422541ba8f325c63f6fe139efb14e0f6f69a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dec422541ba8f325c63f6fe139efb14e0f6f69a0", "html_url": "https://github.com/rust-lang/rust/commit/dec422541ba8f325c63f6fe139efb14e0f6f69a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dec422541ba8f325c63f6fe139efb14e0f6f69a0/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2c2736cd8ac05315bd32e82e7433a168631bb36", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2c2736cd8ac05315bd32e82e7433a168631bb36", "html_url": "https://github.com/rust-lang/rust/commit/f2c2736cd8ac05315bd32e82e7433a168631bb36"}, {"sha": "6a19046423b49672bc71eb07149ae9ef32bc8af5", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a19046423b49672bc71eb07149ae9ef32bc8af5", "html_url": "https://github.com/rust-lang/rust/commit/6a19046423b49672bc71eb07149ae9ef32bc8af5"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "66a7f543ad95f2337604a5e4d3f81096704054c9", "filename": "src/doc/reference.md", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/dec422541ba8f325c63f6fe139efb14e0f6f69a0/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/dec422541ba8f325c63f6fe139efb14e0f6f69a0/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=dec422541ba8f325c63f6fe139efb14e0f6f69a0", "patch": "@@ -3072,6 +3072,20 @@ of a condition expression it expects a refutable let statement. If the value of\n expression on the right hand side of the let statement matches the pattern, the corresponding\n block will execute, otherwise flow proceeds to the first `else` block that follows.\n \n+```\n+let dish = (\"Ham\", \"Eggs\");\n+\n+// this body will be skipped because the pattern is refuted\n+if let (\"Bacon\", b) = dish {\n+    println!(\"Bacon is served with {}\", b);\n+}\n+\n+// this body will execute\n+if let (\"Ham\", b) = dish {\n+    println!(\"Ham is served with {}\", b);\n+}\n+```\n+\n ### While let loops\n \n A `while let` loop is semantically identical to a `while` loop but in place of a"}]}