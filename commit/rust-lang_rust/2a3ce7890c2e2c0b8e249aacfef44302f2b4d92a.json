{"sha": "2a3ce7890c2e2c0b8e249aacfef44302f2b4d92a", "node_id": "C_kwDOAAsO6NoAKDJhM2NlNzg5MGMyZTJjMGI4ZTI0OWFhY2ZlZjQ0MzAyZjJiNGQ5MmE", "commit": {"author": {"name": "Martin Habovstiak", "email": "martin.habovstiak@gmail.com", "date": "2022-08-10T15:22:58Z"}, "committer": {"name": "Martin Habovstiak", "email": "martin.habovstiak@gmail.com", "date": "2022-08-10T15:22:58Z"}, "message": "Stabilize ptr_const_cast\n\nThis stabilizes `ptr_const_cast` feature as was decided in a recent\n[FCP](https://github.com/rust-lang/rust/issues/92675#issuecomment-1190660233)\n\nCloses #92675", "tree": {"sha": "1b9f9d3ebcc31ce7c6619b7999ecb32d4d8e1b01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b9f9d3ebcc31ce7c6619b7999ecb32d4d8e1b01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a3ce7890c2e2c0b8e249aacfef44302f2b4d92a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a3ce7890c2e2c0b8e249aacfef44302f2b4d92a", "html_url": "https://github.com/rust-lang/rust/commit/2a3ce7890c2e2c0b8e249aacfef44302f2b4d92a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a3ce7890c2e2c0b8e249aacfef44302f2b4d92a/comments", "author": {"login": "Kixunil", "id": 1178779, "node_id": "MDQ6VXNlcjExNzg3Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kixunil", "html_url": "https://github.com/Kixunil", "followers_url": "https://api.github.com/users/Kixunil/followers", "following_url": "https://api.github.com/users/Kixunil/following{/other_user}", "gists_url": "https://api.github.com/users/Kixunil/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kixunil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions", "organizations_url": "https://api.github.com/users/Kixunil/orgs", "repos_url": "https://api.github.com/users/Kixunil/repos", "events_url": "https://api.github.com/users/Kixunil/events{/privacy}", "received_events_url": "https://api.github.com/users/Kixunil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kixunil", "id": 1178779, "node_id": "MDQ6VXNlcjExNzg3Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kixunil", "html_url": "https://github.com/Kixunil", "followers_url": "https://api.github.com/users/Kixunil/followers", "following_url": "https://api.github.com/users/Kixunil/following{/other_user}", "gists_url": "https://api.github.com/users/Kixunil/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kixunil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions", "organizations_url": "https://api.github.com/users/Kixunil/orgs", "repos_url": "https://api.github.com/users/Kixunil/repos", "events_url": "https://api.github.com/users/Kixunil/events{/privacy}", "received_events_url": "https://api.github.com/users/Kixunil/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "affe0d3a00e92fa7885e3f5d2c5073fde432d154", "url": "https://api.github.com/repos/rust-lang/rust/commits/affe0d3a00e92fa7885e3f5d2c5073fde432d154", "html_url": "https://github.com/rust-lang/rust/commit/affe0d3a00e92fa7885e3f5d2c5073fde432d154"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "6529f11100d2d0d9417306b36c4a1ddea39b69f6", "filename": "compiler/rustc_arena/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2a3ce7890c2e2c0b8e249aacfef44302f2b4d92a/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a3ce7890c2e2c0b8e249aacfef44302f2b4d92a/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_arena%2Fsrc%2Flib.rs?ref=2a3ce7890c2e2c0b8e249aacfef44302f2b4d92a", "patch": "@@ -19,7 +19,6 @@\n #![feature(rustc_attrs)]\n #![cfg_attr(test, feature(test))]\n #![feature(strict_provenance)]\n-#![feature(ptr_const_cast)]\n \n use smallvec::SmallVec;\n "}, {"sha": "833b57005ab4f1d4cbf32c8c04b1a7bf993800df", "filename": "library/core/src/ptr/const_ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2a3ce7890c2e2c0b8e249aacfef44302f2b4d92a/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a3ce7890c2e2c0b8e249aacfef44302f2b4d92a/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs?ref=2a3ce7890c2e2c0b8e249aacfef44302f2b4d92a", "patch": "@@ -95,8 +95,8 @@ impl<T: ?Sized> *const T {\n     ///\n     /// This is a bit safer than `as` because it wouldn't silently change the type if the code is\n     /// refactored.\n-    #[unstable(feature = \"ptr_const_cast\", issue = \"92675\")]\n-    #[rustc_const_unstable(feature = \"ptr_const_cast\", issue = \"92675\")]\n+    #[stable(feature = \"ptr_const_cast\", since = \"1.65.0\")]\n+    #[rustc_const_stable(feature = \"ptr_const_cast\", since = \"1.65.0\")]\n     pub const fn cast_mut(self) -> *mut T {\n         self as _\n     }"}, {"sha": "5576fa60fbf7e1db365346febd75cc7ddf803808", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2a3ce7890c2e2c0b8e249aacfef44302f2b4d92a/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a3ce7890c2e2c0b8e249aacfef44302f2b4d92a/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=2a3ce7890c2e2c0b8e249aacfef44302f2b4d92a", "patch": "@@ -100,8 +100,8 @@ impl<T: ?Sized> *mut T {\n     /// coercion.\n     ///\n     /// [`cast_mut`]: #method.cast_mut\n-    #[unstable(feature = \"ptr_const_cast\", issue = \"92675\")]\n-    #[rustc_const_unstable(feature = \"ptr_const_cast\", issue = \"92675\")]\n+    #[stable(feature = \"ptr_const_cast\", since = \"1.65.0\")]\n+    #[rustc_const_stable(feature = \"ptr_const_cast\", since = \"1.65.0\")]\n     pub const fn cast_const(self) -> *const T {\n         self as _\n     }"}]}