{"sha": "7985c6f8ecf680dcc960bb2ccc0c787274a449de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ODVjNmY4ZWNmNjgwZGNjOTYwYmIyY2NjMGM3ODcyNzRhNDQ5ZGU=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-03-06T03:50:50Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-03-06T03:50:50Z"}, "message": "Rename check_privacy to check_private_in_public", "tree": {"sha": "ddda88466c99475d16bc0b2bb761e6fac17c1ee2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddda88466c99475d16bc0b2bb761e6fac17c1ee2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7985c6f8ecf680dcc960bb2ccc0c787274a449de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7985c6f8ecf680dcc960bb2ccc0c787274a449de", "html_url": "https://github.com/rust-lang/rust/commit/7985c6f8ecf680dcc960bb2ccc0c787274a449de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7985c6f8ecf680dcc960bb2ccc0c787274a449de/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db9a1c1aaf261c8505d09ac6bd3364ef0d19ee71", "url": "https://api.github.com/repos/rust-lang/rust/commits/db9a1c1aaf261c8505d09ac6bd3364ef0d19ee71", "html_url": "https://github.com/rust-lang/rust/commit/db9a1c1aaf261c8505d09ac6bd3364ef0d19ee71"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "41a4a8031006f9d6ee354e6611a0ac7f92cbed0b", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7985c6f8ecf680dcc960bb2ccc0c787274a449de/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7985c6f8ecf680dcc960bb2ccc0c787274a449de/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=7985c6f8ecf680dcc960bb2ccc0c787274a449de", "patch": "@@ -456,7 +456,7 @@ define_dep_nodes!( <'tcx>\n     [eval_always] CoherenceInherentImplOverlapCheck,\n     [] CoherenceCheckTrait(DefId),\n     [eval_always] PrivacyAccessLevels(CrateNum),\n-    [eval_always] CheckPrivacy(CrateNum),\n+    [eval_always] CheckPrivateInPublic(CrateNum),\n     [eval_always] Analysis(CrateNum),\n \n     // Represents the MIR for a fn; also used as the task node for"}, {"sha": "835a8314959ab128f82128b6385d177f9bd846e4", "filename": "src/librustc/ty/query/config.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7985c6f8ecf680dcc960bb2ccc0c787274a449de/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7985c6f8ecf680dcc960bb2ccc0c787274a449de/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fconfig.rs?ref=7985c6f8ecf680dcc960bb2ccc0c787274a449de", "patch": "@@ -369,9 +369,9 @@ impl<'tcx> QueryDescription<'tcx> for queries::privacy_access_levels<'tcx> {\n     }\n }\n \n-impl<'tcx> QueryDescription<'tcx> for queries::check_privacy<'tcx> {\n+impl<'tcx> QueryDescription<'tcx> for queries::check_private_in_public<'tcx> {\n     fn describe(_: TyCtxt<'_, '_, '_>, _: CrateNum) -> Cow<'static, str> {\n-        \"privacy checking\".into()\n+        \"checking for private elements in public interfaces\".into()\n     }\n }\n "}, {"sha": "8804ed22264ce061e405563eb69314afba67b06b", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7985c6f8ecf680dcc960bb2ccc0c787274a449de/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7985c6f8ecf680dcc960bb2ccc0c787274a449de/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=7985c6f8ecf680dcc960bb2ccc0c787274a449de", "patch": "@@ -352,7 +352,7 @@ define_queries! { <'tcx>\n \n         /// Performs part of the privacy check and computes \"access levels\".\n         [] fn privacy_access_levels: PrivacyAccessLevels(CrateNum) -> Lrc<AccessLevels>,\n-        [] fn check_privacy: CheckPrivacy(CrateNum) -> (),\n+        [] fn check_private_in_public: CheckPrivateInPublic(CrateNum) -> (),\n     },\n \n     Other {"}, {"sha": "e3276ba0bea7bc17822dff9393eb40205f8bd5eb", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7985c6f8ecf680dcc960bb2ccc0c787274a449de/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7985c6f8ecf680dcc960bb2ccc0c787274a449de/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=7985c6f8ecf680dcc960bb2ccc0c787274a449de", "patch": "@@ -1251,7 +1251,7 @@ pub fn force_from_dep_node<'a, 'gcx, 'lcx>(tcx: TyCtxt<'a, 'gcx, 'lcx>,\n             force!(crate_inherent_impls_overlap_check, LOCAL_CRATE)\n         },\n         DepKind::PrivacyAccessLevels => { force!(privacy_access_levels, LOCAL_CRATE); }\n-        DepKind::CheckPrivacy => { force!(check_privacy, LOCAL_CRATE); }\n+        DepKind::CheckPrivateInPublic => { force!(check_private_in_public, LOCAL_CRATE); }\n         DepKind::MirBuilt => { force!(mir_built, def_id!()); }\n         DepKind::MirConstQualif => { force!(mir_const_qualif, def_id!()); }\n         DepKind::MirConst => { force!(mir_const, def_id!()); }"}, {"sha": "8277615b46502352e8bb1657273e015df053f921", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7985c6f8ecf680dcc960bb2ccc0c787274a449de/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7985c6f8ecf680dcc960bb2ccc0c787274a449de/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=7985c6f8ecf680dcc960bb2ccc0c787274a449de", "patch": "@@ -281,8 +281,8 @@ fn analysis<'tcx>(\n                 tcx.ensure().privacy_access_levels(LOCAL_CRATE);\n             });\n             parallel!({\n-                time(sess, \"privacy checking\", || {\n-                    tcx.ensure().check_privacy(LOCAL_CRATE);\n+                time(sess, \"private in public\", || {\n+                    tcx.ensure().check_private_in_public(LOCAL_CRATE);\n                 });\n             }, {\n                 time(sess, \"death checking\", || middle::dead::check_crate(tcx));"}, {"sha": "5443f08debf74caf4afa986a5b10ede65b31d02f", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7985c6f8ecf680dcc960bb2ccc0c787274a449de/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7985c6f8ecf680dcc960bb2ccc0c787274a449de/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=7985c6f8ecf680dcc960bb2ccc0c787274a449de", "patch": "@@ -1760,7 +1760,7 @@ impl<'a, 'tcx> Visitor<'tcx> for PrivateItemsInPublicInterfacesVisitor<'a, 'tcx>\n pub fn provide(providers: &mut Providers<'_>) {\n     *providers = Providers {\n         privacy_access_levels,\n-        check_privacy,\n+        check_private_in_public,\n         check_mod_privacy,\n         ..*providers\n     };\n@@ -1820,7 +1820,7 @@ fn privacy_access_levels<'tcx>(\n     Lrc::new(visitor.access_levels)\n }\n \n-fn check_privacy<'tcx>(tcx: TyCtxt<'_, 'tcx, 'tcx>, krate: CrateNum) {\n+fn check_private_in_public<'tcx>(tcx: TyCtxt<'_, 'tcx, 'tcx>, krate: CrateNum) {\n     assert_eq!(krate, LOCAL_CRATE);\n \n     let access_levels = tcx.privacy_access_levels(LOCAL_CRATE);"}]}