{"sha": "c9ff02f549cf30cf9f3007b34fde89dcf0f46ac2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5ZmYwMmY1NDljZjMwY2Y5ZjMwMDdiMzRmZGU4OWRjZjBmNDZhYzI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-03-14T16:03:20Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-03-14T16:03:20Z"}, "message": "ensure we catch incorrectly unwinding calls", "tree": {"sha": "a6649b3ab9b1916c3af4874423c8d7b86561c835", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6649b3ab9b1916c3af4874423c8d7b86561c835"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9ff02f549cf30cf9f3007b34fde89dcf0f46ac2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9ff02f549cf30cf9f3007b34fde89dcf0f46ac2", "html_url": "https://github.com/rust-lang/rust/commit/c9ff02f549cf30cf9f3007b34fde89dcf0f46ac2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9ff02f549cf30cf9f3007b34fde89dcf0f46ac2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae964207bb17911cf96d9744d9469fa2734093a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae964207bb17911cf96d9744d9469fa2734093a8", "html_url": "https://github.com/rust-lang/rust/commit/ae964207bb17911cf96d9744d9469fa2734093a8"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "fde2c19af07d58b2623eba72b537df41efd3607d", "filename": "tests/compile-fail/panic/bad_unwind.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c9ff02f549cf30cf9f3007b34fde89dcf0f46ac2/tests%2Fcompile-fail%2Fpanic%2Fbad_unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9ff02f549cf30cf9f3007b34fde89dcf0f46ac2/tests%2Fcompile-fail%2Fpanic%2Fbad_unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic%2Fbad_unwind.rs?ref=c9ff02f549cf30cf9f3007b34fde89dcf0f46ac2", "patch": "@@ -0,0 +1,16 @@\n+// error-pattern: calling a function with ABI C-unwind using caller ABI C\n+#![feature(c_unwind)]\n+\n+//! Unwinding when the caller ABI is \"C\" (without \"-unwind\") is UB.\n+//! Currently we detect the ABI mismatch; we could probably allow such calls in principle one day\n+//! but then we have to detect the unexpected unwinding.\n+\n+extern \"C-unwind\" fn unwind() {\n+    panic!();\n+}\n+\n+fn main() {\n+    let unwind: extern \"C-unwind\" fn() = unwind;\n+    let unwind: extern \"C\" fn() = unsafe { std::mem::transmute(unwind) };\n+    std::panic::catch_unwind(|| unwind()).unwrap_err();\n+}"}]}