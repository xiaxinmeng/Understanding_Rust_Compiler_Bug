{"sha": "78b29b360adb82bf57ae77d083833d0135482f96", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4YjI5YjM2MGFkYjgyYmY1N2FlNzdkMDgzODMzZDAxMzU0ODJmOTY=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-11-27T03:13:22Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-11-27T03:13:22Z"}, "message": "Dump return value when returning.", "tree": {"sha": "65f99ace7b270437fa4072870f09849e46357ef2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65f99ace7b270437fa4072870f09849e46357ef2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78b29b360adb82bf57ae77d083833d0135482f96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78b29b360adb82bf57ae77d083833d0135482f96", "html_url": "https://github.com/rust-lang/rust/commit/78b29b360adb82bf57ae77d083833d0135482f96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78b29b360adb82bf57ae77d083833d0135482f96/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "020f0b782b965cbe6b1f4c469b7defd0e2c52e85", "url": "https://api.github.com/repos/rust-lang/rust/commits/020f0b782b965cbe6b1f4c469b7defd0e2c52e85", "html_url": "https://github.com/rust-lang/rust/commit/020f0b782b965cbe6b1f4c469b7defd0e2c52e85"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "8f58105de4bb83db024c22e0b79d89a69e0f9e93", "filename": "src/interpreter/terminator/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/78b29b360adb82bf57ae77d083833d0135482f96/src%2Finterpreter%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78b29b360adb82bf57ae77d083833d0135482f96/src%2Finterpreter%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fterminator%2Fmod.rs?ref=78b29b360adb82bf57ae77d083833d0135482f96", "patch": "@@ -29,7 +29,10 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n     ) -> EvalResult<'tcx, ()> {\n         use rustc::mir::TerminatorKind::*;\n         match terminator.kind {\n-            Return => self.pop_stack_frame()?,\n+            Return => {\n+                self.dump_local(self.frame().return_lvalue);\n+                self.pop_stack_frame()?\n+            }\n \n             Goto { target } => self.goto_block(target),\n "}]}