{"sha": "90d19728fc93157465c1a586dbd35c6dc4cf78c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwZDE5NzI4ZmM5MzE1NzQ2NWMxYTU4NmRiZDM1YzZkYzRjZjc4Yzk=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-05-31T17:15:11Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-06-11T20:48:39Z"}, "message": "Move set_oom_hook and take_oom_hook to a dedicated tracking issue", "tree": {"sha": "b9071e30fcb41bee4e93f7d6ac632e8017dbefcf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9071e30fcb41bee4e93f7d6ac632e8017dbefcf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90d19728fc93157465c1a586dbd35c6dc4cf78c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90d19728fc93157465c1a586dbd35c6dc4cf78c9", "html_url": "https://github.com/rust-lang/rust/commit/90d19728fc93157465c1a586dbd35c6dc4cf78c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90d19728fc93157465c1a586dbd35c6dc4cf78c9/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "125b259b3567f6370d5c242eb102ca0957ffe017", "url": "https://api.github.com/repos/rust-lang/rust/commits/125b259b3567f6370d5c242eb102ca0957ffe017", "html_url": "https://github.com/rust-lang/rust/commit/125b259b3567f6370d5c242eb102ca0957ffe017"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "fd829bfe753147da9ade0df05c5b53ae44b4f39e", "filename": "src/libstd/alloc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90d19728fc93157465c1a586dbd35c6dc4cf78c9/src%2Flibstd%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90d19728fc93157465c1a586dbd35c6dc4cf78c9/src%2Flibstd%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Falloc.rs?ref=90d19728fc93157465c1a586dbd35c6dc4cf78c9", "patch": "@@ -37,7 +37,7 @@ static HOOK: AtomicPtr<()> = AtomicPtr::new(ptr::null_mut());\n /// about the allocation that failed.\n ///\n /// The OOM hook is a global resource.\n-#[unstable(feature = \"allocator_api\", issue = \"32838\")]\n+#[unstable(feature = \"oom_hook\", issue = \"51245\")]\n pub fn set_oom_hook(hook: fn(Layout)) {\n     HOOK.store(hook as *mut (), Ordering::SeqCst);\n }\n@@ -47,7 +47,7 @@ pub fn set_oom_hook(hook: fn(Layout)) {\n /// *See also the function [`set_oom_hook`].*\n ///\n /// If no custom hook is registered, the default hook will be returned.\n-#[unstable(feature = \"allocator_api\", issue = \"32838\")]\n+#[unstable(feature = \"oom_hook\", issue = \"51245\")]\n pub fn take_oom_hook() -> fn(Layout) {\n     let hook = HOOK.swap(ptr::null_mut(), Ordering::SeqCst);\n     if hook.is_null() {"}]}