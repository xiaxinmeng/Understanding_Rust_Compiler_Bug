{"sha": "75e55c1b1260bc0c9f20624820b6c84160b9585c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1ZTU1YzFiMTI2MGJjMGM5ZjIwNjI0ODIwYjZjODQxNjBiOTU4NWM=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-12T22:24:00Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-13T01:16:01Z"}, "message": "Faster select. This version gives us about a 4x speedup.", "tree": {"sha": "9f15164e2c1bdff6a3bb5a1b77bf33dd997145df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f15164e2c1bdff6a3bb5a1b77bf33dd997145df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75e55c1b1260bc0c9f20624820b6c84160b9585c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75e55c1b1260bc0c9f20624820b6c84160b9585c", "html_url": "https://github.com/rust-lang/rust/commit/75e55c1b1260bc0c9f20624820b6c84160b9585c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75e55c1b1260bc0c9f20624820b6c84160b9585c/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c56a38ac2aad69f9d58670da88e6d5c0c6bb5c74", "url": "https://api.github.com/repos/rust-lang/rust/commits/c56a38ac2aad69f9d58670da88e6d5c0c6bb5c74", "html_url": "https://github.com/rust-lang/rust/commit/c56a38ac2aad69f9d58670da88e6d5c0c6bb5c74"}], "stats": {"total": 46, "additions": 34, "deletions": 12}, "files": [{"sha": "085bba6ddb47730ce51d2ca6a2b9a2e997a77924", "filename": "src/test/bench/msgsend-pipes.rs", "status": "modified", "additions": 34, "deletions": 12, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/75e55c1b1260bc0c9f20624820b6c84160b9585c/src%2Ftest%2Fbench%2Fmsgsend-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e55c1b1260bc0c9f20624820b6c84160b9585c/src%2Ftest%2Fbench%2Fmsgsend-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-pipes.rs?ref=75e55c1b1260bc0c9f20624820b6c84160b9585c", "patch": "@@ -82,7 +82,7 @@ fn run(args: &[str]) {\n \n fn main(args: ~[str]) {\n     let args = if os::getenv(\"RUST_BENCH\").is_some() {\n-        ~[\"\", \"1000000\", \"10000\"]\n+        ~[\"\", \"1000000\", \"8\"]\n     } else if args.len() <= 1u {\n         ~[\"\", \"10000\", \"4\"]\n     } else {\n@@ -112,24 +112,34 @@ class box<T> {\n }\n \n class port_set<T: send> {\n-    let ports: box<~[pipes::streamp::server::open<T>]>;\n+    let mut ports: ~[pipes::port<T>];\n \n-    new() { self.ports = box(~[]); }\n+    new() { self.ports = ~[]; }\n \n     fn add(+port: pipes::port<T>) {\n-        let pipes::port_(port) <- port;\n-        let mut p = none;\n-        port.endp <-> p;\n-        do self.ports.swap |ports| {\n-            let mut p_ = none;\n-            p <-> p_;\n-            vec::append_one(ports, option::unwrap(p_))\n-        }\n+        vec::push(self.ports, port)\n     }\n \n     fn try_recv() -> option<T> {\n         let mut result = none;\n-        let mut done = false;\n+        while result == none && self.ports.len() > 0 {\n+            let i = pipes::wait_many(self.ports.map(|p| p.header()));\n+            // dereferencing an unsafe pointer nonsense to appease the\n+            // borrowchecker.\n+            alt unsafe {(*ptr::addr_of(self.ports[i])).try_recv()} {\n+              some(m) {\n+                result = some(move!{m});\n+              }\n+              none {\n+                // Remove this port.\n+                let mut ports = ~[];\n+                self.ports <-> ports;\n+                vec::consume(ports,\n+                             |j, x| if i != j { vec::push(self.ports, x) });\n+              }\n+            }\n+        }\n+/*        \n         while !done {\n             do self.ports.swap |ports| {\n                 if ports.len() > 0 {\n@@ -156,10 +166,22 @@ class port_set<T: send> {\n                 }\n             }\n         }\n+*/\n         result\n     }\n \n     fn recv() -> T {\n         option::unwrap(self.try_recv())\n     }\n }\n+\n+impl private_methods/&<T: send> for pipes::port<T> {\n+    pure fn header() -> *pipes::packet_header unchecked {\n+        alt self.endp {\n+          some(endp) {\n+            endp.header()\n+          }\n+          none { fail \"peeking empty stream\" }\n+        }\n+    }\n+}\n\\ No newline at end of file"}]}