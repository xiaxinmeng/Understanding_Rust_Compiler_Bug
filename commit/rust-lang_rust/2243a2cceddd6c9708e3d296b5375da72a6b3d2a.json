{"sha": "2243a2cceddd6c9708e3d296b5375da72a6b3d2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNDNhMmNjZWRkZDZjOTcwOGUzZDI5NmI1Mzc1ZGE3MmE2YjNkMmE=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-04-01T00:40:56Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-04-01T00:56:08Z"}, "message": "Unify handling of checking repeat-count validity.", "tree": {"sha": "b093f41638a1b98db202fed4b3c387352b70d7e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b093f41638a1b98db202fed4b3c387352b70d7e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2243a2cceddd6c9708e3d296b5375da72a6b3d2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2243a2cceddd6c9708e3d296b5375da72a6b3d2a", "html_url": "https://github.com/rust-lang/rust/commit/2243a2cceddd6c9708e3d296b5375da72a6b3d2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2243a2cceddd6c9708e3d296b5375da72a6b3d2a/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1973f7ebe5c67ef9ed57f7a64781d13868a70d3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1973f7ebe5c67ef9ed57f7a64781d13868a70d3d", "html_url": "https://github.com/rust-lang/rust/commit/1973f7ebe5c67ef9ed57f7a64781d13868a70d3d"}], "stats": {"total": 14, "additions": 1, "deletions": 13}, "files": [{"sha": "c32cb28ec78dbb9bbdbf83fced5510b615f2780e", "filename": "src/librustc_trans/trans/consts.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2243a2cceddd6c9708e3d296b5375da72a6b3d2a/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2243a2cceddd6c9708e3d296b5375da72a6b3d2a/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs?ref=2243a2cceddd6c9708e3d296b5375da72a6b3d2a", "patch": "@@ -772,19 +772,7 @@ fn const_expr_unadjusted<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n           ast::ExprRepeat(ref elem, ref count) => {\n             let unit_ty = ty::sequence_element_type(cx.tcx(), ety);\n             let llunitty = type_of::type_of(cx, unit_ty);\n-            let n = match const_eval::eval_const_expr_partial(cx.tcx(), &**count, None) {\n-                Ok(const_eval::const_int(i))  => i as usize,\n-                Ok(const_eval::const_uint(i)) => i as usize,\n-                Ok(_) => {\n-                    cx.sess().span_bug(count.span, \"count must be integral const expression.\")\n-                }\n-                Err(err) => {\n-                    cx.sess().span_err(count.span, &format!(\"error evaluating count: {}\",\n-                                                            err.description()));\n-                    // return 1 to allow compilation to proceed\n-                    1 as usize\n-                }\n-            };\n+            let n = ty::eval_repeat_count(cx.tcx(), count);\n             let unit_val = const_expr(cx, &**elem, param_substs).0;\n             let vs: Vec<_> = repeat(unit_val).take(n).collect();\n             if val_ty(unit_val) != llunitty {"}]}