{"sha": "6ad626fb5c79bbaafcf533780e30b03d73737c57", "node_id": "C_kwDOAAsO6NoAKDZhZDYyNmZiNWM3OWJiYWFmY2Y1MzM3ODBlMzBiMDNkNzM3MzdjNTc", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-10-26T22:24:45Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-11-15T02:14:54Z"}, "message": "Add regression test for issue 90320", "tree": {"sha": "6f4f7845c524320345fccb8228c87b19df9dfa45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f4f7845c524320345fccb8228c87b19df9dfa45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ad626fb5c79bbaafcf533780e30b03d73737c57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ad626fb5c79bbaafcf533780e30b03d73737c57", "html_url": "https://github.com/rust-lang/rust/commit/6ad626fb5c79bbaafcf533780e30b03d73737c57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ad626fb5c79bbaafcf533780e30b03d73737c57/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a207f23eb5570d10b98dcfa669c17d5ab94e8af", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a207f23eb5570d10b98dcfa669c17d5ab94e8af", "html_url": "https://github.com/rust-lang/rust/commit/6a207f23eb5570d10b98dcfa669c17d5ab94e8af"}], "stats": {"total": 77, "additions": 75, "deletions": 2}, "files": [{"sha": "04bc0b1a8ac4a1b11033eb3b00cf3c4474f935b8", "filename": "src/test/ui/inference/auxiliary/inference_unstable_iterator.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6ad626fb5c79bbaafcf533780e30b03d73737c57/src%2Ftest%2Fui%2Finference%2Fauxiliary%2Finference_unstable_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad626fb5c79bbaafcf533780e30b03d73737c57/src%2Ftest%2Fui%2Finference%2Fauxiliary%2Finference_unstable_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fauxiliary%2Finference_unstable_iterator.rs?ref=6ad626fb5c79bbaafcf533780e30b03d73737c57", "patch": "@@ -1,4 +1,5 @@\n #![feature(staged_api)]\n+#![feature(arbitrary_self_types)]\n \n #![stable(feature = \"ipu_iterator\", since = \"1.0.0\")]\n \n@@ -8,6 +9,22 @@ pub trait IpuIterator {\n     fn ipu_flatten(&self) -> u32 {\n         0\n     }\n+\n+    #[unstable(feature = \"ipu_flatten\", issue = \"99999\")]\n+    fn ipu_by_value_vs_by_ref(self) -> u32 where Self: Sized {\n+        0\n+    }\n+\n+    #[unstable(feature = \"ipu_flatten\", issue = \"99999\")]\n+    fn ipu_by_ref_vs_by_ref_mut(&self) -> u32 {\n+        0\n+    }\n+\n+    #[unstable(feature = \"ipu_flatten\", issue = \"99999\")]\n+    fn ipu_by_mut_ptr_vs_by_const_ptr(self: *mut Self) -> u32 {\n+        0\n+    }\n+\n     #[unstable(feature = \"assoc_const_ipu_iter\", issue = \"99999\")]\n     const C: i32;\n }"}, {"sha": "fa1efbcfefc5d926b55381e2bb28b3a557a9ce2f", "filename": "src/test/ui/inference/auxiliary/inference_unstable_itertools.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6ad626fb5c79bbaafcf533780e30b03d73737c57/src%2Ftest%2Fui%2Finference%2Fauxiliary%2Finference_unstable_itertools.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad626fb5c79bbaafcf533780e30b03d73737c57/src%2Ftest%2Fui%2Finference%2Fauxiliary%2Finference_unstable_itertools.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fauxiliary%2Finference_unstable_itertools.rs?ref=6ad626fb5c79bbaafcf533780e30b03d73737c57", "patch": "@@ -1,8 +1,22 @@\n+#![feature(arbitrary_self_types)]\n+\n pub trait IpuItertools {\n     fn ipu_flatten(&self) -> u32 {\n         1\n     }\n \n+    fn ipu_by_value_vs_by_ref(&self) -> u32 {\n+        1\n+    }\n+\n+    fn ipu_by_ref_vs_by_ref_mut(&mut self) -> u32 {\n+        1\n+    }\n+\n+    fn ipu_by_mut_ptr_vs_by_const_ptr(self: *const Self) -> u32 {\n+        1\n+    }\n+\n     const C: i32;\n }\n "}, {"sha": "daf0cf042c40234b40fbe83f84c40ff22ff55d4b", "filename": "src/test/ui/inference/inference_unstable.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6ad626fb5c79bbaafcf533780e30b03d73737c57/src%2Ftest%2Fui%2Finference%2Finference_unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad626fb5c79bbaafcf533780e30b03d73737c57/src%2Ftest%2Fui%2Finference%2Finference_unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Finference_unstable.rs?ref=6ad626fb5c79bbaafcf533780e30b03d73737c57", "patch": "@@ -15,6 +15,15 @@ use inference_unstable_itertools::IpuItertools;\n fn main() {\n     assert_eq!('x'.ipu_flatten(), 1);\n //~^ WARN an associated function with this name may be added to the standard library in the future\n+//~| WARN once this associated item is added to the standard library, the ambiguity may cause an\n+    assert_eq!('x'.ipu_by_value_vs_by_ref(), 1);\n+//~^ WARN an associated function with this name may be added to the standard library in the future\n+//~| WARN once this associated item is added to the standard library, the ambiguity may cause an\n+    assert_eq!('x'.ipu_by_ref_vs_by_ref_mut(), 1);\n+//~^ WARN an associated function with this name may be added to the standard library in the future\n+//~| WARN once this associated item is added to the standard library, the ambiguity may cause an\n+    assert_eq!((&mut 'x' as *mut char).ipu_by_mut_ptr_vs_by_const_ptr(), 1);\n+//~^ WARN an associated function with this name may be added to the standard library in the future\n //~| WARN once this associated item is added to the standard library, the ambiguity may cause an\n     assert_eq!(char::C, 1);\n //~^ WARN an associated constant with this name may be added to the standard library in the future"}, {"sha": "df7a09686bf8501d8500c6a2bd6e0ac6d03bc308", "filename": "src/test/ui/inference/inference_unstable.stderr", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/6ad626fb5c79bbaafcf533780e30b03d73737c57/src%2Ftest%2Fui%2Finference%2Finference_unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ad626fb5c79bbaafcf533780e30b03d73737c57/src%2Ftest%2Fui%2Finference%2Finference_unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Finference_unstable.stderr?ref=6ad626fb5c79bbaafcf533780e30b03d73737c57", "patch": "@@ -10,8 +10,41 @@ LL |     assert_eq!('x'.ipu_flatten(), 1);\n    = help: call with fully qualified syntax `inference_unstable_itertools::IpuItertools::ipu_flatten(...)` to keep using the current method\n    = help: add `#![feature(ipu_flatten)]` to the crate attributes to enable `inference_unstable_iterator::IpuIterator::ipu_flatten`\n \n+warning: an associated function with this name may be added to the standard library in the future\n+  --> $DIR/inference_unstable.rs:19:20\n+   |\n+LL |     assert_eq!('x'.ipu_by_value_vs_by_ref(), 1);\n+   |                    ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: once this associated item is added to the standard library, the ambiguity may cause an error or change in behavior!\n+   = note: for more information, see issue #48919 <https://github.com/rust-lang/rust/issues/48919>\n+   = help: call with fully qualified syntax `inference_unstable_itertools::IpuItertools::ipu_by_value_vs_by_ref(...)` to keep using the current method\n+   = help: add `#![feature(ipu_flatten)]` to the crate attributes to enable `inference_unstable_iterator::IpuIterator::ipu_by_value_vs_by_ref`\n+\n+warning: an associated function with this name may be added to the standard library in the future\n+  --> $DIR/inference_unstable.rs:22:20\n+   |\n+LL |     assert_eq!('x'.ipu_by_ref_vs_by_ref_mut(), 1);\n+   |                    ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: once this associated item is added to the standard library, the ambiguity may cause an error or change in behavior!\n+   = note: for more information, see issue #48919 <https://github.com/rust-lang/rust/issues/48919>\n+   = help: call with fully qualified syntax `inference_unstable_itertools::IpuItertools::ipu_by_ref_vs_by_ref_mut(...)` to keep using the current method\n+   = help: add `#![feature(ipu_flatten)]` to the crate attributes to enable `inference_unstable_iterator::IpuIterator::ipu_by_ref_vs_by_ref_mut`\n+\n+warning: an associated function with this name may be added to the standard library in the future\n+  --> $DIR/inference_unstable.rs:25:40\n+   |\n+LL |     assert_eq!((&mut 'x' as *mut char).ipu_by_mut_ptr_vs_by_const_ptr(), 1);\n+   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: once this associated item is added to the standard library, the ambiguity may cause an error or change in behavior!\n+   = note: for more information, see issue #48919 <https://github.com/rust-lang/rust/issues/48919>\n+   = help: call with fully qualified syntax `inference_unstable_itertools::IpuItertools::ipu_by_mut_ptr_vs_by_const_ptr(...)` to keep using the current method\n+   = help: add `#![feature(ipu_flatten)]` to the crate attributes to enable `inference_unstable_iterator::IpuIterator::ipu_by_mut_ptr_vs_by_const_ptr`\n+\n warning: an associated constant with this name may be added to the standard library in the future\n-  --> $DIR/inference_unstable.rs:19:16\n+  --> $DIR/inference_unstable.rs:28:16\n    |\n LL |     assert_eq!(char::C, 1);\n    |                ^^^^^^^ help: use the fully qualified path to the associated const: `<char as IpuItertools>::C`\n@@ -20,5 +53,5 @@ LL |     assert_eq!(char::C, 1);\n    = note: for more information, see issue #48919 <https://github.com/rust-lang/rust/issues/48919>\n    = help: add `#![feature(assoc_const_ipu_iter)]` to the crate attributes to enable `inference_unstable_iterator::IpuIterator::C`\n \n-warning: 2 warnings emitted\n+warning: 5 warnings emitted\n "}]}