{"sha": "8e34c0fb736837a766029613382a3bf295e1157f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlMzRjMGZiNzM2ODM3YTc2NjAyOTYxMzM4MmEzYmYyOTVlMTE1N2Y=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-09-29T18:46:36Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-09-29T18:49:48Z"}, "message": "More panic_context", "tree": {"sha": "3e533d158bb8954c46c5e1a7dcd4ba03ba044c0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e533d158bb8954c46c5e1a7dcd4ba03ba044c0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e34c0fb736837a766029613382a3bf295e1157f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e34c0fb736837a766029613382a3bf295e1157f", "html_url": "https://github.com/rust-lang/rust/commit/8e34c0fb736837a766029613382a3bf295e1157f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e34c0fb736837a766029613382a3bf295e1157f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3a2b21a8c34c7b7eea0a001a1412992e3ed2cb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3a2b21a8c34c7b7eea0a001a1412992e3ed2cb7", "html_url": "https://github.com/rust-lang/rust/commit/d3a2b21a8c34c7b7eea0a001a1412992e3ed2cb7"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "9c8815e29e8875d14b5f7bd4bc833ee84e412076", "filename": "crates/rust-analyzer/src/dispatch.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e34c0fb736837a766029613382a3bf295e1157f/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e34c0fb736837a766029613382a3bf295e1157f/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs?ref=8e34c0fb736837a766029613382a3bf295e1157f", "patch": "@@ -23,7 +23,7 @@ impl<'a> RequestDispatcher<'a> {\n     ) -> Result<&mut Self>\n     where\n         R: lsp_types::request::Request + 'static,\n-        R::Params: DeserializeOwned + panic::UnwindSafe + 'static,\n+        R::Params: DeserializeOwned + panic::UnwindSafe + fmt::Debug + 'static,\n         R::Result: Serialize + 'static,\n     {\n         let (id, params) = match self.parse::<R>() {\n@@ -34,6 +34,7 @@ impl<'a> RequestDispatcher<'a> {\n         };\n         let world = panic::AssertUnwindSafe(&mut *self.global_state);\n         let response = panic::catch_unwind(move || {\n+            stdx::panic_context::enter(format!(\"request: {} {:#?}\", R::METHOD, params));\n             let result = f(world.0, params);\n             result_to_response::<R>(id, result)\n         })\n@@ -159,6 +160,7 @@ impl<'a> NotificationDispatcher<'a> {\n                 return Ok(self);\n             }\n         };\n+        stdx::panic_context::enter(format!(\"notification: {}\", N::METHOD));\n         f(self.global_state, params)?;\n         Ok(self)\n     }"}]}