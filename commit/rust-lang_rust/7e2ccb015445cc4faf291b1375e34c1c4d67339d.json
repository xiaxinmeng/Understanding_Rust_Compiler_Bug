{"sha": "7e2ccb015445cc4faf291b1375e34c1c4d67339d", "node_id": "C_kwDOAAsO6NoAKDdlMmNjYjAxNTQ0NWNjNGZhZjI5MWIxMzc1ZTM0YzFjNGQ2NzMzOWQ", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-10-13T20:20:10Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-01-07T22:55:34Z"}, "message": "Remove region from UpvarCapture and move it to CapturedPlace\n\nRegion info is completely unnecessary for upvar capture kind computation\nand is only needed to create the final upvar tuple ty. Doing so makes\ncreation of UpvarCapture very cheap and expose further cleanup opportunity.", "tree": {"sha": "512b3b3b9b2b17ea4169b15461365eadc8e69782", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/512b3b3b9b2b17ea4169b15461365eadc8e69782"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e2ccb015445cc4faf291b1375e34c1c4d67339d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e2ccb015445cc4faf291b1375e34c1c4d67339d", "html_url": "https://github.com/rust-lang/rust/commit/7e2ccb015445cc4faf291b1375e34c1c4d67339d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e2ccb015445cc4faf291b1375e34c1c4d67339d/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "356b0246d9a884febc89049b85c07eb678658b95", "url": "https://api.github.com/repos/rust-lang/rust/commits/356b0246d9a884febc89049b85c07eb678658b95", "html_url": "https://github.com/rust-lang/rust/commit/356b0246d9a884febc89049b85c07eb678658b95"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2a06cf121ff01c43d7f98056338d13e9e5ee2828", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e2ccb015445cc4faf291b1375e34c1c4d67339d/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e2ccb015445cc4faf291b1375e34c1c4d67339d/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=7e2ccb015445cc4faf291b1375e34c1c4d67339d", "patch": "@@ -970,7 +970,7 @@ pub fn can_move_expr_to_closure(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) ->\n                         if !self.locals.contains(&local_id) {\n                             let capture = match capture.info.capture_kind {\n                                 UpvarCapture::ByValue => CaptureKind::Value,\n-                                UpvarCapture::ByRef(borrow) => match borrow.kind {\n+                                UpvarCapture::ByRef(kind) => match kind {\n                                     BorrowKind::ImmBorrow => CaptureKind::Ref(Mutability::Not),\n                                     BorrowKind::UniqueImmBorrow | BorrowKind::MutBorrow => {\n                                         CaptureKind::Ref(Mutability::Mut)"}]}