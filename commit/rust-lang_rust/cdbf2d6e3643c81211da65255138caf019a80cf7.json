{"sha": "cdbf2d6e3643c81211da65255138caf019a80cf7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkYmYyZDZlMzY0M2M4MTIxMWRhNjUyNTUxMzhjYWYwMTlhODBjZjc=", "commit": {"author": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2016-01-07T10:58:08Z"}, "committer": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2016-01-07T15:12:38Z"}, "message": "Move os_str docs to OsString in order to be visible in HTML (fixes #30743)", "tree": {"sha": "94885593f476fa623b57e6aca2b47f773a67cdf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94885593f476fa623b57e6aca2b47f773a67cdf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdbf2d6e3643c81211da65255138caf019a80cf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdbf2d6e3643c81211da65255138caf019a80cf7", "html_url": "https://github.com/rust-lang/rust/commit/cdbf2d6e3643c81211da65255138caf019a80cf7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdbf2d6e3643c81211da65255138caf019a80cf7/comments", "author": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2edb1d9b96bdf78ee06b73d37f1382a30bc67882", "url": "https://api.github.com/repos/rust-lang/rust/commits/2edb1d9b96bdf78ee06b73d37f1382a30bc67882", "html_url": "https://github.com/rust-lang/rust/commit/2edb1d9b96bdf78ee06b73d37f1382a30bc67882"}], "stats": {"total": 40, "additions": 17, "deletions": 23}, "files": [{"sha": "eb5ddecbd054d090700585fc3c9ef971efeaf893", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 17, "deletions": 23, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/cdbf2d6e3643c81211da65255138caf019a80cf7/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdbf2d6e3643c81211da65255138caf019a80cf7/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=cdbf2d6e3643c81211da65255138caf019a80cf7", "patch": "@@ -8,27 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! A type that can represent all platform-native strings, but is cheaply\n-//! interconvertable with Rust strings.\n-//!\n-//! The need for this type arises from the fact that:\n-//!\n-//! * On Unix systems, strings are often arbitrary sequences of non-zero\n-//!   bytes, in many cases interpreted as UTF-8.\n-//!\n-//! * On Windows, strings are often arbitrary sequences of non-zero 16-bit\n-//!   values, interpreted as UTF-16 when it is valid to do so.\n-//!\n-//! * In Rust, strings are always valid UTF-8, but may contain zeros.\n-//!\n-//! The types in this module bridge this gap by simultaneously representing Rust\n-//! and platform-native string values, and in particular allowing a Rust string\n-//! to be converted into an \"OS\" string with no cost.\n-//!\n-//! **Note**: At the moment, these types are extremely bare-bones, usable only\n-//! for conversion to/from various other string types. Eventually these types\n-//! will offer a full-fledged string API.\n-\n use borrow::{Borrow, Cow, ToOwned};\n use ffi::CString;\n use fmt::{self, Debug};\n@@ -42,14 +21,29 @@ use vec::Vec;\n use sys::os_str::{Buf, Slice};\n use sys_common::{AsInner, IntoInner, FromInner};\n \n-/// Owned, mutable OS strings.\n+/// A type that can represent owned, mutable platform-native strings, but is\n+/// cheaply interconvertable with Rust strings.\n+///\n+/// The need for this type arises from the fact that:\n+///\n+/// * On Unix systems, strings are often arbitrary sequences of non-zero\n+///   bytes, in many cases interpreted as UTF-8.\n+///\n+/// * On Windows, strings are often arbitrary sequences of non-zero 16-bit\n+///   values, interpreted as UTF-16 when it is valid to do so.\n+///\n+/// * In Rust, strings are always valid UTF-8, but may contain zeros.\n+///\n+/// `OsString` and `OsStr` bridge this gap by simultaneously representing Rust\n+/// and platform-native string values, and in particular allowing a Rust string\n+/// to be converted into an \"OS\" string with no cost.\n #[derive(Clone)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct OsString {\n     inner: Buf\n }\n \n-/// Slices into OS strings.\n+/// Slices into OS strings (see `OsString`).\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct OsStr {\n     inner: Slice"}]}