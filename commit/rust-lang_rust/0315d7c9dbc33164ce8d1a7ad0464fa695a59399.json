{"sha": "0315d7c9dbc33164ce8d1a7ad0464fa695a59399", "node_id": "C_kwDOAAsO6NoAKDAzMTVkN2M5ZGJjMzMxNjRjZThkMWE3YWQwNDY0ZmE2OTVhNTkzOTk", "commit": {"author": {"name": "rdvdev2", "email": "rdvdev2@gmail.com", "date": "2022-09-02T02:54:42Z"}, "committer": {"name": "Nathan Stocks", "email": "cleancut@github.com", "date": "2022-10-07T19:19:27Z"}, "message": "Migrate derivable diagnostics in check_attr.rs", "tree": {"sha": "89e4a92b16809103bb92a56a9cef671cd9a0e054", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89e4a92b16809103bb92a56a9cef671cd9a0e054"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0315d7c9dbc33164ce8d1a7ad0464fa695a59399", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0315d7c9dbc33164ce8d1a7ad0464fa695a59399", "html_url": "https://github.com/rust-lang/rust/commit/0315d7c9dbc33164ce8d1a7ad0464fa695a59399", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0315d7c9dbc33164ce8d1a7ad0464fa695a59399/comments", "author": {"login": "rdvdev2", "id": 33713918, "node_id": "MDQ6VXNlcjMzNzEzOTE4", "avatar_url": "https://avatars.githubusercontent.com/u/33713918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdvdev2", "html_url": "https://github.com/rdvdev2", "followers_url": "https://api.github.com/users/rdvdev2/followers", "following_url": "https://api.github.com/users/rdvdev2/following{/other_user}", "gists_url": "https://api.github.com/users/rdvdev2/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdvdev2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdvdev2/subscriptions", "organizations_url": "https://api.github.com/users/rdvdev2/orgs", "repos_url": "https://api.github.com/users/rdvdev2/repos", "events_url": "https://api.github.com/users/rdvdev2/events{/privacy}", "received_events_url": "https://api.github.com/users/rdvdev2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CleanCut", "id": 5838512, "node_id": "MDQ6VXNlcjU4Mzg1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5838512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CleanCut", "html_url": "https://github.com/CleanCut", "followers_url": "https://api.github.com/users/CleanCut/followers", "following_url": "https://api.github.com/users/CleanCut/following{/other_user}", "gists_url": "https://api.github.com/users/CleanCut/gists{/gist_id}", "starred_url": "https://api.github.com/users/CleanCut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CleanCut/subscriptions", "organizations_url": "https://api.github.com/users/CleanCut/orgs", "repos_url": "https://api.github.com/users/CleanCut/repos", "events_url": "https://api.github.com/users/CleanCut/events{/privacy}", "received_events_url": "https://api.github.com/users/CleanCut/received_events", "type": "User", "site_admin": true}, "parents": [{"sha": "17a4a68ab0ffa0e8736d5ccf71f6e56794a0320a", "url": "https://api.github.com/repos/rust-lang/rust/commits/17a4a68ab0ffa0e8736d5ccf71f6e56794a0320a", "html_url": "https://github.com/rust-lang/rust/commit/17a4a68ab0ffa0e8736d5ccf71f6e56794a0320a"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "9a3ea51c778dfcf036d9ce1727728c4d9a9042e1", "filename": "compiler/rustc_error_messages/locales/en-US/passes.ftl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0315d7c9dbc33164ce8d1a7ad0464fa695a59399/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fpasses.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/0315d7c9dbc33164ce8d1a7ad0464fa695a59399/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fpasses.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fpasses.ftl?ref=0315d7c9dbc33164ce8d1a7ad0464fa695a59399", "patch": "@@ -217,6 +217,8 @@ passes_debug_visualizer_invalid = invalid argument\n     .note_2 = OR\n     .note_3 = expected: `gdb_script_file = \"...\"`\n \n+passes_debug_visualizer_unreadable = couldn't read {$file}: {$error}\n+\n passes_rustc_allow_const_fn_unstable = attribute should be applied to `const fn`\n     .label = not a `const fn`\n "}, {"sha": "864ce751588f14f530b1d6f7ee94a0e4a824e8f8", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0315d7c9dbc33164ce8d1a7ad0464fa695a59399/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0315d7c9dbc33164ce8d1a7ad0464fa695a59399/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=0315d7c9dbc33164ce8d1a7ad0464fa695a59399", "patch": "@@ -4,7 +4,7 @@\n //! conflicts between multiple such attributes attached to the same\n //! item.\n \n-use crate::errors;\n+use crate::errors::{self, DebugVisualizerUnreadable};\n use rustc_ast::{ast, AttrStyle, Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{fluent, struct_span_err, Applicability, MultiSpan};\n@@ -1863,13 +1863,11 @@ impl CheckAttrVisitor<'_> {\n         match std::fs::File::open(&file) {\n             Ok(_) => true,\n             Err(err) => {\n-                self.tcx\n-                    .sess\n-                    .struct_span_err(\n-                        meta_item.span,\n-                        &format!(\"couldn't read {}: {}\", file.display(), err),\n-                    )\n-                    .emit();\n+                self.tcx.sess.emit_err(DebugVisualizerUnreadable {\n+                    span: meta_item.span,\n+                    file: &file,\n+                    error: err,\n+                } );\n                 false\n             }\n         }"}, {"sha": "5730e9db6668559637daad60336f792944a0fa39", "filename": "compiler/rustc_passes/src/errors.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0315d7c9dbc33164ce8d1a7ad0464fa695a59399/compiler%2Frustc_passes%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0315d7c9dbc33164ce8d1a7ad0464fa695a59399/compiler%2Frustc_passes%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Ferrors.rs?ref=0315d7c9dbc33164ce8d1a7ad0464fa695a59399", "patch": "@@ -1,3 +1,5 @@\n+use std::{io::Error, path::Path};\n+\n use rustc_errors::{Applicability, MultiSpan};\n use rustc_hir::Target;\n use rustc_macros::{Diagnostic, LintDiagnostic, Subdiagnostic};\n@@ -527,6 +529,15 @@ pub struct DebugVisualizerInvalid {\n     pub span: Span,\n }\n \n+#[derive(Diagnostic)]\n+#[diag(passes::debug_visualizer_unreadable)]\n+pub struct DebugVisualizerUnreadable<'a> {\n+    #[primary_span]\n+    pub span: Span,\n+    pub file: &'a Path,\n+    pub error: Error,\n+}\n+\n #[derive(Diagnostic)]\n #[diag(passes::rustc_allow_const_fn_unstable)]\n pub struct RustcAllowConstFnUnstable {"}]}