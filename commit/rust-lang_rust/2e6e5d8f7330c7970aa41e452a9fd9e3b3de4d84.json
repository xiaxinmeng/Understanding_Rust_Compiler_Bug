{"sha": "2e6e5d8f7330c7970aa41e452a9fd9e3b3de4d84", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNmU1ZDhmNzMzMGM3OTcwYWE0MWU0NTJhOWZkOWUzYjNkZTRkODQ=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-11-06T01:17:34Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-11-06T01:17:34Z"}, "message": "Ignore unit expressions in infer_function_return_type assist", "tree": {"sha": "0119f1648ed86b1ab324814b64e09011697baba3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0119f1648ed86b1ab324814b64e09011697baba3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e6e5d8f7330c7970aa41e452a9fd9e3b3de4d84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e6e5d8f7330c7970aa41e452a9fd9e3b3de4d84", "html_url": "https://github.com/rust-lang/rust/commit/2e6e5d8f7330c7970aa41e452a9fd9e3b3de4d84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e6e5d8f7330c7970aa41e452a9fd9e3b3de4d84/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a7c8512ffec9b6cf695f546ac5f4f297c92fa53", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a7c8512ffec9b6cf695f546ac5f4f297c92fa53", "html_url": "https://github.com/rust-lang/rust/commit/0a7c8512ffec9b6cf695f546ac5f4f297c92fa53"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "81217378a8faf5b025ead8f62ffe7ff557974365", "filename": "crates/assists/src/handlers/infer_function_return_type.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2e6e5d8f7330c7970aa41e452a9fd9e3b3de4d84/crates%2Fassists%2Fsrc%2Fhandlers%2Finfer_function_return_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e6e5d8f7330c7970aa41e452a9fd9e3b3de4d84/crates%2Fassists%2Fsrc%2Fhandlers%2Finfer_function_return_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Finfer_function_return_type.rs?ref=2e6e5d8f7330c7970aa41e452a9fd9e3b3de4d84", "patch": "@@ -18,9 +18,9 @@ use crate::{AssistContext, AssistId, AssistKind, Assists};\n // ```\n pub(crate) fn infer_function_return_type(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n     let expr = ctx.find_node_at_offset::<ast::Expr>()?;\n-    let (tail_expr, insert_pos) = extract(expr)?;\n+    let (tail_expr, insert_pos) = extract_tail(expr)?;\n     let module = ctx.sema.scope(tail_expr.syntax()).module()?;\n-    let ty = ctx.sema.type_of_expr(&tail_expr)?;\n+    let ty = ctx.sema.type_of_expr(&tail_expr).filter(|ty| !ty.is_unit())?;\n     let ty = ty.display_source_code(ctx.db(), module.into()).ok()?;\n \n     acc.add(\n@@ -34,7 +34,7 @@ pub(crate) fn infer_function_return_type(acc: &mut Assists, ctx: &AssistContext)\n     )\n }\n \n-fn extract(expr: ast::Expr) -> Option<(ast::Expr, SyntaxToken)> {\n+fn extract_tail(expr: ast::Expr) -> Option<(ast::Expr, SyntaxToken)> {\n     let (ret_ty, tail_expr, insert_pos) =\n         if let Some(closure) = expr.syntax().ancestors().find_map(ast::ClosureExpr::cast) {\n             let tail_expr = match closure.body()? {\n@@ -127,6 +127,16 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn not_applicable_unit_return_type() {\n+        check_assist_not_applicable(\n+            infer_function_return_type,\n+            r#\"fn foo() {\n+                (<|>)\n+            }\"#,\n+        );\n+    }\n+\n     #[test]\n     fn infer_return_type_closure_block() {\n         check_assist("}]}