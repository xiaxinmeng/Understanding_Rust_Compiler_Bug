{"sha": "6b413d95fc3035fff80c0388049d5b7c178a3c59", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiNDEzZDk1ZmMzMDM1ZmZmODBjMDM4ODA0OWQ1YjdjMTc4YTNjNTk=", "commit": {"author": {"name": "jumbatm", "email": "jumbatm@gmail.com", "date": "2020-04-28T23:41:01Z"}, "committer": {"name": "jumbatm", "email": "jumbatm@gmail.com", "date": "2020-05-01T11:52:43Z"}, "message": "Throw validation failure for InvalidUndefBytes.", "tree": {"sha": "aea845d983ef9473ac7d0163330354f833c7695e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aea845d983ef9473ac7d0163330354f833c7695e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b413d95fc3035fff80c0388049d5b7c178a3c59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b413d95fc3035fff80c0388049d5b7c178a3c59", "html_url": "https://github.com/rust-lang/rust/commit/6b413d95fc3035fff80c0388049d5b7c178a3c59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b413d95fc3035fff80c0388049d5b7c178a3c59/comments", "author": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc7b7140b9a5ea4e764c9f53a915d26baa4326be", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc7b7140b9a5ea4e764c9f53a915d26baa4326be", "html_url": "https://github.com/rust-lang/rust/commit/bc7b7140b9a5ea4e764c9f53a915d26baa4326be"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "ab440cc5ebab80e8caddc200cd170ba5ab2a364d", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6b413d95fc3035fff80c0388049d5b7c178a3c59/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b413d95fc3035fff80c0388049d5b7c178a3c59/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=6b413d95fc3035fff80c0388049d5b7c178a3c59", "patch": "@@ -11,6 +11,7 @@ use std::ops::RangeInclusive;\n \n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n+use rustc_middle::mir::interpret::{InterpError, InterpErrorInfo};\n use rustc_middle::ty;\n use rustc_middle::ty::layout::TyAndLayout;\n use rustc_span::symbol::{sym, Symbol};\n@@ -492,7 +493,7 @@ impl<'rt, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> ValidityVisitor<'rt, 'mir, '\n                 // that lets us re-use `ref_to_mplace`).\n                 let place = try_validation_pat!(\n                     self.ecx.ref_to_mplace(self.ecx.read_immediate(value)?),\n-                    _,\n+                    InterpErrorInfo { kind: err_ub!(InvalidUndefBytes(..)), ..},\n                     \"uninitialized raw pointer\",\n                     self.path\n                 );"}]}