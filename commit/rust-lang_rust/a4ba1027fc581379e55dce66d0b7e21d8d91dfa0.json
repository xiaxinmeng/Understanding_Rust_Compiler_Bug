{"sha": "a4ba1027fc581379e55dce66d0b7e21d8d91dfa0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0YmExMDI3ZmM1ODEzNzllNTVkY2U2NmQwYjdlMjFkOGQ5MWRmYTA=", "commit": {"author": {"name": "Jacob Meyers", "email": "jacobmeyers065@gmail.com", "date": "2020-03-10T09:41:24Z"}, "committer": {"name": "Jacob Meyers", "email": "jacobmeyers065@gmail.com", "date": "2020-03-10T22:00:37Z"}, "message": "add CR feedback", "tree": {"sha": "974f028f0a22cfa2aa882979f36cc977a901883f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/974f028f0a22cfa2aa882979f36cc977a901883f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4ba1027fc581379e55dce66d0b7e21d8d91dfa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4ba1027fc581379e55dce66d0b7e21d8d91dfa0", "html_url": "https://github.com/rust-lang/rust/commit/a4ba1027fc581379e55dce66d0b7e21d8d91dfa0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4ba1027fc581379e55dce66d0b7e21d8d91dfa0/comments", "author": {"login": "jmeyers35", "id": 23438712, "node_id": "MDQ6VXNlcjIzNDM4NzEy", "avatar_url": "https://avatars.githubusercontent.com/u/23438712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmeyers35", "html_url": "https://github.com/jmeyers35", "followers_url": "https://api.github.com/users/jmeyers35/followers", "following_url": "https://api.github.com/users/jmeyers35/following{/other_user}", "gists_url": "https://api.github.com/users/jmeyers35/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmeyers35/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmeyers35/subscriptions", "organizations_url": "https://api.github.com/users/jmeyers35/orgs", "repos_url": "https://api.github.com/users/jmeyers35/repos", "events_url": "https://api.github.com/users/jmeyers35/events{/privacy}", "received_events_url": "https://api.github.com/users/jmeyers35/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jmeyers35", "id": 23438712, "node_id": "MDQ6VXNlcjIzNDM4NzEy", "avatar_url": "https://avatars.githubusercontent.com/u/23438712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmeyers35", "html_url": "https://github.com/jmeyers35", "followers_url": "https://api.github.com/users/jmeyers35/followers", "following_url": "https://api.github.com/users/jmeyers35/following{/other_user}", "gists_url": "https://api.github.com/users/jmeyers35/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmeyers35/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmeyers35/subscriptions", "organizations_url": "https://api.github.com/users/jmeyers35/orgs", "repos_url": "https://api.github.com/users/jmeyers35/repos", "events_url": "https://api.github.com/users/jmeyers35/events{/privacy}", "received_events_url": "https://api.github.com/users/jmeyers35/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f7f30711e4eb2f5f84fe198f325e512e404ee0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f7f30711e4eb2f5f84fe198f325e512e404ee0c", "html_url": "https://github.com/rust-lang/rust/commit/0f7f30711e4eb2f5f84fe198f325e512e404ee0c"}], "stats": {"total": 41, "additions": 20, "deletions": 21}, "files": [{"sha": "37885317c58e095b38388e6f0bb3f55c8175347f", "filename": "clippy_lints/src/verbose_file_reads.rs", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a4ba1027fc581379e55dce66d0b7e21d8d91dfa0/clippy_lints%2Fsrc%2Fverbose_file_reads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4ba1027fc581379e55dce66d0b7e21d8d91dfa0/clippy_lints%2Fsrc%2Fverbose_file_reads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fverbose_file_reads.rs?ref=a4ba1027fc581379e55dce66d0b7e21d8d91dfa0", "patch": "@@ -8,19 +8,22 @@ declare_clippy_lint! {\n     /// **What it does:** Checks for use of File::read_to_end and File::read_to_string.\n     ///\n     /// **Why is this bad?** `fs::{read, read_to_string}` provide the same functionality when `buf` is empty with fewer imports and no intermediate values.\n-    ///\n+    /// See also: [fs::read docs](https://doc.rust-lang.org/std/fs/fn.read.html), [fs::read_to_string docs](https://doc.rust-lang.org/std/fs/fn.read_to_string.html)\n     /// **Known problems:** None.\n     ///\n     /// **Example:**\n     ///\n-    /// ```rust, ignore\n-    /// let mut f = File::open(\"foo.txt\")?;\n+    /// ```rust,no_run\n+    /// # use std::io::Read;\n+    /// # use std::fs::File;\n+    /// let mut f = File::open(\"foo.txt\").unwrap();\n     /// let mut bytes = Vec::new();\n-    /// f.read_to_end(&mut bytes)?;\n+    /// f.read_to_end(&mut bytes).unwrap();\n     /// ```\n     /// Can be written more concisely as\n-    /// ```rust, ignore\n-    /// let mut bytes = fs::read(\"foo.txt\")?;\n+    /// ```rust,no_run\n+    /// # use std::fs;\n+    /// let mut bytes = fs::read(\"foo.txt\").unwrap();\n     /// ```\n     pub VERBOSE_FILE_READS,\n     complexity,\n@@ -36,19 +39,17 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for VerboseFileReads {\n                 cx,\n                 VERBOSE_FILE_READS,\n                 expr.span,\n-                \"use of File::read_to_end\",\n-                \"consider using fs::read instead\",\n+                \"use of `File::read_to_end`\",\n+                \"consider using `fs::read` instead\",\n             );\n         } else if is_file_read_to_string(cx, expr) {\n             span_lint_and_help(\n                 cx,\n                 VERBOSE_FILE_READS,\n                 expr.span,\n-                \"use of File::read_to_string\",\n-                \"consider using fs::read_to_string instead\",\n+                \"use of `File::read_to_string`\",\n+                \"consider using `fs::read_to_string` instead\",\n             )\n-        } else {\n-            // Don't care\n         }\n     }\n }"}, {"sha": "e0065e05ade62d31ba9c21f7fe8b75f2b368d973", "filename": "tests/ui/verbose_file_reads.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a4ba1027fc581379e55dce66d0b7e21d8d91dfa0/tests%2Fui%2Fverbose_file_reads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4ba1027fc581379e55dce66d0b7e21d8d91dfa0/tests%2Fui%2Fverbose_file_reads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fverbose_file_reads.rs?ref=a4ba1027fc581379e55dce66d0b7e21d8d91dfa0", "patch": "@@ -12,9 +12,7 @@ impl Struct {\n }\n \n fn main() -> std::io::Result<()> {\n-    let mut path = temp_dir();\n-    path.push(\"test.txt\");\n-    let file = File::create(&path)?;\n+    let path = \"foo.txt\";\n     // Lint shouldn't catch this\n     let s = Struct;\n     s.read_to_end();"}, {"sha": "550b6ab679f19c7ec09a3aa505a6e20713304c4d", "filename": "tests/ui/verbose_file_reads.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a4ba1027fc581379e55dce66d0b7e21d8d91dfa0/tests%2Fui%2Fverbose_file_reads.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a4ba1027fc581379e55dce66d0b7e21d8d91dfa0/tests%2Fui%2Fverbose_file_reads.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fverbose_file_reads.stderr?ref=a4ba1027fc581379e55dce66d0b7e21d8d91dfa0", "patch": "@@ -1,19 +1,19 @@\n-error: use of File::read_to_end\n-  --> $DIR/verbose_file_reads.rs:25:5\n+error: use of `File::read_to_end`\n+  --> $DIR/verbose_file_reads.rs:23:5\n    |\n LL |     f.read_to_end(&mut buffer)?;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::verbose-file-reads` implied by `-D warnings`\n-   = help: consider using fs::read instead\n+   = help: consider using `fs::read` instead\n \n-error: use of File::read_to_string\n-  --> $DIR/verbose_file_reads.rs:28:5\n+error: use of `File::read_to_string`\n+  --> $DIR/verbose_file_reads.rs:26:5\n    |\n LL |     f.read_to_string(&mut string_buffer)?;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: consider using fs::read_to_string instead\n+   = help: consider using `fs::read_to_string` instead\n \n error: aborting due to 2 previous errors\n "}]}