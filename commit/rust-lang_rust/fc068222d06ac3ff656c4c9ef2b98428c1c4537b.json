{"sha": "fc068222d06ac3ff656c4c9ef2b98428c1c4537b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjMDY4MjIyZDA2YWMzZmY2NTZjNGM5ZWYyYjk4NDI4YzFjNDUzN2I=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-08T21:31:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-08T21:31:19Z"}, "message": "Rollup merge of #64284 - Mark-Simulacrum:include-warn, r=petrochenkov\n\nWarn if include macro fails to include entire file\n\nThis currently introduces an error, mainly because that was just simpler, and I'm not entirely certain if we can introduce a lint without an RFC and such.\n\nThis is primarily to get feedback on the approach and overall aim -- in particular, do we think this is helpful? If so, we probably will need lang-team sign off and decide if it should be an error (as currently introduced by this PR), a lint, or a warning.\n\nr? @petrochenkov\n\ncc https://github.com/rust-lang/rust/issues/35560", "tree": {"sha": "549c8b1517f37a1fb2c80cd8786404a5bad1d6bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/549c8b1517f37a1fb2c80cd8786404a5bad1d6bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc068222d06ac3ff656c4c9ef2b98428c1c4537b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdnQAnCRBK7hj4Ov3rIwAAdHIIAAtZlVqw9y4/6LRvcLpbXlKE\nMzEGRaKnweB3W6WANLwJDR2lKqLle/pXB/hDmi2pKRXqvkx1kGmZv83Wg+xjDxWn\nwFhIJwXC3ku6ciLv0GC2Xt9OFMnbATS9M8mdcv0+oQcw6GqhuwzzFZXunjW+Vcyk\n07BcbfEmgvB6p1NjT63qWB2d5nX99CqAIWab9Dm1QiW6/kniO5814OnCuIVXgmMS\nUDMklfWd0nE64De5eka3Osl/RsTHiwXd5pP8jAuQB6z35f4MNRnR9Fg7KoM8eS+h\nPgimZpfBRE4H5Pxfp/7tP9sbS9pivO1zJO5QN9EBdTsW9OFAVC8pjB0qJKdY2k0=\n=3Z+m\n-----END PGP SIGNATURE-----\n", "payload": "tree 549c8b1517f37a1fb2c80cd8786404a5bad1d6bb\nparent 2748a9fd93dd1a00a4521f4f16de5befbf77f6cd\nparent e068cec13e2a63dba29d40f0130527d980f83f7c\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1570570279 +0200\ncommitter GitHub <noreply@github.com> 1570570279 +0200\n\nRollup merge of #64284 - Mark-Simulacrum:include-warn, r=petrochenkov\n\nWarn if include macro fails to include entire file\n\nThis currently introduces an error, mainly because that was just simpler, and I'm not entirely certain if we can introduce a lint without an RFC and such.\n\nThis is primarily to get feedback on the approach and overall aim -- in particular, do we think this is helpful? If so, we probably will need lang-team sign off and decide if it should be an error (as currently introduced by this PR), a lint, or a warning.\n\nr? @petrochenkov\n\ncc https://github.com/rust-lang/rust/issues/35560\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc068222d06ac3ff656c4c9ef2b98428c1c4537b", "html_url": "https://github.com/rust-lang/rust/commit/fc068222d06ac3ff656c4c9ef2b98428c1c4537b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2748a9fd93dd1a00a4521f4f16de5befbf77f6cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2748a9fd93dd1a00a4521f4f16de5befbf77f6cd", "html_url": "https://github.com/rust-lang/rust/commit/2748a9fd93dd1a00a4521f4f16de5befbf77f6cd"}, {"sha": "e068cec13e2a63dba29d40f0130527d980f83f7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e068cec13e2a63dba29d40f0130527d980f83f7c", "html_url": "https://github.com/rust-lang/rust/commit/e068cec13e2a63dba29d40f0130527d980f83f7c"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "5ca474a8b1d91a32612e8b3554ee61e63e6e5d61", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=fc068222d06ac3ff656c4c9ef2b98428c1c4537b", "patch": "@@ -368,6 +368,12 @@ pub mod parser {\n         Allow,\n         \"possible meta-variable misuse at macro definition\"\n     }\n+\n+    declare_lint! {\n+        pub INCOMPLETE_INCLUDE,\n+        Deny,\n+        \"trailing content in included file\"\n+    }\n }\n \n declare_lint! {"}, {"sha": "b31efc24e52d1fc3d93c9db9cce52ced0bd9c720", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=fc068222d06ac3ff656c4c9ef2b98428c1c4537b", "patch": "@@ -28,6 +28,7 @@ use crate::hir::intravisit;\n use crate::hir;\n use crate::lint::builtin::BuiltinLintDiagnostics;\n use crate::lint::builtin::parser::{ILL_FORMED_ATTRIBUTE_INPUT, META_VARIABLE_MISUSE};\n+use crate::lint::builtin::parser::INCOMPLETE_INCLUDE;\n use crate::session::{Session, DiagnosticMessageId};\n use crate::ty::TyCtxt;\n use crate::ty::query::Providers;\n@@ -83,6 +84,7 @@ impl Lint {\n         match lint_id {\n             BufferedEarlyLintId::IllFormedAttributeInput => ILL_FORMED_ATTRIBUTE_INPUT,\n             BufferedEarlyLintId::MetaVariableMisuse => META_VARIABLE_MISUSE,\n+            BufferedEarlyLintId::IncompleteInclude => INCOMPLETE_INCLUDE,\n         }\n     }\n "}, {"sha": "5cc953b9066282400bd11c5493f90c1bf4a0873b", "filename": "src/libsyntax/early_buffered_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Flibsyntax%2Fearly_buffered_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Flibsyntax%2Fearly_buffered_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fearly_buffered_lints.rs?ref=fc068222d06ac3ff656c4c9ef2b98428c1c4537b", "patch": "@@ -11,6 +11,7 @@ use syntax_pos::MultiSpan;\n pub enum BufferedEarlyLintId {\n     IllFormedAttributeInput,\n     MetaVariableMisuse,\n+    IncompleteInclude,\n }\n \n /// Stores buffered lint info which can later be passed to `librustc`."}, {"sha": "f74507dcc21f678dca92fe0eb07324b1075ad405", "filename": "src/libsyntax_ext/source_util.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Flibsyntax_ext%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Flibsyntax_ext%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fsource_util.rs?ref=fc068222d06ac3ff656c4c9ef2b98428c1c4537b", "patch": "@@ -5,6 +5,7 @@ use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::symbol::Symbol;\n use syntax::tokenstream::TokenStream;\n+use syntax::early_buffered_lints::BufferedEarlyLintId;\n \n use smallvec::SmallVec;\n use syntax_pos::{self, Pos, Span};\n@@ -83,7 +84,16 @@ pub fn expand_include<'cx>(cx: &'cx mut ExtCtxt<'_>, sp: Span, tts: TokenStream)\n     }\n     impl<'a> base::MacResult for ExpandResult<'a> {\n         fn make_expr(mut self: Box<ExpandResult<'a>>) -> Option<P<ast::Expr>> {\n-            Some(panictry!(self.p.parse_expr()))\n+            let r = panictry!(self.p.parse_expr());\n+            if self.p.token != token::Eof {\n+                self.p.sess.buffer_lint(\n+                    BufferedEarlyLintId::IncompleteInclude,\n+                    self.p.token.span,\n+                    ast::CRATE_NODE_ID,\n+                    \"include macro expected single expression in source\",\n+                );\n+            }\n+            Some(r)\n         }\n \n         fn make_items(mut self: Box<ExpandResult<'a>>) -> Option<SmallVec<[P<ast::Item>; 1]>> {"}, {"sha": "aa6380bd24dc7c4e505dd34dd8f2a28753e5ae21", "filename": "src/test/ui/include-single-expr-helper-1.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Ftest%2Fui%2Finclude-single-expr-helper-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Ftest%2Fui%2Finclude-single-expr-helper-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finclude-single-expr-helper-1.rs?ref=fc068222d06ac3ff656c4c9ef2b98428c1c4537b", "patch": "@@ -0,0 +1,5 @@\n+// ignore-test auxiliary file for include-single-expr.rs\n+\n+0\n+\n+// trailing comment permitted"}, {"sha": "84d8b69603b6bf338653990b4643241d39ec20eb", "filename": "src/test/ui/include-single-expr-helper.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Ftest%2Fui%2Finclude-single-expr-helper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Ftest%2Fui%2Finclude-single-expr-helper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finclude-single-expr-helper.rs?ref=fc068222d06ac3ff656c4c9ef2b98428c1c4537b", "patch": "@@ -0,0 +1,5 @@\n+// ignore-test auxiliary file for include-single-expr.rs\n+\n+0\n+10\n+100"}, {"sha": "0f4c29ec01456996a0d1aba1ad2815e767a7d7bb", "filename": "src/test/ui/include-single-expr.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Ftest%2Fui%2Finclude-single-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Ftest%2Fui%2Finclude-single-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finclude-single-expr.rs?ref=fc068222d06ac3ff656c4c9ef2b98428c1c4537b", "patch": "@@ -0,0 +1,6 @@\n+// error-pattern include macro expected single expression\n+\n+fn main() {\n+    include!(\"include-single-expr-helper.rs\");\n+    include!(\"include-single-expr-helper-1.rs\");\n+}"}, {"sha": "80eecf8f1b97940658648897aa8bb41a80600ce9", "filename": "src/test/ui/include-single-expr.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Ftest%2Fui%2Finclude-single-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Ftest%2Fui%2Finclude-single-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finclude-single-expr.stderr?ref=fc068222d06ac3ff656c4c9ef2b98428c1c4537b", "patch": "@@ -0,0 +1,10 @@\n+error: include macro expected single expression in source\n+  --> $DIR/include-single-expr-helper.rs:4:1\n+   |\n+LL | 10\n+   | ^^\n+   |\n+   = note: `#[deny(incomplete_include)]` on by default\n+\n+error: aborting due to previous error\n+"}, {"sha": "c59533da1dc39c06eb0e982fafe5a2a21c4f6cdb", "filename": "src/tools/error_index_generator/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Ftools%2Ferror_index_generator%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc068222d06ac3ff656c4c9ef2b98428c1c4537b/src%2Ftools%2Ferror_index_generator%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ferror_index_generator%2Fbuild.rs?ref=fc068222d06ac3ff656c4c9ef2b98428c1c4537b", "patch": "@@ -15,7 +15,7 @@ fn main() {\n             println!(\"cargo:rerun-if-changed={}\", entry.path().to_str().unwrap());\n             let file = fs::read_to_string(entry.path()).unwrap()\n                 .replace(\"syntax::register_diagnostics!\", \"register_diagnostics!\");\n-            let contents = format!(\"(|| {{\\n{}\\n}})();\", file);\n+            let contents = format!(\"(|| {{\\n{}\\n}})()\", file);\n \n             fs::write(&out_dir.join(&format!(\"error_{}.rs\", idx)), &contents).unwrap();\n "}]}