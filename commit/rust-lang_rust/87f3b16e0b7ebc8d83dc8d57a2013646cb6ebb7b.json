{"sha": "87f3b16e0b7ebc8d83dc8d57a2013646cb6ebb7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZjNiMTZlMGI3ZWJjOGQ4M2RjOGQ1N2EyMDEzNjQ2Y2I2ZWJiN2I=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-13T03:21:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-13T03:21:27Z"}, "message": "Rollup merge of #67243 - jonas-schievink:linkedlist-drop, r=KodrAus\n\nLinkedList: drop remaining items when drop panics\n\nhttps://github.com/rust-lang/rust/pull/67235, but for `LinkedList`, which has the same issue.\n\nI've also copied over the other drop-related tests from `VecDeque` since AFAICT `LinkedList` didn't have any.", "tree": {"sha": "5c73a530a949af08d7612c8b9a024d9a0637b0c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c73a530a949af08d7612c8b9a024d9a0637b0c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87f3b16e0b7ebc8d83dc8d57a2013646cb6ebb7b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd8wO3CRBK7hj4Ov3rIwAAdHIIAKNqHN0hQzrvSXjLZIRjMzdC\nqOzu/hB7a8x62xGD1USK0b0G+XYL3bJTVOqPdWswHmlB5727UZvGoIH1g1nUT4pk\nklDaaC+/awxPVJ2hubzsXF47WentP0mxh7z/dw7Rsw4FUzv/sdcgw8bcs4HKhCnl\nW95vN1YT0e63s88ZIa7w17uqmydBEVKppwePTsNq44qcHsviaYV+VpCAz7/p8AcV\n1nisug0dPzRM4X6ZRPWu70eBwVkLzTjd2XMvJyjp+yyFo4mnGfAs9+jNgMxWlziv\nrMuRyzOEbj95vvfXxVIqWktemRusocghP4nbImyrNVq0oMvTso7+QyQSIGRGHb8=\n=A7qv\n-----END PGP SIGNATURE-----\n", "payload": "tree 5c73a530a949af08d7612c8b9a024d9a0637b0c5\nparent 2ca7b7e539b429141028953328ea31db77dbf71a\nparent 5e32da184933e4398a99a3be13d21db857f059b5\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1576207287 +0100\ncommitter GitHub <noreply@github.com> 1576207287 +0100\n\nRollup merge of #67243 - jonas-schievink:linkedlist-drop, r=KodrAus\n\nLinkedList: drop remaining items when drop panics\n\nhttps://github.com/rust-lang/rust/pull/67235, but for `LinkedList`, which has the same issue.\n\nI've also copied over the other drop-related tests from `VecDeque` since AFAICT `LinkedList` didn't have any.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87f3b16e0b7ebc8d83dc8d57a2013646cb6ebb7b", "html_url": "https://github.com/rust-lang/rust/commit/87f3b16e0b7ebc8d83dc8d57a2013646cb6ebb7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87f3b16e0b7ebc8d83dc8d57a2013646cb6ebb7b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ca7b7e539b429141028953328ea31db77dbf71a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ca7b7e539b429141028953328ea31db77dbf71a", "html_url": "https://github.com/rust-lang/rust/commit/2ca7b7e539b429141028953328ea31db77dbf71a"}, {"sha": "5e32da184933e4398a99a3be13d21db857f059b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e32da184933e4398a99a3be13d21db857f059b5", "html_url": "https://github.com/rust-lang/rust/commit/5e32da184933e4398a99a3be13d21db857f059b5"}], "stats": {"total": 123, "additions": 122, "deletions": 1}, "files": [{"sha": "6ee22834a460e72b124a9c2c81ea3294f12b5812", "filename": "src/liballoc/collections/linked_list.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/87f3b16e0b7ebc8d83dc8d57a2013646cb6ebb7b/src%2Fliballoc%2Fcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87f3b16e0b7ebc8d83dc8d57a2013646cb6ebb7b/src%2Fliballoc%2Fcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Flinked_list.rs?ref=87f3b16e0b7ebc8d83dc8d57a2013646cb6ebb7b", "patch": "@@ -808,7 +808,21 @@ impl<T> LinkedList<T> {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n unsafe impl<#[may_dangle] T> Drop for LinkedList<T> {\n     fn drop(&mut self) {\n-        while let Some(_) = self.pop_front_node() {}\n+        struct DropGuard<'a, T>(&'a mut LinkedList<T>);\n+\n+        impl<'a, T> Drop for DropGuard<'a, T> {\n+            fn drop(&mut self) {\n+                // Continue the same loop we do below. This only runs when a destructor has\n+                // panicked. If another one panics this will abort.\n+                while let Some(_) = self.0.pop_front_node() {}\n+            }\n+        }\n+\n+        while let Some(node) = self.pop_front_node() {\n+            let guard = DropGuard(self);\n+            drop(node);\n+            mem::forget(guard);\n+        }\n     }\n }\n "}, {"sha": "54a77d643cbe36a1c35697fa95c723821b1edee1", "filename": "src/liballoc/tests/linked_list.rs", "status": "modified", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/87f3b16e0b7ebc8d83dc8d57a2013646cb6ebb7b/src%2Fliballoc%2Ftests%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87f3b16e0b7ebc8d83dc8d57a2013646cb6ebb7b/src%2Fliballoc%2Ftests%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Flinked_list.rs?ref=87f3b16e0b7ebc8d83dc8d57a2013646cb6ebb7b", "patch": "@@ -1,4 +1,5 @@\n use std::collections::LinkedList;\n+use std::panic::catch_unwind;\n \n #[test]\n fn test_basic() {\n@@ -529,3 +530,109 @@ fn drain_filter_complex() {\n         assert_eq!(list.into_iter().collect::<Vec<_>>(), vec![1, 3, 5, 7, 9, 11, 13, 15, 17, 19]);\n     }\n }\n+\n+\n+#[test]\n+fn test_drop() {\n+    static mut DROPS: i32 = 0;\n+    struct Elem;\n+    impl Drop for Elem {\n+        fn drop(&mut self) {\n+            unsafe {\n+                DROPS += 1;\n+            }\n+        }\n+    }\n+\n+    let mut ring = LinkedList::new();\n+    ring.push_back(Elem);\n+    ring.push_front(Elem);\n+    ring.push_back(Elem);\n+    ring.push_front(Elem);\n+    drop(ring);\n+\n+    assert_eq!(unsafe { DROPS }, 4);\n+}\n+\n+#[test]\n+fn test_drop_with_pop() {\n+    static mut DROPS: i32 = 0;\n+    struct Elem;\n+    impl Drop for Elem {\n+        fn drop(&mut self) {\n+            unsafe {\n+                DROPS += 1;\n+            }\n+        }\n+    }\n+\n+    let mut ring = LinkedList::new();\n+    ring.push_back(Elem);\n+    ring.push_front(Elem);\n+    ring.push_back(Elem);\n+    ring.push_front(Elem);\n+\n+    drop(ring.pop_back());\n+    drop(ring.pop_front());\n+    assert_eq!(unsafe { DROPS }, 2);\n+\n+    drop(ring);\n+    assert_eq!(unsafe { DROPS }, 4);\n+}\n+\n+#[test]\n+fn test_drop_clear() {\n+    static mut DROPS: i32 = 0;\n+    struct Elem;\n+    impl Drop for Elem {\n+        fn drop(&mut self) {\n+            unsafe {\n+                DROPS += 1;\n+            }\n+        }\n+    }\n+\n+    let mut ring = LinkedList::new();\n+    ring.push_back(Elem);\n+    ring.push_front(Elem);\n+    ring.push_back(Elem);\n+    ring.push_front(Elem);\n+    ring.clear();\n+    assert_eq!(unsafe { DROPS }, 4);\n+\n+    drop(ring);\n+    assert_eq!(unsafe { DROPS }, 4);\n+}\n+\n+#[test]\n+fn test_drop_panic() {\n+    static mut DROPS: i32 = 0;\n+\n+    struct D(bool);\n+\n+    impl Drop for D {\n+        fn drop(&mut self) {\n+            unsafe {\n+                DROPS += 1;\n+            }\n+\n+            if self.0 {\n+                panic!(\"panic in `drop`\");\n+            }\n+        }\n+    }\n+\n+    let mut q = LinkedList::new();\n+    q.push_back(D(false));\n+    q.push_back(D(false));\n+    q.push_back(D(false));\n+    q.push_back(D(false));\n+    q.push_back(D(false));\n+    q.push_front(D(false));\n+    q.push_front(D(false));\n+    q.push_front(D(true));\n+\n+    catch_unwind(move || drop(q)).ok();\n+\n+    assert_eq!(unsafe { DROPS }, 8);\n+}"}]}