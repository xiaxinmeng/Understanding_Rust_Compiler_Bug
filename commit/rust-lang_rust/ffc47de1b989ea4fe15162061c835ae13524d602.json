{"sha": "ffc47de1b989ea4fe15162061c835ae13524d602", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmYzQ3ZGUxYjk4OWVhNGZlMTUxNjIwNjFjODM1YWUxMzUyNGQ2MDI=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-03T14:33:36Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-08T13:50:58Z"}, "message": "Add unlink shim to delete files", "tree": {"sha": "8a76d7aedf6be60811c3e17592cb9c42f1e7a910", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a76d7aedf6be60811c3e17592cb9c42f1e7a910"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffc47de1b989ea4fe15162061c835ae13524d602", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffc47de1b989ea4fe15162061c835ae13524d602", "html_url": "https://github.com/rust-lang/rust/commit/ffc47de1b989ea4fe15162061c835ae13524d602", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffc47de1b989ea4fe15162061c835ae13524d602/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d03dd63643bae6767c2bfe7ea0437591bd47d97", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d03dd63643bae6767c2bfe7ea0437591bd47d97", "html_url": "https://github.com/rust-lang/rust/commit/9d03dd63643bae6767c2bfe7ea0437591bd47d97"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "a96ed35b67a60a4eaca454963c0d46db50b2a17d", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ffc47de1b989ea4fe15162061c835ae13524d602/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffc47de1b989ea4fe15162061c835ae13524d602/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=ffc47de1b989ea4fe15162061c835ae13524d602", "patch": "@@ -502,6 +502,11 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 this.write_scalar(Scalar::from_int(result, dest.layout.size), dest)?;\n             }\n \n+            \"unlink\" => {\n+                let result = this.unlink(args[0])?;\n+                this.write_scalar(Scalar::from_int(result, dest.layout.size), dest)?;\n+            }\n+\n             \"strlen\" => {\n                 let ptr = this.read_scalar(args[0])?.not_undef()?;\n                 let n = this.memory().read_c_str(ptr)?.len();"}, {"sha": "0893d0b4e0e85f4d594bf6e4ba189ffd3407df5c", "filename": "src/shims/io.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ffc47de1b989ea4fe15162061c835ae13524d602/src%2Fshims%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffc47de1b989ea4fe15162061c835ae13524d602/src%2Fshims%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fio.rs?ref=ffc47de1b989ea4fe15162061c835ae13524d602", "patch": "@@ -1,5 +1,5 @@\n use std::collections::HashMap;\n-use std::fs::{File, OpenOptions};\n+use std::fs::{File, OpenOptions, remove_file};\n use std::io::{Read, Write};\n \n use rustc::ty::layout::Size;\n@@ -205,6 +205,24 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         })\n     }\n \n+    fn unlink( &mut self, path_op: OpTy<'tcx, Tag>) -> InterpResult<'tcx, i32> {\n+        let this = self.eval_context_mut();\n+\n+        if !this.machine.communicate {\n+            throw_unsup_format!(\"`write` not available when isolation is enabled\")\n+        }\n+\n+        let path_bytes = this\n+            .memory()\n+            .read_c_str(this.read_scalar(path_op)?.not_undef()?)?;\n+        let path = std::str::from_utf8(path_bytes)\n+            .map_err(|_| err_unsup_format!(\"{:?} is not a valid utf-8 string\", path_bytes))?;\n+\n+        let result = remove_file(path).map(|_| 0);\n+\n+        this.consume_result(result)\n+    }\n+\n     /// Helper function that gets a `FileHandle` immutable reference and allows to manipulate it\n     /// using the `f` closure.\n     ///"}, {"sha": "3980cc0f74f51001fd9e69232685760fbd1337d9", "filename": "tests/run-pass/file_manipulation.rs", "status": "renamed", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ffc47de1b989ea4fe15162061c835ae13524d602/tests%2Frun-pass%2Ffile_manipulation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffc47de1b989ea4fe15162061c835ae13524d602/tests%2Frun-pass%2Ffile_manipulation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffile_manipulation.rs?ref=ffc47de1b989ea4fe15162061c835ae13524d602", "patch": "@@ -1,11 +1,10 @@\n // ignore-windows: File handling is not implemented yet\n // compile-flags: -Zmiri-disable-isolation\n \n-use std::fs::File;\n+use std::fs::{File, remove_file};\n use std::io::{Read, Write};\n \n fn main() {\n-    // FIXME: remove the file and delete it when `rm` is implemented.\n     let path = \"./tests/hello.txt\";\n     let bytes = b\"Hello, World!\\n\";\n     // Test creating, writing and closing a file (closing is tested when `file` is dropped).\n@@ -22,4 +21,6 @@ fn main() {\n     // Reading until EOF should get the whole text.\n     file.read_to_end(&mut contents).unwrap();\n     assert_eq!(bytes, contents.as_slice());\n+    // Removing file should succeed\n+    remove_file(path).unwrap();\n }", "previous_filename": "tests/run-pass/file_read.rs"}]}