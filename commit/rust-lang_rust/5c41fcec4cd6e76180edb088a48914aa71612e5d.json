{"sha": "5c41fcec4cd6e76180edb088a48914aa71612e5d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNDFmY2VjNGNkNmU3NjE4MGVkYjA4OGE0ODkxNGFhNzE2MTJlNWQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-27T00:28:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-27T00:28:34Z"}, "message": "Auto merge of #47571 - FenrirWolf:libunwind, r=alexcrichton\n\nMatch libunwind's EABI selection with libpanic_unwind\n\nCurrently, the `libunwind` crate will only select the ARM EABI if it is compiling for ARM/Linux or Android targets. `libpanic_unwind`, however, will choose the ARM EABI if the target arch is ARM and the OS is not iOS. This means that if one tries to enable unwinding for a non-standard ARM target (such as implementing a custom stdlib via Xargo, for example), then the two crates can potentially disagree about which EABI is being targeted.\n\nThis PR makes `libunwind` use the [same logic](https://github.com/rust-lang/rust/blob/master/src/libpanic_unwind/gcc.rs#L139-L146) as `libpanic_unwind` when choosing the EABI.\n\nI noticed there are a few comments about certain functions only differing on Android or ARM/Linux, but I *think* that those differences apply to the ARM EABI in general. Let me know if I'm wrong about that.", "tree": {"sha": "ad4ed984a3635c0695fce867c391afb4f4da9d26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad4ed984a3635c0695fce867c391afb4f4da9d26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c41fcec4cd6e76180edb088a48914aa71612e5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c41fcec4cd6e76180edb088a48914aa71612e5d", "html_url": "https://github.com/rust-lang/rust/commit/5c41fcec4cd6e76180edb088a48914aa71612e5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c41fcec4cd6e76180edb088a48914aa71612e5d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bacb5c58dfdde7c35e99b2b0d8171238cc33cf6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bacb5c58dfdde7c35e99b2b0d8171238cc33cf6c", "html_url": "https://github.com/rust-lang/rust/commit/bacb5c58dfdde7c35e99b2b0d8171238cc33cf6c"}, {"sha": "01059b9454db83c12d0215b8bf0721d6fd69ff93", "url": "https://api.github.com/repos/rust-lang/rust/commits/01059b9454db83c12d0215b8bf0721d6fd69ff93", "html_url": "https://github.com/rust-lang/rust/commit/01059b9454db83c12d0215b8bf0721d6fd69ff93"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "e6fff7963f79c31e24a0357f66ad078f38f9f868", "filename": "src/libunwind/libunwind.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5c41fcec4cd6e76180edb088a48914aa71612e5d/src%2Flibunwind%2Flibunwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c41fcec4cd6e76180edb088a48914aa71612e5d/src%2Flibunwind%2Flibunwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunwind%2Flibunwind.rs?ref=5c41fcec4cd6e76180edb088a48914aa71612e5d", "patch": "@@ -93,8 +93,7 @@ extern \"C\" {\n }\n \n cfg_if! {\n-if #[cfg(not(any(all(target_os = \"android\", target_arch = \"arm\"),\n-                 all(target_os = \"linux\", target_arch = \"arm\"))))] {\n+if #[cfg(all(any(target_os = \"ios\", not(target_arch = \"arm\"))))] {\n     // Not ARM EHABI\n     #[repr(C)]\n     #[derive(Copy, Clone, PartialEq)]"}]}