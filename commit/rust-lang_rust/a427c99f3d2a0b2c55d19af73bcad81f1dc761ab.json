{"sha": "a427c99f3d2a0b2c55d19af73bcad81f1dc761ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MjdjOTlmM2QyYTBiMmM1NWQxOWFmNzNiY2FkODFmMWRjNzYxYWI=", "commit": {"author": {"name": "Dmitry Murzin", "email": "diralik@yandex.ru", "date": "2020-07-25T17:04:59Z"}, "committer": {"name": "Dmitry Murzin", "email": "diralik@yandex.ru", "date": "2020-07-30T20:23:33Z"}, "message": "Handle mapping to Option in `map_flatten` lint", "tree": {"sha": "060afdee3e52f9643822eca2cef6d38dcf09f8f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/060afdee3e52f9643822eca2cef6d38dcf09f8f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a427c99f3d2a0b2c55d19af73bcad81f1dc761ab", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEL6jLL1MPjzOQhhDzPafrjjExpFQFAl8jLEUACgkQPafrjjEx\npFS9uw/+M+Ij0aJlhrMlxDDTi8/A1AqzWUG5lnCRCw+Cotqf9zPlNFKFH6VYqhjf\npB0x1L4D+8rvmil6sM8pJ4kJk0OibErfiMtVojJYfgd6G39JyslBRAcn9kVWoyi9\nx3aRtcSdcf4w0XQ1ODuqzh5peSb5zWzwApmnaejYSkMYTQ4BW8sQtDRYEUTL0kfn\nGpwBeP+e0k+wd4nJGiB42TyCsp3TmAkxrU4brdXr0RfPz1NIFTsghlkEWP7DrLSv\nxiQw67XStoEoHdohboeISnBdASKi9s0WX1OmrP4Xb+vNNdGqkDZZVQBYivkQHD4C\n9T7Wr8QoIqF03cRg4BtngjjE6F6ZOSaaGgJwp7aG1kvGQPI2rjmHQz7rzg4vZFWy\ns1Uo+5PVDS8cAq/NdvvuzBDHmaJxiTbMXk2AJqUrYUfjwROgdKKOHjaQIoaxXBCv\nk8RvIPVp8IcXK2bvPYowC+X++Tsg/JrQes/Zu9s/SqOfoekOfeTZXoiMKe5O72Ne\nMS4B8BED/pSWCtvEtXivhASb/zkMH9tPvHC2k5ef560oVqMTtQ8qxI4w0cdKz+HF\nKi/bP3bN2A1t+lOaNsB+MBe5+1Ze1JTrkdNBWvsT1mVjY5vILrzU9Pevzzq73CB9\nwfLBYn9NCk6OzISuHhMElek4/lRLxEwlWrHbwPKhDjijeB5XuMw=\n=ejr/\n-----END PGP SIGNATURE-----", "payload": "tree 060afdee3e52f9643822eca2cef6d38dcf09f8f6\nparent 2e0f8b6cc61c1673991120639d6b104a195f755e\nauthor Dmitry Murzin <diralik@yandex.ru> 1595696699 +0300\ncommitter Dmitry Murzin <diralik@yandex.ru> 1596140613 +0300\n\nHandle mapping to Option in `map_flatten` lint\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a427c99f3d2a0b2c55d19af73bcad81f1dc761ab", "html_url": "https://github.com/rust-lang/rust/commit/a427c99f3d2a0b2c55d19af73bcad81f1dc761ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a427c99f3d2a0b2c55d19af73bcad81f1dc761ab/comments", "author": {"login": "dima74", "id": 6505554, "node_id": "MDQ6VXNlcjY1MDU1NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6505554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dima74", "html_url": "https://github.com/dima74", "followers_url": "https://api.github.com/users/dima74/followers", "following_url": "https://api.github.com/users/dima74/following{/other_user}", "gists_url": "https://api.github.com/users/dima74/gists{/gist_id}", "starred_url": "https://api.github.com/users/dima74/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dima74/subscriptions", "organizations_url": "https://api.github.com/users/dima74/orgs", "repos_url": "https://api.github.com/users/dima74/repos", "events_url": "https://api.github.com/users/dima74/events{/privacy}", "received_events_url": "https://api.github.com/users/dima74/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dima74", "id": 6505554, "node_id": "MDQ6VXNlcjY1MDU1NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6505554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dima74", "html_url": "https://github.com/dima74", "followers_url": "https://api.github.com/users/dima74/followers", "following_url": "https://api.github.com/users/dima74/following{/other_user}", "gists_url": "https://api.github.com/users/dima74/gists{/gist_id}", "starred_url": "https://api.github.com/users/dima74/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dima74/subscriptions", "organizations_url": "https://api.github.com/users/dima74/orgs", "repos_url": "https://api.github.com/users/dima74/repos", "events_url": "https://api.github.com/users/dima74/events{/privacy}", "received_events_url": "https://api.github.com/users/dima74/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e0f8b6cc61c1673991120639d6b104a195f755e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e0f8b6cc61c1673991120639d6b104a195f755e", "html_url": "https://github.com/rust-lang/rust/commit/2e0f8b6cc61c1673991120639d6b104a195f755e"}], "stats": {"total": 44, "additions": 35, "deletions": 9}, "files": [{"sha": "3f62a3cab1c2dd21f0e46ca8097a924bd12772d6", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a427c99f3d2a0b2c55d19af73bcad81f1dc761ab/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a427c99f3d2a0b2c55d19af73bcad81f1dc761ab/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=a427c99f3d2a0b2c55d19af73bcad81f1dc761ab", "patch": "@@ -2569,17 +2569,35 @@ fn lint_ok_expect(cx: &LateContext<'_>, expr: &hir::Expr<'_>, ok_args: &[hir::Ex\n fn lint_map_flatten<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx hir::Expr<'_>, map_args: &'tcx [hir::Expr<'_>]) {\n     // lint if caller of `.map().flatten()` is an Iterator\n     if match_trait_method(cx, expr, &paths::ITERATOR) {\n-        let msg = \"called `map(..).flatten()` on an `Iterator`. \\\n-                    This is more succinctly expressed by calling `.flat_map(..)`\";\n+        let map_closure_ty = cx.typeck_results().expr_ty(&map_args[1]);\n+        let is_map_to_option = if let ty::Closure(_def_id, substs) = map_closure_ty.kind {\n+            let map_closure_return_ty = cx.tcx.erase_late_bound_regions(&substs.as_closure().sig().output());\n+            is_type_diagnostic_item(cx, map_closure_return_ty, sym!(option_type))\n+        } else {\n+            false\n+        };\n+\n+        let method_to_use = if is_map_to_option {\n+            // `(...).map(...)` has type `impl Iterator<Item=Option<...>>\n+            \"filter_map\"\n+        } else {\n+            // `(...).map(...)` has type `impl Iterator<Item=impl Iterator<...>>\n+            \"flat_map\"\n+        };\n+        let msg = &format!(\n+            \"called `map(..).flatten()` on an `Iterator`. \\\n+                   This is more succinctly expressed by calling `.{}(..)`\",\n+            method_to_use\n+        );\n         let self_snippet = snippet(cx, map_args[0].span, \"..\");\n         let func_snippet = snippet(cx, map_args[1].span, \"..\");\n-        let hint = format!(\"{0}.flat_map({1})\", self_snippet, func_snippet);\n+        let hint = format!(\"{0}.{1}({2})\", self_snippet, method_to_use, func_snippet);\n         span_lint_and_sugg(\n             cx,\n             MAP_FLATTEN,\n             expr.span,\n             msg,\n-            \"try using `flat_map` instead\",\n+            &format!(\"try using `{}` instead\", method_to_use),\n             hint,\n             Applicability::MachineApplicable,\n         );"}, {"sha": "684a28aebcb663314bd80c6cabcaf9c6b6b09a78", "filename": "tests/ui/map_flatten.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a427c99f3d2a0b2c55d19af73bcad81f1dc761ab/tests%2Fui%2Fmap_flatten.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a427c99f3d2a0b2c55d19af73bcad81f1dc761ab/tests%2Fui%2Fmap_flatten.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_flatten.fixed?ref=a427c99f3d2a0b2c55d19af73bcad81f1dc761ab", "patch": "@@ -5,6 +5,7 @@\n #![allow(clippy::map_identity)]\n \n fn main() {\n+    let _: Vec<_> = vec![5_i8; 6].into_iter().filter_map(|x| x.checked_add(1)).collect();\n     let _: Vec<_> = vec![5_i8; 6].into_iter().flat_map(|x| 0..x).collect();\n     let _: Option<_> = (Some(Some(1))).and_then(|x| x);\n }"}, {"sha": "05789ee52323510b29cdd0965ef8c0da87e3dbc7", "filename": "tests/ui/map_flatten.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a427c99f3d2a0b2c55d19af73bcad81f1dc761ab/tests%2Fui%2Fmap_flatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a427c99f3d2a0b2c55d19af73bcad81f1dc761ab/tests%2Fui%2Fmap_flatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_flatten.rs?ref=a427c99f3d2a0b2c55d19af73bcad81f1dc761ab", "patch": "@@ -5,6 +5,7 @@\n #![allow(clippy::map_identity)]\n \n fn main() {\n+    let _: Vec<_> = vec![5_i8; 6].into_iter().map(|x| x.checked_add(1)).flatten().collect();\n     let _: Vec<_> = vec![5_i8; 6].into_iter().map(|x| 0..x).flatten().collect();\n     let _: Option<_> = (Some(Some(1))).map(|x| x).flatten();\n }"}, {"sha": "d2d15362a6c30902f0c76ec0605d8cd3d4762121", "filename": "tests/ui/map_flatten.stderr", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a427c99f3d2a0b2c55d19af73bcad81f1dc761ab/tests%2Fui%2Fmap_flatten.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a427c99f3d2a0b2c55d19af73bcad81f1dc761ab/tests%2Fui%2Fmap_flatten.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_flatten.stderr?ref=a427c99f3d2a0b2c55d19af73bcad81f1dc761ab", "patch": "@@ -1,16 +1,22 @@\n-error: called `map(..).flatten()` on an `Iterator`. This is more succinctly expressed by calling `.flat_map(..)`\n+error: called `map(..).flatten()` on an `Iterator`. This is more succinctly expressed by calling `.filter_map(..)`\n   --> $DIR/map_flatten.rs:8:21\n    |\n-LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(|x| 0..x).flatten().collect();\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `flat_map` instead: `vec![5_i8; 6].into_iter().flat_map(|x| 0..x)`\n+LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(|x| x.checked_add(1)).flatten().collect();\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `filter_map` instead: `vec![5_i8; 6].into_iter().filter_map(|x| x.checked_add(1))`\n    |\n    = note: `-D clippy::map-flatten` implied by `-D warnings`\n \n+error: called `map(..).flatten()` on an `Iterator`. This is more succinctly expressed by calling `.flat_map(..)`\n+  --> $DIR/map_flatten.rs:9:21\n+   |\n+LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(|x| 0..x).flatten().collect();\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `flat_map` instead: `vec![5_i8; 6].into_iter().flat_map(|x| 0..x)`\n+\n error: called `map(..).flatten()` on an `Option`. This is more succinctly expressed by calling `.and_then(..)`\n-  --> $DIR/map_flatten.rs:9:24\n+  --> $DIR/map_flatten.rs:10:24\n    |\n LL |     let _: Option<_> = (Some(Some(1))).map(|x| x).flatten();\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `and_then` instead: `(Some(Some(1))).and_then(|x| x)`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 3 previous errors\n "}]}