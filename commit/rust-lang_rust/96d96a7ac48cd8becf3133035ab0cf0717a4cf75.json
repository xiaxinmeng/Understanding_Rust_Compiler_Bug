{"sha": "96d96a7ac48cd8becf3133035ab0cf0717a4cf75", "node_id": "C_kwDOAAsO6NoAKDk2ZDk2YTdhYzQ4Y2Q4YmVjZjMxMzMwMzVhYjBjZjA3MTdhNGNmNzU", "commit": {"author": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2022-01-30T15:25:40Z"}, "committer": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2022-01-30T15:25:40Z"}, "message": "Use `optflag` for `--report-time`\n\nEssentially, what is described here:\nhttps://github.com/rust-lang/rust/issues/64888#issuecomment-1008047228\n\nThere is one difference. The comment proposes to add a\n`--report-time-color` option. This change instead uses libtest's\nexisting `--color` option for that purpose.", "tree": {"sha": "830a452e7f7c621f4f480966f0c96672905c9f0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/830a452e7f7c621f4f480966f0c96672905c9f0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96d96a7ac48cd8becf3133035ab0cf0717a4cf75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96d96a7ac48cd8becf3133035ab0cf0717a4cf75", "html_url": "https://github.com/rust-lang/rust/commit/96d96a7ac48cd8becf3133035ab0cf0717a4cf75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96d96a7ac48cd8becf3133035ab0cf0717a4cf75/comments", "author": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a00e130dae74a213338e2b095ec855156d8f3d8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a00e130dae74a213338e2b095ec855156d8f3d8a", "html_url": "https://github.com/rust-lang/rust/commit/a00e130dae74a213338e2b095ec855156d8f3d8a"}], "stats": {"total": 31, "additions": 9, "deletions": 22}, "files": [{"sha": "b39701a3d428828bf0cb7453553bdbdee6d9fec8", "filename": "library/test/src/cli.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/96d96a7ac48cd8becf3133035ab0cf0717a4cf75/library%2Ftest%2Fsrc%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96d96a7ac48cd8becf3133035ab0cf0717a4cf75/library%2Ftest%2Fsrc%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fcli.rs?ref=96d96a7ac48cd8becf3133035ab0cf0717a4cf75", "patch": "@@ -109,12 +109,10 @@ fn optgroups() -> getopts::Options {\n             unstable-options = Allow use of experimental features\",\n             \"unstable-options\",\n         )\n-        .optflagopt(\n+        .optflag(\n             \"\",\n             \"report-time\",\n-            \"Show execution time of each test. Available values:\n-            plain   = do not colorize the execution time (default);\n-            colored = colorize output according to the `color` parameter value;\n+            \"Show execution time of each test.\n \n             Threshold values for colorized output can be configured via\n             `RUST_TEST_TIME_UNIT`, `RUST_TEST_TIME_INTEGRATION` and\n@@ -125,7 +123,6 @@ fn optgroups() -> getopts::Options {\n             is 0.5 seconds, and the critical time is 2 seconds.\n \n             Not available for --format=terse\",\n-            \"plain|colored\",\n         )\n         .optflag(\n             \"\",\n@@ -319,17 +316,12 @@ fn get_time_options(\n     allow_unstable: bool,\n ) -> OptPartRes<Option<TestTimeOptions>> {\n     let report_time = unstable_optflag!(matches, allow_unstable, \"report-time\");\n-    let colored_opt_str = matches.opt_str(\"report-time\");\n-    let mut report_time_colored = report_time && colored_opt_str == Some(\"colored\".into());\n     let ensure_test_time = unstable_optflag!(matches, allow_unstable, \"ensure-time\");\n \n     // If `ensure-test-time` option is provided, time output is enforced,\n     // so user won't be confused if any of tests will silently fail.\n     let options = if report_time || ensure_test_time {\n-        if ensure_test_time && !report_time {\n-            report_time_colored = true;\n-        }\n-        Some(TestTimeOptions::new_from_env(ensure_test_time, report_time_colored))\n+        Some(TestTimeOptions::new_from_env(ensure_test_time))\n     } else {\n         None\n     };"}, {"sha": "5da275d4af7180195ba59420b2ee8b32a3ec6197", "filename": "library/test/src/formatters/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/96d96a7ac48cd8becf3133035ab0cf0717a4cf75/library%2Ftest%2Fsrc%2Fformatters%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96d96a7ac48cd8becf3133035ab0cf0717a4cf75/library%2Ftest%2Fsrc%2Fformatters%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fformatters%2Fpretty.rs?ref=96d96a7ac48cd8becf3133035ab0cf0717a4cf75", "patch": "@@ -102,7 +102,7 @@ impl<T: Write> PrettyFormatter<T> {\n         if let (Some(opts), Some(time)) = (self.time_options, exec_time) {\n             let time_str = format!(\" <{}>\", time);\n \n-            let color = if opts.colored {\n+            let color = if self.use_color {\n                 if opts.is_critical(desc, time) {\n                     Some(term::color::RED)\n                 } else if opts.is_warn(desc, time) {"}, {"sha": "f563d490d1175db19862993fc44d95d69c879d55", "filename": "library/test/src/tests.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/96d96a7ac48cd8becf3133035ab0cf0717a4cf75/library%2Ftest%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96d96a7ac48cd8becf3133035ab0cf0717a4cf75/library%2Ftest%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Ftests.rs?ref=96d96a7ac48cd8becf3133035ab0cf0717a4cf75", "patch": "@@ -382,7 +382,6 @@ fn test_time_options_threshold() {\n \n     let options = TestTimeOptions {\n         error_on_excess: false,\n-        colored: false,\n         unit_threshold: unit.clone(),\n         integration_threshold: integration.clone(),\n         doctest_threshold: doc.clone(),"}, {"sha": "8c64e5d1b733944b6b41257ec767e73556d1e97d", "filename": "library/test/src/time.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/96d96a7ac48cd8becf3133035ab0cf0717a4cf75/library%2Ftest%2Fsrc%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96d96a7ac48cd8becf3133035ab0cf0717a4cf75/library%2Ftest%2Fsrc%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Ftime.rs?ref=96d96a7ac48cd8becf3133035ab0cf0717a4cf75", "patch": "@@ -137,14 +137,13 @@ pub struct TestTimeOptions {\n     /// Denotes if the test critical execution time limit excess should be considered\n     /// a test failure.\n     pub error_on_excess: bool,\n-    pub colored: bool,\n     pub unit_threshold: TimeThreshold,\n     pub integration_threshold: TimeThreshold,\n     pub doctest_threshold: TimeThreshold,\n }\n \n impl TestTimeOptions {\n-    pub fn new_from_env(error_on_excess: bool, colored: bool) -> Self {\n+    pub fn new_from_env(error_on_excess: bool) -> Self {\n         let unit_threshold = TimeThreshold::from_env_var(time_constants::UNIT_ENV_NAME)\n             .unwrap_or_else(Self::default_unit);\n \n@@ -155,7 +154,7 @@ impl TestTimeOptions {\n         let doctest_threshold = TimeThreshold::from_env_var(time_constants::DOCTEST_ENV_NAME)\n             .unwrap_or_else(Self::default_doctest);\n \n-        Self { error_on_excess, colored, unit_threshold, integration_threshold, doctest_threshold }\n+        Self { error_on_excess, unit_threshold, integration_threshold, doctest_threshold }\n     }\n \n     pub fn is_warn(&self, test: &TestDesc, exec_time: &TestExecTime) -> bool {"}, {"sha": "0e0eb85db746a33d8368ec7603ca35dd912189b8", "filename": "src/doc/rustc/src/tests/index.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/96d96a7ac48cd8becf3133035ab0cf0717a4cf75/src%2Fdoc%2Frustc%2Fsrc%2Ftests%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/96d96a7ac48cd8becf3133035ab0cf0717a4cf75/src%2Fdoc%2Frustc%2Fsrc%2Ftests%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Ftests%2Findex.md?ref=96d96a7ac48cd8becf3133035ab0cf0717a4cf75", "patch": "@@ -267,7 +267,7 @@ Controls the format of the output. Valid options:\n \n Writes the results of the tests to the given file.\n \n-#### `--report-time` _FORMAT_\n+#### `--report-time`\n \n \u26a0\ufe0f \ud83d\udea7 This option is [unstable](#unstable-options), and requires the `-Z\n unstable-options` flag. See [tracking issue"}, {"sha": "9e6a1fb000575f8316c78c937fb69c666b40e04d", "filename": "src/doc/unstable-book/src/compiler-flags/report-time.md", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/96d96a7ac48cd8becf3133035ab0cf0717a4cf75/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Freport-time.md", "raw_url": "https://github.com/rust-lang/rust/raw/96d96a7ac48cd8becf3133035ab0cf0717a4cf75/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Freport-time.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Freport-time.md?ref=96d96a7ac48cd8becf3133035ab0cf0717a4cf75", "patch": "@@ -21,11 +21,8 @@ Sample usage command:\n Available options:\n \n ```sh\n---report-time [plain|colored]\n-                Show execution time of each test. Available values:\n-                plain = do not colorize the execution time (default);\n-                colored = colorize output according to the `color`\n-                parameter value;\n+--report-time\n+                Show execution time of each test.\n                 Threshold values for colorized output can be\n                 configured via\n                 `RUST_TEST_TIME_UNIT`, `RUST_TEST_TIME_INTEGRATION`"}]}