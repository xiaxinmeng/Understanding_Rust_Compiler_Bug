{"sha": "ca51b49c0a0122b2efd827fa96a656a8b1641efa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNTFiNDljMGEwMTIyYjJlZmQ4MjdmYTk2YTY1NmE4YjE2NDFlZmE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-16T18:43:50Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-16T18:43:50Z"}, "message": "rustc: Replace the redundant typeck::node_ann_ty_params() with ty::ann_to_type_params()", "tree": {"sha": "a820746f3fa89b63b07f336978a0a002dcc83904", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a820746f3fa89b63b07f336978a0a002dcc83904"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca51b49c0a0122b2efd827fa96a656a8b1641efa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca51b49c0a0122b2efd827fa96a656a8b1641efa", "html_url": "https://github.com/rust-lang/rust/commit/ca51b49c0a0122b2efd827fa96a656a8b1641efa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca51b49c0a0122b2efd827fa96a656a8b1641efa/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3aaf02b9075101086fba0d4491a3ad03d749fc84", "url": "https://api.github.com/repos/rust-lang/rust/commits/3aaf02b9075101086fba0d4491a3ad03d749fc84", "html_url": "https://github.com/rust-lang/rust/commit/3aaf02b9075101086fba0d4491a3ad03d749fc84"}], "stats": {"total": 24, "additions": 4, "deletions": 20}, "files": [{"sha": "3fa7c8012c2039473fd36b11d79bd59b7333bf99", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ca51b49c0a0122b2efd827fa96a656a8b1641efa/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca51b49c0a0122b2efd827fa96a656a8b1641efa/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=ca51b49c0a0122b2efd827fa96a656a8b1641efa", "patch": "@@ -3287,24 +3287,6 @@ fn node_ann_type(&@crate_ctxt cx, &ast::ann a) -> ty::t {\n     ret target_type(cx, ty::ann_to_monotype(cx.tcx, cx.node_types, a));\n }\n \n-fn node_ann_ty_params(&ast::ann a) -> vec[ty::t] {\n-    alt (a) {\n-        case (ast::ann_none(_)) {\n-            log_err \"missing type annotation\";\n-            fail;\n-        }\n-        case (ast::ann_type(_, _, ?tps_opt, _)) {\n-            alt (tps_opt) {\n-                case (none[vec[ty::t]]) {\n-                    log_err \"type annotation has no ty params\";\n-                    fail;\n-                }\n-                case (some[vec[ty::t]](?tps)) { ret tps; }\n-            }\n-        }\n-    }\n-}\n-\n fn node_type(&@crate_ctxt cx, &ast::ann a) -> TypeRef {\n     ret type_of(cx, node_ann_type(cx, a));\n }\n@@ -4151,7 +4133,8 @@ fn trans_pat_match(&@block_ctxt cx, &@ast::pat pat, ValueRef llval,\n                                       C_int(variant_tag));\n             cx.build.CondBr(lleq, matched_cx.llbb, next_cx.llbb);\n \n-            auto ty_params = node_ann_ty_params(ann);\n+            auto ty_params = ty::ann_to_type_params(cx.fcx.lcx.ccx.node_types,\n+                                                    ann);\n \n             if (_vec::len[@ast::pat](subpats) > 0u) {\n                 auto llblobptr = matched_cx.build.GEP(lltagptr,\n@@ -4215,7 +4198,8 @@ fn trans_pat_binding(&@block_ctxt cx, &@ast::pat pat,\n                 T_opaque_tag_ptr(cx.fcx.lcx.ccx.tn));\n             auto llblobptr = cx.build.GEP(lltagptr, vec(C_int(0), C_int(1)));\n \n-            auto ty_param_substs = node_ann_ty_params(ann);\n+            auto ty_param_substs =\n+                ty::ann_to_type_params(cx.fcx.lcx.ccx.node_types, ann);\n \n             auto this_cx = cx;\n             auto i = 0;"}]}