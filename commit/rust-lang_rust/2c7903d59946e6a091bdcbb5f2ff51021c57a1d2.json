{"sha": "2c7903d59946e6a091bdcbb5f2ff51021c57a1d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjNzkwM2Q1OTk0NmU2YTA5MWJkY2JiNWYyZmY1MTAyMWM1N2ExZDI=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-17T22:02:17Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-19T18:25:51Z"}, "message": "Consume once fns when calling them (#2549).", "tree": {"sha": "ac168a4b371fc48b07084df054f6ec588c5c2dbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac168a4b371fc48b07084df054f6ec588c5c2dbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c7903d59946e6a091bdcbb5f2ff51021c57a1d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c7903d59946e6a091bdcbb5f2ff51021c57a1d2", "html_url": "https://github.com/rust-lang/rust/commit/2c7903d59946e6a091bdcbb5f2ff51021c57a1d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c7903d59946e6a091bdcbb5f2ff51021c57a1d2/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1120f8c1e57b7b30134d670dd1dfc18c6444c15f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1120f8c1e57b7b30134d670dd1dfc18c6444c15f", "html_url": "https://github.com/rust-lang/rust/commit/1120f8c1e57b7b30134d670dd1dfc18c6444c15f"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "4f31107620ff141fec9cd6302662128567d8258d", "filename": "src/librustc/middle/moves.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2c7903d59946e6a091bdcbb5f2ff51021c57a1d2/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c7903d59946e6a091bdcbb5f2ff51021c57a1d2/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmoves.rs?ref=2c7903d59946e6a091bdcbb5f2ff51021c57a1d2", "patch": "@@ -183,6 +183,7 @@ struct VisitContext {\n     move_maps: MoveMaps\n }\n \n+#[deriving(Eq)]\n enum UseMode {\n     Move,        // This value or something owned by it is moved.\n     Read         // Read no matter what the type.\n@@ -335,7 +336,27 @@ impl VisitContext {\n             }\n \n             expr_call(callee, ref args, _) => {    // callee(args)\n-                self.use_expr(callee, Read, visitor);\n+                // Figure out whether the called function is consumed.\n+                let mode = match ty::get(ty::expr_ty(self.tcx, callee)).sty {\n+                    ty::ty_closure(ref cty) => {\n+                        match cty.onceness {\n+                        Once => Move,\n+                        Many => Read,\n+                        }\n+                    },\n+                    ty::ty_bare_fn(*) => Read,\n+                    ref x =>\n+                        self.tcx.sess.span_bug(callee.span,\n+                            fmt!(\"non-function type in moves for expr_call: %?\", x)),\n+                };\n+                // Note we're not using consume_expr, which uses type_moves_by_default\n+                // to determine the mode, for this. The reason is that while stack\n+                // closures should be noncopyable, they shouldn't move by default;\n+                // calling a closure should only consume it if it's once.\n+                if mode == Move {\n+                    self.move_maps.moves_map.insert(callee.id);\n+                }\n+                self.use_expr(callee, mode, visitor);\n                 self.use_fn_args(callee.id, *args, visitor);\n             }\n "}]}