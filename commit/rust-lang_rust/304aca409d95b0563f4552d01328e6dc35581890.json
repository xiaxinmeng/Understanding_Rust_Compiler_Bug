{"sha": "304aca409d95b0563f4552d01328e6dc35581890", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwNGFjYTQwOWQ5NWIwNTYzZjQ1NTJkMDEzMjhlNmRjMzU1ODE4OTA=", "commit": {"author": {"name": "Kan-Ru Chen", "email": "kanru@kanru.info", "date": "2020-07-24T08:00:10Z"}, "committer": {"name": "Kan-Ru Chen", "email": "kanru@kanru.info", "date": "2020-07-25T09:58:11Z"}, "message": "Ensure stack when type checking and building MIR for large if expressions", "tree": {"sha": "5bd3d15cd92e75345754a2489c243273b6349cb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bd3d15cd92e75345754a2489c243273b6349cb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/304aca409d95b0563f4552d01328e6dc35581890", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/304aca409d95b0563f4552d01328e6dc35581890", "html_url": "https://github.com/rust-lang/rust/commit/304aca409d95b0563f4552d01328e6dc35581890", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/304aca409d95b0563f4552d01328e6dc35581890/comments", "author": {"login": "kanru", "id": 17571, "node_id": "MDQ6VXNlcjE3NTcx", "avatar_url": "https://avatars.githubusercontent.com/u/17571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kanru", "html_url": "https://github.com/kanru", "followers_url": "https://api.github.com/users/kanru/followers", "following_url": "https://api.github.com/users/kanru/following{/other_user}", "gists_url": "https://api.github.com/users/kanru/gists{/gist_id}", "starred_url": "https://api.github.com/users/kanru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kanru/subscriptions", "organizations_url": "https://api.github.com/users/kanru/orgs", "repos_url": "https://api.github.com/users/kanru/repos", "events_url": "https://api.github.com/users/kanru/events{/privacy}", "received_events_url": "https://api.github.com/users/kanru/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kanru", "id": 17571, "node_id": "MDQ6VXNlcjE3NTcx", "avatar_url": "https://avatars.githubusercontent.com/u/17571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kanru", "html_url": "https://github.com/kanru", "followers_url": "https://api.github.com/users/kanru/followers", "following_url": "https://api.github.com/users/kanru/following{/other_user}", "gists_url": "https://api.github.com/users/kanru/gists{/gist_id}", "starred_url": "https://api.github.com/users/kanru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kanru/subscriptions", "organizations_url": "https://api.github.com/users/kanru/orgs", "repos_url": "https://api.github.com/users/kanru/repos", "events_url": "https://api.github.com/users/kanru/events{/privacy}", "received_events_url": "https://api.github.com/users/kanru/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e11fc8053d32c44e7152865852acc5c3c54efb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e11fc8053d32c44e7152865852acc5c3c54efb3", "html_url": "https://github.com/rust-lang/rust/commit/0e11fc8053d32c44e7152865852acc5c3c54efb3"}], "stats": {"total": 10429, "additions": 10427, "deletions": 2}, "files": [{"sha": "36f8034336ba1d856e345798b905fffbc4a76a2d", "filename": "src/librustc_mir_build/build/expr/into.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/304aca409d95b0563f4552d01328e6dc35581890/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/304aca409d95b0563f4552d01328e6dc35581890/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Finto.rs?ref=304aca409d95b0563f4552d01328e6dc35581890", "patch": "@@ -5,6 +5,7 @@ use crate::build::{BlockAnd, BlockAndExtension, BlockFrame, Builder};\n use crate::hair::*;\n use rustc_ast::ast::InlineAsmOptions;\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_data_structures::stack::ensure_sufficient_stack;\n use rustc_hir as hir;\n use rustc_middle::mir::*;\n use rustc_middle::ty::{self, CanonicalUserTypeAnnotation};\n@@ -43,7 +44,11 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         let block_and = match expr.kind {\n             ExprKind::Scope { region_scope, lint_level, value } => {\n                 let region_scope = (region_scope, source_info);\n-                this.in_scope(region_scope, lint_level, |this| this.into(destination, block, value))\n+                ensure_sufficient_stack(|| {\n+                    this.in_scope(region_scope, lint_level, |this| {\n+                        this.into(destination, block, value)\n+                    })\n+                })\n             }\n             ExprKind::Block { body: ast_block } => {\n                 this.ast_block(destination, block, ast_block, source_info)"}, {"sha": "e7eaca62bdd8e31c6fcf5e1fdb861ab221cde7c2", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/304aca409d95b0563f4552d01328e6dc35581890/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/304aca409d95b0563f4552d01328e6dc35581890/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=304aca409d95b0563f4552d01328e6dc35581890", "patch": "@@ -19,6 +19,7 @@ use crate::type_error_struct;\n use rustc_ast::ast;\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_data_structures::stack::ensure_sufficient_stack;\n use rustc_errors::ErrorReported;\n use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder, DiagnosticId};\n use rustc_hir as hir;\n@@ -177,7 +178,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let old_diverges = self.diverges.replace(Diverges::Maybe);\n         let old_has_errors = self.has_errors.replace(false);\n \n-        let ty = self.check_expr_kind(expr, expected);\n+        let ty = ensure_sufficient_stack(|| self.check_expr_kind(expr, expected));\n \n         // Warn for non-block expressions with diverging children.\n         match expr.kind {"}, {"sha": "36e9932602fb035ae668baa819915bbb57b88f7a", "filename": "src/test/ui/issues/issue-74564-if-expr-stack-overflow.rs", "status": "added", "additions": 10419, "deletions": 0, "changes": 10419, "blob_url": "https://github.com/rust-lang/rust/blob/304aca409d95b0563f4552d01328e6dc35581890/src%2Ftest%2Fui%2Fissues%2Fissue-74564-if-expr-stack-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/304aca409d95b0563f4552d01328e6dc35581890/src%2Ftest%2Fui%2Fissues%2Fissue-74564-if-expr-stack-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-74564-if-expr-stack-overflow.rs?ref=304aca409d95b0563f4552d01328e6dc35581890"}]}