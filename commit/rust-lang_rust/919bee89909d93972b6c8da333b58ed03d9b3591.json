{"sha": "919bee89909d93972b6c8da333b58ed03d9b3591", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxOWJlZTg5OTA5ZDkzOTcyYjZjOGRhMzMzYjU4ZWQwM2Q5YjM1OTE=", "commit": {"author": {"name": "Christian Duerr", "email": "contact@christianduerr.com", "date": "2019-03-30T17:37:37Z"}, "committer": {"name": "Christian Duerr", "email": "contact@christianduerr.com", "date": "2019-03-30T17:37:37Z"}, "message": "Enable overflow_delimited_expr for structs\n\nThis fixes https://github.com/rust-lang/rustfmt/issues/3482.", "tree": {"sha": "c92e2365e33142e8b8d99496ac56def29c518e8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c92e2365e33142e8b8d99496ac56def29c518e8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/919bee89909d93972b6c8da333b58ed03d9b3591", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEETapnqeqLkfzBW2mchc2uPBZLp7QFAlyfqYQACgkQhc2uPBZL\np7TE6gf9GK/IYdEDfT3sWTjrNe25jVPNJi6umW707H3/z6rc6C7wris/ASXFOzc0\nX6TL7itgOKTprqmRFXHnQLymFPI6Cn6LSwE1NBXyhZYmPiDbfNTFByl7XIb45SS8\nVnlhNoeqJQAUgftFXfebLUbT3ImrIo2zbFyZ2Q4E5XfVeoVFgQg5X1kTm0fI5suP\nhOoRRHJuH+TqN7t4JJZUqCE1oHZ4ogkijW6WR3o5OtOcG1hkyLW/frPCLw/qpiKH\nWDxYn7ATk9zQywFnEAK3dwzUWSwfA15oe1eETVNxnR2bu5RHA5ncNIGRrmdwwhZU\nNSUV07UQe/yPpayUG+TeBC1nfMh6Nw==\n=Aqil\n-----END PGP SIGNATURE-----", "payload": "tree c92e2365e33142e8b8d99496ac56def29c518e8a\nparent dfa94d150555da40780413d7f1a1378565208c99\nauthor Christian Duerr <contact@christianduerr.com> 1553967457 +0100\ncommitter Christian Duerr <contact@christianduerr.com> 1553967457 +0100\n\nEnable overflow_delimited_expr for structs\n\nThis fixes https://github.com/rust-lang/rustfmt/issues/3482.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/919bee89909d93972b6c8da333b58ed03d9b3591", "html_url": "https://github.com/rust-lang/rust/commit/919bee89909d93972b6c8da333b58ed03d9b3591", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/919bee89909d93972b6c8da333b58ed03d9b3591/comments", "author": {"login": "chrisduerr", "id": 8886672, "node_id": "MDQ6VXNlcjg4ODY2NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/8886672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisduerr", "html_url": "https://github.com/chrisduerr", "followers_url": "https://api.github.com/users/chrisduerr/followers", "following_url": "https://api.github.com/users/chrisduerr/following{/other_user}", "gists_url": "https://api.github.com/users/chrisduerr/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisduerr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisduerr/subscriptions", "organizations_url": "https://api.github.com/users/chrisduerr/orgs", "repos_url": "https://api.github.com/users/chrisduerr/repos", "events_url": "https://api.github.com/users/chrisduerr/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisduerr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chrisduerr", "id": 8886672, "node_id": "MDQ6VXNlcjg4ODY2NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/8886672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisduerr", "html_url": "https://github.com/chrisduerr", "followers_url": "https://api.github.com/users/chrisduerr/followers", "following_url": "https://api.github.com/users/chrisduerr/following{/other_user}", "gists_url": "https://api.github.com/users/chrisduerr/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisduerr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisduerr/subscriptions", "organizations_url": "https://api.github.com/users/chrisduerr/orgs", "repos_url": "https://api.github.com/users/chrisduerr/repos", "events_url": "https://api.github.com/users/chrisduerr/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisduerr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfa94d150555da40780413d7f1a1378565208c99", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfa94d150555da40780413d7f1a1378565208c99", "html_url": "https://github.com/rust-lang/rust/commit/dfa94d150555da40780413d7f1a1378565208c99"}], "stats": {"total": 104, "additions": 104, "deletions": 0}, "files": [{"sha": "f383eaca36fea99b64f0b59b4103eac94b40ef30", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/919bee89909d93972b6c8da333b58ed03d9b3591/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/919bee89909d93972b6c8da333b58ed03d9b3591/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=919bee89909d93972b6c8da333b58ed03d9b3591", "patch": "@@ -1346,6 +1346,7 @@ pub fn can_be_overflowed_expr(\n         ast::ExprKind::Match(..) => {\n             (context.use_block_indent() && args_len == 1)\n                 || (context.config.indent_style() == IndentStyle::Visual && args_len > 1)\n+                || context.config.overflow_delimited_expr()\n         }\n         ast::ExprKind::If(..)\n         | ast::ExprKind::IfLet(..)"}, {"sha": "91275a89429477bb915ca9c2757a55fd88c56e13", "filename": "tests/source/match_overflow_expr.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/919bee89909d93972b6c8da333b58ed03d9b3591/tests%2Fsource%2Fmatch_overflow_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/919bee89909d93972b6c8da333b58ed03d9b3591/tests%2Fsource%2Fmatch_overflow_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmatch_overflow_expr.rs?ref=919bee89909d93972b6c8da333b58ed03d9b3591", "patch": "@@ -0,0 +1,53 @@\n+// rustfmt-overflow_delimited_expr: true\n+\n+fn main() {\n+    println!(\n+        \"Foobar: {}\",\n+        match \"input\" {\n+            \"a\" => \"\",\n+            \"b\" => \"\",\n+            \"c\" => \"\",\n+            \"d\" => \"\",\n+            \"e\" => \"\",\n+            \"f\" => \"\",\n+            \"g\" => \"\",\n+            \"h\" => \"\",\n+            \"i\" => \"\",\n+            \"j\" => \"\",\n+            \"k\" => \"\",\n+            \"l\" => \"\",\n+            \"m\" => \"\",\n+            \"n\" => \"\",\n+            \"o\" => \"\",\n+            \"p\" => \"\",\n+            \"q\" => \"\",\n+            \"r\" => \"Rust\",\n+        }\n+    );\n+}\n+\n+fn main() {\n+    println!(\n+        \"Very Long Input String Which Makes It Impossible To Fit On The Same Line: {}\",\n+        match \"input\" {\n+            \"a\" => \"\",\n+            \"b\" => \"\",\n+            \"c\" => \"\",\n+            \"d\" => \"\",\n+            \"e\" => \"\",\n+            \"f\" => \"\",\n+            \"g\" => \"\",\n+            \"h\" => \"\",\n+            \"i\" => \"\",\n+            \"j\" => \"\",\n+            \"k\" => \"\",\n+            \"l\" => \"\",\n+            \"m\" => \"\",\n+            \"n\" => \"\",\n+            \"o\" => \"\",\n+            \"p\" => \"\",\n+            \"q\" => \"\",\n+            \"r\" => \"Rust\",\n+        }\n+    );\n+}"}, {"sha": "b817879d1f482bbf8abb3e4e9e8ea30abf4267f6", "filename": "tests/target/match_overflow_expr.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/919bee89909d93972b6c8da333b58ed03d9b3591/tests%2Ftarget%2Fmatch_overflow_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/919bee89909d93972b6c8da333b58ed03d9b3591/tests%2Ftarget%2Fmatch_overflow_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch_overflow_expr.rs?ref=919bee89909d93972b6c8da333b58ed03d9b3591", "patch": "@@ -0,0 +1,50 @@\n+// rustfmt-overflow_delimited_expr: true\n+\n+fn main() {\n+    println!(\"Foobar: {}\", match \"input\" {\n+        \"a\" => \"\",\n+        \"b\" => \"\",\n+        \"c\" => \"\",\n+        \"d\" => \"\",\n+        \"e\" => \"\",\n+        \"f\" => \"\",\n+        \"g\" => \"\",\n+        \"h\" => \"\",\n+        \"i\" => \"\",\n+        \"j\" => \"\",\n+        \"k\" => \"\",\n+        \"l\" => \"\",\n+        \"m\" => \"\",\n+        \"n\" => \"\",\n+        \"o\" => \"\",\n+        \"p\" => \"\",\n+        \"q\" => \"\",\n+        \"r\" => \"Rust\",\n+    });\n+}\n+\n+fn main() {\n+    println!(\n+        \"Very Long Input String Which Makes It Impossible To Fit On The Same Line: {}\",\n+        match \"input\" {\n+            \"a\" => \"\",\n+            \"b\" => \"\",\n+            \"c\" => \"\",\n+            \"d\" => \"\",\n+            \"e\" => \"\",\n+            \"f\" => \"\",\n+            \"g\" => \"\",\n+            \"h\" => \"\",\n+            \"i\" => \"\",\n+            \"j\" => \"\",\n+            \"k\" => \"\",\n+            \"l\" => \"\",\n+            \"m\" => \"\",\n+            \"n\" => \"\",\n+            \"o\" => \"\",\n+            \"p\" => \"\",\n+            \"q\" => \"\",\n+            \"r\" => \"Rust\",\n+        }\n+    );\n+}"}]}