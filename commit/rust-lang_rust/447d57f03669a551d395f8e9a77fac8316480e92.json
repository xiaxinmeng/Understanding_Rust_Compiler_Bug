{"sha": "447d57f03669a551d395f8e9a77fac8316480e92", "node_id": "C_kwDOAAsO6NoAKDQ0N2Q1N2YwMzY2OWE1NTFkMzk1ZjhlOWE3N2ZhYzgzMTY0ODBlOTI", "commit": {"author": {"name": "mejrs", "email": "", "date": "2022-10-24T21:19:48Z"}, "committer": {"name": "mejrs", "email": "", "date": "2022-10-24T21:19:48Z"}, "message": "Add more normalization and tests", "tree": {"sha": "49bdf31be298ce1b71906a95c2277bec3791e47a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49bdf31be298ce1b71906a95c2277bec3791e47a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/447d57f03669a551d395f8e9a77fac8316480e92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/447d57f03669a551d395f8e9a77fac8316480e92", "html_url": "https://github.com/rust-lang/rust/commit/447d57f03669a551d395f8e9a77fac8316480e92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/447d57f03669a551d395f8e9a77fac8316480e92/comments", "author": {}, "committer": {}, "parents": [{"sha": "854b3166a05916f01b6a7cb9c09fc7c8d26697ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/854b3166a05916f01b6a7cb9c09fc7c8d26697ad", "html_url": "https://github.com/rust-lang/rust/commit/854b3166a05916f01b6a7cb9c09fc7c8d26697ad"}], "stats": {"total": 111, "additions": 101, "deletions": 10}, "files": [{"sha": "3da80adbf448c7f4ece280d2d3769b2ccadb481c", "filename": "src/test/rustdoc-ui/track-diagnostics.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.rs?ref=447d57f03669a551d395f8e9a77fac8316480e92", "patch": "@@ -1,6 +1,10 @@\n // compile-flags: -Z track-diagnostics\n // error-pattern: created at\n \n+// Normalize the emitted location so this doesn't need\n+// updating everytime someone adds or removes a line.\n+// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:$$LINE::$$COL\"\n+\n struct A;\n struct B;\n const S: A = B;"}, {"sha": "5a0982ff731a7af3a8f40c6819309261d006b210", "filename": "src/test/rustdoc-ui/track-diagnostics.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.stderr?ref=447d57f03669a551d395f8e9a77fac8316480e92", "patch": "@@ -1,9 +1,9 @@\n error[E0308]: mismatched types\n-  --> $DIR/track-diagnostics.rs:6:14\n+  --> $DIR/track-diagnostics.rs:$LINE::$COL\n    |\n LL | const S: A = B;\n    |              ^ expected struct `A`, found struct `B`\n--Ztrack-diagnostics: created at compiler/rustc_infer/src/infer/error_reporting/mod.rs:2275:31\n+-Ztrack-diagnostics: created at compiler/rustc_infer/src/infer/error_reporting/mod.rs:$LINE::$COL\n \n error: aborting due to previous error\n "}, {"sha": "d9d1965145661eb4ca3fde762fcd123f3baabb30", "filename": "src/test/rustdoc-ui/z-help.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout?ref=447d57f03669a551d395f8e9a77fac8316480e92", "patch": "@@ -170,7 +170,7 @@\n     -Z                             time-passes=val -- measure time of each rustc pass (default: no)\n     -Z                               tls-model=val -- choose the TLS model to use (`rustc --print tls-models` for details)\n     -Z                            trace-macros=val -- for every macro invocation, print its name and arguments (default: no)\n-    -Z                       track-diagnostics=val -- Tracks where in rustc a diagnostic was emitted\n+    -Z                       track-diagnostics=val -- tracks where in rustc a diagnostic was emitted\n     -Z                translate-additional-ftl=val -- additional fluent translation to preferentially use (for testing translation)\n     -Z        translate-directionality-markers=val -- emit directionality isolation markers in translated diagnostics\n     -Z                          translate-lang=val -- language identifier for diagnostic output"}, {"sha": "23c0c8c4ed8f9e3d677b03dd580aeb902d30f687", "filename": "src/test/ui/track-diagnostics/track.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack.rs?ref=447d57f03669a551d395f8e9a77fac8316480e92", "patch": "@@ -1,6 +1,11 @@\n // compile-flags: -Z track-diagnostics\n // error-pattern: created at\n \n+// Normalize the emitted location so this doesn't need\n+// updating everytime someone adds or removes a line.\n+// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:$$LINE::$$COL\"\n+// normalize-stderr-test \"note: rustc .+ running on .+\" -> \"note: rustc $$VERSION running on $$TARGET\"\n+\n fn main() {\n     break rust\n }"}, {"sha": "ed5c70b5a06e0127cfd5fdc86010347b07f7d244", "filename": "src/test/ui/track-diagnostics/track.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack.stderr?ref=447d57f03669a551d395f8e9a77fac8316480e92", "patch": "@@ -1,24 +1,24 @@\n error[E0425]: cannot find value `rust` in this scope\n-  --> $DIR/track.rs:5:11\n+  --> $DIR/track.rs:$LINE::$COL\n    |\n LL |     break rust\n    |           ^^^^ not found in this scope\n--Ztrack-diagnostics: created at compiler/rustc_resolve/src/late/diagnostics.rs:289:28\n+-Ztrack-diagnostics: created at compiler/rustc_resolve/src/late/diagnostics.rs:$LINE::$COL\n \n error[E0268]: `break` outside of a loop\n-  --> $DIR/track.rs:5:5\n+  --> $DIR/track.rs:$LINE::$COL\n    |\n LL |     break rust\n    |     ^^^^^^^^^^ cannot `break` outside of a loop\n--Ztrack-diagnostics: created at compiler/rustc_passes/src/errors.rs:957:10\n+-Ztrack-diagnostics: created at compiler/rustc_passes/src/errors.rs:$LINE::$COL\n \n error: internal compiler error: It looks like you're trying to break rust; would you like some ICE?\n \n note: the compiler expectedly panicked. this is a feature.\n \n note: we would appreciate a joke overview: https://github.com/rust-lang/rust/issues/43162#issuecomment-320764675\n \n-note: rustc 1.66.0-dev running on x86_64-pc-windows-msvc\n+note: rustc $VERSION running on $TARGET\n \n error: aborting due to 3 previous errors\n "}, {"sha": "45afd081566ff03a80a546d0df7e3f5d8d5830fe", "filename": "src/test/ui/track-diagnostics/track2.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack2.rs?ref=447d57f03669a551d395f8e9a77fac8316480e92", "patch": "@@ -0,0 +1,10 @@\n+// compile-flags: -Z track-diagnostics\n+// error-pattern: created at\n+\n+// Normalize the emitted location so this doesn't need\n+// updating everytime someone adds or removes a line.\n+// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:$$LINE::$$COL\"\n+\n+fn main() {\n+    let _moved @ _from = String::from(\"foo\");\n+}"}, {"sha": "28d17f1e141f7cc9f4664926bd8d51d7b4ddfe59", "filename": "src/test/ui/track-diagnostics/track2.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack2.stderr?ref=447d57f03669a551d395f8e9a77fac8316480e92", "patch": "@@ -0,0 +1,13 @@\n+error[E0382]: use of moved value\n+  --> $DIR/track2.rs:$LINE::$COL\n+   |\n+LL |     let _moved @ _from = String::from(\"foo\");\n+   |         ^^^^^^   -----   ------------------- move occurs because value has type `String`, which does not implement the `Copy` trait\n+   |         |        |\n+   |         |        value moved here\n+   |         value used here after move\n+-Ztrack-diagnostics: created at compiler/rustc_borrowck/src/borrowck_errors.rs:$LINE::$COL\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0382`."}, {"sha": "e9316a421890c8ed9e3a1d770abe36427199ef4a", "filename": "src/test/ui/track-diagnostics/track3.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack3.rs?ref=447d57f03669a551d395f8e9a77fac8316480e92", "patch": "@@ -0,0 +1,10 @@\n+// compile-flags: -Z track-diagnostics\n+// error-pattern: created at\n+\n+// Normalize the emitted location so this doesn't need\n+// updating everytime someone adds or removes a line.\n+// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:$$LINE::$$COL\"\n+\n+fn main() {\n+    let _unimported = Blah { field: u8 };\n+}"}, {"sha": "005380df4306a9b678cc4274b37430a08b3ba48f", "filename": "src/test/ui/track-diagnostics/track3.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack3.stderr?ref=447d57f03669a551d395f8e9a77fac8316480e92", "patch": "@@ -0,0 +1,18 @@\n+error[E0422]: cannot find struct, variant or union type `Blah` in this scope\n+  --> $DIR/track3.rs:$LINE::$COL\n+   |\n+LL |     let _unimported = Blah { field: u8 };\n+   |                       ^^^^ not found in this scope\n+-Ztrack-diagnostics: created at compiler/rustc_resolve/src/late/diagnostics.rs:$LINE::$COL\n+\n+error[E0423]: expected value, found builtin type `u8`\n+  --> $DIR/track3.rs:$LINE::$COL\n+   |\n+LL |     let _unimported = Blah { field: u8 };\n+   |                                     ^^ not a value\n+-Ztrack-diagnostics: created at compiler/rustc_resolve/src/late/diagnostics.rs:$LINE::$COL\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0422, E0423.\n+For more information about an error, try `rustc --explain E0422`."}, {"sha": "065cc604604c98f4f8d16c62315613c959bf37b1", "filename": "src/test/ui/track-diagnostics/track4.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack4.rs?ref=447d57f03669a551d395f8e9a77fac8316480e92", "patch": "@@ -0,0 +1,13 @@\n+// compile-flags: -Z track-diagnostics\n+// error-pattern: created at\n+\n+// Normalize the emitted location so this doesn't need\n+// updating everytime someone adds or removes a line.\n+// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:$$LINE::$$COL\"\n+\n+pub onion {\n+    Owo(u8),\n+    Uwu(i8),\n+}\n+\n+fn main() {}"}, {"sha": "e0cedcee0d37e8021eebe8e7e4f56c3e6d459a64", "filename": "src/test/ui/track-diagnostics/track4.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack4.stderr?ref=447d57f03669a551d395f8e9a77fac8316480e92", "patch": "@@ -0,0 +1,14 @@\n+error: missing `struct` for struct definition\n+  --> $DIR/track4.rs:$LINE::$COL\n+   |\n+LL | pub onion {\n+   |    ^\n+-Ztrack-diagnostics: created at compiler/rustc_parse/src/parser/diagnostics.rs:$LINE::$COL\n+   |\n+help: add `struct` here to parse `onion` as a public struct\n+   |\n+LL | pub struct onion {\n+   |     ++++++\n+\n+error: aborting due to previous error\n+"}, {"sha": "550ccd7b3d364756c12b48894b816772e9405ce4", "filename": "src/tools/clippy/tests/ui/track-diagnostics.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.rs?ref=447d57f03669a551d395f8e9a77fac8316480e92", "patch": "@@ -1,6 +1,10 @@\n // compile-flags: -Z track-diagnostics\n // error-pattern: created at\n \n+// Normalize the emitted location so this doesn't need\n+// updating everytime someone adds or removes a line.\n+// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:$$LINE::$$COL\"\n+\n struct A;\n struct B;\n const S: A = B;"}, {"sha": "5a0982ff731a7af3a8f40c6819309261d006b210", "filename": "src/tools/clippy/tests/ui/track-diagnostics.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/447d57f03669a551d395f8e9a77fac8316480e92/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.stderr?ref=447d57f03669a551d395f8e9a77fac8316480e92", "patch": "@@ -1,9 +1,9 @@\n error[E0308]: mismatched types\n-  --> $DIR/track-diagnostics.rs:6:14\n+  --> $DIR/track-diagnostics.rs:$LINE::$COL\n    |\n LL | const S: A = B;\n    |              ^ expected struct `A`, found struct `B`\n--Ztrack-diagnostics: created at compiler/rustc_infer/src/infer/error_reporting/mod.rs:2275:31\n+-Ztrack-diagnostics: created at compiler/rustc_infer/src/infer/error_reporting/mod.rs:$LINE::$COL\n \n error: aborting due to previous error\n "}]}