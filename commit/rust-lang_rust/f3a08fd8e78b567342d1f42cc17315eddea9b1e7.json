{"sha": "f3a08fd8e78b567342d1f42cc17315eddea9b1e7", "node_id": "C_kwDOAAsO6NoAKGYzYTA4ZmQ4ZTc4YjU2NzM0MmQxZjQyY2MxNzMxNWVkZGVhOWIxZTc", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2021-12-11T16:32:15Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2021-12-12T10:14:10Z"}, "message": "Avoid suggesting self in visibility spec\n\nCo-authored-by: Esteban Kuber <estebank@users.noreply.github.com>", "tree": {"sha": "bc0a0afb62a206118de431ddebd431863ac54538", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc0a0afb62a206118de431ddebd431863ac54538"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3a08fd8e78b567342d1f42cc17315eddea9b1e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3a08fd8e78b567342d1f42cc17315eddea9b1e7", "html_url": "https://github.com/rust-lang/rust/commit/f3a08fd8e78b567342d1f42cc17315eddea9b1e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3a08fd8e78b567342d1f42cc17315eddea9b1e7/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9a37ad0d995c71518629b032f8e816e1efa8bca", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9a37ad0d995c71518629b032f8e816e1efa8bca", "html_url": "https://github.com/rust-lang/rust/commit/b9a37ad0d995c71518629b032f8e816e1efa8bca"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "f3891723e97b767b752fc7817b5b6e1b7d4cc7a5", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f3a08fd8e78b567342d1f42cc17315eddea9b1e7/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3a08fd8e78b567342d1f42cc17315eddea9b1e7/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=f3a08fd8e78b567342d1f42cc17315eddea9b1e7", "patch": "@@ -298,11 +298,16 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                             .get(0)\n                             .map(|p| (p.span.shrink_to_lo(), \"&self, \"))\n                             .unwrap_or_else(|| {\n+                                // Try to look for the \"(\" after the function name, if possible.\n+                                // This avoids placing the suggestion into the visibility specifier.\n+                                let span = fn_kind\n+                                    .ident()\n+                                    .map_or(*span, |ident| span.with_lo(ident.span.hi()));\n                                 (\n                                     self.r\n                                         .session\n                                         .source_map()\n-                                        .span_through_char(*span, '(')\n+                                        .span_through_char(span, '(')\n                                         .shrink_to_hi(),\n                                     \"&self\",\n                                 )"}, {"sha": "40692c8df2053524b9320a81c144d2b040929ecb", "filename": "src/test/ui/suggestions/suggest-add-self.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f3a08fd8e78b567342d1f42cc17315eddea9b1e7/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-add-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3a08fd8e78b567342d1f42cc17315eddea9b1e7/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-add-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-add-self.rs?ref=f3a08fd8e78b567342d1f42cc17315eddea9b1e7", "patch": "@@ -0,0 +1,15 @@\n+struct X(i32);\n+\n+impl X {\n+    pub(crate) fn f() {\n+        self.0\n+        //~^ ERROR expected value, found module `self`\n+    }\n+\n+    pub fn g() {\n+        self.0\n+        //~^ ERROR expected value, found module `self`\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "a5e8f93deb64a7334a42c98d60d0ebd95363d5d3", "filename": "src/test/ui/suggestions/suggest-add-self.stderr", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f3a08fd8e78b567342d1f42cc17315eddea9b1e7/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-add-self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3a08fd8e78b567342d1f42cc17315eddea9b1e7/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-add-self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-add-self.stderr?ref=f3a08fd8e78b567342d1f42cc17315eddea9b1e7", "patch": "@@ -0,0 +1,29 @@\n+error[E0424]: expected value, found module `self`\n+  --> $DIR/suggest-add-self.rs:5:9\n+   |\n+LL |     pub(crate) fn f() {\n+   |                   - this function doesn't have a `self` parameter\n+LL |         self.0\n+   |         ^^^^ `self` value is a keyword only available in methods with a `self` parameter\n+   |\n+help: add a `self` receiver parameter to make the associated `fn` a method\n+   |\n+LL |     pub(crate) fn f(&self) {\n+   |                     +++++\n+\n+error[E0424]: expected value, found module `self`\n+  --> $DIR/suggest-add-self.rs:10:9\n+   |\n+LL |     pub fn g() {\n+   |            - this function doesn't have a `self` parameter\n+LL |         self.0\n+   |         ^^^^ `self` value is a keyword only available in methods with a `self` parameter\n+   |\n+help: add a `self` receiver parameter to make the associated `fn` a method\n+   |\n+LL |     pub fn g(&self) {\n+   |              +++++\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0424`."}]}