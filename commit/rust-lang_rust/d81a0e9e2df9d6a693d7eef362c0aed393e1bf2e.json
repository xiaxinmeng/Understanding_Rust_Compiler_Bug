{"sha": "d81a0e9e2df9d6a693d7eef362c0aed393e1bf2e", "node_id": "C_kwDOAAsO6NoAKGQ4MWEwZTllMmRmOWQ2YTY5M2Q3ZWVmMzYyYzBhZWQzOTNlMWJmMmU", "commit": {"author": {"name": "Neutron3529", "email": "qweytr_1@163.com", "date": "2022-11-04T07:37:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-04T07:37:33Z"}, "message": "update comment", "tree": {"sha": "01986722f76893f8413b851a273d5d4fa04f6606", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01986722f76893f8413b851a273d5d4fa04f6606"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d81a0e9e2df9d6a693d7eef362c0aed393e1bf2e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjZME9CRBK7hj4Ov3rIwAAfsIIAEJ07c6ftx+ADb5yCN0rhL0D\nidyAMvx5H81CCzZozPTKJXfAdSINTwQD0/tXe26ksDSQIqYfwcl9uePY9Y6LktUL\n2C2MQ+davx9weBqFPHr9eio/CRBCm9VwMbM9AMo+Qdkia5Rm/dip5IogJ4Sk9suy\njwgDFUWQ6M/c+rQ05Kd3knpDiaJzBZbJmLH5O2haMtP5zS+8gaTG2dBSNIZJUkpt\nCL3bKa0/ggSBfeGKyM4N/7Kv5hiO6T0iNKpljBhbcSoTnobJl/0HZhGHQr0zvTmq\n42kKi+1ogRzvAJdhpYeY2iHxABCTJs80bZUhMVV2qYalShTpDxOKNKcCYlVp8zY=\n=2oOM\n-----END PGP SIGNATURE-----\n", "payload": "tree 01986722f76893f8413b851a273d5d4fa04f6606\nparent aafe6db079ab22225f89fc573e4e86e89e8d825a\nauthor Neutron3529 <qweytr_1@163.com> 1667547453 +0800\ncommitter GitHub <noreply@github.com> 1667547453 +0800\n\nupdate comment"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d81a0e9e2df9d6a693d7eef362c0aed393e1bf2e", "html_url": "https://github.com/rust-lang/rust/commit/d81a0e9e2df9d6a693d7eef362c0aed393e1bf2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d81a0e9e2df9d6a693d7eef362c0aed393e1bf2e/comments", "author": {"login": "Neutron3529", "id": 26130174, "node_id": "MDQ6VXNlcjI2MTMwMTc0", "avatar_url": "https://avatars.githubusercontent.com/u/26130174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neutron3529", "html_url": "https://github.com/Neutron3529", "followers_url": "https://api.github.com/users/Neutron3529/followers", "following_url": "https://api.github.com/users/Neutron3529/following{/other_user}", "gists_url": "https://api.github.com/users/Neutron3529/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neutron3529/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neutron3529/subscriptions", "organizations_url": "https://api.github.com/users/Neutron3529/orgs", "repos_url": "https://api.github.com/users/Neutron3529/repos", "events_url": "https://api.github.com/users/Neutron3529/events{/privacy}", "received_events_url": "https://api.github.com/users/Neutron3529/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aafe6db079ab22225f89fc573e4e86e89e8d825a", "url": "https://api.github.com/repos/rust-lang/rust/commits/aafe6db079ab22225f89fc573e4e86e89e8d825a", "html_url": "https://github.com/rust-lang/rust/commit/aafe6db079ab22225f89fc573e4e86e89e8d825a"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "a6deb3f65ec5daf4e0883ab4e294e27dad4714d2", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d81a0e9e2df9d6a693d7eef362c0aed393e1bf2e/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d81a0e9e2df9d6a693d7eef362c0aed393e1bf2e/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=d81a0e9e2df9d6a693d7eef362c0aed393e1bf2e", "patch": "@@ -2068,10 +2068,14 @@ macro_rules! int_impl {\n         pub const fn rem_euclid(self, rhs: Self) -> Self {\n             let r = self % rhs;\n             if r < 0 {\n-                // if rhs is `integer::MIN`, rhs.wrapping_abs() == rhs.wrapping_abs,\n-                // thus r.wrapping_add(rhs.wrapping_abs()) == r.wrapping_add(rhs) == r - rhs,\n-                // which suits our need.\n-                // otherwise, rhs.wrapping_abs() == -rhs, which won't overflow since r is negative.\n+                // Semantically equivalent to `if rhs < 0 { r - rhs } else { r + rhs }`.\n+                // If `rhs` is not `Self::MIN`, then `r + abs(rhs)` will not overflow\n+                // and is clearly equivalent, because `r` is negative.\n+                // Otherwise, `rhs` is `Self::MIN`, then we have\n+                // `r.wrapping_add(Self::MIN.wrapping_abs())`, which evaluates\n+                // to `r.wrapping_add(Self::MIN)`, which is equivalent to\n+                // `r - Self::MIN`, which is what we wanted (and will not overflow\n+                // for negative `r`).\n                 r.wrapping_add(rhs.wrapping_abs())\n             } else {\n                 r"}]}