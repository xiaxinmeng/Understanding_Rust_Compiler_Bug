{"sha": "30e933cd794b90d2ea9164112dcf20c23c1eba5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwZTkzM2NkNzk0YjkwZDJlYTkxNjQxMTJkY2YyMGMyM2MxZWJhNWY=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-11-20T20:57:44Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-11-27T14:23:49Z"}, "message": "Extract trait_may_define_assoc_type helper function", "tree": {"sha": "ef1e30d17aee4f10a81df605240eb2ee94bd8c93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef1e30d17aee4f10a81df605240eb2ee94bd8c93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30e933cd794b90d2ea9164112dcf20c23c1eba5f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAl/BC/UACgkQgTGiTgx5\n768Ltw//UGqRI5hxwd/lgf6A+nCAin8veznejs9qePyF5VgsAf5kybkgna+LIpnE\nIGLCSkVCdyGvGOhaUDlRHDhUaMaFZ7PcUpFP2j+x8VldJsansvj8X6MGB/XWKBpP\nF0z3VToKDTN1X2di7X7+h37XBlB0b3tHpgKVn6C4RcCHK6QcFEQJcFRYv6YYlfHq\nc6bqdHOdDKRZuhuSWIf+oNfqDBDb9TYyc6X5GeLWqoZ5yp2orNJ9/pYVBJSR8s4L\nBye8huRCOEkEBnOXJBnJIiEsTwcgEzbZphQQBGr9UT6LOnnJvBb5T9sLgMq/fsJu\n/Qs2hWbFZTXL1kinnYynZ/vnN0bBrIhSNwomNX2VyQ26oesezajIFZA1L7tPWRHz\nesu1wtXHnDd8+nwnKDHN2NfKFMoHX2AfTbGnIkLZHU5FQA1jwE5f7pvwSFLRLa9N\njx8/ZRX8pjrOa8ol5dB7BB1s/RCdqgMuz3TzH7TEsbEjSleeaHd23W7kIvDE5iSL\nGIMrBtW8d5aqfBXgt1LJXUCelbIw6k6rmk1CNWdo9UthTtX8qXYuc9MqNiwDmUr/\nB8vFxjwJrgDQxtSxseyRm5ONb+NJ0wClckltpEao/Ag9mSTE53q9mjavX5uJjwA0\nArA6l/uCoxvPhFwyit+7djBNMkOw/noU5LPdXDOruZe9xtrgMyI=\n=T+Lf\n-----END PGP SIGNATURE-----", "payload": "tree ef1e30d17aee4f10a81df605240eb2ee94bd8c93\nparent aa1cafd4079c9f246d495addd6c23cc47b266a8b\nauthor Santiago Pastorino <spastorino@gmail.com> 1605905864 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1606487029 -0300\n\nExtract trait_may_define_assoc_type helper function\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30e933cd794b90d2ea9164112dcf20c23c1eba5f", "html_url": "https://github.com/rust-lang/rust/commit/30e933cd794b90d2ea9164112dcf20c23c1eba5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30e933cd794b90d2ea9164112dcf20c23c1eba5f/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa1cafd4079c9f246d495addd6c23cc47b266a8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa1cafd4079c9f246d495addd6c23cc47b266a8b", "html_url": "https://github.com/rust-lang/rust/commit/aa1cafd4079c9f246d495addd6c23cc47b266a8b"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "3cb85250e2a4ca6392f2725409a6d9a3e42e5690", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/30e933cd794b90d2ea9164112dcf20c23c1eba5f/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30e933cd794b90d2ea9164112dcf20c23c1eba5f/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=30e933cd794b90d2ea9164112dcf20c23c1eba5f", "patch": "@@ -910,17 +910,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         for ast_bound in ast_bounds {\n             if let Some(trait_ref) = ast_bound.trait_ref() {\n                 if let Some(trait_did) = trait_ref.trait_def_id() {\n-                    if super_traits_of(self.tcx(), trait_did).any(|trait_did| {\n-                        self.tcx()\n-                            .associated_items(trait_did)\n-                            .find_by_name_and_kind(\n-                                self.tcx(),\n-                                assoc_name,\n-                                ty::AssocKind::Type,\n-                                trait_did,\n-                            )\n-                            .is_some()\n-                    }) {\n+                    if self.trait_may_define_assoc_type(trait_did, assoc_name) {\n                         result.push(ast_bound);\n                     }\n                 }\n@@ -930,6 +920,17 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         self.compute_bounds(param_ty, &result, sized_by_default, span)\n     }\n \n+    /// Given the def_id of a Trait `trait_def_id` and the name of an associated item `assoc_name`\n+    /// returns true if the `trait_def_id` defines an associated item of name `assoc_name`.\n+    fn trait_may_define_assoc_type(&self, trait_def_id: DefId, assoc_name: Ident) -> bool {\n+        super_traits_of(self.tcx(), trait_def_id).any(|trait_did| {\n+            self.tcx()\n+                .associated_items(trait_did)\n+                .find_by_name_and_kind(self.tcx(), assoc_name, ty::AssocKind::Type, trait_did)\n+                .is_some()\n+        })\n+    }\n+\n     /// Given an HIR binding like `Item = Foo` or `Item: Foo`, pushes the corresponding predicates\n     /// onto `bounds`.\n     ///"}]}