{"sha": "e5d8c855079e08e1aab2cf7b4e5110159ad8fa53", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ZDhjODU1MDc5ZTA4ZTFhYWIyY2Y3YjRlNTExMDE1OWFkOGZhNTM=", "commit": {"author": {"name": "Valerii Hiora", "email": "valerii.hiora@gmail.com", "date": "2014-12-19T14:11:26Z"}, "committer": {"name": "Valerii Hiora", "email": "valerii.hiora@gmail.com", "date": "2014-12-19T14:34:01Z"}, "message": "iOS: fallout of runtime removal", "tree": {"sha": "5683d070b8407da7f5c8c2c6843cefc2c98142cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5683d070b8407da7f5c8c2c6843cefc2c98142cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5d8c855079e08e1aab2cf7b4e5110159ad8fa53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5d8c855079e08e1aab2cf7b4e5110159ad8fa53", "html_url": "https://github.com/rust-lang/rust/commit/e5d8c855079e08e1aab2cf7b4e5110159ad8fa53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5d8c855079e08e1aab2cf7b4e5110159ad8fa53/comments", "author": {"login": "vhbit", "id": 140199, "node_id": "MDQ6VXNlcjE0MDE5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/140199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vhbit", "html_url": "https://github.com/vhbit", "followers_url": "https://api.github.com/users/vhbit/followers", "following_url": "https://api.github.com/users/vhbit/following{/other_user}", "gists_url": "https://api.github.com/users/vhbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/vhbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vhbit/subscriptions", "organizations_url": "https://api.github.com/users/vhbit/orgs", "repos_url": "https://api.github.com/users/vhbit/repos", "events_url": "https://api.github.com/users/vhbit/events{/privacy}", "received_events_url": "https://api.github.com/users/vhbit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vhbit", "id": 140199, "node_id": "MDQ6VXNlcjE0MDE5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/140199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vhbit", "html_url": "https://github.com/vhbit", "followers_url": "https://api.github.com/users/vhbit/followers", "following_url": "https://api.github.com/users/vhbit/following{/other_user}", "gists_url": "https://api.github.com/users/vhbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/vhbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vhbit/subscriptions", "organizations_url": "https://api.github.com/users/vhbit/orgs", "repos_url": "https://api.github.com/users/vhbit/repos", "events_url": "https://api.github.com/users/vhbit/events{/privacy}", "received_events_url": "https://api.github.com/users/vhbit/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0efafac398ff7f28c5f0fe756c15b9008b3e0534", "url": "https://api.github.com/repos/rust-lang/rust/commits/0efafac398ff7f28c5f0fe756c15b9008b3e0534", "html_url": "https://github.com/rust-lang/rust/commit/0efafac398ff7f28c5f0fe756c15b9008b3e0534"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "983d0e5fa1486b1de52656a47f3035015aee4c9d", "filename": "src/libstd/sys/unix/backtrace.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5d8c855079e08e1aab2cf7b4e5110159ad8fa53/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5d8c855079e08e1aab2cf7b4e5110159ad8fa53/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs?ref=e5d8c855079e08e1aab2cf7b4e5110159ad8fa53", "patch": "@@ -105,7 +105,7 @@ use sys_common::backtrace::*;\n #[cfg(all(target_os = \"ios\", target_arch = \"arm\"))]\n #[inline(never)]\n pub fn write(w: &mut Writer) -> IoResult<()> {\n-    use iter::{Iterator, range};\n+    use iter::{IteratorExt, range};\n     use result;\n     use slice::SliceExt;\n \n@@ -117,7 +117,7 @@ pub fn write(w: &mut Writer) -> IoResult<()> {\n     // while it doesn't requires lock for work as everything is\n     // local, it still displays much nicer backtraces when a\n     // couple of tasks panic simultaneously\n-    static LOCK: StaticNativeMutex = NATIVE_MUTEX_INIT;\n+    static LOCK: StaticMutex = MUTEX_INIT;\n     let _g = unsafe { LOCK.lock() };\n \n     try!(writeln!(w, \"stack backtrace:\"));"}]}