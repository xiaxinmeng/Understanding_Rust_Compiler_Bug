{"sha": "3519effc6e85b56360218a5a037346d56365376f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MTllZmZjNmU4NWI1NjM2MDIxOGE1YTAzNzM0NmQ1NjM2NTM3NmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-10T20:58:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-10T20:58:51Z"}, "message": "Auto merge of #29724 - alexcrichton:ip-endian, r=aturon\n\nThe comparison of IP addresses should happen not always in network endianness\nbut rather in the host endianness format, so be sure to convert to that before\ncomparing addresses.\n\nThere are still locations where the endianness will factor into visible\nproperties, such as the hash, but these are not important to be independent of\nthe endianness in play (as hash values are pretty undefined anyway.\n\nCloses #29691", "tree": {"sha": "61b9a15ee766f88290d4a5d3142005b9f54e8905", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61b9a15ee766f88290d4a5d3142005b9f54e8905"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3519effc6e85b56360218a5a037346d56365376f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3519effc6e85b56360218a5a037346d56365376f", "html_url": "https://github.com/rust-lang/rust/commit/3519effc6e85b56360218a5a037346d56365376f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3519effc6e85b56360218a5a037346d56365376f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d668fab0efe1751fbf998383c48ad3ee269fceea", "url": "https://api.github.com/repos/rust-lang/rust/commits/d668fab0efe1751fbf998383c48ad3ee269fceea", "html_url": "https://github.com/rust-lang/rust/commit/d668fab0efe1751fbf998383c48ad3ee269fceea"}, {"sha": "f16e7b4a419a5afcdd4d634da120cb834c8ebaba", "url": "https://api.github.com/repos/rust-lang/rust/commits/f16e7b4a419a5afcdd4d634da120cb834c8ebaba", "html_url": "https://github.com/rust-lang/rust/commit/f16e7b4a419a5afcdd4d634da120cb834c8ebaba"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "c657a7aa0bda2a769ec897030f1f1816636bb24e", "filename": "src/libstd/net/ip.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3519effc6e85b56360218a5a037346d56365376f/src%2Flibstd%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3519effc6e85b56360218a5a037346d56365376f/src%2Flibstd%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fip.rs?ref=3519effc6e85b56360218a5a037346d56365376f", "patch": "@@ -236,7 +236,7 @@ impl PartialOrd for Ipv4Addr {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Ord for Ipv4Addr {\n     fn cmp(&self, other: &Ipv4Addr) -> Ordering {\n-        self.inner.s_addr.cmp(&other.inner.s_addr)\n+        self.octets().cmp(&other.octets())\n     }\n }\n \n@@ -506,7 +506,7 @@ impl PartialOrd for Ipv6Addr {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Ord for Ipv6Addr {\n     fn cmp(&self, other: &Ipv6Addr) -> Ordering {\n-        self.inner.s6_addr.cmp(&other.inner.s6_addr)\n+        self.segments().cmp(&other.segments())\n     }\n }\n \n@@ -794,4 +794,11 @@ mod tests {\n         let a = Ipv4Addr::new(127, 0, 0, 1);\n         assert_eq!(Ipv4Addr::from(2130706433), a);\n     }\n+\n+    #[test]\n+    fn ord() {\n+        assert!(Ipv4Addr::new(100, 64, 3, 3) < Ipv4Addr::new(192, 0, 2, 2));\n+        assert!(\"2001:db8:f00::1002\".parse::<Ipv6Addr>().unwrap() <\n+                \"2001:db8:f00::2001\".parse::<Ipv6Addr>().unwrap());\n+    }\n }"}]}