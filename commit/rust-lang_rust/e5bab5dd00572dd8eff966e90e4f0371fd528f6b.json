{"sha": "e5bab5dd00572dd8eff966e90e4f0371fd528f6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1YmFiNWRkMDA1NzJkZDhlZmY5NjZlOTBlNGYwMzcxZmQ1MjhmNmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-14T15:37:07Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-14T15:37:07Z"}, "message": "Auto merge of #30848 - nagisa:mir-no-store-zsts, r=nikomatsakis\n\nFixes #30831\n\nr? @nikomatsakis", "tree": {"sha": "76e77970a1d7f63a6ab1df2d7a580d4b13bf8a67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76e77970a1d7f63a6ab1df2d7a580d4b13bf8a67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5bab5dd00572dd8eff966e90e4f0371fd528f6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5bab5dd00572dd8eff966e90e4f0371fd528f6b", "html_url": "https://github.com/rust-lang/rust/commit/e5bab5dd00572dd8eff966e90e4f0371fd528f6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5bab5dd00572dd8eff966e90e4f0371fd528f6b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02fbf31fb26e0b5eccf34cef8a5f8becef6f3ada", "url": "https://api.github.com/repos/rust-lang/rust/commits/02fbf31fb26e0b5eccf34cef8a5f8becef6f3ada", "html_url": "https://github.com/rust-lang/rust/commit/02fbf31fb26e0b5eccf34cef8a5f8becef6f3ada"}, {"sha": "20618d0e42a99490b84656fdaf5bb79462f62f8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/20618d0e42a99490b84656fdaf5bb79462f62f8d", "html_url": "https://github.com/rust-lang/rust/commit/20618d0e42a99490b84656fdaf5bb79462f62f8d"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "114e78b05bddd0b72d55611b49dbde390676694f", "filename": "src/librustc_trans/trans/mir/operand.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e5bab5dd00572dd8eff966e90e4f0371fd528f6b/src%2Flibrustc_trans%2Ftrans%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bab5dd00572dd8eff966e90e4f0371fd528f6b/src%2Flibrustc_trans%2Ftrans%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Foperand.rs?ref=e5bab5dd00572dd8eff966e90e4f0371fd528f6b", "patch": "@@ -169,6 +169,11 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n                          operand: OperandRef<'tcx>)\n     {\n         debug!(\"store_operand: operand={}\", operand.repr(bcx));\n+        // Avoid generating stores of zero-sized values, because the only way to have a zero-sized\n+        // value is through `undef`, and store itself is useless.\n+        if common::type_is_zero_size(bcx.ccx(), operand.ty) {\n+            return;\n+        }\n         match operand.val {\n             OperandValue::Ref(r) => base::memcpy_ty(bcx, lldest, r, operand.ty),\n             OperandValue::Immediate(s) => base::store_ty(bcx, s, lldest, operand.ty),"}, {"sha": "f0842554277cc7e50fcfcaa1bf824665bb25d325", "filename": "src/librustc_trans/trans/mir/rvalue.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e5bab5dd00572dd8eff966e90e4f0371fd528f6b/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bab5dd00572dd8eff966e90e4f0371fd528f6b/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs?ref=e5bab5dd00572dd8eff966e90e4f0371fd528f6b", "patch": "@@ -108,11 +108,15 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n                     },\n                     _ => {\n                         for (i, operand) in operands.iter().enumerate() {\n-                            // Note: perhaps this should be StructGep, but\n-                            // note that in some cases the values here will\n-                            // not be structs but arrays.\n-                            let lldest_i = build::GEPi(bcx, dest.llval, &[0, i]);\n-                            self.trans_operand_into(bcx, lldest_i, operand);\n+                            let op = self.trans_operand(bcx, operand);\n+                            // Do not generate stores and GEPis for zero-sized fields.\n+                            if !common::type_is_zero_size(bcx.ccx(), op.ty) {\n+                                // Note: perhaps this should be StructGep, but\n+                                // note that in some cases the values here will\n+                                // not be structs but arrays.\n+                                let dest = build::GEPi(bcx, dest.llval, &[0, i]);\n+                                self.store_operand(bcx, dest, op);\n+                            }\n                         }\n                     }\n                 }"}, {"sha": "c1acdaf70319195642dfe409f54ee8074980a531", "filename": "src/test/codegen/mir_zst_stores.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e5bab5dd00572dd8eff966e90e4f0371fd528f6b/src%2Ftest%2Fcodegen%2Fmir_zst_stores.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5bab5dd00572dd8eff966e90e4f0371fd528f6b/src%2Ftest%2Fcodegen%2Fmir_zst_stores.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fmir_zst_stores.rs?ref=e5bab5dd00572dd8eff966e90e4f0371fd528f6b", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -C no-prepopulate-passes\n+\n+#![feature(rustc_attrs)]\n+#![crate_type = \"lib\"]\n+use std::marker::PhantomData;\n+\n+\n+struct Zst { phantom: PhantomData<Zst> }\n+\n+// CHECK-LABEL: @mir\n+#[no_mangle]\n+#[rustc_mir]\n+fn mir(){\n+    // CHECK-NOT: getelementptr\n+    // CHECK-NOT: store{{.*}}undef\n+    let x = Zst { phantom: PhantomData };\n+}"}]}