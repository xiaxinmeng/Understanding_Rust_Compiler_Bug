{"sha": "3e478fd51226103660867d1bd6c9a78d38c1481b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlNDc4ZmQ1MTIyNjEwMzY2MDg2N2QxYmQ2YzlhNzhkMzhjMTQ4MWI=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-09-15T02:32:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-15T02:32:47Z"}, "message": "Rollup merge of #44536 - Havvy:transmute-docs, r=steveklabnik\n\nFix example in transmute; add safety requirement to Vec::from_raw_parts\n\nThis fixes the second bullet point on #44281 and also removes some incorrect information.", "tree": {"sha": "a683bf6ac82f30e750662b28a636d511257a491a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a683bf6ac82f30e750662b28a636d511257a491a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e478fd51226103660867d1bd6c9a78d38c1481b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e478fd51226103660867d1bd6c9a78d38c1481b", "html_url": "https://github.com/rust-lang/rust/commit/3e478fd51226103660867d1bd6c9a78d38c1481b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e478fd51226103660867d1bd6c9a78d38c1481b/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a48cc80d5711412e1c1aecafebd51f9b485965f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a48cc80d5711412e1c1aecafebd51f9b485965f1", "html_url": "https://github.com/rust-lang/rust/commit/a48cc80d5711412e1c1aecafebd51f9b485965f1"}, {"sha": "9dd2ee1942b232246bd87805c2be471af9fad20a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dd2ee1942b232246bd87805c2be471af9fad20a", "html_url": "https://github.com/rust-lang/rust/commit/9dd2ee1942b232246bd87805c2be471af9fad20a"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "45574bad9ac07eb93b2abeb5629e73445fd6bbac", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3e478fd51226103660867d1bd6c9a78d38c1481b/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e478fd51226103660867d1bd6c9a78d38c1481b/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=3e478fd51226103660867d1bd6c9a78d38c1481b", "patch": "@@ -370,6 +370,7 @@ impl<T> Vec<T> {\n     ///\n     /// * `ptr` needs to have been previously allocated via [`String`]/`Vec<T>`\n     ///   (at least, it's highly likely to be incorrect if it wasn't).\n+    /// * `ptr`'s `T` needs to have the same size and alignment as it was allocated with.\n     /// * `length` needs to be less than or equal to `capacity`.\n     /// * `capacity` needs to be the capacity that the pointer was allocated with.\n     ///"}, {"sha": "f7f1dd12d28b150be07d9bd7b58a45ef5bc6e078", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3e478fd51226103660867d1bd6c9a78d38c1481b/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e478fd51226103660867d1bd6c9a78d38c1481b/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=3e478fd51226103660867d1bd6c9a78d38c1481b", "patch": "@@ -848,12 +848,12 @@ extern \"rust-intrinsic\" {\n     /// // The no-copy, unsafe way, still using transmute, but not UB.\n     /// // This is equivalent to the original, but safer, and reuses the\n     /// // same Vec internals. Therefore the new inner type must have the\n-    /// // exact same size, and the same or lesser alignment, as the old\n-    /// // type. The same caveats exist for this method as transmute, for\n+    /// // exact same size, and the same alignment, as the old type.\n+    /// // The same caveats exist for this method as transmute, for\n     /// // the original inner type (`&i32`) to the converted inner type\n     /// // (`Option<&i32>`), so read the nomicon pages linked above.\n     /// let v_from_raw = unsafe {\n-    ///     Vec::from_raw_parts(v_orig.as_mut_ptr(),\n+    ///     Vec::from_raw_parts(v_orig.as_mut_ptr() as *mut Option<&i32>,\n     ///                         v_orig.len(),\n     ///                         v_orig.capacity())\n     /// };"}]}