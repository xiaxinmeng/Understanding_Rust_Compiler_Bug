{"sha": "711fc20d88dd04c5043422afcec386d2d1cfb223", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxMWZjMjBkODhkZDA0YzUwNDM0MjJhZmNlYzM4NmQyZDFjZmIyMjM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2012-01-17T20:45:09Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2012-01-17T20:45:09Z"}, "message": "Merge pull request #1544 from kevina/issue-1393\n\nMinor cleanups to custom discriminator code.", "tree": {"sha": "3062c994b5e20811818012aeb855cfa27ea64e70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3062c994b5e20811818012aeb855cfa27ea64e70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/711fc20d88dd04c5043422afcec386d2d1cfb223", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/711fc20d88dd04c5043422afcec386d2d1cfb223", "html_url": "https://github.com/rust-lang/rust/commit/711fc20d88dd04c5043422afcec386d2d1cfb223", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/711fc20d88dd04c5043422afcec386d2d1cfb223/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4553caab3ae8bdc3982b3062d6798351bfd6ba4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4553caab3ae8bdc3982b3062d6798351bfd6ba4", "html_url": "https://github.com/rust-lang/rust/commit/c4553caab3ae8bdc3982b3062d6798351bfd6ba4"}, {"sha": "bdc8e8d222eebebcbc9fcfbc1df03ee8b57892f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdc8e8d222eebebcbc9fcfbc1df03ee8b57892f5", "html_url": "https://github.com/rust-lang/rust/commit/bdc8e8d222eebebcbc9fcfbc1df03ee8b57892f5"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "600589d07b7ad84c47fa165ad3cc55ccaf0dad26", "filename": "doc/tutorial/data.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/711fc20d88dd04c5043422afcec386d2d1cfb223/doc%2Ftutorial%2Fdata.md", "raw_url": "https://github.com/rust-lang/rust/raw/711fc20d88dd04c5043422afcec386d2d1cfb223/doc%2Ftutorial%2Fdata.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial%2Fdata.md?ref=711fc20d88dd04c5043422afcec386d2d1cfb223", "patch": "@@ -103,9 +103,9 @@ equivalent to a C enum:\n This will define `north`, `east`, `south`, and `west` as constants,\n all of which have type `direction`.\n \n-When the enum is is C like, that is none of the variants have\n-parameters, it is possible to explicit set the discriminator values to\n-an integer value:\n+When the enum is C like, that is none of the variants have parameters,\n+it is possible to explicitly set the discriminator values to an integer\n+value:\n \n     enum color {\n       red = 0xff0000;"}, {"sha": "586e8b166a2f1fee929b46a85c4447b6c8c29b62", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/711fc20d88dd04c5043422afcec386d2d1cfb223/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/711fc20d88dd04c5043422afcec386d2d1cfb223/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=711fc20d88dd04c5043422afcec386d2d1cfb223", "patch": "@@ -2645,8 +2645,8 @@ fn tag_variants(cx: ctxt, id: ast::def_id) -> @[variant_info] {\n         @csearch::get_tag_variants(cx, id)\n     } else {\n         // FIXME: Now that the variants are run through the type checker (to\n-        // check the disr_expr if one exists), this code should likely be\n-        // moved there to avoid having to call eval_const_expr twice\n+        // check the disr_expr if it exists), this code should likely be\n+        // moved there to avoid having to call eval_const_expr twice.\n         alt cx.items.get(id.node) {\n           ast_map::node_item(@{node: ast::item_tag(variants, _), _}) {\n             let disr_val = -1;"}, {"sha": "f78f40858e562c1f28c8ce97446c0bb4444100ad", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/711fc20d88dd04c5043422afcec386d2d1cfb223/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/711fc20d88dd04c5043422afcec386d2d1cfb223/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=711fc20d88dd04c5043422afcec386d2d1cfb223", "patch": "@@ -2489,8 +2489,8 @@ fn check_tag_variants(ccx: @crate_ctxt, _sp: span, vs: [ast::variant],\n             demand::simple(fcx, e.span, declty, cty);\n             // FIXME: issue #1417\n             // Also, check_expr (from check_const pass) doesn't guarantee that\n-            // the expression in an form that eval_const_expr, so we may still\n-            // get an internal compiler error\n+            // the expression in an form that eval_const_expr can handle, so\n+            // we may still get an internal compiler error.\n             alt syntax::ast_util::eval_const_expr(e) {\n               syntax::ast_util::const_int(val) {\n                 disr_val = val as int;"}, {"sha": "d051aa233d60a0d3375f6f14f8536b6ab9a36cbb", "filename": "src/test/run-pass/enum-disr-val-pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/711fc20d88dd04c5043422afcec386d2d1cfb223/src%2Ftest%2Frun-pass%2Fenum-disr-val-pretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/711fc20d88dd04c5043422afcec386d2d1cfb223/src%2Ftest%2Frun-pass%2Fenum-disr-val-pretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenum-disr-val-pretty.rs?ref=711fc20d88dd04c5043422afcec386d2d1cfb223", "patch": "@@ -9,7 +9,7 @@ fn main() {\n     test_color(imaginary, -1, \"imaginary\");\n }\n \n-fn test_color(color: color, val: int, name: str) unsafe{\n+fn test_color(color: color, val: int, name: str) {\n     assert (color as int == val);\n     assert (color as float == val as float);\n }"}]}