{"sha": "de403f4f65e0c22de2ebab9b034154203a204940", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlNDAzZjRmNjVlMGMyMmRlMmViYWI5YjAzNDE1NDIwM2EyMDQ5NDA=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-19T13:50:28Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-19T15:41:36Z"}, "message": "Use offset_left instead of shrink_left", "tree": {"sha": "194658da1bfd146753ec627626ac149ac7bb10dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/194658da1bfd146753ec627626ac149ac7bb10dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de403f4f65e0c22de2ebab9b034154203a204940", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de403f4f65e0c22de2ebab9b034154203a204940", "html_url": "https://github.com/rust-lang/rust/commit/de403f4f65e0c22de2ebab9b034154203a204940", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de403f4f65e0c22de2ebab9b034154203a204940/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05d043cc5cac3a2bc76e9ce8a2705f23cc701f05", "url": "https://api.github.com/repos/rust-lang/rust/commits/05d043cc5cac3a2bc76e9ce8a2705f23cc701f05", "html_url": "https://github.com/rust-lang/rust/commit/05d043cc5cac3a2bc76e9ce8a2705f23cc701f05"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "5c98308e40c09a3807b06fea87b2dce5f1c4de7c", "filename": "src/chains.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de403f4f65e0c22de2ebab9b034154203a204940/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de403f4f65e0c22de2ebab9b034154203a204940/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=de403f4f65e0c22de2ebab9b034154203a204940", "patch": "@@ -561,7 +561,7 @@ fn choose_first_connector<'a>(\n     if subexpr_list.is_empty() {\n         \"\"\n     } else if extend || subexpr_list.last().map_or(false, is_try) ||\n-               is_extendable_parent(context, parent_str)\n+        is_extendable_parent(context, parent_str)\n     {\n         // 1 = \";\", being conservative here.\n         if last_line_width(parent_str) + first_line_width(first_child_str) + 1 <="}, {"sha": "35ff88d86d1b20c970ed3be53f47084d5ffd9af7", "filename": "src/comment.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/de403f4f65e0c22de2ebab9b034154203a204940/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de403f4f65e0c22de2ebab9b034154203a204940/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=de403f4f65e0c22de2ebab9b034154203a204940", "patch": "@@ -124,7 +124,7 @@ fn comment_style(orig: &str, normalize_comments: bool) -> CommentStyle {\n             CommentStyle::DoubleSlash\n         }\n     } else if (orig.starts_with(\"///\") && orig.chars().nth(3).map_or(true, |c| c != '/')) ||\n-               (orig.starts_with(\"/**\") && !orig.starts_with(\"/**/\"))\n+        (orig.starts_with(\"/**\") && !orig.starts_with(\"/**/\"))\n     {\n         CommentStyle::TripleSlash\n     } else if orig.starts_with(\"//!\") || orig.starts_with(\"/*!\") {\n@@ -314,13 +314,13 @@ fn left_trim_comment_line<'a>(line: &'a str, style: &CommentStyle) -> &'a str {\n             &line[opener.trim_right().len()..]\n         }\n     } else if line.starts_with(\"/* \") || line.starts_with(\"// \") || line.starts_with(\"//!\") ||\n-               line.starts_with(\"///\") ||\n-               line.starts_with(\"** \") || line.starts_with(\"/*!\") ||\n-               (line.starts_with(\"/**\") && !line.starts_with(\"/**/\"))\n+        line.starts_with(\"///\") ||\n+        line.starts_with(\"** \") || line.starts_with(\"/*!\") ||\n+        (line.starts_with(\"/**\") && !line.starts_with(\"/**/\"))\n     {\n         &line[3..]\n     } else if line.starts_with(\"/*\") || line.starts_with(\"* \") || line.starts_with(\"//\") ||\n-               line.starts_with(\"**\")\n+        line.starts_with(\"**\")\n     {\n         &line[2..]\n     } else if line.starts_with('*') {\n@@ -795,7 +795,7 @@ fn remove_comment_header(comment: &str) -> &str {\n     } else if comment.starts_with(\"//\") {\n         &comment[2..]\n     } else if (comment.starts_with(\"/**\") && !comment.starts_with(\"/**/\")) ||\n-               comment.starts_with(\"/*!\")\n+        comment.starts_with(\"/*!\")\n     {\n         &comment[3..comment.len() - 2]\n     } else {"}, {"sha": "896ecebb68e789896fce41593ca0a0568a7af640", "filename": "src/expr.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/de403f4f65e0c22de2ebab9b034154203a204940/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de403f4f65e0c22de2ebab9b034154203a204940/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=de403f4f65e0c22de2ebab9b034154203a204940", "patch": "@@ -375,7 +375,7 @@ where\n                 }\n \n                 // Try rewriting the rhs into the remaining space.\n-                let rhs_shape = shape.shrink_left(last_line_width(&result) + suffix.len());\n+                let rhs_shape = shape.offset_left(last_line_width(&result) + suffix.len());\n                 if let Some(rhs_shape) = rhs_shape {\n                     if let Some(rhs_result) = rhs.rewrite(context, rhs_shape) {\n                         // FIXME this should always hold.\n@@ -572,7 +572,7 @@ fn rewrite_closure_fn_decl(\n \n     // 1 = |\n     let argument_offset = nested_shape.indent + 1;\n-    let arg_shape = try_opt!(nested_shape.shrink_left(1)).visual_indent(0);\n+    let arg_shape = try_opt!(nested_shape.offset_left(1)).visual_indent(0);\n     let ret_str = try_opt!(fn_decl.output.rewrite(context, arg_shape));\n \n     let arg_items = itemize_list(\n@@ -1168,7 +1168,7 @@ impl<'a> ControlFlow<'a> {\n         let constr_shape = if self.nested_if {\n             // We are part of an if-elseif-else chain. Our constraints are tightened.\n             // 7 = \"} else \" .len()\n-            try_opt!(shape.shrink_left(7))\n+            try_opt!(shape.offset_left(7))\n         } else {\n             shape\n         };\n@@ -1243,7 +1243,7 @@ impl<'a> ControlFlow<'a> {\n         let block_sep = if self.cond.is_none() && between_kwd_cond_comment.is_some() {\n             \"\"\n         } else if context.config.control_brace_style() == ControlBraceStyle::AlwaysNextLine ||\n-                   force_newline_brace\n+            force_newline_brace\n         {\n             alt_block_sep\n         } else {\n@@ -2573,7 +2573,7 @@ fn rewrite_struct_lit<'a>(\n             }\n             StructLitField::Base(expr) => {\n                 // 2 = ..\n-                expr.rewrite(context, try_opt!(v_shape.shrink_left(2)))\n+                expr.rewrite(context, try_opt!(v_shape.offset_left(2)))\n                     .map(|s| format!(\"..{}\", s))\n             }\n         };"}, {"sha": "4e989fe64e2aa6d2f70533c2c0584fedaa9ec984", "filename": "src/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de403f4f65e0c22de2ebab9b034154203a204940/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de403f4f65e0c22de2ebab9b034154203a204940/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=de403f4f65e0c22de2ebab9b034154203a204940", "patch": "@@ -280,7 +280,7 @@ impl<'a> FmtVisitor<'a> {\n         if force_newline_brace {\n             newline_brace = true;\n         } else if self.config.fn_brace_style() != BraceStyle::AlwaysNextLine &&\n-                   !result.contains('\\n')\n+            !result.contains('\\n')\n         {\n             newline_brace = false;\n         }"}, {"sha": "4d8ab906789b5155928b997724c69458f2d6db83", "filename": "tests/target/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de403f4f65e0c22de2ebab9b034154203a204940/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de403f4f65e0c22de2ebab9b034154203a204940/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=de403f4f65e0c22de2ebab9b034154203a204940", "patch": "@@ -351,7 +351,7 @@ fn complex_if_else() {\n     {\n         ha();\n     } else if xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx +\n-               xxxxxxxxx\n+        xxxxxxxxx\n     {\n         yo();\n     }"}, {"sha": "6b5163cf7963c26b3e7e3ab7bcc72e60c0211087", "filename": "tests/target/issue-1239.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/de403f4f65e0c22de2ebab9b034154203a204940/tests%2Ftarget%2Fissue-1239.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de403f4f65e0c22de2ebab9b034154203a204940/tests%2Ftarget%2Fissue-1239.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-1239.rs?ref=de403f4f65e0c22de2ebab9b034154203a204940", "patch": "@@ -4,8 +4,8 @@ fn foo() {\n         condition__uses_alignment_for_first_if__2\n     {\n     } else if condition__no_alignment_for_later_else__0 ||\n-               condition__no_alignment_for_later_else__1 ||\n-               condition__no_alignment_for_later_else__2\n+        condition__no_alignment_for_later_else__1 ||\n+        condition__no_alignment_for_later_else__2\n     {\n     };\n }"}]}