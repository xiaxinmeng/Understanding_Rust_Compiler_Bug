{"sha": "94731fa458a7602d492fcd4cae97d9cfbef84a03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0NzMxZmE0NThhNzYwMmQ0OTJmY2Q0Y2FlOTdkOWNmYmVmODRhMDM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-30T04:45:09Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-30T04:45:09Z"}, "message": "Add support for --enable-foo and --disable-foo flags to configure, that Makefile.in respects.", "tree": {"sha": "148a5aa053aa51c9f0d76307fc6b7ae4685ca16c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/148a5aa053aa51c9f0d76307fc6b7ae4685ca16c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94731fa458a7602d492fcd4cae97d9cfbef84a03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94731fa458a7602d492fcd4cae97d9cfbef84a03", "html_url": "https://github.com/rust-lang/rust/commit/94731fa458a7602d492fcd4cae97d9cfbef84a03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94731fa458a7602d492fcd4cae97d9cfbef84a03/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "301cfe135485e18666f1859ccf3e39ae4b91f564", "url": "https://api.github.com/repos/rust-lang/rust/commits/301cfe135485e18666f1859ccf3e39ae4b91f564", "html_url": "https://github.com/rust-lang/rust/commit/301cfe135485e18666f1859ccf3e39ae4b91f564"}], "stats": {"total": 101, "additions": 87, "deletions": 14}, "files": [{"sha": "e08138badb25cda2db5ad112f78fe2f69fe3d419", "filename": "Makefile.in", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/94731fa458a7602d492fcd4cae97d9cfbef84a03/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/94731fa458a7602d492fcd4cae97d9cfbef84a03/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=94731fa458a7602d492fcd4cae97d9cfbef84a03", "patch": "@@ -162,14 +162,14 @@ else\n   $(info cfg: have only ocaml bytecode compiler)\n endif\n \n-ifdef BOOT_PROFILE\n-  $(info cfg: forcing native bootstrap compiler (BOOT_PROFILE))\n+ifdef CFG_BOOT_PROFILE\n+  $(info cfg: forcing native bootstrap compiler (CFG_BOOT_PROFILE))\n   CFG_BOOT_NATIVE := 1\n   CFG_OCAMLOPT_PROFILE_FLAGS := -p\n endif\n \n-ifdef BOOT_DEBUG\n-  $(info cfg: forcing bytecode bootstrap compiler (DEBUG))\n+ifdef CFG_BOOT_DEBUG\n+  $(info cfg: forcing bytecode bootstrap compiler (CFG_BOOT_DEBUG))\n   CFG_BOOT_NATIVE :=\n endif\n \n@@ -179,8 +179,8 @@ else\n   $(info cfg: building bytecode bootstrap compiler)\n endif\n \n-ifdef NO_VALGRIND\n-  $(info cfg: disabling valgrind (NO_VALGRIND))\n+ifdef CFG_DISABLE_VALGRIND\n+  $(info cfg: disabling valgrind (CFG_DISABLE_VALGRIND))\n   CFG_VALGRIND :=\n endif\n \n@@ -201,6 +201,10 @@ else\n   endif\n endif\n \n+ifdef CFG_DISABLE_DOCS\n+  $(info cfg: disabling doc build (CFG_DISABLE_DOCS))\n+  DOCS :=\n+endif\n \n ######################################################################\n # Target-and-rule \"utility variables\""}, {"sha": "8c8ed680a1b0e66dd4805ee9ea17afe35d4bf868", "filename": "configure", "status": "modified", "additions": 77, "deletions": 8, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/94731fa458a7602d492fcd4cae97d9cfbef84a03/configure", "raw_url": "https://github.com/rust-lang/rust/raw/94731fa458a7602d492fcd4cae97d9cfbef84a03/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=94731fa458a7602d492fcd4cae97d9cfbef84a03", "patch": "@@ -4,6 +4,12 @@ msg() {\n     echo \"configure: $1\"\n }\n \n+step_msg() {\n+    msg\n+    msg \"$1\"\n+    msg\n+}\n+\n err() {\n     echo \"configure: error: $1\"\n     exit 1\n@@ -67,6 +73,44 @@ probe_need() {\n     fi\n }\n \n+opt() {\n+    local OP=$1\n+    local DEFAULT=$2\n+    shift\n+    shift\n+    local DOC=\"$*\"\n+    local FLAG=\"\"\n+\n+    if [ $DEFAULT -eq 0 ]\n+    then\n+        FLAG=\"enable\"\n+    else\n+        FLAG=\"disable\"\n+        DOC=\"don't $DOC\"\n+    fi\n+\n+    if [ $HELP -eq 0 ]\n+    then\n+        for arg in $CFG_CONFIGURE_ARGS\n+        do\n+            if [ \"$arg\" = \"--${FLAG}-${OP}\" ]\n+            then\n+                OP=$(echo $OP | tr 'a-z' 'A-Z')\n+                FLAG=$(echo $FLAG | tr 'a-z' 'A-Z')\n+                local V=\"CFG_${FLAG}_${OP}\"\n+                eval $V=1\n+                putvar $V\n+            fi\n+        done\n+    else\n+        if [ ! -z \"$META\" ]\n+        then\n+            OP=\"$OP=<$META>\"\n+        fi\n+        printf \"    --%-30s %s\\n\" \"$FLAG-$OP\" \"$DOC\"\n+     fi\n+}\n+\n msg \"looking for configure programs\"\n need_cmd mkdir\n need_cmd printf\n@@ -84,16 +128,40 @@ msg \"inspecting environment\"\n CFG_OSTYPE=$(uname -s)\n CFG_CPUTYPE=$(uname -m)\n \n-CFG_SELF=$(echo $0 | tr '\\' '/')\n+CFG_SELF=$(echo $0 | tr '\\\\' '/')\n CFG_SRC_DIR=${CFG_SELF%${CFG_SELF##*/}}\n-CFG_BUILD_DIR=$(echo $PWD | tr '\\' '/')\n+CFG_BUILD_DIR=$(echo $PWD | tr '\\\\' '/')\n CFG_CONFIGURE_ARGS=\"$@\"\n \n+OPTIONS=\"\"\n+HELP=0\n+if [ \"$1\" = \"--help\" ]\n+then\n+    HELP=1\n+    shift\n+    echo \"\"\n+    echo \"Usage: $CFG_SELF [options]\"\n+    echo \"\"\n+    echo \"Options:\"\n+    echo \"\"\n+else\n+    msg \"recreating config.mk\"\n+    echo '' >config.mk\n+\n+    step_msg \"processing $CFG_SELF args\"\n+fi\n \n-msg \"recreating config.mk\"\n-echo '' >config.mk\n+opt valgrind 1 \"run tests with valgrind\"\n+opt docs     1 \"build documentation\"\n+\n+\n+if [ $HELP -eq 1 ]\n+then\n+    echo \"\"\n+    exit 0\n+fi\n \n-msg \"making directories\"\n+step_msg \"making directories\"\n for i in \\\n     doc \\\n     boot/fe boot/me boot/be boot/driver boot/util \\\n@@ -106,13 +174,14 @@ do\n     make_dir $i\n done\n \n+step_msg \"writing out basic parameters\"\n putvar CFG_SRC_DIR\n putvar CFG_BUILD_DIR\n putvar CFG_OSTYPE\n putvar CFG_CPUTYPE\n putvar CFG_CONFIGURE_ARGS\n \n-msg \"looking for build programs\"\n+step_msg \"looking for build programs\"\n probe_need CFG_GCC          gcc\n probe_need CFG_GIT          git\n probe_need CFG_OCAMLC       ocamlc\n@@ -160,7 +229,7 @@ fi\n \n case $CFG_LLVM_VERSION in\n     (3.0svn | 3.0)\n-    msg \"found ok version of LLVM: $CFG_LLVM_VERSION\"\n+    step_msg \"found ok version of LLVM: $CFG_LLVM_VERSION\"\n     ;;\n     (*)\n     err \"bad LLVM version: $CFG_LLVM_VERSION, need >=3.0svn\"\n@@ -181,4 +250,4 @@ rm -f config.mk.bak\n \n copy ${CFG_SRC_DIR}Makefile.in ./Makefile\n \n-echo \"configure: complete\"\n+step_msg \"complete\""}]}