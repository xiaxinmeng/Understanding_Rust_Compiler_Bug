{"sha": "7c0a9718aab7a26d7570879e6bd5fcd7cca83ded", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjMGE5NzE4YWFiN2EyNmQ3NTcwODc5ZTZiZDVmY2Q3Y2NhODNkZWQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-31T14:48:42Z"}, "committer": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-31T14:48:42Z"}, "message": "Merge #1629\n\n1629: Add explicit newline preserving tests r=matklad a=kjeremy\n\nI didn't see anything that explicitly called this out so added tests.\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>", "tree": {"sha": "65b1055e81b9c789785e69e49ac21616b820fa1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65b1055e81b9c789785e69e49ac21616b820fa1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c0a9718aab7a26d7570879e6bd5fcd7cca83ded", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c0a9718aab7a26d7570879e6bd5fcd7cca83ded", "html_url": "https://github.com/rust-lang/rust/commit/7c0a9718aab7a26d7570879e6bd5fcd7cca83ded", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c0a9718aab7a26d7570879e6bd5fcd7cca83ded/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "4a6cfa1aa7ece5a32176548ce3a8e3605cdb8072", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a6cfa1aa7ece5a32176548ce3a8e3605cdb8072", "html_url": "https://github.com/rust-lang/rust/commit/4a6cfa1aa7ece5a32176548ce3a8e3605cdb8072"}, {"sha": "4fccad9b2cea8b17066308129c9add49861f8e07", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fccad9b2cea8b17066308129c9add49861f8e07", "html_url": "https://github.com/rust-lang/rust/commit/4fccad9b2cea8b17066308129c9add49861f8e07"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "947ef77cd594a9cd20a89f2bd8ea197efcb55cb6", "filename": "crates/ra_lsp_server/src/markdown.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7c0a9718aab7a26d7570879e6bd5fcd7cca83ded/crates%2Fra_lsp_server%2Fsrc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c0a9718aab7a26d7570879e6bd5fcd7cca83ded/crates%2Fra_lsp_server%2Fsrc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmarkdown.rs?ref=7c0a9718aab7a26d7570879e6bd5fcd7cca83ded", "patch": "@@ -48,4 +48,10 @@ mod tests {\n         let comment = \" # stay1\\n# stay2\\n#stay3\\nstay4\\n#\\n #\\n   #    \\n #\\tstay5\\n\\t#\\t\";\n         assert_eq!(format_docs(comment), comment);\n     }\n+\n+    #[test]\n+    fn test_format_docs_preserves_newlines() {\n+        let comment = \"this\\nis\\nultiline\";\n+        assert_eq!(format_docs(comment), comment);\n+    }\n }"}, {"sha": "c5746d98d8f5c0d8f62791ea1fcc121f72ec66bb", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7c0a9718aab7a26d7570879e6bd5fcd7cca83ded/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c0a9718aab7a26d7570879e6bd5fcd7cca83ded/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=7c0a9718aab7a26d7570879e6bd5fcd7cca83ded", "patch": "@@ -121,6 +121,23 @@ fn test_doc_comment_preserves_indents() {\n     assert_eq!(\"doc1\\n```\\nfn foo() {\\n    // ...\\n}\\n```\", module.doc_comment_text().unwrap());\n }\n \n+#[test]\n+fn test_doc_comment_preserves_newlines() {\n+    let file = SourceFile::parse(\n+        r#\"\n+        /// this\n+        /// is\n+        /// mod\n+        /// foo\n+        mod foo {}\n+        \"#,\n+    )\n+    .ok()\n+    .unwrap();\n+    let module = file.syntax().descendants().find_map(Module::cast).unwrap();\n+    assert_eq!(\"this\\nis\\nmod\\nfoo\", module.doc_comment_text().unwrap());\n+}\n+\n #[test]\n fn test_where_predicates() {\n     fn assert_bound(text: &str, bound: Option<TypeBound>) {"}]}