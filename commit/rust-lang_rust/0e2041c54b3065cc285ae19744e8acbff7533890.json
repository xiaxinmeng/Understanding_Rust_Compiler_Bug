{"sha": "0e2041c54b3065cc285ae19744e8acbff7533890", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMjA0MWM1NGIzMDY1Y2MyODVhZTE5NzQ0ZThhY2JmZjc1MzM4OTA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-19T01:02:30Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T21:01:23Z"}, "message": "librustc: De-`@mut` `CrateContext::const_cstr_cache`.", "tree": {"sha": "feb452ae30d25716af7302c8e5631ecf8cd5a92e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/feb452ae30d25716af7302c8e5631ecf8cd5a92e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e2041c54b3065cc285ae19744e8acbff7533890", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e2041c54b3065cc285ae19744e8acbff7533890", "html_url": "https://github.com/rust-lang/rust/commit/0e2041c54b3065cc285ae19744e8acbff7533890", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e2041c54b3065cc285ae19744e8acbff7533890/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13f85cb097725a13ae24a6564c71597243b91c3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/13f85cb097725a13ae24a6564c71597243b91c3d", "html_url": "https://github.com/rust-lang/rust/commit/13f85cb097725a13ae24a6564c71597243b91c3d"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "743e85e458eb3476afb1290d9a5669e6278ffb81", "filename": "src/librustc/middle/trans/common.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0e2041c54b3065cc285ae19744e8acbff7533890/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e2041c54b3065cc285ae19744e8acbff7533890/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=0e2041c54b3065cc285ae19744e8acbff7533890", "patch": "@@ -890,9 +890,12 @@ pub fn C_u8(i: uint) -> ValueRef {\n // our boxed-and-length-annotated strings.\n pub fn C_cstr(cx: &mut CrateContext, s: @str) -> ValueRef {\n     unsafe {\n-        match cx.const_cstr_cache.find_equiv(&s) {\n-            Some(&llval) => return llval,\n-            None => ()\n+        {\n+            let const_cstr_cache = cx.const_cstr_cache.borrow();\n+            match const_cstr_cache.get().find_equiv(&s) {\n+                Some(&llval) => return llval,\n+                None => ()\n+            }\n         }\n \n         let sc = llvm::LLVMConstStringInContext(cx.llcx,\n@@ -907,9 +910,9 @@ pub fn C_cstr(cx: &mut CrateContext, s: @str) -> ValueRef {\n         llvm::LLVMSetGlobalConstant(g, True);\n         lib::llvm::SetLinkage(g, lib::llvm::InternalLinkage);\n \n-        cx.const_cstr_cache.insert(s, g);\n-\n-        return g;\n+        let mut const_cstr_cache = cx.const_cstr_cache.borrow_mut();\n+        const_cstr_cache.get().insert(s, g);\n+        g\n     }\n }\n "}, {"sha": "414f95180e559c17ec687454bb02c55d750d6e09", "filename": "src/librustc/middle/trans/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0e2041c54b3065cc285ae19744e8acbff7533890/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e2041c54b3065cc285ae19744e8acbff7533890/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs?ref=0e2041c54b3065cc285ae19744e8acbff7533890", "patch": "@@ -71,7 +71,7 @@ pub struct CrateContext {\n      // Cache generated vtables\n      vtables: RefCell<HashMap<(ty::t, mono_id), ValueRef>>,\n      // Cache of constant strings,\n-     const_cstr_cache: HashMap<@str, ValueRef>,\n+     const_cstr_cache: RefCell<HashMap<@str, ValueRef>>,\n \n      // Reverse-direction for const ptrs cast from globals.\n      // Key is an int, cast from a ValueRef holding a *T,\n@@ -197,7 +197,7 @@ impl CrateContext {\n                   monomorphized: RefCell::new(HashMap::new()),\n                   monomorphizing: RefCell::new(HashMap::new()),\n                   vtables: RefCell::new(HashMap::new()),\n-                  const_cstr_cache: HashMap::new(),\n+                  const_cstr_cache: RefCell::new(HashMap::new()),\n                   const_globals: HashMap::new(),\n                   const_values: HashMap::new(),\n                   extern_const_values: HashMap::new(),"}]}