{"sha": "b8437f71b6998f50ec2174786020354bc680eef0", "node_id": "C_kwDOAAsO6NoAKGI4NDM3ZjcxYjY5OThmNTBlYzIxNzQ3ODYwMjAzNTRiYzY4MGVlZjA", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-09-30T14:26:41Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-09-30T14:30:26Z"}, "message": "Less hacky `assert!` expansion", "tree": {"sha": "9cdff3e4a4331f5aeea23680622880c89b471896", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cdff3e4a4331f5aeea23680622880c89b471896"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8437f71b6998f50ec2174786020354bc680eef0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8437f71b6998f50ec2174786020354bc680eef0", "html_url": "https://github.com/rust-lang/rust/commit/b8437f71b6998f50ec2174786020354bc680eef0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8437f71b6998f50ec2174786020354bc680eef0/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "368c5f6023889f32fd22cf27bd55b3debb9ff69f", "url": "https://api.github.com/repos/rust-lang/rust/commits/368c5f6023889f32fd22cf27bd55b3debb9ff69f", "html_url": "https://github.com/rust-lang/rust/commit/368c5f6023889f32fd22cf27bd55b3debb9ff69f"}], "stats": {"total": 46, "additions": 31, "deletions": 15}, "files": [{"sha": "eeee66cbd9343e2a9a0c4c9a8bd8ddc0e6815186", "filename": "crates/hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/b8437f71b6998f50ec2174786020354bc680eef0/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8437f71b6998f50ec2174786020354bc680eef0/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=b8437f71b6998f50ec2174786020354bc680eef0", "patch": "@@ -180,22 +180,28 @@ fn assert_expand(\n     _id: MacroCallId,\n     tt: &tt::Subtree,\n ) -> ExpandResult<tt::Subtree> {\n-    // A hacky implementation for goto def and hover\n-    // We expand `assert!(cond, arg1, arg2)` to\n-    // ```\n-    // {(cond, &(arg1), &(arg2));}\n-    // ```,\n-    // which is wrong but useful.\n-\n+    let krate = tt::Ident { text: \"$crate\".into(), id: tt::TokenId::unspecified() };\n     let args = parse_exprs_with_sep(tt, ',');\n-\n-    let arg_tts = args.into_iter().flat_map(|arg| {\n-        quote! { &(#arg), }\n-    }.token_trees);\n-\n-    let expanded = quote! {\n-        { { (##arg_tts); } }\n+    let expanded = match &*args {\n+        [cond, panic_args @ ..] => {\n+            let cond = cond.clone();\n+            let panic_args = panic_args.iter().cloned().intersperse(tt::Subtree {\n+                delimiter: None,\n+                token_trees: vec![tt::TokenTree::Leaf(tt::Leaf::Punct(tt::Punct {\n+                    char: ',',\n+                    spacing: tt::Spacing::Alone,\n+                    id: tt::TokenId::unspecified(),\n+                }))],\n+            });\n+            quote! {{\n+                if !#cond {\n+                    #krate::panic!(##panic_args);\n+                }\n+            }}\n+        }\n+        [] => quote! {{}},\n     };\n+\n     ExpandResult::ok(expanded)\n }\n \n@@ -731,7 +737,7 @@ mod tests {\n             }\n             assert!(true, \"{} {:?}\", arg1(a, b, c), arg2);\n             \"#,\n-            expect![[\"{{(&(true), &(\\\"{} {:?}\\\"), &(arg1(a,b,c)), &(arg2),);}}\"]],\n+            expect![[r#\"{if!true{$crate::panic!(\"{} {:?}\",arg1(a,b,c),arg2);}}\"#]],\n         );\n     }\n "}, {"sha": "2992755dede8412c81783e679e176e66606f42bd", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_strings.html", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b8437f71b6998f50ec2174786020354bc680eef0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/b8437f71b6998f50ec2174786020354bc680eef0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html?ref=b8437f71b6998f50ec2174786020354bc680eef0", "patch": "@@ -74,7 +74,10 @@\n <span class=\"brace\">}</span>\n \n <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">rustc_builtin_macro</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">std_panic</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">macro_export</span><span class=\"attribute attribute\">]</span>\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">panic</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n+<span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">assert</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n     <span class=\"comment\">// from https://doc.rust-lang.org/std/fmt/index.html</span>\n@@ -127,4 +130,6 @@\n     <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"variable\">x</span><span class=\"format_specifier\">?</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> \"</span><span class=\"comma\">,</span> thingy<span class=\"comma\">,</span> n2<span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"macro\">panic!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">0</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"macro\">panic!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"more </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">1</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">assert!</span><span class=\"parenthesis\">(</span><span class=\"bool_literal\">true</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">1</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">assert!</span><span class=\"parenthesis\">(</span><span class=\"bool_literal\">true</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> asdasd\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">1</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "d5018f23276de205457d84f3f3365497f6fb2de7", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b8437f71b6998f50ec2174786020354bc680eef0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8437f71b6998f50ec2174786020354bc680eef0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=b8437f71b6998f50ec2174786020354bc680eef0", "patch": "@@ -469,7 +469,10 @@ mod panic {\n }\n \n #[rustc_builtin_macro(std_panic)]\n+#[macro_export]\n macro_rules! panic {}\n+#[rustc_builtin_macro]\n+macro_rules! assert {}\n \n fn main() {\n     // from https://doc.rust-lang.org/std/fmt/index.html\n@@ -522,6 +525,8 @@ fn main() {\n     println!(\"{:x?} {} \", thingy, n2);\n     panic!(\"{}\", 0);\n     panic!(\"more {}\", 1);\n+    assert!(true, \"{}\", 1);\n+    assert!(true, \"{} asdasd\", 1);\n }\"#\n         .trim(),\n         expect_file![\"./test_data/highlight_strings.html\"],"}]}