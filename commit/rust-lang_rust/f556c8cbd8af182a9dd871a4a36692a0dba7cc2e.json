{"sha": "f556c8cbd8af182a9dd871a4a36692a0dba7cc2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1NTZjOGNiZDhhZjE4MmE5ZGQ4NzFhNGEzNjY5MmEwZGJhN2NjMmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-21T15:36:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-21T15:36:39Z"}, "message": "auto merge of #15062 : pcwalton/rust/trailing-plus, r=brson\n\nThis will break code that looks like `Box<Trait+>`. Change that code to\r\n`Box<Trait>` instead.\r\n\r\nCloses #14925.\r\n\r\n[breaking-change]\r\n\r\nr? @brson", "tree": {"sha": "ff327e3fd249e8d4b9fa9f0985e78f34592a3310", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff327e3fd249e8d4b9fa9f0985e78f34592a3310"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e", "html_url": "https://github.com/rust-lang/rust/commit/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ae4b97c09a5b5c230f5dee9bdcef85951b6e00d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ae4b97c09a5b5c230f5dee9bdcef85951b6e00d", "html_url": "https://github.com/rust-lang/rust/commit/0ae4b97c09a5b5c230f5dee9bdcef85951b6e00d"}, {"sha": "ae067477fbc08e5998756d36b6ab0b82173e5c74", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae067477fbc08e5998756d36b6ab0b82173e5c74", "html_url": "https://github.com/rust-lang/rust/commit/ae067477fbc08e5998756d36b6ab0b82173e5c74"}], "stats": {"total": 47, "additions": 33, "deletions": 14}, "files": [{"sha": "043ce3bf5b07e75650366bc80b56f7a46044743e", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f556c8cbd8af182a9dd871a4a36692a0dba7cc2e", "patch": "@@ -1658,6 +1658,12 @@ impl<'a> Parser<'a> {\n             let bounds = {\n                 if self.eat(&token::BINOP(token::PLUS)) {\n                     let (_, bounds) = self.parse_ty_param_bounds(false);\n+                    if bounds.len() == 0 {\n+                        let last_span = self.last_span;\n+                        self.span_err(last_span,\n+                                      \"at least one type parameter bound \\\n+                                       must be specified after the `+`\");\n+                    }\n                     Some(bounds)\n                 } else {\n                     None"}, {"sha": "313b6eeb347234851e44e7a10379d62d58e8900b", "filename": "src/test/compile-fail/kindck-send.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Ftest%2Fcompile-fail%2Fkindck-send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Ftest%2Fcompile-fail%2Fkindck-send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-send.rs?ref=f556c8cbd8af182a9dd871a4a36692a0dba7cc2e", "patch": "@@ -40,7 +40,7 @@ fn test<'a,T,U:Send>(_: &'a int) {\n     assert_send::<&'static Dummy>(); //~ ERROR does not fulfill `Send`\n     assert_send::<&'a Dummy>(); //~ ERROR does not fulfill `Send`\n     assert_send::<&'a Dummy+Send>(); //~ ERROR does not fulfill `Send`\n-    assert_send::<Box<Dummy+>>(); //~ ERROR does not fulfill `Send`\n+    assert_send::<Box<Dummy>>(); //~ ERROR does not fulfill `Send`\n \n     // ...unless they are properly bounded\n     assert_send::<&'static Dummy+Send>();"}, {"sha": "e8f9ed4d2cfc8d760da40f213ef332a7043c8552", "filename": "src/test/compile-fail/trailing-plus-in-bounds.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Ftest%2Fcompile-fail%2Ftrailing-plus-in-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Ftest%2Fcompile-fail%2Ftrailing-plus-in-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrailing-plus-in-bounds.rs?ref=f556c8cbd8af182a9dd871a4a36692a0dba7cc2e", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::fmt::Show;\n+\n+fn main() {\n+    let x: Box<Show+> = box 3 as Box<Show+>;\n+    //~^ ERROR at least one type parameter bound must be specified\n+    //~^^ ERROR at least one type parameter bound must be specified\n+}\n+"}, {"sha": "0b9f09d9482f1b0c24a2a02f3acbb0bcd1663d01", "filename": "src/test/compile-fail/trait-bounds-cant-coerce.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-cant-coerce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-cant-coerce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-bounds-cant-coerce.rs?ref=f556c8cbd8af182a9dd871a4a36692a0dba7cc2e", "patch": "@@ -19,7 +19,7 @@ fn c(x: Box<Foo+Share+Send>) {\n     a(x);\n }\n \n-fn d(x: Box<Foo+>) {\n+fn d(x: Box<Foo>) {\n     a(x); //~ ERROR found no bounds\n }\n "}, {"sha": "b5c42c453a7936149cb3c05559314b745e360e50", "filename": "src/test/run-pass/close-over-big-then-small-data.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Ftest%2Frun-pass%2Fclose-over-big-then-small-data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Ftest%2Frun-pass%2Fclose-over-big-then-small-data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclose-over-big-then-small-data.rs?ref=f556c8cbd8af182a9dd871a4a36692a0dba7cc2e", "patch": "@@ -33,11 +33,11 @@ impl<A:Clone> Invokable<A> for Invoker<A> {\n     }\n }\n \n-fn f<A:Clone + 'static>(a: A, b: u16) -> Box<Invokable<A>+> {\n+fn f<A:Clone + 'static>(a: A, b: u16) -> Box<Invokable<A>> {\n     box Invoker {\n         a: a,\n         b: b,\n-    } as (Box<Invokable<A>>+)\n+    } as (Box<Invokable<A>>)\n }\n \n pub fn main() {"}, {"sha": "df7d59e25608bdd9c0619ab0d592c77819e126b6", "filename": "src/test/run-pass/closure-syntax.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Ftest%2Frun-pass%2Fclosure-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Ftest%2Frun-pass%2Fclosure-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclosure-syntax.rs?ref=f556c8cbd8af182a9dd871a4a36692a0dba7cc2e", "patch": "@@ -59,7 +59,6 @@ fn bar<'b>() {\n     foo::< <'a>|int, f32, &'a int|:'b + Share -> &'a int>();\n     foo::<proc()>();\n     foo::<proc() -> ()>();\n-    foo::<proc():>();\n     foo::<proc():'static>();\n     foo::<proc():Share>();\n     foo::<proc<'a>(int, f32, &'a int):'static + Share -> &'a int>();"}, {"sha": "a08bdb09d3daa1c56a7f601fe2a2e9a201563939", "filename": "src/test/run-pass/issue-7673-cast-generically-implemented-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Ftest%2Frun-pass%2Fissue-7673-cast-generically-implemented-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Ftest%2Frun-pass%2Fissue-7673-cast-generically-implemented-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-7673-cast-generically-implemented-trait.rs?ref=f556c8cbd8af182a9dd871a4a36692a0dba7cc2e", "patch": "@@ -20,6 +20,5 @@ pub fn main() {}\n trait A {}\n impl<T: 'static> A for T {}\n \n-fn owned1<T: 'static>(a: T) { box a as Box<A+>; } /* note `:` */\n fn owned2<T: 'static>(a: Box<T>) { a as Box<A>; }\n fn owned3<T: 'static>(a: Box<T>) { box a as Box<A>; }"}, {"sha": "b6076cc26fc12408ebbdc2166216ee799e95232a", "filename": "src/test/run-pass/proc-bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Ftest%2Frun-pass%2Fproc-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Ftest%2Frun-pass%2Fproc-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fproc-bounds.rs?ref=f556c8cbd8af182a9dd871a4a36692a0dba7cc2e", "patch": "@@ -28,7 +28,7 @@ pub fn main() {\n \n \n     let a = 3;\n-    bar::<proc():>(proc() {\n+    bar::<proc()>(proc() {\n         let b = &a;\n         println!(\"{}\", *b);\n     });"}, {"sha": "013a8dcf60e7acb966898880a72871560bb72468", "filename": "src/test/run-pass/trait-bounds-basic.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Ftest%2Frun-pass%2Ftrait-bounds-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f556c8cbd8af182a9dd871a4a36692a0dba7cc2e/src%2Ftest%2Frun-pass%2Ftrait-bounds-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-bounds-basic.rs?ref=f556c8cbd8af182a9dd871a4a36692a0dba7cc2e", "patch": "@@ -12,22 +12,19 @@\n trait Foo {\n }\n \n-fn a(_x: Box<Foo+>) {\n-}\n-\n fn b(_x: Box<Foo+Send>) {\n }\n \n fn c(x: Box<Foo+Share+Send>) {\n-    a(x);\n+    e(x);\n }\n \n fn d(x: Box<Foo+Send>) {\n-    b(x);\n+    e(x);\n }\n \n-fn e(x: Box<Foo>) { // sugar for Box<Foo+Owned>\n-    a(x);\n+fn e(x: Box<Foo>) {\n+    e(x);\n }\n \n pub fn main() { }"}]}