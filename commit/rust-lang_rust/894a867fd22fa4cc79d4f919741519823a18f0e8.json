{"sha": "894a867fd22fa4cc79d4f919741519823a18f0e8", "node_id": "C_kwDOAAsO6NoAKDg5NGE4NjdmZDIyZmE0Y2M3OWQ0ZjkxOTc0MTUxOTgyM2ExOGYwZTg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-20T22:37:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-20T22:37:36Z"}, "message": "Rollup merge of #93087 - ricobbe:alt-calling-convention-test-fix, r=Mark-Simulacrum\n\nFix src/test/run-make/raw-dylib-alt-calling-convention\n\nFix the test headers so that the test now runs on all intended platforms; it is currently ignored on all platforms because the headers are incorrect.  Also comment out a couple of function calls that fail because of an unrelated problem, described in issue #91167.", "tree": {"sha": "c73881f728f39a964cf2b504d01fcecd98f227bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c73881f728f39a964cf2b504d01fcecd98f227bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/894a867fd22fa4cc79d4f919741519823a18f0e8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh6eQwCRBK7hj4Ov3rIwAA0TIIAGbasWXUSCoLfqw4H1iVVeb4\nX0+AaEfj2gESq8HtCsJpu5FxgaLHdGVqtd3yOwxS+kb9iMN9VJPwQMW1EISth+8H\nswYIXxZbnaaHHRXBRirBnNZ9/+GiQTbdYdxwCNC2iZGAcRaS1Jpp0dFM5cjKHuiu\nqG8C51JEqJpGMeBcWJx+XVK5Czj9Jt+GYsbAMLUimEPhBKhfnhDnmK7FrtGL3uQD\nfSi4k00TNCI5/r8pftRydRoOmXJ1CCLK+3P01fzyQ+tmZP8P4/cZjVm5JV8/oNTH\nTAcuCMejL0U3BBi8lKKaXmzbX4rIsezer2vMRUw3jiF4mrqGoUTrzjJmqIo6d4I=\n=n2Vf\n-----END PGP SIGNATURE-----\n", "payload": "tree c73881f728f39a964cf2b504d01fcecd98f227bd\nparent 0a9aaec8ebcc7e00bdd02fe196ae7f2e76db2c68\nparent 10858d28af13351e8d959a8a577427b1580a7185\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642718256 +0100\ncommitter GitHub <noreply@github.com> 1642718256 +0100\n\nRollup merge of #93087 - ricobbe:alt-calling-convention-test-fix, r=Mark-Simulacrum\n\nFix src/test/run-make/raw-dylib-alt-calling-convention\n\nFix the test headers so that the test now runs on all intended platforms; it is currently ignored on all platforms because the headers are incorrect.  Also comment out a couple of function calls that fail because of an unrelated problem, described in issue #91167.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/894a867fd22fa4cc79d4f919741519823a18f0e8", "html_url": "https://github.com/rust-lang/rust/commit/894a867fd22fa4cc79d4f919741519823a18f0e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/894a867fd22fa4cc79d4f919741519823a18f0e8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a9aaec8ebcc7e00bdd02fe196ae7f2e76db2c68", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a9aaec8ebcc7e00bdd02fe196ae7f2e76db2c68", "html_url": "https://github.com/rust-lang/rust/commit/0a9aaec8ebcc7e00bdd02fe196ae7f2e76db2c68"}, {"sha": "10858d28af13351e8d959a8a577427b1580a7185", "url": "https://api.github.com/repos/rust-lang/rust/commits/10858d28af13351e8d959a8a577427b1580a7185", "html_url": "https://github.com/rust-lang/rust/commit/10858d28af13351e8d959a8a577427b1580a7185"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "4af8b43ea848d15290a7100ceb39cfa9bb2b8ca6", "filename": "src/test/run-make/raw-dylib-alt-calling-convention/Makefile", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/894a867fd22fa4cc79d4f919741519823a18f0e8/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/894a867fd22fa4cc79d4f919741519823a18f0e8/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2FMakefile?ref=894a867fd22fa4cc79d4f919741519823a18f0e8", "patch": "@@ -1,12 +1,17 @@\n # Test the behavior of #[link(.., kind = \"raw-dylib\")] with alternative calling conventions.\n \n-# only-i686-pc-windows-msvc\n+# only-x86\n+# only-windows\n \n -include ../../run-make-fulldeps/tools.mk\n \n all:\n \t$(call COMPILE_OBJ,\"$(TMPDIR)\"/extern.obj,extern.c)\n+ifdef IS_MSVC\n \t$(CC) \"$(TMPDIR)\"/extern.obj -link -dll -out:\"$(TMPDIR)\"/extern.dll\n+else\n+\t$(CC) \"$(TMPDIR)\"/extern.obj -shared -o \"$(TMPDIR)\"/extern.dll\n+endif\n \t$(RUSTC) --crate-type lib --crate-name raw_dylib_alt_calling_convention_test lib.rs\n \t$(RUSTC) --crate-type bin driver.rs -L \"$(TMPDIR)\"\n \t\"$(TMPDIR)\"/driver > \"$(TMPDIR)\"/output.txt"}, {"sha": "165792b0490156848568a1a3e8beca39dc241bba", "filename": "src/test/run-make/raw-dylib-alt-calling-convention/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/894a867fd22fa4cc79d4f919741519823a18f0e8/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/894a867fd22fa4cc79d4f919741519823a18f0e8/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Flib.rs?ref=894a867fd22fa4cc79d4f919741519823a18f0e8", "patch": "@@ -62,9 +62,12 @@ pub fn library_function() {\n         fastcall_fn_2(16, 3.5);\n         fastcall_fn_3(3.5);\n         fastcall_fn_4(1, 2, 3.0);\n-        fastcall_fn_5(S { x: 1, y: 2 }, 16);\n+        // FIXME: 91167\n+        // rustc generates incorrect code for the calls to fastcall_fn_5 and fastcall_fn_7\n+        // on i686-pc-windows-gnu; commenting these out until the indicated issue is fixed.\n+        //fastcall_fn_5(S { x: 1, y: 2 }, 16);\n         fastcall_fn_6(Some(&S { x: 10, y: 12 }));\n-        fastcall_fn_7(S2 { x: 15, y: 16 }, 3);\n+        //fastcall_fn_7(S2 { x: 15, y: 16 }, 3);\n         fastcall_fn_8(S3 { x: [1, 2, 3, 4, 5] }, S3 { x: [6, 7, 8, 9, 10] });\n         fastcall_fn_9(1, 3.0);\n     }"}, {"sha": "348bad63ed0ded02bf309200f3e633f62992ea0b", "filename": "src/test/run-make/raw-dylib-alt-calling-convention/output.txt", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/894a867fd22fa4cc79d4f919741519823a18f0e8/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Foutput.txt", "raw_url": "https://github.com/rust-lang/rust/raw/894a867fd22fa4cc79d4f919741519823a18f0e8/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Foutput.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fraw-dylib-alt-calling-convention%2Foutput.txt?ref=894a867fd22fa4cc79d4f919741519823a18f0e8", "patch": "@@ -11,8 +11,6 @@ fastcall_fn_1(14)\n fastcall_fn_2(16, 3.5)\n fastcall_fn_3(3.5)\n fastcall_fn_4(1, 2, 3.0)\n-fastcall_fn_5(S { x: 1, y: 2 }, 16)\n fastcall_fn_6(S { x: 10, y: 12 })\n-fastcall_fn_7(S2 { x: 15, y: 16 }, 3)\n fastcall_fn_8(S3 { x: [1, 2, 3, 4, 5] }, S3 { x: [6, 7, 8, 9, 10] })\n fastcall_fn_9(1, 3.0)"}]}