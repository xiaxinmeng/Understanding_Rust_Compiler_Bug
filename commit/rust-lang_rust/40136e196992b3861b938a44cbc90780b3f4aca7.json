{"sha": "40136e196992b3861b938a44cbc90780b3f4aca7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwMTM2ZTE5Njk5MmIzODYxYjkzOGE0NGNiYzkwNzgwYjNmNGFjYTc=", "commit": {"author": {"name": "Stefan Schindler", "email": "dns2utf8@estada.ch", "date": "2021-06-28T23:41:39Z"}, "committer": {"name": "Stefan Schindler", "email": "dns2utf8@estada.ch", "date": "2021-08-09T22:47:04Z"}, "message": "Implement sequential execution", "tree": {"sha": "1d2a12b415542376e6220a8875d28dbbf35b12ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d2a12b415542376e6220a8875d28dbbf35b12ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40136e196992b3861b938a44cbc90780b3f4aca7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40136e196992b3861b938a44cbc90780b3f4aca7", "html_url": "https://github.com/rust-lang/rust/commit/40136e196992b3861b938a44cbc90780b3f4aca7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40136e196992b3861b938a44cbc90780b3f4aca7/comments", "author": {"login": "dns2utf8", "id": 739070, "node_id": "MDQ6VXNlcjczOTA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/739070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dns2utf8", "html_url": "https://github.com/dns2utf8", "followers_url": "https://api.github.com/users/dns2utf8/followers", "following_url": "https://api.github.com/users/dns2utf8/following{/other_user}", "gists_url": "https://api.github.com/users/dns2utf8/gists{/gist_id}", "starred_url": "https://api.github.com/users/dns2utf8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dns2utf8/subscriptions", "organizations_url": "https://api.github.com/users/dns2utf8/orgs", "repos_url": "https://api.github.com/users/dns2utf8/repos", "events_url": "https://api.github.com/users/dns2utf8/events{/privacy}", "received_events_url": "https://api.github.com/users/dns2utf8/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dns2utf8", "id": 739070, "node_id": "MDQ6VXNlcjczOTA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/739070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dns2utf8", "html_url": "https://github.com/dns2utf8", "followers_url": "https://api.github.com/users/dns2utf8/followers", "following_url": "https://api.github.com/users/dns2utf8/following{/other_user}", "gists_url": "https://api.github.com/users/dns2utf8/gists{/gist_id}", "starred_url": "https://api.github.com/users/dns2utf8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dns2utf8/subscriptions", "organizations_url": "https://api.github.com/users/dns2utf8/orgs", "repos_url": "https://api.github.com/users/dns2utf8/repos", "events_url": "https://api.github.com/users/dns2utf8/events{/privacy}", "received_events_url": "https://api.github.com/users/dns2utf8/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1daa8d984eb715c87ca010c8fd0ac96a698d214", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1daa8d984eb715c87ca010c8fd0ac96a698d214", "html_url": "https://github.com/rust-lang/rust/commit/a1daa8d984eb715c87ca010c8fd0ac96a698d214"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "69665693104a9c706d446cbc562112d4edb51bad", "filename": "src/tools/rustdoc-gui/tester.js", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/40136e196992b3861b938a44cbc90780b3f4aca7/src%2Ftools%2Frustdoc-gui%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/40136e196992b3861b938a44cbc90780b3f4aca7/src%2Ftools%2Frustdoc-gui%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-gui%2Ftester.js?ref=40136e196992b3861b938a44cbc90780b3f4aca7", "patch": "@@ -84,7 +84,10 @@ async function main(argv) {\n         process.exit(1);\n     }\n \n+    // Print successful tests too\n     let debug = false;\n+    // Run tests in sequentially\n+    let no_headless = false;\n     const options = new Options();\n     try {\n         // This is more convenient that setting fields one by one.\n@@ -101,6 +104,7 @@ async function main(argv) {\n         }\n         if (opts[\"no_headless\"]) {\n             args.push(\"--no-headless\");\n+            no_headless = true;\n         }\n         options.parseArguments(args);\n     } catch (error) {\n@@ -155,6 +159,9 @@ async function main(argv) {\n                 failed = true;\n             })\n         );\n+        if (no_headless) {\n+            await tests[i];\n+        }\n     }\n     await Promise.all(tests);\n     // final \\n after the tests\n@@ -187,9 +194,6 @@ async function main(argv) {\n             case RUN_ERRORED:\n                 console.error(r.output);\n                 break;\n-            default:\n-                console.error(`unexpected status = ${r.status}`);\n-                process.exit(4);\n         }\n     });\n "}]}