{"sha": "733fd64260793a0f7335e4f75ba9197d5fa98b70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczM2ZkNjQyNjA3OTNhMGY3MzM1ZTRmNzViYTkxOTdkNWZhOThiNzA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-10-26T17:11:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-26T17:11:58Z"}, "message": "Merge #2079\n\n2079: avoid TextEditorBuilder for simple edits r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "644d492ac7bc4a08cd7938be0218dbf8f88b598b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/644d492ac7bc4a08cd7938be0218dbf8f88b598b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/733fd64260793a0f7335e4f75ba9197d5fa98b70", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdtH5eCRBK7hj4Ov3rIwAAdHIIAKIwvFmV3/1Ka2gik3ll6eR3\nYkveiLlt9cz8lj3QjPL55C/mmoZINYOxShruZw2uUPEKsh5xGys15fTPY1KUsDki\nuwL345kO/FZ0H6FOpheqKvY8e7E+16ttNdSFZrEWbThNxz3h/zwIZ85TTaMiIyaQ\nT2zVPKdHSnKcMNpaaN09iEZf33IxEQCeKFSKn/gPnLSd5Wntj8LFTKmN8MAqeD4o\na3R4YWX56g45Mhjl+5vsuUpZjQ2QS2PyY/TxgebzOLlKHeLiSbvkBFn/bR/bPsz6\nTlRkI5s7RK4A1JxKwU0/Ck7eqNJRylxEMR/R3VrJtdQJ6vedcOSCyKsbrG3z04c=\n=r/sm\n-----END PGP SIGNATURE-----\n", "payload": "tree 644d492ac7bc4a08cd7938be0218dbf8f88b598b\nparent 568ef921acb8d35eed434089c1b1947c585c3f4c\nparent 431e4ff4ef83455adc7e2c0e3f732d6dc482641e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1572109918 +0000\ncommitter GitHub <noreply@github.com> 1572109918 +0000\n\nMerge #2079\n\n2079: avoid TextEditorBuilder for simple edits r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/733fd64260793a0f7335e4f75ba9197d5fa98b70", "html_url": "https://github.com/rust-lang/rust/commit/733fd64260793a0f7335e4f75ba9197d5fa98b70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/733fd64260793a0f7335e4f75ba9197d5fa98b70/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "568ef921acb8d35eed434089c1b1947c585c3f4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/568ef921acb8d35eed434089c1b1947c585c3f4c", "html_url": "https://github.com/rust-lang/rust/commit/568ef921acb8d35eed434089c1b1947c585c3f4c"}, {"sha": "431e4ff4ef83455adc7e2c0e3f732d6dc482641e", "url": "https://api.github.com/repos/rust-lang/rust/commits/431e4ff4ef83455adc7e2c0e3f732d6dc482641e", "html_url": "https://github.com/rust-lang/rust/commit/431e4ff4ef83455adc7e2c0e3f732d6dc482641e"}], "stats": {"total": 58, "additions": 21, "deletions": 37}, "files": [{"sha": "60ed3518b89a92994243fe8dc4b9b249c8904dd6", "filename": "crates/ra_ide_api/src/completion/complete_postfix.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/733fd64260793a0f7335e4f75ba9197d5fa98b70/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/733fd64260793a0f7335e4f75ba9197d5fa98b70/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs?ref=733fd64260793a0f7335e4f75ba9197d5fa98b70", "patch": "@@ -9,16 +9,14 @@ use crate::{\n };\n use hir::{Ty, TypeCtor};\n use ra_syntax::{ast::AstNode, TextRange, TextUnit};\n-use ra_text_edit::TextEditBuilder;\n+use ra_text_edit::TextEdit;\n \n fn postfix_snippet(ctx: &CompletionContext, label: &str, detail: &str, snippet: &str) -> Builder {\n     let edit = {\n         let receiver_range =\n             ctx.dot_receiver.as_ref().expect(\"no receiver available\").syntax().text_range();\n         let delete_range = TextRange::from_to(receiver_range.start(), ctx.source_range().end());\n-        let mut builder = TextEditBuilder::default();\n-        builder.replace(delete_range, snippet.to_string());\n-        builder.finish()\n+        TextEdit::replace(delete_range, snippet.to_string())\n     };\n     CompletionItem::new(CompletionKind::Postfix, ctx.source_range(), label)\n         .detail(detail)"}, {"sha": "5c9c44704b3bb9daeb105833c7d4271d0049a2fc", "filename": "crates/ra_ide_api/src/completion/completion_item.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/733fd64260793a0f7335e4f75ba9197d5fa98b70/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/733fd64260793a0f7335e4f75ba9197d5fa98b70/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=733fd64260793a0f7335e4f75ba9197d5fa98b70", "patch": "@@ -4,7 +4,7 @@ use std::fmt;\n \n use hir::Documentation;\n use ra_syntax::TextRange;\n-use ra_text_edit::{TextEdit, TextEditBuilder};\n+use ra_text_edit::TextEdit;\n \n /// `CompletionItem` describes a single completion variant in the editor pop-up.\n /// It is basically a POD with various properties. To construct a\n@@ -192,12 +192,10 @@ impl Builder {\n         let label = self.label;\n         let text_edit = match self.text_edit {\n             Some(it) => it,\n-            None => {\n-                let mut builder = TextEditBuilder::default();\n-                builder\n-                    .replace(self.source_range, self.insert_text.unwrap_or_else(|| label.clone()));\n-                builder.finish()\n-            }\n+            None => TextEdit::replace(\n+                self.source_range,\n+                self.insert_text.unwrap_or_else(|| label.clone()),\n+            ),\n         };\n \n         CompletionItem {"}, {"sha": "1f1f5cd742c98e30f8fd277cdb43eb363ceb97e4", "filename": "crates/ra_ide_api/src/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/733fd64260793a0f7335e4f75ba9197d5fa98b70/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/733fd64260793a0f7335e4f75ba9197d5fa98b70/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs?ref=733fd64260793a0f7335e4f75ba9197d5fa98b70", "patch": "@@ -85,10 +85,9 @@ pub(crate) fn diagnostics(db: &RootDatabase, file_id: FileId) -> Vec<Diagnostic>\n     })\n     .on::<hir::diagnostics::MissingOkInTailExpr, _>(|d| {\n         let node = d.ast(db);\n-        let mut builder = TextEditBuilder::default();\n         let replacement = format!(\"Ok({})\", node.syntax());\n-        builder.replace(node.syntax().text_range(), replacement);\n-        let fix = SourceChange::source_file_edit_from(\"wrap with ok\", file_id, builder.finish());\n+        let edit = TextEdit::replace(node.syntax().text_range(), replacement);\n+        let fix = SourceChange::source_file_edit_from(\"wrap with ok\", file_id, edit);\n         res.borrow_mut().push(Diagnostic {\n             range: d.highlight_range(),\n             message: d.message(),\n@@ -152,9 +151,7 @@ fn text_edit_for_remove_unnecessary_braces_with_self_in_use_statement(\n         let start = use_tree_list_node.prev_sibling_or_token()?.text_range().start();\n         let end = use_tree_list_node.text_range().end();\n         let range = TextRange::from_to(start, end);\n-        let mut edit_builder = TextEditBuilder::default();\n-        edit_builder.delete(range);\n-        return Some(edit_builder.finish());\n+        return Some(TextEdit::delete(range));\n     }\n     None\n }"}, {"sha": "a8783d7a0dc4463e5fbbe40e216e4470b30a03ae", "filename": "crates/ra_ide_api/src/references/rename.rs", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/733fd64260793a0f7335e4f75ba9197d5fa98b70/crates%2Fra_ide_api%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/733fd64260793a0f7335e4f75ba9197d5fa98b70/crates%2Fra_ide_api%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Freferences%2Frename.rs?ref=733fd64260793a0f7335e4f75ba9197d5fa98b70", "patch": "@@ -3,6 +3,7 @@\n use hir::ModuleSource;\n use ra_db::{SourceDatabase, SourceDatabaseExt};\n use ra_syntax::{algo::find_node_at_offset, ast, AstNode, SyntaxNode};\n+use ra_text_edit::TextEdit;\n use relative_path::{RelativePath, RelativePathBuf};\n \n use crate::{\n@@ -43,14 +44,7 @@ fn source_edit_from_file_id_range(\n     range: TextRange,\n     new_name: &str,\n ) -> SourceFileEdit {\n-    SourceFileEdit {\n-        file_id,\n-        edit: {\n-            let mut builder = ra_text_edit::TextEditBuilder::default();\n-            builder.replace(range, new_name.into());\n-            builder.finish()\n-        },\n-    }\n+    SourceFileEdit { file_id, edit: TextEdit::replace(range, new_name.into()) }\n }\n \n fn rename_mod(\n@@ -94,11 +88,7 @@ fn rename_mod(\n \n     let edit = SourceFileEdit {\n         file_id: position.file_id,\n-        edit: {\n-            let mut builder = ra_text_edit::TextEditBuilder::default();\n-            builder.replace(ast_name.syntax().text_range(), new_name.into());\n-            builder.finish()\n-        },\n+        edit: TextEdit::replace(ast_name.syntax().text_range(), new_name.into()),\n     };\n     source_file_edits.push(edit);\n \n@@ -126,12 +116,14 @@ fn rename_reference(\n \n #[cfg(test)]\n mod tests {\n+    use insta::assert_debug_snapshot;\n+    use ra_text_edit::TextEditBuilder;\n+    use test_utils::assert_eq_text;\n+\n     use crate::{\n         mock_analysis::analysis_and_position, mock_analysis::single_file_with_position, FileId,\n         ReferenceSearchResult,\n     };\n-    use insta::assert_debug_snapshot;\n-    use test_utils::assert_eq_text;\n \n     #[test]\n     fn test_find_all_refs_for_local() {\n@@ -452,7 +444,7 @@ mod tests {\n     fn test_rename(text: &str, new_name: &str, expected: &str) {\n         let (analysis, position) = single_file_with_position(text);\n         let source_change = analysis.rename(position, new_name).unwrap();\n-        let mut text_edit_builder = ra_text_edit::TextEditBuilder::default();\n+        let mut text_edit_builder = TextEditBuilder::default();\n         let mut file_id: Option<FileId> = None;\n         if let Some(change) = source_change {\n             for edit in change.info.source_file_edits {"}, {"sha": "2dfbe6944dd9b5b832813b488b6398b36539784a", "filename": "crates/ra_ide_api/src/typing.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/733fd64260793a0f7335e4f75ba9197d5fa98b70/crates%2Fra_ide_api%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/733fd64260793a0f7335e4f75ba9197d5fa98b70/crates%2Fra_ide_api%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Ftyping.rs?ref=733fd64260793a0f7335e4f75ba9197d5fa98b70", "patch": "@@ -22,7 +22,7 @@ use ra_syntax::{\n     SyntaxKind::*,\n     SyntaxToken, TextRange, TextUnit, TokenAtOffset,\n };\n-use ra_text_edit::{TextEdit, TextEditBuilder};\n+use ra_text_edit::TextEdit;\n \n use crate::{db::RootDatabase, source_change::SingleFileChange, SourceChange, SourceFileEdit};\n \n@@ -49,13 +49,12 @@ pub(crate) fn on_enter(db: &RootDatabase, position: FilePosition) -> Option<Sour\n     let indent = node_indent(&file, comment.syntax())?;\n     let inserted = format!(\"\\n{}{} \", indent, prefix);\n     let cursor_position = position.offset + TextUnit::of_str(&inserted);\n-    let mut edit = TextEditBuilder::default();\n-    edit.insert(position.offset, inserted);\n+    let edit = TextEdit::insert(position.offset, inserted);\n \n     Some(\n         SourceChange::source_file_edit(\n             \"on enter\",\n-            SourceFileEdit { edit: edit.finish(), file_id: position.file_id },\n+            SourceFileEdit { edit, file_id: position.file_id },\n         )\n         .with_cursor(FilePosition { offset: cursor_position, file_id: position.file_id }),\n     )"}]}