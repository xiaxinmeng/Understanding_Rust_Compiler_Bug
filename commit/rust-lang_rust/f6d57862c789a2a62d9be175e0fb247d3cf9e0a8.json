{"sha": "f6d57862c789a2a62d9be175e0fb247d3cf9e0a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ZDU3ODYyYzc4OWEyYTYyZDliZTE3NWUwZmIyNDdkM2NmOWUwYTg=", "commit": {"author": {"name": "flip1995", "email": "9744647+flip1995@users.noreply.github.com", "date": "2018-09-10T15:09:15Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2018-11-02T12:49:09Z"}, "message": "Add new lint: unknwon_clippy_lintsg", "tree": {"sha": "e42588c51d70f28853c1cd03559f81cc24ba7033", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e42588c51d70f28853c1cd03559f81cc24ba7033"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6d57862c789a2a62d9be175e0fb247d3cf9e0a8", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE46kBTF5vnyuSPg0W6OiXpYcOQcIFAlvcR8UACgkQ6OiXpYcO\nQcILrg//Ym/cEkvwVsVROIo2Pc9NSLwMpaZcQxeoZ5guGkGM1P2C2NjSyNjX1WmK\nBlqv97liD3Zszwlqql/2B+T9OXoX+Ns1y/TTenMkHdOat3IdWLbSSt1GrfTgql7d\njfgb+DoIWhtDWldBFbs5o4PG5PNC/X4OM0iiScl3pKVxA1RVzIuv3XGdZJNy5JNq\noqscvRAsf1LYwCwwZAU8BA/86p1pJeR6beZy47HUfrT0LkckT/IC+/77+MLsHhGl\nZ1AOTcZDvrjzZlJqfXMovc6E+RnKNdP++a3bKIFP14SzSSVaXWxO0G29VVPc3M7h\nZcSmfsbsnaxxTta3DdkYJGd3pAhW++Jd8mxlVt052sbqx3fbZ0S4kcL811c8EWbz\nu/LkZPC4RnTG3DTztiVcRCpYDBejQSUEuJkup4YpoDN7+aIPq+JcBgmCwztWYueP\nCvOwp+wJFkHKoIpKP9YX0POKI1NPoj/2Am6oMMCzHYfmlNSMVENvDotgB6Be1CPO\nkZaRZWUwHtBDo/e7RTgVNYt+Q+7scZeBP/+jim8nT9hC3Ia7vHMy6EvRS2frL8ob\nfbFtAHCtVAEaV8VRgSBF1Uu91D7W/DFdd+Lm3DbNGSNbIOZcSYyEmFo11rmYmW+J\nfgZPIn8wZ+AkWCWZKzjE15SCVAfLVP7keUfRYrOl06nKo59vcXk=\n=RnFQ\n-----END PGP SIGNATURE-----", "payload": "tree e42588c51d70f28853c1cd03559f81cc24ba7033\nparent 62568923d5c949fc09eb84330ea352eca3e50870\nauthor flip1995 <9744647+flip1995@users.noreply.github.com> 1536592155 +0200\ncommitter flip1995 <hello@philkrones.com> 1541162949 +0100\n\nAdd new lint: unknwon_clippy_lintsg\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6d57862c789a2a62d9be175e0fb247d3cf9e0a8", "html_url": "https://github.com/rust-lang/rust/commit/f6d57862c789a2a62d9be175e0fb247d3cf9e0a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6d57862c789a2a62d9be175e0fb247d3cf9e0a8/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62568923d5c949fc09eb84330ea352eca3e50870", "url": "https://api.github.com/repos/rust-lang/rust/commits/62568923d5c949fc09eb84330ea352eca3e50870", "html_url": "https://github.com/rust-lang/rust/commit/62568923d5c949fc09eb84330ea352eca3e50870"}], "stats": {"total": 94, "additions": 87, "deletions": 7}, "files": [{"sha": "a6c33efd91abc553430091130bc54ea52499f795", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 85, "deletions": 7, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/f6d57862c789a2a62d9be175e0fb247d3cf9e0a8/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6d57862c789a2a62d9be175e0fb247d3cf9e0a8/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=f6d57862c789a2a62d9be175e0fb247d3cf9e0a8", "patch": "@@ -12,16 +12,20 @@\n \n use crate::reexport::*;\n use crate::utils::{\n-    in_macro, last_line_of_span, match_def_path, opt_def_id, paths, snippet_opt, span_lint, span_lint_and_then,\n-    without_block_comments,\n+    in_macro, last_line_of_span, match_def_path, opt_def_id, paths, snippet_opt, span_lint,\n+    span_lint_and_then, without_block_comments,\n };\n-use crate::rustc::hir::*;\n-use crate::rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n-use crate::rustc::{declare_tool_lint, lint_array};\n use if_chain::if_chain;\n+use crate::rustc::hir::*;\n+use crate::rustc::lint::{\n+    CheckLintNameResult, LateContext, LateLintPass, LintArray, LintContext, LintPass,\n+};\n use crate::rustc::ty::{self, TyCtxt};\n+use crate::rustc::{declare_tool_lint, lint_array};\n use semver::Version;\n-use crate::syntax::ast::{AttrStyle, Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem, NestedMetaItemKind};\n+use crate::syntax::ast::{\n+    AttrStyle, Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem, NestedMetaItemKind,\n+};\n use crate::syntax::source_map::Span;\n use crate::rustc_errors::Applicability;\n \n@@ -138,6 +142,33 @@ declare_clippy_lint! {\n     \"empty line after outer attribute\"\n }\n \n+/// **What it does:** Checks for `allow`/`warn`/`deny`/`forbid` attributes with scoped clippy\n+/// lints and if those lints exist in clippy. If there is a uppercase letter in the lint name\n+/// (not the tool name) and a lowercase version of this lint exists, it will suggest to lowercase\n+/// the lint name.\n+///\n+/// **Why is this bad?** An lint attribute with a misstyped lint name won't have an effect.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+/// Bad:\n+/// ```rust\n+/// #![warn(if_not_els)]\n+/// #![deny(clippy::All)]\n+/// ```\n+///\n+/// Good:\n+/// ```rust\n+/// #![warn(if_not_else)]\n+/// #![deny(clippy::all)]\n+/// ```\n+declare_clippy_lint! {\n+    pub UNKNOWN_CLIPPY_LINTS,\n+    style,\n+    \"unknown_lints for scoped Clippy lints\"\n+}\n+\n #[derive(Copy, Clone)]\n pub struct AttrPass;\n \n@@ -147,14 +178,21 @@ impl LintPass for AttrPass {\n             INLINE_ALWAYS,\n             DEPRECATED_SEMVER,\n             USELESS_ATTRIBUTE,\n-            EMPTY_LINE_AFTER_OUTER_ATTR\n+            EMPTY_LINE_AFTER_OUTER_ATTR,\n+            UNKNOWN_CLIPPY_LINTS,\n         )\n     }\n }\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AttrPass {\n     fn check_attribute(&mut self, cx: &LateContext<'a, 'tcx>, attr: &'tcx Attribute) {\n         if let Some(ref items) = attr.meta_item_list() {\n+            match &*attr.name().as_str() {\n+                \"allow\" | \"warn\" | \"deny\" | \"forbid\" => {\n+                    check_clippy_lint_names(cx, items);\n+                }\n+                _ => {}\n+            }\n             if items.is_empty() || attr.name() != \"deprecated\" {\n                 return;\n             }\n@@ -247,6 +285,46 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AttrPass {\n     }\n }\n \n+fn check_clippy_lint_names(cx: &LateContext<'_, '_>, items: &Vec<NestedMetaItem>) {\n+    let lint_store = cx.lints();\n+    for lint in items {\n+        if_chain! {\n+            if let Some(word) = lint.word();\n+            if let Some(tool_name) = word.is_scoped();\n+            if tool_name.as_str() == \"clippy\";\n+            let name = word.name();\n+            if let CheckLintNameResult::Tool(Err((None, _))) = lint_store.check_lint_name(\n+                &name.as_str(),\n+                Some(tool_name.as_str()),\n+                );\n+            then {\n+                span_lint_and_then(\n+                    cx,\n+                    UNKNOWN_CLIPPY_LINTS,\n+                    lint.span,\n+                    &format!(\"unknwon clippy lint: clippy::{}\", name),\n+                    |db| {\n+                        if name.as_str().chars().any(|c| c.is_uppercase()) {\n+                            let name_lower = name.as_str().to_lowercase().to_string();\n+                            match lint_store.check_lint_name(\n+                                &name_lower,\n+                                Some(tool_name.as_str())\n+                            ) {\n+                                CheckLintNameResult::NoLint => {}\n+                                _ => {\n+                                    db.span_suggestion(lint.span,\n+                                                       \"lowercase the lint name\",\n+                                                       name_lower);\n+                                }\n+                            }\n+                        }\n+                    }\n+                );\n+            }\n+        };\n+    }\n+}\n+\n fn is_relevant_item(tcx: TyCtxt<'_, '_, '_>, item: &Item) -> bool {\n     if let ItemKind::Fn(_, _, _, eid) = item.node {\n         is_relevant_expr(tcx, tcx.body_tables(eid), &tcx.hir.body(eid).value)"}, {"sha": "56cd2ca3e926aad65311afbac2b1dc1cb194bf4b", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6d57862c789a2a62d9be175e0fb247d3cf9e0a8/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6d57862c789a2a62d9be175e0fb247d3cf9e0a8/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=f6d57862c789a2a62d9be175e0fb247d3cf9e0a8", "patch": "@@ -533,6 +533,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         assign_ops::ASSIGN_OP_PATTERN,\n         assign_ops::MISREFACTORED_ASSIGN_OP,\n         attrs::DEPRECATED_SEMVER,\n+        attrs::UNKNOWN_CLIPPY_LINTS,\n         attrs::USELESS_ATTRIBUTE,\n         bit_mask::BAD_BIT_MASK,\n         bit_mask::INEFFECTIVE_BIT_MASK,\n@@ -749,6 +750,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n \n     reg.register_lint_group(\"clippy::style\", Some(\"clippy_style\"), vec![\n         assign_ops::ASSIGN_OP_PATTERN,\n+        attrs::UNKNOWN_CLIPPY_LINTS,\n         bit_mask::VERBOSE_BIT_MASK,\n         blacklisted_name::BLACKLISTED_NAME,\n         block_in_if_condition::BLOCK_IN_IF_CONDITION_EXPR,"}]}