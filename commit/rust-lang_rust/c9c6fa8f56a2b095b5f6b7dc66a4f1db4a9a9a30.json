{"sha": "c9c6fa8f56a2b095b5f6b7dc66a4f1db4a9a9a30", "node_id": "C_kwDOAAsO6NoAKGM5YzZmYThmNTZhMmIwOTViNWY2YjdkYzY2YTRmMWRiNGE5YTlhMzA", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-20T17:25:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-20T17:25:17Z"}, "message": "Merge #10821\n\n10821: fix: wrap `inline_call` and `inline_into_callers` if it inlines into the left side of a binary expression r=Veykril a=rainy-me\n\nclose #10359\n\nCo-authored-by: rainy-me <github@yue.coffee>", "tree": {"sha": "af6ca90d818f2c76934b9250f834f744ad36fc92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af6ca90d818f2c76934b9250f834f744ad36fc92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9c6fa8f56a2b095b5f6b7dc66a4f1db4a9a9a30", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhmS99CRBK7hj4Ov3rIwAA570IAF/SYDRRfUnLWWH8f5iY8dA/\no1NBeYyeqbtHFPcFvLBNdtwoxmbIJqjg8peuEwvNyxpdwHfnV3+zBRmRR+QbVGw7\n+yLazHnmauLqjd7UVJhENPQjDnMMPdiwP8Vy/50un/09bM79o8S6UQCyg1X11WQr\nczQ/Bfd4r//yCf6RVSK1O+3GUrRyqTMcGHigSAh0y1UxEKuaJZ37yp/M2Lt6lkkh\n++WFmf74ATqnzubmW5lgfUo9LTG9Gt3xyAOJF48uutd8v+HWBAmMpNL59Y9pzdYz\nQpk7W2Dh8IokAqc6wHEuMKoKPyJyEeoLfcZQZRw8DcRDfD0zNiR2iZ7nOLEKgJ0=\n=ZqF7\n-----END PGP SIGNATURE-----\n", "payload": "tree af6ca90d818f2c76934b9250f834f744ad36fc92\nparent 55b7a068884ede8bc4c9ff191e0317156176e5a8\nparent ebffaa427481935caac550c62458ee94917c3995\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1637429117 +0000\ncommitter GitHub <noreply@github.com> 1637429117 +0000\n\nMerge #10821\n\n10821: fix: wrap `inline_call` and `inline_into_callers` if it inlines into the left side of a binary expression r=Veykril a=rainy-me\n\nclose #10359\n\nCo-authored-by: rainy-me <github@yue.coffee>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9c6fa8f56a2b095b5f6b7dc66a4f1db4a9a9a30", "html_url": "https://github.com/rust-lang/rust/commit/c9c6fa8f56a2b095b5f6b7dc66a4f1db4a9a9a30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9c6fa8f56a2b095b5f6b7dc66a4f1db4a9a9a30/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55b7a068884ede8bc4c9ff191e0317156176e5a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/55b7a068884ede8bc4c9ff191e0317156176e5a8", "html_url": "https://github.com/rust-lang/rust/commit/55b7a068884ede8bc4c9ff191e0317156176e5a8"}, {"sha": "ebffaa427481935caac550c62458ee94917c3995", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebffaa427481935caac550c62458ee94917c3995", "html_url": "https://github.com/rust-lang/rust/commit/ebffaa427481935caac550c62458ee94917c3995"}], "stats": {"total": 68, "additions": 67, "deletions": 1}, "files": [{"sha": "d88e3fdcd32ae6d51973cb9007fc6b7cd0276f0a", "filename": "crates/ide_assists/src/handlers/inline_call.rs", "status": "modified", "additions": 67, "deletions": 1, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/c9c6fa8f56a2b095b5f6b7dc66a4f1db4a9a9a30/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9c6fa8f56a2b095b5f6b7dc66a4f1db4a9a9a30/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_call.rs?ref=c9c6fa8f56a2b095b5f6b7dc66a4f1db4a9a9a30", "patch": "@@ -407,7 +407,17 @@ fn inline(\n \n     match body.tail_expr() {\n         Some(expr) if body.statements().next().is_none() => expr,\n-        _ => ast::Expr::BlockExpr(body),\n+        _ => match node\n+            .syntax()\n+            .parent()\n+            .and_then(ast::BinExpr::cast)\n+            .and_then(|bin_expr| bin_expr.lhs())\n+        {\n+            Some(lhs) if lhs.syntax() == node.syntax() => {\n+                make::expr_paren(ast::Expr::BlockExpr(body)).clone_for_update()\n+            }\n+            _ => ast::Expr::BlockExpr(body),\n+        },\n     }\n }\n \n@@ -1076,4 +1086,60 @@ fn main() {\n \"#,\n         );\n     }\n+\n+    #[test]\n+    fn inline_callers_wrapped_in_parentheses() {\n+        check_assist(\n+            inline_into_callers,\n+            r#\"\n+fn foo$0() -> u32 {\n+    let x = 0;\n+    x\n+}\n+fn bar() -> u32 {\n+    foo() + foo()\n+}\n+\"#,\n+            r#\"\n+\n+fn bar() -> u32 {\n+    ({\n+        let x = 0;\n+        x\n+    }) + {\n+        let x = 0;\n+        x\n+    }\n+}\n+\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn inline_call_wrapped_in_parentheses() {\n+        check_assist(\n+            inline_call,\n+            r#\"\n+fn foo() -> u32 {\n+    let x = 0;\n+    x\n+}\n+fn bar() -> u32 {\n+    foo$0() + foo()\n+}\n+\"#,\n+            r#\"\n+fn foo() -> u32 {\n+    let x = 0;\n+    x\n+}\n+fn bar() -> u32 {\n+    ({\n+        let x = 0;\n+        x\n+    }) + foo()\n+}\n+\"#,\n+        )\n+    }\n }"}]}