{"sha": "a9c78e371e3b46f0d1cf0b38368d503b6aa1ce6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5Yzc4ZTM3MWUzYjQ2ZjBkMWNmMGIzODM2OGQ1MDNiNmFhMWNlNmU=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2019-11-20T23:06:31Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-09-03T18:59:13Z"}, "message": "bench in-place collect of droppables", "tree": {"sha": "b63b97b18bfa114482fa9774671758ccb3d41540", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b63b97b18bfa114482fa9774671758ccb3d41540"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9c78e371e3b46f0d1cf0b38368d503b6aa1ce6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9c78e371e3b46f0d1cf0b38368d503b6aa1ce6e", "html_url": "https://github.com/rust-lang/rust/commit/a9c78e371e3b46f0d1cf0b38368d503b6aa1ce6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9c78e371e3b46f0d1cf0b38368d503b6aa1ce6e/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ac96e6a9832d70f9b5d43967cd2680711fa92df", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ac96e6a9832d70f9b5d43967cd2680711fa92df", "html_url": "https://github.com/rust-lang/rust/commit/8ac96e6a9832d70f9b5d43967cd2680711fa92df"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "a11b946c44b946100fc48f297a4a8c673e00878a", "filename": "library/alloc/benches/vec.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a9c78e371e3b46f0d1cf0b38368d503b6aa1ce6e/library%2Falloc%2Fbenches%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c78e371e3b46f0d1cf0b38368d503b6aa1ce6e/library%2Falloc%2Fbenches%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fbenches%2Fvec.rs?ref=a9c78e371e3b46f0d1cf0b38368d503b6aa1ce6e", "patch": "@@ -501,6 +501,21 @@ fn bench_in_place_recycle(b: &mut test::Bencher) {\n     });\n }\n \n+#[derive(Clone)]\n+struct Droppable(usize);\n+\n+impl Drop for Droppable {\n+    fn drop(&mut self) {\n+        black_box(self);\n+    }\n+}\n+\n+#[bench]\n+fn bench_in_place_collect_droppable(b: &mut test::Bencher) {\n+    let v: Vec<Droppable> = std::iter::repeat_with(|| Droppable(0)).take(1000).collect();\n+    b.iter(|| v.clone().into_iter().skip(100).collect::<Vec<_>>())\n+}\n+\n #[bench]\n fn bench_chain_collect(b: &mut test::Bencher) {\n     let data = black_box([0; LEN]);"}]}