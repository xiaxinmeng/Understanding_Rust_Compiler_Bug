{"sha": "5ecb7eb161e75ab33ca015e7f717424f32af3d59", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlY2I3ZWIxNjFlNzVhYjMzY2EwMTVlN2Y3MTc0MjRmMzJhZjNkNTk=", "commit": {"author": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-09-25T12:32:57Z"}, "committer": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-09-25T12:32:57Z"}, "message": "Remove fail tests", "tree": {"sha": "e8597f6da9d26d51e5f1da55dd63532d8a07b1e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8597f6da9d26d51e5f1da55dd63532d8a07b1e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ecb7eb161e75ab33ca015e7f717424f32af3d59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ecb7eb161e75ab33ca015e7f717424f32af3d59", "html_url": "https://github.com/rust-lang/rust/commit/5ecb7eb161e75ab33ca015e7f717424f32af3d59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ecb7eb161e75ab33ca015e7f717424f32af3d59/comments", "author": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02bfbf96c7c241146957a75128ad63276fa0b671", "url": "https://api.github.com/repos/rust-lang/rust/commits/02bfbf96c7c241146957a75128ad63276fa0b671", "html_url": "https://github.com/rust-lang/rust/commit/02bfbf96c7c241146957a75128ad63276fa0b671"}], "stats": {"total": 201, "additions": 0, "deletions": 201}, "files": [{"sha": "4a046e424c528a88f2e859135ddae10ce763d10b", "filename": "src/test/ui/consts/const-eval/simd/extract-fail0.rs", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail0.rs?ref=02bfbf96c7c241146957a75128ad63276fa0b671", "patch": "@@ -1,26 +0,0 @@\n-// failure-status: 101\n-// rustc-env:RUST_BACKTRACE=0\n-// normalize-stderr-test \"note: rustc 1.* running on .*\" -> \"note: rustc VERSION running on TARGET\"\n-// normalize-stderr-test \"note: compiler flags: .*\" -> \"note: compiler flags: FLAGS\"\n-// normalize-stderr-test \"interpret/intern.rs:[0-9]*:[0-9]*\" -> \"interpret/intern.rs:LL:CC\"\n-\n-#![feature(const_fn)]\n-#![feature(repr_simd)]\n-#![feature(platform_intrinsics)]\n-#![allow(non_camel_case_types)]\n-\n-#[repr(simd)] struct i8x1(i8);\n-\n-extern \"platform-intrinsic\" {\n-    fn simd_extract<T, U>(x: T, idx: u32) -> U;\n-}\n-\n-const X: i8x1 = i8x1(42);\n-\n-const fn extract_wrong_ret() -> i16 {\n-    unsafe { simd_extract(X, 0_u32) }\n-}\n-\n-const A: i16 = extract_wrong_ret();\n-\n-fn main() {}"}, {"sha": "be2c2607002e06176e69a2bcd5471fc23224c3dc", "filename": "src/test/ui/consts/const-eval/simd/extract-fail0.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail0.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail0.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail0.stderr?ref=02bfbf96c7c241146957a75128ad63276fa0b671", "patch": "@@ -1,15 +0,0 @@\n-thread 'rustc' panicked at 'assertion failed: `(left == right)`\n-  left: `i8`,\n- right: `i16`: Return type `i16` must match vector element type `i8`', src/librustc_mir/interpret/intrinsics.rs:281:17\n-note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n-\n-error: internal compiler error: unexpected panic\n-\n-note: the compiler unexpectedly panicked. this is a bug.\n-\n-note: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n-\n-note: rustc VERSION running on TARGET\n-\n-note: compiler flags: FLAGS\n-"}, {"sha": "ec281a19b17d00770f11572b22721e76fadf86f1", "filename": "src/test/ui/consts/const-eval/simd/extract-fail1.rs", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail1.rs?ref=02bfbf96c7c241146957a75128ad63276fa0b671", "patch": "@@ -1,26 +0,0 @@\n-// failure-status: 101\n-// rustc-env:RUST_BACKTRACE=0\n-// normalize-stderr-test \"note: rustc 1.* running on .*\" -> \"note: rustc VERSION running on TARGET\"\n-// normalize-stderr-test \"note: compiler flags: .*\" -> \"note: compiler flags: FLAGS\"\n-// normalize-stderr-test \"interpret/intern.rs:[0-9]*:[0-9]*\" -> \"interpret/intern.rs:LL:CC\"\n-\n-#![feature(const_fn)]\n-#![feature(repr_simd)]\n-#![feature(platform_intrinsics)]\n-#![allow(non_camel_case_types)]\n-\n-#[repr(simd)] struct i8x1(i8);\n-\n-extern \"platform-intrinsic\" {\n-    fn simd_extract<T, U>(x: T, idx: u32) -> U;\n-}\n-\n-const X: i8x1 = i8x1(42);\n-\n-const fn extract_wrong_vec() -> i8 {\n-    unsafe { simd_extract(42_i8, 0_u32) }\n-}\n-\n-const B: i8 = extract_wrong_vec();\n-\n-fn main() {}"}, {"sha": "8c53ee874c46695bdc67823dd2dd8645ba41f32a", "filename": "src/test/ui/consts/const-eval/simd/extract-fail1.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail1.stderr?ref=02bfbf96c7c241146957a75128ad63276fa0b671", "patch": "@@ -1,15 +0,0 @@\n-error: internal compiler error: src/librustc_mir/interpret/operand.rs:345: Type `i8` is not a SIMD vector type\n-\n-thread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:643:9\n-note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n-\n-note: the compiler unexpectedly panicked. this is a bug.\n-\n-note: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n-\n-note: rustc VERSION running on TARGET\n-\n-note: compiler flags: FLAGS\n-\n-error: aborting due to previous error\n-"}, {"sha": "d1970877574f8adf265efeeb75f02c6c3e135f13", "filename": "src/test/ui/consts/const-eval/simd/extract-fail2.rs", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail2.rs?ref=02bfbf96c7c241146957a75128ad63276fa0b671", "patch": "@@ -1,26 +0,0 @@\n-// failure-status: 101\n-// rustc-env:RUST_BACKTRACE=0\n-// normalize-stderr-test \"note: rustc 1.* running on .*\" -> \"note: rustc VERSION running on TARGET\"\n-// normalize-stderr-test \"note: compiler flags: .*\" -> \"note: compiler flags: FLAGS\"\n-// normalize-stderr-test \"interpret/intern.rs:[0-9]*:[0-9]*\" -> \"interpret/intern.rs:LL:CC\"\n-\n-#![feature(const_fn)]\n-#![feature(repr_simd)]\n-#![feature(platform_intrinsics)]\n-#![allow(non_camel_case_types)]\n-\n-#[repr(simd)] struct i8x1(i8);\n-\n-extern \"platform-intrinsic\" {\n-    fn simd_extract<T, U>(x: T, idx: u32) -> U;\n-}\n-\n-const X: i8x1 = i8x1(42);\n-\n-const fn extract_wrong_idx() -> i8 {\n-    unsafe { simd_extract(X, 1_u32) }\n-}\n-\n-const C: i8 = extract_wrong_idx();\n-\n-fn main() {}"}, {"sha": "1885c930e9a2b79e502ec492dee0539f91bf81a6", "filename": "src/test/ui/consts/const-eval/simd/extract-fail2.stderr", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Fextract-fail2.stderr?ref=02bfbf96c7c241146957a75128ad63276fa0b671", "patch": "@@ -1,13 +0,0 @@\n-thread 'rustc' panicked at 'index `1` is out-of-bounds of vector type `i8` with length `1`', src/librustc_mir/interpret/intrinsics.rs:276:17\n-note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n-\n-error: internal compiler error: unexpected panic\n-\n-note: the compiler unexpectedly panicked. this is a bug.\n-\n-note: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n-\n-note: rustc VERSION running on TARGET\n-\n-note: compiler flags: FLAGS\n-"}, {"sha": "2ee0fdfc1ec6b84adb36e7f8253eb2a214f24767", "filename": "src/test/ui/consts/const-eval/simd/insert-fail0.rs", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Finsert-fail0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Finsert-fail0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Finsert-fail0.rs?ref=02bfbf96c7c241146957a75128ad63276fa0b671", "patch": "@@ -1,26 +0,0 @@\n-// failure-status: 101\n-// rustc-env:RUST_BACKTRACE=0\n-// normalize-stderr-test \"note: rustc 1.* running on .*\" -> \"note: rustc VERSION running on TARGET\"\n-// normalize-stderr-test \"note: compiler flags: .*\" -> \"note: compiler flags: FLAGS\"\n-// normalize-stderr-test \"interpret/intern.rs:[0-9]*:[0-9]*\" -> \"interpret/intern.rs:LL:CC\"\n-\n-#![feature(const_fn)]\n-#![feature(repr_simd)]\n-#![feature(platform_intrinsics)]\n-#![allow(non_camel_case_types)]\n-\n-#[repr(simd)] struct i8x1(i8);\n-\n-extern \"platform-intrinsic\" {\n-    fn simd_insert<T, U>(x: T, idx: u32, val: U) -> T;\n-}\n-\n-const X: i8x1 = i8x1(42);\n-\n-const fn insert_wrong_scalar() -> i8x1 {\n-    unsafe { simd_insert(X, 0_u32, 42_i16) }\n-}\n-\n-const D: i8x1 = insert_wrong_scalar();\n-\n-fn main() {}"}, {"sha": "1d0173ed332722c00be5f6ca5b1bfd55aa700f02", "filename": "src/test/ui/consts/const-eval/simd/insert-fail0.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Finsert-fail0.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Finsert-fail0.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Finsert-fail0.stderr?ref=02bfbf96c7c241146957a75128ad63276fa0b671", "patch": "@@ -1,15 +0,0 @@\n-thread 'rustc' panicked at 'assertion failed: `(left == right)`\n-  left: `i16`,\n- right: `i8`: Scalar type `i16` must match vector element type `i8`', src/librustc_mir/interpret/intrinsics.rs:257:17\n-note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n-\n-error: internal compiler error: unexpected panic\n-\n-note: the compiler unexpectedly panicked. this is a bug.\n-\n-note: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n-\n-note: rustc VERSION running on TARGET\n-\n-note: compiler flags: FLAGS\n-"}, {"sha": "146b8ce6a130a8461b1cb7c9e96c144a7fa387df", "filename": "src/test/ui/consts/const-eval/simd/insert-fail1.rs", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Finsert-fail1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Finsert-fail1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Finsert-fail1.rs?ref=02bfbf96c7c241146957a75128ad63276fa0b671", "patch": "@@ -1,26 +0,0 @@\n-// failure-status: 101\n-// rustc-env:RUST_BACKTRACE=0\n-// normalize-stderr-test \"note: rustc 1.* running on .*\" -> \"note: rustc VERSION running on TARGET\"\n-// normalize-stderr-test \"note: compiler flags: .*\" -> \"note: compiler flags: FLAGS\"\n-// normalize-stderr-test \"interpret/intern.rs:[0-9]*:[0-9]*\" -> \"interpret/intern.rs:LL:CC\"\n-\n-#![feature(const_fn)]\n-#![feature(repr_simd)]\n-#![feature(platform_intrinsics)]\n-#![allow(non_camel_case_types)]\n-\n-#[repr(simd)] struct i8x1(i8);\n-\n-extern \"platform-intrinsic\" {\n-    fn simd_insert<T, U>(x: T, idx: u32, val: U) -> T;\n-}\n-\n-const X: i8x1 = i8x1(42);\n-\n-const fn insert_wrong_idx() -> i8x1 {\n-    unsafe { simd_insert(X, 1_u32, 42_i8) }\n-}\n-\n-const E: i8x1 = insert_wrong_idx();\n-\n-fn main() {}"}, {"sha": "6223f308c2f35040e76d3ddda7ff7318c13734f9", "filename": "src/test/ui/consts/const-eval/simd/insert-fail1.stderr", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Finsert-fail1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/02bfbf96c7c241146957a75128ad63276fa0b671/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Finsert-fail1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fsimd%2Finsert-fail1.stderr?ref=02bfbf96c7c241146957a75128ad63276fa0b671", "patch": "@@ -1,13 +0,0 @@\n-thread 'rustc' panicked at 'Index `1` must be in bounds of vector type `i8`: `[0, 1)`', src/librustc_mir/interpret/intrinsics.rs:247:17\n-note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n-\n-error: internal compiler error: unexpected panic\n-\n-note: the compiler unexpectedly panicked. this is a bug.\n-\n-note: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n-\n-note: rustc VERSION running on TARGET\n-\n-note: compiler flags: FLAGS\n-"}]}