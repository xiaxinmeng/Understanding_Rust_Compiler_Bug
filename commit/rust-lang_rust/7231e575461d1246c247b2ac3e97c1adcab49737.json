{"sha": "7231e575461d1246c247b2ac3e97c1adcab49737", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMzFlNTc1NDYxZDEyNDZjMjQ3YjJhYzNlOTdjMWFkY2FiNDk3Mzc=", "commit": {"author": {"name": "James Box", "email": "james@jbox.dev", "date": "2020-06-28T03:55:42Z"}, "committer": {"name": "James Box", "email": "james@jbox.dev", "date": "2020-06-28T03:55:42Z"}, "message": "Fix wording for anonymous parameter name help", "tree": {"sha": "f8d982aeccacc95f3810d8d9544f071c33a285a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8d982aeccacc95f3810d8d9544f071c33a285a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7231e575461d1246c247b2ac3e97c1adcab49737", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7231e575461d1246c247b2ac3e97c1adcab49737", "html_url": "https://github.com/rust-lang/rust/commit/7231e575461d1246c247b2ac3e97c1adcab49737", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7231e575461d1246c247b2ac3e97c1adcab49737/comments", "author": {"login": "nop", "id": 22718173, "node_id": "MDQ6VXNlcjIyNzE4MTcz", "avatar_url": "https://avatars.githubusercontent.com/u/22718173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nop", "html_url": "https://github.com/nop", "followers_url": "https://api.github.com/users/nop/followers", "following_url": "https://api.github.com/users/nop/following{/other_user}", "gists_url": "https://api.github.com/users/nop/gists{/gist_id}", "starred_url": "https://api.github.com/users/nop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nop/subscriptions", "organizations_url": "https://api.github.com/users/nop/orgs", "repos_url": "https://api.github.com/users/nop/repos", "events_url": "https://api.github.com/users/nop/events{/privacy}", "received_events_url": "https://api.github.com/users/nop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nop", "id": 22718173, "node_id": "MDQ6VXNlcjIyNzE4MTcz", "avatar_url": "https://avatars.githubusercontent.com/u/22718173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nop", "html_url": "https://github.com/nop", "followers_url": "https://api.github.com/users/nop/followers", "following_url": "https://api.github.com/users/nop/following{/other_user}", "gists_url": "https://api.github.com/users/nop/gists{/gist_id}", "starred_url": "https://api.github.com/users/nop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nop/subscriptions", "organizations_url": "https://api.github.com/users/nop/orgs", "repos_url": "https://api.github.com/users/nop/repos", "events_url": "https://api.github.com/users/nop/events{/privacy}", "received_events_url": "https://api.github.com/users/nop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bdd2db3a60176012f4dc240eea02d615cc60061", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bdd2db3a60176012f4dc240eea02d615cc60061", "html_url": "https://github.com/rust-lang/rust/commit/9bdd2db3a60176012f4dc240eea02d615cc60061"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "e27bbc532cfc4da26b70b0e8268cf65d5096c5ab", "filename": "src/librustc_parse/parser/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7231e575461d1246c247b2ac3e97c1adcab49737/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7231e575461d1246c247b2ac3e97c1adcab49737/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs?ref=7231e575461d1246c247b2ac3e97c1adcab49737", "patch": "@@ -1415,7 +1415,7 @@ impl<'a> Parser<'a> {\n                 if self.token != token::Lt {\n                     err.span_suggestion(\n                         pat.span,\n-                        \"if this was a parameter name, give it a type\",\n+                        \"if this is a parameter name, give it a type\",\n                         format!(\"{}: TypeName\", ident),\n                         Applicability::HasPlaceholders,\n                     );"}, {"sha": "840294db0830a043138c337386bf15a8dacc223a", "filename": "src/test/ui/anon-params/anon-params-denied-2018.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7231e575461d1246c247b2ac3e97c1adcab49737/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-denied-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7231e575461d1246c247b2ac3e97c1adcab49737/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-denied-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-denied-2018.stderr?ref=7231e575461d1246c247b2ac3e97c1adcab49737", "patch": "@@ -9,7 +9,7 @@ help: if this is a `self` type, give it a parameter name\n    |\n LL |     fn foo(self: i32);\n    |            ^^^^^^^^^\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL |     fn foo(i32: TypeName);\n    |            ^^^^^^^^^^^^^\n@@ -29,7 +29,7 @@ help: if this is a `self` type, give it a parameter name\n    |\n LL |     fn bar_with_default_impl(self: String, String) {}\n    |                              ^^^^^^^^^^^^\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL |     fn bar_with_default_impl(String: TypeName, String) {}\n    |                              ^^^^^^^^^^^^^^^^\n@@ -45,7 +45,7 @@ LL |     fn bar_with_default_impl(String, String) {}\n    |                                            ^ expected one of `:`, `@`, or `|`\n    |\n    = note: anonymous parameters are removed in the 2018 edition (see RFC 1685)\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL |     fn bar_with_default_impl(String, String: TypeName) {}\n    |                                      ^^^^^^^^^^^^^^^^\n@@ -61,7 +61,7 @@ LL |     fn baz(a:usize, b, c: usize) -> usize {\n    |                      ^ expected one of `:`, `@`, or `|`\n    |\n    = note: anonymous parameters are removed in the 2018 edition (see RFC 1685)\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL |     fn baz(a:usize, b: TypeName, c: usize) -> usize {\n    |                     ^^^^^^^^^^^"}, {"sha": "5c4272504e061055fcd5c991e26e5d864404e1f5", "filename": "src/test/ui/parser/inverted-parameters.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7231e575461d1246c247b2ac3e97c1adcab49737/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7231e575461d1246c247b2ac3e97c1adcab49737/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.rs?ref=7231e575461d1246c247b2ac3e97c1adcab49737", "patch": "@@ -20,7 +20,7 @@ fn pattern((i32, i32) (a, b)) {}\n \n fn fizz(i32) {}\n //~^ ERROR expected one of `:`, `@`\n-//~| HELP if this was a parameter name, give it a type\n+//~| HELP if this is a parameter name, give it a type\n //~| HELP if this is a `self` type, give it a parameter name\n //~| HELP if this is a type, explicitly ignore the parameter name\n "}, {"sha": "ae180af93e37394ce0bab605db1cbe10ac18848d", "filename": "src/test/ui/parser/inverted-parameters.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7231e575461d1246c247b2ac3e97c1adcab49737/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7231e575461d1246c247b2ac3e97c1adcab49737/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.stderr?ref=7231e575461d1246c247b2ac3e97c1adcab49737", "patch": "@@ -39,7 +39,7 @@ help: if this is a `self` type, give it a parameter name\n    |\n LL | fn fizz(self: i32) {}\n    |         ^^^^^^^^^\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL | fn fizz(i32: TypeName) {}\n    |         ^^^^^^^^^^^^^"}, {"sha": "bc3329dcbc23d91ee20c41bf013a119701fe3e4d", "filename": "src/test/ui/parser/omitted-arg-in-item-fn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7231e575461d1246c247b2ac3e97c1adcab49737/src%2Ftest%2Fui%2Fparser%2Fomitted-arg-in-item-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7231e575461d1246c247b2ac3e97c1adcab49737/src%2Ftest%2Fui%2Fparser%2Fomitted-arg-in-item-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fomitted-arg-in-item-fn.stderr?ref=7231e575461d1246c247b2ac3e97c1adcab49737", "patch": "@@ -9,7 +9,7 @@ help: if this is a `self` type, give it a parameter name\n    |\n LL | fn foo(self: x) {\n    |        ^^^^^^^\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL | fn foo(x: TypeName) {\n    |        ^^^^^^^^^^^"}, {"sha": "5516d4a4c1c1cd0398b944edf5e2c69dfdb39e54", "filename": "src/test/ui/rfc-2565-param-attrs/param-attrs-2018.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7231e575461d1246c247b2ac3e97c1adcab49737/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7231e575461d1246c247b2ac3e97c1adcab49737/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-2018.stderr?ref=7231e575461d1246c247b2ac3e97c1adcab49737", "patch": "@@ -9,7 +9,7 @@ help: if this is a `self` type, give it a parameter name\n    |\n LL | trait Trait2015 { fn foo(#[allow(C)] self: i32); }\n    |                                      ^^^^^^^^^\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL | trait Trait2015 { fn foo(#[allow(C)] i32: TypeName); }\n    |                                      ^^^^^^^^^^^^^"}, {"sha": "40c3219bf27b0497437a099e04da6d315e77054d", "filename": "src/test/ui/span/issue-34264.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7231e575461d1246c247b2ac3e97c1adcab49737/src%2Ftest%2Fui%2Fspan%2Fissue-34264.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7231e575461d1246c247b2ac3e97c1adcab49737/src%2Ftest%2Fui%2Fspan%2Fissue-34264.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-34264.stderr?ref=7231e575461d1246c247b2ac3e97c1adcab49737", "patch": "@@ -21,7 +21,7 @@ LL | fn foo(Option<i32>, String) {}\n    |                           ^ expected one of `:`, `@`, or `|`\n    |\n    = note: anonymous parameters are removed in the 2018 edition (see RFC 1685)\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL | fn foo(Option<i32>, String: TypeName) {}\n    |                     ^^^^^^^^^^^^^^^^\n@@ -41,7 +41,7 @@ help: if this is a `self` type, give it a parameter name\n    |\n LL | fn bar(self: x, y: usize) {}\n    |        ^^^^^^^\n-help: if this was a parameter name, give it a type\n+help: if this is a parameter name, give it a type\n    |\n LL | fn bar(x: TypeName, y: usize) {}\n    |        ^^^^^^^^^^^"}]}