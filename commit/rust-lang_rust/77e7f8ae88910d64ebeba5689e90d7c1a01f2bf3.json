{"sha": "77e7f8ae88910d64ebeba5689e90d7c1a01f2bf3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZTdmOGFlODg5MTBkNjRlYmViYTU2ODllOTBkN2MxYTAxZjJiZjM=", "commit": {"author": {"name": "Orson Peters", "email": "orsonpeters@gmail.com", "date": "2021-09-09T21:01:28Z"}, "committer": {"name": "Orson Peters", "email": "orsonpeters@gmail.com", "date": "2021-09-09T21:01:28Z"}, "message": "Added psadbw support for u8::abs_diff.", "tree": {"sha": "e59ac1c262c2098bfc9111f77d2b2d3bda351b43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e59ac1c262c2098bfc9111f77d2b2d3bda351b43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77e7f8ae88910d64ebeba5689e90d7c1a01f2bf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77e7f8ae88910d64ebeba5689e90d7c1a01f2bf3", "html_url": "https://github.com/rust-lang/rust/commit/77e7f8ae88910d64ebeba5689e90d7c1a01f2bf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77e7f8ae88910d64ebeba5689e90d7c1a01f2bf3/comments", "author": {"login": "orlp", "id": 202547, "node_id": "MDQ6VXNlcjIwMjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/202547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orlp", "html_url": "https://github.com/orlp", "followers_url": "https://api.github.com/users/orlp/followers", "following_url": "https://api.github.com/users/orlp/following{/other_user}", "gists_url": "https://api.github.com/users/orlp/gists{/gist_id}", "starred_url": "https://api.github.com/users/orlp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orlp/subscriptions", "organizations_url": "https://api.github.com/users/orlp/orgs", "repos_url": "https://api.github.com/users/orlp/repos", "events_url": "https://api.github.com/users/orlp/events{/privacy}", "received_events_url": "https://api.github.com/users/orlp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "orlp", "id": 202547, "node_id": "MDQ6VXNlcjIwMjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/202547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orlp", "html_url": "https://github.com/orlp", "followers_url": "https://api.github.com/users/orlp/followers", "following_url": "https://api.github.com/users/orlp/following{/other_user}", "gists_url": "https://api.github.com/users/orlp/gists{/gist_id}", "starred_url": "https://api.github.com/users/orlp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orlp/subscriptions", "organizations_url": "https://api.github.com/users/orlp/orgs", "repos_url": "https://api.github.com/users/orlp/repos", "events_url": "https://api.github.com/users/orlp/events{/privacy}", "received_events_url": "https://api.github.com/users/orlp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f5563d0275118cbebbc2a3d3d60be1a7600adaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f5563d0275118cbebbc2a3d3d60be1a7600adaa", "html_url": "https://github.com/rust-lang/rust/commit/4f5563d0275118cbebbc2a3d3d60be1a7600adaa"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "a5f12447fdc32732cf66161c8b11e44facdad2c3", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/77e7f8ae88910d64ebeba5689e90d7c1a01f2bf3/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77e7f8ae88910d64ebeba5689e90d7c1a01f2bf3/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=77e7f8ae88910d64ebeba5689e90d7c1a01f2bf3", "patch": "@@ -1504,10 +1504,16 @@ macro_rules! uint_impl {\n         #[unstable(feature = \"int_abs_diff\", issue = \"none\")]\n         #[inline]\n         pub const fn abs_diff(self, other: Self) -> Self {\n-            if self < other {\n-                other - self\n+            if mem::size_of::<Self>() == 1 {\n+                // Trick LLVM into generating the psadbw instruction when SSE2\n+                // is available and this function is autovectorized for u8's.\n+                (self as i32).wrapping_sub(other as i32).abs() as Self\n             } else {\n-                self - other\n+                if self < other {\n+                    other - self\n+                } else {\n+                    self - other\n+                }\n             }\n         }\n "}]}