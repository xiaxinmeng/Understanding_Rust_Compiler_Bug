{"sha": "09164f3acfd7c444bb547515e669b59e9f93ddfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5MTY0ZjNhY2ZkN2M0NDRiYjU0NzUxNWU2NjliNTllOWY5M2RkZmE=", "commit": {"author": {"name": "Alexis", "email": "a.beingessner@gmail.com", "date": "2015-02-07T19:58:58Z"}, "committer": {"name": "Alexis", "email": "a.beingessner@gmail.com", "date": "2015-02-07T19:58:58Z"}, "message": "minor fixes to Vec docs and bounds check", "tree": {"sha": "480cd9400ec2eb4cb6989e26e75e8d21c95070b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/480cd9400ec2eb4cb6989e26e75e8d21c95070b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09164f3acfd7c444bb547515e669b59e9f93ddfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09164f3acfd7c444bb547515e669b59e9f93ddfa", "html_url": "https://github.com/rust-lang/rust/commit/09164f3acfd7c444bb547515e669b59e9f93ddfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09164f3acfd7c444bb547515e669b59e9f93ddfa/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80627cd3cc4099b76cb2fb26ebe2f2f8a6c2335e", "url": "https://api.github.com/repos/rust-lang/rust/commits/80627cd3cc4099b76cb2fb26ebe2f2f8a6c2335e", "html_url": "https://github.com/rust-lang/rust/commit/80627cd3cc4099b76cb2fb26ebe2f2f8a6c2335e"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "70097c956cd0ef942f5515465691be8a6669f534", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/09164f3acfd7c444bb547515e669b59e9f93ddfa/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09164f3acfd7c444bb547515e669b59e9f93ddfa/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=09164f3acfd7c444bb547515e669b59e9f93ddfa", "patch": "@@ -690,7 +690,8 @@ impl<T> Vec<T> {\n     /// Panics if the number of elements in the vector overflows a `usize`.\n     ///\n     /// # Examples\n-    /// ```rust\n+    ///\n+    /// ```\n     /// let mut vec = vec![1, 2, 3];\n     /// let mut vec2 = vec![4, 5, 6];\n     /// vec.append(&mut vec2);\n@@ -1002,8 +1003,13 @@ impl<T> Vec<T> {\n     ///\n     /// Note that the capacity of `self` does not change.\n     ///\n+    /// # Panics\n+    ///\n+    /// Panics if `at > len`.\n+    ///\n     /// # Examples\n-    /// ```rust\n+    ///\n+    /// ```\n     /// let mut vec = vec![1,2,3];\n     /// let vec2 = vec.split_off(1);\n     /// assert_eq!(vec, vec![1]);\n@@ -1013,7 +1019,7 @@ impl<T> Vec<T> {\n     #[unstable(feature = \"collections\",\n                reason = \"new API, waiting for dust to settle\")]\n     pub fn split_off(&mut self, at: usize) -> Self {\n-        assert!(at < self.len(), \"`at` out of bounds\");\n+        assert!(at <= self.len(), \"`at` out of bounds\");\n \n         let other_len = self.len - at;\n         let mut other = Vec::with_capacity(other_len);"}]}