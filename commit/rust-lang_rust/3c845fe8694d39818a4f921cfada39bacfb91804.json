{"sha": "3c845fe8694d39818a4f921cfada39bacfb91804", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjODQ1ZmU4Njk0ZDM5ODE4YTRmOTIxY2ZhZGEzOWJhY2ZiOTE4MDQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-02-13T22:29:09Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-02-13T23:36:32Z"}, "message": "Rollup merge of #31535 - Ketsuban:more-detail-in-wrapping-shift-documentation, r=steveklabnik\n\n`wrapping_shl` and `wrapping_shr` are easy to mistake for rotations, when in fact they work somewhat differently. The documentation currently available is a little sparse and easy to misinterpret, so I've added a warning to anyone who bumps into them that the equivalent rotate methods may actually be what they're looking for.\n\nIf it's deemed useful to add a symmetrical mention to the documentation for the `rotate_left` and `rotate_right` methods, I can certainly have a go at that, but my gut feeling is that people likely to want a rotate will already know about the wrapping-arithmetic methods, for example from writing CPU simulators.", "tree": {"sha": "062d853388828a2a6969f2c48d6d284e841d3941", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/062d853388828a2a6969f2c48d6d284e841d3941"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c845fe8694d39818a4f921cfada39bacfb91804", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c845fe8694d39818a4f921cfada39bacfb91804", "html_url": "https://github.com/rust-lang/rust/commit/3c845fe8694d39818a4f921cfada39bacfb91804", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c845fe8694d39818a4f921cfada39bacfb91804/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e446532e835ed3c934eec5a98bb795c0ffd4e50", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e446532e835ed3c934eec5a98bb795c0ffd4e50", "html_url": "https://github.com/rust-lang/rust/commit/6e446532e835ed3c934eec5a98bb795c0ffd4e50"}, {"sha": "8d5dcf9ce5425511720e77153aab665a7850f85a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d5dcf9ce5425511720e77153aab665a7850f85a", "html_url": "https://github.com/rust-lang/rust/commit/8d5dcf9ce5425511720e77153aab665a7850f85a"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "d094f05374b78e5ea02d55aa4c944fbbbf4d7be9", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3c845fe8694d39818a4f921cfada39bacfb91804/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c845fe8694d39818a4f921cfada39bacfb91804/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=3c845fe8694d39818a4f921cfada39bacfb91804", "patch": "@@ -741,6 +741,13 @@ macro_rules! int_impl {\n         /// where `mask` removes any high-order bits of `rhs` that\n         /// would cause the shift to exceed the bitwidth of the type.\n         ///\n+        /// Note that this is *not* the same as a rotate-left; the\n+        /// RHS of a wrapping shift-left is restricted to the range\n+        /// of the type, rather than the bits shifted out of the LHS\n+        /// being returned to the other end. The primitive integer\n+        /// types all implement a `rotate_left` function, which may\n+        /// be what you want instead.\n+        ///\n         /// # Examples\n         ///\n         /// Basic usage:\n@@ -759,6 +766,13 @@ macro_rules! int_impl {\n         /// where `mask` removes any high-order bits of `rhs` that\n         /// would cause the shift to exceed the bitwidth of the type.\n         ///\n+        /// Note that this is *not* the same as a rotate-right; the\n+        /// RHS of a wrapping shift-right is restricted to the range\n+        /// of the type, rather than the bits shifted out of the LHS\n+        /// being returned to the other end. The primitive integer\n+        /// types all implement a `rotate_right` function, which may\n+        /// be what you want instead.\n+        ///\n         /// # Examples\n         ///\n         /// Basic usage:"}]}