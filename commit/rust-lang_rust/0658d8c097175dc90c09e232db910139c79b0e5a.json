{"sha": "0658d8c097175dc90c09e232db910139c79b0e5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NThkOGMwOTcxNzVkYzkwYzA5ZTIzMmRiOTEwMTM5Yzc5YjBlNWE=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-02-03T13:29:18Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-02-03T13:29:18Z"}, "message": "Address review.", "tree": {"sha": "a0a30ee5f5bda0b1878054a211cb95a050b5fd77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0a30ee5f5bda0b1878054a211cb95a050b5fd77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0658d8c097175dc90c09e232db910139c79b0e5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0658d8c097175dc90c09e232db910139c79b0e5a", "html_url": "https://github.com/rust-lang/rust/commit/0658d8c097175dc90c09e232db910139c79b0e5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0658d8c097175dc90c09e232db910139c79b0e5a/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a60f0a86f2065742a1a70cd38fdc63fc1b95c61", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a60f0a86f2065742a1a70cd38fdc63fc1b95c61", "html_url": "https://github.com/rust-lang/rust/commit/5a60f0a86f2065742a1a70cd38fdc63fc1b95c61"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "a0bb4e93ba4770bec9beeb13ffbb1fa08bb85867", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0658d8c097175dc90c09e232db910139c79b0e5a/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0658d8c097175dc90c09e232db910139c79b0e5a/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=0658d8c097175dc90c09e232db910139c79b0e5a", "patch": "@@ -810,14 +810,10 @@ fn should_encode_mir(tcx: TyCtxt<'_>, def_id: LocalDefId) -> (bool, bool) {\n             // Only check the presence of the `const` modifier.\n             let is_const_fn = tcx.is_const_fn_raw(def_id.to_def_id());\n             let always_encode_mir = tcx.sess.opts.debugging_opts.always_encode_mir;\n-            (is_const_fn, needs_inline || is_const_fn || always_encode_mir)\n+            (is_const_fn, needs_inline || always_encode_mir)\n         }\n         // Generators require optimized MIR to compute layout.\n-        DefKind::Generator => {\n-            // Only check the presence of the `const` modifier.\n-            let is_const_fn = tcx.is_const_fn_raw(def_id.to_def_id());\n-            (is_const_fn, true)\n-        }\n+        DefKind::Generator => (false, true),\n         // The others don't have MIR.\n         _ => (false, false),\n     }"}]}