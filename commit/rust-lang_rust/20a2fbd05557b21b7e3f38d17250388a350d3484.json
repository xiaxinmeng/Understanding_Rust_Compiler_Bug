{"sha": "20a2fbd05557b21b7e3f38d17250388a350d3484", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwYTJmYmQwNTU1N2IyMWI3ZTNmMzhkMTcyNTAzODhhMzUwZDM0ODQ=", "commit": {"author": {"name": "Jens Nockert", "email": "jens@nockert.se", "date": "2013-07-09T16:24:30Z"}, "committer": {"name": "Jens Nockert", "email": "jens@nockert.se", "date": "2013-07-09T16:24:30Z"}, "message": "I forgot the changes to the docs as well\n\nApparently yesterday wasn't my day, and I forgot to add the changes to\nall the tests apparently, and in the end forgot the docs extra much.\nPlease documentation, forgive me, I really do love you, I hope you\nforgive me.\n\nNext time we'll meet tutorial, I promise to bring cookies and tea. I\nreally want to be best-friends-forever with you, <3.\n\nXOXO", "tree": {"sha": "b47a56c7915f0495526bf3942e5d4b53df32d010", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b47a56c7915f0495526bf3942e5d4b53df32d010"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20a2fbd05557b21b7e3f38d17250388a350d3484", "comment_count": 6, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20a2fbd05557b21b7e3f38d17250388a350d3484", "html_url": "https://github.com/rust-lang/rust/commit/20a2fbd05557b21b7e3f38d17250388a350d3484", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20a2fbd05557b21b7e3f38d17250388a350d3484/comments", "author": {"login": "auroranockert", "id": 49616, "node_id": "MDQ6VXNlcjQ5NjE2", "avatar_url": "https://avatars.githubusercontent.com/u/49616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auroranockert", "html_url": "https://github.com/auroranockert", "followers_url": "https://api.github.com/users/auroranockert/followers", "following_url": "https://api.github.com/users/auroranockert/following{/other_user}", "gists_url": "https://api.github.com/users/auroranockert/gists{/gist_id}", "starred_url": "https://api.github.com/users/auroranockert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auroranockert/subscriptions", "organizations_url": "https://api.github.com/users/auroranockert/orgs", "repos_url": "https://api.github.com/users/auroranockert/repos", "events_url": "https://api.github.com/users/auroranockert/events{/privacy}", "received_events_url": "https://api.github.com/users/auroranockert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "auroranockert", "id": 49616, "node_id": "MDQ6VXNlcjQ5NjE2", "avatar_url": "https://avatars.githubusercontent.com/u/49616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auroranockert", "html_url": "https://github.com/auroranockert", "followers_url": "https://api.github.com/users/auroranockert/followers", "following_url": "https://api.github.com/users/auroranockert/following{/other_user}", "gists_url": "https://api.github.com/users/auroranockert/gists{/gist_id}", "starred_url": "https://api.github.com/users/auroranockert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auroranockert/subscriptions", "organizations_url": "https://api.github.com/users/auroranockert/orgs", "repos_url": "https://api.github.com/users/auroranockert/repos", "events_url": "https://api.github.com/users/auroranockert/events{/privacy}", "received_events_url": "https://api.github.com/users/auroranockert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ed1cfc91224810254ac54ab6245c5edcc73c647", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ed1cfc91224810254ac54ab6245c5edcc73c647", "html_url": "https://github.com/rust-lang/rust/commit/2ed1cfc91224810254ac54ab6245c5edcc73c647"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "0a640648222b06ab559f4b92d159b1fe3142dc25", "filename": "doc/rust.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/20a2fbd05557b21b7e3f38d17250388a350d3484/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/20a2fbd05557b21b7e3f38d17250388a350d3484/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=20a2fbd05557b21b7e3f38d17250388a350d3484", "patch": "@@ -802,11 +802,11 @@ Use declarations support a number of convenient shortcuts:\n An example of `use` declarations:\n \n ~~~~\n-use std::float::sin;\n+use std::num::sin;\n use std::option::{Some, None};\n \n fn main() {\n-    // Equivalent to 'info!(std::float::sin(1.0));'\n+    // Equivalent to 'info!(std::num::sin(1.0));'\n     info!(sin(1.0));\n \n     // Equivalent to 'info!(~[std::option::Some(1.0), std::option::None]);'"}, {"sha": "b282679b1a1d45490f54f651e554ac8722a573de", "filename": "doc/tutorial.md", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/20a2fbd05557b21b7e3f38d17250388a350d3484/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/20a2fbd05557b21b7e3f38d17250388a350d3484/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=20a2fbd05557b21b7e3f38d17250388a350d3484", "patch": "@@ -503,12 +503,13 @@ types.\n \n ~~~~\n # use std::float;\n+# use std::num::atan;\n fn angle(vector: (float, float)) -> float {\n     let pi = float::consts::pi;\n     match vector {\n       (0f, y) if y < 0f => 1.5 * pi,\n       (0f, y) => 0.5 * pi,\n-      (x, y) => float::atan(y / x)\n+      (x, y) => atan(y / x)\n     }\n }\n ~~~~\n@@ -1728,10 +1729,9 @@ To call such a method, just prefix it with the type name and a double colon:\n \n ~~~~\n # use std::float::consts::pi;\n-# use std::float::sqrt;\n struct Circle { radius: float }\n impl Circle {\n-    fn new(area: float) -> Circle { Circle { radius: sqrt(area / pi) } }\n+    fn new(area: float) -> Circle { Circle { radius: (area / pi).sqrt() } }\n }\n let c = Circle::new(42.5);\n ~~~~\n@@ -1997,16 +1997,15 @@ implementation to use.\n \n ~~~~\n # use std::float::consts::pi;\n-# use std::float::sqrt;\n trait Shape { fn new(area: float) -> Self; }\n struct Circle { radius: float }\n struct Square { length: float }\n \n impl Shape for Circle {\n-    fn new(area: float) -> Circle { Circle { radius: sqrt(area / pi) } }\n+    fn new(area: float) -> Circle { Circle { radius: (area / pi).sqrt() } }\n }\n impl Shape for Square {\n-    fn new(area: float) -> Square { Square { length: sqrt(area) } }\n+    fn new(area: float) -> Square { Square { length: (area).sqrt() } }\n }\n \n let area = 42.5;\n@@ -2154,14 +2153,13 @@ Now, we can implement `Circle` on a type only if we also implement `Shape`.\n \n ~~~~\n # use std::float::consts::pi;\n-# use std::float::sqrt;\n # trait Shape { fn area(&self) -> float; }\n # trait Circle : Shape { fn radius(&self) -> float; }\n # struct Point { x: float, y: float }\n # fn square(x: float) -> float { x * x }\n struct CircleStruct { center: Point, radius: float }\n impl Circle for CircleStruct {\n-    fn radius(&self) -> float { sqrt(self.area() / pi) }\n+    fn radius(&self) -> float { (self.area() / pi).sqrt() }\n }\n impl Shape for CircleStruct {\n     fn area(&self) -> float { pi * square(self.radius) }\n@@ -2190,12 +2188,11 @@ Likewise, supertrait methods may also be called on trait objects.\n \n ~~~ {.xfail-test}\n # use std::float::consts::pi;\n-# use std::float::sqrt;\n # trait Shape { fn area(&self) -> float; }\n # trait Circle : Shape { fn radius(&self) -> float; }\n # struct Point { x: float, y: float }\n # struct CircleStruct { center: Point, radius: float }\n-# impl Circle for CircleStruct { fn radius(&self) -> float { sqrt(self.area() / pi) } }\n+# impl Circle for CircleStruct { fn radius(&self) -> float { (self.area() / pi).sqrt() } }\n # impl Shape for CircleStruct { fn area(&self) -> float { pi * square(self.radius) } }\n \n let concrete = @CircleStruct{center:Point{x:3f,y:4f},radius:5f};"}]}