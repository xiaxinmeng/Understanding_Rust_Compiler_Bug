{"sha": "ccb75f7c979b56bc62b61fadd81903e11a7f5d74", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYjc1ZjdjOTc5YjU2YmM2MmI2MWZhZGQ4MTkwM2UxMWE3ZjVkNzQ=", "commit": {"author": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2020-01-10T17:59:57Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-01-11T22:33:04Z"}, "message": "Use FxHashMap", "tree": {"sha": "d6a07ac82e23309410d6ecba894c2a0dfc63d0f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6a07ac82e23309410d6ecba894c2a0dfc63d0f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccb75f7c979b56bc62b61fadd81903e11a7f5d74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccb75f7c979b56bc62b61fadd81903e11a7f5d74", "html_url": "https://github.com/rust-lang/rust/commit/ccb75f7c979b56bc62b61fadd81903e11a7f5d74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccb75f7c979b56bc62b61fadd81903e11a7f5d74/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4496e2a06a91e5825f355ce730af802643e8018a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4496e2a06a91e5825f355ce730af802643e8018a", "html_url": "https://github.com/rust-lang/rust/commit/4496e2a06a91e5825f355ce730af802643e8018a"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "90c505f401b2f614aa24e540e81a85413ef9349d", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ccb75f7c979b56bc62b61fadd81903e11a7f5d74/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ccb75f7c979b56bc62b61fadd81903e11a7f5d74/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=ccb75f7c979b56bc62b61fadd81903e11a7f5d74", "patch": "@@ -872,6 +872,7 @@ dependencies = [\n  \"ra_hir 0.1.0\",\n  \"ra_syntax 0.1.0\",\n  \"ra_text_edit 0.1.0\",\n+ \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"test_utils 0.1.0\",\n ]\n "}, {"sha": "50be8d9bc28222f92f017d5cd518c4469d646e69", "filename": "crates/ra_assists/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ccb75f7c979b56bc62b61fadd81903e11a7f5d74/crates%2Fra_assists%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ccb75f7c979b56bc62b61fadd81903e11a7f5d74/crates%2Fra_assists%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2FCargo.toml?ref=ccb75f7c979b56bc62b61fadd81903e11a7f5d74", "patch": "@@ -10,6 +10,7 @@ doctest = false\n [dependencies]\n format-buf = \"1.0.0\"\n join_to_string = \"0.1.3\"\n+rustc-hash = \"1.0\"\n itertools = \"0.8.0\"\n \n ra_syntax = { path = \"../ra_syntax\" }"}, {"sha": "cbddc50acb66ae4784020349abb0d8f8dea1a05e", "filename": "crates/ra_assists/src/ast_transform.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ccb75f7c979b56bc62b61fadd81903e11a7f5d74/crates%2Fra_assists%2Fsrc%2Fast_transform.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccb75f7c979b56bc62b61fadd81903e11a7f5d74/crates%2Fra_assists%2Fsrc%2Fast_transform.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fast_transform.rs?ref=ccb75f7c979b56bc62b61fadd81903e11a7f5d74", "patch": "@@ -1,5 +1,5 @@\n //! `AstTransformer`s are functions that replace nodes in an AST and can be easily combined.\n-use std::collections::HashMap;\n+use rustc_hash::FxHashMap;\n \n use hir::{db::HirDatabase, InFile, PathResolution};\n use ra_syntax::ast::{self, make, AstNode};\n@@ -35,7 +35,7 @@ impl<'a> AstTransform<'a> for NullTransformer {\n \n pub struct SubstituteTypeParams<'a, DB: HirDatabase> {\n     db: &'a DB,\n-    substs: HashMap<hir::TypeParam, ast::TypeRef>,\n+    substs: FxHashMap<hir::TypeParam, ast::TypeRef>,\n     previous: Box<dyn AstTransform<'a> + 'a>,\n }\n \n@@ -47,7 +47,7 @@ impl<'a, DB: HirDatabase> SubstituteTypeParams<'a, DB> {\n     ) -> SubstituteTypeParams<'a, DB> {\n         let substs = get_syntactic_substs(impl_block).unwrap_or_default();\n         let generic_def: hir::GenericDef = trait_.into();\n-        let substs_by_param: HashMap<_, _> = generic_def\n+        let substs_by_param: FxHashMap<_, _> = generic_def\n             .params(db)\n             .into_iter()\n             // this is a trait impl, so we need to skip the first type parameter -- this is a bit hacky"}]}