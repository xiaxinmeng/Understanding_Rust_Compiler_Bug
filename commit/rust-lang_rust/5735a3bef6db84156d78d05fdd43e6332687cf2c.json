{"sha": "5735a3bef6db84156d78d05fdd43e6332687cf2c", "node_id": "C_kwDOAAsO6NoAKDU3MzVhM2JlZjZkYjg0MTU2ZDc4ZDA1ZmRkNDNlNjMzMjY4N2NmMmM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-22T10:44:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-22T10:44:41Z"}, "message": "Auto merge of #9259 - smoelius:fix-9256, r=llogiq\n\nFix `to_string_in_format_args` false positive\n\nFix #9256\n\nchangelog: none", "tree": {"sha": "a221c7838eca5c55dc694b699d3b97efc886f9cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a221c7838eca5c55dc694b699d3b97efc886f9cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5735a3bef6db84156d78d05fdd43e6332687cf2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5735a3bef6db84156d78d05fdd43e6332687cf2c", "html_url": "https://github.com/rust-lang/rust/commit/5735a3bef6db84156d78d05fdd43e6332687cf2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5735a3bef6db84156d78d05fdd43e6332687cf2c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc637bacfa64d50abed615bfa237ad3231b164d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc637bacfa64d50abed615bfa237ad3231b164d1", "html_url": "https://github.com/rust-lang/rust/commit/cc637bacfa64d50abed615bfa237ad3231b164d1"}, {"sha": "0bc26c811c96c05b2e60c94d06e2904b0ce25fe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bc26c811c96c05b2e60c94d06e2904b0ce25fe7", "html_url": "https://github.com/rust-lang/rust/commit/0bc26c811c96c05b2e60c94d06e2904b0ce25fe7"}], "stats": {"total": 99, "additions": 72, "deletions": 27}, "files": [{"sha": "9fb9fd99748b4b63eabb571073dcba3306d938fb", "filename": "clippy_lints/src/format_args.rs", "status": "modified", "additions": 37, "deletions": 26, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/5735a3bef6db84156d78d05fdd43e6332687cf2c/clippy_lints%2Fsrc%2Fformat_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5735a3bef6db84156d78d05fdd43e6332687cf2c/clippy_lints%2Fsrc%2Fformat_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat_args.rs?ref=5735a3bef6db84156d78d05fdd43e6332687cf2c", "patch": "@@ -131,34 +131,45 @@ fn check_to_string_in_format_args(cx: &LateContext<'_>, name: Symbol, value: &Ex\n         if is_diag_trait_item(cx, method_def_id, sym::ToString);\n         let receiver_ty = cx.typeck_results().expr_ty(receiver);\n         if let Some(display_trait_id) = cx.tcx.get_diagnostic_item(sym::Display);\n+        let (n_needed_derefs, target) =\n+            count_needed_derefs(receiver_ty, cx.typeck_results().expr_adjustments(receiver).iter());\n+        if implements_trait(cx, target, display_trait_id, &[]);\n+        if let Some(sized_trait_id) = cx.tcx.lang_items().sized_trait();\n         if let Some(receiver_snippet) = snippet_opt(cx, receiver.span);\n         then {\n-            let (n_needed_derefs, target) = count_needed_derefs(\n-                receiver_ty,\n-                cx.typeck_results().expr_adjustments(receiver).iter(),\n-            );\n-            if implements_trait(cx, target, display_trait_id, &[]) {\n-                if n_needed_derefs == 0 {\n-                    span_lint_and_sugg(\n-                        cx,\n-                        TO_STRING_IN_FORMAT_ARGS,\n-                        value.span.with_lo(receiver.span.hi()),\n-                        &format!(\"`to_string` applied to a type that implements `Display` in `{}!` args\", name),\n-                        \"remove this\",\n-                        String::new(),\n-                        Applicability::MachineApplicable,\n-                    );\n-                } else {\n-                    span_lint_and_sugg(\n-                        cx,\n-                        TO_STRING_IN_FORMAT_ARGS,\n-                        value.span,\n-                        &format!(\"`to_string` applied to a type that implements `Display` in `{}!` args\", name),\n-                        \"use this\",\n-                        format!(\"{:*>width$}{}\", \"\", receiver_snippet, width = n_needed_derefs),\n-                        Applicability::MachineApplicable,\n-                    );\n-                }\n+            let needs_ref = !implements_trait(cx, receiver_ty, sized_trait_id, &[]);\n+            if n_needed_derefs == 0 && !needs_ref {\n+                span_lint_and_sugg(\n+                    cx,\n+                    TO_STRING_IN_FORMAT_ARGS,\n+                    value.span.with_lo(receiver.span.hi()),\n+                    &format!(\n+                        \"`to_string` applied to a type that implements `Display` in `{}!` args\",\n+                        name\n+                    ),\n+                    \"remove this\",\n+                    String::new(),\n+                    Applicability::MachineApplicable,\n+                );\n+            } else {\n+                span_lint_and_sugg(\n+                    cx,\n+                    TO_STRING_IN_FORMAT_ARGS,\n+                    value.span,\n+                    &format!(\n+                        \"`to_string` applied to a type that implements `Display` in `{}!` args\",\n+                        name\n+                    ),\n+                    \"use this\",\n+                    format!(\n+                        \"{}{:*>width$}{}\",\n+                        if needs_ref { \"&\" } else { \"\" },\n+                        \"\",\n+                        receiver_snippet,\n+                        width = n_needed_derefs\n+                    ),\n+                    Applicability::MachineApplicable,\n+                );\n             }\n         }\n     }"}, {"sha": "e1c2d4d70be4f65effd89e0d84edfa3b77fcf3bd", "filename": "tests/ui/format_args.fixed", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5735a3bef6db84156d78d05fdd43e6332687cf2c/tests%2Fui%2Fformat_args.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5735a3bef6db84156d78d05fdd43e6332687cf2c/tests%2Fui%2Fformat_args.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat_args.fixed?ref=5735a3bef6db84156d78d05fdd43e6332687cf2c", "patch": "@@ -146,3 +146,17 @@ mod issue_8855 {\n         dbg!(x);\n     }\n }\n+\n+// https://github.com/rust-lang/rust-clippy/issues/9256\n+mod issue_9256 {\n+    #![allow(dead_code)]\n+\n+    fn print_substring(original: &str) {\n+        assert!(original.len() > 10);\n+        println!(\"{}\", &original[..10]);\n+    }\n+\n+    fn main() {\n+        print_substring(\"Hello, world!\");\n+    }\n+}"}, {"sha": "b9a4d66c28ad9f4f85390dc427dca8d08e66bcdc", "filename": "tests/ui/format_args.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5735a3bef6db84156d78d05fdd43e6332687cf2c/tests%2Fui%2Fformat_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5735a3bef6db84156d78d05fdd43e6332687cf2c/tests%2Fui%2Fformat_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat_args.rs?ref=5735a3bef6db84156d78d05fdd43e6332687cf2c", "patch": "@@ -146,3 +146,17 @@ mod issue_8855 {\n         dbg!(x);\n     }\n }\n+\n+// https://github.com/rust-lang/rust-clippy/issues/9256\n+mod issue_9256 {\n+    #![allow(dead_code)]\n+\n+    fn print_substring(original: &str) {\n+        assert!(original.len() > 10);\n+        println!(\"{}\", original[..10].to_string());\n+    }\n+\n+    fn main() {\n+        print_substring(\"Hello, world!\");\n+    }\n+}"}, {"sha": "aa6e3659b43b519d19f14fa7ecd395a7d7763bda", "filename": "tests/ui/format_args.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5735a3bef6db84156d78d05fdd43e6332687cf2c/tests%2Fui%2Fformat_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5735a3bef6db84156d78d05fdd43e6332687cf2c/tests%2Fui%2Fformat_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat_args.stderr?ref=5735a3bef6db84156d78d05fdd43e6332687cf2c", "patch": "@@ -132,5 +132,11 @@ error: `to_string` applied to a type that implements `Display` in `format!` args\n LL |         let x = format!(\"{} {}\", a, b.to_string());\n    |                                      ^^^^^^^^^^^^ help: remove this\n \n-error: aborting due to 22 previous errors\n+error: `to_string` applied to a type that implements `Display` in `println!` args\n+  --> $DIR/format_args.rs:156:24\n+   |\n+LL |         println!(\"{}\", original[..10].to_string());\n+   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use this: `&original[..10]`\n+\n+error: aborting due to 23 previous errors\n "}]}