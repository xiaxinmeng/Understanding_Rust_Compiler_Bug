{"sha": "133b3668bbdf558afb9315ce99c715452815c5c4", "node_id": "C_kwDOAAsO6NoAKDEzM2IzNjY4YmJkZjU1OGFmYjkzMTVjZTk5YzcxNTQ1MjgxNWM1YzQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-12T17:03:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-12T17:03:52Z"}, "message": "Auto merge of #8265 - camsteffen:which-rustfmt, r=xFrednet\n\nCache rustfmt path\n\nchangelog: none\n\nCall `rustup which rustfmt` and use the output. This shaves off  ~0.7 seconds for `cargo dev fmt` for me.", "tree": {"sha": "bc7472685591c5d2b6d0f325754071e16c3ee70f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc7472685591c5d2b6d0f325754071e16c3ee70f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/133b3668bbdf558afb9315ce99c715452815c5c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/133b3668bbdf558afb9315ce99c715452815c5c4", "html_url": "https://github.com/rust-lang/rust/commit/133b3668bbdf558afb9315ce99c715452815c5c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/133b3668bbdf558afb9315ce99c715452815c5c4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f33f690ea481973f661bdfe8f019fddece9e0fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f33f690ea481973f661bdfe8f019fddece9e0fe", "html_url": "https://github.com/rust-lang/rust/commit/6f33f690ea481973f661bdfe8f019fddece9e0fe"}, {"sha": "d356fb9fa20198d770fc7e05bb71aea00875b3ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/d356fb9fa20198d770fc7e05bb71aea00875b3ea", "html_url": "https://github.com/rust-lang/rust/commit/d356fb9fa20198d770fc7e05bb71aea00875b3ea"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "d513a229b7e386d3178c7055a2140f8d263c8a8a", "filename": "clippy_dev/src/fmt.rs", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/133b3668bbdf558afb9315ce99c715452815c5c4/clippy_dev%2Fsrc%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/133b3668bbdf558afb9315ce99c715452815c5c4/clippy_dev%2Fsrc%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Ffmt.rs?ref=133b3668bbdf558afb9315ce99c715452815c5c4", "patch": "@@ -3,7 +3,7 @@ use itertools::Itertools;\n use shell_escape::escape;\n use std::ffi::{OsStr, OsString};\n use std::path::Path;\n-use std::process::{self, Command};\n+use std::process::{self, Command, Stdio};\n use std::{fs, io};\n use walkdir::WalkDir;\n \n@@ -31,6 +31,7 @@ impl From<walkdir::Error> for CliError {\n struct FmtContext {\n     check: bool,\n     verbose: bool,\n+    rustfmt_path: String,\n }\n \n // the \"main\" function of cargo dev fmt\n@@ -102,7 +103,23 @@ Please revert the changes to Cargo.tomls first.\"\n         }\n     }\n \n-    let context = FmtContext { check, verbose };\n+    let output = Command::new(\"rustup\")\n+        .args([\"which\", \"rustfmt\"])\n+        .stderr(Stdio::inherit())\n+        .output()\n+        .expect(\"error running `rustup which rustfmt`\");\n+    if !output.status.success() {\n+        eprintln!(\"`rustup which rustfmt` did not execute successfully\");\n+        process::exit(1);\n+    }\n+    let mut rustfmt_path = String::from_utf8(output.stdout).expect(\"invalid rustfmt path\");\n+    rustfmt_path.truncate(rustfmt_path.trim_end().len());\n+\n+    let context = FmtContext {\n+        check,\n+        verbose,\n+        rustfmt_path,\n+    };\n     let result = try_run(&context);\n     let code = match result {\n         Ok(true) => 0,\n@@ -141,8 +158,12 @@ fn exec(\n         println!(\"{}\", format_command(&program, &dir, args));\n     }\n \n-    let child = Command::new(&program).current_dir(&dir).args(args.iter()).spawn()?;\n-    let output = child.wait_with_output()?;\n+    let output = Command::new(&program)\n+        .env(\"RUSTFMT\", &context.rustfmt_path)\n+        .current_dir(&dir)\n+        .args(args.iter())\n+        .output()\n+        .unwrap();\n     let success = output.status.success();\n \n     if !context.check && !success {\n@@ -159,7 +180,6 @@ fn exec(\n fn cargo_fmt(context: &FmtContext, path: &Path) -> Result<bool, CliError> {\n     let mut args = vec![\"fmt\", \"--all\"];\n     if context.check {\n-        args.push(\"--\");\n         args.push(\"--check\");\n     }\n     let success = exec(context, \"cargo\", path, &args)?;\n@@ -200,7 +220,7 @@ fn rustfmt(context: &FmtContext, paths: impl Iterator<Item = OsString>) -> Resul\n     }\n     args.extend(paths);\n \n-    let success = exec(context, \"rustfmt\", std::env::current_dir()?, &args)?;\n+    let success = exec(context, &context.rustfmt_path, std::env::current_dir()?, &args)?;\n \n     Ok(success)\n }"}]}