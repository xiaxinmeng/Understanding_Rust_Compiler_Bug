{"sha": "5dfa5f048ecf57752cf44036fa54a3246225f10d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkZmE1ZjA0OGVjZjU3NzUyY2Y0NDAzNmZhNTRhMzI0NjIyNWYxMGQ=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2018-03-24T02:03:06Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2018-03-24T05:14:21Z"}, "message": "Hide synthesized type parameters", "tree": {"sha": "a10cf25ce7297bdfdde98b393b7b29032dd5fa47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a10cf25ce7297bdfdde98b393b7b29032dd5fa47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5dfa5f048ecf57752cf44036fa54a3246225f10d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5dfa5f048ecf57752cf44036fa54a3246225f10d", "html_url": "https://github.com/rust-lang/rust/commit/5dfa5f048ecf57752cf44036fa54a3246225f10d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5dfa5f048ecf57752cf44036fa54a3246225f10d/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c08480fce0f39f5c9c6db6dde0dccb375ca0ab14", "url": "https://api.github.com/repos/rust-lang/rust/commits/c08480fce0f39f5c9c6db6dde0dccb375ca0ab14", "html_url": "https://github.com/rust-lang/rust/commit/c08480fce0f39f5c9c6db6dde0dccb375ca0ab14"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "7701dd2fd9909c75ce7d0dfa53c60bfd2d67c475", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5dfa5f048ecf57752cf44036fa54a3246225f10d/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dfa5f048ecf57752cf44036fa54a3246225f10d/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=5dfa5f048ecf57752cf44036fa54a3246225f10d", "patch": "@@ -1237,6 +1237,7 @@ pub struct TyParam {\n     pub did: DefId,\n     pub bounds: Vec<TyParamBound>,\n     pub default: Option<Type>,\n+    pub synthetic: Option<hir::SyntheticTyParamKind>,\n }\n \n impl Clean<TyParam> for hir::TyParam {\n@@ -1246,6 +1247,7 @@ impl Clean<TyParam> for hir::TyParam {\n             did: cx.tcx.hir.local_def_id(self.id),\n             bounds: self.bounds.clean(cx),\n             default: self.default.clean(cx),\n+            synthetic: self.synthetic,\n         }\n     }\n }\n@@ -1261,7 +1263,8 @@ impl<'tcx> Clean<TyParam> for ty::TypeParameterDef {\n                 Some(cx.tcx.type_of(self.def_id).clean(cx))\n             } else {\n                 None\n-            }\n+            },\n+            synthetic: None,\n         }\n     }\n }\n@@ -1629,6 +1632,16 @@ pub enum GenericParam {\n     Type(TyParam),\n }\n \n+impl GenericParam {\n+    pub fn is_synthetic_type_param(&self) -> bool {\n+        if let GenericParam::Type(ref t) = *self {\n+            t.synthetic.is_some()\n+        } else {\n+            false\n+        }\n+    }\n+}\n+\n impl Clean<GenericParam> for hir::GenericParam {\n     fn clean(&self, cx: &DocContext) -> GenericParam {\n         match *self {"}, {"sha": "0c4cd3accf61de0862e9e254bba9dc2b45a49004", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5dfa5f048ecf57752cf44036fa54a3246225f10d/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dfa5f048ecf57752cf44036fa54a3246225f10d/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=5dfa5f048ecf57752cf44036fa54a3246225f10d", "patch": "@@ -148,11 +148,17 @@ impl fmt::Display for clean::GenericParam {\n \n impl fmt::Display for clean::Generics {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        if self.params.is_empty() { return Ok(()) }\n+        let real_params = self.params\n+            .iter()\n+            .filter(|p| !p.is_synthetic_type_param())\n+            .collect::<Vec<_>>();\n+        if real_params.is_empty() {\n+            return Ok(());\n+        }\n         if f.alternate() {\n-            write!(f, \"<{:#}>\", CommaSep(&self.params))\n+            write!(f, \"<{:#}>\", CommaSep(&real_params))\n         } else {\n-            write!(f, \"&lt;{}&gt;\", CommaSep(&self.params))\n+            write!(f, \"&lt;{}&gt;\", CommaSep(&real_params))\n         }\n     }\n }"}]}