{"sha": "9688594d0040c7e80e3efe6efa5a0c4d155ba5ce", "node_id": "C_kwDOAAsO6NoAKDk2ODg1OTRkMDA0MGM3ZTgwZTNlZmU2ZWZhNWEwYzRkMTU1YmE1Y2U", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-06-13T22:47:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-13T22:47:24Z"}, "message": "Rollup merge of #97385 - oli-obk:smir-tool-lib, r=pnkfelix\n\nAdd WIP stable MIR crate\n\nr? ``@pnkfelix``\n\nDiscussion about this happend in the SMIR meeting yesterday. Some info can be found at https://rust-lang.zulipchat.com/#narrow/stream/320896-project-stable-mir/topic/dev.20plan.20mtg/near/283774691", "tree": {"sha": "98b3a78aaee076d211a91dcf803f7ea9c85246b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98b3a78aaee076d211a91dcf803f7ea9c85246b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJip758CRBK7hj4Ov3rIwAAxdgIACSl/7VrAUYR7VdbphPQoKsc\nfpxlaGIQp+uzQ/OHJKmgc0e+N3LYuzKeZ8OY0EdsZS8FIsnGyIw4FG6da6Ief4sg\nZzHOl/uqtAvECZMMpQ3sFDcqNTMrA0gGCCq6IrwYj521EiZ4gCLLrzqQQGAVBd59\n0TWkRvI46/LWstbj7/qC/w6RjI1d4gvGGlkNLwEKUmTtgX9TJcYfYAAlJy4pJAzH\nbcu022sP4URo9gm2BStjUEa4o6wjXWKEeF9zlNnJPba3BbiD7oXQnsKz8bdjE1k1\nkLNyjFVI8yV5b9AU60rw+3KQekjc15F2rc4jvizpsSrUGkYTAFiHX7RUEcFZJtc=\n=0nGn\n-----END PGP SIGNATURE-----\n", "payload": "tree 98b3a78aaee076d211a91dcf803f7ea9c85246b9\nparent 537920eedbd30ceb2828b3d909bb663c83f6fce1\nparent 7cba9ed4f7089774f10243b8b4825dd5c34759da\nauthor Yuki Okushi <jtitor@2k36.org> 1655160444 +0900\ncommitter GitHub <noreply@github.com> 1655160444 +0900\n\nRollup merge of #97385 - oli-obk:smir-tool-lib, r=pnkfelix\n\nAdd WIP stable MIR crate\n\nr? ``@pnkfelix``\n\nDiscussion about this happend in the SMIR meeting yesterday. Some info can be found at https://rust-lang.zulipchat.com/#narrow/stream/320896-project-stable-mir/topic/dev.20plan.20mtg/near/283774691\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce", "html_url": "https://github.com/rust-lang/rust/commit/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "537920eedbd30ceb2828b3d909bb663c83f6fce1", "url": "https://api.github.com/repos/rust-lang/rust/commits/537920eedbd30ceb2828b3d909bb663c83f6fce1", "html_url": "https://github.com/rust-lang/rust/commit/537920eedbd30ceb2828b3d909bb663c83f6fce1"}, {"sha": "7cba9ed4f7089774f10243b8b4825dd5c34759da", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cba9ed4f7089774f10243b8b4825dd5c34759da", "html_url": "https://github.com/rust-lang/rust/commit/7cba9ed4f7089774f10243b8b4825dd5c34759da"}], "stats": {"total": 180, "additions": 180, "deletions": 0}, "files": [{"sha": "e5df61d61ce9b0fc4a5a0859f417a645f58b7337", "filename": "Cargo.lock", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=9688594d0040c7e80e3efe6efa5a0c4d155ba5ce", "patch": "@@ -3440,6 +3440,7 @@ dependencies = [\n  \"jemalloc-sys\",\n  \"rustc_codegen_ssa\",\n  \"rustc_driver\",\n+ \"rustc_smir\",\n ]\n \n [[package]]\n@@ -4437,6 +4438,21 @@ dependencies = [\n  \"tracing\",\n ]\n \n+[[package]]\n+name = \"rustc_smir\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"rustc_borrowck\",\n+ \"rustc_driver\",\n+ \"rustc_hir\",\n+ \"rustc_interface\",\n+ \"rustc_middle\",\n+ \"rustc_mir_dataflow\",\n+ \"rustc_mir_transform\",\n+ \"rustc_serialize\",\n+ \"rustc_trait_selection\",\n+]\n+\n [[package]]\n name = \"rustc_span\"\n version = \"0.0.0\""}, {"sha": "27ee3dd2aeafc7086cde881e22713d73006800e8", "filename": "compiler/rustc/Cargo.toml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/compiler%2Frustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/compiler%2Frustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc%2FCargo.toml?ref=9688594d0040c7e80e3efe6efa5a0c4d155ba5ce", "patch": "@@ -9,6 +9,9 @@ rustc_driver = { path = \"../rustc_driver\" }\n # Make sure rustc_codegen_ssa ends up in the sysroot, because this\n # crate is intended to be used by codegen backends, which may not be in-tree.\n rustc_codegen_ssa = { path = \"../rustc_codegen_ssa\" }\n+# Make sure rustc_smir ends up in the sysroot, because this\n+# crate is intended to be used by stable MIR consumers, which are not in-tree\n+rustc_smir = { path = \"../rustc_smir\" }\n \n [dependencies.jemalloc-sys]\n version = \"0.5.0\""}, {"sha": "eb5a316cbd195d26e3f768c7dd8e1b47299e17f8", "filename": "compiler/rustc_smir/.gitignore", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/compiler%2Frustc_smir%2F.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/compiler%2Frustc_smir%2F.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_smir%2F.gitignore?ref=9688594d0040c7e80e3efe6efa5a0c4d155ba5ce", "patch": "@@ -0,0 +1 @@\n+target"}, {"sha": "5e0d1f369a6a21144cd2702dba186df917916e84", "filename": "compiler/rustc_smir/Cargo.toml", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/compiler%2Frustc_smir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/compiler%2Frustc_smir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_smir%2FCargo.toml?ref=9688594d0040c7e80e3efe6efa5a0c4d155ba5ce", "patch": "@@ -0,0 +1,28 @@\n+[package]\n+name = \"rustc_smir\"\n+version = \"0.0.0\"\n+edition = \"2021\"\n+\n+[dependencies]\n+rustc_borrowck = { path = \"../rustc_borrowck\", optional = true }\n+rustc_driver = { path = \"../rustc_driver\", optional = true }\n+rustc_hir = { path = \"../rustc_hir\", optional = true }\n+rustc_interface = { path = \"../rustc_interface\", optional = true }\n+rustc_middle = { path = \"../rustc_middle\", optional = true }\n+rustc_mir_dataflow = { path = \"../rustc_mir_dataflow\", optional = true }\n+rustc_mir_transform = { path = \"../rustc_mir_transform\", optional = true }\n+rustc_serialize = { path = \"../rustc_serialize\", optional = true }\n+rustc_trait_selection = { path = \"../rustc_trait_selection\", optional = true }\n+\n+[features]\n+default = [\n+    \"rustc_borrowck\",\n+    \"rustc_driver\",\n+    \"rustc_hir\",\n+    \"rustc_interface\",\n+    \"rustc_middle\",\n+    \"rustc_mir_dataflow\",\n+    \"rustc_mir_transform\",\n+    \"rustc_serialize\",\n+    \"rustc_trait_selection\",\n+]"}, {"sha": "ae49098dd0ce65095f859f79eb069c4e0b39befa", "filename": "compiler/rustc_smir/README.md", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/compiler%2Frustc_smir%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/compiler%2Frustc_smir%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_smir%2FREADME.md?ref=9688594d0040c7e80e3efe6efa5a0c4d155ba5ce", "patch": "@@ -0,0 +1,75 @@\n+This crate is regularly synced with its mirror in the rustc repo at `compiler/rustc_smir`.\n+\n+We use `git subtree` for this to preserve commits and allow the rustc repo to\n+edit these crates without having to touch this repo. This keeps the crates compiling\n+while allowing us to independently work on them here. The effort of keeping them in\n+sync is pushed entirely onto us, without affecting rustc workflows negatively.\n+This may change in the future, but changes to policy should only be done via a\n+compiler team MCP.\n+\n+## Instructions for working on this crate locally\n+\n+Since the crate is the same in the rustc repo and here, the dependencies on rustc_* crates\n+will only either work here or there, but never in both places at the same time. Thus we use\n+optional dependencies on the rustc_* crates, requiring local development to use\n+\n+```\n+cargo build --no-default-features -Zavoid-dev-deps\n+```\n+\n+in order to compile successfully.\n+\n+## Instructions for syncing\n+\n+### Updating this repository\n+\n+In the rustc repo, execute\n+\n+```\n+git subtree push --prefix=compiler/rustc_smir url_to_your_fork_of_project_stable_mir some_feature_branch\n+```\n+\n+and then open a PR of your `some_feature_branch` against https://github.com/rust-lang/project-stable-mir\n+\n+### Updating the rustc library\n+\n+First we need to bump our stack limit, as the rustc repo otherwise quickly hits that:\n+\n+```\n+ulimit -s 60000\n+```\n+\n+#### Maximum function recursion depth (1000) reached\n+\n+Then we need to disable `dash` as the default shell for sh scripts, as otherwise we run into a\n+hard limit of a recursion depth of 1000:\n+\n+```\n+sudo dpkg-reconfigure dash\n+```\n+\n+and then select `No` to disable dash.\n+\n+\n+#### Patching your `git worktree`\n+\n+The regular git worktree does not scale to repos of the size of the rustc repo.\n+So download the `git-subtree.sh` from https://github.com/gitgitgadget/git/pull/493/files and run\n+\n+```\n+sudo cp --backup /path/to/patched/git-subtree.sh /usr/lib/git-core/git-subtree\n+sudo chmod --reference=/usr/lib/git-core/git-subtree~ /usr/lib/git-core/git-subtree\n+sudo chown --reference=/usr/lib/git-core/git-subtree~ /usr/lib/git-core/git-subtree\n+```\n+\n+#### Actually doing a sync\n+\n+In the rustc repo, execute\n+\n+```\n+git subtree pull --prefix=compiler/rustc_smir https://github.com/rust-lang/project-stable-mir smir\n+```\n+\n+Note: only ever sync to rustc from the project-stable-mir's `smir` branch. Do not sync with your own forks.\n+\n+Then open a PR against rustc just like a regular PR."}, {"sha": "7b696fc1f5cecba18def14414c85a39ef4e64716", "filename": "compiler/rustc_smir/rust-toolchain.toml", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/compiler%2Frustc_smir%2Frust-toolchain.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/compiler%2Frustc_smir%2Frust-toolchain.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_smir%2Frust-toolchain.toml?ref=9688594d0040c7e80e3efe6efa5a0c4d155ba5ce", "patch": "@@ -0,0 +1,3 @@\n+[toolchain]\n+channel = \"nightly-2022-06-01\"\n+components = [ \"rustfmt\", \"rustc-dev\" ]"}, {"sha": "5c7aaf35b90326eb6d33a00e513bed6d33db2a9f", "filename": "compiler/rustc_smir/src/lib.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/compiler%2Frustc_smir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/compiler%2Frustc_smir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_smir%2Fsrc%2Flib.rs?ref=9688594d0040c7e80e3efe6efa5a0c4d155ba5ce", "patch": "@@ -0,0 +1,17 @@\n+//! The WIP stable interface to rustc internals.\n+//!\n+//! For more information see https://github.com/rust-lang/project-stable-mir\n+//!\n+//! # Note\n+//!\n+//! This API is still completely unstable and subject to change.\n+\n+#![doc(\n+    html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\",\n+    test(attr(allow(unused_variables), deny(warnings)))\n+)]\n+#![cfg_attr(not(feature = \"default\"), feature(rustc_private))]\n+\n+pub mod mir;\n+\n+pub mod very_unstable;"}, {"sha": "855605b1a4f9d449a761c55a531080fb8807b2f0", "filename": "compiler/rustc_smir/src/mir.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/compiler%2Frustc_smir%2Fsrc%2Fmir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/compiler%2Frustc_smir%2Fsrc%2Fmir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_smir%2Fsrc%2Fmir.rs?ref=9688594d0040c7e80e3efe6efa5a0c4d155ba5ce", "patch": "@@ -0,0 +1,10 @@\n+pub use crate::very_unstable::middle::mir::{\n+    visit::MutVisitor, AggregateKind, AssertKind, BasicBlock, BasicBlockData, BinOp, BindingForm,\n+    BlockTailInfo, Body, BorrowKind, CastKind, ClearCrossCrate, Constant, ConstantKind,\n+    CopyNonOverlapping, Coverage, FakeReadCause, Field, GeneratorInfo, ImplicitSelfKind,\n+    InlineAsmOperand, Local, LocalDecl, LocalInfo, LocalKind, Location, MirPhase, MirSource,\n+    NullOp, Operand, Place, PlaceRef, ProjectionElem, ProjectionKind, Promoted, RetagKind, Rvalue,\n+    Safety, SourceInfo, SourceScope, SourceScopeData, SourceScopeLocalData, Statement,\n+    StatementKind, UnOp, UserTypeProjection, UserTypeProjections, VarBindingForm, VarDebugInfo,\n+    VarDebugInfoContents,\n+};"}, {"sha": "12ba133dbb169403305825f59f39eba7cff394a6", "filename": "compiler/rustc_smir/src/very_unstable.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/compiler%2Frustc_smir%2Fsrc%2Fvery_unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9688594d0040c7e80e3efe6efa5a0c4d155ba5ce/compiler%2Frustc_smir%2Fsrc%2Fvery_unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_smir%2Fsrc%2Fvery_unstable.rs?ref=9688594d0040c7e80e3efe6efa5a0c4d155ba5ce", "patch": "@@ -0,0 +1,27 @@\n+//! This module reexports various crates and modules from unstable rustc APIs.\n+//! Add anything you need here and it will get slowly transferred to a stable API.\n+//! Only use rustc_smir in your dependencies and use the reexports here instead of\n+//! directly referring to the unstable crates.\n+\n+macro_rules! crates {\n+    ($($rustc_name:ident -> $name:ident,)*) => {\n+        $(\n+            #[cfg(not(feature = \"default\"))]\n+            pub extern crate $rustc_name as $name;\n+            #[cfg(feature = \"default\")]\n+            pub use $rustc_name as $name;\n+        )*\n+    }\n+}\n+\n+crates! {\n+    rustc_borrowck -> borrowck,\n+    rustc_driver -> driver,\n+    rustc_hir -> hir,\n+    rustc_interface -> interface,\n+    rustc_middle -> middle,\n+    rustc_mir_dataflow -> dataflow,\n+    rustc_mir_transform -> transform,\n+    rustc_serialize -> serialize,\n+    rustc_trait_selection -> trait_selection,\n+}"}]}