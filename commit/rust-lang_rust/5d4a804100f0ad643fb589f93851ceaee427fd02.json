{"sha": "5d4a804100f0ad643fb589f93851ceaee427fd02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkNGE4MDQxMDBmMGFkNjQzZmI1ODlmOTM4NTFjZWFlZTQyN2ZkMDI=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-19T05:04:07Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-19T05:04:07Z"}, "message": "Implement the dummy 'assume' intrinsic.", "tree": {"sha": "3052568145be5cfece1a0bc8bf9c6cd4dc6cd66e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3052568145be5cfece1a0bc8bf9c6cd4dc6cd66e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d4a804100f0ad643fb589f93851ceaee427fd02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d4a804100f0ad643fb589f93851ceaee427fd02", "html_url": "https://github.com/rust-lang/rust/commit/5d4a804100f0ad643fb589f93851ceaee427fd02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d4a804100f0ad643fb589f93851ceaee427fd02/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbc9913b7d0e4521430ef19862652df22c9e76c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbc9913b7d0e4521430ef19862652df22c9e76c7", "html_url": "https://github.com/rust-lang/rust/commit/dbc9913b7d0e4521430ef19862652df22c9e76c7"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "a2c44f4fed598b2d45315f560c8db9beeda6a070", "filename": "src/interpreter.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5d4a804100f0ad643fb589f93851ceaee427fd02/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d4a804100f0ad643fb589f93851ceaee427fd02/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=5d4a804100f0ad643fb589f93851ceaee427fd02", "patch": "@@ -315,6 +315,8 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n         let dest_size = self.lvalue_repr(ret_ptr).size();\n \n         match name {\n+            \"assume\" => {}\n+\n             \"copy_nonoverlapping\" => {\n                 let elem_ty = *substs.types.get(subst::FnSpace, 0);\n                 let elem_size = self.ty_size(elem_ty);\n@@ -330,6 +332,7 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n                 try!(self.memory.copy(src, dest, count as usize * elem_size));\n             }\n \n+            // TODO(tsion): Mark as dropped?\n             \"forget\" => {}\n \n             \"offset\" => {"}]}