{"sha": "5edcf9bc113dbaeb5710ed9af8f2cb4f9756a870", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlZGNmOWJjMTEzZGJhZWI1NzEwZWQ5YWY4ZjJjYjRmOTc1NmE4NzA=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-08-15T00:28:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-15T00:28:46Z"}, "message": "Rollup merge of #43848 - frewsxcv:frewsxcv-stack-size, r=QuietMisdreavus\n\nRewrite/reorganize docs for stack size/thread names for spawned threads.\n\n* Moves docs about stack size and thread naming from `Builder` to the\n  `std::thread` module\n* Adds more links to the new module-level documentation\n* Mentions the 2 MiB stack size default, but indicate it's subject to\n  change\n\nFixes https://github.com/rust-lang/rust/issues/43805.", "tree": {"sha": "2bc405d7c4d9367e22ec724b1ec750993a71e068", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bc405d7c4d9367e22ec724b1ec750993a71e068"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5edcf9bc113dbaeb5710ed9af8f2cb4f9756a870", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5edcf9bc113dbaeb5710ed9af8f2cb4f9756a870", "html_url": "https://github.com/rust-lang/rust/commit/5edcf9bc113dbaeb5710ed9af8f2cb4f9756a870", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5edcf9bc113dbaeb5710ed9af8f2cb4f9756a870/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2009536acd2a0fb6277d7b6d9a835d17cab97ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2009536acd2a0fb6277d7b6d9a835d17cab97ca", "html_url": "https://github.com/rust-lang/rust/commit/c2009536acd2a0fb6277d7b6d9a835d17cab97ca"}, {"sha": "659460191d47c81a2334bfee189ce022bd3f445b", "url": "https://api.github.com/repos/rust-lang/rust/commits/659460191d47c81a2334bfee189ce022bd3f445b", "html_url": "https://github.com/rust-lang/rust/commit/659460191d47c81a2334bfee189ce022bd3f445b"}], "stats": {"total": 55, "additions": 45, "deletions": 10}, "files": [{"sha": "3cd9cf7727c204bbd827814acd986645b789c6b9", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 45, "deletions": 10, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/5edcf9bc113dbaeb5710ed9af8f2cb4f9756a870/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5edcf9bc113dbaeb5710ed9af8f2cb4f9756a870/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=5edcf9bc113dbaeb5710ed9af8f2cb4f9756a870", "patch": "@@ -112,6 +112,29 @@\n //! will want to make use of some form of **interior mutability** through the\n //! [`Cell`] or [`RefCell`] types.\n //!\n+//! ## Naming threads\n+//!\n+//! Threads are able to have associated names for identification purposes. By default, spawned\n+//! threads are unnamed. To specify a name for a thread, build the thread with [`Builder`] and pass\n+//! the desired thread name to [`Builder::name`]. To retrieve the thread name from within the\n+//! thread, use [`Thread::name`]. A couple examples of where the name of a thread gets used:\n+//!\n+//! * If a panic occurs in a named thread, the thread name will be printed in the panic message.\n+//! * The thread name is provided to the OS where applicable (e.g. `pthread_setname_np` in\n+//!   unix-like platforms).\n+//!\n+//! ## Stack size\n+//!\n+//! The default stack size for spawned threads is 2 MiB, though this particular stack size is\n+//! subject to change in the future. There are two ways to manually specify the stack size for\n+//! spawned threads:\n+//!\n+//! * Build the thread with [`Builder`] and pass the desired stack size to [`Builder::stack_size`].\n+//! * Set the `RUST_MIN_STACK` environment variable to an integer representing the desired stack\n+//!   size (in bytes). Note that setting [`Builder::stack_size`] will override this.\n+//!\n+//! Note that the stack size of the main thread is *not* determined by Rust.\n+//!\n //! [channels]: ../../std/sync/mpsc/index.html\n //! [`Arc`]: ../../std/sync/struct.Arc.html\n //! [`spawn`]: ../../std/thread/fn.spawn.html\n@@ -123,11 +146,14 @@\n //! [`Err`]: ../../std/result/enum.Result.html#variant.Err\n //! [`panic!`]: ../../std/macro.panic.html\n //! [`Builder`]: ../../std/thread/struct.Builder.html\n+//! [`Builder::stack_size`]: ../../std/thread/struct.Builder.html#method.stack_size\n+//! [`Builder::name`]: ../../std/thread/struct.Builder.html#method.name\n //! [`thread::current`]: ../../std/thread/fn.current.html\n //! [`thread::Result`]: ../../std/thread/type.Result.html\n //! [`Thread`]: ../../std/thread/struct.Thread.html\n //! [`park`]: ../../std/thread/fn.park.html\n //! [`unpark`]: ../../std/thread/struct.Thread.html#method.unpark\n+//! [`Thread::name`]: ../../std/thread/struct.Thread.html#method.name\n //! [`thread::park_timeout`]: ../../std/thread/fn.park_timeout.html\n //! [`Cell`]: ../cell/struct.Cell.html\n //! [`RefCell`]: ../cell/struct.RefCell.html\n@@ -187,16 +213,8 @@ pub use self::local::{LocalKey, LocalKeyState, AccessError};\n ///\n /// The two configurations available are:\n ///\n-/// - [`name`]: allows to give a name to the thread which is currently\n-///   only used in `panic` messages.\n-/// - [`stack_size`]: specifies the desired stack size. Note that this can\n-///   be overridden by the OS.\n-///\n-/// If the [`stack_size`] field is not specified, the stack size\n-/// will be the `RUST_MIN_STACK` environment variable. If it is\n-/// not specified either, a sensible default will be set.\n-///\n-/// If the [`name`] field is not specified, the thread will not be named.\n+/// - [`name`]: specifies an [associated name for the thread][naming-threads]\n+/// - [`stack_size`]: specifies the [desired stack size for the thread][stack-size]\n ///\n /// The [`spawn`] method will take ownership of the builder and create an\n /// [`io::Result`] to the thread handle with the given configuration.\n@@ -228,6 +246,8 @@ pub use self::local::{LocalKey, LocalKeyState, AccessError};\n /// [`spawn`]: ../../std/thread/struct.Builder.html#method.spawn\n /// [`io::Result`]: ../../std/io/type.Result.html\n /// [`unwrap`]: ../../std/result/enum.Result.html#method.unwrap\n+/// [naming-threads]: ./index.html#naming-threads\n+/// [stack-size]: ./index.html#stack-size\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[derive(Debug)]\n pub struct Builder {\n@@ -267,6 +287,9 @@ impl Builder {\n     /// Names the thread-to-be. Currently the name is used for identification\n     /// only in panic messages.\n     ///\n+    /// For more information about named threads, see\n+    /// [this module-level documentation][naming-threads].\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -281,6 +304,8 @@ impl Builder {\n     ///\n     /// handler.join().unwrap();\n     /// ```\n+    ///\n+    /// [naming-threads]: ./index.html#naming-threads\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn name(mut self, name: String) -> Builder {\n         self.name = Some(name);\n@@ -292,13 +317,18 @@ impl Builder {\n     /// The actual stack size may be greater than this value if\n     /// the platform specifies minimal stack size.\n     ///\n+    /// For more information about the stack size for threads, see\n+    /// [this module-level documentation][stack-size].\n+    ///\n     /// # Examples\n     ///\n     /// ```\n     /// use std::thread;\n     ///\n     /// let builder = thread::Builder::new().stack_size(32 * 1024);\n     /// ```\n+    ///\n+    /// [stack-size]: ./index.html#stack-size\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn stack_size(mut self, size: usize) -> Builder {\n         self.stack_size = Some(size);\n@@ -987,6 +1017,9 @@ impl Thread {\n \n     /// Gets the thread's name.\n     ///\n+    /// For more information about named threads, see\n+    /// [this module-level documentation][naming-threads].\n+    ///\n     /// # Examples\n     ///\n     /// Threads by default have no name specified:\n@@ -1017,6 +1050,8 @@ impl Thread {\n     ///\n     /// handler.join().unwrap();\n     /// ```\n+    ///\n+    /// [naming-threads]: ./index.html#naming-threads\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn name(&self) -> Option<&str> {\n         self.cname().map(|s| unsafe { str::from_utf8_unchecked(s.to_bytes()) } )"}]}