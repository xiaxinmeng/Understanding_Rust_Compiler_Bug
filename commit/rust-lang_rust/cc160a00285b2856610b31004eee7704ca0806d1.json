{"sha": "cc160a00285b2856610b31004eee7704ca0806d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjMTYwYTAwMjg1YjI4NTY2MTBiMzEwMDRlZWU3NzA0Y2EwODA2ZDE=", "commit": {"author": {"name": "darkf", "email": "lw9k123@gmail.com", "date": "2013-08-05T13:06:43Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-08-08T02:41:13Z"}, "message": "extra: add `internal` to {de,in}flate_bytes_ naming to address nit", "tree": {"sha": "0c980ac893792eace9494c80a26383578e3b0997", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c980ac893792eace9494c80a26383578e3b0997"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc160a00285b2856610b31004eee7704ca0806d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc160a00285b2856610b31004eee7704ca0806d1", "html_url": "https://github.com/rust-lang/rust/commit/cc160a00285b2856610b31004eee7704ca0806d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc160a00285b2856610b31004eee7704ca0806d1/comments", "author": {"login": "darkf", "id": 179760, "node_id": "MDQ6VXNlcjE3OTc2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/179760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkf", "html_url": "https://github.com/darkf", "followers_url": "https://api.github.com/users/darkf/followers", "following_url": "https://api.github.com/users/darkf/following{/other_user}", "gists_url": "https://api.github.com/users/darkf/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkf/subscriptions", "organizations_url": "https://api.github.com/users/darkf/orgs", "repos_url": "https://api.github.com/users/darkf/repos", "events_url": "https://api.github.com/users/darkf/events{/privacy}", "received_events_url": "https://api.github.com/users/darkf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd5e8b218fb7a6f45beca1cddb0c19949307ea3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd5e8b218fb7a6f45beca1cddb0c19949307ea3d", "html_url": "https://github.com/rust-lang/rust/commit/dd5e8b218fb7a6f45beca1cddb0c19949307ea3d"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "ed8cbcd0663f3f9874afc34e6ef92a827c76eeae", "filename": "src/libextra/flate.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cc160a00285b2856610b31004eee7704ca0806d1/src%2Flibextra%2Fflate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc160a00285b2856610b31004eee7704ca0806d1/src%2Flibextra%2Fflate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fflate.rs?ref=cc160a00285b2856610b31004eee7704ca0806d1", "patch": "@@ -46,7 +46,7 @@ static LZ_BEST : c_int = 0xfff; // LZ with 4095 probes, \"best\"\n static TINFL_FLAG_PARSE_ZLIB_HEADER : c_int = 0x1; // parse zlib header and adler32 checksum\n static TDEFL_WRITE_ZLIB_HEADER : c_int = 0x01000; // write zlib header and adler32 checksum\n \n-fn deflate_bytes_(bytes: &[u8], flags: c_int) -> ~[u8] {\n+fn deflate_bytes_internal(bytes: &[u8], flags: c_int) -> ~[u8] {\n     do bytes.as_imm_buf |b, len| {\n         unsafe {\n             let mut outsz : size_t = 0;\n@@ -65,14 +65,14 @@ fn deflate_bytes_(bytes: &[u8], flags: c_int) -> ~[u8] {\n }\n \n pub fn deflate_bytes(bytes: &[u8]) -> ~[u8] {\n-    deflate_bytes_(bytes, LZ_NORM)\n+    deflate_bytes_internal(bytes, LZ_NORM)\n }\n \n pub fn deflate_bytes_zlib(bytes: &[u8]) -> ~[u8] {\n-    deflate_bytes_(bytes, LZ_NORM | TDEFL_WRITE_ZLIB_HEADER)\n+    deflate_bytes_internal(bytes, LZ_NORM | TDEFL_WRITE_ZLIB_HEADER)\n }\n \n-fn inflate_bytes_(bytes: &[u8], flags: c_int) -> ~[u8] {\n+fn inflate_bytes_internal(bytes: &[u8], flags: c_int) -> ~[u8] {\n     do bytes.as_imm_buf |b, len| {\n         unsafe {\n             let mut outsz : size_t = 0;\n@@ -91,11 +91,11 @@ fn inflate_bytes_(bytes: &[u8], flags: c_int) -> ~[u8] {\n }\n \n pub fn inflate_bytes(bytes: &[u8]) -> ~[u8] {\n-    inflate_bytes_(bytes, 0)\n+    inflate_bytes_internal(bytes, 0)\n }\n \n pub fn inflate_bytes_zlib(bytes: &[u8]) -> ~[u8] {\n-    inflate_bytes_(bytes, TINFL_FLAG_PARSE_ZLIB_HEADER)\n+    inflate_bytes_internal(bytes, TINFL_FLAG_PARSE_ZLIB_HEADER)\n }\n \n #[cfg(test)]"}]}