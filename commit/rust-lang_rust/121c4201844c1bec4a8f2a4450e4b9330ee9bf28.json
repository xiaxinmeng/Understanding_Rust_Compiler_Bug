{"sha": "121c4201844c1bec4a8f2a4450e4b9330ee9bf28", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyMWM0MjAxODQ0YzFiZWM0YThmMmE0NDUwZTRiOTMzMGVlOWJmMjg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-15T08:24:35Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-17T02:18:43Z"}, "message": "rt: Insert stack alignment checks into upcalls", "tree": {"sha": "54b9576ba501dc5de392ad5a1a49d4ff11cd9c63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54b9576ba501dc5de392ad5a1a49d4ff11cd9c63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/121c4201844c1bec4a8f2a4450e4b9330ee9bf28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/121c4201844c1bec4a8f2a4450e4b9330ee9bf28", "html_url": "https://github.com/rust-lang/rust/commit/121c4201844c1bec4a8f2a4450e4b9330ee9bf28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/121c4201844c1bec4a8f2a4450e4b9330ee9bf28/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f826b34cbb101f2bfe2660f5c4f8db6d044f83a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f826b34cbb101f2bfe2660f5c4f8db6d044f83a", "html_url": "https://github.com/rust-lang/rust/commit/4f826b34cbb101f2bfe2660f5c4f8db6d044f83a"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "b9c42a650d844d88d44b5041ece86cffcc81ca04", "filename": "src/rt/arch/i386/record_sp.S", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/121c4201844c1bec4a8f2a4450e4b9330ee9bf28/src%2Frt%2Farch%2Fi386%2Frecord_sp.S", "raw_url": "https://github.com/rust-lang/rust/raw/121c4201844c1bec4a8f2a4450e4b9330ee9bf28/src%2Frt%2Farch%2Fi386%2Frecord_sp.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Frecord_sp.S?ref=121c4201844c1bec4a8f2a4450e4b9330ee9bf28", "patch": "@@ -3,13 +3,16 @@\n #if defined(__APPLE__) || defined(_WIN32)\n #define RECORD_SP          _record_sp\n #define GET_SP             _get_sp\n+#define CHECK_STACK        _check_stack_alignment\n #else\n #define RECORD_SP          record_sp\n #define GET_SP             get_sp\n+#define CHECK_STACK        check_stack_alignment\n #endif\n \n .globl RECORD_SP\n .globl GET_SP\n+.globl CHECK_STACK\n \n #if defined(__linux__)\n RECORD_SP:\n@@ -35,4 +38,11 @@ RECORD_SP:\n \n GET_SP:\n \tmovl %esp, %eax\n-\tret\n\\ No newline at end of file\n+\tret\n+\n+// This will segfault if not called on a 16-byte boundary\n+CHECK_STACK:\n+\tsubl $28, %esp\n+\tmovaps %xmm0, (%esp)\n+\taddl $28, %esp\n+\tret"}, {"sha": "af217d0f37faa277a1ea1c3ac884810edf8e1ef7", "filename": "src/rt/arch/x86_64/record_sp.S", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/121c4201844c1bec4a8f2a4450e4b9330ee9bf28/src%2Frt%2Farch%2Fx86_64%2Frecord_sp.S", "raw_url": "https://github.com/rust-lang/rust/raw/121c4201844c1bec4a8f2a4450e4b9330ee9bf28/src%2Frt%2Farch%2Fx86_64%2Frecord_sp.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2Frecord_sp.S?ref=121c4201844c1bec4a8f2a4450e4b9330ee9bf28", "patch": "@@ -3,13 +3,16 @@\n #if defined(__APPLE__) || defined(_WIN32)\n #define RECORD_SP          _record_sp\n #define GET_SP             _get_sp\n+#define CHECK_STACK        _check_stack_alignment\n #else\n #define RECORD_SP          record_sp\n #define GET_SP             get_sp\n+#define CHECK_STACK        check_stack_alignment\n #endif\n \n .globl RECORD_SP\n .globl GET_SP\n+.globl CHECK_STACK\n \n #if defined(__linux__)\n RECORD_SP:\n@@ -30,3 +33,10 @@ RECORD_SP:\n GET_SP:\n \tmovq %rsp, %rax\n \tret\n+\n+// This will segfault if not called on a 16-byte boundary\n+CHECK_STACK:\n+\tsubq $24, %rsp\n+\tmovaps %xmm0, (%rsp)\n+\taddq $24, %rsp\n+\tret"}, {"sha": "dd7e275cd045084408fe71e645222537774dfdef", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/121c4201844c1bec4a8f2a4450e4b9330ee9bf28/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/121c4201844c1bec4a8f2a4450e4b9330ee9bf28/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=121c4201844c1bec4a8f2a4450e4b9330ee9bf28", "patch": "@@ -14,6 +14,14 @@\n #include \"rust_upcall.h\"\n #include <stdint.h>\n \n+\n+// This is called to ensure we've set up our rust stacks\n+// correctly. Strategically placed at entry to upcalls because they begin on\n+// the rust stack and happen frequently enough to catch most stack changes,\n+// including at the beginning of all landing pads.\n+extern \"C\" void\n+check_stack_alignment() __attribute__ ((aligned (16)));\n+\n #define SWITCH_STACK(A, F) upcall_call_shim_on_c_stack((void*)A, (void*)F)\n \n extern \"C\" void record_sp(void *limit);\n@@ -26,6 +34,7 @@ extern \"C\" void record_sp(void *limit);\n  */\n extern \"C\" CDECL void\n upcall_call_shim_on_c_stack(void *args, void *fn_ptr) {\n+    check_stack_alignment();\n     rust_task *task = rust_scheduler::get_task();\n \n     // FIXME (1226) - The shim functions generated by rustc contain the\n@@ -594,6 +603,7 @@ upcall_del_stack() {\n // needs to acquire the value of the stack pointer\n extern \"C\" CDECL void\n upcall_reset_stack_limit() {\n+    check_stack_alignment();\n     rust_task *task = rust_scheduler::get_task();\n     task->reset_stack_limit();\n }"}]}