{"sha": "aa3bf01889e451222a653b73ccd0b25b5f88170a", "node_id": "C_kwDOAAsO6NoAKGFhM2JmMDE4ODllNDUxMjIyYTY1M2I3M2NjZDBiMjViNWY4ODE3MGE", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-10-12T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-10-12T11:27:16Z"}, "message": "Cleanup LLVM multi-threading checks\n\nThe support for runtime multi-threading was removed from LLVM. Calls to\n`LLVMStartMultithreaded` became no-ops equivalent to checking if LLVM\nwas compiled with support for threads http://reviews.llvm.org/D4216.", "tree": {"sha": "b54f499e9a2cf97aa41620cd38d60b3dfc3b3f2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b54f499e9a2cf97aa41620cd38d60b3dfc3b3f2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa3bf01889e451222a653b73ccd0b25b5f88170a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa3bf01889e451222a653b73ccd0b25b5f88170a", "html_url": "https://github.com/rust-lang/rust/commit/aa3bf01889e451222a653b73ccd0b25b5f88170a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa3bf01889e451222a653b73ccd0b25b5f88170a/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffdf18d1447b57faafded06a887b6dae1f7293c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffdf18d1447b57faafded06a887b6dae1f7293c7", "html_url": "https://github.com/rust-lang/rust/commit/ffdf18d1447b57faafded06a887b6dae1f7293c7"}], "stats": {"total": 22, "additions": 6, "deletions": 16}, "files": [{"sha": "3c744924328d20b465b3a8092127b77499c169f9", "filename": "compiler/rustc_codegen_llvm/src/llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa3bf01889e451222a653b73ccd0b25b5f88170a/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa3bf01889e451222a653b73ccd0b25b5f88170a/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs?ref=aa3bf01889e451222a653b73ccd0b25b5f88170a", "patch": "@@ -1743,7 +1743,7 @@ extern \"C\" {\n \n     pub fn LLVMDisposeMessage(message: *mut c_char);\n \n-    pub fn LLVMStartMultithreaded() -> Bool;\n+    pub fn LLVMIsMultithreaded() -> Bool;\n \n     /// Returns a string describing the last error caused by an LLVMRust* call.\n     pub fn LLVMRustGetLastError() -> *const c_char;"}, {"sha": "54767ef683ffe48e8bee4533cee2b914639b2a44", "filename": "compiler/rustc_codegen_llvm/src/llvm_util.rs", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/aa3bf01889e451222a653b73ccd0b25b5f88170a/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa3bf01889e451222a653b73ccd0b25b5f88170a/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs?ref=aa3bf01889e451222a653b73ccd0b25b5f88170a", "patch": "@@ -17,35 +17,25 @@ use std::path::Path;\n use std::ptr;\n use std::slice;\n use std::str;\n-use std::sync::atomic::{AtomicBool, Ordering};\n use std::sync::Once;\n \n-static POISONED: AtomicBool = AtomicBool::new(false);\n static INIT: Once = Once::new();\n \n pub(crate) fn init(sess: &Session) {\n     unsafe {\n         // Before we touch LLVM, make sure that multithreading is enabled.\n+        if llvm::LLVMIsMultithreaded() != 1 {\n+            bug!(\"LLVM compiled without support for threads\");\n+        }\n         INIT.call_once(|| {\n-            if llvm::LLVMStartMultithreaded() != 1 {\n-                // use an extra bool to make sure that all future usage of LLVM\n-                // cannot proceed despite the Once not running more than once.\n-                POISONED.store(true, Ordering::SeqCst);\n-            }\n-\n             configure_llvm(sess);\n         });\n-\n-        if POISONED.load(Ordering::SeqCst) {\n-            bug!(\"couldn't enable multi-threaded LLVM\");\n-        }\n     }\n }\n \n fn require_inited() {\n-    INIT.call_once(|| bug!(\"llvm is not initialized\"));\n-    if POISONED.load(Ordering::SeqCst) {\n-        bug!(\"couldn't enable multi-threaded LLVM\");\n+    if !INIT.is_completed() {\n+        bug!(\"LLVM is not initialized\");\n     }\n }\n "}]}