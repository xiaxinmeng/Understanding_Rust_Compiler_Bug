{"sha": "7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2", "node_id": "C_kwDOAAsO6NoAKDdiOWRkYmRjZjI2MWMwMDEwYjI0ZjUzMjgxYmYyZjI3ZDAyZWI2ZjI", "commit": {"author": {"name": "rhysd", "email": "lin90162@yahoo.co.jp", "date": "2021-10-07T16:00:15Z"}, "committer": {"name": "rhysd", "email": "lin90162@yahoo.co.jp", "date": "2021-10-08T15:07:37Z"}, "message": "Show detailed expected/found types in error message when trait paths are the same", "tree": {"sha": "a880d11cf342266656ebd93b3b948a7dddad74a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a880d11cf342266656ebd93b3b948a7dddad74a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2", "html_url": "https://github.com/rust-lang/rust/commit/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/comments", "author": {"login": "rhysd", "id": 823277, "node_id": "MDQ6VXNlcjgyMzI3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/823277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhysd", "html_url": "https://github.com/rhysd", "followers_url": "https://api.github.com/users/rhysd/followers", "following_url": "https://api.github.com/users/rhysd/following{/other_user}", "gists_url": "https://api.github.com/users/rhysd/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhysd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhysd/subscriptions", "organizations_url": "https://api.github.com/users/rhysd/orgs", "repos_url": "https://api.github.com/users/rhysd/repos", "events_url": "https://api.github.com/users/rhysd/events{/privacy}", "received_events_url": "https://api.github.com/users/rhysd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rhysd", "id": 823277, "node_id": "MDQ6VXNlcjgyMzI3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/823277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhysd", "html_url": "https://github.com/rhysd", "followers_url": "https://api.github.com/users/rhysd/followers", "following_url": "https://api.github.com/users/rhysd/following{/other_user}", "gists_url": "https://api.github.com/users/rhysd/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhysd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhysd/subscriptions", "organizations_url": "https://api.github.com/users/rhysd/orgs", "repos_url": "https://api.github.com/users/rhysd/repos", "events_url": "https://api.github.com/users/rhysd/events{/privacy}", "received_events_url": "https://api.github.com/users/rhysd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca8078d7b2e40c24a39e5fe2a910afef4c91ebfc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca8078d7b2e40c24a39e5fe2a910afef4c91ebfc", "html_url": "https://github.com/rust-lang/rust/commit/ca8078d7b2e40c24a39e5fe2a910afef4c91ebfc"}], "stats": {"total": 107, "additions": 87, "deletions": 20}, "files": [{"sha": "056709cd314d1a8f9c689411ee9d1299bf646b19", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2", "patch": "@@ -2060,14 +2060,24 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                     expected: exp_found.expected.print_only_trait_path(),\n                     found: exp_found.found.print_only_trait_path(),\n                 };\n-                self.expected_found_str(pretty_exp_found)\n+                match self.expected_found_str(pretty_exp_found) {\n+                    Some((expected, found)) if expected == found => {\n+                        self.expected_found_str(exp_found)\n+                    }\n+                    ret => ret,\n+                }\n             }\n             infer::PolyTraitRefs(exp_found) => {\n                 let pretty_exp_found = ty::error::ExpectedFound {\n                     expected: exp_found.expected.print_only_trait_path(),\n                     found: exp_found.found.print_only_trait_path(),\n                 };\n-                self.expected_found_str(pretty_exp_found)\n+                match self.expected_found_str(pretty_exp_found) {\n+                    Some((expected, found)) if expected == found => {\n+                        self.expected_found_str(exp_found)\n+                    }\n+                    ret => ret,\n+                }\n             }\n         }\n     }"}, {"sha": "0ac03195fa3418481d6d1419f129b2db8aad9af7", "filename": "src/test/ui/error-codes/E0308-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/src%2Ftest%2Fui%2Ferror-codes%2FE0308-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/src%2Ftest%2Fui%2Ferror-codes%2FE0308-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0308-2.stderr?ref=7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n LL | impl Eq for &dyn DynEq {}\n    |      ^^ lifetime mismatch\n    |\n-   = note: expected trait `PartialEq`\n-              found trait `PartialEq`\n+   = note: expected trait `<&dyn DynEq as PartialEq>`\n+              found trait `<&(dyn DynEq + 'static) as PartialEq>`\n note: the lifetime `'_` as defined on the impl at 9:13...\n   --> $DIR/E0308-2.rs:9:13\n    |"}, {"sha": "02c80c2940824ca76c02091170d99e0bec7b58a0", "filename": "src/test/ui/issues/issue-20831-debruijn.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/src%2Ftest%2Fui%2Fissues%2Fissue-20831-debruijn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/src%2Ftest%2Fui%2Fissues%2Fissue-20831-debruijn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20831-debruijn.stderr?ref=7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2", "patch": "@@ -19,8 +19,8 @@ note: ...so that the types are compatible\n    |\n LL |     fn subscribe(&mut self, t : Box<dyn Subscriber<Input=<Self as Publisher>::Output> + 'a>) {\n    |        ^^^^^^^^^\n-   = note: expected `Publisher<'_>`\n-              found `Publisher<'_>`\n+   = note: expected `<MyStruct<'a> as Publisher<'_>>`\n+              found `<MyStruct<'_> as Publisher<'_>>`\n \n error: aborting due to previous error\n "}, {"sha": "10d9e8109969111b28cff683144c70549995bdf6", "filename": "src/test/ui/issues/issue-65230.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/src%2Ftest%2Fui%2Fissues%2Fissue-65230.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/src%2Ftest%2Fui%2Fissues%2Fissue-65230.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-65230.rs?ref=7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2", "patch": "@@ -0,0 +1,19 @@\n+trait T {\n+    type U;\n+    fn f(&self) -> Self::U;\n+}\n+\n+struct X<'a>(&'a mut i32);\n+\n+impl<'a> T for X<'a> {\n+    type U = &'a i32;\n+    fn f(&self) -> Self::U {\n+        self.0\n+    }\n+    //~^^^ ERROR cannot infer an appropriate lifetime for lifetime parameter `'a`\n+    //\n+    // Return type of `f` has lifetime `'a` but it tries to return `self.0` which\n+    // has lifetime `'_`.\n+}\n+\n+fn main() {}"}, {"sha": "21e3f6b1ebb9c074aad77bee8c32d6184c016782", "filename": "src/test/ui/issues/issue-65230.stderr", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/src%2Ftest%2Fui%2Fissues%2Fissue-65230.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/src%2Ftest%2Fui%2Fissues%2Fissue-65230.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-65230.stderr?ref=7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2", "patch": "@@ -0,0 +1,38 @@\n+error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n+  --> $DIR/issue-65230.rs:10:28\n+   |\n+LL |       fn f(&self) -> Self::U {\n+   |  ____________________________^\n+LL | |         self.0\n+LL | |     }\n+   | |_____^\n+   |\n+note: first, the lifetime cannot outlive the anonymous lifetime defined on the method body at 10:10...\n+  --> $DIR/issue-65230.rs:10:10\n+   |\n+LL |     fn f(&self) -> Self::U {\n+   |          ^^^^^\n+note: ...so that reference does not outlive borrowed content\n+  --> $DIR/issue-65230.rs:11:9\n+   |\n+LL |         self.0\n+   |         ^^^^^^\n+note: but, the lifetime must be valid for the lifetime `'a` as defined on the impl at 8:6...\n+  --> $DIR/issue-65230.rs:8:6\n+   |\n+LL | impl<'a> T for X<'a> {\n+   |      ^^\n+note: ...so that the types are compatible\n+  --> $DIR/issue-65230.rs:10:28\n+   |\n+LL |       fn f(&self) -> Self::U {\n+   |  ____________________________^\n+LL | |         self.0\n+LL | |     }\n+   | |_____^\n+   = note: expected `<X<'a> as T>`\n+              found `<X<'_> as T>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0495`."}, {"sha": "4e69dda8721d641509f0e6abbf7a8565d555f696", "filename": "src/test/ui/nll/issue-50716.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/src%2Ftest%2Fui%2Fnll%2Fissue-50716.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/src%2Ftest%2Fui%2Fnll%2Fissue-50716.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-50716.stderr?ref=7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n LL |     let _x = *s;\n    |         ^^ lifetime mismatch\n    |\n-   = note: expected type `Sized`\n-              found type `Sized`\n+   = note: expected type `<<&'a T as A>::X as Sized>`\n+              found type `<<&'static T as A>::X as Sized>`\n note: the lifetime `'a` as defined on the function body at 9:8...\n   --> $DIR/issue-50716.rs:9:8\n    |"}, {"sha": "9455162732b735036f4df9d53f6066844f694d23", "filename": "src/test/ui/variance/variance-contravariant-self-trait-match.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/src%2Ftest%2Fui%2Fvariance%2Fvariance-contravariant-self-trait-match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/src%2Ftest%2Fui%2Fvariance%2Fvariance-contravariant-self-trait-match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-contravariant-self-trait-match.stderr?ref=7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n LL |     impls_get::<&'min G>();\n    |     ^^^^^^^^^^^^^^^^^^^^ lifetime mismatch\n    |\n-   = note: expected type `Get`\n-              found type `Get`\n+   = note: expected type `<&'min G as Get>`\n+              found type `<&'max G as Get>`\n note: the lifetime `'min` as defined on the function body at 10:21...\n   --> $DIR/variance-contravariant-self-trait-match.rs:10:21\n    |\n@@ -23,8 +23,8 @@ error[E0308]: mismatched types\n LL |     impls_get::<&'max G>();\n    |     ^^^^^^^^^^^^^^^^^^^^ lifetime mismatch\n    |\n-   = note: expected type `Get`\n-              found type `Get`\n+   = note: expected type `<&'max G as Get>`\n+              found type `<&'min G as Get>`\n note: the lifetime `'min` as defined on the function body at 16:21...\n   --> $DIR/variance-contravariant-self-trait-match.rs:16:21\n    |"}, {"sha": "3f3a69dde52105a09c4a565016dc6682be270f49", "filename": "src/test/ui/variance/variance-covariant-self-trait-match.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/src%2Ftest%2Fui%2Fvariance%2Fvariance-covariant-self-trait-match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/src%2Ftest%2Fui%2Fvariance%2Fvariance-covariant-self-trait-match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-covariant-self-trait-match.stderr?ref=7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n LL |     impls_get::<&'min G>();\n    |     ^^^^^^^^^^^^^^^^^^^^ lifetime mismatch\n    |\n-   = note: expected type `Get`\n-              found type `Get`\n+   = note: expected type `<&'min G as Get>`\n+              found type `<&'max G as Get>`\n note: the lifetime `'min` as defined on the function body at 10:21...\n   --> $DIR/variance-covariant-self-trait-match.rs:10:21\n    |\n@@ -23,8 +23,8 @@ error[E0308]: mismatched types\n LL |     impls_get::<&'max G>();\n    |     ^^^^^^^^^^^^^^^^^^^^ lifetime mismatch\n    |\n-   = note: expected type `Get`\n-              found type `Get`\n+   = note: expected type `<&'max G as Get>`\n+              found type `<&'min G as Get>`\n note: the lifetime `'min` as defined on the function body at 17:21...\n   --> $DIR/variance-covariant-self-trait-match.rs:17:21\n    |"}, {"sha": "a80a5e41d03147d13cf7b7d077b46e154797e078", "filename": "src/test/ui/variance/variance-invariant-self-trait-match.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/src%2Ftest%2Fui%2Fvariance%2Fvariance-invariant-self-trait-match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2/src%2Ftest%2Fui%2Fvariance%2Fvariance-invariant-self-trait-match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-invariant-self-trait-match.stderr?ref=7b9ddbdcf261c0010b24f53281bf2f27d02eb6f2", "patch": "@@ -4,8 +4,8 @@ error[E0308]: mismatched types\n LL |     impls_get::<&'min G>();\n    |     ^^^^^^^^^^^^^^^^^^^^ lifetime mismatch\n    |\n-   = note: expected type `Get`\n-              found type `Get`\n+   = note: expected type `<&'min G as Get>`\n+              found type `<&'max G as Get>`\n note: the lifetime `'min` as defined on the function body at 7:21...\n   --> $DIR/variance-invariant-self-trait-match.rs:7:21\n    |\n@@ -23,8 +23,8 @@ error[E0308]: mismatched types\n LL |     impls_get::<&'max G>();\n    |     ^^^^^^^^^^^^^^^^^^^^ lifetime mismatch\n    |\n-   = note: expected type `Get`\n-              found type `Get`\n+   = note: expected type `<&'max G as Get>`\n+              found type `<&'min G as Get>`\n note: the lifetime `'min` as defined on the function body at 13:21...\n   --> $DIR/variance-invariant-self-trait-match.rs:13:21\n    |"}]}