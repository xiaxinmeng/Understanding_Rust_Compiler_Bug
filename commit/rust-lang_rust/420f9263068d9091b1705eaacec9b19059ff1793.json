{"sha": "420f9263068d9091b1705eaacec9b19059ff1793", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMGY5MjYzMDY4ZDkwOTFiMTcwNWVhYWNlYzliMTkwNTlmZjE3OTM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-11-12T07:36:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-12T07:36:18Z"}, "message": "Rollup merge of #66309 - petrochenkov:annoying, r=Mark-Simulacrum\n\nTiny cleanup to size assertions\n\nThe need to write `#[cfg(target_arch = \"x86_64\")]` twice mildly annoys me, the full paths look better in comparison.", "tree": {"sha": "80e4d6efbdefa3a2115db9120f73567382163b22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80e4d6efbdefa3a2115db9120f73567382163b22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/420f9263068d9091b1705eaacec9b19059ff1793", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdymDyCRBK7hj4Ov3rIwAAdHIIAK8LiaADhPm0s30fvwwzc8gC\nhh59iZQCEjYqufR/mbShSZLOtghMzEYQt+0swNyRSYi7JfE7Z+yNC/tjhoZoGO9v\nCjp12zfuQu5nqoP2kkBWcLT7/PIrhx+wYhwwNjObTbvgyD6ZdYCnzbjPObfXNrRh\nF7fJ9uNPfPMWBpXujuvYuY/kDn0N5i/+VC7VKorGzfQ26Q0cq8v6IevTjlbJ8SAp\n/oc7ach3HsP0NlJx+kfyjSnV7/MCbW+BIx7ZI/TyQPEY3mDZ1xDhAJmSu7vve5Jx\n5x9r5Nt1FI2enr18LCXhCk89KuajIG+7xUR2qWQVVn8qXNyLjObDtR8xLWlBwxU=\n=JrJn\n-----END PGP SIGNATURE-----\n", "payload": "tree 80e4d6efbdefa3a2115db9120f73567382163b22\nparent 4134a4acf555bad45c83b0379df5fb86402499ec\nparent e7c42f0cf0b46ec4788f98c5bf30cda8a45cdd83\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1573544178 +0900\ncommitter GitHub <noreply@github.com> 1573544178 +0900\n\nRollup merge of #66309 - petrochenkov:annoying, r=Mark-Simulacrum\n\nTiny cleanup to size assertions\n\nThe need to write `#[cfg(target_arch = \"x86_64\")]` twice mildly annoys me, the full paths look better in comparison.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/420f9263068d9091b1705eaacec9b19059ff1793", "html_url": "https://github.com/rust-lang/rust/commit/420f9263068d9091b1705eaacec9b19059ff1793", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/420f9263068d9091b1705eaacec9b19059ff1793/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4134a4acf555bad45c83b0379df5fb86402499ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/4134a4acf555bad45c83b0379df5fb86402499ec", "html_url": "https://github.com/rust-lang/rust/commit/4134a4acf555bad45c83b0379df5fb86402499ec"}, {"sha": "e7c42f0cf0b46ec4788f98c5bf30cda8a45cdd83", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7c42f0cf0b46ec4788f98c5bf30cda8a45cdd83", "html_url": "https://github.com/rust-lang/rust/commit/e7c42f0cf0b46ec4788f98c5bf30cda8a45cdd83"}], "stats": {"total": 17, "additions": 4, "deletions": 13}, "files": [{"sha": "8ee28875c625931bd277ad2cb8814aa854cc686d", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/420f9263068d9091b1705eaacec9b19059ff1793/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/420f9263068d9091b1705eaacec9b19059ff1793/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=420f9263068d9091b1705eaacec9b19059ff1793", "patch": "@@ -15,8 +15,6 @@ use Level::*;\n \n use emitter::{Emitter, EmitterWriter, is_case_difference};\n use registry::Registry;\n-#[cfg(target_arch = \"x86_64\")]\n-use rustc_data_structures::static_assert_size;\n use rustc_data_structures::sync::{self, Lrc, Lock};\n use rustc_data_structures::fx::{FxHashSet, FxIndexMap};\n use rustc_data_structures::stable_hasher::StableHasher;\n@@ -54,7 +52,7 @@ pub type PResult<'a, T> = Result<T, DiagnosticBuilder<'a>>;\n // `PResult` is used a lot. Make sure it doesn't unintentionally get bigger.\n // (See also the comment on `DiagnosticBuilderInner`.)\n #[cfg(target_arch = \"x86_64\")]\n-static_assert_size!(PResult<'_, bool>, 16);\n+rustc_data_structures::static_assert_size!(PResult<'_, bool>, 16);\n \n /// Indicates the confidence in the correctness of a suggestion.\n ///"}, {"sha": "13bf6752ba2bc6baeb8fb7c1dd3ce81557f4e2be", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/420f9263068d9091b1705eaacec9b19059ff1793/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/420f9263068d9091b1705eaacec9b19059ff1793/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=420f9263068d9091b1705eaacec9b19059ff1793", "patch": "@@ -38,9 +38,6 @@ use rustc_data_structures::thin_vec::ThinVec;\n use rustc_index::vec::Idx;\n use rustc_serialize::{self, Decoder, Encoder};\n \n-#[cfg(target_arch = \"x86_64\")]\n-use rustc_data_structures::static_assert_size;\n-\n use std::fmt;\n \n #[cfg(test)]\n@@ -1028,7 +1025,7 @@ pub struct Expr {\n \n // `Expr` is used a lot. Make sure it doesn't unintentionally get bigger.\n #[cfg(target_arch = \"x86_64\")]\n-static_assert_size!(Expr, 96);\n+rustc_data_structures::static_assert_size!(Expr, 96);\n \n impl Expr {\n     /// Returns `true` if this expression would be valid somewhere that expects a value;"}, {"sha": "ab798e93d67fc009bb2208b86c5d400f44e9ae76", "filename": "src/libsyntax/token.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/420f9263068d9091b1705eaacec9b19059ff1793/src%2Flibsyntax%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/420f9263068d9091b1705eaacec9b19059ff1793/src%2Flibsyntax%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftoken.rs?ref=420f9263068d9091b1705eaacec9b19059ff1793", "patch": "@@ -14,8 +14,6 @@ use syntax_pos::{self, Span, DUMMY_SP};\n \n use std::fmt;\n use std::mem;\n-#[cfg(target_arch = \"x86_64\")]\n-use rustc_data_structures::static_assert_size;\n use rustc_data_structures::sync::Lrc;\n \n #[derive(Clone, PartialEq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\n@@ -261,7 +259,7 @@ pub enum TokenKind {\n \n // `TokenKind` is used a lot. Make sure it doesn't unintentionally get bigger.\n #[cfg(target_arch = \"x86_64\")]\n-static_assert_size!(TokenKind, 16);\n+rustc_data_structures::static_assert_size!(TokenKind, 16);\n \n #[derive(Clone, PartialEq, RustcEncodable, RustcDecodable, Debug)]\n pub struct Token {"}, {"sha": "2201f1ed6caca46228936efeef4ef3c135d183ad", "filename": "src/libsyntax/tokenstream.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/420f9263068d9091b1705eaacec9b19059ff1793/src%2Flibsyntax%2Ftokenstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/420f9263068d9091b1705eaacec9b19059ff1793/src%2Flibsyntax%2Ftokenstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftokenstream.rs?ref=420f9263068d9091b1705eaacec9b19059ff1793", "patch": "@@ -16,8 +16,6 @@\n use crate::token::{self, DelimToken, Token, TokenKind};\n \n use syntax_pos::{Span, DUMMY_SP};\n-#[cfg(target_arch = \"x86_64\")]\n-use rustc_data_structures::static_assert_size;\n use rustc_data_structures::sync::Lrc;\n use smallvec::{SmallVec, smallvec};\n \n@@ -129,7 +127,7 @@ pub type TreeAndJoint = (TokenTree, IsJoint);\n \n // `TokenStream` is used a lot. Make sure it doesn't unintentionally get bigger.\n #[cfg(target_arch = \"x86_64\")]\n-static_assert_size!(TokenStream, 8);\n+rustc_data_structures::static_assert_size!(TokenStream, 8);\n \n #[derive(Clone, Copy, Debug, PartialEq, RustcEncodable, RustcDecodable)]\n pub enum IsJoint {"}]}