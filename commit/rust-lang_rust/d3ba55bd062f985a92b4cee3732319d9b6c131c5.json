{"sha": "d3ba55bd062f985a92b4cee3732319d9b6c131c5", "node_id": "C_kwDOAAsO6NoAKGQzYmE1NWJkMDYyZjk4NWE5MmI0Y2VlMzczMjMxOWQ5YjZjMTMxYzU", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-27T12:03:05Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-28T14:00:55Z"}, "message": "cleanup imports", "tree": {"sha": "bfa91a0520a9fbcc985719d8c15af4e64baddb11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfa91a0520a9fbcc985719d8c15af4e64baddb11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3ba55bd062f985a92b4cee3732319d9b6c131c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3ba55bd062f985a92b4cee3732319d9b6c131c5", "html_url": "https://github.com/rust-lang/rust/commit/d3ba55bd062f985a92b4cee3732319d9b6c131c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3ba55bd062f985a92b4cee3732319d9b6c131c5/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23ce31e836389fce24ae63993ef78e3716d1d012", "url": "https://api.github.com/repos/rust-lang/rust/commits/23ce31e836389fce24ae63993ef78e3716d1d012", "html_url": "https://github.com/rust-lang/rust/commit/23ce31e836389fce24ae63993ef78e3716d1d012"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "e589dc759f8e1c24c63023339728820c1f03c0c2", "filename": "crates/mbe/src/expander/matcher.rs", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/d3ba55bd062f985a92b4cee3732319d9b6c131c5/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3ba55bd062f985a92b4cee3732319d9b6c131c5/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs?ref=d3ba55bd062f985a92b4cee3732319d9b6c131c5", "patch": "@@ -61,18 +61,17 @@\n \n use std::rc::Rc;\n \n+use parser::ParserEntryPoint;\n+use smallvec::{smallvec, SmallVec};\n+use syntax::SmolStr;\n+\n use crate::{\n-    expander::{Binding, Bindings, Fragment},\n+    expander::{Binding, Bindings, ExpandResult, Fragment},\n     parser::{Op, RepeatKind, Separator},\n     tt_iter::TtIter,\n     ExpandError, MetaTemplate,\n };\n \n-use super::ExpandResult;\n-use parser::ParserEntryPoint::*;\n-use smallvec::{smallvec, SmallVec};\n-use syntax::SmolStr;\n-\n impl Bindings {\n     fn push_optional(&mut self, name: &SmolStr) {\n         // FIXME: Do we have a better way to represent an empty token ?\n@@ -691,14 +690,14 @@ fn match_leaf(lhs: &tt::Leaf, src: &mut TtIter) -> Result<(), ExpandError> {\n \n fn match_meta_var(kind: &str, input: &mut TtIter) -> ExpandResult<Option<Fragment>> {\n     let fragment = match kind {\n-        \"path\" => Path,\n-        \"expr\" => Expr,\n-        \"ty\" => Type,\n-        \"pat\" | \"pat_param\" => Pattern, // FIXME: edition2021\n-        \"stmt\" => Statement,\n-        \"block\" => Block,\n-        \"meta\" => MetaItem,\n-        \"item\" => Item,\n+        \"path\" => ParserEntryPoint::Path,\n+        \"expr\" => ParserEntryPoint::Expr,\n+        \"ty\" => ParserEntryPoint::Type,\n+        \"pat\" | \"pat_param\" => ParserEntryPoint::Pattern, // FIXME: edition2021\n+        \"stmt\" => ParserEntryPoint::Statement,\n+        \"block\" => ParserEntryPoint::Block,\n+        \"meta\" => ParserEntryPoint::MetaItem,\n+        \"item\" => ParserEntryPoint::Item,\n         _ => {\n             let tt_result = match kind {\n                 \"ident\" => input\n@@ -896,7 +895,7 @@ impl<'a> TtIter<'a> {\n     }\n \n     fn eat_vis(&mut self) -> Option<tt::TokenTree> {\n-        self.expect_fragment(Visibility).value\n+        self.expect_fragment(ParserEntryPoint::Visibility).value\n     }\n \n     fn eat_char(&mut self, c: char) -> Option<tt::TokenTree> {"}]}