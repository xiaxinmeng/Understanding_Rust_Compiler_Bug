{"sha": "c95a5682f76ab5e5b1be93237cc5b381ba5bb50c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5NWE1NjgyZjc2YWI1ZTViMWJlOTMyMzdjYzViMzgxYmE1YmI1MGM=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-12T11:19:57Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-15T08:37:30Z"}, "message": "Remove def_path_str.", "tree": {"sha": "272ecd7c7ac0ddd053f3254aad400d1354c32bff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/272ecd7c7ac0ddd053f3254aad400d1354c32bff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c95a5682f76ab5e5b1be93237cc5b381ba5bb50c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c95a5682f76ab5e5b1be93237cc5b381ba5bb50c", "html_url": "https://github.com/rust-lang/rust/commit/c95a5682f76ab5e5b1be93237cc5b381ba5bb50c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c95a5682f76ab5e5b1be93237cc5b381ba5bb50c/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb82187b13a4df1b364b8f9fdafc979791e024cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb82187b13a4df1b364b8f9fdafc979791e024cf", "html_url": "https://github.com/rust-lang/rust/commit/eb82187b13a4df1b364b8f9fdafc979791e024cf"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "08309d63a45f9a92f192fb3b06b5ec07d8ddcb53", "filename": "compiler/rustc_query_impl/src/plumbing.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c95a5682f76ab5e5b1be93237cc5b381ba5bb50c/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c95a5682f76ab5e5b1be93237cc5b381ba5bb50c/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs?ref=c95a5682f76ab5e5b1be93237cc5b381ba5bb50c", "patch": "@@ -14,7 +14,7 @@ use rustc_data_structures::sync::Lock;\n use rustc_data_structures::thin_vec::ThinVec;\n use rustc_errors::Diagnostic;\n use rustc_serialize::opaque;\n-use rustc_span::def_id::{DefId, LocalDefId};\n+use rustc_span::def_id::LocalDefId;\n \n #[derive(Copy, Clone)]\n pub struct QueryCtxt<'tcx> {\n@@ -25,6 +25,7 @@ pub struct QueryCtxt<'tcx> {\n impl<'tcx> std::ops::Deref for QueryCtxt<'tcx> {\n     type Target = TyCtxt<'tcx>;\n \n+    #[inline]\n     fn deref(&self) -> &Self::Target {\n         &self.tcx\n     }\n@@ -42,10 +43,6 @@ impl HasDepContext for QueryCtxt<'tcx> {\n }\n \n impl QueryContext for QueryCtxt<'tcx> {\n-    fn def_path_str(&self, def_id: DefId) -> String {\n-        self.tcx.def_path_str(def_id)\n-    }\n-\n     fn current_query_job(&self) -> Option<QueryJobId<Self::DepKind>> {\n         tls::with_related_context(**self, |icx| icx.query)\n     }"}, {"sha": "927e8117f05ea9ae7d7b7b8dc3e8c9ec730b836a", "filename": "compiler/rustc_query_system/src/query/mod.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c95a5682f76ab5e5b1be93237cc5b381ba5bb50c/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c95a5682f76ab5e5b1be93237cc5b381ba5bb50c/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fmod.rs?ref=c95a5682f76ab5e5b1be93237cc5b381ba5bb50c", "patch": "@@ -19,7 +19,6 @@ use crate::dep_graph::{DepNode, DepNodeIndex, HasDepContext, SerializedDepNodeIn\n use rustc_data_structures::sync::Lock;\n use rustc_data_structures::thin_vec::ThinVec;\n use rustc_errors::Diagnostic;\n-use rustc_span::def_id::DefId;\n use rustc_span::Span;\n \n /// Description of a frame in the query stack.\n@@ -64,9 +63,6 @@ impl QueryStackFrame {\n }\n \n pub trait QueryContext: HasDepContext {\n-    /// Get string representation from DefPath.\n-    fn def_path_str(&self, def_id: DefId) -> String;\n-\n     /// Get the query information from the TLS context.\n     fn current_query_job(&self) -> Option<QueryJobId<Self::DepKind>>;\n "}]}