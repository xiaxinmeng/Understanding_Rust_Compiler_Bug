{"sha": "87762874ef53b7a24c13e78faded7bc88ea7e435", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3NzYyODc0ZWY1M2I3YTI0YzEzZTc4ZmFkZWQ3YmM4OGVhN2U0MzU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-21T18:15:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-21T18:15:17Z"}, "message": "Merge #6987\n\n6987: Delete related whitespace when removing unused param r=matklad a=rherrmann\n\nInclude adjacent whitespace in the text edits to remove the\r\nparameter declaration and its occurences in calling code.\r\n\r\nhttps://github.com/rust-analyzer/rust-analyzer/issues/6663\n\nCo-authored-by: R\u00fcdiger Herrmann <ruediger.herrmann@gmx.de>", "tree": {"sha": "63332d5ef61f9ba8ffb4d60e214ab817c0d76f2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63332d5ef61f9ba8ffb4d60e214ab817c0d76f2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87762874ef53b7a24c13e78faded7bc88ea7e435", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf4OY1CRBK7hj4Ov3rIwAAdHIIADiB72G7Gu1kg/fDRgczFgmv\neGcGij+10rpOdB8oc5KEOpB3px1n8/OgIi/6zTJl3HXo9B/7ml2IIDmfB7RWpu4q\n5FwasT/EalD1qsCIB1ylvG1mTec5SVaC+LNwESfIo1NQ9UYZxz3m5Fnok53H1OL6\nitpCSR/dojQcTD7GSTQP+0U/PHdxdKhdpzBAqPV/3x2MWSEtbKJZknIFEizositS\nZz8p4H+hQi0S3woD5Ftd6AI0nkk5HvDSdCymd/2I0sANEqoRcqVum510z2xcOonh\nEEC3Z+yOYlaYNY8QPIaoSfZLEhtWSv2Dst8//yRfMe0XkXwPQAtu557fSea7NEY=\n=2Byj\n-----END PGP SIGNATURE-----\n", "payload": "tree 63332d5ef61f9ba8ffb4d60e214ab817c0d76f2f\nparent c8a73fe655f7bf9778deeec4c8b4b541e0af398b\nparent 658ba9e29cb64f1ec483c35522b2268edb3deb21\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1608574517 +0000\ncommitter GitHub <noreply@github.com> 1608574517 +0000\n\nMerge #6987\n\n6987: Delete related whitespace when removing unused param r=matklad a=rherrmann\n\nInclude adjacent whitespace in the text edits to remove the\r\nparameter declaration and its occurences in calling code.\r\n\r\nhttps://github.com/rust-analyzer/rust-analyzer/issues/6663\n\nCo-authored-by: R\u00fcdiger Herrmann <ruediger.herrmann@gmx.de>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87762874ef53b7a24c13e78faded7bc88ea7e435", "html_url": "https://github.com/rust-lang/rust/commit/87762874ef53b7a24c13e78faded7bc88ea7e435", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87762874ef53b7a24c13e78faded7bc88ea7e435/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8a73fe655f7bf9778deeec4c8b4b541e0af398b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8a73fe655f7bf9778deeec4c8b4b541e0af398b", "html_url": "https://github.com/rust-lang/rust/commit/c8a73fe655f7bf9778deeec4c8b4b541e0af398b"}, {"sha": "658ba9e29cb64f1ec483c35522b2268edb3deb21", "url": "https://api.github.com/repos/rust-lang/rust/commits/658ba9e29cb64f1ec483c35522b2268edb3deb21", "html_url": "https://github.com/rust-lang/rust/commit/658ba9e29cb64f1ec483c35522b2268edb3deb21"}], "stats": {"total": 81, "additions": 74, "deletions": 7}, "files": [{"sha": "f72dd49edc6b913472ef1c6adb4ab28349f87e00", "filename": "crates/assists/src/handlers/remove_unused_param.rs", "status": "modified", "additions": 74, "deletions": 7, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/87762874ef53b7a24c13e78faded7bc88ea7e435/crates%2Fassists%2Fsrc%2Fhandlers%2Fremove_unused_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87762874ef53b7a24c13e78faded7bc88ea7e435/crates%2Fassists%2Fsrc%2Fhandlers%2Fremove_unused_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fremove_unused_param.rs?ref=87762874ef53b7a24c13e78faded7bc88ea7e435", "patch": "@@ -2,9 +2,10 @@ use ide_db::{defs::Definition, search::Reference};\n use syntax::{\n     algo::find_node_at_range,\n     ast::{self, ArgListOwner},\n-    AstNode, SyntaxNode, TextRange, T,\n+    AstNode, SyntaxKind, SyntaxNode, TextRange, T,\n };\n use test_utils::mark;\n+use SyntaxKind::WHITESPACE;\n \n use crate::{\n     assist_context::AssistBuilder, utils::next_prev, AssistContext, AssistId, AssistKind, Assists,\n@@ -56,7 +57,7 @@ pub(crate) fn remove_unused_param(acc: &mut Assists, ctx: &AssistContext) -> Opt\n         \"Remove unused parameter\",\n         param.syntax().text_range(),\n         |builder| {\n-            builder.delete(range_with_coma(param.syntax()));\n+            builder.delete(range_to_remove(param.syntax()));\n             for usage in fn_def.usages(&ctx.sema).all() {\n                 process_usage(ctx, builder, usage, param_position);\n             }\n@@ -80,19 +81,34 @@ fn process_usage(\n     let arg = call_expr.arg_list()?.args().nth(arg_to_remove)?;\n \n     builder.edit_file(usage.file_range.file_id);\n-    builder.delete(range_with_coma(arg.syntax()));\n+    builder.delete(range_to_remove(arg.syntax()));\n \n     Some(())\n }\n \n-fn range_with_coma(node: &SyntaxNode) -> TextRange {\n-    let up_to = next_prev().find_map(|dir| {\n+fn range_to_remove(node: &SyntaxNode) -> TextRange {\n+    let up_to_comma = next_prev().find_map(|dir| {\n         node.siblings_with_tokens(dir)\n             .filter_map(|it| it.into_token())\n             .find(|it| it.kind() == T![,])\n+            .map(|it| (dir, it))\n     });\n-    let up_to = up_to.map_or(node.text_range(), |it| it.text_range());\n-    node.text_range().cover(up_to)\n+    if let Some((dir, token)) = up_to_comma {\n+        if node.next_sibling().is_some() {\n+            let up_to_space = token\n+                .siblings_with_tokens(dir)\n+                .skip(1)\n+                .take_while(|it| it.kind() == WHITESPACE)\n+                .last()\n+                .and_then(|it| it.into_token());\n+            return node\n+                .text_range()\n+                .cover(up_to_space.map_or(token.text_range(), |it| it.text_range()));\n+        }\n+        node.text_range().cover(token.text_range())\n+    } else {\n+        node.text_range()\n+    }\n }\n \n #[cfg(test)]\n@@ -118,6 +134,57 @@ fn b() { foo(9, ) }\n         );\n     }\n \n+    #[test]\n+    fn remove_unused_first_param() {\n+        check_assist(\n+            remove_unused_param,\n+            r#\"\n+fn foo(<|>x: i32, y: i32) { y; }\n+fn a() { foo(1, 2) }\n+fn b() { foo(1, 2,) }\n+\"#,\n+            r#\"\n+fn foo(y: i32) { y; }\n+fn a() { foo(2) }\n+fn b() { foo(2,) }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn remove_unused_single_param() {\n+        check_assist(\n+            remove_unused_param,\n+            r#\"\n+fn foo(<|>x: i32) { 0; }\n+fn a() { foo(1) }\n+fn b() { foo(1, ) }\n+\"#,\n+            r#\"\n+fn foo() { 0; }\n+fn a() { foo() }\n+fn b() { foo( ) }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn remove_unused_surrounded_by_parms() {\n+        check_assist(\n+            remove_unused_param,\n+            r#\"\n+fn foo(x: i32, <|>y: i32, z: i32) { x; }\n+fn a() { foo(1, 2, 3) }\n+fn b() { foo(1, 2, 3,) }\n+\"#,\n+            r#\"\n+fn foo(x: i32, z: i32) { x; }\n+fn a() { foo(1, 3) }\n+fn b() { foo(1, 3,) }\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn remove_unused_qualified_call() {\n         check_assist("}]}