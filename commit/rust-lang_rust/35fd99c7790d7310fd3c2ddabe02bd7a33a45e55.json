{"sha": "35fd99c7790d7310fd3c2ddabe02bd7a33a45e55", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1ZmQ5OWM3NzkwZDczMTBmZDNjMmRkYWJlMDJiZDdhMzNhNDVlNTU=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-08-18T01:43:09Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-08-18T01:43:09Z"}, "message": "Add needs-asm-support to more tests\n\nThese were found as test failures on s390x for RHEL and Fedora.", "tree": {"sha": "c11e9700a7e4a3cdd3bb6d71e86b364579391f25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c11e9700a7e4a3cdd3bb6d71e86b364579391f25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55", "html_url": "https://github.com/rust-lang/rust/commit/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adf168844791b213383b18d10515eaee88695f7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/adf168844791b213383b18d10515eaee88695f7d", "html_url": "https://github.com/rust-lang/rust/commit/adf168844791b213383b18d10515eaee88695f7d"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "d576a53826c1fcf8660eda42e9dabb5cba3d4f43", "filename": "src/test/codegen/naked-noinline.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55/src%2Ftest%2Fcodegen%2Fnaked-noinline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55/src%2Ftest%2Fcodegen%2Fnaked-noinline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fnaked-noinline.rs?ref=35fd99c7790d7310fd3c2ddabe02bd7a33a45e55", "patch": "@@ -1,5 +1,6 @@\n // Checks that naked functions are never inlined.\n // compile-flags: -O -Zmir-opt-level=3\n+// needs-asm-support\n // ignore-wasm32\n #![crate_type = \"lib\"]\n #![feature(asm)]"}, {"sha": "1420eef299bbfdee82e82934535e8f8ed34a3064", "filename": "src/test/ui/feature-gates/feature-gate-global_asm.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-global_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-global_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-global_asm.rs?ref=35fd99c7790d7310fd3c2ddabe02bd7a33a45e55", "patch": "@@ -1,3 +1,5 @@\n+// needs-asm-support\n+\n global_asm!(\"\"); //~ ERROR `global_asm!` is not stable\n \n fn main() {}"}, {"sha": "7c4d3e3e6e5953d8930d550471225ffb41879e9f", "filename": "src/test/ui/feature-gates/feature-gate-global_asm.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-global_asm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-global_asm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-global_asm.stderr?ref=35fd99c7790d7310fd3c2ddabe02bd7a33a45e55", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: use of unstable library feature 'global_asm': `global_asm!` is not stable enough for use and is subject to change\n-  --> $DIR/feature-gate-global_asm.rs:1:1\n+  --> $DIR/feature-gate-global_asm.rs:3:1\n    |\n LL | global_asm!(\"\");\n    | ^^^^^^^^^^"}, {"sha": "6a2b5ef72419f012c3fc2dc58723ac7179b69052", "filename": "src/test/ui/macros/macro-expanded-include/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55/src%2Ftest%2Fui%2Fmacros%2Fmacro-expanded-include%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55/src%2Ftest%2Fui%2Fmacros%2Fmacro-expanded-include%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-expanded-include%2Ftest.rs?ref=35fd99c7790d7310fd3c2ddabe02bd7a33a45e55", "patch": "@@ -1,4 +1,4 @@\n-// ignore-emscripten no llvm_asm! support\n+// needs-asm-support\n // build-pass (FIXME(62277): could be check-pass?)\n #![feature(asm)]\n #![allow(unused)]"}, {"sha": "5d9828b5594e36f74e6056edee30231fa34beb1e", "filename": "src/test/ui/unsafe/inline_asm.mir.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55/src%2Ftest%2Fui%2Funsafe%2Finline_asm.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55/src%2Ftest%2Fui%2Funsafe%2Finline_asm.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Finline_asm.mir.stderr?ref=35fd99c7790d7310fd3c2ddabe02bd7a33a45e55", "patch": "@@ -1,13 +1,13 @@\n error[E0133]: use of inline assembly is unsafe and requires unsafe function or block\n-  --> $DIR/inline_asm.rs:9:5\n+  --> $DIR/inline_asm.rs:10:5\n    |\n LL |     asm!(\"nop\");\n    |     ^^^^^^^^^^^^ use of inline assembly\n    |\n    = note: inline assembly is entirely unchecked and can cause undefined behavior\n \n error[E0133]: use of inline assembly is unsafe and requires unsafe function or block\n-  --> $DIR/inline_asm.rs:10:5\n+  --> $DIR/inline_asm.rs:11:5\n    |\n LL |     llvm_asm!(\"nop\");\n    |     ^^^^^^^^^^^^^^^^^ use of inline assembly"}, {"sha": "8e1325bc0a8f5f9250685b01b5a8b4374e804362", "filename": "src/test/ui/unsafe/inline_asm.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55/src%2Ftest%2Fui%2Funsafe%2Finline_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55/src%2Ftest%2Fui%2Funsafe%2Finline_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Finline_asm.rs?ref=35fd99c7790d7310fd3c2ddabe02bd7a33a45e55", "patch": "@@ -1,5 +1,6 @@\n // revisions: mir thir\n // [thir]compile-flags: -Z thir-unsafeck\n+// needs-asm-support\n \n #![feature(llvm_asm)]\n #![feature(asm)]"}, {"sha": "5d9828b5594e36f74e6056edee30231fa34beb1e", "filename": "src/test/ui/unsafe/inline_asm.thir.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55/src%2Ftest%2Fui%2Funsafe%2Finline_asm.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35fd99c7790d7310fd3c2ddabe02bd7a33a45e55/src%2Ftest%2Fui%2Funsafe%2Finline_asm.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Finline_asm.thir.stderr?ref=35fd99c7790d7310fd3c2ddabe02bd7a33a45e55", "patch": "@@ -1,13 +1,13 @@\n error[E0133]: use of inline assembly is unsafe and requires unsafe function or block\n-  --> $DIR/inline_asm.rs:9:5\n+  --> $DIR/inline_asm.rs:10:5\n    |\n LL |     asm!(\"nop\");\n    |     ^^^^^^^^^^^^ use of inline assembly\n    |\n    = note: inline assembly is entirely unchecked and can cause undefined behavior\n \n error[E0133]: use of inline assembly is unsafe and requires unsafe function or block\n-  --> $DIR/inline_asm.rs:10:5\n+  --> $DIR/inline_asm.rs:11:5\n    |\n LL |     llvm_asm!(\"nop\");\n    |     ^^^^^^^^^^^^^^^^^ use of inline assembly"}]}