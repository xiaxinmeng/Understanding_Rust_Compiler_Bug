{"sha": "0667fb4e6342a6a18320b464316ae7ba9c2bc192", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NjdmYjRlNjM0MmE2YTE4MzIwYjQ2NDMxNmFlN2JhOWMyYmMxOTI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-09T04:52:52Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-10T03:00:15Z"}, "message": "rt: Make rust_task::ref_count private", "tree": {"sha": "befae4b91f28e7ad1343adb9df1ca169b5ac02ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/befae4b91f28e7ad1343adb9df1ca169b5ac02ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0667fb4e6342a6a18320b464316ae7ba9c2bc192", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0667fb4e6342a6a18320b464316ae7ba9c2bc192", "html_url": "https://github.com/rust-lang/rust/commit/0667fb4e6342a6a18320b464316ae7ba9c2bc192", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0667fb4e6342a6a18320b464316ae7ba9c2bc192/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae8ea4a78b113f67ade93152dc3dee1ded81a219", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae8ea4a78b113f67ade93152dc3dee1ded81a219", "html_url": "https://github.com/rust-lang/rust/commit/ae8ea4a78b113f67ade93152dc3dee1ded81a219"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "4fc6a4cfb1ec98878bb81c6409de4aa58e798c6f", "filename": "src/rt/rust_internal.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0667fb4e6342a6a18320b464316ae7ba9c2bc192/src%2Frt%2Frust_internal.h", "raw_url": "https://github.com/rust-lang/rust/raw/0667fb4e6342a6a18320b464316ae7ba9c2bc192/src%2Frt%2Frust_internal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_internal.h?ref=0667fb4e6342a6a18320b464316ae7ba9c2bc192", "patch": "@@ -105,8 +105,9 @@ static size_t const BUF_BYTES = 2048;\n   void deref() { if (--ref_count == 0) { dtor; } }\n \n #define RUST_ATOMIC_REFCOUNT()                                            \\\n-public:                                                                   \\\n+private:                                                                  \\\n    intptr_t ref_count;                                                    \\\n+public:                                                                   \\\n    void ref() {                                                           \\\n        intptr_t old = sync::increment(ref_count);                         \\\n        assert(old > 0);                                                   \\"}, {"sha": "8752ea37be99a266c9dd63f547fea8da8bfe8ac4", "filename": "src/rt/rust_kernel.cpp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0667fb4e6342a6a18320b464316ae7ba9c2bc192/src%2Frt%2Frust_kernel.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/0667fb4e6342a6a18320b464316ae7ba9c2bc192/src%2Frt%2Frust_kernel.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.cpp?ref=0667fb4e6342a6a18320b464316ae7ba9c2bc192", "patch": "@@ -190,6 +190,7 @@ rust_kernel::get_task_by_id(rust_task_id id) {\n     task_table.get(id, &task);\n     if(task) {\n         if(task->get_ref_count() == 0) {\n+            // FIXME: I don't think this is possible.\n             // this means the destructor is running, since the destructor\n             // grabs the kernel lock to unregister the task. Pretend this\n             // doesn't actually exist."}, {"sha": "41242fee9d3f2c2ff959ac04938fb2a8064f54bb", "filename": "src/rt/rust_task_thread.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0667fb4e6342a6a18320b464316ae7ba9c2bc192/src%2Frt%2Frust_task_thread.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/0667fb4e6342a6a18320b464316ae7ba9c2bc192/src%2Frt%2Frust_task_thread.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task_thread.cpp?ref=0667fb4e6342a6a18320b464316ae7ba9c2bc192", "patch": "@@ -149,7 +149,7 @@ rust_task_thread::reap_dead_tasks() {\n void\n rust_task_thread::release_task(rust_task *task) {\n     // Nobody should have a ref to the task at this point\n-    I(this, task->ref_count == 0);\n+    I(this, task->get_ref_count() == 0);\n     // Kernel should not know about the task any more\n     I(this, kernel->get_task_by_id(task->id) == NULL);\n     // Now delete the task, which will require using this thread's"}]}