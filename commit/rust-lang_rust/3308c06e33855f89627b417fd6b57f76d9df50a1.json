{"sha": "3308c06e33855f89627b417fd6b57f76d9df50a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzMDhjMDZlMzM4NTVmODk2MjdiNDE3ZmQ2YjU3Zjc2ZDlkZjUwYTE=", "commit": {"author": {"name": "Sean Bowe", "email": "ewillbefull@gmail.com", "date": "2015-04-04T20:30:23Z"}, "committer": {"name": "Sean Bowe", "email": "ewillbefull@gmail.com", "date": "2015-04-04T22:29:29Z"}, "message": "Added test for #24036, using spans to display note/help for this message now", "tree": {"sha": "ea78dc8faa6a3b1d830b93e6f4aa70c1ed0ce3a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea78dc8faa6a3b1d830b93e6f4aa70c1ed0ce3a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3308c06e33855f89627b417fd6b57f76d9df50a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3308c06e33855f89627b417fd6b57f76d9df50a1", "html_url": "https://github.com/rust-lang/rust/commit/3308c06e33855f89627b417fd6b57f76d9df50a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3308c06e33855f89627b417fd6b57f76d9df50a1/comments", "author": {"login": "ebfull", "id": 3794471, "node_id": "MDQ6VXNlcjM3OTQ0NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3794471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebfull", "html_url": "https://github.com/ebfull", "followers_url": "https://api.github.com/users/ebfull/followers", "following_url": "https://api.github.com/users/ebfull/following{/other_user}", "gists_url": "https://api.github.com/users/ebfull/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebfull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebfull/subscriptions", "organizations_url": "https://api.github.com/users/ebfull/orgs", "repos_url": "https://api.github.com/users/ebfull/repos", "events_url": "https://api.github.com/users/ebfull/events{/privacy}", "received_events_url": "https://api.github.com/users/ebfull/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebfull", "id": 3794471, "node_id": "MDQ6VXNlcjM3OTQ0NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3794471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebfull", "html_url": "https://github.com/ebfull", "followers_url": "https://api.github.com/users/ebfull/followers", "following_url": "https://api.github.com/users/ebfull/following{/other_user}", "gists_url": "https://api.github.com/users/ebfull/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebfull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebfull/subscriptions", "organizations_url": "https://api.github.com/users/ebfull/orgs", "repos_url": "https://api.github.com/users/ebfull/repos", "events_url": "https://api.github.com/users/ebfull/events{/privacy}", "received_events_url": "https://api.github.com/users/ebfull/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f4858e101479859ec950bceefc5e2cda2e0f58e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f4858e101479859ec950bceefc5e2cda2e0f58e", "html_url": "https://github.com/rust-lang/rust/commit/5f4858e101479859ec950bceefc5e2cda2e0f58e"}], "stats": {"total": 46, "additions": 39, "deletions": 7}, "files": [{"sha": "03e76f5ee2573a30acfc8b32eb07c19b23c09de4", "filename": "src/librustc/middle/infer/error_reporting.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3308c06e33855f89627b417fd6b57f76d9df50a1/src%2Flibrustc%2Fmiddle%2Finfer%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3308c06e33855f89627b417fd6b57f76d9df50a1/src%2Flibrustc%2Fmiddle%2Finfer%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Ferror_reporting.rs?ref=3308c06e33855f89627b417fd6b57f76d9df50a1", "patch": "@@ -373,8 +373,9 @@ impl<'a, 'tcx> ErrorReporting<'tcx> for InferCtxt<'a, 'tcx> {\n     fn report_and_explain_type_error(&self,\n                                      trace: TypeTrace<'tcx>,\n                                      terr: &ty::type_err<'tcx>) {\n+        let span = trace.origin.span();\n         self.report_type_error(trace, terr);\n-        ty::note_and_explain_type_err(self.tcx, terr);\n+        ty::note_and_explain_type_err(self.tcx, terr, span);\n     }\n \n     /// Returns a string of the form \"expected `{}`, found `{}`\", or None if this is a derived"}, {"sha": "0f62b440bf32d1abf1eeafbbb4b803275a5dfffa", "filename": "src/librustc/middle/infer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3308c06e33855f89627b417fd6b57f76d9df50a1/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3308c06e33855f89627b417fd6b57f76d9df50a1/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs?ref=3308c06e33855f89627b417fd6b57f76d9df50a1", "patch": "@@ -987,7 +987,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                     error_str));\n \n                 if let Some(err) = err {\n-                    ty::note_and_explain_type_err(self.tcx, err)\n+                    ty::note_and_explain_type_err(self.tcx, err, sp)\n                 }\n             }\n         }"}, {"sha": "76581529a46f0f12156e1610c2ec9e3c5a3c06fa", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3308c06e33855f89627b417fd6b57f76d9df50a1/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3308c06e33855f89627b417fd6b57f76d9df50a1/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=3308c06e33855f89627b417fd6b57f76d9df50a1", "patch": "@@ -5096,7 +5096,7 @@ pub fn type_err_to_str<'tcx>(cx: &ctxt<'tcx>, err: &type_err<'tcx>) -> String {\n     }\n }\n \n-pub fn note_and_explain_type_err<'tcx>(cx: &ctxt<'tcx>, err: &type_err<'tcx>) {\n+pub fn note_and_explain_type_err<'tcx>(cx: &ctxt<'tcx>, err: &type_err<'tcx>, sp: Span) {\n     match *err {\n         terr_regions_does_not_outlive(subregion, superregion) => {\n             note_and_explain_region(cx, \"\", subregion, \"...\");\n@@ -5131,8 +5131,9 @@ pub fn note_and_explain_type_err<'tcx>(cx: &ctxt<'tcx>, err: &type_err<'tcx>) {\n             let expected_str = ty_sort_string(cx, values.expected);\n             let found_str = ty_sort_string(cx, values.found);\n             if expected_str == found_str && expected_str == \"closure\" {\n-                cx.sess.note(&format!(\"no two closures, even if identical, have the same type\"));\n-                cx.sess.help(&format!(\"consider boxing your closure and/or \\\n+                cx.sess.span_note(sp, &format!(\"no two closures, even if identical, have the same \\\n+                                                type\"));\n+                cx.sess.span_help(sp, &format!(\"consider boxing your closure and/or \\\n                                         using it as a trait object\"));\n             }\n         }"}, {"sha": "ce4eab9988dd4df86b99612394c878ac9b5fc482", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3308c06e33855f89627b417fd6b57f76d9df50a1/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3308c06e33855f89627b417fd6b57f76d9df50a1/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=3308c06e33855f89627b417fd6b57f76d9df50a1", "patch": "@@ -3709,7 +3709,7 @@ fn check_expr_with_unifier<'a, 'tcx, F>(fcx: &FnCtxt<'a, 'tcx>,\n                                             .ty_to_string(\n                                                 actual_structure_type),\n                                          type_error_description);\n-                    ty::note_and_explain_type_err(tcx, &type_error);\n+                    ty::note_and_explain_type_err(tcx, &type_error, path.span);\n                 }\n             }\n         }"}, {"sha": "be3fc860b2b1239cad25fb50e0667dfc4557113e", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3308c06e33855f89627b417fd6b57f76d9df50a1/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3308c06e33855f89627b417fd6b57f76d9df50a1/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=3308c06e33855f89627b417fd6b57f76d9df50a1", "patch": "@@ -200,7 +200,7 @@ fn require_same_types<'a, 'tcx, M>(tcx: &ty::ctxt<'tcx>,\n                                       msg(),\n                                       ty::type_err_to_str(tcx,\n                                                           terr));\n-            ty::note_and_explain_type_err(tcx, terr);\n+            ty::note_and_explain_type_err(tcx, terr, span);\n             false\n         }\n     }"}, {"sha": "3c8a64eaf7de4411255e54a3859bb7bdb2368a39", "filename": "src/test/compile-fail/issue-24036.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/3308c06e33855f89627b417fd6b57f76d9df50a1/src%2Ftest%2Fcompile-fail%2Fissue-24036.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3308c06e33855f89627b417fd6b57f76d9df50a1/src%2Ftest%2Fcompile-fail%2Fissue-24036.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-24036.rs?ref=3308c06e33855f89627b417fd6b57f76d9df50a1", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn closure_to_loc() {\n+    let mut x = |c| c + 1;\n+    x = |c| c + 1;\n+    //~^ ERROR mismatched types\n+    //~| NOTE no two closures, even if identical, have the same type\n+    //~| HELP consider boxing your closure and/or using it as a trait object\n+}\n+\n+fn closure_from_match() {\n+    let x = match 1usize {\n+        1 => |c| c + 1,\n+        2 => |c| c - 1,\n+        _ => |c| c - 1\n+    };\n+    //~^^^^^ ERROR match arms have incompatible types\n+    //~| NOTE no two closures, even if identical, have the same type\n+    //~| HELP consider boxing your closure and/or using it as a trait object\n+}\n+\n+fn main() { }"}]}