{"sha": "df6ead557d6c1f2ec87793d95b8a8bc9453e0f66", "node_id": "C_kwDOAAsO6NoAKGRmNmVhZDU1N2Q2YzFmMmVjODc3OTNkOTViOGE4YmM5NDUzZTBmNjY", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-03-25T04:32:34Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-03-28T21:00:26Z"}, "message": "Add a useful assertion.", "tree": {"sha": "d6967064ae38d2d25026e35fd97aa402a6f4b406", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6967064ae38d2d25026e35fd97aa402a6f4b406"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df6ead557d6c1f2ec87793d95b8a8bc9453e0f66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df6ead557d6c1f2ec87793d95b8a8bc9453e0f66", "html_url": "https://github.com/rust-lang/rust/commit/df6ead557d6c1f2ec87793d95b8a8bc9453e0f66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df6ead557d6c1f2ec87793d95b8a8bc9453e0f66/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "600ec284838c52d1f6657c2cf0097b58970b133b", "url": "https://api.github.com/repos/rust-lang/rust/commits/600ec284838c52d1f6657c2cf0097b58970b133b", "html_url": "https://github.com/rust-lang/rust/commit/600ec284838c52d1f6657c2cf0097b58970b133b"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "69da3f232a0b9ed2def4822aabe73ccc70b743ec", "filename": "compiler/rustc_expand/src/mbe/macro_parser.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/df6ead557d6c1f2ec87793d95b8a8bc9453e0f66/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df6ead557d6c1f2ec87793d95b8a8bc9453e0f66/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs?ref=df6ead557d6c1f2ec87793d95b8a8bc9453e0f66", "patch": "@@ -588,8 +588,13 @@ impl<'tt> TtParser<'tt> {\n         if *token == token::Eof {\n             Some(match eof_items {\n                 EofItems::One(mut eof_item) => {\n-                    let matches =\n-                        eof_item.matches.iter_mut().map(|dv| Lrc::make_mut(dv).pop().unwrap());\n+                    let matches = eof_item.matches.iter_mut().map(|dv| {\n+                        // Top-level metavars only ever get one match. (Sub-matchers can get\n+                        // multiple matches, which get aggregated into a `MatcherSeq` before being\n+                        // put into the top-level.)\n+                        debug_assert_eq!(dv.len(), 1);\n+                        Lrc::make_mut(dv).pop().unwrap()\n+                    });\n                     nameize(sess, ms, matches)\n                 }\n                 EofItems::Multiple => {"}]}