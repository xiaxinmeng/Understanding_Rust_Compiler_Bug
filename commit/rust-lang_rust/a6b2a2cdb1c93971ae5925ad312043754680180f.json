{"sha": "a6b2a2cdb1c93971ae5925ad312043754680180f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2YjJhMmNkYjFjOTM5NzFhZTU5MjVhZDMxMjA0Mzc1NDY4MDE4MGY=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-21T10:59:27Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-21T11:07:41Z"}, "message": "Separate vec::map and vec::map_mut\n\nThe safe-reference checker requires a copy of each mapped-over element\nonly when the vector is mutable. Let's not pay that cost for immutable\nvectors.", "tree": {"sha": "a095c185dd449cbc7a629ee415f218a485fc620c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a095c185dd449cbc7a629ee415f218a485fc620c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6b2a2cdb1c93971ae5925ad312043754680180f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6b2a2cdb1c93971ae5925ad312043754680180f", "html_url": "https://github.com/rust-lang/rust/commit/a6b2a2cdb1c93971ae5925ad312043754680180f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6b2a2cdb1c93971ae5925ad312043754680180f/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12f6e868f7c52a1329b91e16143c0879ffe747e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/12f6e868f7c52a1329b91e16143c0879ffe747e4", "html_url": "https://github.com/rust-lang/rust/commit/12f6e868f7c52a1329b91e16143c0879ffe747e4"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "896a3f9e6aad0b280052d6dbb9193d736cbd6e65", "filename": "src/lib/vec.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a6b2a2cdb1c93971ae5925ad312043754680180f/src%2Flib%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6b2a2cdb1c93971ae5925ad312043754680180f/src%2Flib%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fvec.rs?ref=a6b2a2cdb1c93971ae5925ad312043754680180f", "patch": "@@ -384,7 +384,19 @@ Function: map\n \n Apply a function to each element of a vector and return the results\n */\n-fn map<copy T, U>(f: block(T) -> U, v: [const T]) -> [U] {\n+fn map<T, U>(f: block(T) -> U, v: [T]) -> [U] {\n+    let result = [];\n+    reserve(result, len(v));\n+    for elem: T in v { result += [f(elem)]; }\n+    ret result;\n+}\n+\n+/*\n+Function: map_mut\n+\n+Apply a function to each element of a mutable vector and return the results\n+*/\n+fn map_mut<copy T, U>(f: block(T) -> U, v: [const T]) -> [U] {\n     let result = [];\n     reserve(result, len(v));\n     for elem: T in v {"}]}