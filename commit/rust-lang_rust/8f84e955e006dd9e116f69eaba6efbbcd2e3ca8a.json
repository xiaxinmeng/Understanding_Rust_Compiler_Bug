{"sha": "8f84e955e006dd9e116f69eaba6efbbcd2e3ca8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmODRlOTU1ZTAwNmRkOWUxMTZmNjllYWJhNmVmYmJjZDJlM2NhOGE=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-01-05T00:33:09Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-01-05T00:33:09Z"}, "message": "Allow projections to be promoted to constants in MIR.", "tree": {"sha": "fdbde6930700b2db5ebbda95a2617503668a6ba1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdbde6930700b2db5ebbda95a2617503668a6ba1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f84e955e006dd9e116f69eaba6efbbcd2e3ca8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f84e955e006dd9e116f69eaba6efbbcd2e3ca8a", "html_url": "https://github.com/rust-lang/rust/commit/8f84e955e006dd9e116f69eaba6efbbcd2e3ca8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f84e955e006dd9e116f69eaba6efbbcd2e3ca8a/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05f4a75ebaccdf3646fbea4b560a3a0dfc1be9e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/05f4a75ebaccdf3646fbea4b560a3a0dfc1be9e2", "html_url": "https://github.com/rust-lang/rust/commit/05f4a75ebaccdf3646fbea4b560a3a0dfc1be9e2"}], "stats": {"total": 53, "additions": 40, "deletions": 13}, "files": [{"sha": "232f995dcae317fa34e37227482b40e0a5fe8e42", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/8f84e955e006dd9e116f69eaba6efbbcd2e3ca8a/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f84e955e006dd9e116f69eaba6efbbcd2e3ca8a/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=8f84e955e006dd9e116f69eaba6efbbcd2e3ca8a", "patch": "@@ -96,11 +96,8 @@ impl<'tcx> Visitor<'tcx> for TempCollector<'tcx> {\n             // Ignore drops, if the temp gets promoted,\n             // then it's constant and thus drop is noop.\n             // Storage live ranges are also irrelevant.\n-            match context {\n-                LvalueContext::Drop |\n-                LvalueContext::StorageLive |\n-                LvalueContext::StorageDead => return,\n-                _ => {}\n+            if context.is_drop() || context.is_storage_marker() {\n+                return;\n             }\n \n             let temp = &mut self.temps[index];\n@@ -117,15 +114,17 @@ impl<'tcx> Visitor<'tcx> for TempCollector<'tcx> {\n                     _ => { /* mark as unpromotable below */ }\n                 }\n             } else if let TempState::Defined { ref mut uses, .. } = *temp {\n-                match context {\n-                    LvalueContext::Borrow {..} |\n-                    LvalueContext::Consume |\n-                    LvalueContext::Inspect => {\n-                        *uses += 1;\n-                        return;\n-                    }\n-                    _ => { /* mark as unpromotable below */ }\n+                // We always allow borrows, even mutable ones, as we need\n+                // to promote mutable borrows of some ZSTs e.g. `&mut []`.\n+                let allowed_use = match context {\n+                    LvalueContext::Borrow {..} => true,\n+                    _ => context.is_nonmutating_use()\n+                };\n+                if allowed_use {\n+                    *uses += 1;\n+                    return;\n                 }\n+                /* mark as unpromotable below */\n             }\n             *temp = TempState::Unpromotable;\n         }"}, {"sha": "12d220b3ba207a34ceea3d7bcb732553bbd1221b", "filename": "src/librustc_trans/collector.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8f84e955e006dd9e116f69eaba6efbbcd2e3ca8a/src%2Flibrustc_trans%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f84e955e006dd9e116f69eaba6efbbcd2e3ca8a/src%2Flibrustc_trans%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcollector.rs?ref=8f84e955e006dd9e116f69eaba6efbbcd2e3ca8a", "patch": "@@ -1203,6 +1203,7 @@ fn collect_neighbours<'a, 'tcx>(scx: &SharedCrateContext<'a, 'tcx>,\n \n     visitor.visit_mir(&mir);\n     for promoted in &mir.promoted {\n+        visitor.mir = promoted;\n         visitor.visit_mir(promoted);\n     }\n }"}, {"sha": "5c9a63b861663d0fd175703b06ee5cf971f9a177", "filename": "src/test/run-pass/issue-38074.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/8f84e955e006dd9e116f69eaba6efbbcd2e3ca8a/src%2Ftest%2Frun-pass%2Fissue-38074.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f84e955e006dd9e116f69eaba6efbbcd2e3ca8a/src%2Ftest%2Frun-pass%2Fissue-38074.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-38074.rs?ref=8f84e955e006dd9e116f69eaba6efbbcd2e3ca8a", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(platform_intrinsics, repr_simd)]\n+\n+extern \"platform-intrinsic\" {\n+    fn simd_shuffle2<T, U>(x: T, y: T, idx: [u32; 2]) -> U;\n+}\n+\n+#[repr(simd)]\n+#[derive(Clone, Copy)]\n+#[allow(non_camel_case_types)]\n+struct u64x2(u64, u64);\n+\n+fn main() {\n+    let a = u64x2(1, 2);\n+    let r: u64x2 = unsafe { simd_shuffle2(a, a, [0-0, 0-0]) };\n+    assert_eq!(r.0, 1);\n+    assert_eq!(r.1, 1);\n+}"}]}