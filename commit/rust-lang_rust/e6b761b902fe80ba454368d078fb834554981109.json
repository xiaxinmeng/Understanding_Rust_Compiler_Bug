{"sha": "e6b761b902fe80ba454368d078fb834554981109", "node_id": "C_kwDOAAsO6NoAKGU2Yjc2MWI5MDJmZTgwYmE0NTQzNjhkMDc4ZmI4MzQ1NTQ5ODExMDk", "commit": {"author": {"name": "Jan Behrens", "email": "jbe@magnetkern.de", "date": "2022-07-21T14:40:14Z"}, "committer": {"name": "Jan Behrens", "email": "jbe@magnetkern.de", "date": "2022-07-21T14:40:14Z"}, "message": "fixup! docs: Improve AsRef / AsMut docs on blanket impls\n\nChanged wording in sections on \"Reflexivity\":\nreplaced \"that is there is\" with \"i.e. there would be\" and removed comma\nbefore \"with\"\n\nReason: \"there is\" somewhat contradicted the \"would be\" hypothetical.\nA slightly redundant wording has now been chosen for better clarity.\nThe comma seemed to be superfluous.", "tree": {"sha": "c37a7361009f32b546e2fadeba8a0552cb53cfe1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c37a7361009f32b546e2fadeba8a0552cb53cfe1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6b761b902fe80ba454368d078fb834554981109", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6b761b902fe80ba454368d078fb834554981109", "html_url": "https://github.com/rust-lang/rust/commit/e6b761b902fe80ba454368d078fb834554981109", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6b761b902fe80ba454368d078fb834554981109/comments", "author": {"login": "JanBeh", "id": 76393822, "node_id": "MDQ6VXNlcjc2MzkzODIy", "avatar_url": "https://avatars.githubusercontent.com/u/76393822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JanBeh", "html_url": "https://github.com/JanBeh", "followers_url": "https://api.github.com/users/JanBeh/followers", "following_url": "https://api.github.com/users/JanBeh/following{/other_user}", "gists_url": "https://api.github.com/users/JanBeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/JanBeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JanBeh/subscriptions", "organizations_url": "https://api.github.com/users/JanBeh/orgs", "repos_url": "https://api.github.com/users/JanBeh/repos", "events_url": "https://api.github.com/users/JanBeh/events{/privacy}", "received_events_url": "https://api.github.com/users/JanBeh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JanBeh", "id": 76393822, "node_id": "MDQ6VXNlcjc2MzkzODIy", "avatar_url": "https://avatars.githubusercontent.com/u/76393822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JanBeh", "html_url": "https://github.com/JanBeh", "followers_url": "https://api.github.com/users/JanBeh/followers", "following_url": "https://api.github.com/users/JanBeh/following{/other_user}", "gists_url": "https://api.github.com/users/JanBeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/JanBeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JanBeh/subscriptions", "organizations_url": "https://api.github.com/users/JanBeh/orgs", "repos_url": "https://api.github.com/users/JanBeh/repos", "events_url": "https://api.github.com/users/JanBeh/events{/privacy}", "received_events_url": "https://api.github.com/users/JanBeh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4a259b5e480ea5b444384f9ff9cd862a46a9d16", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4a259b5e480ea5b444384f9ff9cd862a46a9d16", "html_url": "https://github.com/rust-lang/rust/commit/e4a259b5e480ea5b444384f9ff9cd862a46a9d16"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "e2be262e311d6072f428e9fc778f30e6c7e18c5c", "filename": "library/core/src/convert/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e6b761b902fe80ba454368d078fb834554981109/library%2Fcore%2Fsrc%2Fconvert%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6b761b902fe80ba454368d078fb834554981109/library%2Fcore%2Fsrc%2Fconvert%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fconvert%2Fmod.rs?ref=e6b761b902fe80ba454368d078fb834554981109", "patch": "@@ -172,8 +172,8 @@ pub const fn identity<T>(x: T) -> T {\n ///\n /// # Reflexivity\n ///\n-/// Ideally, `AsRef` would be reflexive, that is there is an `impl<T: ?Sized> AsRef<T> for T`, with\n-/// [`as_ref`] simply returning its argument unchanged.\n+/// Ideally, `AsRef` would be reflexive, i.e. there would be an `impl<T: ?Sized> AsRef<T> for T`\n+/// with [`as_ref`] simply returning its argument unchanged.\n /// Such a blanket implementation is currently *not* provided due to technical restrictions of\n /// Rust's type system (it would be overlapping with another existing blanket implementation for\n /// `&T where T: AsRef<U>` which allows `AsRef` to auto-dereference, see \"Generic Implementations\"\n@@ -283,8 +283,8 @@ pub trait AsRef<T: ?Sized> {\n ///\n /// # Reflexivity\n ///\n-/// Ideally, `AsMut` would be reflexive, that is there is an `impl<T: ?Sized> AsMut<T> for T`, with\n-/// [`as_mut`] simply returning its argument unchanged.\n+/// Ideally, `AsMut` would be reflexive, i.e. there would be an `impl<T: ?Sized> AsMut<T> for T`\n+/// with [`as_mut`] simply returning its argument unchanged.\n /// Such a blanket implementation is currently *not* provided due to technical restrictions of\n /// Rust's type system (it would be overlapping with another existing blanket implementation for\n /// `&mut T where T: AsMut<U>` which allows `AsMut` to auto-dereference, see \"Generic"}]}