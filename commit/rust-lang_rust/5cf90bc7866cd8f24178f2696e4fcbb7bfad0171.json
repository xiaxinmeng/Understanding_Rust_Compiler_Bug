{"sha": "5cf90bc7866cd8f24178f2696e4fcbb7bfad0171", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZjkwYmM3ODY2Y2Q4ZjI0MTc4ZjI2OTZlNGZjYmI3YmZhZDAxNzE=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-09-18T21:10:13Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-09-18T21:13:59Z"}, "message": "Add getcwd shim", "tree": {"sha": "90b41616abc50007af35458e56492e8067aa14c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90b41616abc50007af35458e56492e8067aa14c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cf90bc7866cd8f24178f2696e4fcbb7bfad0171", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cf90bc7866cd8f24178f2696e4fcbb7bfad0171", "html_url": "https://github.com/rust-lang/rust/commit/5cf90bc7866cd8f24178f2696e4fcbb7bfad0171", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cf90bc7866cd8f24178f2696e4fcbb7bfad0171/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d83bcbd339c2782edb9a523874e7d9c0bcca012e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d83bcbd339c2782edb9a523874e7d9c0bcca012e", "html_url": "https://github.com/rust-lang/rust/commit/d83bcbd339c2782edb9a523874e7d9c0bcca012e"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "73627086e0b6f7407cb3506d94fafe16124a8934", "filename": "src/shims/env.rs", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5cf90bc7866cd8f24178f2696e4fcbb7bfad0171/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cf90bc7866cd8f24178f2696e4fcbb7bfad0171/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=5cf90bc7866cd8f24178f2696e4fcbb7bfad0171", "patch": "@@ -1,4 +1,5 @@\n use std::collections::HashMap;\n+use std::env;\n \n use rustc::ty::layout::{Size};\n use rustc_mir::interpret::{Pointer, Memory};\n@@ -21,7 +22,7 @@ impl EnvVars {\n         excluded_env_vars.push(\"TERM\".to_owned());\n \n         if ecx.machine.communicate {\n-            for (name, value) in std::env::vars() {\n+            for (name, value) in env::vars() {\n                 if !excluded_env_vars.contains(&name) {\n                     let var_ptr = alloc_env_var(name.as_bytes(), value.as_bytes(), ecx.memory_mut());\n                     ecx.machine.env_vars.map.insert(name.into_bytes(), var_ptr);\n@@ -111,4 +112,29 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             Ok(-1)\n         }\n     }\n+\n+    fn getcwd(\n+        &mut self,\n+        buf_op: OpTy<'tcx, Tag>,\n+        size_op: OpTy<'tcx, Tag>,\n+    ) -> InterpResult<'tcx, Scalar<Tag>> {\n+        let this = self.eval_context_mut();\n+        let tcx = &{this.tcx.tcx};\n+\n+        let buf = this.force_ptr(this.read_scalar(buf_op)?.not_undef()?)?;\n+        let size = this.read_scalar(size_op)?.to_usize(&*this.tcx)?;\n+        // If we cannot get the current directory, we return null\n+        if let Ok(cwd) = env::current_dir() {\n+            // It is not clear what happens with non-utf8 paths here\n+            let mut bytes = cwd.display().to_string().into_bytes();\n+            // If the buffer is smaller than the path, we return null\n+            if bytes.len() as u64 <= size {\n+                // We need `size` bytes exactly\n+                bytes.resize(size as usize, 0);\n+                this.memory_mut().get_mut(buf.alloc_id)?.write_bytes(tcx, buf, &bytes)?;\n+                return Ok(Scalar::Ptr(buf))\n+            }\n+        }\n+        Ok(Scalar::ptr_null(&*this.tcx))\n+    }\n }"}, {"sha": "45f167bea582dde2804401b1ea5db190eb7ea58e", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5cf90bc7866cd8f24178f2696e4fcbb7bfad0171/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cf90bc7866cd8f24178f2696e4fcbb7bfad0171/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=5cf90bc7866cd8f24178f2696e4fcbb7bfad0171", "patch": "@@ -436,6 +436,11 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 this.write_scalar(Scalar::from_int(result, dest.layout.size), dest)?;\n             }\n \n+            \"getcwd\" => {\n+                let result = this.getcwd(args[0], args[1])?;\n+                this.write_scalar(result, dest)?;\n+            }\n+\n             \"write\" => {\n                 let fd = this.read_scalar(args[0])?.to_i32()?;\n                 let buf = this.read_scalar(args[1])?.not_undef()?;"}]}