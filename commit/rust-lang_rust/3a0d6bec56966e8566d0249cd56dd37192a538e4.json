{"sha": "3a0d6bec56966e8566d0249cd56dd37192a538e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhMGQ2YmVjNTY5NjZlODU2NmQwMjQ5Y2Q1NmRkMzcxOTJhNTM4ZTQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-05-06T22:38:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-06T22:38:36Z"}, "message": "Rollup merge of #84728 - camelid:sized-param-sugg-test, r=Mark-Simulacrum\n\nAdd test for suggestion to borrow unsized function parameters\n\nCloses #82820.\n\nThis is a regression test for #82820.\n\nThis test case is included in more general tests, but I think the error\nregressed because there were a bunch of other diagnostic changes in the\ntest that obscured this regression.\n\nHopefully, having a test specific to the suggestion, and running rustfix\nfor the test, will prevent this error from regressing in the future.", "tree": {"sha": "dafe37cc522598481221b3a23caaeb800b59f69f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dafe37cc522598481221b3a23caaeb800b59f69f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a0d6bec56966e8566d0249cd56dd37192a538e4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJglG/sCRBK7hj4Ov3rIwAAwIMIACysuVsTSxSZN6Cs1rcjq18S\nQiLKO/ukRqkn/2ivVAs2aD6TCPrxe5fqTvPUGqi5SDD9t43d7TNJoyR9Vz6zCUMZ\nCmiDHpSGU9Gvp3lnITf2+tRaClaLy3JKZLVYPHk0Ggae+nADqZgGyxrh59lnOuV6\n6m0tuVnbh79KjmEPHqkYCZMw4CjMQakya3P/JiTEOWqQLWPgLKCBmj9+zx0oxj0r\nZJQ1XuhLpC9N7C5WbFJiWMXay4CN66j0VLTO1AWxq8SUVw/2GdbbOXFOjtODGHLq\nXvJr9M6RuKX+KmYBw2NvKrF/UQ9W/sMwjzdn7BpKc9fcVlDHkfRE4vvRqqKduJ4=\n=plSq\n-----END PGP SIGNATURE-----\n", "payload": "tree dafe37cc522598481221b3a23caaeb800b59f69f\nparent dd3747b4ad53d172125b6c321047784a95eb76ba\nparent a7500e52efeb7aa6a833e9db077de2113f2e88f6\nauthor Dylan DPC <dylan.dpc@gmail.com> 1620340716 +0200\ncommitter GitHub <noreply@github.com> 1620340716 +0200\n\nRollup merge of #84728 - camelid:sized-param-sugg-test, r=Mark-Simulacrum\n\nAdd test for suggestion to borrow unsized function parameters\n\nCloses #82820.\n\nThis is a regression test for #82820.\n\nThis test case is included in more general tests, but I think the error\nregressed because there were a bunch of other diagnostic changes in the\ntest that obscured this regression.\n\nHopefully, having a test specific to the suggestion, and running rustfix\nfor the test, will prevent this error from regressing in the future.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a0d6bec56966e8566d0249cd56dd37192a538e4", "html_url": "https://github.com/rust-lang/rust/commit/3a0d6bec56966e8566d0249cd56dd37192a538e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a0d6bec56966e8566d0249cd56dd37192a538e4/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd3747b4ad53d172125b6c321047784a95eb76ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd3747b4ad53d172125b6c321047784a95eb76ba", "html_url": "https://github.com/rust-lang/rust/commit/dd3747b4ad53d172125b6c321047784a95eb76ba"}, {"sha": "a7500e52efeb7aa6a833e9db077de2113f2e88f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7500e52efeb7aa6a833e9db077de2113f2e88f6", "html_url": "https://github.com/rust-lang/rust/commit/a7500e52efeb7aa6a833e9db077de2113f2e88f6"}], "stats": {"total": 88, "additions": 88, "deletions": 0}, "files": [{"sha": "18e93cb96cd99c76ada0fb04f7267d7fef403fe2", "filename": "src/test/ui/suggestions/unsized-function-parameter.fixed", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3a0d6bec56966e8566d0249cd56dd37192a538e4/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/3a0d6bec56966e8566d0249cd56dd37192a538e4/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.fixed?ref=3a0d6bec56966e8566d0249cd56dd37192a538e4", "patch": "@@ -0,0 +1,23 @@\n+// run-rustfix\n+\n+#![allow(dead_code, unused_variables)]\n+\n+fn foo1(bar: &str) {}\n+//~^ ERROR the size for values of type `str` cannot be known at compilation time\n+//~| HELP the trait `Sized` is not implemented for `str`\n+//~| HELP unsized fn params are gated as an unstable feature\n+//~| HELP function arguments must have a statically known size, borrowed types always have a known size\n+\n+fn foo2(_bar: &str) {}\n+//~^ ERROR the size for values of type `str` cannot be known at compilation time\n+//~| HELP the trait `Sized` is not implemented for `str`\n+//~| HELP unsized fn params are gated as an unstable feature\n+//~| HELP function arguments must have a statically known size, borrowed types always have a known size\n+\n+fn foo3(_: &str) {}\n+//~^ ERROR the size for values of type `str` cannot be known at compilation time\n+//~| HELP the trait `Sized` is not implemented for `str`\n+//~| HELP unsized fn params are gated as an unstable feature\n+//~| HELP function arguments must have a statically known size, borrowed types always have a known size\n+\n+fn main() {}"}, {"sha": "344ee71c1bcc94109b981e70ca0f1381c89d9dee", "filename": "src/test/ui/suggestions/unsized-function-parameter.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3a0d6bec56966e8566d0249cd56dd37192a538e4/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a0d6bec56966e8566d0249cd56dd37192a538e4/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.rs?ref=3a0d6bec56966e8566d0249cd56dd37192a538e4", "patch": "@@ -0,0 +1,23 @@\n+// run-rustfix\n+\n+#![allow(dead_code, unused_variables)]\n+\n+fn foo1(bar: str) {}\n+//~^ ERROR the size for values of type `str` cannot be known at compilation time\n+//~| HELP the trait `Sized` is not implemented for `str`\n+//~| HELP unsized fn params are gated as an unstable feature\n+//~| HELP function arguments must have a statically known size, borrowed types always have a known size\n+\n+fn foo2(_bar: str) {}\n+//~^ ERROR the size for values of type `str` cannot be known at compilation time\n+//~| HELP the trait `Sized` is not implemented for `str`\n+//~| HELP unsized fn params are gated as an unstable feature\n+//~| HELP function arguments must have a statically known size, borrowed types always have a known size\n+\n+fn foo3(_: str) {}\n+//~^ ERROR the size for values of type `str` cannot be known at compilation time\n+//~| HELP the trait `Sized` is not implemented for `str`\n+//~| HELP unsized fn params are gated as an unstable feature\n+//~| HELP function arguments must have a statically known size, borrowed types always have a known size\n+\n+fn main() {}"}, {"sha": "8cbd8bf3f34587a50150fef108e3a6079e16cac2", "filename": "src/test/ui/suggestions/unsized-function-parameter.stderr", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/3a0d6bec56966e8566d0249cd56dd37192a538e4/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a0d6bec56966e8566d0249cd56dd37192a538e4/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.stderr?ref=3a0d6bec56966e8566d0249cd56dd37192a538e4", "patch": "@@ -0,0 +1,42 @@\n+error[E0277]: the size for values of type `str` cannot be known at compilation time\n+  --> $DIR/unsized-function-parameter.rs:5:9\n+   |\n+LL | fn foo1(bar: str) {}\n+   |         ^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `str`\n+   = help: unsized fn params are gated as an unstable feature\n+help: function arguments must have a statically known size, borrowed types always have a known size\n+   |\n+LL | fn foo1(bar: &str) {}\n+   |              ^\n+\n+error[E0277]: the size for values of type `str` cannot be known at compilation time\n+  --> $DIR/unsized-function-parameter.rs:11:9\n+   |\n+LL | fn foo2(_bar: str) {}\n+   |         ^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `str`\n+   = help: unsized fn params are gated as an unstable feature\n+help: function arguments must have a statically known size, borrowed types always have a known size\n+   |\n+LL | fn foo2(_bar: &str) {}\n+   |               ^\n+\n+error[E0277]: the size for values of type `str` cannot be known at compilation time\n+  --> $DIR/unsized-function-parameter.rs:17:9\n+   |\n+LL | fn foo3(_: str) {}\n+   |         ^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `str`\n+   = help: unsized fn params are gated as an unstable feature\n+help: function arguments must have a statically known size, borrowed types always have a known size\n+   |\n+LL | fn foo3(_: &str) {}\n+   |            ^\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}