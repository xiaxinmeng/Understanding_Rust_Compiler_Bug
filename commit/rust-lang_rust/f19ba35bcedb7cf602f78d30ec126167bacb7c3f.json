{"sha": "f19ba35bcedb7cf602f78d30ec126167bacb7c3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxOWJhMzViY2VkYjdjZjYwMmY3OGQzMGVjMTI2MTY3YmFjYjdjM2Y=", "commit": {"author": {"name": "Mukund Lakshman", "email": "yaymukund@gmail.com", "date": "2021-08-20T00:15:35Z"}, "committer": {"name": "Mukund Lakshman", "email": "yaymukund@gmail.com", "date": "2021-08-20T10:58:20Z"}, "message": "Add support for including non-backport commits.", "tree": {"sha": "d06ae8b05248cbbc369fc429b778e338d69c3ed2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d06ae8b05248cbbc369fc429b778e338d69c3ed2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f19ba35bcedb7cf602f78d30ec126167bacb7c3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f19ba35bcedb7cf602f78d30ec126167bacb7c3f", "html_url": "https://github.com/rust-lang/rust/commit/f19ba35bcedb7cf602f78d30ec126167bacb7c3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f19ba35bcedb7cf602f78d30ec126167bacb7c3f/comments", "author": null, "committer": null, "parents": [{"sha": "adc8cd3e62a2d23cdc20e2d3b282652a8c1900b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/adc8cd3e62a2d23cdc20e2d3b282652a8c1900b3", "html_url": "https://github.com/rust-lang/rust/commit/adc8cd3e62a2d23cdc20e2d3b282652a8c1900b3"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "1023e4b0e2837d2ef4b2a7b4f07fb01cff29a2fc", "filename": "src/ci/scripts/verify-backported-commits.sh", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f19ba35bcedb7cf602f78d30ec126167bacb7c3f/src%2Fci%2Fscripts%2Fverify-backported-commits.sh", "raw_url": "https://github.com/rust-lang/rust/raw/f19ba35bcedb7cf602f78d30ec126167bacb7c3f/src%2Fci%2Fscripts%2Fverify-backported-commits.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Fverify-backported-commits.sh?ref=f19ba35bcedb7cf602f78d30ec126167bacb7c3f", "patch": "@@ -62,6 +62,11 @@ verify_cherries() {\n     # Check each commit in <current>..<upstream>\n     backport_sha=$(get_backport \"$sha\")\n \n+    if [[ \"$backport_sha\" == \"nothing\" ]]; then\n+      echo \"\u2713 \\`$sha\\` backports nothing\"\n+      continue\n+    fi\n+\n     if [[ -z \"$backport_sha\" ]]; then\n       no_backports+=(\"$sha\")\n       continue\n@@ -88,8 +93,8 @@ verify_cherries() {\n         done\n         echo\n         echo \"do not match any commits in \\`$1\\`. If this was intended, add the text\"\n-        echo '\\`backport-of: <SHA of a commit already in master>\\` somewhere in the'\n-        echo 'message of each of these commits.'\n+        echo '\\`backport-of: <SHA of a commit already in master>\\`'\n+        echo 'somewhere in the message of each of these commits.'\n         echo\n         failure=1\n   fi\n@@ -112,12 +117,27 @@ verify_cherries() {\n   return $failure\n }\n \n-# Get the backport of a commit, or empty string if it does not exist.\n+# Get the backport of a commit. It echoes one of:\n+#\n+# 1. A SHA of the backported commit\n+# 2. The string \"nothing\"\n+# 3. An empty string\n #\n # $1 = <sha>\n get_backport() {\n+  # This regex is:\n+  #\n+  # ^.* - throw away any extra starting characters\n+  # backport-of: - prefix\n+  # \\s\\? - optional space\n+  # \\(\\) - capture group\n+  # [a-f0-9]\\+\\|nothing - a SHA or the text 'nothing'\n+  # .* - throw away any extra ending characters\n+  # \\1 - replace it with the first match\n+  # {s//\\1/p;q} - print the first occurrence and quit\n+  #\n   git show -s --format=%B \"$1\" \\\n-    | sed -n 's/^.*backport-of:\\s\\?\\([a-f0-9]\\+\\).*/\\1/p'\n+    | sed -n '/^.*backport-of:\\s\\?\\([a-f0-9]\\+\\|nothing\\).*/{s//\\1/p;q}'\n }\n \n # Check if a commit is in master."}]}