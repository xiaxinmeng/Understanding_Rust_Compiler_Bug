{"sha": "025cf758649bcbc13b90e35c49504581b7b51de2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyNWNmNzU4NjQ5YmNiYzEzYjkwZTM1YzQ5NTA0NTgxYjdiNTFkZTI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-10-18T16:03:42Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-10-18T16:12:09Z"}, "message": "Remove #[derive(Show)]", "tree": {"sha": "7caf6969e9d41bf05586cbf22c6b92112c3aedb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7caf6969e9d41bf05586cbf22c6b92112c3aedb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/025cf758649bcbc13b90e35c49504581b7b51de2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/025cf758649bcbc13b90e35c49504581b7b51de2", "html_url": "https://github.com/rust-lang/rust/commit/025cf758649bcbc13b90e35c49504581b7b51de2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/025cf758649bcbc13b90e35c49504581b7b51de2/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be9104291391d9adff91c9ece2b562150979a899", "url": "https://api.github.com/repos/rust-lang/rust/commits/be9104291391d9adff91c9ece2b562150979a899", "html_url": "https://github.com/rust-lang/rust/commit/be9104291391d9adff91c9ece2b562150979a899"}], "stats": {"total": 36, "additions": 19, "deletions": 17}, "files": [{"sha": "18346c092547fbe822abc206fed0d4d74e198d7a", "filename": "src/doc/style/features/traits/common.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Fdoc%2Fstyle%2Ffeatures%2Ftraits%2Fcommon.md", "raw_url": "https://github.com/rust-lang/rust/raw/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Fdoc%2Fstyle%2Ffeatures%2Ftraits%2Fcommon.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fstyle%2Ffeatures%2Ftraits%2Fcommon.md?ref=025cf758649bcbc13b90e35c49504581b7b51de2", "patch": "@@ -9,18 +9,18 @@ applicable, common traits.\n \n To see why, consider the following situation:\n \n-* Crate `std` defines trait `Show`.\n-* Crate `url` defines type `Url`, without implementing `Show`.\n+* Crate `std` defines trait `Debug`.\n+* Crate `url` defines type `Url`, without implementing `Debug`.\n * Crate `webapp` imports from both `std` and `url`,\n \n-There is no way for `webapp` to add `Show` to `url`, since it defines neither.\n+There is no way for `webapp` to add `Debug` to `url`, since it defines neither.\n (Note: the newtype pattern can provide an efficient, but inconvenient\n workaround; see [newtype for views](../types/newtype.md))\n \n The most important common traits to implement from `std` are:\n \n ```rust\n-Clone, Show, Hash, Eq\n+Clone, Debug, Hash, Eq\n ```\n \n #### When safe, derive or otherwise implement `Send` and `Share`. [FIXME]"}, {"sha": "790fc8942873e29c8876cf85476ac1cfaa57cc58", "filename": "src/etc/generate-deriving-span-tests.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Fetc%2Fgenerate-deriving-span-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Fetc%2Fgenerate-deriving-span-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgenerate-deriving-span-tests.py?ref=025cf758649bcbc13b90e35c49504581b7b51de2", "patch": "@@ -119,7 +119,7 @@ def write_file(name, string):\n                               ('PartialOrd', ['PartialEq'], 8),\n                               ('Eq', ['PartialEq'], 1),\n                               ('Ord', ['Eq', 'PartialOrd', 'PartialEq'], 1),\n-                              ('Show', [], 1),\n+                              ('Debug', [], 1),\n                               ('Hash', [], 1)]:\n     traits[trait] = (ALL, supers, errs)\n "}, {"sha": "537375f70845da027ed5e367c23709d82209951c", "filename": "src/libsyntax/ext/deriving/debug.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Flibsyntax%2Fext%2Fderiving%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Flibsyntax%2Fext%2Fderiving%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fdebug.rs?ref=025cf758649bcbc13b90e35c49504581b7b51de2", "patch": "@@ -18,7 +18,7 @@ use ext::deriving::generic::ty::*;\n use parse::token;\n use ptr::P;\n \n-pub fn expand_deriving_show(cx: &mut ExtCtxt,\n+pub fn expand_deriving_debug(cx: &mut ExtCtxt,\n                             span: Span,\n                             mitem: &MetaItem,\n                             item: &Annotatable,", "previous_filename": "src/libsyntax/ext/deriving/show.rs"}, {"sha": "d26bb794c88b9453d67d201b5c8c3e70ace6294d", "filename": "src/libsyntax/ext/deriving/mod.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs?ref=025cf758649bcbc13b90e35c49504581b7b51de2", "patch": "@@ -60,7 +60,7 @@ pub mod clone;\n pub mod encodable;\n pub mod decodable;\n pub mod hash;\n-pub mod show;\n+pub mod debug;\n pub mod default;\n pub mod primitive;\n \n@@ -173,7 +173,7 @@ derive_traits! {\n     \"PartialOrd\" => partial_ord::expand_deriving_partial_ord,\n     \"Ord\" => ord::expand_deriving_ord,\n \n-    \"Debug\" => show::expand_deriving_show,\n+    \"Debug\" => debug::expand_deriving_debug,\n \n     \"Default\" => default::expand_deriving_default,\n \n@@ -184,15 +184,13 @@ derive_traits! {\n     \"Copy\" => bounds::expand_deriving_copy,\n \n     // deprecated\n-    \"Show\" => show::expand_deriving_show,\n     \"Encodable\" => encodable::expand_deriving_encodable,\n     \"Decodable\" => decodable::expand_deriving_decodable,\n }\n \n #[inline] // because `name` is a compile-time constant\n fn warn_if_deprecated(ecx: &mut ExtCtxt, sp: Span, name: &str) {\n     if let Some(replacement) = match name {\n-        \"Show\" => Some(\"Debug\"),\n         \"Encodable\" => Some(\"RustcEncodable\"),\n         \"Decodable\" => Some(\"RustcDecodable\"),\n         _ => None,"}, {"sha": "400458b614b39c22a47f15bc3620ab24b6bd2b22", "filename": "src/test/run-pass/arr_cycle.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Ftest%2Frun-pass%2Farr_cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Ftest%2Frun-pass%2Farr_cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Farr_cycle.rs?ref=025cf758649bcbc13b90e35c49504581b7b51de2", "patch": "@@ -10,7 +10,7 @@\n \n use std::cell::Cell;\n \n-#[derive(Show)]\n+#[derive(Debug)]\n struct B<'a> {\n     a: [Cell<Option<&'a B<'a>>>; 2]\n }"}, {"sha": "46cd708a13969fda910c89cf5f8d9020465896e1", "filename": "src/test/run-pass/const-adt-align-mismatch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Ftest%2Frun-pass%2Fconst-adt-align-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Ftest%2Frun-pass%2Fconst-adt-align-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-adt-align-mismatch.rs?ref=025cf758649bcbc13b90e35c49504581b7b51de2", "patch": "@@ -10,7 +10,7 @@\n \n use std::mem;\n \n-#[derive(PartialEq, Show)]\n+#[derive(PartialEq, Debug)]\n enum Foo {\n     A(u32),\n     Bar([u16; 4]),"}, {"sha": "69a7f888bbe09d49422cdc0e7a5a6fc723593d63", "filename": "src/test/run-pass/deprecated-derive.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Ftest%2Frun-pass%2Fdeprecated-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Ftest%2Frun-pass%2Fdeprecated-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdeprecated-derive.rs?ref=025cf758649bcbc13b90e35c49504581b7b51de2", "patch": "@@ -8,8 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[derive(Show)]\n-//~^ WARNING derive(Show) is deprecated\n+#![feature(rustc_private)]\n+\n+extern crate serialize;\n+\n+#[derive(Encodable)]\n+//~^ WARNING derive(Encodable) is deprecated in favor of derive(RustcEncodable)\n struct Test1;\n \n fn main() { }"}, {"sha": "d5da8b35b6db40af7c11479de5d6859784384aea", "filename": "src/test/run-pass/vec_cycle.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Ftest%2Frun-pass%2Fvec_cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Ftest%2Frun-pass%2Fvec_cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec_cycle.rs?ref=025cf758649bcbc13b90e35c49504581b7b51de2", "patch": "@@ -10,7 +10,7 @@\n \n use std::cell::Cell;\n \n-#[derive(Show)]\n+#[derive(Debug)]\n struct C<'a> {\n     v: Vec<Cell<Option<&'a C<'a>>>>,\n }"}, {"sha": "56480268a01b2adff5aa9766c4021163937910ed", "filename": "src/test/run-pass/vec_cycle_wrapped.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Ftest%2Frun-pass%2Fvec_cycle_wrapped.rs", "raw_url": "https://github.com/rust-lang/rust/raw/025cf758649bcbc13b90e35c49504581b7b51de2/src%2Ftest%2Frun-pass%2Fvec_cycle_wrapped.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec_cycle_wrapped.rs?ref=025cf758649bcbc13b90e35c49504581b7b51de2", "patch": "@@ -10,12 +10,12 @@\n \n use std::cell::Cell;\n \n-#[derive(Show)]\n+#[derive(Debug)]\n struct Refs<'a> {\n     v: Vec<Cell<Option<&'a C<'a>>>>,\n }\n \n-#[derive(Show)]\n+#[derive(Debug)]\n struct C<'a> {\n     refs: Refs<'a>,\n }"}]}