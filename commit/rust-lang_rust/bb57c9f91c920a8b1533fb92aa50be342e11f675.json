{"sha": "bb57c9f91c920a8b1533fb92aa50be342e11f675", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiNTdjOWY5MWM5MjBhOGIxNTMzZmI5MmFhNTBiZTM0MmUxMWY2NzU=", "commit": {"author": {"name": "carbotaniuman", "email": "41451839+carbotaniuman@users.noreply.github.com", "date": "2020-09-09T18:44:22Z"}, "committer": {"name": "carbotaniuman", "email": "41451839+carbotaniuman@users.noreply.github.com", "date": "2020-09-09T18:44:22Z"}, "message": "Format", "tree": {"sha": "9c50102aa2d458186e7b2587d56ee8de407132d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c50102aa2d458186e7b2587d56ee8de407132d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb57c9f91c920a8b1533fb92aa50be342e11f675", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb57c9f91c920a8b1533fb92aa50be342e11f675", "html_url": "https://github.com/rust-lang/rust/commit/bb57c9f91c920a8b1533fb92aa50be342e11f675", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb57c9f91c920a8b1533fb92aa50be342e11f675/comments", "author": {"login": "carbotaniuman", "id": 41451839, "node_id": "MDQ6VXNlcjQxNDUxODM5", "avatar_url": "https://avatars.githubusercontent.com/u/41451839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carbotaniuman", "html_url": "https://github.com/carbotaniuman", "followers_url": "https://api.github.com/users/carbotaniuman/followers", "following_url": "https://api.github.com/users/carbotaniuman/following{/other_user}", "gists_url": "https://api.github.com/users/carbotaniuman/gists{/gist_id}", "starred_url": "https://api.github.com/users/carbotaniuman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carbotaniuman/subscriptions", "organizations_url": "https://api.github.com/users/carbotaniuman/orgs", "repos_url": "https://api.github.com/users/carbotaniuman/repos", "events_url": "https://api.github.com/users/carbotaniuman/events{/privacy}", "received_events_url": "https://api.github.com/users/carbotaniuman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "carbotaniuman", "id": 41451839, "node_id": "MDQ6VXNlcjQxNDUxODM5", "avatar_url": "https://avatars.githubusercontent.com/u/41451839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carbotaniuman", "html_url": "https://github.com/carbotaniuman", "followers_url": "https://api.github.com/users/carbotaniuman/followers", "following_url": "https://api.github.com/users/carbotaniuman/following{/other_user}", "gists_url": "https://api.github.com/users/carbotaniuman/gists{/gist_id}", "starred_url": "https://api.github.com/users/carbotaniuman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carbotaniuman/subscriptions", "organizations_url": "https://api.github.com/users/carbotaniuman/orgs", "repos_url": "https://api.github.com/users/carbotaniuman/repos", "events_url": "https://api.github.com/users/carbotaniuman/events{/privacy}", "received_events_url": "https://api.github.com/users/carbotaniuman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f43fa09893b664e4ceb4cc8c7815fa5ab20c10e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f43fa09893b664e4ceb4cc8c7815fa5ab20c10e", "html_url": "https://github.com/rust-lang/rust/commit/8f43fa09893b664e4ceb4cc8c7815fa5ab20c10e"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "4821c8f56762657e40a7541279714126381232ab", "filename": "library/alloc/src/rc.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bb57c9f91c920a8b1533fb92aa50be342e11f675/library%2Falloc%2Fsrc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb57c9f91c920a8b1533fb92aa50be342e11f675/library%2Falloc%2Fsrc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Frc.rs?ref=bb57c9f91c920a8b1533fb92aa50be342e11f675", "patch": "@@ -845,7 +845,7 @@ impl<T: ?Sized> Rc<T> {\n     #[unstable(feature = \"get_mut_unchecked\", issue = \"63292\")]\n     pub unsafe fn get_mut_unchecked(this: &mut Self) -> &mut T {\n         // We are careful to *not* create a reference covering the \"count\" fields, as\n-        // this would alias with reenterant access to the reference counts (e.g. by `Weak`).\n+        // this would alias with concurrent access to the reference counts (e.g. by `Weak`).\n         unsafe { &mut (*this.ptr.as_ptr()).value }\n     }\n \n@@ -2019,7 +2019,7 @@ impl<T: ?Sized> Drop for Weak<T> {\n     /// ```\n     fn drop(&mut self) {\n         let inner = if let Some(inner) = self.inner() { inner } else { return };\n-        \n+\n         inner.dec_weak();\n         // the weak count starts at 1, and will only go to zero if all\n         // the strong pointers have disappeared.\n@@ -2144,7 +2144,7 @@ trait RcInnerPtr {\n     }\n }\n \n-impl <T: ?Sized> RcInnerPtr for RcBox<T> {\n+impl<T: ?Sized> RcInnerPtr for RcBox<T> {\n     fn weak_ref(&self) -> &Cell<usize> {\n         &self.weak\n     }"}]}