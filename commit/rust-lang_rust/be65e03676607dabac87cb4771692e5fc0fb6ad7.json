{"sha": "be65e03676607dabac87cb4771692e5fc0fb6ad7", "node_id": "C_kwDOAAsO6NoAKGJlNjVlMDM2NzY2MDdkYWJhYzg3Y2I0NzcxNjkyZTVmYzBmYjZhZDc", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-08-09T17:39:09Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-09-16T03:48:42Z"}, "message": "Add `const_trait`s", "tree": {"sha": "b199375d8777ae489bda50d1fcbf0d5b58ee5685", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b199375d8777ae489bda50d1fcbf0d5b58ee5685"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be65e03676607dabac87cb4771692e5fc0fb6ad7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be65e03676607dabac87cb4771692e5fc0fb6ad7", "html_url": "https://github.com/rust-lang/rust/commit/be65e03676607dabac87cb4771692e5fc0fb6ad7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be65e03676607dabac87cb4771692e5fc0fb6ad7/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81b1810cd7b5f1cb74d498f20fa0ef5887420d33", "url": "https://api.github.com/repos/rust-lang/rust/commits/81b1810cd7b5f1cb74d498f20fa0ef5887420d33", "html_url": "https://github.com/rust-lang/rust/commit/81b1810cd7b5f1cb74d498f20fa0ef5887420d33"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "fdd56cb4eaa8e462dab96f6816813b9812df2f81", "filename": "library/core/src/borrow.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be65e03676607dabac87cb4771692e5fc0fb6ad7/library%2Fcore%2Fsrc%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be65e03676607dabac87cb4771692e5fc0fb6ad7/library%2Fcore%2Fsrc%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fborrow.rs?ref=be65e03676607dabac87cb4771692e5fc0fb6ad7", "patch": "@@ -154,6 +154,7 @@\n /// [`String`]: ../../std/string/struct.String.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_diagnostic_item = \"Borrow\"]\n+#[const_trait]\n pub trait Borrow<Borrowed: ?Sized> {\n     /// Immutably borrows from an owned value.\n     ///\n@@ -184,6 +185,7 @@ pub trait Borrow<Borrowed: ?Sized> {\n /// an underlying type by providing a mutable reference. See [`Borrow<T>`]\n /// for more information on borrowing as another type.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[const_trait]\n pub trait BorrowMut<Borrowed: ?Sized>: Borrow<Borrowed> {\n     /// Mutably borrows from an owned value.\n     ///"}, {"sha": "e598a54b4f151d8618f0b8e6388491a2484c8504", "filename": "library/core/src/iter/traits/collect.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/be65e03676607dabac87cb4771692e5fc0fb6ad7/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be65e03676607dabac87cb4771692e5fc0fb6ad7/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fcollect.rs?ref=be65e03676607dabac87cb4771692e5fc0fb6ad7", "patch": "@@ -228,6 +228,7 @@ pub trait FromIterator<A>: Sized {\n #[rustc_diagnostic_item = \"IntoIterator\"]\n #[rustc_skip_array_during_method_dispatch]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[const_trait]\n pub trait IntoIterator {\n     /// The type of the elements being iterated over.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "20bd9590422a60e4c49077b2306e90c89675a84b", "filename": "library/core/src/ops/arith.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be65e03676607dabac87cb4771692e5fc0fb6ad7/library%2Fcore%2Fsrc%2Fops%2Farith.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be65e03676607dabac87cb4771692e5fc0fb6ad7/library%2Fcore%2Fsrc%2Fops%2Farith.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Farith.rs?ref=be65e03676607dabac87cb4771692e5fc0fb6ad7", "patch": "@@ -938,6 +938,7 @@ mul_assign_impl! { usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 f32 f64 }\n )]\n #[doc(alias = \"/\")]\n #[doc(alias = \"/=\")]\n+#[const_trait]\n pub trait DivAssign<Rhs = Self> {\n     /// Performs the `/=` operation.\n     ///\n@@ -999,6 +1000,7 @@ div_assign_impl! { usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 f32 f64 }\n )]\n #[doc(alias = \"%\")]\n #[doc(alias = \"%=\")]\n+#[const_trait]\n pub trait RemAssign<Rhs = Self> {\n     /// Performs the `%=` operation.\n     ///"}, {"sha": "ec8f12cd161e7eeb592ffa696c9c5042fa383659", "filename": "library/core/src/ops/bit.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/be65e03676607dabac87cb4771692e5fc0fb6ad7/library%2Fcore%2Fsrc%2Fops%2Fbit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be65e03676607dabac87cb4771692e5fc0fb6ad7/library%2Fcore%2Fsrc%2Fops%2Fbit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Fbit.rs?ref=be65e03676607dabac87cb4771692e5fc0fb6ad7", "patch": "@@ -31,6 +31,7 @@\n #[lang = \"not\"]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[doc(alias = \"!\")]\n+#[const_trait]\n pub trait Not {\n     /// The resulting type after applying the `!` operator.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -906,6 +907,7 @@ bitxor_assign_impl! { bool usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 }\n     message = \"no implementation for `{Self} <<= {Rhs}`\",\n     label = \"no implementation for `{Self} <<= {Rhs}`\"\n )]\n+#[const_trait]\n pub trait ShlAssign<Rhs = Self> {\n     /// Performs the `<<=` operation.\n     ///\n@@ -989,6 +991,7 @@ shl_assign_impl_all! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n     message = \"no implementation for `{Self} >>= {Rhs}`\",\n     label = \"no implementation for `{Self} >>= {Rhs}`\"\n )]\n+#[const_trait]\n pub trait ShrAssign<Rhs = Self> {\n     /// Performs the `>>=` operation.\n     ///"}, {"sha": "1f2df351e96788486e247d721611d1487daf5f78", "filename": "library/core/src/ops/deref.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/be65e03676607dabac87cb4771692e5fc0fb6ad7/library%2Fcore%2Fsrc%2Fops%2Fderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be65e03676607dabac87cb4771692e5fc0fb6ad7/library%2Fcore%2Fsrc%2Fops%2Fderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Fderef.rs?ref=be65e03676607dabac87cb4771692e5fc0fb6ad7", "patch": "@@ -61,6 +61,7 @@\n #[doc(alias = \"&*\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_diagnostic_item = \"Deref\"]\n+#[const_trait]\n pub trait Deref {\n     /// The resulting type after dereferencing.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "dfde0b37acf43ff81314de1aeedd5abcb4480812", "filename": "library/core/src/ops/try_trait.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be65e03676607dabac87cb4771692e5fc0fb6ad7/library%2Fcore%2Fsrc%2Fops%2Ftry_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be65e03676607dabac87cb4771692e5fc0fb6ad7/library%2Fcore%2Fsrc%2Fops%2Ftry_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Ftry_trait.rs?ref=be65e03676607dabac87cb4771692e5fc0fb6ad7", "patch": "@@ -128,6 +128,7 @@ use crate::ops::ControlFlow;\n )]\n #[doc(alias = \"?\")]\n #[lang = \"Try\"]\n+#[const_trait]\n pub trait Try: FromResidual {\n     /// The type of the value produced by `?` when *not* short-circuiting.\n     #[unstable(feature = \"try_trait_v2\", issue = \"84277\")]\n@@ -384,6 +385,7 @@ pub trait Try: FromResidual {\n ))]\n #[rustc_diagnostic_item = \"FromResidual\"]\n #[unstable(feature = \"try_trait_v2\", issue = \"84277\")]\n+#[const_trait]\n pub trait FromResidual<R = <Self as Try>::Residual> {\n     /// Constructs the type from a compatible `Residual` type.\n     ///"}]}