{"sha": "f9f443076a662175f9d71f03607e625531743688", "node_id": "C_kwDOAAsO6NoAKGY5ZjQ0MzA3NmE2NjIxNzVmOWQ3MWYwMzYwN2U2MjU1MzE3NDM2ODg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-11T10:10:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-11T10:10:25Z"}, "message": "Auto merge of #14540 - AmrDeveloper:disallow_extract_fun_single_brace, r=Veykril\n\nFix allow extracting function from single brace of block expression\n\nFix allow extracting function when selecting either `{` or `}`\n\nFix #14514", "tree": {"sha": "d4aec121c5ab1aafe09b72014202b10153bdba25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4aec121c5ab1aafe09b72014202b10153bdba25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9f443076a662175f9d71f03607e625531743688", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9f443076a662175f9d71f03607e625531743688", "html_url": "https://github.com/rust-lang/rust/commit/f9f443076a662175f9d71f03607e625531743688", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9f443076a662175f9d71f03607e625531743688/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa3db447d79aba60d3e97901b0b455d4e38efd28", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa3db447d79aba60d3e97901b0b455d4e38efd28", "html_url": "https://github.com/rust-lang/rust/commit/fa3db447d79aba60d3e97901b0b455d4e38efd28"}, {"sha": "5ded22065ed2710c8c601273146df4b13b205741", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ded22065ed2710c8c601273146df4b13b205741", "html_url": "https://github.com/rust-lang/rust/commit/5ded22065ed2710c8c601273146df4b13b205741"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "bfa2890676beafa0636038c3a2a8be8fa5b2aa6c", "filename": "crates/ide-assists/src/handlers/extract_function.rs", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/f9f443076a662175f9d71f03607e625531743688/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9f443076a662175f9d71f03607e625531743688/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=f9f443076a662175f9d71f03607e625531743688", "patch": "@@ -70,6 +70,11 @@ pub(crate) fn extract_function(acc: &mut Assists, ctx: &AssistContext<'_>) -> Op\n     }\n \n     let node = ctx.covering_element();\n+    if matches!(node.kind(), T!['{'] | T!['}'] | T!['('] | T![')'] | T!['['] | T![']']) {\n+        cov_mark::hit!(extract_function_in_braces_is_not_applicable);\n+        return None;\n+    }\n+\n     if node.kind() == COMMENT {\n         cov_mark::hit!(extract_function_in_comment_is_not_applicable);\n         return None;\n@@ -5800,4 +5805,40 @@ fn $0fun_name() -> ControlFlow<()> {\n \"#,\n         );\n     }\n+\n+    #[test]\n+    fn in_left_curly_is_not_applicable() {\n+        cov_mark::check!(extract_function_in_braces_is_not_applicable);\n+        check_assist_not_applicable(extract_function, r\"fn foo() { $0}$0\");\n+    }\n+\n+    #[test]\n+    fn in_right_curly_is_not_applicable() {\n+        cov_mark::check!(extract_function_in_braces_is_not_applicable);\n+        check_assist_not_applicable(extract_function, r\"fn foo() $0{$0 }\");\n+    }\n+\n+    #[test]\n+    fn in_left_paren_is_not_applicable() {\n+        cov_mark::check!(extract_function_in_braces_is_not_applicable);\n+        check_assist_not_applicable(extract_function, r\"fn foo( $0)$0 { }\");\n+    }\n+\n+    #[test]\n+    fn in_right_paren_is_not_applicable() {\n+        cov_mark::check!(extract_function_in_braces_is_not_applicable);\n+        check_assist_not_applicable(extract_function, r\"fn foo $0($0 ) { }\");\n+    }\n+\n+    #[test]\n+    fn in_left_brack_is_not_applicable() {\n+        cov_mark::check!(extract_function_in_braces_is_not_applicable);\n+        check_assist_not_applicable(extract_function, r\"fn foo(arr: &mut [i32$0]$0) {}\");\n+    }\n+\n+    #[test]\n+    fn in_right_brack_is_not_applicable() {\n+        cov_mark::check!(extract_function_in_braces_is_not_applicable);\n+        check_assist_not_applicable(extract_function, r\"fn foo(arr: &mut $0[$0i32]) {}\");\n+    }\n }"}]}