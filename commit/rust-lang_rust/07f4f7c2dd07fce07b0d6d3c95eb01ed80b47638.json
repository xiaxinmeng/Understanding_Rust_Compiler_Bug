{"sha": "07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638", "node_id": "C_kwDOAAsO6NoAKDA3ZjRmN2MyZGQwN2ZjZTA3YjBkNmQzYzk1ZWIwMWVkODBiNDc2Mzg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-07T06:06:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-07T06:06:26Z"}, "message": "Auto merge of #7917 - Alexendoo:cargo-dev-lint, r=giraffate\n\nAdd `cargo dev lint` to manually run clippy on a file\n\nI found the manual run command really useful, this makes it a bit easier to type\n\nNot sure if this belongs in the changelog or not\n\nchangelog: Add `cargo dev lint` to manually run clippy on a file", "tree": {"sha": "f5e11dda2cd1f046d1bc7cd8102d44e8d8da6d53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5e11dda2cd1f046d1bc7cd8102d44e8d8da6d53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638", "html_url": "https://github.com/rust-lang/rust/commit/07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3d1e60ed961c581092af4daa0442fc43b9c6068", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3d1e60ed961c581092af4daa0442fc43b9c6068", "html_url": "https://github.com/rust-lang/rust/commit/e3d1e60ed961c581092af4daa0442fc43b9c6068"}, {"sha": "b5bae091849dc02b7aded5026cf1e2b5497db318", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5bae091849dc02b7aded5026cf1e2b5497db318", "html_url": "https://github.com/rust-lang/rust/commit/b5bae091849dc02b7aded5026cf1e2b5497db318"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "59fde447547145f3093b5054112bd58dd6ec8b7e", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638", "patch": "@@ -7,6 +7,7 @@ use std::path::PathBuf;\n \n pub mod bless;\n pub mod fmt;\n+pub mod lint;\n pub mod new_lint;\n pub mod serve;\n pub mod setup;"}, {"sha": "dfd16f7105438c3b8df74cf26b875e8491509675", "filename": "clippy_dev/src/lint.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638/clippy_dev%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638/clippy_dev%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flint.rs?ref=07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638", "patch": "@@ -0,0 +1,20 @@\n+use std::process::{self, Command};\n+\n+pub fn run(filename: &str) {\n+    let code = Command::new(\"cargo\")\n+        .args([\"run\", \"--bin\", \"clippy-driver\", \"--\"])\n+        .args([\"-L\", \"./target/debug\"])\n+        .args([\"-Z\", \"no-codegen\"])\n+        .args([\"--edition\", \"2021\"])\n+        .arg(filename)\n+        .env(\"__CLIPPY_INTERNAL_TESTS\", \"true\")\n+        .status()\n+        .expect(\"failed to run cargo\")\n+        .code();\n+\n+    if code.is_none() {\n+        eprintln!(\"Killed by signal\");\n+    }\n+\n+    process::exit(code.unwrap_or(1));\n+}"}, {"sha": "30a241c8ba151e1cfa3b1385156f13ddd892eb06", "filename": "clippy_dev/src/main.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638", "patch": "@@ -3,7 +3,7 @@\n #![warn(rust_2018_idioms, unused_lifetimes)]\n \n use clap::{App, AppSettings, Arg, ArgMatches, SubCommand};\n-use clippy_dev::{bless, fmt, new_lint, serve, setup, update_lints};\n+use clippy_dev::{bless, fmt, lint, new_lint, serve, setup, update_lints};\n fn main() {\n     let matches = get_clap_config();\n \n@@ -55,6 +55,10 @@ fn main() {\n             let lint = matches.value_of(\"lint\");\n             serve::run(port, lint);\n         },\n+        (\"lint\", Some(matches)) => {\n+            let filename = matches.value_of(\"filename\").unwrap();\n+            lint::run(filename);\n+        },\n         _ => {},\n     }\n }\n@@ -219,5 +223,14 @@ fn get_clap_config<'a>() -> ArgMatches<'a> {\n                 )\n                 .arg(Arg::with_name(\"lint\").help(\"Which lint's page to load initially (optional)\")),\n         )\n+        .subcommand(\n+            SubCommand::with_name(\"lint\")\n+                .about(\"Manually run clippy on a file\")\n+                .arg(\n+                    Arg::with_name(\"filename\")\n+                        .required(true)\n+                        .help(\"The path to a file to lint\"),\n+                ),\n+        )\n         .get_matches()\n }"}, {"sha": "26d06d334cd804809e63889ec164ec7e75a53769", "filename": "doc/adding_lints.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638/doc%2Fadding_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638/doc%2Fadding_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fadding_lints.md?ref=07f4f7c2dd07fce07b0d6d3c95eb01ed80b47638", "patch": "@@ -157,7 +157,7 @@ Manually testing against an example file can be useful if you have added some\n your local modifications, run\n \n ```\n-env __CLIPPY_INTERNAL_TESTS=true cargo run --bin clippy-driver -- -L ./target/debug input.rs\n+cargo dev lint input.rs\n ```\n \n from the working copy root. With tests in place, let's have a look at"}]}