{"sha": "e396f992558746689e1d562c5a6bb0b92bf70b93", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzOTZmOTkyNTU4NzQ2Njg5ZTFkNTYyYzVhNmJiMGI5MmJmNzBiOTM=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-05-23T07:47:53Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-05-24T10:11:52Z"}, "message": "Don't arena-allocate static symbols.\n\nIt's just a waste of memory. This also gets rid of the special case for\n\"\".", "tree": {"sha": "f9062228e68f0a8062ed1209a33d94f0c5d3b772", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9062228e68f0a8062ed1209a33d94f0c5d3b772"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e396f992558746689e1d562c5a6bb0b92bf70b93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e396f992558746689e1d562c5a6bb0b92bf70b93", "html_url": "https://github.com/rust-lang/rust/commit/e396f992558746689e1d562c5a6bb0b92bf70b93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e396f992558746689e1d562c5a6bb0b92bf70b93/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27cc0db7a248308fc2634ac68d7608a20b4a1c09", "url": "https://api.github.com/repos/rust-lang/rust/commits/27cc0db7a248308fc2634ac68d7608a20b4a1c09", "html_url": "https://github.com/rust-lang/rust/commit/27cc0db7a248308fc2634ac68d7608a20b4a1c09"}], "stats": {"total": 19, "additions": 6, "deletions": 13}, "files": [{"sha": "26422e891c53643846c5a095479022c6113982d5", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e396f992558746689e1d562c5a6bb0b92bf70b93/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e396f992558746689e1d562c5a6bb0b92bf70b93/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=e396f992558746689e1d562c5a6bb0b92bf70b93", "patch": "@@ -866,20 +866,13 @@ pub struct Interner {\n }\n \n impl Interner {\n-    fn prefill(init: &[&str]) -> Self {\n-        let mut this = Interner::default();\n-        this.names.reserve(init.len());\n-        this.strings.reserve(init.len());\n-\n-        // We can't allocate empty strings in the arena, so handle this here.\n-        assert!(kw::Invalid.as_u32() == 0 && init[0].is_empty());\n-        this.names.insert(\"\", kw::Invalid);\n-        this.strings.push(\"\");\n-\n-        for string in &init[1..] {\n-            this.intern(string);\n+    fn prefill(init: &[&'static str]) -> Self {\n+        let symbols = (0 .. init.len() as u32).map(Symbol::new);\n+        Interner {\n+            strings: init.to_vec(),\n+            names: init.iter().copied().zip(symbols).collect(),\n+            ..Default::default()\n         }\n-        this\n     }\n \n     pub fn intern(&mut self, string: &str) -> Symbol {"}]}