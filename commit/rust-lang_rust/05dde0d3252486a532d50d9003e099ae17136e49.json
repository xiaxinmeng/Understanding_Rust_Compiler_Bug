{"sha": "05dde0d3252486a532d50d9003e099ae17136e49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1ZGRlMGQzMjUyNDg2YTUzMmQ1MGQ5MDAzZTA5OWFlMTcxMzZlNDk=", "commit": {"author": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-11-05T21:59:55Z"}, "committer": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-11-25T22:21:23Z"}, "message": "book: miscellaneous improvements to \"dining philosophers\" example", "tree": {"sha": "bc654e1516fe3fbe7a7830b0fc1aea78425f59e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc654e1516fe3fbe7a7830b0fc1aea78425f59e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05dde0d3252486a532d50d9003e099ae17136e49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05dde0d3252486a532d50d9003e099ae17136e49", "html_url": "https://github.com/rust-lang/rust/commit/05dde0d3252486a532d50d9003e099ae17136e49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05dde0d3252486a532d50d9003e099ae17136e49/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3dfb2c45fa3a2da312fc2dbc36aa0c3a06319eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3dfb2c45fa3a2da312fc2dbc36aa0c3a06319eb", "html_url": "https://github.com/rust-lang/rust/commit/e3dfb2c45fa3a2da312fc2dbc36aa0c3a06319eb"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "a0f629c32e3fba3fda7c5012e3bd3acf463fa2bb", "filename": "src/doc/book/dining-philosophers.md", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/05dde0d3252486a532d50d9003e099ae17136e49/src%2Fdoc%2Fbook%2Fdining-philosophers.md", "raw_url": "https://github.com/rust-lang/rust/raw/05dde0d3252486a532d50d9003e099ae17136e49/src%2Fdoc%2Fbook%2Fdining-philosophers.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fdining-philosophers.md?ref=05dde0d3252486a532d50d9003e099ae17136e49", "patch": "@@ -148,7 +148,7 @@ short strings anyway.\n One last thing you\u2019ll notice: we just define a `Philosopher`, and seemingly\n don\u2019t do anything with it. Rust is an \u2018expression based\u2019 language, which means\n that almost everything in Rust is an expression which returns a value. This is\n-true of functions as well, the last expression is automatically returned. Since\n+true of functions as well \u2014 the last expression is automatically returned. Since\n we create a new `Philosopher` as the last expression of this function, we end\n up returning it.\n \n@@ -178,8 +178,8 @@ fn main() {\n }\n ```\n \n-Here, we create five variable bindings with five new philosophers. These are my\n-favorite five, but you can substitute anyone you want. If we _didn\u2019t_ define\n+Here, we create five variable bindings with five new philosophers.\n+If we _didn\u2019t_ define\n that `new()` function, it would look like this:\n \n ```rust\n@@ -440,10 +440,13 @@ closure as an argument and calls that closure on each element in turn.\n Here\u2019s where the concurrency happens. The `thread::spawn` function takes a closure\n as an argument and executes that closure in a new thread. This closure needs\n an extra annotation, `move`, to indicate that the closure is going to take\n-ownership of the values it\u2019s capturing. Primarily, the `p` variable of the\n+ownership of the values it\u2019s capturing. In this case, it's the `p` variable of the\n `map` function.\n \n-Inside the thread, all we do is call `eat()` on `p`. Also note that the call to `thread::spawn` lacks a trailing semicolon, making this an expression. This distinction is important, yielding the correct return value. For more details, read [Expressions vs. Statements][es].\n+Inside the thread, all we do is call `eat()` on `p`. Also note that\n+the call to `thread::spawn` lacks a trailing semicolon, making this an\n+expression. This distinction is important, yielding the correct return\n+value. For more details, read [Expressions vs. Statements][es].\n \n [es]: functions.html#expressions-vs-statements\n "}]}