{"sha": "41fb8f77ee10221db319096ee45a56a29f013564", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZmI4Zjc3ZWUxMDIyMWRiMzE5MDk2ZWU0NWE1NmEyOWYwMTM1NjQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-10-09T00:03:04Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-11-21T20:49:51Z"}, "message": "core: Add from_u32 to the Char trait\n\nThis is the only free function not part of the trait.", "tree": {"sha": "d49f49b21b51cafdcd53218b3362f0d5d9b45328", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d49f49b21b51cafdcd53218b3362f0d5d9b45328"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41fb8f77ee10221db319096ee45a56a29f013564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41fb8f77ee10221db319096ee45a56a29f013564", "html_url": "https://github.com/rust-lang/rust/commit/41fb8f77ee10221db319096ee45a56a29f013564", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41fb8f77ee10221db319096ee45a56a29f013564/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f530aa08dfcdaeb249341bdd1a9797780b4294c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f530aa08dfcdaeb249341bdd1a9797780b4294c2", "html_url": "https://github.com/rust-lang/rust/commit/f530aa08dfcdaeb249341bdd1a9797780b4294c2"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "db58f802643b1b1f1ab0501c9ac0ca9354140922", "filename": "src/libcore/char.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41fb8f77ee10221db319096ee45a56a29f013564/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41fb8f77ee10221db319096ee45a56a29f013564/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=41fb8f77ee10221db319096ee45a56a29f013564", "patch": "@@ -270,6 +270,9 @@ pub trait Char {\n     /// Panics if given a radix > 36.\n     fn from_digit(num: uint, radix: uint) -> Option<Self>;\n \n+    /// Converts from `u32` to a `char`\n+    fn from_u32(i: u32) -> Option<char>;\n+\n     /// Returns the hexadecimal Unicode escape of a character.\n     ///\n     /// The rules are as follows:\n@@ -319,6 +322,9 @@ impl Char for char {\n \n     fn from_digit(num: uint, radix: uint) -> Option<char> { from_digit(num, radix) }\n \n+    #[inline]\n+    fn from_u32(i: u32) -> Option<char> { from_u32(i) }\n+\n     fn escape_unicode(&self, f: |char|) { escape_unicode(*self, f) }\n \n     fn escape_default(&self, f: |char|) { escape_default(*self, f) }"}]}