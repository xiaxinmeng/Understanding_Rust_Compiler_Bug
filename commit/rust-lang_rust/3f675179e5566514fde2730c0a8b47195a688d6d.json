{"sha": "3f675179e5566514fde2730c0a8b47195a688d6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNjc1MTc5ZTU1NjY1MTRmZGUyNzMwYzBhOGI0NzE5NWE2ODhkNmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-14T17:56:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-14T17:56:07Z"}, "message": "Add fs2 module for better error messages", "tree": {"sha": "bfbf6346e0e7240f56b28de22af8eb2c16c9e89a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfbf6346e0e7240f56b28de22af8eb2c16c9e89a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f675179e5566514fde2730c0a8b47195a688d6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f675179e5566514fde2730c0a8b47195a688d6d", "html_url": "https://github.com/rust-lang/rust/commit/3f675179e5566514fde2730c0a8b47195a688d6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f675179e5566514fde2730c0a8b47195a688d6d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "705f8820c93277768ddc38a743b1ce02a97a9750", "url": "https://api.github.com/repos/rust-lang/rust/commits/705f8820c93277768ddc38a743b1ce02a97a9750", "html_url": "https://github.com/rust-lang/rust/commit/705f8820c93277768ddc38a743b1ce02a97a9750"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "cebb14abcf6e57afe4958519f6ee349569bbf347", "filename": "xtask/src/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3f675179e5566514fde2730c0a8b47195a688d6d/xtask%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f675179e5566514fde2730c0a8b47195a688d6d/xtask%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Flib.rs?ref=3f675179e5566514fde2730c0a8b47195a688d6d", "patch": "@@ -17,7 +17,7 @@ use std::{\n \n use crate::{\n     codegen::Mode,\n-    not_bash::{pushd, run},\n+    not_bash::{fs2, pushd, run},\n };\n \n pub use anyhow::Result;\n@@ -167,11 +167,11 @@ pub fn run_release(dry_run: bool) -> Result<()> {\n     }\n \n     let website_root = project_root().join(\"../rust-analyzer.github.io\");\n-    let changelog_dir = website_root.join(\"/thisweek/_posts\");\n+    let changelog_dir = website_root.join(\"./thisweek/_posts\");\n \n     let today = run!(\"date --iso\")?;\n     let commit = run!(\"git rev-parse HEAD\")?;\n-    let changelog_n = fs::read_dir(changelog_dir.as_path())?.count();\n+    let changelog_n = fs2::read_dir(changelog_dir.as_path())?.count();\n \n     let contents = format!(\n         \"\\\n@@ -194,9 +194,9 @@ Release: release:{}[]\n     );\n \n     let path = changelog_dir.join(format!(\"{}-changelog-{}.adoc\", today, changelog_n));\n-    fs::write(&path, &contents)?;\n+    fs2::write(&path, &contents)?;\n \n-    fs::copy(project_root().join(\"./docs/user/readme.adoc\"), website_root.join(\"manual.adoc\"))?;\n+    fs2::copy(project_root().join(\"./docs/user/readme.adoc\"), website_root.join(\"manual.adoc\"))?;\n \n     Ok(())\n }"}, {"sha": "027571b62c73e4df2a683939e27d49ecdcc1247e", "filename": "xtask/src/not_bash.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3f675179e5566514fde2730c0a8b47195a688d6d/xtask%2Fsrc%2Fnot_bash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f675179e5566514fde2730c0a8b47195a688d6d/xtask%2Fsrc%2Fnot_bash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fnot_bash.rs?ref=3f675179e5566514fde2730c0a8b47195a688d6d", "patch": "@@ -10,6 +10,29 @@ use std::{\n \n use anyhow::{bail, Context, Result};\n \n+pub mod fs2 {\n+    use std::{fs, path::Path};\n+\n+    use anyhow::{Context, Result};\n+\n+    pub fn read_dir<P: AsRef<Path>>(path: P) -> Result<fs::ReadDir> {\n+        let path = path.as_ref();\n+        fs::read_dir(path).with_context(|| format!(\"Failed to read {}\", path.display()))\n+    }\n+\n+    pub fn write<P: AsRef<Path>, C: AsRef<[u8]>>(path: P, contents: C) -> Result<()> {\n+        let path = path.as_ref();\n+        fs::write(path, contents).with_context(|| format!(\"Failed to write {}\", path.display()))\n+    }\n+\n+    pub fn copy<P: AsRef<Path>, Q: AsRef<Path>>(from: P, to: Q) -> Result<u64> {\n+        let from = from.as_ref();\n+        let to = to.as_ref();\n+        fs::copy(from, to)\n+            .with_context(|| format!(\"Failed to copy {} to {}\", from.display(), to.display()))\n+    }\n+}\n+\n macro_rules! _run {\n     ($($expr:expr),*) => {\n         run!($($expr),*; echo = true)"}]}