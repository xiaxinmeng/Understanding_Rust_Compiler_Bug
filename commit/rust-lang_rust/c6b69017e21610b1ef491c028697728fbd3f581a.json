{"sha": "c6b69017e21610b1ef491c028697728fbd3f581a", "node_id": "C_kwDOAAsO6NoAKGM2YjY5MDE3ZTIxNjEwYjFlZjQ5MWMwMjg2OTc3MjhmYmQzZjU4MWE", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-10-25T13:34:59Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-10-25T14:04:57Z"}, "message": "expose default substs in param_env", "tree": {"sha": "c37a8bf438ee113bcc85bc1f5e6c7b54a787283e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c37a8bf438ee113bcc85bc1f5e6c7b54a787283e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6b69017e21610b1ef491c028697728fbd3f581a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6b69017e21610b1ef491c028697728fbd3f581a", "html_url": "https://github.com/rust-lang/rust/commit/c6b69017e21610b1ef491c028697728fbd3f581a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6b69017e21610b1ef491c028697728fbd3f581a/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa5740c715001f981515ed46faaddebf67cb9539", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa5740c715001f981515ed46faaddebf67cb9539", "html_url": "https://github.com/rust-lang/rust/commit/aa5740c715001f981515ed46faaddebf67cb9539"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "af3706f886e9cbce53fb4e6be54c5ee1872432e4", "filename": "compiler/rustc_ty_utils/src/ty.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c6b69017e21610b1ef491c028697728fbd3f581a/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6b69017e21610b1ef491c028697728fbd3f581a/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs?ref=c6b69017e21610b1ef491c028697728fbd3f581a", "patch": "@@ -247,6 +247,7 @@ fn trait_of_item(tcx: TyCtxt<'_>, def_id: DefId) -> Option<DefId> {\n }\n \n /// See `ParamEnv` struct definition for details.\n+#[instrument(level = \"debug\", skip(tcx))]\n fn param_env(tcx: TyCtxt<'_>, def_id: DefId) -> ty::ParamEnv<'_> {\n     // The param_env of an impl Trait type is its defining function's param_env\n     if let Some(parent) = ty::is_impl_trait_defn(tcx, def_id) {\n@@ -274,9 +275,20 @@ fn param_env(tcx: TyCtxt<'_>, def_id: DefId) -> ty::ParamEnv<'_> {\n         predicates.extend(environment);\n     }\n \n+    // It's important that we include the default substs in unevaluated\n+    // constants, since `Unevaluated` instances in predicates whose substs are None\n+    // can lead to \"duplicate\" caller bounds candidates during trait selection,\n+    // duplicate in the sense that both have their default substs, but the\n+    // candidate that resulted from a superpredicate still uses `None` in its\n+    // `substs_` field of `Unevaluated` to indicate that it has its default substs,\n+    // whereas the other candidate has `substs_: Some(default_substs)`, see\n+    // issue #89334\n+    predicates = tcx.expose_default_const_substs(predicates);\n+\n     let unnormalized_env =\n         ty::ParamEnv::new(tcx.intern_predicates(&predicates), traits::Reveal::UserFacing);\n \n+    debug!(\"unnormalized_env caller bounds: {:?}\", unnormalized_env.caller_bounds());\n     let body_id = def_id\n         .as_local()\n         .map(|def_id| tcx.hir().local_def_id_to_hir_id(def_id))"}]}