{"sha": "84e4bc54e0042d2db086cc5b385372a7ae4c49f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0ZTRiYzU0ZTAwNDJkMmRiMDg2Y2M1YjM4NTM3MmE3YWU0YzQ5ZjM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-20T01:55:23Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-20T01:56:02Z"}, "message": "Remove trailing whitespaces", "tree": {"sha": "cd0ce1bc1c46f48b2808edeb6e8a615008dab6cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd0ce1bc1c46f48b2808edeb6e8a615008dab6cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84e4bc54e0042d2db086cc5b385372a7ae4c49f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84e4bc54e0042d2db086cc5b385372a7ae4c49f3", "html_url": "https://github.com/rust-lang/rust/commit/84e4bc54e0042d2db086cc5b385372a7ae4c49f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84e4bc54e0042d2db086cc5b385372a7ae4c49f3/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95c369fa9168d2eee08d1a693dc1c63872fe46c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/95c369fa9168d2eee08d1a693dc1c63872fe46c0", "html_url": "https://github.com/rust-lang/rust/commit/95c369fa9168d2eee08d1a693dc1c63872fe46c0"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "deecbf80a228272ad80e86ccc3b3ac08a1748230", "filename": "doc/adding_lints.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/84e4bc54e0042d2db086cc5b385372a7ae4c49f3/doc%2Fadding_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/84e4bc54e0042d2db086cc5b385372a7ae4c49f3/doc%2Fadding_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fadding_lints.md?ref=84e4bc54e0042d2db086cc5b385372a7ae4c49f3", "patch": "@@ -55,7 +55,7 @@ we want to check. The output of Clippy is compared against a `.stderr` file.\n Note that you don't have to create this file yourself, we'll get to\n generating the `.stderr` files further down.\n \n-We start by opening the test file created at `tests/ui/foo_functions.rs`. \n+We start by opening the test file created at `tests/ui/foo_functions.rs`.\n \n Update the file with some examples to get started:\n \n@@ -102,7 +102,7 @@ Once we are satisfied with the output, we need to run\n `tests/ui/update-all-references.sh` to update the `.stderr` file for our lint.\n Please note that, we should run `TESTNAME=foo_functions cargo uitest`\n every time before running `tests/ui/update-all-references.sh`.\n-Running `TESTNAME=foo_functions cargo uitest` should pass then. When we commit \n+Running `TESTNAME=foo_functions cargo uitest` should pass then. When we commit\n our lint, we need to commit the generated `.stderr` files, too.\n \n ### Rustfix tests\n@@ -133,7 +133,7 @@ With tests in place, let's have a look at implementing our lint now.\n \n ### Lint declaration\n \n-Let's start by opening the new file created in the `clippy_lints` crate \n+Let's start by opening the new file created in the `clippy_lints` crate\n at `clippy_lints/src/foo_functions.rs`. That's the crate where all the\n lint code is. This file has already imported some initial things we will need:\n \n@@ -178,7 +178,7 @@ state the thing that is being checked for and read well when used with\n * The last part should be a text that explains what exactly is wrong with the\n   code\n \n-The rest of this file contains an empty implementation for our lint pass, \n+The rest of this file contains an empty implementation for our lint pass,\n which in this case is `EarlyLintPass` and should look like this:\n \n ```rust\n@@ -194,7 +194,7 @@ impl EarlyLintPass for FooFunctions {}\n Don't worry about the `name` method here. As long as it includes the name of the\n lint pass it should be fine.\n \n-The new lint automation runs `update_lints`, which automates some things, but it \n+The new lint automation runs `update_lints`, which automates some things, but it\n doesn't automate everything. We will have to register our lint pass manually in\n the `register_plugins` function in `clippy_lints/src/lib.rs`:\n "}]}