{"sha": "5d6d26c241b785daef873a0c6b9a0553c3a9451d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkNmQyNmMyNDFiNzg1ZGFlZjg3M2EwYzZiOWEwNTUzYzNhOTQ1MWQ=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2015-10-23T21:01:11Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2015-10-23T21:22:29Z"}, "message": "object_safety: check whether a supertrait contains Self even without being it\n\nThis is a [breaking-change]:lang, but the broken code does not make\nmuch sense.\n\nFixes #26056", "tree": {"sha": "889348343adb951e82b48a68c26a9fc600eccf51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/889348343adb951e82b48a68c26a9fc600eccf51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d6d26c241b785daef873a0c6b9a0553c3a9451d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d6d26c241b785daef873a0c6b9a0553c3a9451d", "html_url": "https://github.com/rust-lang/rust/commit/5d6d26c241b785daef873a0c6b9a0553c3a9451d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d6d26c241b785daef873a0c6b9a0553c3a9451d/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ee4e9e7ec59c7db2d76fcb53719e5b31b43e499", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ee4e9e7ec59c7db2d76fcb53719e5b31b43e499", "html_url": "https://github.com/rust-lang/rust/commit/7ee4e9e7ec59c7db2d76fcb53719e5b31b43e499"}], "stats": {"total": 46, "additions": 36, "deletions": 10}, "files": [{"sha": "934c35fa20bc8c1e7eb90f12725e062991dc5c2c", "filename": "src/librustc/middle/traits/object_safety.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5d6d26c241b785daef873a0c6b9a0553c3a9451d/src%2Flibrustc%2Fmiddle%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d6d26c241b785daef873a0c6b9a0553c3a9451d/src%2Flibrustc%2Fmiddle%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fobject_safety.rs?ref=5d6d26c241b785daef873a0c6b9a0553c3a9451d", "patch": "@@ -23,7 +23,7 @@ use super::elaborate_predicates;\n use middle::def_id::DefId;\n use middle::subst::{self, SelfSpace, TypeSpace};\n use middle::traits;\n-use middle::ty::{self, ToPolyTraitRef, Ty};\n+use middle::ty::{self, HasTypeFlags, ToPolyTraitRef, Ty};\n use std::rc::Rc;\n use syntax::ast;\n \n@@ -158,7 +158,7 @@ pub fn supertraits_reference_self<'tcx>(tcx: &ty::ctxt<'tcx>,\n                     data.0.trait_ref.substs.types.get_slice(TypeSpace)\n                                                  .iter()\n                                                  .cloned()\n-                                                 .any(is_self)\n+                                                 .any(|t| t.has_self_ty())\n                 }\n                 ty::Predicate::Projection(..) |\n                 ty::Predicate::WellFormed(..) |\n@@ -198,7 +198,7 @@ fn generics_require_sized_self<'tcx>(tcx: &ty::ctxt<'tcx>,\n         .any(|predicate| {\n             match predicate {\n                 ty::Predicate::Trait(ref trait_pred) if trait_pred.def_id() == sized_def_id => {\n-                    is_self(trait_pred.0.self_ty())\n+                    trait_pred.0.self_ty().is_self()\n                 }\n                 ty::Predicate::Projection(..) |\n                 ty::Predicate::Trait(..) |\n@@ -376,10 +376,3 @@ fn contains_illegal_self_type_reference<'tcx>(tcx: &ty::ctxt<'tcx>,\n \n     error\n }\n-\n-fn is_self<'tcx>(ty: Ty<'tcx>) -> bool {\n-    match ty.sty {\n-        ty::TyParam(ref data) => data.space == subst::SelfSpace,\n-        _ => false,\n-    }\n-}"}, {"sha": "4e9cbc4f283b4e12a2d3b950e99dfce3505f177f", "filename": "src/test/compile-fail/issue-26056.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/5d6d26c241b785daef873a0c6b9a0553c3a9451d/src%2Ftest%2Fcompile-fail%2Fissue-26056.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d6d26c241b785daef873a0c6b9a0553c3a9451d/src%2Ftest%2Fcompile-fail%2Fissue-26056.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-26056.rs?ref=5d6d26c241b785daef873a0c6b9a0553c3a9451d", "patch": "@@ -0,0 +1,33 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait MapLookup<Q> {\n+    type MapValue;\n+}\n+\n+impl<K> MapLookup<K> for K {\n+    type MapValue = K;\n+}\n+\n+trait Map: MapLookup<<Self as Map>::Key> {\n+    type Key;\n+}\n+\n+impl<K> Map for K {\n+    type Key = K;\n+}\n+\n+\n+fn main() {\n+    let _ = &()\n+        as &Map<Key=u32,MapValue=u32>;\n+    //~^ ERROR the trait `Map` cannot be made into an object\n+    //~| NOTE the trait cannot use `Self` as a type parameter\n+}"}]}