{"sha": "e4ac4c2e1a162eedd2f5ec1737fc3260a97268a2", "node_id": "C_kwDOAAsO6NoAKGU0YWM0YzJlMWExNjJlZWRkMmY1ZWMxNzM3ZmMzMjYwYTk3MjY4YTI", "commit": {"author": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-10-15T10:06:02Z"}, "committer": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-10-15T10:12:47Z"}, "message": "Add test on `unnecessary_sort_by` when argument does not implement `Ord`", "tree": {"sha": "af5c719a5b28d4ad064d040ed94b0acbca475511", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af5c719a5b28d4ad064d040ed94b0acbca475511"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4ac4c2e1a162eedd2f5ec1737fc3260a97268a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4ac4c2e1a162eedd2f5ec1737fc3260a97268a2", "html_url": "https://github.com/rust-lang/rust/commit/e4ac4c2e1a162eedd2f5ec1737fc3260a97268a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4ac4c2e1a162eedd2f5ec1737fc3260a97268a2/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec5071931eb68a981d14eefd7f6c39bb16c59596", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec5071931eb68a981d14eefd7f6c39bb16c59596", "html_url": "https://github.com/rust-lang/rust/commit/ec5071931eb68a981d14eefd7f6c39bb16c59596"}], "stats": {"total": 34, "additions": 22, "deletions": 12}, "files": [{"sha": "d806d620b176a3efd702bef0b00b0fb4755ce1dd", "filename": "tests/ui/unnecessary_sort_by.fixed", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e4ac4c2e1a162eedd2f5ec1737fc3260a97268a2/tests%2Fui%2Funnecessary_sort_by.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e4ac4c2e1a162eedd2f5ec1737fc3260a97268a2/tests%2Fui%2Funnecessary_sort_by.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_sort_by.fixed?ref=e4ac4c2e1a162eedd2f5ec1737fc3260a97268a2", "patch": "@@ -2,6 +2,7 @@\n \n #![allow(clippy::stable_sort_primitive)]\n \n+use std::cell::Ref;\n use std::cmp::Reverse;\n \n fn unnecessary_sort_by() {\n@@ -33,6 +34,10 @@ fn unnecessary_sort_by() {\n     // `Reverse(b)` would borrow in the following cases, don't lint\n     vec.sort_by(|a, b| b.cmp(a));\n     vec.sort_unstable_by(|a, b| b.cmp(a));\n+\n+    // No warning if element does not implement `Ord`\n+    let mut vec: Vec<Ref<usize>> = Vec::new();\n+    vec.sort_unstable_by(|a, b| a.cmp(b));\n }\n \n // Do not suggest returning a reference to the closure parameter of `Vec::sort_by_key`"}, {"sha": "6ee9c3af455dfbd39c98264d2f9f386b5bc8a85b", "filename": "tests/ui/unnecessary_sort_by.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e4ac4c2e1a162eedd2f5ec1737fc3260a97268a2/tests%2Fui%2Funnecessary_sort_by.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4ac4c2e1a162eedd2f5ec1737fc3260a97268a2/tests%2Fui%2Funnecessary_sort_by.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_sort_by.rs?ref=e4ac4c2e1a162eedd2f5ec1737fc3260a97268a2", "patch": "@@ -2,6 +2,7 @@\n \n #![allow(clippy::stable_sort_primitive)]\n \n+use std::cell::Ref;\n use std::cmp::Reverse;\n \n fn unnecessary_sort_by() {\n@@ -33,6 +34,10 @@ fn unnecessary_sort_by() {\n     // `Reverse(b)` would borrow in the following cases, don't lint\n     vec.sort_by(|a, b| b.cmp(a));\n     vec.sort_unstable_by(|a, b| b.cmp(a));\n+\n+    // No warning if element does not implement `Ord`\n+    let mut vec: Vec<Ref<usize>> = Vec::new();\n+    vec.sort_unstable_by(|a, b| a.cmp(b));\n }\n \n // Do not suggest returning a reference to the closure parameter of `Vec::sort_by_key`"}, {"sha": "ca9641e880316533eda97e7f6904efccc7297380", "filename": "tests/ui/unnecessary_sort_by.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e4ac4c2e1a162eedd2f5ec1737fc3260a97268a2/tests%2Fui%2Funnecessary_sort_by.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e4ac4c2e1a162eedd2f5ec1737fc3260a97268a2/tests%2Fui%2Funnecessary_sort_by.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_sort_by.stderr?ref=e4ac4c2e1a162eedd2f5ec1737fc3260a97268a2", "patch": "@@ -1,73 +1,73 @@\n error: use Vec::sort here instead\n-  --> $DIR/unnecessary_sort_by.rs:14:5\n+  --> $DIR/unnecessary_sort_by.rs:15:5\n    |\n LL |     vec.sort_by(|a, b| a.cmp(b));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort()`\n    |\n    = note: `-D clippy::unnecessary-sort-by` implied by `-D warnings`\n \n error: use Vec::sort here instead\n-  --> $DIR/unnecessary_sort_by.rs:15:5\n+  --> $DIR/unnecessary_sort_by.rs:16:5\n    |\n LL |     vec.sort_unstable_by(|a, b| a.cmp(b));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort_unstable()`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:16:5\n+  --> $DIR/unnecessary_sort_by.rs:17:5\n    |\n LL |     vec.sort_by(|a, b| (a + 5).abs().cmp(&(b + 5).abs()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort_by_key(|a| (a + 5).abs())`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:17:5\n+  --> $DIR/unnecessary_sort_by.rs:18:5\n    |\n LL |     vec.sort_unstable_by(|a, b| id(-a).cmp(&id(-b)));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort_unstable_by_key(|a| id(-a))`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:20:5\n+  --> $DIR/unnecessary_sort_by.rs:21:5\n    |\n LL |     vec.sort_by(|a, b| (b + 5).abs().cmp(&(a + 5).abs()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort_by_key(|b| Reverse((b + 5).abs()))`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:21:5\n+  --> $DIR/unnecessary_sort_by.rs:22:5\n    |\n LL |     vec.sort_unstable_by(|a, b| id(-b).cmp(&id(-a)));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort_unstable_by_key(|b| Reverse(id(-b)))`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:31:5\n+  --> $DIR/unnecessary_sort_by.rs:32:5\n    |\n LL |     vec.sort_by(|a, b| (***a).abs().cmp(&(***b).abs()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort_by_key(|a| (***a).abs())`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:32:5\n+  --> $DIR/unnecessary_sort_by.rs:33:5\n    |\n LL |     vec.sort_unstable_by(|a, b| (***a).abs().cmp(&(***b).abs()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort_unstable_by_key(|a| (***a).abs())`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:88:9\n+  --> $DIR/unnecessary_sort_by.rs:93:9\n    |\n LL |         args.sort_by(|a, b| a.name().cmp(&b.name()));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `args.sort_by_key(|a| a.name())`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:89:9\n+  --> $DIR/unnecessary_sort_by.rs:94:9\n    |\n LL |         args.sort_unstable_by(|a, b| a.name().cmp(&b.name()));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `args.sort_unstable_by_key(|a| a.name())`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:91:9\n+  --> $DIR/unnecessary_sort_by.rs:96:9\n    |\n LL |         args.sort_by(|a, b| b.name().cmp(&a.name()));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `args.sort_by_key(|b| Reverse(b.name()))`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:92:9\n+  --> $DIR/unnecessary_sort_by.rs:97:9\n    |\n LL |         args.sort_unstable_by(|a, b| b.name().cmp(&a.name()));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `args.sort_unstable_by_key(|b| Reverse(b.name()))`"}]}