{"sha": "de7fefa04c74ecaa7618c910a74ae1cf62affa8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlN2ZlZmEwNGM3NGVjYWE3NjE4YzkxMGE3NGFlMWNmNjJhZmZhOGU=", "commit": {"author": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2019-12-12T20:09:17Z"}, "committer": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2019-12-12T20:09:17Z"}, "message": "Minor cleanup in `Pattern::{is_prefix_of,is_suffix_of}` for `char`", "tree": {"sha": "f8c9b799d57601710ffd4a7577737c1acb03469d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8c9b799d57601710ffd4a7577737c1acb03469d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de7fefa04c74ecaa7618c910a74ae1cf62affa8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de7fefa04c74ecaa7618c910a74ae1cf62affa8e", "html_url": "https://github.com/rust-lang/rust/commit/de7fefa04c74ecaa7618c910a74ae1cf62affa8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de7fefa04c74ecaa7618c910a74ae1cf62affa8e/comments", "author": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f6d0234db58459c09c233efba762ad8f40adf57", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f6d0234db58459c09c233efba762ad8f40adf57", "html_url": "https://github.com/rust-lang/rust/commit/1f6d0234db58459c09c233efba762ad8f40adf57"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "1b6e6f1c2e419a1a45b7a2fa40955147e075b734", "filename": "src/libcore/str/pattern.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/de7fefa04c74ecaa7618c910a74ae1cf62affa8e/src%2Flibcore%2Fstr%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de7fefa04c74ecaa7618c910a74ae1cf62affa8e/src%2Flibcore%2Fstr%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fpattern.rs?ref=de7fefa04c74ecaa7618c910a74ae1cf62affa8e", "patch": "@@ -450,15 +450,13 @@ impl<'a> Pattern<'a> for char {\n \n     #[inline]\n     fn is_prefix_of(self, haystack: &'a str) -> bool {\n-        let mut buffer = [0u8; 4];\n-        self.encode_utf8(&mut buffer).is_prefix_of(haystack)\n+        self.encode_utf8(&mut [0u8; 4]).is_prefix_of(haystack)\n     }\n \n     #[inline]\n     fn is_suffix_of(self, haystack: &'a str) -> bool where Self::Searcher: ReverseSearcher<'a>\n     {\n-        let mut buffer = [0u8; 4];\n-        self.encode_utf8(&mut buffer).is_suffix_of(haystack)\n+        self.encode_utf8(&mut [0u8; 4]).is_suffix_of(haystack)\n     }\n }\n "}]}