{"sha": "1d47c0a830ac6d735128d3c6cd7ff3b41b874f94", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkNDdjMGE4MzBhYzZkNzM1MTI4ZDNjNmNkN2ZmM2I0MWI4NzRmOTQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-11T21:17:54Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-11T21:18:52Z"}, "message": "manual: note overloading and traits for comparison ops.", "tree": {"sha": "f942f10ab9a0ac02c72fc0d18e3cd4f37fece8a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f942f10ab9a0ac02c72fc0d18e3cd4f37fece8a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d47c0a830ac6d735128d3c6cd7ff3b41b874f94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d47c0a830ac6d735128d3c6cd7ff3b41b874f94", "html_url": "https://github.com/rust-lang/rust/commit/1d47c0a830ac6d735128d3c6cd7ff3b41b874f94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d47c0a830ac6d735128d3c6cd7ff3b41b874f94/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eff4a36b3e5cfbd2b08bb5a3e8d07396dc532033", "url": "https://api.github.com/repos/rust-lang/rust/commits/eff4a36b3e5cfbd2b08bb5a3e8d07396dc532033", "html_url": "https://github.com/rust-lang/rust/commit/eff4a36b3e5cfbd2b08bb5a3e8d07396dc532033"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "32830978de009d79e4fd69a74e35daea90aa8201", "filename": "doc/rust.md", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1d47c0a830ac6d735128d3c6cd7ff3b41b874f94/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/1d47c0a830ac6d735128d3c6cd7ff3b41b874f94/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=1d47c0a830ac6d735128d3c6cd7ff3b41b874f94", "patch": "@@ -1697,7 +1697,7 @@ The default meaning of the operators on standard types is given here.\n \n #### Bitwise operators\n \n-Bitwise operators apply are, like the [arithmetic operators](#arithmetic-operators),\n+Bitwise operators are, like the [arithmetic operators](#arithmetic-operators),\n syntactic sugar for calls to built-in traits.\n This means that bitwise operators can be overridden for user-defined types.\n The default meaning of the operators on standard types is given here.\n@@ -1730,21 +1730,31 @@ and `&&` only when it evaluates to `true`.\n \n #### Comparison operators\n \n+Comparison operators are, like the [arithmetic operators](#arithmetic-operators),\n+and [bitwise operators](#bitwise-operators),\n+syntactic sugar for calls to built-in traits.\n+This means that comparison operators can be overridden for user-defined types.\n+The default meaning of the operators on standard types is given here.\n+\n `==`\n   : Equal to.\n+    Calls the `eq` method on the `core::cmp::Eq` trait.\n `!=`\n   : Unequal to.\n+    Calls the `ne` method on the `core::cmp::Eq` trait.\n `<`\n   : Less than.\n+    Calls the `lt` method on the `core::cmp::Ord` trait.\n `>`\n   : Greater than.\n+    Calls the `gt` method on the `core::cmp::Ord` trait.\n `<=`\n   : Less than or equal.\n+    Calls the `le` method on the `core::cmp::Ord` trait.\n `>=`\n   : Greater than or equal.\n+    Calls the `ge` method on the `core::cmp::Ord` trait.\n \n-The binary comparison operators can be applied to any two operands of\n-the same type, and produce a boolean value.\n \n #### Type cast expressions\n "}]}