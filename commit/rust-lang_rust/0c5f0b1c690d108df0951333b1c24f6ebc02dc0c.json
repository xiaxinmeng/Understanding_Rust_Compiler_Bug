{"sha": "0c5f0b1c690d108df0951333b1c24f6ebc02dc0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjNWYwYjFjNjkwZDEwOGRmMDk1MTMzM2IxYzI0ZjZlYmMwMmRjMGM=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-10-02T18:27:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-02T18:27:18Z"}, "message": "Rollup merge of #77453 - pietroalbini:ci-no-more-azure, r=Mark-Simulacrum\n\nStop running macOS builds on Azure Pipelines\n\nThe Infrastructure Team agreed to migrate macOS builds to GitHub Actions, so this commit stops running those builders on Azure Pipelines. The GitHub Actions runners are already configured to upload to the production bucket.\n\nWe can't still fully remove the Azure Pipelines configuration, as we still need to have that available until no stable releases run any of their builds on Azure Pipelines anymore. I'll open an issue to track fully removing our Azure Pipelines setup once the PR is merged.\n\nr? @Mark-Simulacrum", "tree": {"sha": "1b8dfe63b82a05553eda5ec05f9c7062013fc074", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b8dfe63b82a05553eda5ec05f9c7062013fc074"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c5f0b1c690d108df0951333b1c24f6ebc02dc0c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfd3EGCRBK7hj4Ov3rIwAAdHIIAF/OWGxcf71OwmdPG7WLOnbC\nLsFlH/9VAwLf4vZlXaCcjdv8Jr3B0Pq0mzLHEfkHhW4kBJbKTKbDx6WLI9eaBdyu\nnYNlS+AiQ3JsSR3+/aMopJIp8ePo6dyzISS2tI1Fq/hqFWWGaLoDfcVfQMl8vK88\nDPZIykfCBRrelgO1JcxugoQTP959+8Zbw3reUSHuL3psUh/AcAi/KxQyQPsXu1pE\njl89smwzgHA9HJ5RNRPt9vfrM1fR1DWjAB6nc96QrlyZbpPPuaSpGsslQLtNRGXw\np8JKMlwQRyEZefq+VhHbBVy3sd1QGf7w6d6OIq+u18Ie8k0/zjN9r0es+AyMT+A=\n=b1ig\n-----END PGP SIGNATURE-----\n", "payload": "tree 1b8dfe63b82a05553eda5ec05f9c7062013fc074\nparent de8d7aa400b1d45317a6dcd8b1497fab1bfe3f11\nparent b9070f3fd413361b205cd6931aefa365f5422d60\nauthor Jonas Schievink <jonasschievink@gmail.com> 1601663238 +0200\ncommitter GitHub <noreply@github.com> 1601663238 +0200\n\nRollup merge of #77453 - pietroalbini:ci-no-more-azure, r=Mark-Simulacrum\n\nStop running macOS builds on Azure Pipelines\n\nThe Infrastructure Team agreed to migrate macOS builds to GitHub Actions, so this commit stops running those builders on Azure Pipelines. The GitHub Actions runners are already configured to upload to the production bucket.\n\nWe can't still fully remove the Azure Pipelines configuration, as we still need to have that available until no stable releases run any of their builds on Azure Pipelines anymore. I'll open an issue to track fully removing our Azure Pipelines setup once the PR is merged.\n\nr? @Mark-Simulacrum\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c5f0b1c690d108df0951333b1c24f6ebc02dc0c", "html_url": "https://github.com/rust-lang/rust/commit/0c5f0b1c690d108df0951333b1c24f6ebc02dc0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c5f0b1c690d108df0951333b1c24f6ebc02dc0c/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de8d7aa400b1d45317a6dcd8b1497fab1bfe3f11", "url": "https://api.github.com/repos/rust-lang/rust/commits/de8d7aa400b1d45317a6dcd8b1497fab1bfe3f11", "html_url": "https://github.com/rust-lang/rust/commit/de8d7aa400b1d45317a6dcd8b1497fab1bfe3f11"}, {"sha": "b9070f3fd413361b205cd6931aefa365f5422d60", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9070f3fd413361b205cd6931aefa365f5422d60", "html_url": "https://github.com/rust-lang/rust/commit/b9070f3fd413361b205cd6931aefa365f5422d60"}], "stats": {"total": 184, "additions": 3, "deletions": 181}, "files": [{"sha": "37c2e9bc35a0db9ba3efc3b679453db8a7089237", "filename": "src/ci/azure-pipelines/auto.yml", "status": "modified", "additions": 3, "deletions": 39, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/0c5f0b1c690d108df0951333b1c24f6ebc02dc0c/src%2Fci%2Fazure-pipelines%2Fauto.yml", "raw_url": "https://github.com/rust-lang/rust/raw/0c5f0b1c690d108df0951333b1c24f6ebc02dc0c/src%2Fci%2Fazure-pipelines%2Fauto.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fauto.yml?ref=0c5f0b1c690d108df0951333b1c24f6ebc02dc0c", "patch": "@@ -18,45 +18,9 @@ trigger:\n   - auto\n \n jobs:\n-- job: macOS\n+- job: Dummy\n   timeoutInMinutes: 600\n   pool:\n-    vmImage: macos-10.15\n+    vmImage: ubuntu-16.04\n   steps:\n-  - template: steps/run.yml\n-  variables:\n-    # We're still uploading macOS builds from Azure Pipelines.\n-    - group: prod-credentials\n-  strategy:\n-    matrix:\n-      # OSX builders running tests, these run the full test suite.\n-      # NO_DEBUG_ASSERTIONS=1 to make them go faster, but also do have some\n-      # runners that run `//ignore-debug` tests.\n-      #\n-      # Note that the compiler is compiled to target 10.8 here because the Xcode\n-      # version that we're using, 8.2, cannot compile LLVM for OSX 10.7.\n-      x86_64-apple:\n-        SCRIPT: ./x.py --stage 2 test\n-        INITIAL_RUST_CONFIGURE_ARGS: --build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false\n-        RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n-        MACOSX_DEPLOYMENT_TARGET: 10.8\n-        MACOSX_STD_DEPLOYMENT_TARGET: 10.7\n-        NO_LLVM_ASSERTIONS: 1\n-        NO_DEBUG_ASSERTIONS: 1\n-\n-      dist-x86_64-apple:\n-        SCRIPT: ./x.py dist\n-        INITIAL_RUST_CONFIGURE_ARGS: --host=x86_64-apple-darwin --target=x86_64-apple-darwin,aarch64-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false\n-        RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n-        MACOSX_DEPLOYMENT_TARGET: 10.7\n-        NO_LLVM_ASSERTIONS: 1\n-        NO_DEBUG_ASSERTIONS: 1\n-        DIST_REQUIRE_ALL_TOOLS: 1\n-\n-      dist-x86_64-apple-alt:\n-        SCRIPT: ./x.py dist\n-        INITIAL_RUST_CONFIGURE_ARGS: --enable-extended --enable-profiler --set rust.jemalloc --set llvm.ninja=false\n-        RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n-        MACOSX_DEPLOYMENT_TARGET: 10.7\n-        NO_LLVM_ASSERTIONS: 1\n-        NO_DEBUG_ASSERTIONS: 1\n+  - bash: echo \"We're running this job since bors is still gating on Azure\""}, {"sha": "34fc4d76fa207d7cc572ef02c24ffcda40001993", "filename": "src/ci/azure-pipelines/steps/run.yml", "status": "removed", "additions": 0, "deletions": 142, "changes": 142, "blob_url": "https://github.com/rust-lang/rust/blob/de8d7aa400b1d45317a6dcd8b1497fab1bfe3f11/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml", "raw_url": "https://github.com/rust-lang/rust/raw/de8d7aa400b1d45317a6dcd8b1497fab1bfe3f11/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml?ref=de8d7aa400b1d45317a6dcd8b1497fab1bfe3f11", "patch": "@@ -1,142 +0,0 @@\n-#####################################\n-##    READ BEFORE CHANGING THIS    ##\n-#####################################\n-\n-# We're in the process of evaluating GitHub Actions as a possible replacement\n-# for Azure Pipelines, and at the moment the configuration is duplicated\n-# between the two CI providers. Be sure to also change the configuration in\n-# src/ci/github-actions when changing this file.\n-\n-#####################################\n-\n-# FIXME(linux): need to configure core dumps, enable them, and then dump\n-# backtraces on failure from all core dumps:\n-#\n-# - bash: sudo apt install gdb\n-# - bash: sudo sh -c 'echo \"/checkout/obj/cores/core.%p.%E\" > /proc/sys/kernel/core_pattern'\n-#\n-# Check travis config for `gdb --batch` command to print all crash logs\n-\n-steps:\n-\n-# Configure our CI_JOB_NAME variable which log analyzers can use for the main\n-# step to see what's going on.\n-- bash: |\n-    builder=$(echo $AGENT_JOBNAME | cut -d ' ' -f 2)\n-    echo \"##vso[task.setvariable variable=CI_JOB_NAME]$builder\"\n-  displayName: Configure Job Name\n-\n-# Disable automatic line ending conversion, which is enabled by default on\n-# Azure's Windows image. Having the conversion enabled caused regressions both\n-# in our test suite (it broke miri tests) and in the ecosystem, since we\n-# started shipping install scripts with CRLF endings instead of the old LF.\n-#\n-# Note that we do this a couple times during the build as the PATH and current\n-# user/directory change, e.g. when mingw is enabled.\n-- bash: git config --global core.autocrlf false\n-  displayName: \"Disable git automatic line ending conversion\"\n-\n-- checkout: self\n-  fetchDepth: 2\n-\n-- bash: src/ci/scripts/setup-environment.sh\n-  displayName: Setup environment\n-\n-- bash: src/ci/scripts/clean-disk.sh\n-  displayName: Clean disk\n-\n-- bash: src/ci/scripts/should-skip-this.sh\n-  displayName: Decide whether to run this job\n-\n-- bash: src/ci/scripts/collect-cpu-stats.sh\n-  displayName: Collect CPU-usage statistics in the background\n-\n-- bash: src/ci/scripts/dump-environment.sh\n-  displayName: Show the current environment\n-\n-- bash: src/ci/scripts/install-sccache.sh\n-  displayName: Install sccache\n-  condition: and(succeeded(), not(variables.SKIP_JOB))\n-\n-- bash: src/ci/scripts/install-clang.sh\n-  displayName: Install clang\n-  condition: and(succeeded(), not(variables.SKIP_JOB))\n-\n-- bash: src/ci/scripts/install-wix.sh\n-  displayName: Install wix\n-  condition: and(succeeded(), not(variables.SKIP_JOB))\n-\n-- bash: src/ci/scripts/symlink-build-dir.sh\n-  displayName: Ensure the build happens on a partition with enough space\n-  condition: and(succeeded(), not(variables.SKIP_JOB))\n-\n-- bash: src/ci/scripts/disable-git-crlf-conversion.sh\n-  displayName: \"Disable git automatic line ending conversion (on C:/)\"\n-  condition: and(succeeded(), not(variables.SKIP_JOB))\n-\n-- bash: src/ci/scripts/install-msys2.sh\n-  displayName: Install msys2\n-  condition: and(succeeded(), not(variables.SKIP_JOB))\n-\n-- bash: src/ci/scripts/install-mingw.sh\n-  displayName: Install MinGW\n-  condition: and(succeeded(), not(variables.SKIP_JOB))\n-\n-- bash: src/ci/scripts/install-ninja.sh\n-  displayName: Install ninja\n-  condition: and(succeeded(), not(variables.SKIP_JOB))\n-\n-- bash: src/ci/scripts/enable-docker-ipv6.sh\n-  displayName: Enable IPv6 on Docker\n-  condition: and(succeeded(), not(variables.SKIP_JOB))\n-\n-# Disable automatic line ending conversion (again). On Windows, when we're\n-# installing dependencies, something switches the git configuration directory or\n-# re-enables autocrlf. We've not tracked down the exact cause -- and there may\n-# be multiple -- but this should ensure submodules are checked out with the\n-# appropriate line endings.\n-- bash: src/ci/scripts/disable-git-crlf-conversion.sh\n-  displayName: Disable git automatic line ending conversion\n-  condition: and(succeeded(), not(variables.SKIP_JOB))\n-\n-- bash: src/ci/scripts/checkout-submodules.sh\n-  displayName: Checkout submodules\n-  condition: and(succeeded(), not(variables.SKIP_JOB))\n-\n-- bash: src/ci/scripts/verify-line-endings.sh\n-  displayName: Verify line endings\n-  condition: and(succeeded(), not(variables.SKIP_JOB))\n-\n-# Ensure the `aws` CLI is installed so we can deploy later on, cache docker\n-# images, etc.\n-- bash: src/ci/scripts/install-awscli.sh\n-  condition: and(succeeded(), not(variables.SKIP_JOB))\n-  displayName: Install awscli\n-\n-- bash: src/ci/scripts/run-build-from-ci.sh\n-  timeoutInMinutes: 600\n-  env:\n-    AWS_ACCESS_KEY_ID: $(SCCACHE_AWS_ACCESS_KEY_ID)\n-    AWS_SECRET_ACCESS_KEY: $(SCCACHE_AWS_SECRET_ACCESS_KEY)\n-    TOOLSTATE_REPO_ACCESS_TOKEN: $(TOOLSTATE_REPO_ACCESS_TOKEN)\n-  condition: and(succeeded(), not(variables.SKIP_JOB))\n-  displayName: Run build\n-\n-- bash: src/ci/scripts/upload-artifacts.sh\n-  env:\n-    AWS_ACCESS_KEY_ID: $(UPLOAD_AWS_ACCESS_KEY_ID)\n-    AWS_SECRET_ACCESS_KEY: $(UPLOAD_AWS_SECRET_ACCESS_KEY)\n-  displayName: Upload artifacts\n-  # Adding a condition on DEPLOY=1 or DEPLOY_ALT=1 is not needed as all deploy\n-  # builders *should* have the AWS credentials available. Still, explicitly\n-  # adding the condition is helpful as this way CI will not silently skip\n-  # deploying artifacts from a dist builder if the variables are misconfigured,\n-  # erroring about invalid credentials instead.\n-  condition: |\n-    and(\n-      succeeded(), not(variables.SKIP_JOB),\n-      or(\n-        variables.UPLOAD_AWS_SECRET_ACCESS_KEY,\n-        eq(variables.DEPLOY, '1'), eq(variables.DEPLOY_ALT, '1')\n-      )\n-    )"}]}