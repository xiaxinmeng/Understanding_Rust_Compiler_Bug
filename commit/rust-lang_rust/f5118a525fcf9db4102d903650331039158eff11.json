{"sha": "f5118a525fcf9db4102d903650331039158eff11", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1MTE4YTUyNWZjZjlkYjQxMDJkOTAzNjUwMzMxMDM5MTU4ZWZmMTE=", "commit": {"author": {"name": "Laurence Tratt", "email": "laurie@tratt.net", "date": "2020-08-12T14:36:55Z"}, "committer": {"name": "Laurence Tratt", "email": "laurie@tratt.net", "date": "2020-08-12T14:36:55Z"}, "message": "Clarify and add guarantee about `transmute`.", "tree": {"sha": "bf6ae0a56ff2b6f5bcc01b3577586dad397d94ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf6ae0a56ff2b6f5bcc01b3577586dad397d94ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5118a525fcf9db4102d903650331039158eff11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5118a525fcf9db4102d903650331039158eff11", "html_url": "https://github.com/rust-lang/rust/commit/f5118a525fcf9db4102d903650331039158eff11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5118a525fcf9db4102d903650331039158eff11/comments", "author": {"login": "ltratt", "id": 20318, "node_id": "MDQ6VXNlcjIwMzE4", "avatar_url": "https://avatars.githubusercontent.com/u/20318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ltratt", "html_url": "https://github.com/ltratt", "followers_url": "https://api.github.com/users/ltratt/followers", "following_url": "https://api.github.com/users/ltratt/following{/other_user}", "gists_url": "https://api.github.com/users/ltratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ltratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ltratt/subscriptions", "organizations_url": "https://api.github.com/users/ltratt/orgs", "repos_url": "https://api.github.com/users/ltratt/repos", "events_url": "https://api.github.com/users/ltratt/events{/privacy}", "received_events_url": "https://api.github.com/users/ltratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ltratt", "id": 20318, "node_id": "MDQ6VXNlcjIwMzE4", "avatar_url": "https://avatars.githubusercontent.com/u/20318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ltratt", "html_url": "https://github.com/ltratt", "followers_url": "https://api.github.com/users/ltratt/followers", "following_url": "https://api.github.com/users/ltratt/following{/other_user}", "gists_url": "https://api.github.com/users/ltratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ltratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ltratt/subscriptions", "organizations_url": "https://api.github.com/users/ltratt/orgs", "repos_url": "https://api.github.com/users/ltratt/repos", "events_url": "https://api.github.com/users/ltratt/events{/privacy}", "received_events_url": "https://api.github.com/users/ltratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73ada2d40429488aaaacf37b608bababc137b910", "url": "https://api.github.com/repos/rust-lang/rust/commits/73ada2d40429488aaaacf37b608bababc137b910", "html_url": "https://github.com/rust-lang/rust/commit/73ada2d40429488aaaacf37b608bababc137b910"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "c1837f79840d5da42dc14fbe1c62bdccf82fee65", "filename": "library/core/src/option.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f5118a525fcf9db4102d903650331039158eff11/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5118a525fcf9db4102d903650331039158eff11/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=f5118a525fcf9db4102d903650331039158eff11", "patch": "@@ -72,16 +72,19 @@\n //!\n //! # Representation\n //!\n-//! Rust guarantees to optimise the following inner types such that an [`Option`] which contains\n-//! them has the same size as a pointer:\n+//! Rust guarantees to optimize the following types `<T>` such that an\n+//! [`Option<T>`] has the same size as `T`:\n //!\n+//! * [`Box<T>`]\n //! * `&T`\n //! * `&mut T`\n //! * `extern \"C\" fn`\n //! * [`num::NonZero*`]\n //! * [`ptr::NonNull<T>`]\n //! * `#[repr(transparent)]` struct around one of the types in this list.\n-//! * [`Box<T>`]\n+//!\n+//! For the above cases, it is guaranteed that one can use [`mem::transmute`]\n+//! between `T` and `Option<T>` and vice versa.\n //!\n //! # Examples\n //!"}]}