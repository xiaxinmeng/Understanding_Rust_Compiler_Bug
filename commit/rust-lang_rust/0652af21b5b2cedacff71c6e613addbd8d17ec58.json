{"sha": "0652af21b5b2cedacff71c6e613addbd8d17ec58", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NTJhZjIxYjViMmNlZGFjZmY3MWM2ZTYxM2FkZGJkOGQxN2VjNTg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-25T13:36:46Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-25T13:36:46Z"}, "message": "Rollup merge of #48235 - varkor:parse-float-lonely-exponent, r=alexcrichton\n\nMake \".e0\" not parse as 0.0\n\nThis forces floats to have either a digit before the separating point, or after. Thus `\".e0\"` is invalid like `\".\"`, when using `parse()`. Fixes #40654. As mentioned in the issue, this is technically a breaking change... but clearly incorrect behaviour at present.", "tree": {"sha": "704067324b813ed1ef3e3a0746bf6af5ff918424", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/704067324b813ed1ef3e3a0746bf6af5ff918424"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0652af21b5b2cedacff71c6e613addbd8d17ec58", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlqSvBQACgkQ/vbIBR0O\nATy8GQ/7BdfI9ivaOKCr64vjivrA0lOIrtcY+Kh9BZehNMo2EuYFJUQjOjqR/p4J\nq2XD09BYF0sL/cHEO79QQ9xQaWu/wur+VjH8G8LoCYPTbVnlgpLmVKvwcykzGaym\nLg6ExCoyTxTLU9CPtV72Ih2EL2/UyJumUvrSc7ZH4FY9nr9TBHBZZQ/kmPJD8GS3\nQ4iDD2VkPUeT5ANB5n2Gzp8UMFOsqfiWH6pA974J9/ba+nBRmkh6QdrbQIDrYquh\nTAHvUtOHF7BU98hLx8CEqMDv4XLgqVr8MLpBRkGzr3+exCsYEuD+E3POEj/DjeFg\nZxaVBwqn0nnvUT/7aK66QUM2RG0F7a4qNygyahyA1dcBMf7pfWGEgrom2QYPdUwp\nfikf8VbCO1HkGMe6DzTFH82aA6s4NgfLKBHSKNGU2uGjDVL/F9d5Vn2ahwSzK7DT\nVJX2WOP4kqExyDE5Cy8LBb2b6gG3tvxDtq27+4H1VUvRQXxy2oiZkR1y3LjjRU5r\nIyO9KAWDPjat4lmr44aB5NmSLTzjXQQLTEXlOiFKfuTbwY9mjpGbezsGh05uqxF7\nTQX9wXy2dSBDVX3WeNvZfEKFxP7PGNFCQrVHLxZqONelk5juPg8RtWTQss3ZrrQy\n5Pt/PX2iBOjNvZeCz98/5LHWo7mp1gSuZzFv+qKI8VXVzkDEqdM=\n=+MC3\n-----END PGP SIGNATURE-----", "payload": "tree 704067324b813ed1ef3e3a0746bf6af5ff918424\nparent 268b6d61894d535f8414eee923ac740d8d3fef81\nparent c0e87f13a4d2f6fcef92c8c01bdc8dda9e0549a5\nauthor kennytm <kennytm@gmail.com> 1519565806 +0800\ncommitter kennytm <kennytm@gmail.com> 1519565806 +0800\n\nRollup merge of #48235 - varkor:parse-float-lonely-exponent, r=alexcrichton\n\nMake \".e0\" not parse as 0.0\n\nThis forces floats to have either a digit before the separating point, or after. Thus `\".e0\"` is invalid like `\".\"`, when using `parse()`. Fixes #40654. As mentioned in the issue, this is technically a breaking change... but clearly incorrect behaviour at present.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0652af21b5b2cedacff71c6e613addbd8d17ec58", "html_url": "https://github.com/rust-lang/rust/commit/0652af21b5b2cedacff71c6e613addbd8d17ec58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0652af21b5b2cedacff71c6e613addbd8d17ec58/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "268b6d61894d535f8414eee923ac740d8d3fef81", "url": "https://api.github.com/repos/rust-lang/rust/commits/268b6d61894d535f8414eee923ac740d8d3fef81", "html_url": "https://github.com/rust-lang/rust/commit/268b6d61894d535f8414eee923ac740d8d3fef81"}, {"sha": "c0e87f13a4d2f6fcef92c8c01bdc8dda9e0549a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0e87f13a4d2f6fcef92c8c01bdc8dda9e0549a5", "html_url": "https://github.com/rust-lang/rust/commit/c0e87f13a4d2f6fcef92c8c01bdc8dda9e0549a5"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "69418434ebead36b0ed701744ab61c4ce7d25dfa", "filename": "src/libcore/num/dec2flt/parse.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0652af21b5b2cedacff71c6e613addbd8d17ec58/src%2Flibcore%2Fnum%2Fdec2flt%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0652af21b5b2cedacff71c6e613addbd8d17ec58/src%2Flibcore%2Fnum%2Fdec2flt%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fdec2flt%2Fparse.rs?ref=0652af21b5b2cedacff71c6e613addbd8d17ec58", "patch": "@@ -73,7 +73,8 @@ pub fn parse_decimal(s: &str) -> ParseResult {\n         }\n         Some(&b'.') => {\n             let (fractional, s) = eat_digits(&s[1..]);\n-            if integral.is_empty() && fractional.is_empty() && s.is_empty() {\n+            if integral.is_empty() && fractional.is_empty() {\n+                // We require at least a single digit before or after the point.\n                 return Invalid;\n             }\n "}, {"sha": "17b2f59cd4df2814e47e1175eab92b011b3ddd99", "filename": "src/libcore/tests/num/dec2flt/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0652af21b5b2cedacff71c6e613addbd8d17ec58/src%2Flibcore%2Ftests%2Fnum%2Fdec2flt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0652af21b5b2cedacff71c6e613addbd8d17ec58/src%2Flibcore%2Ftests%2Fnum%2Fdec2flt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fdec2flt%2Fmod.rs?ref=0652af21b5b2cedacff71c6e613addbd8d17ec58", "patch": "@@ -101,6 +101,12 @@ fn lonely_dot() {\n     assert!(\".\".parse::<f64>().is_err());\n }\n \n+#[test]\n+fn exponentiated_dot() {\n+    assert!(\".e0\".parse::<f32>().is_err());\n+    assert!(\".e0\".parse::<f64>().is_err());\n+}\n+\n #[test]\n fn lonely_sign() {\n     assert!(\"+\".parse::<f32>().is_err());"}]}