{"sha": "3667137a4104ecde5c37f128d6d8c6080529f89f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2NjcxMzdhNDEwNGVjZGU1YzM3ZjEyOGQ2ZDhjNjA4MDUyOWY4OWY=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-12T09:46:40Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-12T10:04:41Z"}, "message": "Accept {|| ... } for argument-less block syntax\n\nCloses #880", "tree": {"sha": "c35492bf86160c2b11ecd60253d5717e765f2b50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c35492bf86160c2b11ecd60253d5717e765f2b50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3667137a4104ecde5c37f128d6d8c6080529f89f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3667137a4104ecde5c37f128d6d8c6080529f89f", "html_url": "https://github.com/rust-lang/rust/commit/3667137a4104ecde5c37f128d6d8c6080529f89f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3667137a4104ecde5c37f128d6d8c6080529f89f/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc6b7c8b381bcb506eab0f50c69b6cc18aafacb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc6b7c8b381bcb506eab0f50c69b6cc18aafacb2", "html_url": "https://github.com/rust-lang/rust/commit/fc6b7c8b381bcb506eab0f50c69b6cc18aafacb2"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "b6abb89913508cb53612497ddb005469c5f8b2a0", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3667137a4104ecde5c37f128d6d8c6080529f89f/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3667137a4104ecde5c37f128d6d8c6080529f89f/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=3667137a4104ecde5c37f128d6d8c6080529f89f", "patch": "@@ -826,7 +826,8 @@ fn parse_bottom_expr(p: parser) -> @ast::expr {\n             hi = p.get_hi_pos();\n             expect(p, token::RBRACE);\n             ex = ast::expr_rec(fields, base);\n-        } else if p.peek() == token::BINOP(token::OR) {\n+        } else if p.peek() == token::BINOP(token::OR) ||\n+                  p.peek() == token::OROR {\n             ret parse_fn_block_expr(p);\n         } else {\n             let blk = parse_block_tail(p, lo, ast::checked);\n@@ -1772,10 +1773,13 @@ fn parse_fn_decl(p: parser, purity: ast::purity, il: ast::inlineness) ->\n }\n \n fn parse_fn_block_decl(p: parser) -> ast::fn_decl {\n-    let inputs: ast::spanned<[ast::arg]> =\n+    let inputs = if p.peek() == token::OROR {\n+        p.bump(); []\n+    } else {\n         parse_seq(token::BINOP(token::OR), token::BINOP(token::OR),\n-                  some(token::COMMA), parse_fn_block_arg, p);\n-    ret {inputs: inputs.node,\n+                  some(token::COMMA), parse_fn_block_arg, p).node\n+    };\n+    ret {inputs: inputs,\n          output: @spanned(p.get_lo_pos(), p.get_hi_pos(), ast::ty_infer),\n          purity: ast::impure_fn,\n          il: ast::il_normal,"}]}