{"sha": "db6fdf664aceb19ed65b5ced28029789b01360c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNmZkZjY2NGFjZWIxOWVkNjViNWNlZDI4MDI5Nzg5YjAxMzYwYzg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-10-12T08:14:29Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-10-12T17:58:47Z"}, "message": "Rollup merge of #45172 - oli-obk:patch-8, r=pnkfelix\n\nUpgrade some comments to doc comments", "tree": {"sha": "768674f740c4286730a1a47d084cb219f37da57b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/768674f740c4286730a1a47d084cb219f37da57b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db6fdf664aceb19ed65b5ced28029789b01360c8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlnfrVgACgkQ/vbIBR0O\nATwQ3RAAwq82EG1h/gsC0I7fONdOXO4hmx0hpnX0kylH8B4EogsBRnbHUJV5jZV8\nLtVJRQfJYKNT6zh3ydR6Rqcy+qwycqs9/uNcUwV2o3IiJ3iDFv2oEClMfwP175mk\nyo6OLFuTzVGRvvf16+sqQITj8FopZn4UghnkMJNYdQ/kOTR7e5YIEEVUNhqWK8H0\ntINiTjBtNHN1Th1zTvkGE+Mw2RHHy0qR/1cJP6p0KGCA42pT9vY12NFjC08zIpdH\ni0B4/Qww4V9uUUSAwKY7FxeTVUcn72275vU8xt6b9rx/TiT6hdqsq/6x1N8QTDLq\n2qJIsTVzstObxa6aIstwjFus3FAnKTBVVMJjw3q2mAf5wLjUKj/4pH742pYTHjGs\nmunVcR1NsxDqE2Fg9zW8YZ7jBWyGxPrXSMmfomXnoM9rSxbpohVQ/EeK5BqR/y8x\ntWA3LO8fSMIsQJgkaTElRIzo7MRWtPGQF0R941WPd2YwBnnVTngO4TamgcztsMQr\nZU87uwWmqKt+fNKxDhgQ8+QtigLO+7O+944o4GvycQTWMBzQQfeppfQHP1GdS/+6\n6jnZ11UCq8cIJppEj7pbMaASnld6Eutg+TzL0AFvGVdG3NTUR0xyDYm1BTOG6LiP\neBxKosSE2+jN9TP67n3bRO8gg53erQ/htajs8lZuoVM3KiVjgGY=\n=SiN8\n-----END PGP SIGNATURE-----", "payload": "tree 768674f740c4286730a1a47d084cb219f37da57b\nparent 7640cda8b2729183093cd5c5b925b02ccbfaa684\nparent 1cb9f70b22dcae385365d7e87ddbf8c0a28b2843\nauthor kennytm <kennytm@gmail.com> 1507796069 +0800\ncommitter kennytm <kennytm@gmail.com> 1507831127 +0800\n\nRollup merge of #45172 - oli-obk:patch-8, r=pnkfelix\n\nUpgrade some comments to doc comments\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db6fdf664aceb19ed65b5ced28029789b01360c8", "html_url": "https://github.com/rust-lang/rust/commit/db6fdf664aceb19ed65b5ced28029789b01360c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db6fdf664aceb19ed65b5ced28029789b01360c8/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7640cda8b2729183093cd5c5b925b02ccbfaa684", "url": "https://api.github.com/repos/rust-lang/rust/commits/7640cda8b2729183093cd5c5b925b02ccbfaa684", "html_url": "https://github.com/rust-lang/rust/commit/7640cda8b2729183093cd5c5b925b02ccbfaa684"}, {"sha": "1cb9f70b22dcae385365d7e87ddbf8c0a28b2843", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cb9f70b22dcae385365d7e87ddbf8c0a28b2843", "html_url": "https://github.com/rust-lang/rust/commit/1cb9f70b22dcae385365d7e87ddbf8c0a28b2843"}], "stats": {"total": 54, "additions": 27, "deletions": 27}, "files": [{"sha": "89dca3e020d38b988bc80107a7df2f1802efcfbd", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/db6fdf664aceb19ed65b5ced28029789b01360c8/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db6fdf664aceb19ed65b5ced28029789b01360c8/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=db6fdf664aceb19ed65b5ced28029789b01360c8", "patch": "@@ -54,24 +54,24 @@ pub mod config;\n pub mod filesearch;\n pub mod search_paths;\n \n-// Represents the data associated with a compilation\n-// session for a single crate.\n+/// Represents the data associated with a compilation\n+/// session for a single crate.\n pub struct Session {\n     pub target: config::Config,\n     pub host: Target,\n     pub opts: config::Options,\n     pub parse_sess: ParseSess,\n-    // For a library crate, this is always none\n+    /// For a library crate, this is always none\n     pub entry_fn: RefCell<Option<(NodeId, Span)>>,\n     pub entry_type: Cell<Option<config::EntryFnType>>,\n     pub plugin_registrar_fn: Cell<Option<ast::NodeId>>,\n     pub derive_registrar_fn: Cell<Option<ast::NodeId>>,\n     pub default_sysroot: Option<PathBuf>,\n-    // The name of the root source file of the crate, in the local file system.\n-    // `None` means that there is no source file.\n+    /// The name of the root source file of the crate, in the local file system.\n+    /// `None` means that there is no source file.\n     pub local_crate_source_file: Option<String>,\n-    // The directory the compiler has been executed in plus a flag indicating\n-    // if the value stored here has been affected by path remapping.\n+    /// The directory the compiler has been executed in plus a flag indicating\n+    /// if the value stored here has been affected by path remapping.\n     pub working_dir: (String, bool),\n     pub lint_store: RefCell<lint::LintStore>,\n     pub buffered_lints: RefCell<Option<lint::LintBuffer>>,\n@@ -83,11 +83,11 @@ pub struct Session {\n     pub plugin_attributes: RefCell<Vec<(String, AttributeType)>>,\n     pub crate_types: RefCell<Vec<config::CrateType>>,\n     pub dependency_formats: RefCell<dependency_format::Dependencies>,\n-    // The crate_disambiguator is constructed out of all the `-C metadata`\n-    // arguments passed to the compiler. Its value together with the crate-name\n-    // forms a unique global identifier for the crate. It is used to allow\n-    // multiple crates with the same name to coexist. See the\n-    // trans::back::symbol_names module for more information.\n+    /// The crate_disambiguator is constructed out of all the `-C metadata`\n+    /// arguments passed to the compiler. Its value together with the crate-name\n+    /// forms a unique global identifier for the crate. It is used to allow\n+    /// multiple crates with the same name to coexist. See the\n+    /// trans::back::symbol_names module for more information.\n     pub crate_disambiguator: RefCell<Option<Symbol>>,\n     pub features: RefCell<feature_gate::Features>,\n \n@@ -143,17 +143,17 @@ pub struct Session {\n }\n \n pub struct PerfStats {\n-    // The accumulated time needed for computing the SVH of the crate\n+    /// The accumulated time needed for computing the SVH of the crate\n     pub svh_time: Cell<Duration>,\n-    // The accumulated time spent on computing incr. comp. hashes\n+    /// The accumulated time spent on computing incr. comp. hashes\n     pub incr_comp_hashes_time: Cell<Duration>,\n-    // The number of incr. comp. hash computations performed\n+    /// The number of incr. comp. hash computations performed\n     pub incr_comp_hashes_count: Cell<u64>,\n-    // The number of bytes hashed when computing ICH values\n+    /// The number of bytes hashed when computing ICH values\n     pub incr_comp_bytes_hashed: Cell<u64>,\n-    // The accumulated time spent on computing symbol hashes\n+    /// The accumulated time spent on computing symbol hashes\n     pub symbol_hash_time: Cell<Duration>,\n-    // The accumulated time spent decoding def path tables from metadata\n+    /// The accumulated time spent decoding def path tables from metadata\n     pub decode_def_path_tables_time: Cell<Duration>,\n }\n \n@@ -804,24 +804,24 @@ pub fn build_session_(sopts: config::Options,\n /// Holds data on the current incremental compilation session, if there is one.\n #[derive(Debug)]\n pub enum IncrCompSession {\n-    // This is the state the session will be in until the incr. comp. dir is\n-    // needed.\n+    /// This is the state the session will be in until the incr. comp. dir is\n+    /// needed.\n     NotInitialized,\n-    // This is the state during which the session directory is private and can\n-    // be modified.\n+    /// This is the state during which the session directory is private and can\n+    /// be modified.\n     Active {\n         session_directory: PathBuf,\n         lock_file: flock::Lock,\n         load_dep_graph: bool,\n     },\n-    // This is the state after the session directory has been finalized. In this\n-    // state, the contents of the directory must not be modified any more.\n+    /// This is the state after the session directory has been finalized. In this\n+    /// state, the contents of the directory must not be modified any more.\n     Finalized {\n         session_directory: PathBuf,\n     },\n-    // This is an error state that is reached when some compilation error has\n-    // occurred. It indicates that the contents of the session directory must\n-    // not be used, since they might be invalid.\n+    /// This is an error state that is reached when some compilation error has\n+    /// occurred. It indicates that the contents of the session directory must\n+    /// not be used, since they might be invalid.\n     InvalidBecauseOfErrors {\n         session_directory: PathBuf,\n     }"}]}