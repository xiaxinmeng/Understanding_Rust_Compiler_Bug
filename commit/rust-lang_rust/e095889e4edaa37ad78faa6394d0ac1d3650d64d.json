{"sha": "e095889e4edaa37ad78faa6394d0ac1d3650d64d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwOTU4ODllNGVkYWEzN2FkNzhmYWE2Mzk0ZDBhYzFkMzY1MGQ2NGQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-31T01:46:48Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-03T22:02:00Z"}, "message": "libstd: De-`@mut` the `heap_cycles` test", "tree": {"sha": "07aeab5c1ce658c17a642c92b1f43e7e7e2e4499", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07aeab5c1ce658c17a642c92b1f43e7e7e2e4499"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e095889e4edaa37ad78faa6394d0ac1d3650d64d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e095889e4edaa37ad78faa6394d0ac1d3650d64d", "html_url": "https://github.com/rust-lang/rust/commit/e095889e4edaa37ad78faa6394d0ac1d3650d64d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e095889e4edaa37ad78faa6394d0ac1d3650d64d/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa93e6e664e61a0443b9a66a13f26e6a55205959", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa93e6e664e61a0443b9a66a13f26e6a55205959", "html_url": "https://github.com/rust-lang/rust/commit/aa93e6e664e61a0443b9a66a13f26e6a55205959"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "ae12f944f9c30ad37dc32d4ec3f2f6cf94f30818", "filename": "src/libstd/rt/task.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e095889e4edaa37ad78faa6394d0ac1d3650d64d/src%2Flibstd%2Frt%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e095889e4edaa37ad78faa6394d0ac1d3650d64d/src%2Flibstd%2Frt%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Ftask.rs?ref=e095889e4edaa37ad78faa6394d0ac1d3650d64d", "patch": "@@ -444,16 +444,20 @@ mod test {\n \n     #[test]\n     fn heap_cycles() {\n+        use cell::RefCell;\n         use option::{Option, Some, None};\n \n         struct List {\n-            next: Option<@mut List>,\n+            next: Option<@RefCell<List>>,\n         }\n \n-        let a = @mut List { next: None };\n-        let b = @mut List { next: Some(a) };\n+        let a = @RefCell::new(List { next: None });\n+        let b = @RefCell::new(List { next: Some(a) });\n \n-        a.next = Some(b);\n+        {\n+            let mut a = a.borrow_mut();\n+            a.get().next = Some(b);\n+        }\n     }\n \n     #[test]"}]}