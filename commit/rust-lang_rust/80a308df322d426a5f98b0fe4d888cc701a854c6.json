{"sha": "80a308df322d426a5f98b0fe4d888cc701a854c6", "node_id": "C_kwDOAAsO6NoAKDgwYTMwOGRmMzIyZDQyNmE1Zjk4YjBmZTRkODg4Y2M3MDFhODU0YzY", "commit": {"author": {"name": "Joseph T Lyons", "email": "JosephTLyons@gmail.com", "date": "2021-12-02T17:26:47Z"}, "committer": {"name": "Joseph T Lyons", "email": "JosephTLyons@gmail.com", "date": "2021-12-02T17:26:47Z"}, "message": "Use `HashMap::from()` instead of using `HashMap::new()` with `HashMap::insert()`", "tree": {"sha": "d858bacb74985b111167c91ca5988978cebfa802", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d858bacb74985b111167c91ca5988978cebfa802"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80a308df322d426a5f98b0fe4d888cc701a854c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80a308df322d426a5f98b0fe4d888cc701a854c6", "html_url": "https://github.com/rust-lang/rust/commit/80a308df322d426a5f98b0fe4d888cc701a854c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80a308df322d426a5f98b0fe4d888cc701a854c6/comments", "author": {"login": "JosephTLyons", "id": 19867440, "node_id": "MDQ6VXNlcjE5ODY3NDQw", "avatar_url": "https://avatars.githubusercontent.com/u/19867440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JosephTLyons", "html_url": "https://github.com/JosephTLyons", "followers_url": "https://api.github.com/users/JosephTLyons/followers", "following_url": "https://api.github.com/users/JosephTLyons/following{/other_user}", "gists_url": "https://api.github.com/users/JosephTLyons/gists{/gist_id}", "starred_url": "https://api.github.com/users/JosephTLyons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JosephTLyons/subscriptions", "organizations_url": "https://api.github.com/users/JosephTLyons/orgs", "repos_url": "https://api.github.com/users/JosephTLyons/repos", "events_url": "https://api.github.com/users/JosephTLyons/events{/privacy}", "received_events_url": "https://api.github.com/users/JosephTLyons/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JosephTLyons", "id": 19867440, "node_id": "MDQ6VXNlcjE5ODY3NDQw", "avatar_url": "https://avatars.githubusercontent.com/u/19867440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JosephTLyons", "html_url": "https://github.com/JosephTLyons", "followers_url": "https://api.github.com/users/JosephTLyons/followers", "following_url": "https://api.github.com/users/JosephTLyons/following{/other_user}", "gists_url": "https://api.github.com/users/JosephTLyons/gists{/gist_id}", "starred_url": "https://api.github.com/users/JosephTLyons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JosephTLyons/subscriptions", "organizations_url": "https://api.github.com/users/JosephTLyons/orgs", "repos_url": "https://api.github.com/users/JosephTLyons/repos", "events_url": "https://api.github.com/users/JosephTLyons/events{/privacy}", "received_events_url": "https://api.github.com/users/JosephTLyons/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18bb8c61a975fff6424cda831ace5b0404277145", "url": "https://api.github.com/repos/rust-lang/rust/commits/18bb8c61a975fff6424cda831ace5b0404277145", "html_url": "https://github.com/rust-lang/rust/commit/18bb8c61a975fff6424cda831ace5b0404277145"}], "stats": {"total": 123, "additions": 70, "deletions": 53}, "files": [{"sha": "c585827b9eba2af4d8ba662f66d9c848c45d5f2c", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 70, "deletions": 53, "changes": 123, "blob_url": "https://github.com/rust-lang/rust/blob/80a308df322d426a5f98b0fe4d888cc701a854c6/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80a308df322d426a5f98b0fe4d888cc701a854c6/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=80a308df322d426a5f98b0fe4d888cc701a854c6", "patch": "@@ -334,10 +334,11 @@ impl<K, V, S> HashMap<K, V, S> {\n     /// ```\n     /// use std::collections::HashMap;\n     ///\n-    /// let mut map = HashMap::new();\n-    /// map.insert(\"a\", 1);\n-    /// map.insert(\"b\", 2);\n-    /// map.insert(\"c\", 3);\n+    /// let map = HashMap::from([\n+    ///     (\"a\", 1),\n+    ///     (\"b\", 2),\n+    ///     (\"c\", 3),\n+    /// ]);\n     ///\n     /// for key in map.keys() {\n     ///     println!(\"{}\", key);\n@@ -356,10 +357,11 @@ impl<K, V, S> HashMap<K, V, S> {\n     /// ```\n     /// use std::collections::HashMap;\n     ///\n-    /// let mut map = HashMap::new();\n-    /// map.insert(\"a\", 1);\n-    /// map.insert(\"b\", 2);\n-    /// map.insert(\"c\", 3);\n+    /// let map = HashMap::from([\n+    ///     (\"a\", 1),\n+    ///     (\"b\", 2),\n+    ///     (\"c\", 3),\n+    /// ]);\n     ///\n     /// for val in map.values() {\n     ///     println!(\"{}\", val);\n@@ -378,11 +380,11 @@ impl<K, V, S> HashMap<K, V, S> {\n     /// ```\n     /// use std::collections::HashMap;\n     ///\n-    /// let mut map = HashMap::new();\n-    ///\n-    /// map.insert(\"a\", 1);\n-    /// map.insert(\"b\", 2);\n-    /// map.insert(\"c\", 3);\n+    /// let map = HashMap::from([\n+    ///     (\"a\", 1),\n+    ///     (\"b\", 2),\n+    ///     (\"c\", 3),\n+    /// ]);\n     ///\n     /// for val in map.values_mut() {\n     ///     *val = *val + 10;\n@@ -405,10 +407,11 @@ impl<K, V, S> HashMap<K, V, S> {\n     /// ```\n     /// use std::collections::HashMap;\n     ///\n-    /// let mut map = HashMap::new();\n-    /// map.insert(\"a\", 1);\n-    /// map.insert(\"b\", 2);\n-    /// map.insert(\"c\", 3);\n+    /// let map = HashMap::from([\n+    ///     (\"a\", 1),\n+    ///     (\"b\", 2),\n+    ///     (\"c\", 3),\n+    /// ]);\n     ///\n     /// for (key, val) in map.iter() {\n     ///     println!(\"key: {} val: {}\", key, val);\n@@ -428,10 +431,11 @@ impl<K, V, S> HashMap<K, V, S> {\n     /// ```\n     /// use std::collections::HashMap;\n     ///\n-    /// let mut map = HashMap::new();\n-    /// map.insert(\"a\", 1);\n-    /// map.insert(\"b\", 2);\n-    /// map.insert(\"c\", 3);\n+    /// let map = HashMap::from([\n+    ///     (\"a\", 1),\n+    ///     (\"b\", 2),\n+    ///     (\"c\", 3),\n+    /// ]);\n     ///\n     /// // Update all values\n     /// for (_, val) in map.iter_mut() {\n@@ -966,10 +970,11 @@ where\n     /// ```\n     /// use std::collections::HashMap;\n     ///\n-    /// let mut map = HashMap::new();\n-    /// map.insert(\"a\", 1);\n-    /// map.insert(\"b\", 2);\n-    /// map.insert(\"c\", 3);\n+    /// let map = HashMap::from([\n+    ///     (\"a\", 1),\n+    ///     (\"b\", 2),\n+    ///     (\"c\", 3),\n+    /// ]);\n     ///\n     /// let mut vec: Vec<&str> = map.into_keys().collect();\n     /// // The `IntoKeys` iterator produces keys in arbitrary order, so the\n@@ -992,10 +997,11 @@ where\n     /// ```\n     /// use std::collections::HashMap;\n     ///\n-    /// let mut map = HashMap::new();\n-    /// map.insert(\"a\", 1);\n-    /// map.insert(\"b\", 2);\n-    /// map.insert(\"c\", 3);\n+    /// let map = HashMap::from([\n+    ///     (\"a\", 1),\n+    ///     (\"b\", 2),\n+    ///     (\"c\", 3),\n+    /// ]);\n     ///\n     /// let mut vec: Vec<i32> = map.into_values().collect();\n     /// // The `IntoValues` iterator produces values in arbitrary order, so\n@@ -1202,8 +1208,9 @@ where\n /// ```\n /// use std::collections::HashMap;\n ///\n-/// let mut map = HashMap::new();\n-/// map.insert(\"a\", 1);\n+/// let map = HashMap::from([\n+///     (\"a\", 1),\n+/// ]);\n /// let iter = map.iter();\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1239,8 +1246,9 @@ impl<K: Debug, V: Debug> fmt::Debug for Iter<'_, K, V> {\n /// ```\n /// use std::collections::HashMap;\n ///\n-/// let mut map = HashMap::new();\n-/// map.insert(\"a\", 1);\n+/// let map = HashMap::from([\n+///     (\"a\", 1),\n+/// ]);\n /// let iter = map.iter_mut();\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1269,8 +1277,9 @@ impl<'a, K, V> IterMut<'a, K, V> {\n /// ```\n /// use std::collections::HashMap;\n ///\n-/// let mut map = HashMap::new();\n-/// map.insert(\"a\", 1);\n+/// let map = HashMap::from([\n+///     (\"a\", 1),\n+/// ]);\n /// let iter = map.into_iter();\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1298,8 +1307,9 @@ impl<K, V> IntoIter<K, V> {\n /// ```\n /// use std::collections::HashMap;\n ///\n-/// let mut map = HashMap::new();\n-/// map.insert(\"a\", 1);\n+/// let map = HashMap::from([\n+///     (\"a\", 1),\n+/// ]);\n /// let iter_keys = map.keys();\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1335,8 +1345,9 @@ impl<K: Debug, V> fmt::Debug for Keys<'_, K, V> {\n /// ```\n /// use std::collections::HashMap;\n ///\n-/// let mut map = HashMap::new();\n-/// map.insert(\"a\", 1);\n+/// let map = HashMap::from([\n+///     (\"a\", 1),\n+/// ]);\n /// let iter_values = map.values();\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1372,8 +1383,9 @@ impl<K, V: Debug> fmt::Debug for Values<'_, K, V> {\n /// ```\n /// use std::collections::HashMap;\n ///\n-/// let mut map = HashMap::new();\n-/// map.insert(\"a\", 1);\n+/// let map = HashMap::from([\n+///     (\"a\", 1),\n+/// ]);\n /// let iter = map.drain();\n /// ```\n #[stable(feature = \"drain\", since = \"1.6.0\")]\n@@ -1402,8 +1414,9 @@ impl<'a, K, V> Drain<'a, K, V> {\n ///\n /// use std::collections::HashMap;\n ///\n-/// let mut map = HashMap::new();\n-/// map.insert(\"a\", 1);\n+/// let map = HashMap::from([\n+///     (\"a\", 1),\n+/// ]);\n /// let iter = map.drain_filter(|_k, v| *v % 2 == 0);\n /// ```\n #[unstable(feature = \"hash_drain_filter\", issue = \"59618\")]\n@@ -1426,8 +1439,9 @@ where\n /// ```\n /// use std::collections::HashMap;\n ///\n-/// let mut map = HashMap::new();\n-/// map.insert(\"a\", 1);\n+/// let map = HashMap::from([\n+///     (\"a\", 1),\n+/// ]);\n /// let iter_values = map.values_mut();\n /// ```\n #[stable(feature = \"map_values_mut\", since = \"1.10.0\")]\n@@ -1447,8 +1461,9 @@ pub struct ValuesMut<'a, K: 'a, V: 'a> {\n /// ```\n /// use std::collections::HashMap;\n ///\n-/// let mut map = HashMap::new();\n-/// map.insert(\"a\", 1);\n+/// let map = HashMap::from([\n+///     (\"a\", 1),\n+/// ]);\n /// let iter_keys = map.into_keys();\n /// ```\n #[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n@@ -1468,8 +1483,9 @@ pub struct IntoKeys<K, V> {\n /// ```\n /// use std::collections::HashMap;\n ///\n-/// let mut map = HashMap::new();\n-/// map.insert(\"a\", 1);\n+/// let map = HashMap::from([\n+///     (\"a\", 1),\n+/// ]);\n /// let iter_keys = map.into_values();\n /// ```\n #[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n@@ -2004,10 +2020,11 @@ impl<K, V, S> IntoIterator for HashMap<K, V, S> {\n     /// ```\n     /// use std::collections::HashMap;\n     ///\n-    /// let mut map = HashMap::new();\n-    /// map.insert(\"a\", 1);\n-    /// map.insert(\"b\", 2);\n-    /// map.insert(\"c\", 3);\n+    /// let map = HashMap::from([\n+    ///     (\"a\", 1),\n+    ///     (\"b\", 2),\n+    ///     (\"c\", 3),\n+    /// ]);\n     ///\n     /// // Not possible with .iter()\n     /// let vec: Vec<(&str, i32)> = map.into_iter().collect();"}]}