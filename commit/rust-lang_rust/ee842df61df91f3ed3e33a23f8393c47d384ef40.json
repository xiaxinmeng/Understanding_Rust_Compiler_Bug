{"sha": "ee842df61df91f3ed3e33a23f8393c47d384ef40", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlODQyZGY2MWRmOTFmM2VkM2UzM2EyM2Y4MzkzYzQ3ZDM4NGVmNDA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-06T20:53:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-06T20:53:17Z"}, "message": "Auto merge of #5143 - flip1995:rustup, r=flip1995\n\nRustup to rust-lang/rust#68788\n\ncc rust-lang/rust#68901\n\nchangelog: none", "tree": {"sha": "d96b440cb143b8904b66c92ed94310ea874d9837", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d96b440cb143b8904b66c92ed94310ea874d9837"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee842df61df91f3ed3e33a23f8393c47d384ef40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee842df61df91f3ed3e33a23f8393c47d384ef40", "html_url": "https://github.com/rust-lang/rust/commit/ee842df61df91f3ed3e33a23f8393c47d384ef40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee842df61df91f3ed3e33a23f8393c47d384ef40/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6f310ed0e22a422e7001efbe7e4bf2a0c9a0eff", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6f310ed0e22a422e7001efbe7e4bf2a0c9a0eff", "html_url": "https://github.com/rust-lang/rust/commit/a6f310ed0e22a422e7001efbe7e4bf2a0c9a0eff"}, {"sha": "9897927504ca64b90e2e7a742a22d7ddb6a3bc69", "url": "https://api.github.com/repos/rust-lang/rust/commits/9897927504ca64b90e2e7a742a22d7ddb6a3bc69", "html_url": "https://github.com/rust-lang/rust/commit/9897927504ca64b90e2e7a742a22d7ddb6a3bc69"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "e0e2a0caee4ea4bdfb7bcfce62243f41d788e359", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee842df61df91f3ed3e33a23f8393c47d384ef40/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee842df61df91f3ed3e33a23f8393c47d384ef40/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=ee842df61df91f3ed3e33a23f8393c47d384ef40", "patch": "@@ -372,10 +372,10 @@ impl EarlyLintPass for MiscEarlyLints {\n         check_unneeded_wildcard_pattern(cx, pat);\n     }\n \n-    fn check_fn(&mut self, cx: &EarlyContext<'_>, _: FnKind<'_>, decl: &FnDecl, _: Span, _: NodeId) {\n+    fn check_fn(&mut self, cx: &EarlyContext<'_>, fn_kind: FnKind<'_>, _: Span, _: NodeId) {\n         let mut registered_names: FxHashMap<String, Span> = FxHashMap::default();\n \n-        for arg in &decl.inputs {\n+        for arg in &fn_kind.decl().inputs {\n             if let PatKind::Ident(_, ident, None) = arg.pat.kind {\n                 let arg_name = ident.to_string();\n "}, {"sha": "2a7fbe6c0c64fa59226d4287daa19b8336e26748", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee842df61df91f3ed3e33a23f8393c47d384ef40/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee842df61df91f3ed3e33a23f8393c47d384ef40/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=ee842df61df91f3ed3e33a23f8393c47d384ef40", "patch": "@@ -352,7 +352,7 @@ impl<'a, 'tcx> Visitor<'tcx> for SimilarNamesLocalVisitor<'a, 'tcx> {\n \n impl EarlyLintPass for NonExpressiveNames {\n     fn check_item(&mut self, cx: &EarlyContext<'_>, item: &Item) {\n-        if let ItemKind::Fn(ref sig, _, ref blk) = item.kind {\n+        if let ItemKind::Fn(ref sig, _, Some(ref blk)) = item.kind {\n             do_check(self, cx, &item.attrs, &sig.decl, blk);\n         }\n     }"}, {"sha": "6bf373a9a626545f1e20fe09d3ea5100552ed0ca", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ee842df61df91f3ed3e33a23f8393c47d384ef40/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee842df61df91f3ed3e33a23f8393c47d384ef40/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=ee842df61df91f3ed3e33a23f8393c47d384ef40", "patch": "@@ -235,13 +235,14 @@ impl Return {\n }\n \n impl EarlyLintPass for Return {\n-    fn check_fn(&mut self, cx: &EarlyContext<'_>, kind: FnKind<'_>, decl: &ast::FnDecl, span: Span, _: ast::NodeId) {\n+    fn check_fn(&mut self, cx: &EarlyContext<'_>, kind: FnKind<'_>, span: Span, _: ast::NodeId) {\n         match kind {\n-            FnKind::ItemFn(.., block) | FnKind::Method(.., block) => self.check_block_return(cx, block),\n-            FnKind::Closure(body) => self.check_final_expr(cx, body, Some(body.span), RetReplacement::Empty),\n+            FnKind::Fn(.., Some(block)) => self.check_block_return(cx, block),\n+            FnKind::Closure(_, body) => self.check_final_expr(cx, body, Some(body.span), RetReplacement::Empty),\n+            FnKind::Fn(.., None) => {},\n         }\n         if_chain! {\n-            if let ast::FunctionRetTy::Ty(ref ty) = decl.output;\n+            if let ast::FunctionRetTy::Ty(ref ty) = kind.decl().output;\n             if let ast::TyKind::Tup(ref vals) = ty.kind;\n             if vals.is_empty() && !ty.span.from_expansion() && get_def(span) == get_def(ty.span);\n             then {"}, {"sha": "945999de89fe53bd9c8619d35b243e3791b685f7", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ee842df61df91f3ed3e33a23f8393c47d384ef40/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee842df61df91f3ed3e33a23f8393c47d384ef40/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=ee842df61df91f3ed3e33a23f8393c47d384ef40", "patch": "@@ -380,18 +380,16 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for OuterExpnDataPass {\n declare_lint_pass!(ProduceIce => [PRODUCE_ICE]);\n \n impl EarlyLintPass for ProduceIce {\n-    fn check_fn(&mut self, _: &EarlyContext<'_>, fn_kind: FnKind<'_>, _: &ast::FnDecl, _: Span, _: ast::NodeId) {\n+    fn check_fn(&mut self, _: &EarlyContext<'_>, fn_kind: FnKind<'_>, _: Span, _: ast::NodeId) {\n         if is_trigger_fn(fn_kind) {\n-            panic!(\"Testing the ICE message\");\n+            panic!(\"Would you like some help with that?\");\n         }\n     }\n }\n \n fn is_trigger_fn(fn_kind: FnKind<'_>) -> bool {\n     match fn_kind {\n-        FnKind::ItemFn(ident, ..) | FnKind::Method(ident, ..) => {\n-            ident.name.as_str() == \"it_looks_like_you_are_trying_to_kill_clippy\"\n-        },\n+        FnKind::Fn(_, ident, ..) => ident.name.as_str() == \"it_looks_like_you_are_trying_to_kill_clippy\",\n         FnKind::Closure(..) => false,\n     }\n }"}, {"sha": "a9a65a38c109d4b956f99d62d991a7a5dc0d1758", "filename": "tests/ui/custom_ice_message.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee842df61df91f3ed3e33a23f8393c47d384ef40/tests%2Fui%2Fcustom_ice_message.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee842df61df91f3ed3e33a23f8393c47d384ef40/tests%2Fui%2Fcustom_ice_message.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcustom_ice_message.stderr?ref=ee842df61df91f3ed3e33a23f8393c47d384ef40", "patch": "@@ -1,4 +1,4 @@\n-thread 'rustc' panicked at 'Testing the ICE message', clippy_lints/src/utils/internal_lints.rs\n+thread 'rustc' panicked at 'Would you like some help with that?', clippy_lints/src/utils/internal_lints.rs\n note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n \n error: internal compiler error: unexpected panic"}]}