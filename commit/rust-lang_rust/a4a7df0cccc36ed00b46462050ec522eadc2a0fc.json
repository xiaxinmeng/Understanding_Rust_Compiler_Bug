{"sha": "a4a7df0cccc36ed00b46462050ec522eadc2a0fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0YTdkZjBjY2NjMzZlZDAwYjQ2NDYyMDUwZWM1MjJlYWRjMmEwZmM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-01T22:26:23Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-01T22:26:53Z"}, "message": "Fix rope breakage from de-exporting.", "tree": {"sha": "6294e5cb5e90bdb98cc88a32a43a66baa1e1ea15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6294e5cb5e90bdb98cc88a32a43a66baa1e1ea15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4a7df0cccc36ed00b46462050ec522eadc2a0fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4a7df0cccc36ed00b46462050ec522eadc2a0fc", "html_url": "https://github.com/rust-lang/rust/commit/a4a7df0cccc36ed00b46462050ec522eadc2a0fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4a7df0cccc36ed00b46462050ec522eadc2a0fc/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b18320446e553a3f8436f87306dded57e16a4b94", "url": "https://api.github.com/repos/rust-lang/rust/commits/b18320446e553a3f8436f87306dded57e16a4b94", "html_url": "https://github.com/rust-lang/rust/commit/b18320446e553a3f8436f87306dded57e16a4b94"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "647560099e9644fc63c5c604d17056722c7bdd93", "filename": "src/libstd/rope.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a4a7df0cccc36ed00b46462050ec522eadc2a0fc/src%2Flibstd%2Frope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4a7df0cccc36ed00b46462050ec522eadc2a0fc/src%2Flibstd%2Frope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frope.rs?ref=a4a7df0cccc36ed00b46462050ec522eadc2a0fc", "patch": "@@ -431,24 +431,24 @@ pub fn loop_leaves(rope: Rope, it: fn(node::Leaf) -> bool) -> bool{\n \n pub mod iterator {\n     pub mod leaf {\n-        fn start(rope: Rope) -> node::leaf_iterator::T {\n+        pub fn start(rope: Rope) -> node::leaf_iterator::T {\n             match (rope) {\n               node::Empty      => return node::leaf_iterator::empty(),\n               node::Content(x) => return node::leaf_iterator::start(x)\n             }\n         }\n-        fn next(it: &node::leaf_iterator::T) -> Option<node::Leaf> {\n+        pub fn next(it: &node::leaf_iterator::T) -> Option<node::Leaf> {\n             return node::leaf_iterator::next(it);\n         }\n     }\n     pub mod char {\n-        fn start(rope: Rope) -> node::char_iterator::T {\n+        pub fn start(rope: Rope) -> node::char_iterator::T {\n             match (rope) {\n               node::Empty      => return node::char_iterator::empty(),\n               node::Content(x) => return node::char_iterator::start(x)\n             }\n         }\n-        fn next(it: &node::char_iterator::T) -> Option<char> {\n+        pub fn next(it: &node::char_iterator::T) -> Option<char> {\n             return node::char_iterator::next(it)\n         }\n     }"}]}