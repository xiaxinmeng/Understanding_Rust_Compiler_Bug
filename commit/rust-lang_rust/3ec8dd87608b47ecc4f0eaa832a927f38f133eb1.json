{"sha": "3ec8dd87608b47ecc4f0eaa832a927f38f133eb1", "node_id": "C_kwDOAAsO6NoAKDNlYzhkZDg3NjA4YjQ3ZWNjNGYwZWFhODMyYTkyN2YzOGYxMzNlYjE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-18T12:25:28Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-18T12:34:16Z"}, "message": "implement setting the thread name on freebsd", "tree": {"sha": "87f8342a662f071f3ea4455ba4d09d9d9a18d75a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87f8342a662f071f3ea4455ba4d09d9d9a18d75a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ec8dd87608b47ecc4f0eaa832a927f38f133eb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ec8dd87608b47ecc4f0eaa832a927f38f133eb1", "html_url": "https://github.com/rust-lang/rust/commit/3ec8dd87608b47ecc4f0eaa832a927f38f133eb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ec8dd87608b47ecc4f0eaa832a927f38f133eb1/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a05a8eb805166dcc5408175f16c46303b76c871d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a05a8eb805166dcc5408175f16c46303b76c871d", "html_url": "https://github.com/rust-lang/rust/commit/a05a8eb805166dcc5408175f16c46303b76c871d"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "f93c9700c5a1ca243854d481c6f1b19505e1f598", "filename": "ci.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ec8dd87608b47ecc4f0eaa832a927f38f133eb1/ci.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3ec8dd87608b47ecc4f0eaa832a927f38f133eb1/ci.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci.sh?ref=3ec8dd87608b47ecc4f0eaa832a927f38f133eb1", "patch": "@@ -83,7 +83,7 @@ case $HOST_TARGET in\n     MIRI_TEST_TARGET=i686-unknown-linux-gnu run_tests\n     MIRI_TEST_TARGET=aarch64-apple-darwin run_tests\n     MIRI_TEST_TARGET=i686-pc-windows-msvc run_tests\n-    MIRI_TEST_TARGET=x86_64-unknown-freebsd run_tests_minimal hello integer vec data_race env/var\n+    MIRI_TEST_TARGET=x86_64-unknown-freebsd run_tests_minimal hello integer vec panic/panic concurrency/simple atomic data_race env/var\n     MIRI_TEST_TARGET=aarch64-linux-android run_tests_minimal hello integer vec\n     MIRI_TEST_TARGET=thumbv7em-none-eabihf MIRI_NO_STD=1 run_tests_minimal no_std # no_std embedded architecture\n     ;;"}, {"sha": "92e76ff09dcb582ea7a0ba4438197399ed4ad4a0", "filename": "src/shims/unix/freebsd/foreign_items.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3ec8dd87608b47ecc4f0eaa832a927f38f133eb1/src%2Fshims%2Funix%2Ffreebsd%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ec8dd87608b47ecc4f0eaa832a927f38f133eb1/src%2Fshims%2Funix%2Ffreebsd%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Funix%2Ffreebsd%2Fforeign_items.rs?ref=3ec8dd87608b47ecc4f0eaa832a927f38f133eb1", "patch": "@@ -3,6 +3,7 @@ use rustc_target::spec::abi::Abi;\n \n use crate::*;\n use shims::foreign_items::EmulateByNameResult;\n+use shims::unix::thread::EvalContextExt as _;\n \n impl<'mir, 'tcx: 'mir> EvalContextExt<'mir, 'tcx> for crate::MiriEvalContext<'mir, 'tcx> {}\n \n@@ -16,12 +17,21 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     ) -> InterpResult<'tcx, EmulateByNameResult<'mir, 'tcx>> {\n         let this = self.eval_context_mut();\n         match link_name.as_str() {\n-            // Linux's `pthread_getattr_np` equivalent\n+            // Threading\n             \"pthread_attr_get_np\" if this.frame_in_std() => {\n                 let [_thread, _attr] =\n                     this.check_shim(abi, Abi::C { unwind: false }, link_name, args)?;\n                 this.write_null(dest)?;\n             }\n+            \"pthread_set_name_np\" => {\n+                let [thread, name] =\n+                    this.check_shim(abi, Abi::C { unwind: false }, link_name, args)?;\n+                let res = this.pthread_setname_np(\n+                    this.read_scalar(thread)?.check_init()?,\n+                    this.read_scalar(name)?.check_init()?,\n+                )?;\n+                this.write_scalar(res, dest)?;\n+            }\n \n             // errno\n             \"__error\" => {"}]}