{"sha": "7d406b152ada9c2af9af66724462710da014ff1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkNDA2YjE1MmFkYTljMmFmOWFmNjY3MjQ0NjI3MTBkYTAxNGZmMWE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-30T16:46:26Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-31T23:12:31Z"}, "message": "test WTF8 encoding corner cases", "tree": {"sha": "72ff8ec3e325478ace159560d1e6005a7eafda9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72ff8ec3e325478ace159560d1e6005a7eafda9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d406b152ada9c2af9af66724462710da014ff1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d406b152ada9c2af9af66724462710da014ff1a", "html_url": "https://github.com/rust-lang/rust/commit/7d406b152ada9c2af9af66724462710da014ff1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d406b152ada9c2af9af66724462710da014ff1a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fd0aa316ee7d640e8085b7e620cd3161ff4a679", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fd0aa316ee7d640e8085b7e620cd3161ff4a679", "html_url": "https://github.com/rust-lang/rust/commit/4fd0aa316ee7d640e8085b7e620cd3161ff4a679"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "2b4da785f2ee3aa725cf56c43bab0b0cb8a178fb", "filename": "tests/run-pass/wtf8.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/7d406b152ada9c2af9af66724462710da014ff1a/tests%2Frun-pass%2Fwtf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d406b152ada9c2af9af66724462710da014ff1a/tests%2Frun-pass%2Fwtf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fwtf8.rs?ref=7d406b152ada9c2af9af66724462710da014ff1a", "patch": "@@ -0,0 +1,23 @@\n+// ignore-linux: tests Windows-only APIs\n+// ignore-macos: tests Windows-only APIs\n+\n+use std::os::windows::ffi::{OsStrExt, OsStringExt};\n+use std::ffi::{OsStr, OsString};\n+\n+fn test1() {\n+    let base = \"a\\t\u00e9 \\u{7f}\ud83d\udca9\\r\";\n+    let mut base: Vec<u16> = OsStr::new(base).encode_wide().collect();\n+    base.push(0xD800);\n+    let _res = OsString::from_wide(&base);\n+}\n+\n+fn test2() {\n+    let mut base: Vec<u16> = OsStr::new(\"a\u00e9 \").encode_wide().collect();\n+    base.push(0xD83D);\n+    let mut _res: Vec<u16> = OsString::from_wide(&base).encode_wide().collect();\n+}\n+\n+fn main() {\n+    test1();\n+    test2();\n+}"}]}