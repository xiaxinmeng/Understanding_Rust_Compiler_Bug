{"sha": "abf7f911d88e9209b54cfba2776d7dbca5a440ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiZjdmOTExZDg4ZTkyMDliNTRjZmJhMjc3NmQ3ZGJjYTVhNDQwY2U=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-12T11:53:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-12T11:53:08Z"}, "message": "Auto merge of #3945 - flip1995:rustup, r=phansch\n\nRustup\n\ncc https://github.com/rust-lang/rust/pull/59227#issuecomment-482411861\n\nThis fix is obsolet once rust-lang/rust#59779 and #3926 is merged.", "tree": {"sha": "fde285c1734676e6fa647147bdb9c70ee337ca70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fde285c1734676e6fa647147bdb9c70ee337ca70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abf7f911d88e9209b54cfba2776d7dbca5a440ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abf7f911d88e9209b54cfba2776d7dbca5a440ce", "html_url": "https://github.com/rust-lang/rust/commit/abf7f911d88e9209b54cfba2776d7dbca5a440ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abf7f911d88e9209b54cfba2776d7dbca5a440ce/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6104aefef576c04b36602b6426f90c63be406f69", "url": "https://api.github.com/repos/rust-lang/rust/commits/6104aefef576c04b36602b6426f90c63be406f69", "html_url": "https://github.com/rust-lang/rust/commit/6104aefef576c04b36602b6426f90c63be406f69"}, {"sha": "3fe5eea4e47921fa4b399a8d58c39e8397ad3ef8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fe5eea4e47921fa4b399a8d58c39e8397ad3ef8", "html_url": "https://github.com/rust-lang/rust/commit/3fe5eea4e47921fa4b399a8d58c39e8397ad3ef8"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "4442d8a2d6bfd7bc731e171cfe24a3f10a81e446", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/abf7f911d88e9209b54cfba2776d7dbca5a440ce/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf7f911d88e9209b54cfba2776d7dbca5a440ce/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=abf7f911d88e9209b54cfba2776d7dbca5a440ce", "patch": "@@ -16,7 +16,7 @@ use std::convert::TryInto;\n use std::hash::{Hash, Hasher};\n use syntax::ast::{FloatTy, LitKind};\n use syntax::ptr::P;\n-use syntax_pos::symbol::Symbol;\n+use syntax_pos::symbol::{LocalInternedString, Symbol};\n \n /// A `LitKind`-like enum to fold constant `Expr`s into.\n #[derive(Debug, Clone)]\n@@ -249,7 +249,10 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n                     if let ExprKind::Path(qpath) = &callee.node;\n                     let def = self.tables.qpath_def(qpath, callee.hir_id);\n                     if let Some(def_id) = def.opt_def_id();\n-                    let def_path = get_def_path(self.tcx, def_id);\n+                    let def_path = get_def_path(self.tcx, def_id)\n+                        .iter()\n+                        .map(LocalInternedString::get)\n+                        .collect::<Vec<_>>();\n                     if let &[\"core\", \"num\", impl_ty, \"max_value\"] = &def_path[..];\n                     then {\n                        let value = match impl_ty {"}, {"sha": "3383e47ac776d0a7091993b3d66e2ccea570066e", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/abf7f911d88e9209b54cfba2776d7dbca5a440ce/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf7f911d88e9209b54cfba2776d7dbca5a440ce/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=abf7f911d88e9209b54cfba2776d7dbca5a440ce", "patch": "@@ -220,13 +220,8 @@ pub fn match_def_path<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId, path\n ///     // The given `def_id` is that of an `Option` type\n /// };\n /// ```\n-pub fn get_def_path<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> Vec<&'static str> {\n-    AbsolutePathPrinter { tcx }\n-        .print_def_path(def_id, &[])\n-        .unwrap()\n-        .iter()\n-        .map(LocalInternedString::get)\n-        .collect()\n+pub fn get_def_path<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> Vec<LocalInternedString> {\n+    AbsolutePathPrinter { tcx }.print_def_path(def_id, &[]).unwrap()\n }\n \n /// Checks if type is struct, enum or union type with the given def path."}]}