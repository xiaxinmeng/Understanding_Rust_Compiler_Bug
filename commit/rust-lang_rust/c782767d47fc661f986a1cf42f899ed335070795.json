{"sha": "c782767d47fc661f986a1cf42f899ed335070795", "node_id": "C_kwDOAAsO6NoAKGM3ODI3NjdkNDdmYzY2MWY5ODZhMWNmNDJmODk5ZWQzMzUwNzA3OTU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-31T13:53:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-31T13:53:39Z"}, "message": "Auto merge of #9403 - softmoth:wild_err_expect, r=Alexendoo\n\nmatch_wild_err_arm: Fix typo in note text\n\nchangelog: [`match_wild_err_arm`]: fix typo in note text", "tree": {"sha": "9dda2ff3d3d9c6bfd32936ae2898ceb1bacd5092", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9dda2ff3d3d9c6bfd32936ae2898ceb1bacd5092"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c782767d47fc661f986a1cf42f899ed335070795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c782767d47fc661f986a1cf42f899ed335070795", "html_url": "https://github.com/rust-lang/rust/commit/c782767d47fc661f986a1cf42f899ed335070795", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c782767d47fc661f986a1cf42f899ed335070795/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f51aade56f93175dde89177a92e3669ebd8e7592", "url": "https://api.github.com/repos/rust-lang/rust/commits/f51aade56f93175dde89177a92e3669ebd8e7592", "html_url": "https://github.com/rust-lang/rust/commit/f51aade56f93175dde89177a92e3669ebd8e7592"}, {"sha": "28a055dceacd61d1a0faad075d69f71dfd439678", "url": "https://api.github.com/repos/rust-lang/rust/commits/28a055dceacd61d1a0faad075d69f71dfd439678", "html_url": "https://github.com/rust-lang/rust/commit/28a055dceacd61d1a0faad075d69f71dfd439678"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "a3aa2e4b389afe74f1e40f96da6fb5ea4eab66c9", "filename": "clippy_lints/src/matches/match_wild_err_arm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c782767d47fc661f986a1cf42f899ed335070795/clippy_lints%2Fsrc%2Fmatches%2Fmatch_wild_err_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c782767d47fc661f986a1cf42f899ed335070795/clippy_lints%2Fsrc%2Fmatches%2Fmatch_wild_err_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fmatch_wild_err_arm.rs?ref=c782767d47fc661f986a1cf42f899ed335070795", "patch": "@@ -40,7 +40,7 @@ pub(crate) fn check<'tcx>(cx: &LateContext<'tcx>, ex: &Expr<'tcx>, arms: &[Arm<'\n                                 arm.pat.span,\n                                 &format!(\"`Err({})` matches all errors\", ident_bind_name),\n                                 None,\n-                                \"match each error separately or use the error output, or use `.except(msg)` if the error case is unreachable\",\n+                                \"match each error separately or use the error output, or use `.expect(msg)` if the error case is unreachable\",\n                             );\n                         }\n                     }"}, {"sha": "2d66daea8046e15c67bb4a3d2d4b7ea00c19eb21", "filename": "tests/ui/match_wild_err_arm.edition2018.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c782767d47fc661f986a1cf42f899ed335070795/tests%2Fui%2Fmatch_wild_err_arm.edition2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c782767d47fc661f986a1cf42f899ed335070795/tests%2Fui%2Fmatch_wild_err_arm.edition2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_wild_err_arm.edition2018.stderr?ref=c782767d47fc661f986a1cf42f899ed335070795", "patch": "@@ -5,31 +5,31 @@ LL |         Err(_) => panic!(\"err\"),\n    |         ^^^^^^\n    |\n    = note: `-D clippy::match-wild-err-arm` implied by `-D warnings`\n-   = note: match each error separately or use the error output, or use `.except(msg)` if the error case is unreachable\n+   = note: match each error separately or use the error output, or use `.expect(msg)` if the error case is unreachable\n \n error: `Err(_)` matches all errors\n   --> $DIR/match_wild_err_arm.rs:20:9\n    |\n LL |         Err(_) => panic!(),\n    |         ^^^^^^\n    |\n-   = note: match each error separately or use the error output, or use `.except(msg)` if the error case is unreachable\n+   = note: match each error separately or use the error output, or use `.expect(msg)` if the error case is unreachable\n \n error: `Err(_)` matches all errors\n   --> $DIR/match_wild_err_arm.rs:26:9\n    |\n LL |         Err(_) => {\n    |         ^^^^^^\n    |\n-   = note: match each error separately or use the error output, or use `.except(msg)` if the error case is unreachable\n+   = note: match each error separately or use the error output, or use `.expect(msg)` if the error case is unreachable\n \n error: `Err(_e)` matches all errors\n   --> $DIR/match_wild_err_arm.rs:34:9\n    |\n LL |         Err(_e) => panic!(),\n    |         ^^^^^^^\n    |\n-   = note: match each error separately or use the error output, or use `.except(msg)` if the error case is unreachable\n+   = note: match each error separately or use the error output, or use `.expect(msg)` if the error case is unreachable\n \n error: aborting due to 4 previous errors\n "}, {"sha": "2d66daea8046e15c67bb4a3d2d4b7ea00c19eb21", "filename": "tests/ui/match_wild_err_arm.edition2021.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c782767d47fc661f986a1cf42f899ed335070795/tests%2Fui%2Fmatch_wild_err_arm.edition2021.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c782767d47fc661f986a1cf42f899ed335070795/tests%2Fui%2Fmatch_wild_err_arm.edition2021.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_wild_err_arm.edition2021.stderr?ref=c782767d47fc661f986a1cf42f899ed335070795", "patch": "@@ -5,31 +5,31 @@ LL |         Err(_) => panic!(\"err\"),\n    |         ^^^^^^\n    |\n    = note: `-D clippy::match-wild-err-arm` implied by `-D warnings`\n-   = note: match each error separately or use the error output, or use `.except(msg)` if the error case is unreachable\n+   = note: match each error separately or use the error output, or use `.expect(msg)` if the error case is unreachable\n \n error: `Err(_)` matches all errors\n   --> $DIR/match_wild_err_arm.rs:20:9\n    |\n LL |         Err(_) => panic!(),\n    |         ^^^^^^\n    |\n-   = note: match each error separately or use the error output, or use `.except(msg)` if the error case is unreachable\n+   = note: match each error separately or use the error output, or use `.expect(msg)` if the error case is unreachable\n \n error: `Err(_)` matches all errors\n   --> $DIR/match_wild_err_arm.rs:26:9\n    |\n LL |         Err(_) => {\n    |         ^^^^^^\n    |\n-   = note: match each error separately or use the error output, or use `.except(msg)` if the error case is unreachable\n+   = note: match each error separately or use the error output, or use `.expect(msg)` if the error case is unreachable\n \n error: `Err(_e)` matches all errors\n   --> $DIR/match_wild_err_arm.rs:34:9\n    |\n LL |         Err(_e) => panic!(),\n    |         ^^^^^^^\n    |\n-   = note: match each error separately or use the error output, or use `.except(msg)` if the error case is unreachable\n+   = note: match each error separately or use the error output, or use `.expect(msg)` if the error case is unreachable\n \n error: aborting due to 4 previous errors\n "}]}