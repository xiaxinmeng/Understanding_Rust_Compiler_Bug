{"sha": "6ec4f91610901a023a6503bf0b4c1c40f4b00bf2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlYzRmOTE2MTA5MDFhMDIzYTY1MDNiZjBiNGMxYzQwZjRiMDBiZjI=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-05-11T22:18:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-11T22:18:02Z"}, "message": "Rollup merge of #85136 - shirshak55:master, r=dtolnay\n\nChange param name (k to key and v to value) in std::env module\n\n1. When I was reading code the ide displayed `k` and `v`, so I\nthought it would be better to show key and value?\n\n2. I noticed var method already uses `key` instead of `k` so it\nis more consistent to use `key` instead of `k`?\n\nThanks", "tree": {"sha": "1f2eb7fe1951ba9f6138234c7577e3078f21d183", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f2eb7fe1951ba9f6138234c7577e3078f21d183"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ec4f91610901a023a6503bf0b4c1c40f4b00bf2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgmwKaCRBK7hj4Ov3rIwAAgYQIABjU3mL4L1fVcp+pPv+ca+IX\n9auBx2rpEt7ZxuJyE0oZuN54zr7QZyCBPqVAWTJZaXd9ZaY7LplcQGrdQS6aut58\nOzzWb+l3v5uCWS9F0KtK6tXkC2MIKUBDuqD8o92zl3dClVQSPtpmRgOp+tAAtqB/\nmTS9BvRY0qsBohqU/vgDig8EFhUsHq5GeXiAXm3PjyyWNa8Co7XYiaWTZ+cgF8qM\n3/2jcZaKqx4ZtuZDGbCrqVfx8xc5KqEctpOlVgLbMOY0kiAD1B7tp92oSlxRmIlI\nknNscSWqZyPAImLtVDwK0XXGzxqRGEKmFwCxe7WpX41oy+NHnrT7WkCYmNGcwuI=\n=QiDX\n-----END PGP SIGNATURE-----\n", "payload": "tree 1f2eb7fe1951ba9f6138234c7577e3078f21d183\nparent 4ab305031caed3d825616f4d7f131b5700b35810\nparent 0778e8dcb8842add101787fbf0e751009b073977\nauthor Yuki Okushi <jtitor@2k36.org> 1620771482 +0900\ncommitter GitHub <noreply@github.com> 1620771482 +0900\n\nRollup merge of #85136 - shirshak55:master, r=dtolnay\n\nChange param name (k to key and v to value) in std::env module\n\n1. When I was reading code the ide displayed `k` and `v`, so I\nthought it would be better to show key and value?\n\n2. I noticed var method already uses `key` instead of `k` so it\nis more consistent to use `key` instead of `k`?\n\nThanks\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ec4f91610901a023a6503bf0b4c1c40f4b00bf2", "html_url": "https://github.com/rust-lang/rust/commit/6ec4f91610901a023a6503bf0b4c1c40f4b00bf2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ec4f91610901a023a6503bf0b4c1c40f4b00bf2/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ab305031caed3d825616f4d7f131b5700b35810", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ab305031caed3d825616f4d7f131b5700b35810", "html_url": "https://github.com/rust-lang/rust/commit/4ab305031caed3d825616f4d7f131b5700b35810"}, {"sha": "0778e8dcb8842add101787fbf0e751009b073977", "url": "https://api.github.com/repos/rust-lang/rust/commits/0778e8dcb8842add101787fbf0e751009b073977", "html_url": "https://github.com/rust-lang/rust/commit/0778e8dcb8842add101787fbf0e751009b073977"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "4403280efc11b9f6f0d93f96800c8ee8acd4cc70", "filename": "library/std/src/env.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6ec4f91610901a023a6503bf0b4c1c40f4b00bf2/library%2Fstd%2Fsrc%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ec4f91610901a023a6503bf0b4c1c40f4b00bf2/library%2Fstd%2Fsrc%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fenv.rs?ref=6ec4f91610901a023a6503bf0b4c1c40f4b00bf2", "patch": "@@ -324,13 +324,13 @@ impl Error for VarError {\n /// assert_eq!(env::var(key), Ok(\"VALUE\".to_string()));\n /// ```\n #[stable(feature = \"env\", since = \"1.0.0\")]\n-pub fn set_var<K: AsRef<OsStr>, V: AsRef<OsStr>>(k: K, v: V) {\n-    _set_var(k.as_ref(), v.as_ref())\n+pub fn set_var<K: AsRef<OsStr>, V: AsRef<OsStr>>(key: K, value: V) {\n+    _set_var(key.as_ref(), value.as_ref())\n }\n \n-fn _set_var(k: &OsStr, v: &OsStr) {\n-    os_imp::setenv(k, v).unwrap_or_else(|e| {\n-        panic!(\"failed to set environment variable `{:?}` to `{:?}`: {}\", k, v, e)\n+fn _set_var(key: &OsStr, value: &OsStr) {\n+    os_imp::setenv(key, value).unwrap_or_else(|e| {\n+        panic!(\"failed to set environment variable `{:?}` to `{:?}`: {}\", key, value, e)\n     })\n }\n \n@@ -366,13 +366,13 @@ fn _set_var(k: &OsStr, v: &OsStr) {\n /// assert!(env::var(key).is_err());\n /// ```\n #[stable(feature = \"env\", since = \"1.0.0\")]\n-pub fn remove_var<K: AsRef<OsStr>>(k: K) {\n-    _remove_var(k.as_ref())\n+pub fn remove_var<K: AsRef<OsStr>>(key: K) {\n+    _remove_var(key.as_ref())\n }\n \n-fn _remove_var(k: &OsStr) {\n-    os_imp::unsetenv(k)\n-        .unwrap_or_else(|e| panic!(\"failed to remove environment variable `{:?}`: {}\", k, e))\n+fn _remove_var(key: &OsStr) {\n+    os_imp::unsetenv(key)\n+        .unwrap_or_else(|e| panic!(\"failed to remove environment variable `{:?}`: {}\", key, e))\n }\n \n /// An iterator that splits an environment variable into paths according to"}]}