{"sha": "90eaaf666b640433d20d5a1320637e8027924297", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwZWFhZjY2NmI2NDA0MzNkMjBkNWExMzIwNjM3ZTgwMjc5MjQyOTc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-26T06:03:06Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-26T06:03:06Z"}, "message": "Improve sever_slot logging.", "tree": {"sha": "47cd5d5f044b2c6ebb161cc869363efde425fdfc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47cd5d5f044b2c6ebb161cc869363efde425fdfc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90eaaf666b640433d20d5a1320637e8027924297", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90eaaf666b640433d20d5a1320637e8027924297", "html_url": "https://github.com/rust-lang/rust/commit/90eaaf666b640433d20d5a1320637e8027924297", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90eaaf666b640433d20d5a1320637e8027924297/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49ac5e631224da77568e685571af5d08ab407060", "url": "https://api.github.com/repos/rust-lang/rust/commits/49ac5e631224da77568e685571af5d08ab407060", "html_url": "https://github.com/rust-lang/rust/commit/49ac5e631224da77568e685571af5d08ab407060"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "229395c23facb0ba18191e7a7102591eed71b899", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/90eaaf666b640433d20d5a1320637e8027924297/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/90eaaf666b640433d20d5a1320637e8027924297/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=90eaaf666b640433d20d5a1320637e8027924297", "patch": "@@ -2658,22 +2658,20 @@ let trans_visitor\n       (slot:Ast.slot)\n       (curr_iso:Ast.ty_iso option)\n       : unit =\n+    let _ = note_gc_step slot \"severing\" in\n     let ty = slot_ty slot in\n       match slot_mem_ctrl slot with\n           MEM_gc ->\n \n             let _ = check_exterior_rty cell in\n             let null_jmp = null_check cell in\n             let rc = exterior_rc_cell cell in\n-            let _ = note_gc_step slot \"severing\" in\n+            let _ = note_gc_step slot \"severing GC slot\" in\n               emit (Il.binary Il.SUB rc (Il.Cell rc) one);\n               mov cell zero;\n               patch null_jmp\n \n         | MEM_interior when type_is_structured ty ->\n-            (iflog (fun _ ->\n-                      annotate (\"sever interior slot \" ^\n-                                  (Fmt.fmt_to_str Ast.fmt_slot slot))));\n             let (mem, _) = need_mem_cell cell in\n             let tmp = next_vreg_cell Il.voidptr_t in\n             let ty = maybe_iso curr_iso ty in"}]}