{"sha": "311578d7f4553a07142f5f21bbe2ad5b78f977e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxMTU3OGQ3ZjQ1NTNhMDcxNDJmNWYyMWJiZTJhZDViNzhmOTc3ZTM=", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2021-08-16T07:07:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-16T07:07:42Z"}, "message": "fix typo in bound_region_errors.rs\n\nCo-authored-by: matthewjasper <20113453+matthewjasper@users.noreply.github.com>", "tree": {"sha": "03bdcc14e9090c221f7a38295b47a116a830bc82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03bdcc14e9090c221f7a38295b47a116a830bc82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/311578d7f4553a07142f5f21bbe2ad5b78f977e3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhGg6+CRBK7hj4Ov3rIwAAzWoIAKHxSfoyWI6o/uADekjVnEgC\n2fwRkjaVclseuJMJh5ebkgj01/Kf4/tFqdM4asUrApjhyjfsruSiFOChUy7KmIKK\nrpQpB8k9GSCC01t2baqIcl/0oblEnQahgg5QgQKssmNKCfBlndWJ6lq97HcieniN\nEN7BRlI0IvovYAioGtHG3YtdMk7slSPcm//FbAGXJCXz6PcLRWqhloETDNzGVuN1\n9Gwb5mNcIGC3KjlxRnmEYRtwHgWN/Ip2yx4rGseAdsfUGsIIVHeNpk6rn8wlwaTw\nzr3E1BoXGoU+VhUq8Wvq8aErbAAqv3sIIpilKJenPUtunb5LtnQJFOmEQ0d1svE=\n=EFxH\n-----END PGP SIGNATURE-----\n", "payload": "tree 03bdcc14e9090c221f7a38295b47a116a830bc82\nparent 2cf4b873935d418b13712da7471f9cd36676aec1\nauthor R\u00e9my Rakic <remy.rakic+github@gmail.com> 1629097662 +0200\ncommitter GitHub <noreply@github.com> 1629097662 +0200\n\nfix typo in bound_region_errors.rs\n\nCo-authored-by: matthewjasper <20113453+matthewjasper@users.noreply.github.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/311578d7f4553a07142f5f21bbe2ad5b78f977e3", "html_url": "https://github.com/rust-lang/rust/commit/311578d7f4553a07142f5f21bbe2ad5b78f977e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/311578d7f4553a07142f5f21bbe2ad5b78f977e3/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cf4b873935d418b13712da7471f9cd36676aec1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cf4b873935d418b13712da7471f9cd36676aec1", "html_url": "https://github.com/rust-lang/rust/commit/2cf4b873935d418b13712da7471f9cd36676aec1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ad04cf54494a5ba444472faed9bb3f1983a8975c", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/bound_region_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/311578d7f4553a07142f5f21bbe2ad5b78f977e3/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fbound_region_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/311578d7f4553a07142f5f21bbe2ad5b78f977e3/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fbound_region_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fbound_region_errors.rs?ref=311578d7f4553a07142f5f21bbe2ad5b78f977e3", "patch": "@@ -269,7 +269,7 @@ fn try_extract_error_from_fulfill_cx<'tcx>(\n ) -> Option<DiagnosticBuilder<'tcx>> {\n     let tcx = infcx.tcx;\n \n-    // We generally shouldn't have here because the query was\n+    // We generally shouldn't have errors here because the query was\n     // already run, but there's no point using `delay_span_bug`\n     // when we're going to emit an error here anyway.\n     let _errors = fulfill_cx.select_all_or_error(infcx).err().unwrap_or_else(Vec::new);"}]}