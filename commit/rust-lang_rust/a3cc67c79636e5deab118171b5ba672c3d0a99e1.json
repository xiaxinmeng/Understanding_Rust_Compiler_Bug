{"sha": "a3cc67c79636e5deab118171b5ba672c3d0a99e1", "node_id": "C_kwDOAAsO6NoAKGEzY2M2N2M3OTYzNmU1ZGVhYjExODE3MWI1YmE2NzJjM2QwYTk5ZTE", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-10-01T16:45:33Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-10-01T16:45:33Z"}, "message": "Remove unused target_cpu and tune_cpu methods from ExtraBackendMethods", "tree": {"sha": "0ca1543370d9869c2d7b5dfe6653278dea242f87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ca1543370d9869c2d7b5dfe6653278dea242f87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3cc67c79636e5deab118171b5ba672c3d0a99e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3cc67c79636e5deab118171b5ba672c3d0a99e1", "html_url": "https://github.com/rust-lang/rust/commit/a3cc67c79636e5deab118171b5ba672c3d0a99e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3cc67c79636e5deab118171b5ba672c3d0a99e1/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c431ea681c51c9b0eedf070a72f5c7c3ad3b87a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c431ea681c51c9b0eedf070a72f5c7c3ad3b87a3", "html_url": "https://github.com/rust-lang/rust/commit/c431ea681c51c9b0eedf070a72f5c7c3ad3b87a3"}], "stats": {"total": 17, "additions": 0, "deletions": 17}, "files": [{"sha": "accd02ab0026991fa389acd7e6e0c97ab748948a", "filename": "compiler/rustc_codegen_gcc/src/lib.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a3cc67c79636e5deab118171b5ba672c3d0a99e1/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3cc67c79636e5deab118171b5ba672c3d0a99e1/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs?ref=a3cc67c79636e5deab118171b5ba672c3d0a99e1", "patch": "@@ -171,15 +171,6 @@ impl ExtraBackendMethods for GccCodegenBackend {\n             Ok(())\n         })\n     }\n-\n-    fn target_cpu<'b>(&self, _sess: &'b Session) -> &'b str {\n-        unimplemented!();\n-    }\n-\n-    fn tune_cpu<'b>(&self, _sess: &'b Session) -> Option<&'b str> {\n-        None\n-        // TODO(antoyo)\n-    }\n }\n \n pub struct ModuleBuffer;"}, {"sha": "89c7e51d09ec1affd65e17bb73aa5317b5921723", "filename": "compiler/rustc_codegen_llvm/src/lib.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a3cc67c79636e5deab118171b5ba672c3d0a99e1/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3cc67c79636e5deab118171b5ba672c3d0a99e1/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs?ref=a3cc67c79636e5deab118171b5ba672c3d0a99e1", "patch": "@@ -131,12 +131,6 @@ impl ExtraBackendMethods for LlvmCodegenBackend {\n     ) -> TargetMachineFactoryFn<Self> {\n         back::write::target_machine_factory(sess, optlvl, target_features)\n     }\n-    fn target_cpu<'b>(&self, sess: &'b Session) -> &'b str {\n-        llvm_util::target_cpu(sess)\n-    }\n-    fn tune_cpu<'b>(&self, sess: &'b Session) -> Option<&'b str> {\n-        llvm_util::tune_cpu(sess)\n-    }\n \n     fn spawn_thread<F, T>(time_trace: bool, f: F) -> std::thread::JoinHandle<T>\n     where"}, {"sha": "87e347c61e2b8b94f423472a0282dcacc779de3c", "filename": "compiler/rustc_codegen_ssa/src/traits/backend.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a3cc67c79636e5deab118171b5ba672c3d0a99e1/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbackend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3cc67c79636e5deab118171b5ba672c3d0a99e1/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbackend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbackend.rs?ref=a3cc67c79636e5deab118171b5ba672c3d0a99e1", "patch": "@@ -134,8 +134,6 @@ pub trait ExtraBackendMethods: CodegenBackend + WriteBackendMethods + Sized + Se\n         opt_level: config::OptLevel,\n         target_features: &[String],\n     ) -> TargetMachineFactoryFn<Self>;\n-    fn target_cpu<'b>(&self, sess: &'b Session) -> &'b str;\n-    fn tune_cpu<'b>(&self, sess: &'b Session) -> Option<&'b str>;\n \n     fn spawn_thread<F, T>(_time_trace: bool, f: F) -> std::thread::JoinHandle<T>\n     where"}]}