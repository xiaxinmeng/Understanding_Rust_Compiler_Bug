{"sha": "20f597ffcd29d71d116c617def76291689549d6c", "node_id": "C_kwDOAAsO6NoAKDIwZjU5N2ZmY2QyOWQ3MWQxMTZjNjE3ZGVmNzYyOTE2ODk1NDlkNmM", "commit": {"author": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2022-04-21T12:35:40Z"}, "committer": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2022-06-14T12:50:52Z"}, "message": "Add LLVM module flags required for the VFE opt\n\nTo apply the optimization the `Virtual Function Elim` module flag has to\nbe set. To apply this optimization post-link the `LTOPostLink` module\nflag has to be set.", "tree": {"sha": "ef75823552206544327e02a1347a80c4d8996319", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef75823552206544327e02a1347a80c4d8996319"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20f597ffcd29d71d116c617def76291689549d6c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmKohCwACgkQHKDfKvWd\naKXveQ/9EgZhZwgSFN2OZmWm0PhDaBGk1VPIV4LJjLol73WVb6PyWBFOl1vZu8BH\noDyHGbXqkv/q9MFZMHxN/6p9eSKNOoS37xzaqPHITK3Z3wsUlQhIGo/AemUg47bo\nkp5UowZro3Jr8p7qr9FgafTswl6PhcGVJFiLh4EWI/Al0212sKsFKWJR3fKtN/AW\nEqW3QlKseOzTv0k2vsO6mMC1QG+vahubfkjeKps4IAFuVI590ZG1U32npNixDel3\nhTbcxTI5yqrjLnxkZTWzhkrPC/EOhD3llbAs+Suk8laXpEqT2s3feQ1LTQpwJPl9\ne96Q3h7Fhc1iL3cfyZsSjB7a4VRgrugrsj8ruPYrZkLDfSvIb4KihWHwvaHrMVD3\ng2d0BbMqIbE5q3oR+2KGRNi28LXhQhNKdBthyUGniuxblh7eAOqfOlPQp/vXVZdM\npRs0ALElwjHq+C/hGbbrFY/JV1wOSBa8RDzBL5iqvGFUO2BeIn2WhPAz4HjAcbkp\nk9mm+b3wEcAwYLBJkcRkgB/EH5m3+3HZRPtENkKGONUnJEMV5vwaalxlrkRn5hxw\n2j+kr/6yhbTeIeG+oU+GP+RV9XtZgrEd7Bs6+7TpWMMezyiNXwnpqDlfz2F2qm6b\nrtTY0bnB+zsFoycI2bQzuzWNjZMlh5jYRPj/Ygg4kHyW5d9p4CU=\n=IQNA\n-----END PGP SIGNATURE-----", "payload": "tree ef75823552206544327e02a1347a80c4d8996319\nparent def3fd8e9224128ffdf4cb0a7f08306f757a059a\nauthor flip1995 <philipp.krones@embecosm.com> 1650544540 +0100\ncommitter Philipp Krones <hello@philkrones.com> 1655211052 +0200\n\nAdd LLVM module flags required for the VFE opt\n\nTo apply the optimization the `Virtual Function Elim` module flag has to\nbe set. To apply this optimization post-link the `LTOPostLink` module\nflag has to be set.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20f597ffcd29d71d116c617def76291689549d6c", "html_url": "https://github.com/rust-lang/rust/commit/20f597ffcd29d71d116c617def76291689549d6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20f597ffcd29d71d116c617def76291689549d6c/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "def3fd8e9224128ffdf4cb0a7f08306f757a059a", "url": "https://api.github.com/repos/rust-lang/rust/commits/def3fd8e9224128ffdf4cb0a7f08306f757a059a", "html_url": "https://github.com/rust-lang/rust/commit/def3fd8e9224128ffdf4cb0a7f08306f757a059a"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "38402e0431379ffb3f5f83c7951591788e504c4c", "filename": "compiler/rustc_codegen_llvm/src/back/lto.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/20f597ffcd29d71d116c617def76291689549d6c/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20f597ffcd29d71d116c617def76291689549d6c/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs?ref=20f597ffcd29d71d116c617def76291689549d6c", "patch": "@@ -586,9 +586,21 @@ pub(crate) fn run_pass_manager(\n     // LTO-specific optimization passes that LLVM provides.\n     //\n     // This code is based off the code found in llvm's LTO code generator:\n-    //      tools/lto/LTOCodeGenerator.cpp\n+    //      llvm/lib/LTO/LTOCodeGenerator.cpp\n     debug!(\"running the pass manager\");\n     unsafe {\n+        if !llvm::LLVMRustHasModuleFlag(\n+            module.module_llvm.llmod(),\n+            \"LTOPostLink\".as_ptr().cast(),\n+            11,\n+        ) {\n+            llvm::LLVMRustAddModuleFlag(\n+                module.module_llvm.llmod(),\n+                llvm::LLVMModFlagBehavior::Error,\n+                \"LTOPostLink\\0\".as_ptr().cast(),\n+                1,\n+            );\n+        }\n         if llvm_util::should_use_new_llvm_pass_manager(\n             &config.new_llvm_pass_manager,\n             &cgcx.target_arch,"}, {"sha": "27fe60161d59998f1cd043e5d298f7e0a9cd9074", "filename": "compiler/rustc_codegen_llvm/src/context.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/20f597ffcd29d71d116c617def76291689549d6c/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20f597ffcd29d71d116c617def76291689549d6c/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs?ref=20f597ffcd29d71d116c617def76291689549d6c", "patch": "@@ -326,6 +326,15 @@ pub unsafe fn create_module<'ll>(\n         )\n     }\n \n+    if sess.opts.debugging_opts.virtual_function_elimination {\n+        llvm::LLVMRustAddModuleFlag(\n+            llmod,\n+            llvm::LLVMModFlagBehavior::Error,\n+            \"Virtual Function Elim\\0\".as_ptr().cast(),\n+            1,\n+        );\n+    }\n+\n     llmod\n }\n "}, {"sha": "4f7b082dac4c2b83f9895c6e67deb00badaaedca", "filename": "compiler/rustc_codegen_llvm/src/llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/20f597ffcd29d71d116c617def76291689549d6c/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20f597ffcd29d71d116c617def76291689549d6c/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs?ref=20f597ffcd29d71d116c617def76291689549d6c", "patch": "@@ -1936,6 +1936,7 @@ extern \"C\" {\n         name: *const c_char,\n         value: u32,\n     );\n+    pub fn LLVMRustHasModuleFlag(M: &Module, name: *const c_char, len: size_t) -> bool;\n \n     pub fn LLVMRustMetadataAsValue<'a>(C: &'a Context, MD: &'a Metadata) -> &'a Value;\n "}, {"sha": "a2dd0a7bcdc61a4ceeb7532390b4eaee283287bd", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/20f597ffcd29d71d116c617def76291689549d6c/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/20f597ffcd29d71d116c617def76291689549d6c/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=20f597ffcd29d71d116c617def76291689549d6c", "patch": "@@ -672,6 +672,11 @@ extern \"C\" void LLVMRustAddModuleFlag(\n   unwrap(M)->addModuleFlag(MergeBehavior, Name, Value);\n }\n \n+extern \"C\" bool LLVMRustHasModuleFlag(LLVMModuleRef M, const char *Name,\n+                                      size_t Len) {\n+  return unwrap(M)->getModuleFlag(StringRef(Name, Len)) != nullptr;\n+}\n+\n extern \"C\" LLVMValueRef LLVMRustMetadataAsValue(LLVMContextRef C, LLVMMetadataRef MD) {\n   return wrap(MetadataAsValue::get(*unwrap(C), unwrap(MD)));\n }"}]}