{"sha": "885d0d3d3369bef72590a4d5671c0de83e968dda", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4NWQwZDNkMzM2OWJlZjcyNTkwYTRkNTY3MWMwZGU4M2U5NjhkZGE=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-03-11T05:34:25Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-03-12T08:03:34Z"}, "message": "Stop parsing __asm__.", "tree": {"sha": "e8aba38593e148e934f3efd22171dbfbd776d210", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8aba38593e148e934f3efd22171dbfbd776d210"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/885d0d3d3369bef72590a4d5671c0de83e968dda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/885d0d3d3369bef72590a4d5671c0de83e968dda", "html_url": "https://github.com/rust-lang/rust/commit/885d0d3d3369bef72590a4d5671c0de83e968dda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/885d0d3d3369bef72590a4d5671c0de83e968dda/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "666e1b463600841ae593a1468a837dc59bb7cab5", "url": "https://api.github.com/repos/rust-lang/rust/commits/666e1b463600841ae593a1468a837dc59bb7cab5", "html_url": "https://github.com/rust-lang/rust/commit/666e1b463600841ae593a1468a837dc59bb7cab5"}], "stats": {"total": 11, "additions": 1, "deletions": 10}, "files": [{"sha": "f811fbf585542328f9868d3da8d92b39a1822052", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/885d0d3d3369bef72590a4d5671c0de83e968dda/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/885d0d3d3369bef72590a4d5671c0de83e968dda/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=885d0d3d3369bef72590a4d5671c0de83e968dda", "patch": "@@ -11,7 +11,7 @@ elseif exists(\"b:current_syntax\")\n endif\n \n syn match     rustAssert      \"\\<assert\\(\\w\\)*\"\n-syn keyword   rustKeyword     __asm__ as break\n+syn keyword   rustKeyword     as break\n syn keyword   rustKeyword     copy do drop else extern\n syn keyword   rustKeyword     for if impl let log\n syn keyword   rustKeyword     loop match mod once priv pub pure"}, {"sha": "51e36d9ec02c1559ceca165bbcd59cc3ea16156c", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/885d0d3d3369bef72590a4d5671c0de83e968dda/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/885d0d3d3369bef72590a4d5671c0de83e968dda/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=885d0d3d3369bef72590a4d5671c0de83e968dda", "patch": "@@ -1184,14 +1184,6 @@ pub impl Parser {\n                 }\n             }\n             hi = self.span.hi;\n-        } else if self.eat_keyword(&~\"__asm__\") {\n-            self.expect(&token::LPAREN);\n-            let asm = self.parse_str();\n-            self.expect(&token::COMMA);\n-            let cons = self.parse_str();\n-            ex = expr_inline_asm(asm, cons);\n-            hi = self.span.hi;\n-            self.expect(&token::RPAREN);\n         } else if self.eat_keyword(&~\"log\") {\n             self.expect(&token::LPAREN);\n             let lvl = self.parse_expr();"}, {"sha": "81aacbf173d5e34388d00594f03de203405f447b", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/885d0d3d3369bef72590a4d5671c0de83e968dda/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/885d0d3d3369bef72590a4d5671c0de83e968dda/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=885d0d3d3369bef72590a4d5671c0de83e968dda", "patch": "@@ -488,7 +488,6 @@ pub fn temporary_keyword_table() -> HashMap<~str, ()> {\n pub fn strict_keyword_table() -> HashMap<~str, ()> {\n     let words = HashMap();\n     let keys = ~[\n-        ~\"__asm__\",\n         ~\"as\", ~\"assert\",\n         ~\"break\",\n         ~\"const\", ~\"copy\","}]}