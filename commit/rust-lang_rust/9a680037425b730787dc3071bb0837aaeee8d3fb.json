{"sha": "9a680037425b730787dc3071bb0837aaeee8d3fb", "node_id": "C_kwDOAAsO6NoAKDlhNjgwMDM3NDI1YjczMDc4N2RjMzA3MWJiMDgzN2FhZWVlOGQzZmI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-12-10T23:58:13Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-12-11T10:08:46Z"}, "message": "Do not ICE when suggesting elided lifetimes on non-existent spans.", "tree": {"sha": "b063020d97a8f8959d6280f173f16b2627d456c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b063020d97a8f8959d6280f173f16b2627d456c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a680037425b730787dc3071bb0837aaeee8d3fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a680037425b730787dc3071bb0837aaeee8d3fb", "html_url": "https://github.com/rust-lang/rust/commit/9a680037425b730787dc3071bb0837aaeee8d3fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a680037425b730787dc3071bb0837aaeee8d3fb/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9e997d9ebaf3b3d9bd547c22620ecdf3aee8a3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9e997d9ebaf3b3d9bd547c22620ecdf3aee8a3e", "html_url": "https://github.com/rust-lang/rust/commit/d9e997d9ebaf3b3d9bd547c22620ecdf3aee8a3e"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "feb4f82ce8ddcc53088ab561fdae62dc76f937b3", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9a680037425b730787dc3071bb0837aaeee8d3fb/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a680037425b730787dc3071bb0837aaeee8d3fb/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=9a680037425b730787dc3071bb0837aaeee8d3fb", "patch": "@@ -2115,6 +2115,11 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n                     })\n                     .map(|(formatter, span)| (*span, formatter(name)))\n                     .collect();\n+                if spans_suggs.is_empty() {\n+                    // If all the spans come from macros, we cannot extract snippets and then\n+                    // `formatters` only contains None and `spans_suggs` is empty.\n+                    return;\n+                }\n                 err.multipart_suggestion_verbose(\n                     &format!(\n                         \"consider using the `{}` lifetime\","}]}