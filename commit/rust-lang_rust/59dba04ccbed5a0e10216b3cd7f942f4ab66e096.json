{"sha": "59dba04ccbed5a0e10216b3cd7f942f4ab66e096", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5ZGJhMDRjY2JlZDVhMGUxMDIxNmIzY2Q3Zjk0MmY0YWI2NmUwOTY=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-03-15T13:51:23Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-03-15T13:56:14Z"}, "message": "Improve `find_binding_init` docs", "tree": {"sha": "2161eed3e7fcb50703ccca1bc03e8eb3494ddde9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2161eed3e7fcb50703ccca1bc03e8eb3494ddde9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59dba04ccbed5a0e10216b3cd7f942f4ab66e096", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59dba04ccbed5a0e10216b3cd7f942f4ab66e096", "html_url": "https://github.com/rust-lang/rust/commit/59dba04ccbed5a0e10216b3cd7f942f4ab66e096", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59dba04ccbed5a0e10216b3cd7f942f4ab66e096/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecf0c76c369a80c1a2de61e25c94b7df5dc7d164", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecf0c76c369a80c1a2de61e25c94b7df5dc7d164", "html_url": "https://github.com/rust-lang/rust/commit/ecf0c76c369a80c1a2de61e25c94b7df5dc7d164"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "5b2529b4930d9c4955f0afeac83a7f1745fff5fc", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/59dba04ccbed5a0e10216b3cd7f942f4ab66e096/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59dba04ccbed5a0e10216b3cd7f942f4ab66e096/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=59dba04ccbed5a0e10216b3cd7f942f4ab66e096", "patch": "@@ -173,13 +173,9 @@ pub fn expr_or_init<'a, 'b, 'tcx: 'b>(cx: &LateContext<'tcx>, mut expr: &'a Expr\n /// By only considering immutable bindings, we guarantee that the returned expression represents the\n /// value of the binding wherever it is referenced.\n ///\n-/// Example:\n-/// ```ignore\n-/// let abc = 1;\n-/// //        ^ output\n-/// dbg!(abc)\n-/// //   ^^^ input\n-/// ```\n+/// Example: For `let x = 1`, if the `HirId` of `x` is provided, the `Expr` `1` is returned.\n+/// Note: If you have an expression that references a binding `x`, use `path_to_local` to get the\n+/// canonical binding `HirId`.\n pub fn find_binding_init<'tcx>(cx: &LateContext<'tcx>, hir_id: HirId) -> Option<&'tcx Expr<'tcx>> {\n     let hir = cx.tcx.hir();\n     if_chain! {"}]}