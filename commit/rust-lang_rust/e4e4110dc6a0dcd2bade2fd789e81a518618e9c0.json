{"sha": "e4e4110dc6a0dcd2bade2fd789e81a518618e9c0", "node_id": "C_kwDOAAsO6NoAKGU0ZTQxMTBkYzZhMGRjZDJiYWRlMmZkNzg5ZTgxYTUxODYxOGU5YzA", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2023-04-22T02:29:32Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2023-04-23T16:35:56Z"}, "message": "Fix printing native CPU on cross-compiled compiler.", "tree": {"sha": "79198d4591ee2c9818fa6135894dfe931ec71e32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79198d4591ee2c9818fa6135894dfe931ec71e32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4e4110dc6a0dcd2bade2fd789e81a518618e9c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4e4110dc6a0dcd2bade2fd789e81a518618e9c0", "html_url": "https://github.com/rust-lang/rust/commit/e4e4110dc6a0dcd2bade2fd789e81a518618e9c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4e4110dc6a0dcd2bade2fd789e81a518618e9c0/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fec9adcdbc21469ef105162cc8cabf81c72d06be", "url": "https://api.github.com/repos/rust-lang/rust/commits/fec9adcdbc21469ef105162cc8cabf81c72d06be", "html_url": "https://github.com/rust-lang/rust/commit/fec9adcdbc21469ef105162cc8cabf81c72d06be"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "78f29532ffbd29027ae5e3bf93575215f6e58359", "filename": "compiler/rustc_llvm/llvm-wrapper/PassWrapper.cpp", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e4e4110dc6a0dcd2bade2fd789e81a518618e9c0/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e4e4110dc6a0dcd2bade2fd789e81a518618e9c0/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp?ref=e4e4110dc6a0dcd2bade2fd789e81a518618e9c0", "patch": "@@ -310,12 +310,14 @@ static size_t getLongestEntryLength(ArrayRef<KV> Table) {\n extern \"C\" void LLVMRustPrintTargetCPUs(LLVMTargetMachineRef TM) {\n   const TargetMachine *Target = unwrap(TM);\n   const MCSubtargetInfo *MCInfo = Target->getMCSubtargetInfo();\n-  const Triple::ArchType HostArch = Triple(sys::getProcessTriple()).getArch();\n+  const Triple::ArchType HostArch = Triple(sys::getDefaultTargetTriple()).getArch();\n   const Triple::ArchType TargetArch = Target->getTargetTriple().getArch();\n   const ArrayRef<SubtargetSubTypeKV> CPUTable = MCInfo->getCPUTable();\n   unsigned MaxCPULen = getLongestEntryLength(CPUTable);\n \n   printf(\"Available CPUs for this target:\\n\");\n+  // Don't print the \"native\" entry when the user specifies --target with a\n+  // different arch since that could be wrong or misleading.\n   if (HostArch == TargetArch) {\n     const StringRef HostCPU = sys::getHostCPUName();\n     printf(\"    %-*s - Select the CPU of the current host (currently %.*s).\\n\","}]}