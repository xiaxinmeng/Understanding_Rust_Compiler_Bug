{"sha": "b491ddd0f082c7e129ee581a0de3e54ebde9573a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0OTFkZGQwZjA4MmM3ZTEyOWVlNTgxYTBkZTNlNTRlYmRlOTU3M2E=", "commit": {"author": {"name": "Nabeel Omer", "email": "nabeelkomer@gmail.com", "date": "2016-10-13T15:37:18Z"}, "committer": {"name": "Nabeel Omer", "email": "nabeelkomer@gmail.com", "date": "2016-10-13T15:37:18Z"}, "message": "Update", "tree": {"sha": "0ccc229e7ea2b5043557250e3a55894582f341ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ccc229e7ea2b5043557250e3a55894582f341ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b491ddd0f082c7e129ee581a0de3e54ebde9573a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b491ddd0f082c7e129ee581a0de3e54ebde9573a", "html_url": "https://github.com/rust-lang/rust/commit/b491ddd0f082c7e129ee581a0de3e54ebde9573a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b491ddd0f082c7e129ee581a0de3e54ebde9573a/comments", "author": {"login": "omern1", "id": 11234616, "node_id": "MDQ6VXNlcjExMjM0NjE2", "avatar_url": "https://avatars.githubusercontent.com/u/11234616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omern1", "html_url": "https://github.com/omern1", "followers_url": "https://api.github.com/users/omern1/followers", "following_url": "https://api.github.com/users/omern1/following{/other_user}", "gists_url": "https://api.github.com/users/omern1/gists{/gist_id}", "starred_url": "https://api.github.com/users/omern1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omern1/subscriptions", "organizations_url": "https://api.github.com/users/omern1/orgs", "repos_url": "https://api.github.com/users/omern1/repos", "events_url": "https://api.github.com/users/omern1/events{/privacy}", "received_events_url": "https://api.github.com/users/omern1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "omern1", "id": 11234616, "node_id": "MDQ6VXNlcjExMjM0NjE2", "avatar_url": "https://avatars.githubusercontent.com/u/11234616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omern1", "html_url": "https://github.com/omern1", "followers_url": "https://api.github.com/users/omern1/followers", "following_url": "https://api.github.com/users/omern1/following{/other_user}", "gists_url": "https://api.github.com/users/omern1/gists{/gist_id}", "starred_url": "https://api.github.com/users/omern1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omern1/subscriptions", "organizations_url": "https://api.github.com/users/omern1/orgs", "repos_url": "https://api.github.com/users/omern1/repos", "events_url": "https://api.github.com/users/omern1/events{/privacy}", "received_events_url": "https://api.github.com/users/omern1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd314ab05834518dd20072684081af8afc9edb6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd314ab05834518dd20072684081af8afc9edb6c", "html_url": "https://github.com/rust-lang/rust/commit/cd314ab05834518dd20072684081af8afc9edb6c"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "f08b7641521447582b4786c64c7db41c3480268a", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b491ddd0f082c7e129ee581a0de3e54ebde9573a/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b491ddd0f082c7e129ee581a0de3e54ebde9573a/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=b491ddd0f082c7e129ee581a0de3e54ebde9573a", "patch": "@@ -63,9 +63,6 @@ use sys_common::rwlock as sys;\n ///     assert_eq!(*w, 6);\n /// } // write lock is dropped here\n /// ```\n-/// # Panics\n-///\n-/// This function might panic when called if the lock is already held by the current thread.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct RwLock<T: ?Sized> {\n     inner: Box<sys::RWLock>,\n@@ -139,6 +136,10 @@ impl<T: ?Sized> RwLock<T> {\n     /// This function will return an error if the RwLock is poisoned. An RwLock\n     /// is poisoned whenever a writer panics while holding an exclusive lock.\n     /// The failure will occur immediately after the lock has been acquired.\n+    ///\n+    /// # Panics\n+    ///\n+    /// This function might panic when called if the lock is already held by the current thread.\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn read(&self) -> LockResult<RwLockReadGuard<T>> {\n@@ -191,6 +192,10 @@ impl<T: ?Sized> RwLock<T> {\n     /// This function will return an error if the RwLock is poisoned. An RwLock\n     /// is poisoned whenever a writer panics while holding an exclusive lock.\n     /// An error will be returned when the lock is acquired.\n+    ///\n+    /// # Panics\n+    ///\n+    /// This function might panic when called if the lock is already held by the current thread.\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn write(&self) -> LockResult<RwLockWriteGuard<T>> {"}]}