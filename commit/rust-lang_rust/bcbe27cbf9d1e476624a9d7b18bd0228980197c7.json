{"sha": "bcbe27cbf9d1e476624a9d7b18bd0228980197c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjYmUyN2NiZjlkMWU0NzY2MjRhOWQ3YjE4YmQwMjI4OTgwMTk3Yzc=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-07-21T09:26:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-21T09:26:57Z"}, "message": "Rollup merge of #34828 - seanmonstar:into-opton, r=alexcrichton\n\ncore: impl From<T> for Option<T>\n\nFirst, the semantics of this `impl` seem spot on. If I have a value `T`, and I wish to make a `Option<T>`, then `Option::from(val)` should always give `Some(val)`.\n\nSecond, this allows improvement for several APIs that currently take `Option<T>` as arguments. Consider:\n\n```rust\nfn set_read_timeout(&mut self, timeout: Option<u32>) {\n    // ...\n}\n\nx.set_read_timeout(Some(30));\nx.set_read_timeout(Some(10));\nx.set_read_timeout(None);\n```\n\nWith this `impl`:\n\n```rust\nfn set_read_timeout<T: Into<Option<u32>>>(&mut self, timeout: T) {\n    let timeout = timeout.into();\n    // ...\n}\n\nx.set_read_timeout(30);\nx.set_read_timeout(10);\nx.set_read_timeout(Some(10)); // backwards compatible\nx.set_read_timeout(None);\n```\n\nThe change to those methods aren't included, but could be modified later.\n\nr? @sfackler", "tree": {"sha": "ead2218c4872339213c8eedaabc76bd910045cb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ead2218c4872339213c8eedaabc76bd910045cb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcbe27cbf9d1e476624a9d7b18bd0228980197c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcbe27cbf9d1e476624a9d7b18bd0228980197c7", "html_url": "https://github.com/rust-lang/rust/commit/bcbe27cbf9d1e476624a9d7b18bd0228980197c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcbe27cbf9d1e476624a9d7b18bd0228980197c7/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7c822cee29b5b939340c2cb0dfefa9a49742d77", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7c822cee29b5b939340c2cb0dfefa9a49742d77", "html_url": "https://github.com/rust-lang/rust/commit/e7c822cee29b5b939340c2cb0dfefa9a49742d77"}, {"sha": "fbfee42a2f65b7a3d4acd0d9d029bb75208ac800", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbfee42a2f65b7a3d4acd0d9d029bb75208ac800", "html_url": "https://github.com/rust-lang/rust/commit/fbfee42a2f65b7a3d4acd0d9d029bb75208ac800"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "fe508adb71380089d4e313114288410fcb6274eb", "filename": "src/libcore/option.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bcbe27cbf9d1e476624a9d7b18bd0228980197c7/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcbe27cbf9d1e476624a9d7b18bd0228980197c7/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=bcbe27cbf9d1e476624a9d7b18bd0228980197c7", "patch": "@@ -142,6 +142,7 @@\n use self::Option::*;\n \n use clone::Clone;\n+use convert::From;\n use default::Default;\n use iter::ExactSizeIterator;\n use iter::{Iterator, DoubleEndedIterator, FromIterator, IntoIterator};\n@@ -754,6 +755,13 @@ impl<'a, T> IntoIterator for &'a mut Option<T> {\n     }\n }\n \n+#[stable(since = \"1.12.0\", feature = \"option_from\")]\n+impl<T> From<T> for Option<T> {\n+    fn from(val: T) -> Option<T> {\n+        Some(val)\n+    }\n+}\n+\n /////////////////////////////////////////////////////////////////////////////\n // The Option Iterators\n /////////////////////////////////////////////////////////////////////////////"}]}