{"sha": "b6fca7355c4acf59d177eb2029ba4a3834d078ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2ZmNhNzM1NWM0YWNmNTlkMTc3ZWIyMDI5YmE0YTM4MzRkMDc4YmE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-16T08:50:23Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-16T08:50:23Z"}, "message": "error out if a run-pass test fails", "tree": {"sha": "742454b5c4cf678fcdacf6cf41831446ebb6986b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/742454b5c4cf678fcdacf6cf41831446ebb6986b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6fca7355c4acf59d177eb2029ba4a3834d078ba", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXYmhPAAoJEFbW7qD8Z6xG6IAP/0cgSLTVTU8M+lfNRWPfA0RX\nDhqd/mW66B5VfpuYEApqnkJsQhLwIjT8cCAzflEEQUucrbWa7PvPVIsIQxVzLyq3\n26w4KcDuO6BuTmXjj/PzPpXI3ejycEjAyBMJSgMk6I52O16Aae8/wgnSRrxR9vPE\nOuU5hUNyewyle4V51UUJuJyeqU3sXaK3enGySW+7RdJD4CcUk/ZVv9vb6A8F2qdL\ngjg24eVqzMKNnGT0hVY7DU62gSggS2/hpDKsmt0iEAx0aKZwMrPcXaCh3a2ia1nZ\nfCqzOK26NeG33VdsjHYPLUZpkMhtDS5zla/ojpwtCDC7I89NdzkQmBNhLC75nj2p\n/Uekr+BEY4CP/kOkB8iFixRQKraIs29aoMIzJcUhLwODyi0sC2e+7S7BtVIHgNUa\noEWYqneAG9KBuTzgkUijtJK2rxs0OktQ2OikwoxwcdSqDEby1CHx+9es9PJtDIph\nW9KMmpx5pT0XQLyncJbKIFBfDB4aP2sT43SlhJ6lFQPCVh4bXipDa3lVYFak6On1\nzLin7HeRGiqv+NMJNGX/icsvH9lYfGJBmGszO2D642DifZo5fvrePQZU5P0Fv55e\nrw+FBcglg9RiIRsRNd1YfykKdLuIIIWQQMj/3P6DaR7LsGfNM3zjnNxVLjtuYU9h\nx/kJkDn7r8vkmpL1QIXl\n=caad\n-----END PGP SIGNATURE-----", "payload": "tree 742454b5c4cf678fcdacf6cf41831446ebb6986b\nparent af36ec959ad8382be7d4a7dae6c56ef2af2bb9f6\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1466067023 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1466067023 +0200\n\nerror out if a run-pass test fails"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6fca7355c4acf59d177eb2029ba4a3834d078ba", "html_url": "https://github.com/rust-lang/rust/commit/b6fca7355c4acf59d177eb2029ba4a3834d078ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6fca7355c4acf59d177eb2029ba4a3834d078ba/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af36ec959ad8382be7d4a7dae6c56ef2af2bb9f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/af36ec959ad8382be7d4a7dae6c56ef2af2bb9f6", "html_url": "https://github.com/rust-lang/rust/commit/af36ec959ad8382be7d4a7dae6c56ef2af2bb9f6"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "0cf945059c530c2b53fcb93e99cc6e690c607b46", "filename": "tests/compiletest.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b6fca7355c4acf59d177eb2029ba4a3834d078ba/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6fca7355c4acf59d177eb2029ba4a3834d078ba/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=b6fca7355c4acf59d177eb2029ba4a3834d078ba", "patch": "@@ -38,6 +38,7 @@ fn for_all_targets<F: Fn(String)>(sysroot: &str, f: F) {\n \n #[test]\n fn compile_test() {\n+    let mut failed = false;\n     // Taken from https://github.com/Manishearth/rust-clippy/pull/911.\n     let home = option_env!(\"RUSTUP_HOME\").or(option_env!(\"MULTIRUST_HOME\"));\n     let toolchain = option_env!(\"RUSTUP_TOOLCHAIN\").or(option_env!(\"MULTIRUST_TOOLCHAIN\"));\n@@ -69,14 +70,21 @@ fn compile_test() {\n             match cmd.output() {\n                 Ok(ref output) if output.status.success() => writeln!(stderr.lock(), \"ok\").unwrap(),\n                 Ok(output) => {\n+                    failed = true;\n                     writeln!(stderr.lock(), \"FAILED with exit code {}\", output.status.code().unwrap_or(0)).unwrap();\n                     writeln!(stderr.lock(), \"stdout: \\n {}\", std::str::from_utf8(&output.stdout).unwrap()).unwrap();\n                     writeln!(stderr.lock(), \"stderr: \\n {}\", std::str::from_utf8(&output.stderr).unwrap()).unwrap();\n                 }\n-                Err(e) => writeln!(stderr.lock(), \"FAILED: {}\", e).unwrap(),\n+                Err(e) => {\n+                    failed = true;\n+                    writeln!(stderr.lock(), \"FAILED: {}\", e).unwrap();\n+                },\n             }\n         }\n         let stderr = std::io::stderr();\n         writeln!(stderr.lock(), \"\").unwrap();\n     })\n+    if failed {\n+        panic!(\"some tests failed\");\n+    }\n }"}]}