{"sha": "9fb1c73a7309b83d495a4033c15c9e223da11f01", "node_id": "C_kwDOAAsO6NoAKDlmYjFjNzNhNzMwOWI4M2Q0OTVhNDAzM2MxNWM5ZTIyM2RhMTFmMDE", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-10T17:33:58Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-10T19:23:01Z"}, "message": "Avoid shadowing.", "tree": {"sha": "fd647d2b34dd22f52e5725cffa4a21c414b33aa0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd647d2b34dd22f52e5725cffa4a21c414b33aa0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fb1c73a7309b83d495a4033c15c9e223da11f01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fb1c73a7309b83d495a4033c15c9e223da11f01", "html_url": "https://github.com/rust-lang/rust/commit/9fb1c73a7309b83d495a4033c15c9e223da11f01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fb1c73a7309b83d495a4033c15c9e223da11f01/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aeac5555780cb11cf701a5fa69d66adcaa3e2f4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/aeac5555780cb11cf701a5fa69d66adcaa3e2f4a", "html_url": "https://github.com/rust-lang/rust/commit/aeac5555780cb11cf701a5fa69d66adcaa3e2f4a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d1bc9ee91538e6ef58953f8f43b14ac21d4881f7", "filename": "compiler/rustc_mir_transform/src/ref_prop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9fb1c73a7309b83d495a4033c15c9e223da11f01/compiler%2Frustc_mir_transform%2Fsrc%2Fref_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fb1c73a7309b83d495a4033c15c9e223da11f01/compiler%2Frustc_mir_transform%2Fsrc%2Fref_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fref_prop.rs?ref=9fb1c73a7309b83d495a4033c15c9e223da11f01", "patch": "@@ -223,10 +223,10 @@ fn compute_replacement<'tcx>(\n                 let mut place = *place;\n                 // Try to see through `place` in order to collapse reborrow chains.\n                 if place.projection.first() == Some(&PlaceElem::Deref)\n-                    && let Value::Pointer(target, needs_unique) = targets[place.local]\n+                    && let Value::Pointer(target, inner_needs_unique) = targets[place.local]\n                     // Only see through immutable reference and pointers, as we do not know yet if\n                     // mutable references are fully replaced.\n-                    && !needs_unique\n+                    && !inner_needs_unique\n                     // Only collapse chain if the pointee is definitely live.\n                     && can_perform_opt(target, location)\n                 {"}]}