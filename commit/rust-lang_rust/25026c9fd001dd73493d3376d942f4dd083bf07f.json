{"sha": "25026c9fd001dd73493d3376d942f4dd083bf07f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1MDI2YzlmZDAwMWRkNzM0OTNkMzM3NmQ5NDJmNGRkMDgzYmYwN2Y=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-04-04T17:20:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-04T17:20:03Z"}, "message": "Rollup merge of #83793 - notriddle:single-span-macro-highlight, r=GuillaumeGomez\n\nrustdoc: highlight macros more efficiently\n\nInstead of producing `<span class=macro>assert_eq</span><span class=macro>!</span>`,\njust produce `<span class=macro>assert_eq!</span>`.", "tree": {"sha": "26c0b5ef22f935ef42945883b65f56db231976f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26c0b5ef22f935ef42945883b65f56db231976f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25026c9fd001dd73493d3376d942f4dd083bf07f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgafVECRBK7hj4Ov3rIwAAdHIIAHjjMi9oPNKOIIfrYJg/BkIm\neF2UovskE/9hq3aw3GEDZnQ8uhUObP5DdRqKfB9Qmbzd4hB1C7toFwSef9HXwWsf\nETprJeoeugh7E/VWZnCGur/jKr4f7qviKc84XcHjaSUb/KoQIcq/jRoyDArkrmqz\nATTh9IGoIX2YHideve3AhgATYrni2Rku9I28+wrqRAd3QzMFvXaSf95c5MRM6EUb\ntvw5Y/Ssh+NG5bVI45ya5PU7dkPTyac3DgvLYOkt/nhqt188KPuV8blbAi9DDLXx\nDqW4gF954z6Mp4IjQj1jEhTj7jvjMmBquJKG8FPiNvWXo+IrQ0WRvEqAQPVoHBg=\n=QneK\n-----END PGP SIGNATURE-----\n", "payload": "tree 26c0b5ef22f935ef42945883b65f56db231976f8\nparent 3cbed892a717dfc92845017b2f6c11d43fe48c0d\nparent f64038f9833f1940f64276fcab9bd53f21f9443b\nauthor Dylan DPC <dylan.dpc@gmail.com> 1617556803 +0200\ncommitter GitHub <noreply@github.com> 1617556803 +0200\n\nRollup merge of #83793 - notriddle:single-span-macro-highlight, r=GuillaumeGomez\n\nrustdoc: highlight macros more efficiently\n\nInstead of producing `<span class=macro>assert_eq</span><span class=macro>!</span>`,\njust produce `<span class=macro>assert_eq!</span>`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25026c9fd001dd73493d3376d942f4dd083bf07f", "html_url": "https://github.com/rust-lang/rust/commit/25026c9fd001dd73493d3376d942f4dd083bf07f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25026c9fd001dd73493d3376d942f4dd083bf07f/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cbed892a717dfc92845017b2f6c11d43fe48c0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cbed892a717dfc92845017b2f6c11d43fe48c0d", "html_url": "https://github.com/rust-lang/rust/commit/3cbed892a717dfc92845017b2f6c11d43fe48c0d"}, {"sha": "f64038f9833f1940f64276fcab9bd53f21f9443b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f64038f9833f1940f64276fcab9bd53f21f9443b", "html_url": "https://github.com/rust-lang/rust/commit/f64038f9833f1940f64276fcab9bd53f21f9443b"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "3a4319d5d9aad12df340275652c61430ac847856", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/25026c9fd001dd73493d3376d942f4dd083bf07f/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25026c9fd001dd73493d3376d942f4dd083bf07f/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=25026c9fd001dd73493d3376d942f4dd083bf07f", "patch": "@@ -189,7 +189,9 @@ impl<'a> Classifier<'a> {\n             // leading identifier.\n             TokenKind::Bang if self.in_macro => {\n                 self.in_macro = false;\n-                Class::Macro\n+                sink(Highlight::Token { text, class: None });\n+                sink(Highlight::ExitSpan);\n+                return;\n             }\n \n             // Assume that '&' or '*' is the reference or dereference operator\n@@ -298,7 +300,9 @@ impl<'a> Classifier<'a> {\n             },\n             TokenKind::Ident | TokenKind::RawIdent if lookahead == Some(TokenKind::Bang) => {\n                 self.in_macro = true;\n-                Class::Macro\n+                sink(Highlight::EnterSpan { class: Class::Macro });\n+                sink(Highlight::Token { text, class: None });\n+                return;\n             }\n             TokenKind::Ident => match text {\n                 \"ref\" | \"mut\" => Class::RefKeyWord,"}, {"sha": "1c8dbffe78c22d5be893faab966293ae177716a3", "filename": "src/librustdoc/html/highlight/fixtures/dos_line.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25026c9fd001dd73493d3376d942f4dd083bf07f/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fdos_line.html", "raw_url": "https://github.com/rust-lang/rust/raw/25026c9fd001dd73493d3376d942f4dd083bf07f/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fdos_line.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fdos_line.html?ref=25026c9fd001dd73493d3376d942f4dd083bf07f", "patch": "@@ -1,3 +1,3 @@\n <span class=\"kw\">pub</span> <span class=\"kw\">fn</span> <span class=\"ident\">foo</span>() {\n-<span class=\"macro\">println</span><span class=\"macro\">!</span>(<span class=\"string\">&quot;foo&quot;</span>);\n+<span class=\"macro\">println!</span>(<span class=\"string\">&quot;foo&quot;</span>);\n }"}, {"sha": "4966e0ac6bbd3977ff1719f0e017a307761236b0", "filename": "src/librustdoc/html/highlight/fixtures/sample.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/25026c9fd001dd73493d3376d942f4dd083bf07f/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fsample.html", "raw_url": "https://github.com/rust-lang/rust/raw/25026c9fd001dd73493d3376d942f4dd083bf07f/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fsample.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight%2Ffixtures%2Fsample.html?ref=25026c9fd001dd73493d3376d942f4dd083bf07f", "patch": "@@ -17,11 +17,11 @@\n     <span class=\"kw\">let</span> <span class=\"kw\">_</span> <span class=\"op\">=</span> <span class=\"kw-2\">&amp;</span><span class=\"ident\">foo</span>;\n     <span class=\"kw\">let</span> <span class=\"kw\">_</span> <span class=\"op\">=</span> <span class=\"op\">&amp;&amp;</span><span class=\"ident\">foo</span>;\n     <span class=\"kw\">let</span> <span class=\"kw\">_</span> <span class=\"op\">=</span> <span class=\"kw-2\">*</span><span class=\"ident\">foo</span>;\n-    <span class=\"macro\">mac</span><span class=\"macro\">!</span>(<span class=\"ident\">foo</span>, <span class=\"kw-2\">&amp;</span><span class=\"kw-2\">mut</span> <span class=\"ident\">bar</span>);\n-    <span class=\"macro\">assert</span><span class=\"macro\">!</span>(<span class=\"self\">self</span>.<span class=\"ident\">length</span> <span class=\"op\">&lt;</span> <span class=\"ident\">N</span> <span class=\"op\">&amp;&amp;</span> <span class=\"ident\">index</span> <span class=\"op\">&lt;</span><span class=\"op\">=</span> <span class=\"self\">self</span>.<span class=\"ident\">length</span>);\n+    <span class=\"macro\">mac!</span>(<span class=\"ident\">foo</span>, <span class=\"kw-2\">&amp;</span><span class=\"kw-2\">mut</span> <span class=\"ident\">bar</span>);\n+    <span class=\"macro\">assert!</span>(<span class=\"self\">self</span>.<span class=\"ident\">length</span> <span class=\"op\">&lt;</span> <span class=\"ident\">N</span> <span class=\"op\">&amp;&amp;</span> <span class=\"ident\">index</span> <span class=\"op\">&lt;</span><span class=\"op\">=</span> <span class=\"self\">self</span>.<span class=\"ident\">length</span>);\n }\n \n-<span class=\"macro\">macro_rules</span><span class=\"macro\">!</span> <span class=\"ident\">bar</span> {\n+<span class=\"macro\">macro_rules!</span> <span class=\"ident\">bar</span> {\n     (<span class=\"macro-nonterminal\">$</span><span class=\"macro-nonterminal\">foo</span>:<span class=\"ident\">tt</span>) <span class=\"op\">=</span><span class=\"op\">&gt;</span> {};\n }\n </code></pre>"}]}