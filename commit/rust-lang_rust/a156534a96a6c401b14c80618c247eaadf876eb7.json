{"sha": "a156534a96a6c401b14c80618c247eaadf876eb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNTY1MzRhOTZhNmM0MDFiMTRjODA2MThjMjQ3ZWFhZGY4NzZlYjc=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-01T18:11:28Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-07T15:16:14Z"}, "message": "core: Inherit the result module\n\nThe unwrap()/unwrap_err() methods are temporarily removed, and will be added\nback in the next commit.", "tree": {"sha": "3970353a35afc4604ffe188ac633be50a22946f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3970353a35afc4604ffe188ac633be50a22946f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a156534a96a6c401b14c80618c247eaadf876eb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a156534a96a6c401b14c80618c247eaadf876eb7", "html_url": "https://github.com/rust-lang/rust/commit/a156534a96a6c401b14c80618c247eaadf876eb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a156534a96a6c401b14c80618c247eaadf876eb7/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f12b51705b064bbbeb86ad65663de476d07ad51f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f12b51705b064bbbeb86ad65663de476d07ad51f", "html_url": "https://github.com/rust-lang/rust/commit/f12b51705b064bbbeb86ad65663de476d07ad51f"}], "stats": {"total": 53, "additions": 22, "deletions": 31}, "files": [{"sha": "13f59d0875d1dafe1eef7d17b70168d23ad43396", "filename": "src/libcore/result.rs", "status": "renamed", "additions": 1, "deletions": 30, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/a156534a96a6c401b14c80618c247eaadf876eb7/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a156534a96a6c401b14c80618c247eaadf876eb7/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=a156534a96a6c401b14c80618c247eaadf876eb7", "patch": "@@ -268,14 +268,13 @@\n \n use clone::Clone;\n use cmp::Eq;\n-use std::fmt::Show;\n use iter::{Iterator, FromIterator};\n use option::{None, Option, Some};\n \n /// `Result` is a type that represents either success (`Ok`) or failure (`Err`).\n ///\n /// See the [`std::result`](index.html) module documentation for details.\n-#[deriving(Clone, Eq, Ord, TotalEq, TotalOrd, Show, Hash)]\n+#[deriving(Clone, Eq, Ord, TotalEq, TotalOrd)]\n #[must_use]\n pub enum Result<T, E> {\n     /// Contains the success value\n@@ -516,34 +515,6 @@ impl<T, E> Result<T, E> {\n     }\n }\n \n-impl<T, E: Show> Result<T, E> {\n-    /// Unwraps a result, yielding the content of an `Ok`.\n-    ///\n-    /// Fails if the value is an `Err`.\n-    #[inline]\n-    pub fn unwrap(self) -> T {\n-        match self {\n-            Ok(t) => t,\n-            Err(e) =>\n-                fail!(\"called `Result::unwrap()` on an `Err` value: {}\", e)\n-        }\n-    }\n-}\n-\n-impl<T: Show, E> Result<T, E> {\n-    /// Unwraps a result, yielding the content of an `Err`.\n-    ///\n-    /// Fails if the value is an `Ok`.\n-    #[inline]\n-    pub fn unwrap_err(self) -> E {\n-        match self {\n-            Ok(t) =>\n-                fail!(\"called `Result::unwrap_err()` on an `Ok` value: {}\", t),\n-            Err(e) => e\n-        }\n-    }\n-}\n-\n /////////////////////////////////////////////////////////////////////////////\n // Free functions\n /////////////////////////////////////////////////////////////////////////////", "previous_filename": "src/libstd/result.rs"}, {"sha": "8cfc0ae54c3bc833116ba07e68b4ff7ccbf76109", "filename": "src/libstd/fmt/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a156534a96a6c401b14c80618c247eaadf876eb7/src%2Flibstd%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a156534a96a6c401b14c80618c247eaadf876eb7/src%2Flibstd%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffmt%2Fmod.rs?ref=a156534a96a6c401b14c80618c247eaadf876eb7", "patch": "@@ -1291,6 +1291,15 @@ impl<T: Show> Show for Option<T> {\n     }\n }\n \n+impl<T: Show, U: Show> Show for ::result::Result<T, U> {\n+    fn fmt(&self, f: &mut Formatter) -> Result {\n+        match *self {\n+            Ok(ref t) => write!(f.buf, \"Ok({})\", *t),\n+            Err(ref t) => write!(f.buf, \"Err({})\", *t),\n+        }\n+    }\n+}\n+\n impl<'a, T: Show> Show for &'a [T] {\n     fn fmt(&self, f: &mut Formatter) -> Result {\n         if f.flags & (1 << (parse::FlagAlternate as uint)) == 0 {"}, {"sha": "c8207a4c37ccefe5deb55cfa26340d2a7f538b9d", "filename": "src/libstd/hash/mod.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a156534a96a6c401b14c80618c247eaadf876eb7/src%2Flibstd%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a156534a96a6c401b14c80618c247eaadf876eb7/src%2Flibstd%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fhash%2Fmod.rs?ref=a156534a96a6c401b14c80618c247eaadf876eb7", "patch": "@@ -70,8 +70,9 @@ use iter::Iterator;\n use option::{Option, Some, None};\n use owned::Box;\n use rc::Rc;\n-use str::{Str, StrSlice};\n+use result::{Result, Ok, Err};\n use slice::{Vector, ImmutableVector};\n+use str::{Str, StrSlice};\n use vec::Vec;\n \n /// Reexport the `sip::hash` function as our default hasher.\n@@ -292,6 +293,16 @@ impl<S: Writer> Hash<S> for TypeId {\n     }\n }\n \n+impl<S: Writer, T: Hash<S>, U: Hash<S>> Hash<S> for Result<T, U> {\n+    #[inline]\n+    fn hash(&self, state: &mut S) {\n+        match *self {\n+            Ok(ref t) => { 1u.hash(state); t.hash(state); }\n+            Err(ref t) => { 2u.hash(state); t.hash(state); }\n+        }\n+    }\n+}\n+\n //////////////////////////////////////////////////////////////////////////////\n \n #[cfg(test)]"}]}