{"sha": "725f88b09c4fdf718c47439a3fe6a5970d16aaac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNWY4OGIwOWM0ZmRmNzE4YzQ3NDM5YTNmZTZhNTk3MGQxNmFhYWM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-14T05:02:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-14T05:02:24Z"}, "message": "Rollup merge of #68150 - tillarnold:master, r=cramertj\n\nDocument behavior of set_nonblocking on UnixListener\n\nThe description on `set_nonblocking` in `UnixListener` was rather brief so I adapted it to be more like the documentation of  `set_nonblocking` in `TcpListener`.", "tree": {"sha": "70cad0e4c8526c23dd5ca2b02088103b7ead634b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70cad0e4c8526c23dd5ca2b02088103b7ead634b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/725f88b09c4fdf718c47439a3fe6a5970d16aaac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeHUtgCRBK7hj4Ov3rIwAAdHIIAGGTUYTxSGhlGd/6gE5/u1sN\ntxLabCPmOg3tP54vQ6dofOLgyA9Pkor+W/304YdmBbRdvidqFcQgo+ulrTjB40AT\nFCleEKdRLDxTEP9c7p0sFlu+RzPralJef1s0es5owWlpK0d+FHT9Bv01qy9TgVGk\nCdyUcumfN9/vrKYQBSoeXq8aQEU6XXgjtc/GmHi21ExwjIo59cEm5H4jESfieGrw\nvnFwk//RBMj5AvzfgZg6PEbRj0UmllGimt9YrrwnVqqetIzjrnprejansXA+B06B\nxUDbbWCqXttGWyfj+LbZ3SsXtF54Jz833A7lqqFVJLgAiNdqXBpYFR3n836DHng=\n=8nS/\n-----END PGP SIGNATURE-----\n", "payload": "tree 70cad0e4c8526c23dd5ca2b02088103b7ead634b\nparent d7e599203c3d3abbc3be486792a76cb89d3fa067\nparent c32090c130273787b8f9fc8290357a6a9d3222b7\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1578978144 +0900\ncommitter GitHub <noreply@github.com> 1578978144 +0900\n\nRollup merge of #68150 - tillarnold:master, r=cramertj\n\nDocument behavior of set_nonblocking on UnixListener\n\nThe description on `set_nonblocking` in `UnixListener` was rather brief so I adapted it to be more like the documentation of  `set_nonblocking` in `TcpListener`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/725f88b09c4fdf718c47439a3fe6a5970d16aaac", "html_url": "https://github.com/rust-lang/rust/commit/725f88b09c4fdf718c47439a3fe6a5970d16aaac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/725f88b09c4fdf718c47439a3fe6a5970d16aaac/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7e599203c3d3abbc3be486792a76cb89d3fa067", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7e599203c3d3abbc3be486792a76cb89d3fa067", "html_url": "https://github.com/rust-lang/rust/commit/d7e599203c3d3abbc3be486792a76cb89d3fa067"}, {"sha": "c32090c130273787b8f9fc8290357a6a9d3222b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c32090c130273787b8f9fc8290357a6a9d3222b7", "html_url": "https://github.com/rust-lang/rust/commit/c32090c130273787b8f9fc8290357a6a9d3222b7"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "4c3cb67c9ee0f795eff34a31f57acc960966cf72", "filename": "src/libstd/sys/unix/ext/net.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/725f88b09c4fdf718c47439a3fe6a5970d16aaac/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/725f88b09c4fdf718c47439a3fe6a5970d16aaac/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs?ref=725f88b09c4fdf718c47439a3fe6a5970d16aaac", "patch": "@@ -902,6 +902,12 @@ impl UnixListener {\n \n     /// Moves the socket into or out of nonblocking mode.\n     ///\n+    /// This will result in the `accept` operation becoming nonblocking,\n+    /// i.e., immediately returning from their calls. If the IO operation is\n+    /// successful, `Ok` is returned and no further action is required. If the\n+    /// IO operation could not be completed and needs to be retried, an error\n+    /// with kind [`io::ErrorKind::WouldBlock`] is returned.\n+    ///\n     /// # Examples\n     ///\n     /// ```no_run\n@@ -913,6 +919,8 @@ impl UnixListener {\n     ///     Ok(())\n     /// }\n     /// ```\n+    ///\n+    /// [`io::ErrorKind::WouldBlock`]: ../../../io/enum.ErrorKind.html#variant.WouldBlock\n     #[stable(feature = \"unix_socket\", since = \"1.10.0\")]\n     pub fn set_nonblocking(&self, nonblocking: bool) -> io::Result<()> {\n         self.0.set_nonblocking(nonblocking)"}]}