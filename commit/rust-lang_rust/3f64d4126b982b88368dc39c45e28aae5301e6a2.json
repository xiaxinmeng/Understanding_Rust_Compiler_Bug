{"sha": "3f64d4126b982b88368dc39c45e28aae5301e6a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNjRkNDEyNmI5ODJiODgzNjhkYzM5YzQ1ZTI4YWFlNTMwMWU2YTI=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-03-14T08:55:30Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-03-17T07:53:07Z"}, "message": "De-@ gather_loans.", "tree": {"sha": "3180b35b2a871cf175d557521addf5fe6a12b06c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3180b35b2a871cf175d557521addf5fe6a12b06c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f64d4126b982b88368dc39c45e28aae5301e6a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f64d4126b982b88368dc39c45e28aae5301e6a2", "html_url": "https://github.com/rust-lang/rust/commit/3f64d4126b982b88368dc39c45e28aae5301e6a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f64d4126b982b88368dc39c45e28aae5301e6a2/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1e24c7f22cbc17477d710b87b26f644b0762815", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1e24c7f22cbc17477d710b87b26f644b0762815", "html_url": "https://github.com/rust-lang/rust/commit/a1e24c7f22cbc17477d710b87b26f644b0762815"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "ffc00bad320d5a6cb73c822dc1555f4e4d3384c8", "filename": "src/librustc/middle/borrowck/gather_loans/mod.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3f64d4126b982b88368dc39c45e28aae5301e6a2/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f64d4126b982b88368dc39c45e28aae5301e6a2/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs?ref=3f64d4126b982b88368dc39c45e28aae5301e6a2", "patch": "@@ -27,7 +27,6 @@ use middle::typeck::MethodCall;\n use util::common::indenter;\n use util::ppaux::{Repr};\n \n-use std::cell::RefCell;\n use std::vec_ng::Vec;\n use syntax::ast;\n use syntax::ast_util;\n@@ -72,7 +71,7 @@ struct GatherLoanCtxt<'a> {\n     bccx: &'a BorrowckCtxt<'a>,\n     id_range: IdRange,\n     move_data: move_data::MoveData,\n-    all_loans: @RefCell<Vec<Loan> >,\n+    all_loans: Vec<Loan>,\n     item_ub: ast::NodeId,\n     repeating_ids: Vec<ast::NodeId> }\n \n@@ -104,19 +103,20 @@ impl<'a> visit::Visitor<()> for GatherLoanCtxt<'a> {\n }\n \n pub fn gather_loans(bccx: &BorrowckCtxt, decl: &ast::FnDecl, body: &ast::Block)\n-                    -> (IdRange, @RefCell<Vec<Loan> >, move_data::MoveData) {\n+                    -> (IdRange, Vec<Loan>, move_data::MoveData) {\n     let mut glcx = GatherLoanCtxt {\n         bccx: bccx,\n         id_range: IdRange::max(),\n-        all_loans: @RefCell::new(Vec::new()),\n+        all_loans: Vec::new(),\n         item_ub: body.id,\n         repeating_ids: vec!(body.id),\n         move_data: MoveData::new()\n     };\n     glcx.gather_fn_arg_patterns(decl, body);\n \n     glcx.visit_block(body, ());\n-    return (glcx.id_range, glcx.all_loans, glcx.move_data);\n+    let GatherLoanCtxt { id_range, all_loans, move_data, .. } = glcx;\n+    (id_range, all_loans, move_data)\n }\n \n fn add_pat_to_id_range(this: &mut GatherLoanCtxt,\n@@ -584,9 +584,8 @@ impl<'a> GatherLoanCtxt<'a> {\n                     self.mark_loan_path_as_mutated(loan_path);\n                 }\n \n-                let all_loans = self.all_loans.borrow();\n                 Loan {\n-                    index: all_loans.get().len(),\n+                    index: self.all_loans.len(),\n                     loan_path: loan_path,\n                     cmt: cmt,\n                     kind: req_kind,\n@@ -605,10 +604,7 @@ impl<'a> GatherLoanCtxt<'a> {\n         // let loan_path = loan.loan_path;\n         // let loan_gen_scope = loan.gen_scope;\n         // let loan_kill_scope = loan.kill_scope;\n-        {\n-            let mut all_loans = self.all_loans.borrow_mut();\n-            all_loans.get().push(loan);\n-        }\n+        self.all_loans.push(loan);\n \n         // if loan_gen_scope != borrow_id {\n             // FIXME(#6268) Nested method calls"}, {"sha": "4c926bb81ef200689e1ce55c7fe5e2fca44cc912", "filename": "src/librustc/middle/borrowck/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3f64d4126b982b88368dc39c45e28aae5301e6a2/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f64d4126b982b88368dc39c45e28aae5301e6a2/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs?ref=3f64d4126b982b88368dc39c45e28aae5301e6a2", "patch": "@@ -127,14 +127,13 @@ fn borrowck_fn(this: &mut BorrowckCtxt,\n     // Check the body of fn items.\n     let (id_range, all_loans, move_data) =\n         gather_loans::gather_loans(this, decl, body);\n-    let all_loans = all_loans.borrow();\n     let mut loan_dfcx =\n         DataFlowContext::new(this.tcx,\n                              this.method_map,\n                              LoanDataFlowOperator,\n                              id_range,\n-                             all_loans.get().len());\n-    for (loan_idx, loan) in all_loans.get().iter().enumerate() {\n+                             all_loans.len());\n+    for (loan_idx, loan) in all_loans.iter().enumerate() {\n         loan_dfcx.add_gen(loan.gen_scope, loan_idx);\n         loan_dfcx.add_kill(loan.kill_scope, loan_idx);\n     }\n@@ -147,7 +146,7 @@ fn borrowck_fn(this: &mut BorrowckCtxt,\n                                                       body);\n \n     check_loans::check_loans(this, &loan_dfcx, flowed_moves,\n-                             all_loans.get().as_slice(), body);\n+                             all_loans.as_slice(), body);\n \n     visit::walk_fn(this, fk, decl, body, sp, id, ());\n }"}]}