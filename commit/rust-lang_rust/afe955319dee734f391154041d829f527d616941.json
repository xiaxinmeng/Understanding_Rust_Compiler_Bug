{"sha": "afe955319dee734f391154041d829f527d616941", "node_id": "C_kwDOAAsO6NoAKGFmZTk1NTMxOWRlZTczNGYzOTExNTQwNDFkODI5ZjUyN2Q2MTY5NDE", "commit": {"author": {"name": "Jakub Ber\u00e1nek", "email": "berykubik@gmail.com", "date": "2023-02-08T10:03:57Z"}, "committer": {"name": "Jakub Ber\u00e1nek", "email": "berykubik@gmail.com", "date": "2023-02-13T16:57:28Z"}, "message": "Log all metrics from `metrics.json`", "tree": {"sha": "679bc8971e2643a24c9eb571b1598fa06bab1e1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/679bc8971e2643a24c9eb571b1598fa06bab1e1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afe955319dee734f391154041d829f527d616941", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEzFQynJm4WzBnfhz8kJzQ0mSDUWsFAmPqa/gACgkQkJzQ0mSD\nUWtGIgwAq1/xXQ00Sg2QPpNAm96zFL80eFn46BU+6bWL1ladSOF9KEEaiLuZWGjw\nziyusrLyUHp7Gf2KF9u5X6vRLIIRQWCO3MItGd3COnGl0ISe5SHh5p2QTls2gQkM\nEAtNdIGatcxAd6FR7r9c7qxDtL0mvAFOsCKCPZ0bupltY3fE+WsxgOi6wW92bKVH\n9tTIpGbDjw8t4v4cdoBbbdsYddKVETn5o+UGj/VM1XPfjxesCPpN0osi4XJG5PvQ\nVBXf04CoBCqxKgyBNXLxn0Eu3A72RJIYJ/gF5KOdCwbNvYboA8IrSiOYLJfUol26\nmI1xbrhgCTyfWTabCd6GJzLgiwl2MnY4N4bnEZoM7ixRTuQ8I19cKE77ZE4Afgjl\n10cX4BeNr32mc7CocE+9QInwVzWH2KKmyV1PKd5x0HENDoCaCV1c9gO9kH8jCAYZ\nSJ+/9ku2LVkSD6YMqqWEMizfneoEU6RUUtUCsaNrQAI9w2EHT6gd8ArqNFG+MAo9\nsPdBs+zF\n=2SYq\n-----END PGP SIGNATURE-----", "payload": "tree 679bc8971e2643a24c9eb571b1598fa06bab1e1f\nparent d6bc681e28ed482e032af48427a27edd4964ccf9\nauthor Jakub Ber\u00e1nek <berykubik@gmail.com> 1675850637 +0100\ncommitter Jakub Ber\u00e1nek <berykubik@gmail.com> 1676307448 +0100\n\nLog all metrics from `metrics.json`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afe955319dee734f391154041d829f527d616941", "html_url": "https://github.com/rust-lang/rust/commit/afe955319dee734f391154041d829f527d616941", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afe955319dee734f391154041d829f527d616941/comments", "author": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6bc681e28ed482e032af48427a27edd4964ccf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6bc681e28ed482e032af48427a27edd4964ccf9", "html_url": "https://github.com/rust-lang/rust/commit/d6bc681e28ed482e032af48427a27edd4964ccf9"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "bd8fd524a262805a95dd0186b690ee32c1f5a281", "filename": "src/ci/stage-build.py", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/afe955319dee734f391154041d829f527d616941/src%2Fci%2Fstage-build.py", "raw_url": "https://github.com/rust-lang/rust/raw/afe955319dee734f391154041d829f527d616941/src%2Fci%2Fstage-build.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fstage-build.py?ref=afe955319dee734f391154041d829f527d616941", "patch": "@@ -706,13 +706,33 @@ def print_free_disk_space(pipeline: Pipeline):\n         f\"Free disk space: {format_bytes(free)} out of total {format_bytes(total)} ({(used / total) * 100:.2f}% used)\")\n \n \n+def log_metrics(step: BuildStep):\n+    substeps: List[Tuple[int, BuildStep]] = []\n+\n+    def visit(step: BuildStep, level: int):\n+        substeps.append((level, step))\n+        for child in step.children:\n+            visit(child, level=level + 1)\n+\n+    visit(step, 0)\n+\n+    output = StringIO()\n+    for (level, step) in substeps:\n+        label = f\"{'.' * level}{step.type}\"\n+        print(f\"{label:<65}{step.duration:>8.2f}s\", file=output)\n+    logging.info(f\"Build step durations\\n{output.getvalue()}\")\n+\n+\n def record_metrics(pipeline: Pipeline, timer: Timer):\n     metrics = load_last_metrics(pipeline.metrics_path())\n     if metrics is None:\n         return\n-    llvm_steps = metrics.find_all_by_type(\"bootstrap::native::Llvm\")\n+    llvm_steps = tuple(metrics.find_all_by_type(\"bootstrap::native::Llvm\"))\n+    assert len(llvm_steps) > 0\n     llvm_duration = sum(step.duration for step in llvm_steps)\n-    rustc_steps = metrics.find_all_by_type(\"bootstrap::compile::Rustc\")\n+\n+    rustc_steps = tuple(metrics.find_all_by_type(\"bootstrap::compile::Rustc\"))\n+    assert len(rustc_steps) > 0\n     rustc_duration = sum(step.duration for step in rustc_steps)\n \n     # The LLVM step is part of the Rustc step\n@@ -721,6 +741,8 @@ def record_metrics(pipeline: Pipeline, timer: Timer):\n     timer.add_duration(\"LLVM\", llvm_duration)\n     timer.add_duration(\"Rustc\", rustc_duration)\n \n+    log_metrics(metrics)\n+\n \n def execute_build_pipeline(timer: Timer, pipeline: Pipeline, final_build_args: List[str]):\n     # Clear and prepare tmp directory"}]}