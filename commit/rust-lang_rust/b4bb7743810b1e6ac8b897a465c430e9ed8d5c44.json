{"sha": "b4bb7743810b1e6ac8b897a465c430e9ed8d5c44", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0YmI3NzQzODEwYjFlNmFjOGI4OTdhNDY1YzQzMGU5ZWQ4ZDVjNDQ=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-29T16:39:58Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-29T16:41:21Z"}, "message": "Remove TraitRef::Error", "tree": {"sha": "eb3952b349ae35246326fd5e28b2839aa9daa491", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb3952b349ae35246326fd5e28b2839aa9daa491"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4bb7743810b1e6ac8b897a465c430e9ed8d5c44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4bb7743810b1e6ac8b897a465c430e9ed8d5c44", "html_url": "https://github.com/rust-lang/rust/commit/b4bb7743810b1e6ac8b897a465c430e9ed8d5c44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4bb7743810b1e6ac8b897a465c430e9ed8d5c44/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2a63b97a80cb738f800da61c64e748994709c31", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2a63b97a80cb738f800da61c64e748994709c31", "html_url": "https://github.com/rust-lang/rust/commit/c2a63b97a80cb738f800da61c64e748994709c31"}], "stats": {"total": 32, "additions": 15, "deletions": 17}, "files": [{"sha": "8d38628111395f0c3a1dc1497902265f8afb772f", "filename": "crates/hir_def/src/item_tree/lower.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b4bb7743810b1e6ac8b897a465c430e9ed8d5c44/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4bb7743810b1e6ac8b897a465c430e9ed8d5c44/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs?ref=b4bb7743810b1e6ac8b897a465c430e9ed8d5c44", "patch": "@@ -536,7 +536,10 @@ impl Ctx {\n     fn lower_impl(&mut self, impl_def: &ast::Impl) -> Option<FileItemTreeId<Impl>> {\n         let generic_params =\n             self.lower_generic_params_and_inner_items(GenericsOwner::Impl, impl_def);\n-        let target_trait = impl_def.trait_().map(|tr| self.lower_trait_ref(&tr));\n+        // FIXME: If trait lowering fails, due to a non PathType for example, we treat this impl\n+        // as if it was an non-trait impl. Ideally we want to create a unique missing ref that only\n+        // equals itself.\n+        let target_trait = impl_def.trait_().and_then(|tr| self.lower_trait_ref(&tr));\n         let self_ty = self.lower_type_ref(&impl_def.self_ty()?);\n         let is_negative = impl_def.excl_token().is_some();\n \n@@ -740,9 +743,9 @@ impl Ctx {\n         self.data().vis.alloc(vis)\n     }\n \n-    fn lower_trait_ref(&mut self, trait_ref: &ast::Type) -> Idx<TraitRef> {\n-        let trait_ref = TraitRef::from_ast(&self.body_ctx, trait_ref.clone());\n-        self.data().trait_refs.intern(trait_ref)\n+    fn lower_trait_ref(&mut self, trait_ref: &ast::Type) -> Option<Idx<TraitRef>> {\n+        let trait_ref = TraitRef::from_ast(&self.body_ctx, trait_ref.clone())?;\n+        Some(self.data().trait_refs.intern(trait_ref))\n     }\n \n     fn lower_type_ref(&mut self, type_ref: &ast::Type) -> Idx<TypeRef> {"}, {"sha": "4c24aae94f3828ceeda11c26761916e66489abca", "filename": "crates/hir_def/src/type_ref.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b4bb7743810b1e6ac8b897a465c430e9ed8d5c44/crates%2Fhir_def%2Fsrc%2Ftype_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4bb7743810b1e6ac8b897a465c430e9ed8d5c44/crates%2Fhir_def%2Fsrc%2Ftype_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Ftype_ref.rs?ref=b4bb7743810b1e6ac8b897a465c430e9ed8d5c44", "patch": "@@ -52,21 +52,19 @@ impl Rawness {\n }\n \n #[derive(Clone, PartialEq, Eq, Hash, Debug)]\n-pub enum TraitRef {\n-    Path(Path),\n-    Error,\n+pub struct TraitRef {\n+    pub path: Path,\n }\n \n impl TraitRef {\n     /// Converts an `ast::PathType` to a `hir::TraitRef`.\n-    pub(crate) fn from_ast(ctx: &LowerCtx, node: ast::Type) -> Self {\n+    pub(crate) fn from_ast(ctx: &LowerCtx, node: ast::Type) -> Option<Self> {\n         // FIXME: Use `Path::from_src`\n         match node {\n-            ast::Type::PathType(path) => path\n-                .path()\n-                .and_then(|it| ctx.lower_path(it))\n-                .map_or(TraitRef::Error, TraitRef::Path),\n-            _ => TraitRef::Error,\n+            ast::Type::PathType(path) => {\n+                path.path().and_then(|it| ctx.lower_path(it)).map(|path| TraitRef { path })\n+            }\n+            _ => None,\n         }\n     }\n }"}, {"sha": "afbfa12d512850815a26012a5763d12a67df376e", "filename": "crates/hir_ty/src/lower.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b4bb7743810b1e6ac8b897a465c430e9ed8d5c44/crates%2Fhir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4bb7743810b1e6ac8b897a465c430e9ed8d5c44/crates%2Fhir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flower.rs?ref=b4bb7743810b1e6ac8b897a465c430e9ed8d5c44", "patch": "@@ -670,10 +670,7 @@ impl<'a> TyLoweringContext<'a> {\n         trait_ref: &HirTraitRef,\n         explicit_self_ty: Option<Ty>,\n     ) -> Option<TraitRef> {\n-        match trait_ref {\n-            HirTraitRef::Path(path) => self.lower_trait_ref_from_path(path, explicit_self_ty),\n-            HirTraitRef::Error => None,\n-        }\n+        self.lower_trait_ref_from_path(&trait_ref.path, explicit_self_ty)\n     }\n \n     fn trait_ref_substs_from_path("}]}