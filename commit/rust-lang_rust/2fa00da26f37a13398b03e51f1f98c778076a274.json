{"sha": "2fa00da26f37a13398b03e51f1f98c778076a274", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmYTAwZGEyNmYzN2ExMzM5OGIwM2U1MWYxZjk4Yzc3ODA3NmEyNzQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-07-13T18:56:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-13T18:56:51Z"}, "message": "Rollup merge of #52315 - ljedrz:FIXME_#27942, r=petrochenkov\n\nResolve FIXME(#27942)\n\n[related issue](https://github.com/rust-lang/rust/issues/27942)\n\ncc [#44366](https://github.com/rust-lang/rust/issues/44366)", "tree": {"sha": "57ea5918e15c2155096fc90096a00c6040a18f0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57ea5918e15c2155096fc90096a00c6040a18f0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fa00da26f37a13398b03e51f1f98c778076a274", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbSPXzCRBK7hj4Ov3rIwAAdHIIADGbzisTOI/vkbKflrVDG/ab\nuatOg7spq4MbJvcKatZPEnGxVsm8yUoFWaQCG8m/PpJYMYr0Cn7kZTOxJ0PpO+kc\nc/af5y5UqII1+oKafrpEUPEn0L2sTv0bEF/KCHfOgju1utJ/c9Jo2cd+FDIQ18JK\nYURXHPwdf5/5Yq4RzJJPjmiHgBH5/xguTeI5/c185MYz51G20a7oe5nQwAh6dl4x\n/hU1Wjb1a8up+5+uLYx6roAMLVjAhiimzhQilwY6LtWmw4VwNSh0MMmBCi7iVyqq\nKcmK4gNfAEg6XV+rCA/1D2io/FIZamG8APzugGu4KQ6kFxqxf4Is4gcGJ0bGkiU=\n=UaqD\n-----END PGP SIGNATURE-----\n", "payload": "tree 57ea5918e15c2155096fc90096a00c6040a18f0b\nparent 443150f0eec41b91642d36a139e0902c77e6b6ca\nparent 72f096b6288f00d14a47d7fc1dff7c4939ad2e2a\nauthor kennytm <kennytm@gmail.com> 1531508211 +0800\ncommitter GitHub <noreply@github.com> 1531508211 +0800\n\nRollup merge of #52315 - ljedrz:FIXME_#27942, r=petrochenkov\n\nResolve FIXME(#27942)\n\n[related issue](https://github.com/rust-lang/rust/issues/27942)\n\ncc [#44366](https://github.com/rust-lang/rust/issues/44366)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fa00da26f37a13398b03e51f1f98c778076a274", "html_url": "https://github.com/rust-lang/rust/commit/2fa00da26f37a13398b03e51f1f98c778076a274", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fa00da26f37a13398b03e51f1f98c778076a274/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "443150f0eec41b91642d36a139e0902c77e6b6ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/443150f0eec41b91642d36a139e0902c77e6b6ca", "html_url": "https://github.com/rust-lang/rust/commit/443150f0eec41b91642d36a139e0902c77e6b6ca"}, {"sha": "72f096b6288f00d14a47d7fc1dff7c4939ad2e2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/72f096b6288f00d14a47d7fc1dff7c4939ad2e2a", "html_url": "https://github.com/rust-lang/rust/commit/72f096b6288f00d14a47d7fc1dff7c4939ad2e2a"}], "stats": {"total": 22, "additions": 1, "deletions": 21}, "files": [{"sha": "c1849c63a7df34486d42a451f270020f146888ce", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2fa00da26f37a13398b03e51f1f98c778076a274/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fa00da26f37a13398b03e51f1f98c778076a274/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=2fa00da26f37a13398b03e51f1f98c778076a274", "patch": "@@ -193,32 +193,12 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n \n         let scope = region.free_region_binding_scope(self);\n         let node = self.hir.as_local_node_id(scope).unwrap_or(DUMMY_NODE_ID);\n-        let unknown;\n         let tag = match self.hir.find(node) {\n             Some(hir_map::NodeBlock(_)) | Some(hir_map::NodeExpr(_)) => \"body\",\n             Some(hir_map::NodeItem(it)) => Self::item_scope_tag(&it),\n             Some(hir_map::NodeTraitItem(it)) => Self::trait_item_scope_tag(&it),\n             Some(hir_map::NodeImplItem(it)) => Self::impl_item_scope_tag(&it),\n-\n-            // this really should not happen, but it does:\n-            // FIXME(#27942)\n-            Some(_) => {\n-                unknown = format!(\n-                    \"unexpected node ({}) for scope {:?}.  \\\n-                     Please report a bug.\",\n-                    self.hir.node_to_string(node),\n-                    scope\n-                );\n-                &unknown\n-            }\n-            None => {\n-                unknown = format!(\n-                    \"unknown node for scope {:?}.  \\\n-                     Please report a bug.\",\n-                    scope\n-                );\n-                &unknown\n-            }\n+            _ => unreachable!()\n         };\n         let (prefix, span) = match *region {\n             ty::ReEarlyBound(ref br) => {"}]}