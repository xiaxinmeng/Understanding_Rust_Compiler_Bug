{"sha": "77bf2b9694952dab8e7d7e8c0bfcb05ee74239c3", "node_id": "C_kwDOAAsO6NoAKDc3YmYyYjk2OTQ5NTJkYWI4ZTdkN2U4YzBiZmNiMDVlZTc0MjM5YzM", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-10-10T14:29:57Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-10-18T07:56:32Z"}, "message": "handle core dumps output in qemu user mode\n\nIn addition to the whole-system emulation/virtualization, QEMU also\nsupports user-mode emulation, where the emulation happens as a normal\nprocess inside the parent system. This allows running most tests by\nsimply spawning remote-test-server inside user-mode emulation.\n\nUnfortunately, QEMU always writes its own message in addition to the\nsystem one when a core dump happens, which breaks a few tests which\nmatch on the exact output of the system.\n\nThis PR changes those tests to strip the (possible) QEMU output before\nchecking if the output is expected.", "tree": {"sha": "f8b8e270fece9d7330ac14404ae57225d1d954c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8b8e270fece9d7330ac14404ae57225d1d954c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77bf2b9694952dab8e7d7e8c0bfcb05ee74239c3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmNOXK4ACgkQzXazX3c0\ndp79HA/6Akam83cyvwDif0VCAmnjyk00dg+ep/wSe1NhEruteC/PsU30bFUt+l/U\nfYTQpQEsH+oYiCllY2PBVcB6TJFSGMiiDV0ph+YpSe6Jy0Gytjt6FIyNll5fdoiS\n/uhJBU4icfBA0yxAxH8D2iBVpEaKajXSKlvmUna4ABPPaMwA+gzgoNooV6RVmSX6\nJd+7Q2dyeNW7PQPqxVNeG1ExC2AkSj+sHaTW0tJYN8mJ+EAJGJZcX3LJiEZHSdRK\nSO0OoKwoEM/6cwykoISkC8ba+u6BDEHLYZ4L1ZfdCN407s3AnZeycmqycwBEnByi\nc08Knyp1LuJgeNZEoFMEoTwhx0JdsdzrVhhw8TKpcqSQ1qmgNqT6snmz/hTlsK31\ncPlFo9dDOEX/AUDq6o0iiQAqE4qruHW5Rpy08cBGxaPxvrleK8vAzAySX8crezzX\nsflWVsftxOlZOF7daM1aGRUeuj9ioelnydjVZYTNJV6fDXFhNuQJbngFjKtgp/Ow\nvYDkSmMuTq0c3/Z04YNavaNMonik69LN8QrTxus3L5bNWVWhmD/iFGE7MOfjxE5Z\ng4KJr9glTxIJ5EF4nOEFuebdZzTC4dGyycHrpJMBe0YSndHyfHC00+PJXZCmKp5W\nlRuN5I7RmNgMhtSl/qJ8PZjI5AS2sqzsp6hqwpZZrFvzGabsqNw=\n=B7dc\n-----END PGP SIGNATURE-----", "payload": "tree f8b8e270fece9d7330ac14404ae57225d1d954c0\nparent a03ca01f4750e643a28731563e530917d314f729\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1665412197 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1666079792 +0200\n\nhandle core dumps output in qemu user mode\n\nIn addition to the whole-system emulation/virtualization, QEMU also\nsupports user-mode emulation, where the emulation happens as a normal\nprocess inside the parent system. This allows running most tests by\nsimply spawning remote-test-server inside user-mode emulation.\n\nUnfortunately, QEMU always writes its own message in addition to the\nsystem one when a core dump happens, which breaks a few tests which\nmatch on the exact output of the system.\n\nThis PR changes those tests to strip the (possible) QEMU output before\nchecking if the output is expected.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77bf2b9694952dab8e7d7e8c0bfcb05ee74239c3", "html_url": "https://github.com/rust-lang/rust/commit/77bf2b9694952dab8e7d7e8c0bfcb05ee74239c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77bf2b9694952dab8e7d7e8c0bfcb05ee74239c3/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a03ca01f4750e643a28731563e530917d314f729", "url": "https://api.github.com/repos/rust-lang/rust/commits/a03ca01f4750e643a28731563e530917d314f729", "html_url": "https://github.com/rust-lang/rust/commit/a03ca01f4750e643a28731563e530917d314f729"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "8be09500f4e4ed0ab22a588430abb58f6409a8fe", "filename": "src/test/ui/alloc-error/default-alloc-error-hook.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/77bf2b9694952dab8e7d7e8c0bfcb05ee74239c3/src%2Ftest%2Fui%2Falloc-error%2Fdefault-alloc-error-hook.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77bf2b9694952dab8e7d7e8c0bfcb05ee74239c3/src%2Ftest%2Fui%2Falloc-error%2Fdefault-alloc-error-hook.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Falloc-error%2Fdefault-alloc-error-hook.rs?ref=77bf2b9694952dab8e7d7e8c0bfcb05ee74239c3", "patch": "@@ -15,5 +15,14 @@ fn main() {\n     let me = env::current_exe().unwrap();\n     let output = Command::new(&me).arg(\"next\").output().unwrap();\n     assert!(!output.status.success(), \"{:?} is a success\", output.status);\n-    assert_eq!(str::from_utf8(&output.stderr).unwrap(), \"memory allocation of 42 bytes failed\\n\");\n+\n+    let mut stderr = str::from_utf8(&output.stderr).unwrap();\n+\n+    // When running inside QEMU user-mode emulation, there will be an extra message printed by QEMU\n+    // in the stderr whenever a core dump happens. Remove it before the check.\n+    stderr = stderr\n+        .strip_suffix(\"qemu: uncaught target signal 6 (Aborted) - core dumped\\n\")\n+        .unwrap_or(stderr);\n+\n+    assert_eq!(stderr, \"memory allocation of 42 bytes failed\\n\");\n }"}, {"sha": "755d3df42deed55e3e653c40aa1ee4d2b91b3d48", "filename": "src/test/ui/runtime/rt-explody-panic-payloads.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/77bf2b9694952dab8e7d7e8c0bfcb05ee74239c3/src%2Ftest%2Fui%2Fruntime%2Frt-explody-panic-payloads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77bf2b9694952dab8e7d7e8c0bfcb05ee74239c3/src%2Ftest%2Fui%2Fruntime%2Frt-explody-panic-payloads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fruntime%2Frt-explody-panic-payloads.rs?ref=77bf2b9694952dab8e7d7e8c0bfcb05ee74239c3", "patch": "@@ -22,7 +22,12 @@ fn main() {\n     }.expect(\"running the command should have succeeded\");\n     println!(\"{:#?}\", output);\n     let stderr = std::str::from_utf8(&output.stderr);\n-    assert!(stderr.map(|v| {\n-        v.ends_with(\"fatal runtime error: drop of the panic payload panicked\\n\")\n-    }).unwrap_or(false));\n+    assert!(stderr\n+        .map(|v| {\n+            // When running inside QEMU user-mode emulation, there will be an extra message printed\n+            // by QEMU in the stderr whenever a core dump happens. Remove it before the check.\n+            v.strip_suffix(\"qemu: uncaught target signal 6 (Aborted) - core dumped\\n\").unwrap_or(v)\n+        })\n+        .map(|v| { v.ends_with(\"fatal runtime error: drop of the panic payload panicked\\n\") })\n+        .unwrap_or(false));\n }"}]}