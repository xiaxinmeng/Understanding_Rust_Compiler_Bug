{"sha": "59e64e908504a6ce6cd549acd735e38871f88368", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5ZTY0ZTkwODUwNGE2Y2U2Y2Q1NDlhY2Q3MzVlMzg4NzFmODgzNjg=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-06-26T22:30:52Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-07-01T15:14:25Z"}, "message": "Updated affected tests.", "tree": {"sha": "d4af639ee2b1f380d0b2a2bde19ddf701c75c000", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4af639ee2b1f380d0b2a2bde19ddf701c75c000"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59e64e908504a6ce6cd549acd735e38871f88368", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAls479EACgkQAXYLT59T\n8VSezRAAoInMvrP6evnx3mgcVzJDdPzUZLyWS/LEQWZfwBGfZ7BlvbMCM2xVgKu5\nGMhmgFpLVTj+BUNeiqW89uWcMXn8hPxDWjSOhxjvTUmRZg3khZxmTIQE0xLdvoff\nnZ7YmJewE4wh9JdDfgPw9vyFX81zxMzTDXJlT+ABbQ4+bwsdUBaFsQsNAVw4tPbI\nle8KQCsqR9H9W+H5ECOMoArHqEu5ZPoFzwcVWItNJuTN+3a1a5z09N7X7aYfq659\nVGAX0ruuCYVle83lMdgRTwgWueyKkpoNA/R5+Cg1g8WdSUZzPmtfZBa2jlmBbwE3\n90l0YJU10gIjG+jeGBrBFEabiAUf++r4tT2d1xtQtBHAdA+xDuFrF+yoOJjJ3gwJ\nY0jXyAq9FSJE6sictBnc7UZpuveAtgA7k9l35+iNXhTm5Ij0Kc94dXgCXTfBrZN9\n5ZJS4FCARYZdrd3Xp+a0UFOvatfgLzAUeIU1lQD62gt4Hz09M+XdcZxVv+lm0lXk\nlswUa1wnRy07B3dXThaTVWhNchw4E8qhQr/iHzWlvm26eBnNooKjlME5snYWyUS8\nO4idZIQt8qggfaRKcdy4YgIXYRm8IckaxHliqe/H3z4D8jkIiFEqW1oW0TeqO8Iw\nIUKrYA75gTNslCi0GrFY5c1F0RHIt/YiuSqb5PB5Vv/lm02hyt4=\n=kb3a\n-----END PGP SIGNATURE-----", "payload": "tree d4af639ee2b1f380d0b2a2bde19ddf701c75c000\nparent e01e883e4f2e86961f02ce3041e4773a04286cfb\nauthor David Wood <david@davidtw.co> 1530052252 +0100\ncommitter David Wood <david@davidtw.co> 1530458065 +0100\n\nUpdated affected tests.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59e64e908504a6ce6cd549acd735e38871f88368", "html_url": "https://github.com/rust-lang/rust/commit/59e64e908504a6ce6cd549acd735e38871f88368", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59e64e908504a6ce6cd549acd735e38871f88368/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e01e883e4f2e86961f02ce3041e4773a04286cfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e01e883e4f2e86961f02ce3041e4773a04286cfb", "html_url": "https://github.com/rust-lang/rust/commit/e01e883e4f2e86961f02ce3041e4773a04286cfb"}], "stats": {"total": 136, "additions": 65, "deletions": 71}, "files": [{"sha": "9b5fcbc56d5cd417aa7d5b5e68ccc17d77f3f1c6", "filename": "src/test/ui/borrowck/issue-45983.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.nll.stderr?ref=59e64e908504a6ce6cd549acd735e38871f88368", "patch": "@@ -4,7 +4,7 @@ warning: not reporting region error due to nll\n LL |     give_any(|y| x = Some(y));\n    |                           ^\n \n-error: free region `` does not outlive free region `'_#2r`\n+error: Assignment requires that data must outlive free region `'_#2r`\n   --> $DIR/issue-45983.rs:17:27\n    |\n LL |     give_any(|y| x = Some(y));"}, {"sha": "91161d6820c34ac963e77d42f95f1509f2c291f8", "filename": "src/test/ui/borrowck/regions-escape-bound-fn-2.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn-2.nll.stderr?ref=59e64e908504a6ce6cd549acd735e38871f88368", "patch": "@@ -4,7 +4,7 @@ warning: not reporting region error due to nll\n LL |     with_int(|y| x = Some(y));\n    |                           ^\n \n-error: free region `` does not outlive free region `'_#2r`\n+error: Assignment requires that data must outlive free region `'_#2r`\n   --> $DIR/regions-escape-bound-fn-2.rs:18:27\n    |\n LL |     with_int(|y| x = Some(y));"}, {"sha": "248933fc39e14049a7bb84de15a4b9b9ec58bb5b", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-comparing-against-free.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.rs?ref=59e64e908504a6ce6cd549acd735e38871f88368", "patch": "@@ -31,7 +31,7 @@ fn case1() {\n     foo(cell, |cell_a, cell_x| {\n         //~^ WARNING not reporting region error due to nll\n         cell_a.set(cell_x.get()); // forces 'x: 'a, error in closure\n-        //~^ ERROR does not outlive free region\n+        //~^ ERROR Argument requires that data must outlive free region\n     })\n }\n "}, {"sha": "7b1cba1d937f641c96b7ebb919c682e729f2232e", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-comparing-against-free.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.stderr?ref=59e64e908504a6ce6cd549acd735e38871f88368", "patch": "@@ -4,11 +4,11 @@ warning: not reporting region error due to nll\n LL |     foo(cell, |cell_a, cell_x| {\n    |     ^^^\n \n-error: free region `ReFree(DefId(0/1:12 ~ propagate_approximated_shorter_to_static_comparing_against_free[317d]::case1[0]::{{closure}}[0]), BrAnon(1))` does not outlive free region `'_#1r`\n-  --> $DIR/propagate-approximated-shorter-to-static-comparing-against-free.rs:33:9\n+error: Argument requires that data must outlive free region `'_#1r`\n+  --> $DIR/propagate-approximated-shorter-to-static-comparing-against-free.rs:33:20\n    |\n LL |         cell_a.set(cell_x.get()); // forces 'x: 'a, error in closure\n-   |         ^^^^^^\n+   |                    ^^^^^^^^^^^^\n \n note: No external requirements\n   --> $DIR/propagate-approximated-shorter-to-static-comparing-against-free.rs:31:15\n@@ -17,7 +17,7 @@ LL |       foo(cell, |cell_a, cell_x| {\n    |  _______________^\n LL | |         //~^ WARNING not reporting region error due to nll\n LL | |         cell_a.set(cell_x.get()); // forces 'x: 'a, error in closure\n-LL | |         //~^ ERROR does not outlive free region\n+LL | |         //~^ ERROR Argument requires that data must outlive free region\n LL | |     })\n    | |_____^\n    |"}, {"sha": "4c8c2b1b95bb05da3a42b4c88cf440bd4e3946af", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-no-bound.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs?ref=59e64e908504a6ce6cd549acd735e38871f88368", "patch": "@@ -43,7 +43,7 @@ fn demand_y<'x, 'y>(_cell_x: &Cell<&'x u32>, _cell_y: &Cell<&'y u32>, _y: &'y u3\n #[rustc_regions]\n fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n-        //~^ ERROR does not outlive free region\n+        //~^ ERROR Argument requires that data must outlive free region\n \n         // Only works if 'x: 'y:\n         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll"}, {"sha": "8a18af90e195c7d01b0bc2746f2fb835917d4d5e", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-no-bound.stderr", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr?ref=59e64e908504a6ce6cd549acd735e38871f88368", "patch": "@@ -9,7 +9,7 @@ note: External requirements\n    |\n LL |       establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n    |  _______________________________________________^\n-LL | |         //~^ ERROR does not outlive free region\n+LL | |         //~^ ERROR Argument requires that data must outlive free region\n LL | |\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll\n@@ -23,12 +23,11 @@ LL | |     });\n    = note: number of external vids: 2\n    = note: where '_#1r: '_#0r\n \n-error: free region `ReFree(DefId(0/0:6 ~ propagate_approximated_shorter_to_static_no_bound[317d]::supply[0]), BrNamed(crate0:DefIndex(1:16), 'a))` does not outlive free region `ReStatic`\n-  --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:45:47\n+error: Argument requires that data must outlive free region `ReStatic`\n+  --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:45:5\n    |\n-LL |       establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n-   |  _______________________________________________^\n-LL | |         //~^ ERROR does not outlive free region\n+LL | /     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n+LL | |         //~^ ERROR Argument requires that data must outlive free region\n LL | |\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll\n@@ -40,7 +39,7 @@ note: No external requirements\n    |\n LL | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n LL | |     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n-LL | |         //~^ ERROR does not outlive free region\n+LL | |         //~^ ERROR Argument requires that data must outlive free region\n LL | |\n ...  |\n LL | |     });"}, {"sha": "d9cfea4c891c4bc93c72e0834b5df82933d873c1", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-wrong-bound.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs?ref=59e64e908504a6ce6cd549acd735e38871f88368", "patch": "@@ -46,7 +46,7 @@ fn demand_y<'x, 'y>(_cell_x: &Cell<&'x u32>, _cell_y: &Cell<&'y u32>, _y: &'y u3\n #[rustc_regions]\n fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n-        //~^ ERROR does not outlive free region\n+        //~^ ERROR Argument requires that data must outlive free region\n         // Only works if 'x: 'y:\n         demand_y(x, y, x.get())\n         //~^ WARNING not reporting region error due to nll"}, {"sha": "dda1c44b4d8b4cc44683ade5b8686fdd22eef3b4", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-wrong-bound.stderr", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr?ref=59e64e908504a6ce6cd549acd735e38871f88368", "patch": "@@ -9,7 +9,7 @@ note: External requirements\n    |\n LL |       establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n    |  _______________________________________________^\n-LL | |         //~^ ERROR does not outlive free region\n+LL | |         //~^ ERROR Argument requires that data must outlive free region\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get())\n LL | |         //~^ WARNING not reporting region error due to nll\n@@ -23,12 +23,11 @@ LL | |     });\n    = note: number of external vids: 3\n    = note: where '_#1r: '_#0r\n \n-error: free region `ReFree(DefId(0/0:6 ~ propagate_approximated_shorter_to_static_wrong_bound[317d]::supply[0]), BrNamed(crate0:DefIndex(1:16), 'a))` does not outlive free region `ReStatic`\n-  --> $DIR/propagate-approximated-shorter-to-static-wrong-bound.rs:48:47\n+error: Argument requires that data must outlive free region `ReStatic`\n+  --> $DIR/propagate-approximated-shorter-to-static-wrong-bound.rs:48:5\n    |\n-LL |       establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n-   |  _______________________________________________^\n-LL | |         //~^ ERROR does not outlive free region\n+LL | /     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+LL | |         //~^ ERROR Argument requires that data must outlive free region\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get())\n LL | |         //~^ WARNING not reporting region error due to nll\n@@ -40,7 +39,7 @@ note: No external requirements\n    |\n LL | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n LL | |     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n-LL | |         //~^ ERROR does not outlive free region\n+LL | |         //~^ ERROR Argument requires that data must outlive free region\n LL | |         // Only works if 'x: 'y:\n ...  |\n LL | |     });"}, {"sha": "480461b6b639c0a8240709948e73ff3ef7646ae8", "filename": "src/test/ui/nll/closure-requirements/propagate-fail-to-approximate-longer-no-bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.rs?ref=59e64e908504a6ce6cd549acd735e38871f88368", "patch": "@@ -46,7 +46,7 @@ fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n         // Only works if 'x: 'y:\n         demand_y(x, y, x.get())\n         //~^ WARN not reporting region error due to nll\n-        //~| ERROR does not outlive free region\n+        //~| ERROR Argument requires that data must outlive free region\n     });\n }\n "}, {"sha": "00e4c289e7eb5e3c11370a8d8e3b07c786522461", "filename": "src/test/ui/nll/closure-requirements/propagate-fail-to-approximate-longer-no-bounds.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr?ref=59e64e908504a6ce6cd549acd735e38871f88368", "patch": "@@ -4,11 +4,11 @@ warning: not reporting region error due to nll\n LL |         demand_y(x, y, x.get())\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: free region `ReFree(DefId(0/1:18 ~ propagate_fail_to_approximate_longer_no_bounds[317d]::supply[0]::{{closure}}[0]), BrAnon(4))` does not outlive free region `ReFree(DefId(0/1:18 ~ propagate_fail_to_approximate_longer_no_bounds[317d]::supply[0]::{{closure}}[0]), BrAnon(2))`\n-  --> $DIR/propagate-fail-to-approximate-longer-no-bounds.rs:47:18\n+error: Argument requires that data must outlive free region `ReFree(DefId(0/1:18 ~ propagate_fail_to_approximate_longer_no_bounds[317d]::supply[0]::{{closure}}[0]), BrAnon(2))`\n+  --> $DIR/propagate-fail-to-approximate-longer-no-bounds.rs:47:9\n    |\n LL |         demand_y(x, y, x.get())\n-   |                  ^\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n note: No external requirements\n   --> $DIR/propagate-fail-to-approximate-longer-no-bounds.rs:45:47\n@@ -18,7 +18,7 @@ LL |       establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get())\n LL | |         //~^ WARN not reporting region error due to nll\n-LL | |         //~| ERROR does not outlive free region\n+LL | |         //~| ERROR Argument requires that data must outlive free region\n LL | |     });\n    | |_____^\n    |"}, {"sha": "5e695f3f7c7d7700b78c963e7b31fb4dc856499d", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-closure.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.rs?ref=59e64e908504a6ce6cd549acd735e38871f88368", "patch": "@@ -55,7 +55,7 @@ where\n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to nll\n     //~| ERROR the parameter type `T` may not live long enough\n-    //~| ERROR does not outlive free region\n+    //~| ERROR Argument requires that data must outlive free region\n }\n \n #[rustc_regions]\n@@ -67,7 +67,7 @@ where\n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to nll\n     //~| ERROR the parameter type `T` may not live long enough\n-    //~| ERROR does not outlive free region\n+    //~| ERROR Argument requires that data must outlive free region\n }\n \n #[rustc_regions]\n@@ -89,7 +89,7 @@ where\n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to nll\n     //~| ERROR the parameter type `T` may not live long enough\n-    //~| ERROR free region `ReEarlyBound(1, 'b)` does not outlive free region `ReEarlyBound(0, 'a)`\n+    //~| ERROR Argument requires that data must outlive free region\n }\n \n #[rustc_regions]"}, {"sha": "fac0a0b0064c09592bf0237a600ac650b70e50c4", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-closure.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr?ref=59e64e908504a6ce6cd549acd735e38871f88368", "patch": "@@ -40,11 +40,11 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |\n    = help: consider adding an explicit lifetime bound `T: ReFree(DefId(0/0:8 ~ projection_one_region_closure[317d]::no_relationships_late[0]), BrNamed(crate0:DefIndex(1:16), 'a))`...\n \n-error: free region `ReEarlyBound(0, 'b)` does not outlive free region `ReFree(DefId(0/0:8 ~ projection_one_region_closure[317d]::no_relationships_late[0]), BrNamed(crate0:DefIndex(1:16), 'a))`\n-  --> $DIR/projection-one-region-closure.rs:55:20\n+error: Argument requires that data must outlive free region `ReFree(DefId(0/0:8 ~ projection_one_region_closure[317d]::no_relationships_late[0]), BrNamed(crate0:DefIndex(1:16), 'a))`\n+  --> $DIR/projection-one-region-closure.rs:55:5\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n-   |                    ^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n note: No external requirements\n   --> $DIR/projection-one-region-closure.rs:51:1\n@@ -54,7 +54,7 @@ LL | | where\n LL | |     T: Anything<'b>,\n LL | | {\n ...  |\n-LL | |     //~| ERROR does not outlive free region\n+LL | |     //~| ERROR Argument requires that data must outlive free region\n LL | | }\n    | |_^\n    |\n@@ -88,11 +88,11 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |\n    = help: consider adding an explicit lifetime bound `T: ReEarlyBound(0, 'a)`...\n \n-error: free region `ReEarlyBound(1, 'b)` does not outlive free region `ReEarlyBound(0, 'a)`\n-  --> $DIR/projection-one-region-closure.rs:67:20\n+error: Argument requires that data must outlive free region `ReEarlyBound(0, 'a)`\n+  --> $DIR/projection-one-region-closure.rs:67:5\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n-   |                    ^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n note: No external requirements\n   --> $DIR/projection-one-region-closure.rs:62:1\n@@ -102,7 +102,7 @@ LL | | where\n LL | |     T: Anything<'b>,\n LL | |     'a: 'a,\n ...  |\n-LL | |     //~| ERROR does not outlive free region\n+LL | |     //~| ERROR Argument requires that data must outlive free region\n LL | | }\n    | |_^\n    |\n@@ -137,11 +137,11 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |\n    = help: consider adding an explicit lifetime bound `T: ReEarlyBound(0, 'a)`...\n \n-error: free region `ReEarlyBound(1, 'b)` does not outlive free region `ReEarlyBound(0, 'a)`\n-  --> $DIR/projection-one-region-closure.rs:89:20\n+error: Argument requires that data must outlive free region `ReEarlyBound(0, 'a)`\n+  --> $DIR/projection-one-region-closure.rs:89:5\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n-   |                    ^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n note: No external requirements\n   --> $DIR/projection-one-region-closure.rs:74:1\n@@ -151,7 +151,7 @@ LL | | where\n LL | |     T: Anything<'b>,\n LL | |     T::AssocType: 'a,\n ...  |\n-LL | |     //~| ERROR free region `ReEarlyBound(1, 'b)` does not outlive free region `ReEarlyBound(0, 'a)`\n+LL | |     //~| ERROR Argument requires that data must outlive free region\n LL | | }\n    | |_^\n    |"}, {"sha": "24d1753eea8267cbd403a317b6bca5402894ee6f", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-trait-bound-closure.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.rs?ref=59e64e908504a6ce6cd549acd735e38871f88368", "patch": "@@ -46,7 +46,7 @@ where\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to nll\n-    //~| ERROR does not outlive free region\n+    //~| ERROR Argument requires that data must outlive free region\n }\n \n #[rustc_regions]\n@@ -57,7 +57,7 @@ where\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to nll\n-    //~| ERROR does not outlive free region\n+    //~| ERROR Argument requires that data must outlive free region\n }\n \n #[rustc_regions]\n@@ -78,7 +78,7 @@ where\n \n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to nll\n-    //~| ERROR does not outlive free region\n+    //~| ERROR Argument requires that data must outlive free region\n }\n \n #[rustc_regions]"}, {"sha": "07e65fb40515842829f00d493c05e822bf33c137", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-trait-bound-closure.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.stderr?ref=59e64e908504a6ce6cd549acd735e38871f88368", "patch": "@@ -31,11 +31,11 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: number of external vids: 3\n    = note: where '_#1r: '_#2r\n \n-error: free region `ReEarlyBound(0, 'b)` does not outlive free region `ReFree(DefId(0/0:8 ~ projection_one_region_trait_bound_closure[317d]::no_relationships_late[0]), BrNamed(crate0:DefIndex(1:16), 'a))`\n-  --> $DIR/projection-one-region-trait-bound-closure.rs:47:20\n+error: Argument requires that data must outlive free region `ReFree(DefId(0/0:8 ~ projection_one_region_trait_bound_closure[317d]::no_relationships_late[0]), BrNamed(crate0:DefIndex(1:16), 'a))`\n+  --> $DIR/projection-one-region-trait-bound-closure.rs:47:5\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n-   |                    ^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n note: No external requirements\n   --> $DIR/projection-one-region-trait-bound-closure.rs:43:1\n@@ -45,7 +45,7 @@ LL | | where\n LL | |     T: Anything<'b>,\n LL | | {\n ...  |\n-LL | |     //~| ERROR does not outlive free region\n+LL | |     //~| ERROR Argument requires that data must outlive free region\n LL | | }\n    | |_^\n    |\n@@ -70,11 +70,11 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: number of external vids: 4\n    = note: where '_#2r: '_#3r\n \n-error: free region `ReEarlyBound(1, 'b)` does not outlive free region `ReEarlyBound(0, 'a)`\n-  --> $DIR/projection-one-region-trait-bound-closure.rs:58:20\n+error: Argument requires that data must outlive free region `ReEarlyBound(0, 'a)`\n+  --> $DIR/projection-one-region-trait-bound-closure.rs:58:5\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n-   |                    ^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n note: No external requirements\n   --> $DIR/projection-one-region-trait-bound-closure.rs:53:1\n@@ -84,7 +84,7 @@ LL | | where\n LL | |     T: Anything<'b>,\n LL | |     'a: 'a,\n ...  |\n-LL | |     //~| ERROR does not outlive free region\n+LL | |     //~| ERROR Argument requires that data must outlive free region\n LL | | }\n    | |_^\n    |\n@@ -110,11 +110,11 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: number of external vids: 4\n    = note: where '_#2r: '_#3r\n \n-error: free region `ReEarlyBound(1, 'b)` does not outlive free region `ReEarlyBound(0, 'a)`\n-  --> $DIR/projection-one-region-trait-bound-closure.rs:79:20\n+error: Argument requires that data must outlive free region `ReEarlyBound(0, 'a)`\n+  --> $DIR/projection-one-region-trait-bound-closure.rs:79:5\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n-   |                    ^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n note: No external requirements\n   --> $DIR/projection-one-region-trait-bound-closure.rs:64:1\n@@ -124,7 +124,7 @@ LL | | where\n LL | |     T: Anything<'b>,\n LL | |     T::AssocType: 'a,\n ...  |\n-LL | |     //~| ERROR does not outlive free region\n+LL | |     //~| ERROR Argument requires that data must outlive free region\n LL | | }\n    | |_^\n    |"}, {"sha": "8129f93736b64807b1042a9f77748e4706ec53c5", "filename": "src/test/ui/nll/ty-outlives/projection-two-region-trait-bound-closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.rs?ref=59e64e908504a6ce6cd549acd735e38871f88368", "patch": "@@ -107,7 +107,7 @@ where\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to nll\n-    //~| ERROR does not outlive free region\n+    //~| ERROR Argument requires that data must outlive free region\n }\n \n #[rustc_regions]"}, {"sha": "c778f23a2c450dbd38c941bea992d98973ff8279", "filename": "src/test/ui/nll/ty-outlives/projection-two-region-trait-bound-closure.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr?ref=59e64e908504a6ce6cd549acd735e38871f88368", "patch": "@@ -239,11 +239,11 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: number of external vids: 3\n    = note: where <T as Anything<ReClosureBound('_#1r), ReClosureBound('_#1r)>>::AssocType: '_#2r\n \n-error: free region `ReEarlyBound(0, 'b)` does not outlive free region `ReFree(DefId(0/0:13 ~ projection_two_region_trait_bound_closure[317d]::two_regions[0]), BrNamed(crate0:DefIndex(1:43), 'a))`\n-  --> $DIR/projection-two-region-trait-bound-closure.rs:108:20\n+error: Argument requires that data must outlive free region `ReFree(DefId(0/0:13 ~ projection_two_region_trait_bound_closure[317d]::two_regions[0]), BrNamed(crate0:DefIndex(1:43), 'a))`\n+  --> $DIR/projection-two-region-trait-bound-closure.rs:108:5\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n-   |                    ^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n note: No external requirements\n   --> $DIR/projection-two-region-trait-bound-closure.rs:104:1\n@@ -253,7 +253,7 @@ LL | | where\n LL | |     T: Anything<'b, 'b>,\n LL | | {\n ...  |\n-LL | |     //~| ERROR does not outlive free region\n+LL | |     //~| ERROR Argument requires that data must outlive free region\n LL | | }\n    | |_^\n    |"}, {"sha": "681c0dce7d172f2b498f398b898d74fbed48fc0e", "filename": "src/test/ui/underscore-lifetime/dyn-trait-underscore.nll.stderr", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59e64e908504a6ce6cd549acd735e38871f88368/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.nll.stderr?ref=59e64e908504a6ce6cd549acd735e38871f88368", "patch": "@@ -22,15 +22,11 @@ warning: not reporting region error due to nll\n LL |     Box::new(items.iter()) //~ ERROR cannot infer an appropriate lifetime\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: free region `` does not outlive free region `'static`\n-  --> $DIR/dyn-trait-underscore.rs:16:52\n+error: Cast requires that data must outlive free region `'static`\n+  --> $DIR/dyn-trait-underscore.rs:18:5\n    |\n-LL |   fn a<T>(items: &[T]) -> Box<dyn Iterator<Item=&T>> {\n-   |  ____________________________________________________^\n-LL | |     //                      ^^^^^^^^^^^^^^^^^^^^^ bound *here* defaults to `'static`\n-LL | |     Box::new(items.iter()) //~ ERROR cannot infer an appropriate lifetime\n-LL | | }\n-   | |_^\n+LL |     Box::new(items.iter()) //~ ERROR cannot infer an appropriate lifetime\n+   |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}]}