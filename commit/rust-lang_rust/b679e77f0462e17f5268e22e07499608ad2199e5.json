{"sha": "b679e77f0462e17f5268e22e07499608ad2199e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2NzllNzdmMDQ2MmUxN2Y1MjY4ZTIyZTA3NDk5NjA4YWQyMTk5ZTU=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-12T13:03:05Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-15T16:55:38Z"}, "message": "Factor out IntRange::is_subrange", "tree": {"sha": "839a9a978a9e142fd03bbbf4b13192918c8b33ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/839a9a978a9e142fd03bbbf4b13192918c8b33ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b679e77f0462e17f5268e22e07499608ad2199e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b679e77f0462e17f5268e22e07499608ad2199e5", "html_url": "https://github.com/rust-lang/rust/commit/b679e77f0462e17f5268e22e07499608ad2199e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b679e77f0462e17f5268e22e07499608ad2199e5/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9165dd056b4a54293b8f3a430653d6ef953af65e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9165dd056b4a54293b8f3a430653d6ef953af65e", "html_url": "https://github.com/rust-lang/rust/commit/9165dd056b4a54293b8f3a430653d6ef953af65e"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "7f77e2b0c8887674a48e80d6b93eeb6e80d1dc01", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b679e77f0462e17f5268e22e07499608ad2199e5/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b679e77f0462e17f5268e22e07499608ad2199e5/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=b679e77f0462e17f5268e22e07499608ad2199e5", "patch": "@@ -1357,6 +1357,10 @@ impl<'tcx> IntRange<'tcx> {\n         remaining_ranges\n     }\n \n+    fn is_subrange(&self, other: &Self) -> bool {\n+        other.range.start() <= self.range.start() && self.range.end() <= other.range.end()\n+    }\n+\n     fn intersection(&self, tcx: TyCtxt<'tcx>, other: &Self) -> Option<Self> {\n         let ty = self.ty;\n         let (lo, hi) = self.boundaries();\n@@ -1370,7 +1374,7 @@ impl<'tcx> IntRange<'tcx> {\n             }\n         } else {\n             // If the range should not be treated exhaustively, fallback to checking for inclusion.\n-            if other_lo <= lo && hi <= other_hi { Some(self.clone()) } else { None }\n+            if self.is_subrange(other) { Some(self.clone()) } else { None }\n         }\n     }\n \n@@ -2236,9 +2240,7 @@ fn specialize_one_pattern<'p, 'a: 'p, 'q: 'p, 'tcx>(\n                     Some(pat) => ctor.intersection(cx.tcx, &pat).map(|_| {\n                         // Constructor splitting should ensure that all intersections we encounter\n                         // are actually inclusions.\n-                        let (pat_lo, pat_hi) = pat.boundaries();\n-                        let (ctor_lo, ctor_hi) = ctor.boundaries();\n-                        assert!(pat_lo <= ctor_lo && ctor_hi <= pat_hi);\n+                        assert!(ctor.is_subrange(&pat));\n                         PatStack::default()\n                     }),\n                     _ => None,"}]}