{"sha": "353945a01b8803a663b452a56a5826508c587530", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1Mzk0NWEwMWI4ODAzYTY2M2I0NTJhNTZhNTgyNjUwOGM1ODc1MzA=", "commit": {"author": {"name": "Enrico Schmitz", "email": "enrico@schmitz.link", "date": "2017-03-01T14:42:58Z"}, "committer": {"name": "Enrico Schmitz", "email": "es@mdtm.de", "date": "2017-03-01T14:42:58Z"}, "message": "Use expect instead of unwrap to make clippy happy", "tree": {"sha": "8bd802960fb800aaf8c7077485820d1cf37e53e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bd802960fb800aaf8c7077485820d1cf37e53e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/353945a01b8803a663b452a56a5826508c587530", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/353945a01b8803a663b452a56a5826508c587530", "html_url": "https://github.com/rust-lang/rust/commit/353945a01b8803a663b452a56a5826508c587530", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/353945a01b8803a663b452a56a5826508c587530/comments", "author": {"login": "ensch", "id": 180274, "node_id": "MDQ6VXNlcjE4MDI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/180274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ensch", "html_url": "https://github.com/ensch", "followers_url": "https://api.github.com/users/ensch/followers", "following_url": "https://api.github.com/users/ensch/following{/other_user}", "gists_url": "https://api.github.com/users/ensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/ensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ensch/subscriptions", "organizations_url": "https://api.github.com/users/ensch/orgs", "repos_url": "https://api.github.com/users/ensch/repos", "events_url": "https://api.github.com/users/ensch/events{/privacy}", "received_events_url": "https://api.github.com/users/ensch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ensch", "id": 180274, "node_id": "MDQ6VXNlcjE4MDI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/180274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ensch", "html_url": "https://github.com/ensch", "followers_url": "https://api.github.com/users/ensch/followers", "following_url": "https://api.github.com/users/ensch/following{/other_user}", "gists_url": "https://api.github.com/users/ensch/gists{/gist_id}", "starred_url": "https://api.github.com/users/ensch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ensch/subscriptions", "organizations_url": "https://api.github.com/users/ensch/orgs", "repos_url": "https://api.github.com/users/ensch/repos", "events_url": "https://api.github.com/users/ensch/events{/privacy}", "received_events_url": "https://api.github.com/users/ensch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4050c275e1fe582ae6dfb66617a407ce17549fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4050c275e1fe582ae6dfb66617a407ce17549fd", "html_url": "https://github.com/rust-lang/rust/commit/d4050c275e1fe582ae6dfb66617a407ce17549fd"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "068fd782cf6760317dcad1c18cae1bf75a7e3b0e", "filename": "clippy_lints/src/array_indexing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/353945a01b8803a663b452a56a5826508c587530/clippy_lints%2Fsrc%2Farray_indexing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/353945a01b8803a663b452a56a5826508c587530/clippy_lints%2Fsrc%2Farray_indexing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farray_indexing.rs?ref=353945a01b8803a663b452a56a5826508c587530", "patch": "@@ -60,7 +60,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ArrayIndexing {\n             // Array with known size can be checked statically\n             let ty = cx.tables.expr_ty(array);\n             if let ty::TyArray(_, size) = ty.sty {\n-                let size = ConstInt::Usize(ConstUsize::new(size as u64, cx.sess().target.uint_type).unwrap());\n+                let size = ConstInt::Usize(ConstUsize::new(size as u64, cx.sess().target.uint_type).expect(\"array size is invalid\"));\n                 let constcx = ConstContext::with_tables(cx.tcx, cx.tables);\n \n                 // Index is a constant uint"}]}