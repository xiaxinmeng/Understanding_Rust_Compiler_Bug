{"sha": "bccf013010240cd02cf5369c8b18020afa990e6d", "node_id": "C_kwDOAAsO6NoAKGJjY2YwMTMwMTAyNDBjZDAyY2Y1MzY5YzhiMTgwMjBhZmE5OTBlNmQ", "commit": {"author": {"name": "Jake Vossen", "email": "jake@vossen.dev", "date": "2022-04-01T03:19:45Z"}, "committer": {"name": "Jake Vossen", "email": "jake@vossen.dev", "date": "2022-04-01T03:22:08Z"}, "message": "create generate is, as, try_into group", "tree": {"sha": "3ec03e3d875854661abe02c79a5af49d44651ee2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ec03e3d875854661abe02c79a5af49d44651ee2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bccf013010240cd02cf5369c8b18020afa990e6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bccf013010240cd02cf5369c8b18020afa990e6d", "html_url": "https://github.com/rust-lang/rust/commit/bccf013010240cd02cf5369c8b18020afa990e6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bccf013010240cd02cf5369c8b18020afa990e6d/comments", "author": {"login": "jakevossen5", "id": 16298666, "node_id": "MDQ6VXNlcjE2Mjk4NjY2", "avatar_url": "https://avatars.githubusercontent.com/u/16298666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakevossen5", "html_url": "https://github.com/jakevossen5", "followers_url": "https://api.github.com/users/jakevossen5/followers", "following_url": "https://api.github.com/users/jakevossen5/following{/other_user}", "gists_url": "https://api.github.com/users/jakevossen5/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakevossen5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakevossen5/subscriptions", "organizations_url": "https://api.github.com/users/jakevossen5/orgs", "repos_url": "https://api.github.com/users/jakevossen5/repos", "events_url": "https://api.github.com/users/jakevossen5/events{/privacy}", "received_events_url": "https://api.github.com/users/jakevossen5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakevossen5", "id": 16298666, "node_id": "MDQ6VXNlcjE2Mjk4NjY2", "avatar_url": "https://avatars.githubusercontent.com/u/16298666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakevossen5", "html_url": "https://github.com/jakevossen5", "followers_url": "https://api.github.com/users/jakevossen5/followers", "following_url": "https://api.github.com/users/jakevossen5/following{/other_user}", "gists_url": "https://api.github.com/users/jakevossen5/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakevossen5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakevossen5/subscriptions", "organizations_url": "https://api.github.com/users/jakevossen5/orgs", "repos_url": "https://api.github.com/users/jakevossen5/repos", "events_url": "https://api.github.com/users/jakevossen5/events{/privacy}", "received_events_url": "https://api.github.com/users/jakevossen5/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1d684e95130cca21fc78f1642b02811ad09db15", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1d684e95130cca21fc78f1642b02811ad09db15", "html_url": "https://github.com/rust-lang/rust/commit/a1d684e95130cca21fc78f1642b02811ad09db15"}], "stats": {"total": 47, "additions": 28, "deletions": 19}, "files": [{"sha": "7dc1e4df28e1b46cd985f92f04301d34034af94c", "filename": "crates/ide_assists/src/handlers/generate_enum_is_method.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bccf013010240cd02cf5369c8b18020afa990e6d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_is_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bccf013010240cd02cf5369c8b18020afa990e6d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_is_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_is_method.rs?ref=bccf013010240cd02cf5369c8b18020afa990e6d", "patch": "@@ -1,3 +1,4 @@\n+use ide_db::assists::GroupLabel;\n use stdx::to_lower_snake_case;\n use syntax::ast::HasVisibility;\n use syntax::ast::{self, AstNode, HasName};\n@@ -54,7 +55,8 @@ pub(crate) fn generate_enum_is_method(acc: &mut Assists, ctx: &AssistContext) ->\n     let impl_def = find_struct_impl(ctx, &parent_enum, &fn_name)?;\n \n     let target = variant.syntax().text_range();\n-    acc.add(\n+    acc.add_group(\n+        &GroupLabel(\"Generate `is_`,`as_`,`try_into_`\".to_owned()),\n         AssistId(\"generate_enum_is_method\", AssistKind::Generate),\n         \"Generate an `is_` method for an enum variant\",\n         target,"}, {"sha": "fdaa79134010895461d45e906877dec46c91b43f", "filename": "crates/ide_assists/src/handlers/generate_enum_projection_method.rs", "status": "modified", "additions": 25, "deletions": 18, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/bccf013010240cd02cf5369c8b18020afa990e6d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_projection_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bccf013010240cd02cf5369c8b18020afa990e6d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_projection_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_projection_method.rs?ref=bccf013010240cd02cf5369c8b18020afa990e6d", "patch": "@@ -1,3 +1,4 @@\n+use ide_db::assists::GroupLabel;\n use itertools::Itertools;\n use stdx::to_lower_snake_case;\n use syntax::ast::HasVisibility;\n@@ -139,31 +140,37 @@ fn generate_enum_projection_method(\n     let impl_def = find_struct_impl(ctx, &parent_enum, &fn_name)?;\n \n     let target = variant.syntax().text_range();\n-    acc.add(AssistId(assist_id, AssistKind::Generate), assist_description, target, |builder| {\n-        let vis = parent_enum.visibility().map_or(String::new(), |v| format!(\"{} \", v));\n-        let method = format!(\n-            \"    {0}fn {1}({2}) -> {3}{4}{5} {{\n+    acc.add_group(\n+        &GroupLabel(\"Generate `is_`,`as_`,`try_into_`\".to_owned()),\n+        AssistId(assist_id, AssistKind::Generate),\n+        assist_description,\n+        target,\n+        |builder| {\n+            let vis = parent_enum.visibility().map_or(String::new(), |v| format!(\"{} \", v));\n+            let method = format!(\n+                \"    {0}fn {1}({2}) -> {3}{4}{5} {{\n         if let Self::{6}{7} = self {{\n             {8}({9})\n         }} else {{\n             {10}\n         }}\n     }}\",\n-            vis,\n-            fn_name,\n-            props.self_param,\n-            props.return_prefix,\n-            field_type.syntax(),\n-            props.return_suffix,\n-            variant_name,\n-            pattern_suffix,\n-            props.happy_case,\n-            bound_name,\n-            props.sad_case,\n-        );\n+                vis,\n+                fn_name,\n+                props.self_param,\n+                props.return_prefix,\n+                field_type.syntax(),\n+                props.return_suffix,\n+                variant_name,\n+                pattern_suffix,\n+                props.happy_case,\n+                bound_name,\n+                props.sad_case,\n+            );\n \n-        add_method_to_adt(builder, &parent_enum, impl_def, &method);\n-    })\n+            add_method_to_adt(builder, &parent_enum, impl_def, &method);\n+        },\n+    )\n }\n \n #[cfg(test)]"}]}