{"sha": "0e2ec8ca832f4a2e54f9eaf2a285cf4c11628014", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMmVjOGNhODMyZjRhMmU1NGY5ZWFmMmEyODVjZjRjMTE2MjgwMTQ=", "commit": {"author": {"name": "Kan-Ru Chen", "email": "kanru@kanru.info", "date": "2020-07-25T09:57:35Z"}, "committer": {"name": "Kan-Ru Chen", "email": "kanru@kanru.info", "date": "2020-07-25T09:58:18Z"}, "message": "Ensure stack when parsing large if expressions", "tree": {"sha": "cc628b784fe39150ee02e34626afad6ab6dab6a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc628b784fe39150ee02e34626afad6ab6dab6a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e2ec8ca832f4a2e54f9eaf2a285cf4c11628014", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e2ec8ca832f4a2e54f9eaf2a285cf4c11628014", "html_url": "https://github.com/rust-lang/rust/commit/0e2ec8ca832f4a2e54f9eaf2a285cf4c11628014", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e2ec8ca832f4a2e54f9eaf2a285cf4c11628014/comments", "author": {"login": "kanru", "id": 17571, "node_id": "MDQ6VXNlcjE3NTcx", "avatar_url": "https://avatars.githubusercontent.com/u/17571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kanru", "html_url": "https://github.com/kanru", "followers_url": "https://api.github.com/users/kanru/followers", "following_url": "https://api.github.com/users/kanru/following{/other_user}", "gists_url": "https://api.github.com/users/kanru/gists{/gist_id}", "starred_url": "https://api.github.com/users/kanru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kanru/subscriptions", "organizations_url": "https://api.github.com/users/kanru/orgs", "repos_url": "https://api.github.com/users/kanru/repos", "events_url": "https://api.github.com/users/kanru/events{/privacy}", "received_events_url": "https://api.github.com/users/kanru/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kanru", "id": 17571, "node_id": "MDQ6VXNlcjE3NTcx", "avatar_url": "https://avatars.githubusercontent.com/u/17571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kanru", "html_url": "https://github.com/kanru", "followers_url": "https://api.github.com/users/kanru/followers", "following_url": "https://api.github.com/users/kanru/following{/other_user}", "gists_url": "https://api.github.com/users/kanru/gists{/gist_id}", "starred_url": "https://api.github.com/users/kanru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kanru/subscriptions", "organizations_url": "https://api.github.com/users/kanru/orgs", "repos_url": "https://api.github.com/users/kanru/repos", "events_url": "https://api.github.com/users/kanru/events{/privacy}", "received_events_url": "https://api.github.com/users/kanru/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "304aca409d95b0563f4552d01328e6dc35581890", "url": "https://api.github.com/repos/rust-lang/rust/commits/304aca409d95b0563f4552d01328e6dc35581890", "html_url": "https://github.com/rust-lang/rust/commit/304aca409d95b0563f4552d01328e6dc35581890"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "9dcf74bd712d3f2e3acf82abcea5607c5f554892", "filename": "src/librustc_expand/expand.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0e2ec8ca832f4a2e54f9eaf2a285cf4c11628014/src%2Flibrustc_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e2ec8ca832f4a2e54f9eaf2a285cf4c11628014/src%2Flibrustc_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fexpand.rs?ref=0e2ec8ca832f4a2e54f9eaf2a285cf4c11628014", "patch": "@@ -17,6 +17,7 @@ use rustc_ast::visit::{self, AssocCtxt, Visitor};\n use rustc_ast_pretty::pprust;\n use rustc_attr::{self as attr, is_builtin_attr, HasAttrs};\n use rustc_data_structures::map_in_place::MapInPlace;\n+use rustc_data_structures::stack::ensure_sufficient_stack;\n use rustc_errors::{Applicability, PResult};\n use rustc_feature::Features;\n use rustc_parse::parser::Parser;\n@@ -1165,7 +1166,7 @@ impl<'a, 'b> MutVisitor for InvocationCollector<'a, 'b> {\n                 self.check_attributes(&expr.attrs);\n                 self.collect_bang(mac, expr.span, AstFragmentKind::Expr).make_expr().into_inner()\n             } else {\n-                noop_visit_expr(&mut expr, self);\n+                ensure_sufficient_stack(|| noop_visit_expr(&mut expr, self));\n                 expr\n             }\n         });"}]}