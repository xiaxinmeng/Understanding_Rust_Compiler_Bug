{"sha": "569e542f9f8792268ce02fc1ad7c00b449b965dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2OWU1NDJmOWY4NzkyMjY4Y2UwMmZjMWFkN2MwMGI0NDliOTY1ZGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-08T07:01:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-08T07:01:30Z"}, "message": "Auto merge of #80756 - sunfishcode:path-cleanup/rustc-incremental, r=nagisa\n\nOptimize away some `fs::metadata` calls.\n\nThis also eliminates a use of a `Path` convenience function, in support\nof #80741, refactoring `std::path` to focus on pure data structures and\nalgorithms.", "tree": {"sha": "12eab536aa9dff10781dd03199a238e246d8c505", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12eab536aa9dff10781dd03199a238e246d8c505"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/569e542f9f8792268ce02fc1ad7c00b449b965dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/569e542f9f8792268ce02fc1ad7c00b449b965dc", "html_url": "https://github.com/rust-lang/rust/commit/569e542f9f8792268ce02fc1ad7c00b449b965dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/569e542f9f8792268ce02fc1ad7c00b449b965dc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9155a9dae522bbedd42b4a11366d8157da0614ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/9155a9dae522bbedd42b4a11366d8157da0614ec", "html_url": "https://github.com/rust-lang/rust/commit/9155a9dae522bbedd42b4a11366d8157da0614ec"}, {"sha": "304643c00da836b00e1b2eaa152d1c52b7778a8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/304643c00da836b00e1b2eaa152d1c52b7778a8a", "html_url": "https://github.com/rust-lang/rust/commit/304643c00da836b00e1b2eaa152d1c52b7778a8a"}], "stats": {"total": 66, "additions": 34, "deletions": 32}, "files": [{"sha": "c86122f89392d89d3bdf9dd6f48879da8bb478b9", "filename": "compiler/rustc_incremental/src/persist/file_format.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/569e542f9f8792268ce02fc1ad7c00b449b965dc/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Ffile_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569e542f9f8792268ce02fc1ad7c00b449b965dc/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Ffile_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Ffile_format.rs?ref=569e542f9f8792268ce02fc1ad7c00b449b965dc", "patch": "@@ -52,11 +52,11 @@ pub fn read_file(\n     path: &Path,\n     nightly_build: bool,\n ) -> io::Result<Option<(Vec<u8>, usize)>> {\n-    if !path.exists() {\n-        return Ok(None);\n-    }\n-\n-    let data = fs::read(path)?;\n+    let data = match fs::read(path) {\n+        Ok(data) => data,\n+        Err(err) if err.kind() == io::ErrorKind::NotFound => return Ok(None),\n+        Err(err) => return Err(err),\n+    };\n \n     let mut file = io::Cursor::new(data);\n "}, {"sha": "7a1976bed4b3baed456375a50f5f64c1531f22b5", "filename": "compiler/rustc_incremental/src/persist/fs.rs", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/569e542f9f8792268ce02fc1ad7c00b449b965dc/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569e542f9f8792268ce02fc1ad7c00b449b965dc/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Ffs.rs?ref=569e542f9f8792268ce02fc1ad7c00b449b965dc", "patch": "@@ -922,22 +922,24 @@ fn all_except_most_recent(\n /// before passing it to std::fs::remove_dir_all(). This will convert the path\n /// into the '\\\\?\\' format, which supports much longer paths.\n fn safe_remove_dir_all(p: &Path) -> io::Result<()> {\n-    if p.exists() {\n-        let canonicalized = p.canonicalize()?;\n-        std_fs::remove_dir_all(canonicalized)\n-    } else {\n-        Ok(())\n-    }\n+    let canonicalized = match std_fs::canonicalize(p) {\n+        Ok(canonicalized) => canonicalized,\n+        Err(err) if err.kind() == io::ErrorKind::NotFound => return Ok(()),\n+        Err(err) => return Err(err),\n+    };\n+\n+    std_fs::remove_dir_all(canonicalized)\n }\n \n fn safe_remove_file(p: &Path) -> io::Result<()> {\n-    if p.exists() {\n-        let canonicalized = p.canonicalize()?;\n-        match std_fs::remove_file(canonicalized) {\n-            Err(ref err) if err.kind() == io::ErrorKind::NotFound => Ok(()),\n-            result => result,\n-        }\n-    } else {\n-        Ok(())\n+    let canonicalized = match std_fs::canonicalize(p) {\n+        Ok(canonicalized) => canonicalized,\n+        Err(err) if err.kind() == io::ErrorKind::NotFound => return Ok(()),\n+        Err(err) => return Err(err),\n+    };\n+\n+    match std_fs::remove_file(canonicalized) {\n+        Err(err) if err.kind() == io::ErrorKind::NotFound => Ok(()),\n+        result => result,\n     }\n }"}, {"sha": "2169f5a89e18b7430458d1eccd5b7c3bfcf43f35", "filename": "compiler/rustc_incremental/src/persist/save.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/569e542f9f8792268ce02fc1ad7c00b449b965dc/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fsave.rs", "raw_url": "https://github.com/rust-lang/rust/raw/569e542f9f8792268ce02fc1ad7c00b449b965dc/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fsave.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fsave.rs?ref=569e542f9f8792268ce02fc1ad7c00b449b965dc", "patch": "@@ -6,6 +6,7 @@ use rustc_serialize::opaque::Encoder;\n use rustc_serialize::Encodable as RustcEncodable;\n use rustc_session::Session;\n use std::fs;\n+use std::io;\n use std::path::PathBuf;\n \n use super::data::*;\n@@ -101,19 +102,18 @@ where\n     // Note: It's important that we actually delete the old file and not just\n     // truncate and overwrite it, since it might be a shared hard-link, the\n     // underlying data of which we don't want to modify\n-    if path_buf.exists() {\n-        match fs::remove_file(&path_buf) {\n-            Ok(()) => {\n-                debug!(\"save: remove old file\");\n-            }\n-            Err(err) => {\n-                sess.err(&format!(\n-                    \"unable to delete old dep-graph at `{}`: {}\",\n-                    path_buf.display(),\n-                    err\n-                ));\n-                return;\n-            }\n+    match fs::remove_file(&path_buf) {\n+        Ok(()) => {\n+            debug!(\"save: remove old file\");\n+        }\n+        Err(err) if err.kind() == io::ErrorKind::NotFound => (),\n+        Err(err) => {\n+            sess.err(&format!(\n+                \"unable to delete old dep-graph at `{}`: {}\",\n+                path_buf.display(),\n+                err\n+            ));\n+            return;\n         }\n     }\n "}]}