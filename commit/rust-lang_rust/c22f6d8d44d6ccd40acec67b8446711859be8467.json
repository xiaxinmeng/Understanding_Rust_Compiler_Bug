{"sha": "c22f6d8d44d6ccd40acec67b8446711859be8467", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMmY2ZDhkNDRkNmNjZDQwYWNlYzY3Yjg0NDY3MTE4NTliZTg0Njc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-04T05:11:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-04T05:11:26Z"}, "message": "auto merge of #10785 : alexcrichton/rust/omg-i-hate-windows, r=pcwalton\n\nTurns out LLVM only builds libfoo.a libraries, so we're going to need this logic\r\nto statically link librustc", "tree": {"sha": "c9ee5c141e9c9a7b185285381f48d91a8ce4c0e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9ee5c141e9c9a7b185285381f48d91a8ce4c0e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c22f6d8d44d6ccd40acec67b8446711859be8467", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c22f6d8d44d6ccd40acec67b8446711859be8467", "html_url": "https://github.com/rust-lang/rust/commit/c22f6d8d44d6ccd40acec67b8446711859be8467", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c22f6d8d44d6ccd40acec67b8446711859be8467/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50e9d4f8899ab2c783e2889a019c5a9f8f95f2f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/50e9d4f8899ab2c783e2889a019c5a9f8f95f2f9", "html_url": "https://github.com/rust-lang/rust/commit/50e9d4f8899ab2c783e2889a019c5a9f8f95f2f9"}, {"sha": "cb823b09dfc2ca71bda66e874c5e450038fbec1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb823b09dfc2ca71bda66e874c5e450038fbec1d", "html_url": "https://github.com/rust-lang/rust/commit/cb823b09dfc2ca71bda66e874c5e450038fbec1d"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "4711381a7b8518207ea2168f7fb04c3fd3d9b89e", "filename": "src/librustc/back/archive.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c22f6d8d44d6ccd40acec67b8446711859be8467/src%2Flibrustc%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22f6d8d44d6ccd40acec67b8446711859be8467/src%2Flibrustc%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Farchive.rs?ref=c22f6d8d44d6ccd40acec67b8446711859be8467", "patch": "@@ -119,18 +119,25 @@ impl Archive {\n     }\n \n     fn find_library(&self, name: &str) -> Path {\n-        let (prefix, ext) = match self.sess.targ_cfg.os {\n+        let (osprefix, osext) = match self.sess.targ_cfg.os {\n             abi::OsWin32 => (\"\", \"lib\"), _ => (\"lib\", \"a\"),\n         };\n-        let libname = format!(\"{}{}.{}\", prefix, name, ext);\n+        // On windows, static libraries sometimes show up as libfoo.a and other\n+        // times show up as foo.lib\n+        let oslibname = format!(\"{}{}.{}\", osprefix, name, osext);\n+        let unixlibname = format!(\"lib{}.a\", name);\n \n         let mut rustpath = filesearch::rust_path();\n         rustpath.push(self.sess.filesearch.get_target_lib_path());\n         let path = self.sess.opts.addl_lib_search_paths.iter();\n         for path in path.chain(rustpath.iter()) {\n             debug!(\"looking for {} inside {}\", name, path.display());\n-            let test = path.join(libname.clone());\n+            let test = path.join(oslibname.as_slice());\n             if test.exists() { return test }\n+            if oslibname != unixlibname {\n+                let test = path.join(unixlibname.as_slice());\n+                if test.exists() { return test }\n+            }\n         }\n         self.sess.fatal(format!(\"could not find native static library `{}`, \\\n                                  perhaps an -L flag is missing?\", name));"}]}