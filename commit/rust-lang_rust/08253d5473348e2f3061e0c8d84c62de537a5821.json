{"sha": "08253d5473348e2f3061e0c8d84c62de537a5821", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4MjUzZDU0NzMzNDhlMmYzMDYxZTBjOGQ4NGM2MmRlNTM3YTU4MjE=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-25T18:15:39Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-25T18:15:39Z"}, "message": "Traverse parent DefMap for `super` paths", "tree": {"sha": "06981374f0c397b45e31b74c97ed337853fe59d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06981374f0c397b45e31b74c97ed337853fe59d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08253d5473348e2f3061e0c8d84c62de537a5821", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08253d5473348e2f3061e0c8d84c62de537a5821", "html_url": "https://github.com/rust-lang/rust/commit/08253d5473348e2f3061e0c8d84c62de537a5821", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08253d5473348e2f3061e0c8d84c62de537a5821/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98a88ebb9ec46ed69dc7a3dbdc53a62ab9c1d14a", "url": "https://api.github.com/repos/rust-lang/rust/commits/98a88ebb9ec46ed69dc7a3dbdc53a62ab9c1d14a", "html_url": "https://github.com/rust-lang/rust/commit/98a88ebb9ec46ed69dc7a3dbdc53a62ab9c1d14a"}], "stats": {"total": 63, "additions": 54, "deletions": 9}, "files": [{"sha": "419e465ed8fb27cb83b960db0739e205ed581c29", "filename": "crates/hir_def/src/nameres/path_resolution.rs", "status": "modified", "additions": 28, "deletions": 9, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/08253d5473348e2f3061e0c8d84c62de537a5821/crates%2Fhir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08253d5473348e2f3061e0c8d84c62de537a5821/crates%2Fhir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs?ref=08253d5473348e2f3061e0c8d84c62de537a5821", "patch": "@@ -10,8 +10,6 @@\n //!\n //! `ReachedFixedPoint` signals about this.\n \n-use std::iter::successors;\n-\n use base_db::Edition;\n use hir_expand::name;\n use hir_expand::name::Name;\n@@ -193,14 +191,35 @@ impl DefMap {\n                 self.resolve_name_in_module(db, original_module, &segment, prefer_module)\n             }\n             PathKind::Super(lvl) => {\n-                let m = successors(Some(original_module), |m| self.modules[*m].parent)\n-                    .nth(lvl as usize);\n-                if let Some(local_id) = m {\n-                    PerNs::types(self.module_id(local_id).into(), Visibility::Public)\n-                } else {\n-                    log::debug!(\"super path in root module\");\n-                    return ResolvePathResult::empty(ReachedFixedPoint::Yes);\n+                let mut module = original_module;\n+                for i in 0..lvl {\n+                    match self.modules[module].parent {\n+                        Some(it) => module = it,\n+                        None => match &self.block {\n+                            Some(block) => {\n+                                // Look up remaining path in parent `DefMap`\n+                                let new_path = ModPath {\n+                                    kind: PathKind::Super(lvl - i),\n+                                    segments: path.segments.clone(),\n+                                };\n+                                log::debug!(\"`super` path: {} -> {} in parent map\", path, new_path);\n+                                return block.parent.resolve_path_fp_with_macro(\n+                                    db,\n+                                    mode,\n+                                    block.parent_module,\n+                                    &new_path,\n+                                    shadow,\n+                                );\n+                            }\n+                            None => {\n+                                log::debug!(\"super path in root module\");\n+                                return ResolvePathResult::empty(ReachedFixedPoint::Yes);\n+                            }\n+                        },\n+                    }\n                 }\n+\n+                PerNs::types(self.module_id(module).into(), Visibility::Public)\n             }\n             PathKind::Abs => {\n                 // 2018-style absolute path -- only extern prelude"}, {"sha": "470ca593e199f5e9369394d2ea0e382ea0b5ed54", "filename": "crates/hir_def/src/nameres/tests/block.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/08253d5473348e2f3061e0c8d84c62de537a5821/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08253d5473348e2f3061e0c8d84c62de537a5821/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fblock.rs?ref=08253d5473348e2f3061e0c8d84c62de537a5821", "patch": "@@ -95,3 +95,29 @@ fn outer() {\n         \"#]],\n     );\n }\n+\n+#[test]\n+fn super_imports() {\n+    check_at(\n+        r#\"\n+mod module {\n+    fn f() {\n+        use super::Struct;\n+        $0\n+    }\n+}\n+\n+struct Struct {}\n+\"#,\n+        expect![[r#\"\n+            block scope\n+            Struct: t\n+            crate\n+            Struct: t\n+            module: t\n+\n+            crate::module\n+            f: v\n+        \"#]],\n+    );\n+}"}]}