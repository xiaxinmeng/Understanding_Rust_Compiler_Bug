{"sha": "d3b41497fedc3362144aa3967b05987e278c376a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYjQxNDk3ZmVkYzMzNjIxNDRhYTM5NjdiMDU5ODdlMjc4YzM3NmE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-18T22:45:07Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-18T22:45:07Z"}, "message": "Also apply panic_fmt lint suggestions to debug_assert!().", "tree": {"sha": "0322e96d08376809814c606ac8dde2ba64ad29a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0322e96d08376809814c606ac8dde2ba64ad29a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3b41497fedc3362144aa3967b05987e278c376a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3b41497fedc3362144aa3967b05987e278c376a", "html_url": "https://github.com/rust-lang/rust/commit/d3b41497fedc3362144aa3967b05987e278c376a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3b41497fedc3362144aa3967b05987e278c376a/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a9330c7ef1c4eb99e8143c7a586b1649ede85b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a9330c7ef1c4eb99e8143c7a586b1649ede85b8", "html_url": "https://github.com/rust-lang/rust/commit/0a9330c7ef1c4eb99e8143c7a586b1649ede85b8"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "05bc272d0e0a077b026858a1d1275724d490e6a2", "filename": "compiler/rustc_lint/src/panic_fmt.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d3b41497fedc3362144aa3967b05987e278c376a/compiler%2Frustc_lint%2Fsrc%2Fpanic_fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b41497fedc3362144aa3967b05987e278c376a/compiler%2Frustc_lint%2Fsrc%2Fpanic_fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fpanic_fmt.rs?ref=d3b41497fedc3362144aa3967b05987e278c376a", "patch": "@@ -47,7 +47,7 @@ impl<'tcx> LateLintPass<'tcx> for PanicFmt {\n fn check_panic<'tcx>(cx: &LateContext<'tcx>, f: &'tcx hir::Expr<'tcx>, arg: &'tcx hir::Expr<'tcx>) {\n     if let hir::ExprKind::Lit(lit) = &arg.kind {\n         if let ast::LitKind::Str(sym, _) = lit.node {\n-            let expn = f.span.ctxt().outer_expn_data();\n+            let mut expn = f.span.ctxt().outer_expn_data();\n             if let Some(id) = expn.macro_def_id {\n                 if cx.tcx.is_diagnostic_item(sym::std_panic_macro, id)\n                     || cx.tcx.is_diagnostic_item(sym::core_panic_macro, id)\n@@ -59,19 +59,17 @@ fn check_panic<'tcx>(cx: &LateContext<'tcx>, f: &'tcx hir::Expr<'tcx>, arg: &'tc\n                     let s = s.replace(\"{{\", \"\").replace(\"}}\", \"\");\n                     let looks_like_placeholder =\n                         s.find('{').map_or(false, |i| s[i + 1..].contains('}'));\n-                    let expn = {\n-                        // Unwrap another level of macro expansion if this\n-                        // panic!() was expanded from assert!().\n+                    // Unwrap another level of macro expansion if this panic!()\n+                    // was expanded from assert!() or debug_assert!().\n+                    for &assert in &[sym::assert_macro, sym::debug_assert_macro] {\n                         let parent = expn.call_site.ctxt().outer_expn_data();\n                         if parent\n                             .macro_def_id\n-                            .map_or(false, |id| cx.tcx.is_diagnostic_item(sym::assert_macro, id))\n+                            .map_or(false, |id| cx.tcx.is_diagnostic_item(assert, id))\n                         {\n-                            parent\n-                        } else {\n-                            expn\n+                            expn = parent;\n                         }\n-                    };\n+                    }\n                     if looks_like_placeholder {\n                         cx.struct_span_lint(PANIC_FMT, arg.span.source_callsite(), |lint| {\n                             let mut l = lint.build(\"Panic message contains an unused formatting placeholder\");"}, {"sha": "338ff005995d5279d8206ec361db218ee6e611cb", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d3b41497fedc3362144aa3967b05987e278c376a/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b41497fedc3362144aa3967b05987e278c376a/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=d3b41497fedc3362144aa3967b05987e278c376a", "patch": "@@ -418,6 +418,7 @@ symbols! {\n         dead_code,\n         dealloc,\n         debug,\n+        debug_assert_macro,\n         debug_assertions,\n         debug_struct,\n         debug_trait,"}, {"sha": "0416a7614a3f6830ed8395efd19bbe98116d749e", "filename": "library/core/src/macros/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d3b41497fedc3362144aa3967b05987e278c376a/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b41497fedc3362144aa3967b05987e278c376a/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs?ref=d3b41497fedc3362144aa3967b05987e278c376a", "patch": "@@ -163,6 +163,7 @@ macro_rules! assert_ne {\n /// ```\n #[macro_export]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[cfg_attr(not(bootstrap), rustc_diagnostic_item = \"debug_assert_macro\")]\n macro_rules! debug_assert {\n     ($($arg:tt)*) => (if $crate::cfg!(debug_assertions) { $crate::assert!($($arg)*); })\n }"}, {"sha": "d6bb3222ac7e838196afa81019a4a3882a2d3834", "filename": "src/test/ui/panic-brace.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d3b41497fedc3362144aa3967b05987e278c376a/src%2Ftest%2Fui%2Fpanic-brace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b41497fedc3362144aa3967b05987e278c376a/src%2Ftest%2Fui%2Fpanic-brace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-brace.rs?ref=d3b41497fedc3362144aa3967b05987e278c376a", "patch": "@@ -6,4 +6,5 @@ fn main() {\n     std::panic!(\"another one: }\"); //~ WARN Panic message contains a brace\n     core::panic!(\"Hello {}\"); //~ WARN Panic message contains an unused formatting placeholder\n     assert!(false, \"{:03x} bla\"); //~ WARN Panic message contains an unused formatting placeholder\n+    debug_assert!(false, \"{{}} bla\"); //~ WARN Panic message contains a brace\n }"}, {"sha": "578731896ba5f6d1926248a929a7138a09635d03", "filename": "src/test/ui/panic-brace.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d3b41497fedc3362144aa3967b05987e278c376a/src%2Ftest%2Fui%2Fpanic-brace.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3b41497fedc3362144aa3967b05987e278c376a/src%2Ftest%2Fui%2Fpanic-brace.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-brace.stderr?ref=d3b41497fedc3362144aa3967b05987e278c376a", "patch": "@@ -55,5 +55,17 @@ help: or add a \"{}\" format string to use the message literally\n LL |     assert!(false, \"{}\", \"{:03x} bla\");\n    |                    ^^^^^\n \n-warning: 4 warnings emitted\n+warning: Panic message contains a brace\n+  --> $DIR/panic-brace.rs:9:5\n+   |\n+LL |     debug_assert!(false, \"{{}} bla\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: This message is not used as a format string, but will be in a future Rust version\n+help: add a \"{}\" format string to use the message literally\n+   |\n+LL |     debug_assert!(false, \"{}\", \"{{}} bla\");\n+   |                          ^^^^^\n+\n+warning: 5 warnings emitted\n "}]}