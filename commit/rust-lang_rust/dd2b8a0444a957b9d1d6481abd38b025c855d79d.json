{"sha": "dd2b8a0444a957b9d1d6481abd38b025c855d79d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkMmI4YTA0NDRhOTU3YjlkMWQ2NDgxYWJkMzhiMDI1Yzg1NWQ3OWQ=", "commit": {"author": {"name": "Vlad Frolov", "email": "frolvlad@gmail.com", "date": "2021-03-13T15:21:56Z"}, "committer": {"name": "Vlad Frolov", "email": "frolvlad@gmail.com", "date": "2021-03-13T15:21:56Z"}, "message": "provide a more realistic example for BinaryHeap::as_slice", "tree": {"sha": "19c86fe3ea89f4f3fc2bf1893b04323328cf7b2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19c86fe3ea89f4f3fc2bf1893b04323328cf7b2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd2b8a0444a957b9d1d6481abd38b025c855d79d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd2b8a0444a957b9d1d6481abd38b025c855d79d", "html_url": "https://github.com/rust-lang/rust/commit/dd2b8a0444a957b9d1d6481abd38b025c855d79d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd2b8a0444a957b9d1d6481abd38b025c855d79d/comments", "author": {"login": "frol", "id": 304265, "node_id": "MDQ6VXNlcjMwNDI2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/304265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frol", "html_url": "https://github.com/frol", "followers_url": "https://api.github.com/users/frol/followers", "following_url": "https://api.github.com/users/frol/following{/other_user}", "gists_url": "https://api.github.com/users/frol/gists{/gist_id}", "starred_url": "https://api.github.com/users/frol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frol/subscriptions", "organizations_url": "https://api.github.com/users/frol/orgs", "repos_url": "https://api.github.com/users/frol/repos", "events_url": "https://api.github.com/users/frol/events{/privacy}", "received_events_url": "https://api.github.com/users/frol/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frol", "id": 304265, "node_id": "MDQ6VXNlcjMwNDI2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/304265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frol", "html_url": "https://github.com/frol", "followers_url": "https://api.github.com/users/frol/followers", "following_url": "https://api.github.com/users/frol/following{/other_user}", "gists_url": "https://api.github.com/users/frol/gists{/gist_id}", "starred_url": "https://api.github.com/users/frol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frol/subscriptions", "organizations_url": "https://api.github.com/users/frol/orgs", "repos_url": "https://api.github.com/users/frol/repos", "events_url": "https://api.github.com/users/frol/events{/privacy}", "received_events_url": "https://api.github.com/users/frol/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6233f3f4a391b9ef562e77dc4fb857ffaa4ca410", "url": "https://api.github.com/repos/rust-lang/rust/commits/6233f3f4a391b9ef562e77dc4fb857ffaa4ca410", "html_url": "https://github.com/rust-lang/rust/commit/6233f3f4a391b9ef562e77dc4fb857ffaa4ca410"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "ed32ff496c65a77020959213880fc4ca636f9613", "filename": "library/alloc/src/collections/binary_heap.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dd2b8a0444a957b9d1d6481abd38b025c855d79d/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd2b8a0444a957b9d1d6481abd38b025c855d79d/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs?ref=dd2b8a0444a957b9d1d6481abd38b025c855d79d", "patch": "@@ -899,13 +899,11 @@ impl<T> BinaryHeap<T> {\n     /// ```\n     /// #![feature(binary_heap_as_slice)]\n     /// use std::collections::BinaryHeap;\n+    /// use std::io::{self, Write};\n+    ///\n     /// let heap = BinaryHeap::from(vec![1, 2, 3, 4, 5, 6, 7]);\n-    /// let slice = heap.as_slice();\n     ///\n-    /// // Will print in some order\n-    /// for x in slice {\n-    ///     println!(\"{}\", x);\n-    /// }\n+    /// io::sink().write(heap.as_slice()).unwrap();\n     /// ```\n     #[unstable(feature = \"binary_heap_as_slice\", issue = \"82331\")]\n     pub fn as_slice(&self) -> &[T] {"}]}