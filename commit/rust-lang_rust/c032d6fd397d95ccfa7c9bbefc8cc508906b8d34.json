{"sha": "c032d6fd397d95ccfa7c9bbefc8cc508906b8d34", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMzJkNmZkMzk3ZDk1Y2NmYTdjOWJiZWZjOGNjNTA4OTA2YjhkMzQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-06-11T01:43:08Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-06-17T16:07:16Z"}, "message": "std: Stabilize the sync_poison feature\n\nThese accessor/constructor methods for a `PoisonError` are quite standard for a\nwrapper type and enable manipulation of the underlying type.", "tree": {"sha": "21818c91cbba8c79903905004bee460df24f7f9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21818c91cbba8c79903905004bee460df24f7f9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c032d6fd397d95ccfa7c9bbefc8cc508906b8d34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c032d6fd397d95ccfa7c9bbefc8cc508906b8d34", "html_url": "https://github.com/rust-lang/rust/commit/c032d6fd397d95ccfa7c9bbefc8cc508906b8d34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c032d6fd397d95ccfa7c9bbefc8cc508906b8d34/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68b628b165c91e6abe1bccf9d94eb7c7ef7cdda3", "url": "https://api.github.com/repos/rust-lang/rust/commits/68b628b165c91e6abe1bccf9d94eb7c7ef7cdda3", "html_url": "https://github.com/rust-lang/rust/commit/68b628b165c91e6abe1bccf9d94eb7c7ef7cdda3"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "64a5027cc8937d307554a0aa5be2970091587822", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c032d6fd397d95ccfa7c9bbefc8cc508906b8d34/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c032d6fd397d95ccfa7c9bbefc8cc508906b8d34/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=c032d6fd397d95ccfa7c9bbefc8cc508906b8d34", "patch": "@@ -238,7 +238,7 @@ impl<T: ?Sized> Mutex<T> {\n     /// time.  You should not trust a `false` value for program correctness\n     /// without additional synchronization.\n     #[inline]\n-    #[unstable(feature = \"sync_poison\")]\n+    #[stable(feature = \"sync_poison\", since = \"1.2.0\")]\n     pub fn is_poisoned(&self) -> bool {\n         self.inner.poison.get()\n     }"}, {"sha": "4ca2e282f707dc1d7429ef32e5a254c1708d5950", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c032d6fd397d95ccfa7c9bbefc8cc508906b8d34/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c032d6fd397d95ccfa7c9bbefc8cc508906b8d34/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=c032d6fd397d95ccfa7c9bbefc8cc508906b8d34", "patch": "@@ -253,7 +253,7 @@ impl<T: ?Sized> RwLock<T> {\n     /// time.  You should not trust a `false` value for program correctness\n     /// without additional synchronization.\n     #[inline]\n-    #[unstable(feature = \"sync_poison\")]\n+    #[stable(feature = \"sync_poison\", since = \"1.2.0\")]\n     pub fn is_poisoned(&self) -> bool {\n         self.inner.poison.get()\n     }"}, {"sha": "065b1d6c9acfc1b40bdd382a20e5eee214c10cfc", "filename": "src/libstd/sys/common/poison.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c032d6fd397d95ccfa7c9bbefc8cc508906b8d34/src%2Flibstd%2Fsys%2Fcommon%2Fpoison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c032d6fd397d95ccfa7c9bbefc8cc508906b8d34/src%2Flibstd%2Fsys%2Fcommon%2Fpoison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fpoison.rs?ref=c032d6fd397d95ccfa7c9bbefc8cc508906b8d34", "patch": "@@ -120,24 +120,24 @@ impl<T: Send + Reflect> Error for PoisonError<T> {\n \n impl<T> PoisonError<T> {\n     /// Creates a `PoisonError`.\n-    #[unstable(feature = \"sync_poison\")]\n+    #[stable(feature = \"sync_poison\", since = \"1.2.0\")]\n     pub fn new(guard: T) -> PoisonError<T> {\n         PoisonError { guard: guard }\n     }\n \n     /// Consumes this error indicating that a lock is poisoned, returning the\n     /// underlying guard to allow access regardless.\n-    #[unstable(feature = \"sync_poison\")]\n+    #[stable(feature = \"sync_poison\", since = \"1.2.0\")]\n     pub fn into_inner(self) -> T { self.guard }\n \n     /// Reaches into this error indicating that a lock is poisoned, returning a\n     /// reference to the underlying guard to allow access regardless.\n-    #[unstable(feature = \"sync_poison\")]\n+    #[stable(feature = \"sync_poison\", since = \"1.2.0\")]\n     pub fn get_ref(&self) -> &T { &self.guard }\n \n     /// Reaches into this error indicating that a lock is poisoned, returning a\n     /// mutable reference to the underlying guard to allow access regardless.\n-    #[unstable(feature = \"sync_poi\")]\n+    #[stable(feature = \"sync_poison\", since = \"1.2.0\")]\n     pub fn get_mut(&mut self) -> &mut T { &mut self.guard }\n }\n "}]}