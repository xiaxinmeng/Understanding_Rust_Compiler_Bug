{"sha": "3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiOGM1MjhkMDgzYjJlMWY2YjM0ZWNlYjUxOGQ2MGM1ZWZkYjRlZjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-10-05T04:57:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-10-05T04:57:11Z"}, "message": "auto merge of #17776 : luqmana/rust/ul, r=alexcrichton\n\nUpdate our LLVM snapshot to master (as of ~ Wed Oct 1 18:49:58 2014 +0000). \r\n\r\nSince my patches have landed upstream this fixes #13429 and #7298.", "tree": {"sha": "0ffee9636a89d46fae239565cb8f17b648350faa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ffee9636a89d46fae239565cb8f17b648350faa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4", "html_url": "https://github.com/rust-lang/rust/commit/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "026206695af8355d0b52000ca0f491a1ab5b051d", "url": "https://api.github.com/repos/rust-lang/rust/commits/026206695af8355d0b52000ca0f491a1ab5b051d", "html_url": "https://github.com/rust-lang/rust/commit/026206695af8355d0b52000ca0f491a1ab5b051d"}, {"sha": "4b22178d325704d81522c15570498b7467b3152d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b22178d325704d81522c15570498b7467b3152d", "html_url": "https://github.com/rust-lang/rust/commit/4b22178d325704d81522c15570498b7467b3152d"}], "stats": {"total": 82, "additions": 61, "deletions": 21}, "files": [{"sha": "a12198b771b828f3efc44a3fbcd8167c535a8484", "filename": "mk/main.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4", "patch": "@@ -246,7 +246,7 @@ endif\n ######################################################################\n \n # FIXME: x86-ism\n-LLVM_COMPONENTS=x86 arm mips ipo bitreader bitwriter linker asmparser jit mcjit \\\n+LLVM_COMPONENTS=x86 arm mips ipo bitreader bitwriter linker asmparser mcjit \\\n                 interpreter instrumentation\n \n # Only build these LLVM tools"}, {"sha": "b24b9e0a4e7bbba05a4f5118cdb4f65df6a17e7e", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4", "patch": "@@ -3164,8 +3164,7 @@ fn populate_scope_map(cx: &CrateContext,\n                 parent_scope,\n                 file_metadata,\n                 loc.line as c_uint,\n-                loc.col.to_uint() as c_uint,\n-                0)\n+                loc.col.to_uint() as c_uint)\n         };\n \n         scope_stack.push(ScopeStackEntry { scope_metadata: scope_metadata,\n@@ -3290,8 +3289,7 @@ fn populate_scope_map(cx: &CrateContext,\n                                 parent_scope,\n                                 file_metadata,\n                                 loc.line as c_uint,\n-                                loc.col.to_uint() as c_uint,\n-                                0)\n+                                loc.col.to_uint() as c_uint)\n                         };\n \n                         scope_stack.push(ScopeStackEntry {"}, {"sha": "ad2b6891dc99e43ffdb6de4629939efd3646c201", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4", "patch": "@@ -1747,8 +1747,7 @@ extern {\n                                            Scope: DIDescriptor,\n                                            File: DIFile,\n                                            Line: c_uint,\n-                                           Col: c_uint,\n-                                           Discriminator: c_uint)\n+                                           Col: c_uint)\n                                            -> DILexicalBlock;\n \n     pub fn LLVMDIBuilderCreateStaticVariable(Builder: DIBuilderRef,\n@@ -2179,12 +2178,10 @@ pub unsafe fn static_link_hack_this_sucks() {\n \n     LLVMRustLinkInExternalBitcode(0 as *mut _, 0 as *const _, 0 as size_t);\n \n-    LLVMLinkInJIT();\n     LLVMLinkInMCJIT();\n     LLVMLinkInInterpreter();\n \n     extern {\n-        fn LLVMLinkInJIT();\n         fn LLVMLinkInMCJIT();\n         fn LLVMLinkInInterpreter();\n     }"}, {"sha": "c9b823739d1357a058e7437c00bec6d2d0b00ed6", "filename": "src/llvm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fllvm?ref=3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4", "patch": "@@ -1 +1 @@\n-Subproject commit e9d037419441d51ccb0f41aacbc64080b0c6e81b\n+Subproject commit c9b823739d1357a058e7437c00bec6d2d0b00ed6"}, {"sha": "eb074001d5854bf42e5d4d627a624f56b30196c2", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4", "patch": "@@ -118,7 +118,9 @@ LLVMRustAddAnalysisPasses(LLVMTargetMachineRef TM,\n                           LLVMPassManagerRef PMR,\n                           LLVMModuleRef M) {\n     PassManagerBase *PM = unwrap(PMR);\n-#if LLVM_VERSION_MINOR >= 5\n+#if LLVM_VERSION_MINOR >= 6\n+    PM->add(new DataLayoutPass());\n+#elif LLVM_VERSION_MINOR == 5\n     PM->add(new DataLayoutPass(unwrap(M)));\n #else\n     PM->add(new DataLayout(unwrap(M)));\n@@ -187,7 +189,12 @@ LLVMRustWriteOutputFile(LLVMTargetMachineRef Target,\n   PassManager *PM = unwrap<PassManager>(PMR);\n \n   std::string ErrorInfo;\n-#if LLVM_VERSION_MINOR >= 4\n+#if LLVM_VERSION_MINOR >= 6\n+  std::error_code EC;\n+  raw_fd_ostream OS(path, EC, sys::fs::F_None);\n+  if (EC)\n+    ErrorInfo = EC.message();\n+#elif LLVM_VERSION_MINOR >= 4\n   raw_fd_ostream OS(path, ErrorInfo, sys::fs::F_None);\n #else\n   raw_fd_ostream OS(path, ErrorInfo, raw_fd_ostream::F_Binary);\n@@ -210,7 +217,12 @@ LLVMRustPrintModule(LLVMPassManagerRef PMR,\n   PassManager *PM = unwrap<PassManager>(PMR);\n   std::string ErrorInfo;\n \n-#if LLVM_VERSION_MINOR >= 4\n+#if LLVM_VERSION_MINOR >= 6\n+  std::error_code EC;\n+  raw_fd_ostream OS(path, EC, sys::fs::F_None);\n+  if (EC)\n+    ErrorInfo = EC.message();\n+#elif LLVM_VERSION_MINOR >= 4\n   raw_fd_ostream OS(path, ErrorInfo, sys::fs::F_None);\n #else\n   raw_fd_ostream OS(path, ErrorInfo, raw_fd_ostream::F_Binary);"}, {"sha": "9fda05431db49639cf742bda554bf2c3d63d5f47", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 40, "deletions": 5, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4", "patch": "@@ -393,13 +393,12 @@ extern \"C\" LLVMValueRef LLVMDIBuilderCreateLexicalBlock(\n     LLVMValueRef Scope,\n     LLVMValueRef File,\n     unsigned Line,\n-    unsigned Col,\n-    unsigned Discriminator) {\n+    unsigned Col) {\n     return wrap(Builder->createLexicalBlock(\n         unwrapDI<DIDescriptor>(Scope),\n         unwrapDI<DIFile>(File), Line, Col\n-#if LLVM_VERSION_MINOR >= 5\n-        , Discriminator\n+#if LLVM_VERSION_MINOR == 5\n+        , 0\n #endif\n         ));\n }\n@@ -415,7 +414,11 @@ extern \"C\" LLVMValueRef LLVMDIBuilderCreateStaticVariable(\n     bool isLocalToUnit,\n     LLVMValueRef Val,\n     LLVMValueRef Decl = NULL) {\n+#if LLVM_VERSION_MINOR == 6\n+    return wrap(Builder->createGlobalVariable(unwrapDI<DIDescriptor>(Context),\n+#else\n     return wrap(Builder->createStaticVariable(unwrapDI<DIDescriptor>(Context),\n+#endif\n         Name,\n         LinkageName,\n         unwrapDI<DIFile>(File),\n@@ -665,11 +668,18 @@ extern \"C\" void LLVMWriteValueToString(LLVMValueRef Value, RustStringRef str) {\n extern \"C\" bool\n LLVMRustLinkInExternalBitcode(LLVMModuleRef dst, char *bc, size_t len) {\n     Module *Dst = unwrap(dst);\n+#if LLVM_VERSION_MINOR == 5\n     MemoryBuffer* buf = MemoryBuffer::getMemBufferCopy(StringRef(bc, len));\n     ErrorOr<Module *> Src = llvm::getLazyBitcodeModule(buf, Dst->getContext());\n+#else\n+    std::unique_ptr<MemoryBuffer> buf = MemoryBuffer::getMemBufferCopy(StringRef(bc, len));\n+    ErrorOr<Module *> Src = llvm::getLazyBitcodeModule(std::move(buf), Dst->getContext());\n+#endif\n     if (!Src) {\n         LLVMRustSetLastError(Src.getError().message().c_str());\n+#if LLVM_VERSION_MINOR == 5\n         delete buf;\n+#endif\n         return false;\n     }\n \n@@ -712,12 +722,26 @@ LLVMRustOpenArchive(char *path) {\n         return nullptr;\n     }\n \n+#if LLVM_VERSION_MINOR >= 6\n+    ErrorOr<std::unique_ptr<Archive>> archive_or =\n+        Archive::create(buf_or.get()->getMemBufferRef());\n+\n+    if (!archive_or) {\n+        LLVMRustSetLastError(archive_or.getError().message().c_str());\n+        return nullptr;\n+    }\n+\n+    OwningBinary<Archive> *ret = new OwningBinary<Archive>(\n+            std::move(archive_or.get()), std::move(buf_or.get()));\n+#else\n     std::error_code err;\n     Archive *ret = new Archive(std::move(buf_or.get()), err);\n     if (err) {\n         LLVMRustSetLastError(err.message().c_str());\n-        return NULL;\n+        return nullptr;\n     }\n+#endif\n+\n     return ret;\n }\n #else\n@@ -739,7 +763,14 @@ LLVMRustOpenArchive(char *path) {\n #endif\n \n extern \"C\" const char*\n+#if LLVM_VERSION_MINOR >= 6\n+LLVMRustArchiveReadSection(OwningBinary<Archive> *ob, char *name, size_t *size) {\n+\n+    std::unique_ptr<Archive> &ar = ob->getBinary();\n+#else\n LLVMRustArchiveReadSection(Archive *ar, char *name, size_t *size) {\n+#endif\n+\n #if LLVM_VERSION_MINOR >= 5\n     Archive::child_iterator child = ar->child_begin(),\n                               end = ar->child_end();\n@@ -765,7 +796,11 @@ LLVMRustArchiveReadSection(Archive *ar, char *name, size_t *size) {\n }\n \n extern \"C\" void\n+#if LLVM_VERSION_MINOR >= 6\n+LLVMRustDestroyArchive(OwningBinary<Archive> *ar) {\n+#else\n LLVMRustDestroyArchive(Archive *ar) {\n+#endif\n     delete ar;\n }\n "}, {"sha": "40beb564f7c72bf730b6d4bbb58ace80a2c32054", "filename": "src/rustllvm/llvm-auto-clean-trigger", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4/src%2Frustllvm%2Fllvm-auto-clean-trigger", "raw_url": "https://github.com/rust-lang/rust/raw/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4/src%2Frustllvm%2Fllvm-auto-clean-trigger", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Fllvm-auto-clean-trigger?ref=3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4", "patch": "@@ -1,4 +1,4 @@\n # If this file is modified, then llvm will be forcibly cleaned and then rebuilt.\n # The actual contents of this file do not matter, but to trigger a change on the\n # build bots then the contents should be changed so git updates the mtime.\n-2014-09-08\n+2014-10-04"}, {"sha": "2b324a378650fc3b59ce573db561edfd527ee92c", "filename": "src/rustllvm/rustllvm.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4/src%2Frustllvm%2Frustllvm.h", "raw_url": "https://github.com/rust-lang/rust/raw/3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4/src%2Frustllvm%2Frustllvm.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Frustllvm.h?ref=3b8c528d083b2e1f6b34eceb518d60c5efdb4ef4", "patch": "@@ -32,8 +32,6 @@\n #include \"llvm/Support/DynamicLibrary.h\"\n #include \"llvm/Support/Memory.h\"\n #include \"llvm/ExecutionEngine/ExecutionEngine.h\"\n-#include \"llvm/ExecutionEngine/JIT.h\"\n-#include \"llvm/ExecutionEngine/JITMemoryManager.h\"\n #include \"llvm/ExecutionEngine/MCJIT.h\"\n #include \"llvm/ExecutionEngine/Interpreter.h\"\n #include \"llvm/Target/TargetMachine.h\""}]}