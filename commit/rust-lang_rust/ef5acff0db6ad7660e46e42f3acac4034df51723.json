{"sha": "ef5acff0db6ad7660e46e42f3acac4034df51723", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmNWFjZmYwZGI2YWQ3NjYwZTQ2ZTQyZjNhY2FjNDAzNGRmNTE3MjM=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2014-11-19T19:17:10Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2014-11-19T19:17:10Z"}, "message": "Fix some English spelling errors", "tree": {"sha": "4d8be3b27850cf0a441e0c139ec82fdf888c3752", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d8be3b27850cf0a441e0c139ec82fdf888c3752"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef5acff0db6ad7660e46e42f3acac4034df51723", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef5acff0db6ad7660e46e42f3acac4034df51723", "html_url": "https://github.com/rust-lang/rust/commit/ef5acff0db6ad7660e46e42f3acac4034df51723", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef5acff0db6ad7660e46e42f3acac4034df51723/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8a5242195c7e8734c6726494e9b230916b61783", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8a5242195c7e8734c6726494e9b230916b61783", "html_url": "https://github.com/rust-lang/rust/commit/d8a5242195c7e8734c6726494e9b230916b61783"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "a50a18eab30f049f96d5d3e3e4088c2ff6c57d47", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ef5acff0db6ad7660e46e42f3acac4034df51723/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef5acff0db6ad7660e46e42f3acac4034df51723/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=ef5acff0db6ad7660e46e42f3acac4034df51723", "patch": "@@ -956,12 +956,12 @@ impl Json {\n         }\n     }\n \n-    /// Returns true if the Json value is a Array. Returns false otherwise.\n+    /// Returns true if the Json value is an Array. Returns false otherwise.\n     pub fn is_array<'a>(&'a self) -> bool {\n         self.as_array().is_some()\n     }\n \n-    /// If the Json value is a Array, returns the associated vector.\n+    /// If the Json value is an Array, returns the associated vector.\n     /// Returns None otherwise.\n     pub fn as_array<'a>(&'a self) -> Option<&'a JsonArray> {\n         match self {\n@@ -1109,9 +1109,9 @@ pub enum JsonEvent {\n \n #[deriving(PartialEq, Show)]\n enum ParserState {\n-    // Parse a value in a array, true means first element.\n+    // Parse a value in an array, true means first element.\n     ParseArray(bool),\n-    // Parse ',' or ']' after an element in a array.\n+    // Parse ',' or ']' after an element in an array.\n     ParseArrayComma,\n     // Parse a key:value in an object, true means first element.\n     ParseObject(bool),"}]}