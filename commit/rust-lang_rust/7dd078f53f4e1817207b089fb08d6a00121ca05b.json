{"sha": "7dd078f53f4e1817207b089fb08d6a00121ca05b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkZDA3OGY1M2Y0ZTE4MTcyMDdiMDg5ZmIwOGQ2YTAwMTIxY2EwNWI=", "commit": {"author": {"name": "Ozaren", "email": "krishna.sd.2012@gmail.com", "date": "2018-12-19T05:19:07Z"}, "committer": {"name": "Ozaren", "email": "krishna.sd.2012@gmail.com", "date": "2018-12-19T05:19:07Z"}, "message": "fixed test, now it doesn't use a fundemental type\ni.e. `Box`, instead it now uses `Vec`", "tree": {"sha": "aaadc77d8c5eaf60ef476cc5c66b523f7d0b979a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aaadc77d8c5eaf60ef476cc5c66b523f7d0b979a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dd078f53f4e1817207b089fb08d6a00121ca05b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dd078f53f4e1817207b089fb08d6a00121ca05b", "html_url": "https://github.com/rust-lang/rust/commit/7dd078f53f4e1817207b089fb08d6a00121ca05b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dd078f53f4e1817207b089fb08d6a00121ca05b/comments", "author": {"login": "RustyYato", "id": 16103364, "node_id": "MDQ6VXNlcjE2MTAzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/16103364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RustyYato", "html_url": "https://github.com/RustyYato", "followers_url": "https://api.github.com/users/RustyYato/followers", "following_url": "https://api.github.com/users/RustyYato/following{/other_user}", "gists_url": "https://api.github.com/users/RustyYato/gists{/gist_id}", "starred_url": "https://api.github.com/users/RustyYato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RustyYato/subscriptions", "organizations_url": "https://api.github.com/users/RustyYato/orgs", "repos_url": "https://api.github.com/users/RustyYato/repos", "events_url": "https://api.github.com/users/RustyYato/events{/privacy}", "received_events_url": "https://api.github.com/users/RustyYato/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RustyYato", "id": 16103364, "node_id": "MDQ6VXNlcjE2MTAzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/16103364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RustyYato", "html_url": "https://github.com/RustyYato", "followers_url": "https://api.github.com/users/RustyYato/followers", "following_url": "https://api.github.com/users/RustyYato/following{/other_user}", "gists_url": "https://api.github.com/users/RustyYato/gists{/gist_id}", "starred_url": "https://api.github.com/users/RustyYato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RustyYato/subscriptions", "organizations_url": "https://api.github.com/users/RustyYato/orgs", "repos_url": "https://api.github.com/users/RustyYato/repos", "events_url": "https://api.github.com/users/RustyYato/events{/privacy}", "received_events_url": "https://api.github.com/users/RustyYato/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db9fe1c86ea3c45a459f2ff63db2aef658ee3b7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/db9fe1c86ea3c45a459f2ff63db2aef658ee3b7f", "html_url": "https://github.com/rust-lang/rust/commit/db9fe1c86ea3c45a459f2ff63db2aef658ee3b7f"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "767c2b914717497080689204b21497b06204853a", "filename": "src/test/run-pass/try_from.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7dd078f53f4e1817207b089fb08d6a00121ca05b/src%2Ftest%2Frun-pass%2Ftry_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dd078f53f4e1817207b089fb08d6a00121ca05b/src%2Ftest%2Frun-pass%2Ftry_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftry_from.rs?ref=7dd078f53f4e1817207b089fb08d6a00121ca05b", "patch": "@@ -32,12 +32,13 @@ impl<T> From<Foo<T>> for Box<T> {\n }\n */\n \n-impl<T> Into<Box<T>> for Foo<T> {\n-    fn into(self) -> Box<T> {\n-        Box::new(self.t)\n+impl<T> Into<Vec<T>> for Foo<T> {\n+    fn into(self) -> Vec<T> {\n+        vec![self.t]\n     }\n }\n \n pub fn main() {\n-    let _: Result<Box<i32>, !> = Foo { t: 10 }.try_into();\n+    let _: Result<Vec<i32>, !> = Foo { t: 10 }.try_into();\n }\n+"}]}