{"sha": "92c8a9439b82f56aabb2f42e485e8683e663aaff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyYzhhOTQzOWI4MmY1NmFhYmIyZjQyZTQ4NWU4NjgzZTY2M2FhZmY=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2015-07-11T20:55:52Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2015-07-11T20:55:52Z"}, "message": "Use escaped byte string representation for CString Debug\n\nFaithfully represent the contents of the CString and CStr in their Debug\nimpl, by treating them as byte strings with our default escaping to\nascii representation.\n\nAdd impl Debug for Cstr.\n\nFixes #26964.", "tree": {"sha": "babcfb6aabaf930c6be618e321b7595cf8450814", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/babcfb6aabaf930c6be618e321b7595cf8450814"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92c8a9439b82f56aabb2f42e485e8683e663aaff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92c8a9439b82f56aabb2f42e485e8683e663aaff", "html_url": "https://github.com/rust-lang/rust/commit/92c8a9439b82f56aabb2f42e485e8683e663aaff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92c8a9439b82f56aabb2f42e485e8683e663aaff/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b28ffa5216c845d1cef6b0cb3e5ac7db12025d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b28ffa5216c845d1cef6b0cb3e5ac7db12025d0", "html_url": "https://github.com/rust-lang/rust/commit/1b28ffa5216c845d1cef6b0cb3e5ac7db12025d0"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "c9fe6e7e0b123d8e35267eb25347f09f9805c927", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/92c8a9439b82f56aabb2f42e485e8683e663aaff/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92c8a9439b82f56aabb2f42e485e8683e663aaff/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=92c8a9439b82f56aabb2f42e485e8683e663aaff", "patch": "@@ -8,13 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use ascii;\n use borrow::{Cow, ToOwned, Borrow};\n use boxed::Box;\n use clone::Clone;\n use convert::{Into, From};\n use cmp::{PartialEq, Eq, PartialOrd, Ord, Ordering};\n use error::Error;\n-use fmt;\n+use fmt::{self, Write};\n use io;\n use iter::Iterator;\n use libc;\n@@ -268,7 +269,18 @@ impl Deref for CString {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl fmt::Debug for CString {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        fmt::Debug::fmt(&String::from_utf8_lossy(self.as_bytes()), f)\n+        fmt::Debug::fmt(&**self, f)\n+    }\n+}\n+\n+#[stable(feature = \"cstr_debug\", since = \"1.3.0\")]\n+impl fmt::Debug for CStr {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        try!(write!(f, \"\\\"\"));\n+        for byte in self.to_bytes().iter().flat_map(|&b| ascii::escape_default(b)) {\n+            try!(f.write_char(byte as char));\n+        }\n+        write!(f, \"\\\"\")\n     }\n }\n \n@@ -501,8 +513,8 @@ mod tests {\n \n     #[test]\n     fn formatted() {\n-        let s = CString::new(&b\"12\"[..]).unwrap();\n-        assert_eq!(format!(\"{:?}\", s), \"\\\"12\\\"\");\n+        let s = CString::new(&b\"abc\\x01\\x02\\n\\xE2\\x80\\xA6\\xFF\"[..]).unwrap();\n+        assert_eq!(format!(\"{:?}\", s), r#\"\"abc\\x01\\x02\\n\\xe2\\x80\\xa6\\xff\"\"#);\n     }\n \n     #[test]"}]}