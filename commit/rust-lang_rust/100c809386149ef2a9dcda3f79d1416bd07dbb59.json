{"sha": "100c809386149ef2a9dcda3f79d1416bd07dbb59", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwMGM4MDkzODYxNDllZjJhOWRjZGEzZjc5ZDE0MTZiZDA3ZGJiNTk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-29T13:14:49Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-02T20:33:47Z"}, "message": "also accept fn-ptr-type-changing assignments", "tree": {"sha": "269244f8ba07804854741462acf1f6c6ed4a6416", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/269244f8ba07804854741462acf1f6c6ed4a6416"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/100c809386149ef2a9dcda3f79d1416bd07dbb59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/100c809386149ef2a9dcda3f79d1416bd07dbb59", "html_url": "https://github.com/rust-lang/rust/commit/100c809386149ef2a9dcda3f79d1416bd07dbb59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/100c809386149ef2a9dcda3f79d1416bd07dbb59/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1ea2731335b1e6c84ebd2d4cd767626ee1073df", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1ea2731335b1e6c84ebd2d4cd767626ee1073df", "html_url": "https://github.com/rust-lang/rust/commit/f1ea2731335b1e6c84ebd2d4cd767626ee1073df"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "5d4976c09bbb40be7fbcbdb16d68b7142c1c33ab", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/100c809386149ef2a9dcda3f79d1416bd07dbb59/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/100c809386149ef2a9dcda3f79d1416bd07dbb59/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=100c809386149ef2a9dcda3f79d1416bd07dbb59", "patch": "@@ -287,10 +287,15 @@ impl<'tcx, Tag: ::std::fmt::Debug> PlaceTy<'tcx, Tag> {\n fn mir_assign_valid_types<'tcx>(src: Ty<'tcx>, dest: Ty<'tcx>) -> bool {\n     src == dest\n         || match (&src.kind, &dest.kind) {\n-            // After MIR optimizations, there can be assignments that change reference mutability.\n             (ty::Ref(_, src_pointee, _), ty::Ref(_, dest_pointee, _)) => {\n+                // After optimizations, there can be assignments that change reference mutability.\n+                // This does not affect reference layout, so that is fine.\n                 src_pointee == dest_pointee\n             }\n+            (ty::FnPtr(_), ty::FnPtr(_)) => {\n+                // All function pointers have equal layout, and thus can be assigned.\n+                true\n+            }\n             _ => false,\n         }\n }\n@@ -882,7 +887,7 @@ where\n         // actually \"transmute\" `&mut T` to `&T` in an assignment without a cast.\n         assert!(\n             mir_assign_valid_types(src.layout.ty, dest.layout.ty),\n-            \"type mismatch when copying!\\nsrc: {:?}, dest: {:?}\",\n+            \"type mismatch when copying!\\nsrc: {:?},\\ndest: {:?}\",\n             src.layout.ty,\n             dest.layout.ty,\n         );"}]}