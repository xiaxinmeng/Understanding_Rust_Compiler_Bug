{"sha": "3e954a8cb2fd094d79713059d83d37b2daa7b396", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlOTU0YThjYjJmZDA5NGQ3OTcxMzA1OWQ4M2QzN2IyZGFhN2IzOTY=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-27T16:06:00Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-30T01:43:01Z"}, "message": "implement Clone for Box<str>, closes #27323\n\nThis is a minor [breaking-change], as it changes what\n`boxed_str.to_owned()` does (previously it would deref to `&str` and\ncall `to_owned` on that to get a `String`). However `Box<str>` is such an\nexceptionally rare type that this is not expected to be a serious\nconcern. Also a `Box<str>` can be freely converted to a `String` to\nobtain the previous behaviour anyway.", "tree": {"sha": "e09612cbe34258da5081b07862b9c9b25f102de3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e09612cbe34258da5081b07862b9c9b25f102de3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e954a8cb2fd094d79713059d83d37b2daa7b396", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e954a8cb2fd094d79713059d83d37b2daa7b396", "html_url": "https://github.com/rust-lang/rust/commit/3e954a8cb2fd094d79713059d83d37b2daa7b396", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e954a8cb2fd094d79713059d83d37b2daa7b396/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba324694d6116cb0a9a73e29acb043d251a1e6f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba324694d6116cb0a9a73e29acb043d251a1e6f5", "html_url": "https://github.com/rust-lang/rust/commit/ba324694d6116cb0a9a73e29acb043d251a1e6f5"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "58c10b6ea59f9fb7ed26c343ded32046345c353c", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3e954a8cb2fd094d79713059d83d37b2daa7b396/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e954a8cb2fd094d79713059d83d37b2daa7b396/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=3e954a8cb2fd094d79713059d83d37b2daa7b396", "patch": "@@ -321,6 +321,19 @@ impl<T: Clone> Clone for Box<T> {\n     }\n }\n \n+\n+#[stable(feature = \"box_slice_clone\", since = \"1.3.0\")]\n+impl Clone for Box<str> {\n+    fn clone(&self) -> Self {\n+        let len = self.len();\n+        let buf = RawVec::with_capacity(len);\n+        unsafe {\n+            ptr::copy_nonoverlapping(self.as_ptr(), buf.ptr(), len);\n+            mem::transmute(buf.into_box()) // bytes to str ~magic\n+        }\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized + PartialEq> PartialEq for Box<T> {\n     #[inline]"}, {"sha": "0e9b01e5c233e93218773edff6a6af61d6cfcff2", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3e954a8cb2fd094d79713059d83d37b2daa7b396/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e954a8cb2fd094d79713059d83d37b2daa7b396/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=3e954a8cb2fd094d79713059d83d37b2daa7b396", "patch": "@@ -92,6 +92,7 @@\n #![feature(unsafe_no_drop_flag, filling_drop)]\n #![feature(unsize)]\n #![feature(core_slice_ext)]\n+#![feature(core_str_ext)]\n \n #![cfg_attr(test, feature(test, alloc, rustc_private, box_raw))]\n #![cfg_attr(all(not(feature = \"external_funcs\"), not(feature = \"external_crate\")),"}, {"sha": "4cccb29b41cdd31a90b99ad4071705c8fba9bbc6", "filename": "src/libcollectionstest/str.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3e954a8cb2fd094d79713059d83d37b2daa7b396/src%2Flibcollectionstest%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e954a8cb2fd094d79713059d83d37b2daa7b396/src%2Flibcollectionstest%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fstr.rs?ref=3e954a8cb2fd094d79713059d83d37b2daa7b396", "patch": "@@ -1766,6 +1766,14 @@ fn test_into_string() {\n     assert_eq!(string.clone().into_boxed_slice().into_string(), string);\n }\n \n+#[test]\n+fn test_box_slice_clone() {\n+    let data = String::from(\"hello HELLO hello HELLO yes YES 5 \u4e2d\u00e4\u534e!!!\");\n+    let data2 = data.clone().into_boxed_slice().clone().into_string();\n+\n+    assert_eq!(data, data2);\n+}\n+\n mod pattern {\n     use std::str::pattern::Pattern;\n     use std::str::pattern::{Searcher, ReverseSearcher};"}]}