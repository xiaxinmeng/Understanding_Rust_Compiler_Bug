{"sha": "479b69266be59ad1723d986b32c0d156f7772b9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3OWI2OTI2NmJlNTlhZDE3MjNkOTg2YjMyYzBkMTU2Zjc3NzJiOWY=", "commit": {"author": {"name": "Connor Brewster", "email": "brewsterc@my.caspercollege.edu", "date": "2016-01-12T20:42:53Z"}, "committer": {"name": "Connor Brewster", "email": "brewsterc@my.caspercollege.edu", "date": "2016-01-12T20:42:53Z"}, "message": "Changed TypeDensity::WhiteSpace to TypeDensity::Wide\nChanged eq_str and plus_str assignments to use a match", "tree": {"sha": "c3f03e40875dda62bfb89b330eeb11164c3c206e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3f03e40875dda62bfb89b330eeb11164c3c206e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/479b69266be59ad1723d986b32c0d156f7772b9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/479b69266be59ad1723d986b32c0d156f7772b9f", "html_url": "https://github.com/rust-lang/rust/commit/479b69266be59ad1723d986b32c0d156f7772b9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/479b69266be59ad1723d986b32c0d156f7772b9f/comments", "author": {"login": "cbrewster", "id": 9086315, "node_id": "MDQ6VXNlcjkwODYzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9086315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbrewster", "html_url": "https://github.com/cbrewster", "followers_url": "https://api.github.com/users/cbrewster/followers", "following_url": "https://api.github.com/users/cbrewster/following{/other_user}", "gists_url": "https://api.github.com/users/cbrewster/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbrewster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbrewster/subscriptions", "organizations_url": "https://api.github.com/users/cbrewster/orgs", "repos_url": "https://api.github.com/users/cbrewster/repos", "events_url": "https://api.github.com/users/cbrewster/events{/privacy}", "received_events_url": "https://api.github.com/users/cbrewster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cbrewster", "id": 9086315, "node_id": "MDQ6VXNlcjkwODYzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9086315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbrewster", "html_url": "https://github.com/cbrewster", "followers_url": "https://api.github.com/users/cbrewster/followers", "following_url": "https://api.github.com/users/cbrewster/following{/other_user}", "gists_url": "https://api.github.com/users/cbrewster/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbrewster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbrewster/subscriptions", "organizations_url": "https://api.github.com/users/cbrewster/orgs", "repos_url": "https://api.github.com/users/cbrewster/repos", "events_url": "https://api.github.com/users/cbrewster/events{/privacy}", "received_events_url": "https://api.github.com/users/cbrewster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dba2d8afd553bd18806c4f674b0d6bcd925cb78e", "url": "https://api.github.com/repos/rust-lang/rust/commits/dba2d8afd553bd18806c4f674b0d6bcd925cb78e", "html_url": "https://github.com/rust-lang/rust/commit/dba2d8afd553bd18806c4f674b0d6bcd925cb78e"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "b2d6cad25b6cf83e75c9a1ebf7044025a89ce584", "filename": "src/config.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/479b69266be59ad1723d986b32c0d156f7772b9f/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/479b69266be59ad1723d986b32c0d156f7772b9f/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=479b69266be59ad1723d986b32c0d156f7772b9f", "patch": "@@ -77,7 +77,7 @@ configuration_option_enum! { TypeDensity:\n     // No spaces around \"=\" and \"+\"\n     Compressed,\n     // Spaces around \" = \" and \" + \"\n-    WhiteSpace,\n+    Wide,\n }\n \n impl Density {\n@@ -285,7 +285,7 @@ create_config! {\n     fn_args_density: Density, Density::Tall, \"Argument density in functions\";\n     fn_args_layout: StructLitStyle, StructLitStyle::Visual, \"Layout of function arguments\";\n     fn_arg_indent: BlockIndentStyle, BlockIndentStyle::Visual, \"Indent on function arguments\";\n-    type_punctuation_density: TypeDensity, TypeDensity::WhiteSpace,\n+    type_punctuation_density: TypeDensity, TypeDensity::Wide,\n         \"Determines if '+' or '=' are wrapped in spaces in the punctuation of types\";\n     // Should we at least try to put the where clause on the same line as the rest of the\n     // function decl?"}, {"sha": "32ae468941457f6695755f9a8d99c238dd74760d", "filename": "src/types.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/479b69266be59ad1723d986b32c0d156f7772b9f/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/479b69266be59ad1723d986b32c0d156f7772b9f/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=479b69266be59ad1723d986b32c0d156f7772b9f", "patch": "@@ -425,10 +425,10 @@ impl Rewrite for ast::TyParam {\n             result.push_str(&bounds);\n         }\n         if let Some(ref def) = self.default {\n-            let eq_str = if context.config.type_punctuation_density == TypeDensity::Compressed {\n-                \"=\"\n-            } else {\n-                \" = \"\n+\n+            let eq_str = match context.config.type_punctuation_density {\n+                TypeDensity::Compressed => \"=\",\n+                TypeDensity::Wide => \" = \",\n             };\n             result.push_str(eq_str);\n             let budget = try_opt!(width.checked_sub(result.len()));\n@@ -473,11 +473,9 @@ impl Rewrite for ast::Ty {\n             ast::TyObjectSum(ref ty, ref bounds) => {\n                 let ty_str = try_opt!(ty.rewrite(context, width, offset));\n                 let overhead = ty_str.len() + 3;\n-                let plus_str = if context.config.type_punctuation_density ==\n-                                  TypeDensity::Compressed {\n-                    \"+\"\n-                } else {\n-                    \" + \"\n+                let plus_str = match context.config.type_punctuation_density {\n+                    TypeDensity::Compressed => \"+\",\n+                    TypeDensity::Wide => \" + \",\n                 };\n                 Some(format!(\"{}{}{}\",\n                              ty_str,"}]}