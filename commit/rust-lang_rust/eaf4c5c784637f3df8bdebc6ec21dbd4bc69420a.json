{"sha": "eaf4c5c784637f3df8bdebc6ec21dbd4bc69420a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZjRjNWM3ODQ2MzdmM2RmOGJkZWJjNmVjMjFkYmQ0YmM2OTQyMGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-02T15:04:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-02T15:04:54Z"}, "message": "Auto merge of #21864 - sanxiyn:no-chain, r=nikomatsakis\n\nThis avoids triggering #21694. It probably is a better way to do it anyway.", "tree": {"sha": "b332bc283c06782c04fd27bf39cca386cb23c2c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b332bc283c06782c04fd27bf39cca386cb23c2c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eaf4c5c784637f3df8bdebc6ec21dbd4bc69420a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eaf4c5c784637f3df8bdebc6ec21dbd4bc69420a", "html_url": "https://github.com/rust-lang/rust/commit/eaf4c5c784637f3df8bdebc6ec21dbd4bc69420a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eaf4c5c784637f3df8bdebc6ec21dbd4bc69420a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "758a296e2710746a31b36a2396047aad2367cfa5", "url": "https://api.github.com/repos/rust-lang/rust/commits/758a296e2710746a31b36a2396047aad2367cfa5", "html_url": "https://github.com/rust-lang/rust/commit/758a296e2710746a31b36a2396047aad2367cfa5"}, {"sha": "6a1a46e8d721fef8f31402e39c401646b1c35d6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a1a46e8d721fef8f31402e39c401646b1c35d6f", "html_url": "https://github.com/rust-lang/rust/commit/6a1a46e8d721fef8f31402e39c401646b1c35d6f"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "d5c0387943874b7537e16b776c2346658fdfc18f", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/eaf4c5c784637f3df8bdebc6ec21dbd4bc69420a/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eaf4c5c784637f3df8bdebc6ec21dbd4bc69420a/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=eaf4c5c784637f3df8bdebc6ec21dbd4bc69420a", "patch": "@@ -355,21 +355,21 @@ impl Clean<Item> for doctree::Module {\n         } else {\n             \"\".to_string()\n         };\n-        let items: Vec<Item> =\n-                   self.extern_crates.iter().map(|x| x.clean(cx))\n-            .chain(self.imports.iter().flat_map(|x| x.clean(cx).into_iter()))\n-            .chain(self.structs.iter().map(|x| x.clean(cx)))\n-            .chain(self.enums.iter().map(|x| x.clean(cx)))\n-            .chain(self.fns.iter().map(|x| x.clean(cx)))\n-            .chain(self.foreigns.iter().flat_map(|x| x.clean(cx).into_iter()))\n-            .chain(self.mods.iter().map(|x| x.clean(cx)))\n-            .chain(self.typedefs.iter().map(|x| x.clean(cx)))\n-            .chain(self.statics.iter().map(|x| x.clean(cx)))\n-            .chain(self.constants.iter().map(|x| x.clean(cx)))\n-            .chain(self.traits.iter().map(|x| x.clean(cx)))\n-            .chain(self.impls.iter().map(|x| x.clean(cx)))\n-            .chain(self.macros.iter().map(|x| x.clean(cx)))\n-            .collect();\n+\n+        let mut items: Vec<Item> = vec![];\n+        items.extend(self.extern_crates.iter().map(|x| x.clean(cx)));\n+        items.extend(self.imports.iter().flat_map(|x| x.clean(cx).into_iter()));\n+        items.extend(self.structs.iter().map(|x| x.clean(cx)));\n+        items.extend(self.enums.iter().map(|x| x.clean(cx)));\n+        items.extend(self.fns.iter().map(|x| x.clean(cx)));\n+        items.extend(self.foreigns.iter().flat_map(|x| x.clean(cx).into_iter()));\n+        items.extend(self.mods.iter().map(|x| x.clean(cx)));\n+        items.extend(self.typedefs.iter().map(|x| x.clean(cx)));\n+        items.extend(self.statics.iter().map(|x| x.clean(cx)));\n+        items.extend(self.constants.iter().map(|x| x.clean(cx)));\n+        items.extend(self.traits.iter().map(|x| x.clean(cx)));\n+        items.extend(self.impls.iter().map(|x| x.clean(cx)));\n+        items.extend(self.macros.iter().map(|x| x.clean(cx)));\n \n         // determine if we should display the inner contents or\n         // the outer `mod` item for the source code."}]}