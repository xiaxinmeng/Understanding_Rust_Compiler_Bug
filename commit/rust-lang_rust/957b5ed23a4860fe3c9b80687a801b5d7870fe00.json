{"sha": "957b5ed23a4860fe3c9b80687a801b5d7870fe00", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1N2I1ZWQyM2E0ODYwZmUzYzliODA2ODdhODAxYjVkNzg3MGZlMDA=", "commit": {"author": {"name": "Evgenii P", "email": "eupn@protonmail.com", "date": "2019-08-09T08:38:52Z"}, "committer": {"name": "Evgenii P", "email": "eupn@protonmail.com", "date": "2019-08-09T08:38:52Z"}, "message": "Parse tuple struct field initialization", "tree": {"sha": "2aee1c7a0bd9a0160182a7525ef036c2c111f187", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2aee1c7a0bd9a0160182a7525ef036c2c111f187"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/957b5ed23a4860fe3c9b80687a801b5d7870fe00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/957b5ed23a4860fe3c9b80687a801b5d7870fe00", "html_url": "https://github.com/rust-lang/rust/commit/957b5ed23a4860fe3c9b80687a801b5d7870fe00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/957b5ed23a4860fe3c9b80687a801b5d7870fe00/comments", "author": {"login": "eupn", "id": 36292692, "node_id": "MDQ6VXNlcjM2MjkyNjky", "avatar_url": "https://avatars.githubusercontent.com/u/36292692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eupn", "html_url": "https://github.com/eupn", "followers_url": "https://api.github.com/users/eupn/followers", "following_url": "https://api.github.com/users/eupn/following{/other_user}", "gists_url": "https://api.github.com/users/eupn/gists{/gist_id}", "starred_url": "https://api.github.com/users/eupn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eupn/subscriptions", "organizations_url": "https://api.github.com/users/eupn/orgs", "repos_url": "https://api.github.com/users/eupn/repos", "events_url": "https://api.github.com/users/eupn/events{/privacy}", "received_events_url": "https://api.github.com/users/eupn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eupn", "id": 36292692, "node_id": "MDQ6VXNlcjM2MjkyNjky", "avatar_url": "https://avatars.githubusercontent.com/u/36292692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eupn", "html_url": "https://github.com/eupn", "followers_url": "https://api.github.com/users/eupn/followers", "following_url": "https://api.github.com/users/eupn/following{/other_user}", "gists_url": "https://api.github.com/users/eupn/gists{/gist_id}", "starred_url": "https://api.github.com/users/eupn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eupn/subscriptions", "organizations_url": "https://api.github.com/users/eupn/orgs", "repos_url": "https://api.github.com/users/eupn/repos", "events_url": "https://api.github.com/users/eupn/events{/privacy}", "received_events_url": "https://api.github.com/users/eupn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fbec23d9990147e09a3b819c37dc1467a5e95d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fbec23d9990147e09a3b819c37dc1467a5e95d4", "html_url": "https://github.com/rust-lang/rust/commit/2fbec23d9990147e09a3b819c37dc1467a5e95d4"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "00fb1bac932848927f537f072196ae9a4bdd80f0", "filename": "crates/ra_parser/src/grammar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/957b5ed23a4860fe3c9b80687a801b5d7870fe00/crates%2Fra_parser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957b5ed23a4860fe3c9b80687a801b5d7870fe00/crates%2Fra_parser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar.rs?ref=957b5ed23a4860fe3c9b80687a801b5d7870fe00", "patch": "@@ -274,7 +274,7 @@ fn name(p: &mut Parser) {\n }\n \n fn name_ref(p: &mut Parser) {\n-    if p.at(IDENT) {\n+    if p.at(IDENT) || p.at(INT_NUMBER) {\n         let m = p.start();\n         p.bump();\n         m.complete(p, NAME_REF);"}, {"sha": "50c938a23196b30fc004d550e162d7fab652134e", "filename": "crates/ra_parser/src/grammar/expressions.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/957b5ed23a4860fe3c9b80687a801b5d7870fe00/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957b5ed23a4860fe3c9b80687a801b5d7870fe00/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=957b5ed23a4860fe3c9b80687a801b5d7870fe00", "patch": "@@ -572,6 +572,7 @@ fn path_expr(p: &mut Parser, r: Restrictions) -> (CompletedMarker, BlockLike) {\n //     S {};\n //     S { x, y: 32, };\n //     S { x, y: 32, ..Default::default() };\n+//     TupleStruct { 0: 1 };\n // }\n pub(crate) fn named_field_list(p: &mut Parser) {\n     assert!(p.at(T!['{']));\n@@ -583,7 +584,7 @@ pub(crate) fn named_field_list(p: &mut Parser) {\n             // fn main() {\n             //     S { #[cfg(test)] field: 1 }\n             // }\n-            IDENT | T![#] => {\n+            IDENT | INT_NUMBER | T![#] => {\n                 let m = p.start();\n                 attributes::outer_attributes(p);\n                 name_ref(p);"}, {"sha": "6285e554977220d75cfeef116439828ae3c6b182", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0061_struct_lit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/957b5ed23a4860fe3c9b80687a801b5d7870fe00/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_struct_lit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957b5ed23a4860fe3c9b80687a801b5d7870fe00/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_struct_lit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_struct_lit.rs?ref=957b5ed23a4860fe3c9b80687a801b5d7870fe00", "patch": "@@ -2,4 +2,5 @@ fn foo() {\n     S {};\n     S { x, y: 32, };\n     S { x, y: 32, ..Default::default() };\n+    TupleStruct { 0: 1 };\n }"}, {"sha": "d06594cae29b4ddd0c3ac9a60bd321d4f4657cca", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0061_struct_lit.txt", "status": "modified", "additions": 27, "deletions": 6, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/957b5ed23a4860fe3c9b80687a801b5d7870fe00/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_struct_lit.txt", "raw_url": "https://github.com/rust-lang/rust/raw/957b5ed23a4860fe3c9b80687a801b5d7870fe00/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_struct_lit.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_struct_lit.txt?ref=957b5ed23a4860fe3c9b80687a801b5d7870fe00", "patch": "@@ -1,5 +1,5 @@\n-SOURCE_FILE@[0; 86)\n-  FN_DEF@[0; 85)\n+SOURCE_FILE@[0; 112)\n+  FN_DEF@[0; 111)\n     FN_KW@[0; 2) \"fn\"\n     WHITESPACE@[2; 3) \" \"\n     NAME@[3; 6)\n@@ -8,7 +8,7 @@ SOURCE_FILE@[0; 86)\n       L_PAREN@[6; 7) \"(\"\n       R_PAREN@[7; 8) \")\"\n     WHITESPACE@[8; 9) \" \"\n-    BLOCK@[9; 85)\n+    BLOCK@[9; 111)\n       L_CURLY@[9; 10) \"{\"\n       WHITESPACE@[10; 15) \"\\n    \"\n       EXPR_STMT@[15; 20)\n@@ -92,6 +92,27 @@ SOURCE_FILE@[0; 86)\n             WHITESPACE@[80; 81) \" \"\n             R_CURLY@[81; 82) \"}\"\n         SEMI@[82; 83) \";\"\n-      WHITESPACE@[83; 84) \"\\n\"\n-      R_CURLY@[84; 85) \"}\"\n-  WHITESPACE@[85; 86) \"\\n\"\n+      WHITESPACE@[83; 88) \"\\n    \"\n+      EXPR_STMT@[88; 109)\n+        STRUCT_LIT@[88; 108)\n+          PATH@[88; 99)\n+            PATH_SEGMENT@[88; 99)\n+              NAME_REF@[88; 99)\n+                IDENT@[88; 99) \"TupleStruct\"\n+          WHITESPACE@[99; 100) \" \"\n+          NAMED_FIELD_LIST@[100; 108)\n+            L_CURLY@[100; 101) \"{\"\n+            WHITESPACE@[101; 102) \" \"\n+            NAMED_FIELD@[102; 106)\n+              NAME_REF@[102; 103)\n+                INT_NUMBER@[102; 103) \"0\"\n+              COLON@[103; 104) \":\"\n+              WHITESPACE@[104; 105) \" \"\n+              LITERAL@[105; 106)\n+                INT_NUMBER@[105; 106) \"1\"\n+            WHITESPACE@[106; 107) \" \"\n+            R_CURLY@[107; 108) \"}\"\n+        SEMI@[108; 109) \";\"\n+      WHITESPACE@[109; 110) \"\\n\"\n+      R_CURLY@[110; 111) \"}\"\n+  WHITESPACE@[111; 112) \"\\n\""}]}