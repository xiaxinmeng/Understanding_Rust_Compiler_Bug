{"sha": "25839dd9c6017523733f86212c15ef8c72000e33", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ODM5ZGQ5YzYwMTc1MjM3MzNmODYyMTJjMTVlZjhjNzIwMDBlMzM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-08-15T17:20:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-15T17:20:25Z"}, "message": "Rollup merge of #53344 - frewsxcv:frewsxcv-doc-ptr, r=ollie27\n\nAdd doc examples for std::alloc::{alloc,alloc_zeroed}.\n\nNone", "tree": {"sha": "d60ad2fc525894b941205f3d16ac0c162b175eca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d60ad2fc525894b941205f3d16ac0c162b175eca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25839dd9c6017523733f86212c15ef8c72000e33", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbdGDZCRBK7hj4Ov3rIwAAdHIIAB+3tKGEMJoEvtuYjFPa+t0X\nLSDsACcBOF1nhV2iXEFlPwsAl6Gs1pw8y7u/ggCpZzthybnev3qvPy3xQIyf5Gaw\nQevsqhB8gITBXmX93kQ82pbv97d2HLsPmiqc+S7LmYlEVysACWTn906NcscmmQB0\nfSsqc9Yj2n/So32hSfph4jEQxIDkuC4WLgjmbD1B2/Jmjwswcn8bj62WR2LQUTJm\n07Ql1vX7UK55zi1rN6OFLgNmh+1Kohc6JQbkCf5ycZmBI5Mm9rbhjpNTXFZjcoTD\nJCM/rslfqn5PyFWvgn+K+v+exmJ7GIFeBFogi7gQJxZSl2X55cxEFUPCSwGfx3w=\n=+C2v\n-----END PGP SIGNATURE-----\n", "payload": "tree d60ad2fc525894b941205f3d16ac0c162b175eca\nparent 6bea743d561b6e4239d6e7d5da8e921878d0baa6\nparent d1193bf95e9a51d842d8091ee3f30aebe697f75b\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1534353625 +0200\ncommitter GitHub <noreply@github.com> 1534353625 +0200\n\nRollup merge of #53344 - frewsxcv:frewsxcv-doc-ptr, r=ollie27\n\nAdd doc examples for std::alloc::{alloc,alloc_zeroed}.\n\nNone\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25839dd9c6017523733f86212c15ef8c72000e33", "html_url": "https://github.com/rust-lang/rust/commit/25839dd9c6017523733f86212c15ef8c72000e33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25839dd9c6017523733f86212c15ef8c72000e33/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bea743d561b6e4239d6e7d5da8e921878d0baa6", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bea743d561b6e4239d6e7d5da8e921878d0baa6", "html_url": "https://github.com/rust-lang/rust/commit/6bea743d561b6e4239d6e7d5da8e921878d0baa6"}, {"sha": "d1193bf95e9a51d842d8091ee3f30aebe697f75b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1193bf95e9a51d842d8091ee3f30aebe697f75b", "html_url": "https://github.com/rust-lang/rust/commit/d1193bf95e9a51d842d8091ee3f30aebe697f75b"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "c69b2fb5e1c2a3e27619f5994f767d8f49d036db", "filename": "src/liballoc/alloc.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/25839dd9c6017523733f86212c15ef8c72000e33/src%2Fliballoc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25839dd9c6017523733f86212c15ef8c72000e33/src%2Fliballoc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Falloc.rs?ref=25839dd9c6017523733f86212c15ef8c72000e33", "patch": "@@ -56,6 +56,22 @@ pub struct Global;\n /// # Safety\n ///\n /// See [`GlobalAlloc::alloc`].\n+///\n+/// # Examples\n+///\n+/// ```\n+/// use std::alloc::{alloc, dealloc, Layout};\n+///\n+/// unsafe {\n+///     let layout = Layout::new::<u16>();\n+///     let ptr = alloc(layout);\n+///\n+///     *(ptr as *mut u16) = 42;\n+///     assert_eq!(*(ptr as *mut u16), 42);\n+///\n+///     dealloc(ptr, layout);\n+/// }\n+/// ```\n #[stable(feature = \"global_alloc\", since = \"1.28.0\")]\n #[inline]\n pub unsafe fn alloc(layout: Layout) -> *mut u8 {\n@@ -110,6 +126,21 @@ pub unsafe fn realloc(ptr: *mut u8, layout: Layout, new_size: usize) -> *mut u8\n /// # Safety\n ///\n /// See [`GlobalAlloc::alloc_zeroed`].\n+///\n+/// # Examples\n+///\n+/// ```\n+/// use std::alloc::{alloc_zeroed, dealloc, Layout};\n+///\n+/// unsafe {\n+///     let layout = Layout::new::<u16>();\n+///     let ptr = alloc_zeroed(layout);\n+///\n+///     assert_eq!(*(ptr as *mut u16), 0);\n+///\n+///     dealloc(ptr, layout);\n+/// }\n+/// ```\n #[stable(feature = \"global_alloc\", since = \"1.28.0\")]\n #[inline]\n pub unsafe fn alloc_zeroed(layout: Layout) -> *mut u8 {"}]}