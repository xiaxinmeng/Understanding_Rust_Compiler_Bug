{"sha": "408eef0d89f4520b5ede7e5868a8ca1bc83795bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwOGVlZjBkODlmNDUyMGI1ZWRlN2U1ODY4YThjYTFiYzgzNzk1YmM=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-30T03:08:00Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-30T20:22:55Z"}, "message": "stop initializing ref_count in exchange_alloc\n\nthis is never read anymore", "tree": {"sha": "c9e152eaed776bcd764360da97f0d7ba5fd9b7b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9e152eaed776bcd764360da97f0d7ba5fd9b7b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/408eef0d89f4520b5ede7e5868a8ca1bc83795bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/408eef0d89f4520b5ede7e5868a8ca1bc83795bc", "html_url": "https://github.com/rust-lang/rust/commit/408eef0d89f4520b5ede7e5868a8ca1bc83795bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/408eef0d89f4520b5ede7e5868a8ca1bc83795bc/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "350a5c0b722038a3743058a7a824cfa6ac7094da", "url": "https://api.github.com/repos/rust-lang/rust/commits/350a5c0b722038a3743058a7a824cfa6ac7094da", "html_url": "https://github.com/rust-lang/rust/commit/350a5c0b722038a3743058a7a824cfa6ac7094da"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "5d4ac37055cafb05f9539ee2550cad27306ffd50", "filename": "src/libstd/rt/global_heap.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/408eef0d89f4520b5ede7e5868a8ca1bc83795bc/src%2Flibstd%2Frt%2Fglobal_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/408eef0d89f4520b5ede7e5868a8ca1bc83795bc/src%2Flibstd%2Frt%2Fglobal_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fglobal_heap.rs?ref=408eef0d89f4520b5ede7e5868a8ca1bc83795bc", "patch": "@@ -43,6 +43,27 @@ pub unsafe fn malloc_raw(size: uint) -> *c_void {\n }\n \n // FIXME #4942: Make these signatures agree with exchange_alloc's signatures\n+#[cfg(stage0, not(test))]\n+#[lang=\"exchange_malloc\"]\n+#[inline]\n+pub unsafe fn exchange_malloc(td: *c_char, size: uintptr_t) -> *c_char {\n+    let td = td as *TyDesc;\n+    let size = size as uint;\n+\n+    assert!(td.is_not_null());\n+\n+    let total_size = get_box_size(size, (*td).align);\n+    let p = malloc_raw(total_size as uint);\n+\n+    let box: *mut BoxRepr = p as *mut BoxRepr;\n+    (*box).header.ref_count = -1;\n+    (*box).header.type_desc = td;\n+\n+    box as *c_char\n+}\n+\n+// FIXME #4942: Make these signatures agree with exchange_alloc's signatures\n+#[cfg(not(stage0), not(test))]\n #[lang=\"exchange_malloc\"]\n #[inline]\n pub unsafe fn exchange_malloc(td: *c_char, size: uintptr_t) -> *c_char {\n@@ -55,7 +76,6 @@ pub unsafe fn exchange_malloc(td: *c_char, size: uintptr_t) -> *c_char {\n     let p = malloc_raw(total_size as uint);\n \n     let box: *mut BoxRepr = p as *mut BoxRepr;\n-    (*box).header.ref_count = -1; // Exchange values not ref counted\n     (*box).header.type_desc = td;\n \n     box as *c_char"}]}