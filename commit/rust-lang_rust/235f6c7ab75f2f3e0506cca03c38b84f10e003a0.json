{"sha": "235f6c7ab75f2f3e0506cca03c38b84f10e003a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzNWY2YzdhYjc1ZjJmM2UwNTA2Y2NhMDNjMzhiODRmMTBlMDAzYTA=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2012-05-29T22:50:10Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-29T22:41:55Z"}, "message": "std: factor main body of tcp::listen into reusable listen_common", "tree": {"sha": "83646ed6540a1817bfe847dd2cfaba4321c40dd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83646ed6540a1817bfe847dd2cfaba4321c40dd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/235f6c7ab75f2f3e0506cca03c38b84f10e003a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/235f6c7ab75f2f3e0506cca03c38b84f10e003a0", "html_url": "https://github.com/rust-lang/rust/commit/235f6c7ab75f2f3e0506cca03c38b84f10e003a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/235f6c7ab75f2f3e0506cca03c38b84f10e003a0/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d79d0aa1c8063a9521b0e01ceaf1a6923eb48db4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d79d0aa1c8063a9521b0e01ceaf1a6923eb48db4", "html_url": "https://github.com/rust-lang/rust/commit/d79d0aa1c8063a9521b0e01ceaf1a6923eb48db4"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "66f287683bbaa8ac993b7f2d45b6513768adec6c", "filename": "src/libstd/net_tcp.rs", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/235f6c7ab75f2f3e0506cca03c38b84f10e003a0/src%2Flibstd%2Fnet_tcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/235f6c7ab75f2f3e0506cca03c38b84f10e003a0/src%2Flibstd%2Fnet_tcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet_tcp.rs?ref=235f6c7ab75f2f3e0506cca03c38b84f10e003a0", "patch": "@@ -682,6 +682,22 @@ fn listen(host_ip: ip::ip_addr, port: uint, backlog: uint,\n           +new_connect_cb: fn~(tcp_new_connection,\n                                comm::chan<option<tcp_err_data>>))\n     -> result::result<(), tcp_err_data> unsafe {\n+    listen_common(host_ip, port, backlog, iotask, on_establish_cb)\n+        // on_connect_cb\n+        {|handle|\n+            let server_data_ptr = uv::ll::get_data_for_uv_handle(handle)\n+                as *tcp_listen_fc_data;\n+            let new_conn = new_tcp_conn(handle);\n+            let kill_ch = (*server_data_ptr).kill_ch;\n+            new_connect_cb(new_conn, kill_ch);\n+    }\n+}\n+\n+fn listen_common(host_ip: ip::ip_addr, port: uint, backlog: uint,\n+          iotask: iotask,\n+          on_establish_cb: fn~(comm::chan<option<tcp_err_data>>),\n+          -on_connect_cb: fn~(*uv::ll::uv_tcp_t))\n+    -> result::result<(), tcp_err_data> unsafe {\n     let stream_closed_po = comm::port::<()>();\n     let kill_po = comm::port::<option<tcp_err_data>>();\n     let kill_ch = comm::chan(kill_po);\n@@ -691,7 +707,7 @@ fn listen(host_ip: ip::ip_addr, port: uint, backlog: uint,\n         server_stream_ptr: server_stream_ptr,\n         stream_closed_ch: comm::chan(stream_closed_po),\n         kill_ch: kill_ch,\n-        new_connect_cb: new_connect_cb,\n+        on_connect_cb: on_connect_cb,\n         iotask: iotask,\n         mut active: true\n     };\n@@ -1008,8 +1024,7 @@ type tcp_listen_fc_data = {\n     server_stream_ptr: *uv::ll::uv_tcp_t,\n     stream_closed_ch: comm::chan<()>,\n     kill_ch: comm::chan<option<tcp_err_data>>,\n-    new_connect_cb: fn~(tcp_new_connection,\n-                        comm::chan<option<tcp_err_data>>),\n+    on_connect_cb: fn~(*uv::ll::uv_tcp_t),\n     iotask: iotask,\n     mut active: bool\n };\n@@ -1028,8 +1043,7 @@ crust fn tcp_lfc_on_connection_cb(handle: *uv::ll::uv_tcp_t,\n     if (*server_data_ptr).active {\n         alt status {\n           0i32 {\n-            let new_conn = new_tcp_conn(handle);\n-            (*server_data_ptr).new_connect_cb(new_conn, kill_ch);\n+            (*server_data_ptr).on_connect_cb(handle);\n           }\n           _ {\n             let loop_ptr = uv::ll::get_loop_for_uv_handle(handle);"}]}