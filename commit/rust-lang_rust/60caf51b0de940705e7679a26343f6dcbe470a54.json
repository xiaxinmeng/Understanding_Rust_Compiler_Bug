{"sha": "60caf51b0de940705e7679a26343f6dcbe470a54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwY2FmNTFiMGRlOTQwNzA1ZTc2NzlhMjYzNDNmNmRjYmU0NzBhNTQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-10-17T14:38:49Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-11-05T09:22:08Z"}, "message": "Rename automatic_links to url_improvements", "tree": {"sha": "2c8aa55fe29162db1ce89aed0cd91cb4a7144c98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c8aa55fe29162db1ce89aed0cd91cb4a7144c98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60caf51b0de940705e7679a26343f6dcbe470a54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60caf51b0de940705e7679a26343f6dcbe470a54", "html_url": "https://github.com/rust-lang/rust/commit/60caf51b0de940705e7679a26343f6dcbe470a54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60caf51b0de940705e7679a26343f6dcbe470a54/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55b4d21e25a63ad36c5e6dcfd9106ae44ba6c75e", "url": "https://api.github.com/repos/rust-lang/rust/commits/55b4d21e25a63ad36c5e6dcfd9106ae44ba6c75e", "html_url": "https://github.com/rust-lang/rust/commit/55b4d21e25a63ad36c5e6dcfd9106ae44ba6c75e"}], "stats": {"total": 58, "additions": 29, "deletions": 29}, "files": [{"sha": "ad353bb28c99d019b20b295e729bcfcc16bf7185", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/60caf51b0de940705e7679a26343f6dcbe470a54/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60caf51b0de940705e7679a26343f6dcbe470a54/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=60caf51b0de940705e7679a26343f6dcbe470a54", "patch": "@@ -67,9 +67,9 @@ use rustc_hir::def_id::LocalDefId;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::TyCtxt;\n use rustc_session::lint::builtin::{\n-    AUTOMATIC_LINKS, BARE_TRAIT_OBJECTS, BROKEN_INTRA_DOC_LINKS, ELIDED_LIFETIMES_IN_PATHS,\n+    BARE_TRAIT_OBJECTS, BROKEN_INTRA_DOC_LINKS, ELIDED_LIFETIMES_IN_PATHS,\n     EXPLICIT_OUTLIVES_REQUIREMENTS, INVALID_CODEBLOCK_ATTRIBUTES, INVALID_HTML_TAGS,\n-    MISSING_DOC_CODE_EXAMPLES, PRIVATE_DOC_TESTS,\n+    MISSING_DOC_CODE_EXAMPLES, PRIVATE_DOC_TESTS, URL_IMPROVEMENTS,\n };\n use rustc_span::symbol::{Ident, Symbol};\n use rustc_span::Span;\n@@ -313,7 +313,7 @@ fn register_builtins(store: &mut LintStore, no_interleave_lints: bool) {\n \n     add_lint_group!(\n         \"rustdoc\",\n-        AUTOMATIC_LINKS,\n+        URL_IMPROVEMENTS,\n         BROKEN_INTRA_DOC_LINKS,\n         PRIVATE_INTRA_DOC_LINKS,\n         INVALID_CODEBLOCK_ATTRIBUTES,"}, {"sha": "c74680c172fe6247ad9ed9283dddde41dd37fa47", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/60caf51b0de940705e7679a26343f6dcbe470a54/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60caf51b0de940705e7679a26343f6dcbe470a54/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=60caf51b0de940705e7679a26343f6dcbe470a54", "patch": "@@ -1891,12 +1891,12 @@ declare_lint! {\n }\n \n declare_lint! {\n-    /// The `automatic_links` lint detects when a URL could be written using\n+    /// The `url_improvements` lint detects when a URL could be written using\n     /// only angle brackets. This is a `rustdoc` only lint, see the\n     /// documentation in the [rustdoc book].\n     ///\n-    /// [rustdoc book]: ../../../rustdoc/lints.html#automatic_links\n-    pub AUTOMATIC_LINKS,\n+    /// [rustdoc book]: ../../../rustdoc/lints.html#url_improvements\n+    pub URL_IMPROVEMENTS,\n     Warn,\n     \"detects URLs that could be written using only angle brackets\"\n }\n@@ -2806,7 +2806,7 @@ declare_lint_pass! {\n         MISSING_DOC_CODE_EXAMPLES,\n         INVALID_HTML_TAGS,\n         PRIVATE_DOC_TESTS,\n-        AUTOMATIC_LINKS,\n+        URL_IMPROVEMENTS,\n         WHERE_CLAUSES_OBJECT_SAFETY,\n         PROC_MACRO_DERIVE_RESOLUTION_FALLBACK,\n         MACRO_USE_EXTERN_CRATE,"}, {"sha": "8596d52ceaeb16f29edc06f18170f15fbc9a97b1", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60caf51b0de940705e7679a26343f6dcbe470a54/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60caf51b0de940705e7679a26343f6dcbe470a54/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=60caf51b0de940705e7679a26343f6dcbe470a54", "patch": "@@ -287,7 +287,7 @@ pub mod primitive;\n     unused_imports,\n     unsafe_op_in_unsafe_fn\n )]\n-#[cfg_attr(not(bootstrap), allow(automatic_links))]\n+#[cfg_attr(not(bootstrap), allow(url_improvements))]\n // FIXME: This annotation should be moved into rust-lang/stdarch after clashing_extern_declarations is\n // merged. It currently cannot because bootstrap fails as the lint hasn't been defined yet.\n #[allow(clashing_extern_declarations)]"}, {"sha": "7db9c93852da8218b0a200ed9f3456c87654adc3", "filename": "src/doc/rustdoc/src/lints.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60caf51b0de940705e7679a26343f6dcbe470a54/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "raw_url": "https://github.com/rust-lang/rust/raw/60caf51b0de940705e7679a26343f6dcbe470a54/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md?ref=60caf51b0de940705e7679a26343f6dcbe470a54", "patch": "@@ -286,7 +286,7 @@ warning: unclosed HTML tag `h1`\n warning: 2 warnings emitted\n ```\n \n-## automatic_links\n+## url_improvements\n \n This lint is **nightly-only** and **warns by default**. It detects links which\n could use the \"automatic\" link syntax. For example:"}, {"sha": "85d73a30e4b6891f400a8cc922776aadb149255a", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60caf51b0de940705e7679a26343f6dcbe470a54/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60caf51b0de940705e7679a26343f6dcbe470a54/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=60caf51b0de940705e7679a26343f6dcbe470a54", "patch": "@@ -330,13 +330,12 @@ pub fn run_core(\n     let invalid_codeblock_attributes_name = rustc_lint::builtin::INVALID_CODEBLOCK_ATTRIBUTES.name;\n     let invalid_html_tags = rustc_lint::builtin::INVALID_HTML_TAGS.name;\n     let renamed_and_removed_lints = rustc_lint::builtin::RENAMED_AND_REMOVED_LINTS.name;\n-    let automatic_links = rustc_lint::builtin::AUTOMATIC_LINKS.name;\n+    let url_improvements = rustc_lint::builtin::URL_IMPROVEMENTS.name;\n     let unknown_lints = rustc_lint::builtin::UNKNOWN_LINTS.name;\n \n     // In addition to those specific lints, we also need to allow those given through\n     // command line, otherwise they'll get ignored and we don't want that.\n     let lints_to_show = vec![\n-        automatic_links.to_owned(),\n         intra_link_resolution_failure_name.to_owned(),\n         missing_docs.to_owned(),\n         missing_doc_example.to_owned(),\n@@ -346,6 +345,7 @@ pub fn run_core(\n         invalid_html_tags.to_owned(),\n         renamed_and_removed_lints.to_owned(),\n         unknown_lints.to_owned(),\n+        url_improvements.to_owned(),\n     ];\n \n     let (lint_opts, lint_caps) = init_lints(lints_to_show, lint_opts, |lint| {"}, {"sha": "fa8bd24efa9e27835d67a3ba8aac9e70a2a1a358", "filename": "src/librustdoc/passes/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/60caf51b0de940705e7679a26343f6dcbe470a54/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60caf51b0de940705e7679a26343f6dcbe470a54/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fmod.rs?ref=60caf51b0de940705e7679a26343f6dcbe470a54", "patch": "@@ -11,8 +11,8 @@ use crate::core::DocContext;\n mod stripper;\n pub use stripper::*;\n \n-mod automatic_links;\n-pub use self::automatic_links::CHECK_AUTOMATIC_LINKS;\n+mod url_improvements;\n+pub use self::url_improvements::CHECK_URL_IMPROVEMENTS;\n \n mod collapse_docs;\n pub use self::collapse_docs::COLLAPSE_DOCS;\n@@ -93,7 +93,7 @@ pub const PASSES: &[Pass] = &[\n     COLLECT_TRAIT_IMPLS,\n     CALCULATE_DOC_COVERAGE,\n     CHECK_INVALID_HTML_TAGS,\n-    CHECK_AUTOMATIC_LINKS,\n+    CHECK_URL_IMPROVEMENTS,\n ];\n \n /// The list of passes run by default.\n@@ -109,7 +109,7 @@ pub const DEFAULT_PASSES: &[ConditionalPass] = &[\n     ConditionalPass::always(CHECK_CODE_BLOCK_SYNTAX),\n     ConditionalPass::always(CHECK_INVALID_HTML_TAGS),\n     ConditionalPass::always(PROPAGATE_DOC_CFG),\n-    ConditionalPass::always(CHECK_AUTOMATIC_LINKS),\n+    ConditionalPass::always(CHECK_URL_IMPROVEMENTS),\n ];\n \n /// The list of default passes run when `--doc-coverage` is passed to rustdoc."}, {"sha": "d191a89948ae952d6dd3b48d34c3ed46bca15e40", "filename": "src/librustdoc/passes/url_improvements.rs", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/60caf51b0de940705e7679a26343f6dcbe470a54/src%2Flibrustdoc%2Fpasses%2Furl_improvements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60caf51b0de940705e7679a26343f6dcbe470a54/src%2Flibrustdoc%2Fpasses%2Furl_improvements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Furl_improvements.rs?ref=60caf51b0de940705e7679a26343f6dcbe470a54", "patch": "@@ -10,9 +10,9 @@ use rustc_errors::Applicability;\n use rustc_feature::UnstableFeatures;\n use rustc_session::lint;\n \n-pub const CHECK_AUTOMATIC_LINKS: Pass = Pass {\n-    name: \"check-automatic-links\",\n-    run: check_automatic_links,\n+pub const CHECK_URL_IMPROVEMENTS: Pass = Pass {\n+    name: \"check-url-improvements\",\n+    run: check_url_improvements,\n     description: \"detects URLS that could be written using angle brackets\",\n };\n \n@@ -23,14 +23,14 @@ const URL_REGEX: &str = concat!(\n     r\"\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)\"     // optional query or url fragments\n );\n \n-struct AutomaticLinksLinter<'a, 'tcx> {\n+struct UrlImprovementsLinter<'a, 'tcx> {\n     cx: &'a DocContext<'tcx>,\n     regex: Regex,\n }\n \n-impl<'a, 'tcx> AutomaticLinksLinter<'a, 'tcx> {\n+impl<'a, 'tcx> UrlImprovementsLinter<'a, 'tcx> {\n     fn new(cx: &'a DocContext<'tcx>) -> Self {\n-        AutomaticLinksLinter { cx, regex: Regex::new(URL_REGEX).expect(\"failed to build regex\") }\n+        UrlImprovementsLinter { cx, regex: Regex::new(URL_REGEX).expect(\"failed to build regex\") }\n     }\n \n     fn find_raw_urls(\n@@ -53,17 +53,17 @@ impl<'a, 'tcx> AutomaticLinksLinter<'a, 'tcx> {\n     }\n }\n \n-pub fn check_automatic_links(krate: Crate, cx: &DocContext<'_>) -> Crate {\n+pub fn check_url_improvements(krate: Crate, cx: &DocContext<'_>) -> Crate {\n     if !UnstableFeatures::from_environment().is_nightly_build() {\n         krate\n     } else {\n-        let mut coll = AutomaticLinksLinter::new(cx);\n+        let mut coll = UrlImprovementsLinter::new(cx);\n \n         coll.fold_crate(krate)\n     }\n }\n \n-impl<'a, 'tcx> DocFolder for AutomaticLinksLinter<'a, 'tcx> {\n+impl<'a, 'tcx> DocFolder for UrlImprovementsLinter<'a, 'tcx> {\n     fn fold_item(&mut self, item: Item) -> Option<Item> {\n         let hir_id = match self.cx.as_local_hir_id(item.def_id) {\n             Some(hir_id) => hir_id,\n@@ -78,7 +78,7 @@ impl<'a, 'tcx> DocFolder for AutomaticLinksLinter<'a, 'tcx> {\n                 let sp = super::source_span_for_markdown_range(cx, &dox, &range, &item.attrs)\n                     .or_else(|| span_of_attrs(&item.attrs))\n                     .unwrap_or(item.source.span());\n-                cx.tcx.struct_span_lint_hir(lint::builtin::AUTOMATIC_LINKS, hir_id, sp, |lint| {\n+                cx.tcx.struct_span_lint_hir(lint::builtin::URL_IMPROVEMENTS, hir_id, sp, |lint| {\n                     lint.build(msg)\n                         .span_suggestion(\n                             sp,", "previous_filename": "src/librustdoc/passes/automatic_links.rs"}, {"sha": "761ec31feca9521f3c6bb1132f66dff744360ff5", "filename": "src/test/rustdoc-ui/url-improvements.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60caf51b0de940705e7679a26343f6dcbe470a54/src%2Ftest%2Frustdoc-ui%2Furl-improvements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60caf51b0de940705e7679a26343f6dcbe470a54/src%2Ftest%2Frustdoc-ui%2Furl-improvements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Furl-improvements.rs?ref=60caf51b0de940705e7679a26343f6dcbe470a54", "patch": "@@ -1,4 +1,4 @@\n-#![deny(automatic_links)]\n+#![deny(url_improvements)]\n \n /// [http://a.com](http://a.com)\n //~^ ERROR unneeded long form for URL\n@@ -53,7 +53,7 @@ pub fn c() {}\n /// [b]: http://b.com\n pub fn everything_is_fine_here() {}\n \n-#[allow(automatic_links)]\n+#[allow(url_improvements)]\n pub mod foo {\n     /// https://somewhere.com/a?hello=12&bye=11#xyz\n     pub fn bar() {}", "previous_filename": "src/test/rustdoc-ui/automatic-links.rs"}, {"sha": "7ef287dfd11ad7fb06b9eff986a1fd5793cf22ba", "filename": "src/test/rustdoc-ui/url-improvements.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60caf51b0de940705e7679a26343f6dcbe470a54/src%2Ftest%2Frustdoc-ui%2Furl-improvements.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/60caf51b0de940705e7679a26343f6dcbe470a54/src%2Ftest%2Frustdoc-ui%2Furl-improvements.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Furl-improvements.stderr?ref=60caf51b0de940705e7679a26343f6dcbe470a54", "patch": "@@ -7,8 +7,8 @@ LL | /// [http://a.com](http://a.com)\n note: the lint level is defined here\n   --> $DIR/automatic-links.rs:1:9\n    |\n-LL | #![deny(automatic_links)]\n-   |         ^^^^^^^^^^^^^^^\n+LL | #![deny(url_improvements)]\n+   |         ^^^^^^^^^^^^^^^^\n \n error: unneeded long form for URL\n   --> $DIR/automatic-links.rs:5:5", "previous_filename": "src/test/rustdoc-ui/automatic-links.stderr"}]}