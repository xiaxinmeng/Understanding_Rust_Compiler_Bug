{"sha": "c04e838eb5ccce90a08d13bc31e8f94fdf6826bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNGU4MzhlYjVjY2NlOTBhMDhkMTNiYzMxZThmOTRmZGY2ODI2YmQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-05-27T08:50:04Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-05-27T08:50:04Z"}, "message": "Rollup merge of #33870 - jseyfried:ice-issue-33569, r=pnkfelix\n\nFix ICE on parsing a bad metavariable in a macro definition\n\nFixes #33569, fixes #33728.\nr? @pnkfelix", "tree": {"sha": "7bda97325836d2031eb13feb31ffb59b1e49696f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bda97325836d2031eb13feb31ffb59b1e49696f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c04e838eb5ccce90a08d13bc31e8f94fdf6826bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c04e838eb5ccce90a08d13bc31e8f94fdf6826bd", "html_url": "https://github.com/rust-lang/rust/commit/c04e838eb5ccce90a08d13bc31e8f94fdf6826bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c04e838eb5ccce90a08d13bc31e8f94fdf6826bd/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43b430ed356ac651b109aeb010a6d2c6c9864a63", "url": "https://api.github.com/repos/rust-lang/rust/commits/43b430ed356ac651b109aeb010a6d2c6c9864a63", "html_url": "https://github.com/rust-lang/rust/commit/43b430ed356ac651b109aeb010a6d2c6c9864a63"}, {"sha": "5b82c5f369fa9b7ab8ace58b3112e44ff5a1d388", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b82c5f369fa9b7ab8ace58b3112e44ff5a1d388", "html_url": "https://github.com/rust-lang/rust/commit/5b82c5f369fa9b7ab8ace58b3112e44ff5a1d388"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "9f4a773973ec265482f1e0b1b7aafd68dc06f4cb", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c04e838eb5ccce90a08d13bc31e8f94fdf6826bd/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c04e838eb5ccce90a08d13bc31e8f94fdf6826bd/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=c04e838eb5ccce90a08d13bc31e8f94fdf6826bd", "patch": "@@ -2702,7 +2702,10 @@ impl<'a> Parser<'a> {\n                     return Ok(TokenTree::Token(sp, SpecialVarNt(SpecialMacroVar::CrateMacroVar)));\n                 } else {\n                     sp = mk_sp(sp.lo, self.span.hi);\n-                    self.parse_ident()?\n+                    self.parse_ident().unwrap_or_else(|mut e| {\n+                        e.emit();\n+                        keywords::Invalid.ident()\n+                    })\n                 }\n             }\n             token::SubstNt(name) => {\n@@ -2807,14 +2810,14 @@ impl<'a> Parser<'a> {\n                 let span = Span { hi: close_span.hi, ..pre_span };\n \n                 match self.token {\n-                    // Correct delmiter.\n+                    // Correct delimiter.\n                     token::CloseDelim(d) if d == delim => {\n                         self.open_braces.pop().unwrap();\n \n                         // Parse the close delimiter.\n                         self.bump();\n                     }\n-                    // Incorect delimiter.\n+                    // Incorrect delimiter.\n                     token::CloseDelim(other) => {\n                         let token_str = self.this_token_to_string();\n                         let mut err = self.diagnostic().struct_span_err(self.span,\n@@ -2829,9 +2832,9 @@ impl<'a> Parser<'a> {\n \n                         self.open_braces.pop().unwrap();\n \n-                        // If the incorrect delimter matches an earlier opening\n+                        // If the incorrect delimiter matches an earlier opening\n                         // delimiter, then don't consume it (it can be used to\n-                        // close the earlier one)Otherwise, consume it.\n+                        // close the earlier one). Otherwise, consume it.\n                         // E.g., we try to recover from:\n                         // fn foo() {\n                         //     bar(baz(\n@@ -2845,7 +2848,7 @@ impl<'a> Parser<'a> {\n                         // and an error emitted then. Thus we don't pop from\n                         // self.open_braces here.\n                     },\n-                    _ => unreachable!(),\n+                    _ => {}\n                 }\n \n                 Ok(TokenTree::Delimited(span, Rc::new(Delimited {\n@@ -2859,7 +2862,7 @@ impl<'a> Parser<'a> {\n                 // invariants: the current token is not a left-delimiter,\n                 // not an EOF, and not the desired right-delimiter (if\n                 // it were, parse_seq_to_before_end would have prevented\n-                // reaching this point.\n+                // reaching this point).\n                 maybe_whole!(deref self, NtTT);\n                 match self.token {\n                     token::CloseDelim(_) => {"}, {"sha": "130278d778ab0a6415b78c12c42bb2b769589d62", "filename": "src/test/parse-fail/issue-33569.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c04e838eb5ccce90a08d13bc31e8f94fdf6826bd/src%2Ftest%2Fparse-fail%2Fissue-33569.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c04e838eb5ccce90a08d13bc31e8f94fdf6826bd/src%2Ftest%2Fparse-fail%2Fissue-33569.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-33569.rs?ref=c04e838eb5ccce90a08d13bc31e8f94fdf6826bd", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z no-analysis\n+\n+macro_rules! foo {\n+    { $+ } => { //~ ERROR expected identifier, found `+`\n+        $(x)(y) //~ ERROR expected `*` or `+`\n+                //~^ ERROR no rules expected the token `y`\n+    }\n+}"}]}