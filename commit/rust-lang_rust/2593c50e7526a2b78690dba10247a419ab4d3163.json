{"sha": "2593c50e7526a2b78690dba10247a419ab4d3163", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1OTNjNTBlNzUyNmEyYjc4NjkwZGJhMTAyNDdhNDE5YWI0ZDMxNjM=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-07-27T14:52:49Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-07-27T14:52:49Z"}, "message": "Re-format some obj dtors that were messed up by the pretty-printer", "tree": {"sha": "d5dc97411248c8d8b5b74f0478a8eb78fe092d7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5dc97411248c8d8b5b74f0478a8eb78fe092d7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2593c50e7526a2b78690dba10247a419ab4d3163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2593c50e7526a2b78690dba10247a419ab4d3163", "html_url": "https://github.com/rust-lang/rust/commit/2593c50e7526a2b78690dba10247a419ab4d3163", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2593c50e7526a2b78690dba10247a419ab4d3163/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0334faef1fd37dd6f358984904d0772bcf70e4c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0334faef1fd37dd6f358984904d0772bcf70e4c6", "html_url": "https://github.com/rust-lang/rust/commit/0334faef1fd37dd6f358984904d0772bcf70e4c6"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "16a3efc06b8b902a724b9b07283c52c5407c7ae4", "filename": "src/comp/lib/llvm.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2593c50e7526a2b78690dba10247a419ab4d3163/src%2Fcomp%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2593c50e7526a2b78690dba10247a419ab4d3163/src%2Fcomp%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Flib%2Fllvm.rs?ref=2593c50e7526a2b78690dba10247a419ab4d3163", "patch": "@@ -1554,8 +1554,8 @@ fn fn_ty_param_tys(fn_ty: TypeRef) -> TypeRef[] {\n \n /* Memory-managed interface to target data. */\n \n-obj target_data_dtor(TD: TargetDataRef)\n-    {drop { llvm::LLVMDisposeTargetData(TD); }\n+obj target_data_dtor(TD: TargetDataRef) {\n+    drop { llvm::LLVMDisposeTargetData(TD); }\n }\n \n type target_data = {lltd: TargetDataRef, dtor: target_data_dtor};\n@@ -1567,8 +1567,8 @@ fn mk_target_data(string_rep: str) -> target_data {\n \n /* Memory-managed interface to pass managers. */\n \n-obj pass_manager_dtor(PM: PassManagerRef)\n-    {drop { llvm::LLVMDisposePassManager(PM); }\n+obj pass_manager_dtor(PM: PassManagerRef) {\n+    drop { llvm::LLVMDisposePassManager(PM); }\n }\n \n type pass_manager = {llpm: PassManagerRef, dtor: pass_manager_dtor};\n@@ -1580,8 +1580,8 @@ fn mk_pass_manager() -> pass_manager {\n \n /* Memory-managed interface to object files. */\n \n-obj object_file_dtor(ObjectFile: ObjectFileRef)\n-    {drop { llvm::LLVMDisposeObjectFile(ObjectFile); }\n+obj object_file_dtor(ObjectFile: ObjectFileRef) {\n+    drop { llvm::LLVMDisposeObjectFile(ObjectFile); }\n }\n \n type object_file = {llof: ObjectFileRef, dtor: object_file_dtor};\n@@ -1593,8 +1593,8 @@ fn mk_object_file(llmb: MemoryBufferRef) -> object_file {\n \n /* Memory-managed interface to section iterators. */\n \n-obj section_iter_dtor(SI: SectionIteratorRef)\n-    {drop { llvm::LLVMDisposeSectionIterator(SI); }\n+obj section_iter_dtor(SI: SectionIteratorRef) {\n+    drop { llvm::LLVMDisposeSectionIterator(SI); }\n }\n \n type section_iter = {llsi: SectionIteratorRef, dtor: section_iter_dtor};"}, {"sha": "9e085ec03526d6ee64b2298d392cf4726747308c", "filename": "src/lib/io.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2593c50e7526a2b78690dba10247a419ab4d3163/src%2Flib%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2593c50e7526a2b78690dba10247a419ab4d3163/src%2Flib%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fio.rs?ref=2593c50e7526a2b78690dba10247a419ab4d3163", "patch": "@@ -70,7 +70,8 @@ obj FILE_buf_reader(f: os::libc::FILE, must_close: bool) {\n     }\n     fn tell() -> uint {\n         ret os::libc::ftell(f) as uint;\n-    }drop { if must_close { os::libc::fclose(f); } }\n+    }\n+    drop { if must_close { os::libc::fclose(f); } }\n }\n \n \n@@ -248,7 +249,8 @@ obj FILE_writer(f: os::libc::FILE, must_close: bool) {\n     }\n     fn tell() -> uint {\n         ret os::libc::ftell(f) as uint;\n-    }drop { if must_close { os::libc::fclose(f); } }\n+    }\n+    drop { if must_close { os::libc::fclose(f); } }\n }\n \n obj fd_buf_writer(fd: int, must_close: bool) {\n@@ -274,7 +276,8 @@ obj fd_buf_writer(fd: int, must_close: bool) {\n     fn tell() -> uint {\n         log_err \"need 64-bit native calls for tell, sorry\";\n         fail;\n-    }drop { if must_close { os::libc::close(fd); } }\n+    }\n+    drop { if must_close { os::libc::close(fd); } }\n }\n \n fn file_buf_writer(path: str, flags: vec[fileflag]) -> buf_writer {"}, {"sha": "5ceba6d9a77108a88c51c71f5eb73ad56001f5d2", "filename": "src/lib/run_program.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2593c50e7526a2b78690dba10247a419ab4d3163/src%2Flib%2Frun_program.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2593c50e7526a2b78690dba10247a419ab4d3163/src%2Flib%2Frun_program.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Frun_program.rs?ref=2593c50e7526a2b78690dba10247a419ab4d3163", "patch": "@@ -73,11 +73,12 @@ fn start_program(prog: str, args: vec[str]) -> @program {\n             finished = true;\n             self.close_input();\n             ret os::waitpid(pid);\n-        }drop {\n-             self.close_input();\n-             if !finished { os::waitpid(pid); }\n-             os::libc::fclose(out_file);\n-         }\n+        }\n+        drop {\n+            self.close_input();\n+            if !finished { os::waitpid(pid); }\n+            os::libc::fclose(out_file);\n+        }\n     }\n     ret @new_program(pid, pipe_input.out, os::fd_FILE(pipe_output.in), false);\n }"}]}