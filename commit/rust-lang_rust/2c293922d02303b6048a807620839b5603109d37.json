{"sha": "2c293922d02303b6048a807620839b5603109d37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMjkzOTIyZDAyMzAzYjYwNDhhODA3NjIwODM5YjU2MDMxMDlkMzc=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-04T05:49:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-04T05:49:30Z"}, "message": "Rollup merge of #45681 - Ljzn:patch-1, r=kennytm\n\nFix typo.", "tree": {"sha": "01197683770f93fd381399c7d42bbfa38501939f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01197683770f93fd381399c7d42bbfa38501939f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c293922d02303b6048a807620839b5603109d37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c293922d02303b6048a807620839b5603109d37", "html_url": "https://github.com/rust-lang/rust/commit/2c293922d02303b6048a807620839b5603109d37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c293922d02303b6048a807620839b5603109d37/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1815265510dee8d04e13bbce14971bc247b86251", "url": "https://api.github.com/repos/rust-lang/rust/commits/1815265510dee8d04e13bbce14971bc247b86251", "html_url": "https://github.com/rust-lang/rust/commit/1815265510dee8d04e13bbce14971bc247b86251"}, {"sha": "bf95f9f1853dc09e7f3c667cdf22e6eb64b48a2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf95f9f1853dc09e7f3c667cdf22e6eb64b48a2f", "html_url": "https://github.com/rust-lang/rust/commit/bf95f9f1853dc09e7f3c667cdf22e6eb64b48a2f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "dbf1fb1367dda257ecb88aa7118f0be03f1b0f80", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c293922d02303b6048a807620839b5603109d37/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c293922d02303b6048a807620839b5603109d37/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=2c293922d02303b6048a807620839b5603109d37", "patch": "@@ -114,7 +114,7 @@ impl<T, A: Alloc> RawVec<T, A> {\n impl<T> RawVec<T, Heap> {\n     /// Creates the biggest possible RawVec (on the system heap)\n     /// without allocating. If T has positive size, then this makes a\n-    /// RawVec with capacity 0. If T has 0 size, then it it makes a\n+    /// RawVec with capacity 0. If T has 0 size, then it makes a\n     /// RawVec with capacity `usize::MAX`. Useful for implementing\n     /// delayed allocation.\n     pub fn new() -> Self {"}]}