{"sha": "1b8979c8c7fc03bd5b9a686d87b6970232099fd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiODk3OWM4YzdmYzAzYmQ1YjlhNjg2ZDg3YjY5NzAyMzIwOTlmZDY=", "commit": {"author": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2020-03-18T11:16:37Z"}, "committer": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2020-03-18T12:14:23Z"}, "message": "Add an optional message to abort", "tree": {"sha": "3af8465d6ae75959a6382eced1704ff59820db18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3af8465d6ae75959a6382eced1704ff59820db18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b8979c8c7fc03bd5b9a686d87b6970232099fd6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl5yEJ8ZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqf+7+D/4pa5QsV22GhXRiBo47lJCk\nVh5ExvfLB07nxPmUFew/DDIrynth0oKMOL55MWScREe+TDuNX24BCe7JWvUBoNIk\nqF97uwKIA86fYxOwyG3jKvILnOPDqscsnzxnEM+xzjLaMQlY+slzjqIsNtkSNBA1\niw+NxtTNADQqNduKttDO4/MJ0WVJYZvuHSVeoSiFJfp8RZR4QGCiyKP0h22O0sj9\nQgDqyDoT26yjBHYRaRI7Kkyz4xzDtkCwYRlN4OqVdi1H4aAaUCv597y9MAvXCTC0\nCX8pDydfj9pwR8Q4VVJr/rWdkzF6eeNnPl2SbFY128i1uelGGKd1siYdddcqFlnU\nt/q2X49AgNmGa4dRdQxCNtKNkfDrPahJD+xD43SbL1uw6LhC1pAtv+unjSFeqgmB\nmzFduxtCHIrPQSIteSb5CZk5Q8HhKOiYtIR21m7z8kHyxoF4JJ/lwyq/I1eNpeI2\nSPJZp7KWQcZvoRxJjjFi8Epaidc3MZfQigCLPNi9CdBA3TJE3pWPau1ZYDSvT3zP\nzpxNbZGQxz9I0vdO8DiFDm9EyKXYLuE1S+nwZpX5+U8Yeve3vkdspkVJVDyZx601\n2ml20IAS9/DEF8NBMZopsSJXaibnVrp04PecD9h5+pRpPNSogNb31TOUnKie8TR8\nxeD0iecLAn32jDhtZjKDpg==\n=jPlZ\n-----END PGP SIGNATURE-----", "payload": "tree 3af8465d6ae75959a6382eced1704ff59820db18\nparent 9082cc406abf2ff520dc8b073330850edb5489e7\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1584530197 +0200\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1584533663 +0200\n\nAdd an optional message to abort\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b8979c8c7fc03bd5b9a686d87b6970232099fd6", "html_url": "https://github.com/rust-lang/rust/commit/1b8979c8c7fc03bd5b9a686d87b6970232099fd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b8979c8c7fc03bd5b9a686d87b6970232099fd6/comments", "author": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9082cc406abf2ff520dc8b073330850edb5489e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9082cc406abf2ff520dc8b073330850edb5489e7", "html_url": "https://github.com/rust-lang/rust/commit/9082cc406abf2ff520dc8b073330850edb5489e7"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "b2590a843ba9676ebb9b691060de71856d1e366d", "filename": "src/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b8979c8c7fc03bd5b9a686d87b6970232099fd6/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b8979c8c7fc03bd5b9a686d87b6970232099fd6/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=1b8979c8c7fc03bd5b9a686d87b6970232099fd6", "patch": "@@ -20,7 +20,8 @@ pub fn report_diagnostic<'tcx, 'mir>(\n             let info = info.downcast_ref::<TerminationInfo>().expect(\"invalid MachineStop payload\");\n             match info {\n                 TerminationInfo::Exit(code) => return Some(*code),\n-                TerminationInfo::Abort => format!(\"the evaluated program aborted execution\"),\n+                TerminationInfo::Abort(None) => format!(\"the evaluated program aborted execution\"),\n+                TerminationInfo::Abort(Some(msg)) => format!(\"the evaluated program aborted execution: {}\", msg),\n             }\n         }\n         err_unsup!(NoMirFor(..)) => format!("}, {"sha": "7d42db68943285da31cef57816519a7a863126cd", "filename": "src/eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b8979c8c7fc03bd5b9a686d87b6970232099fd6/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b8979c8c7fc03bd5b9a686d87b6970232099fd6/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=1b8979c8c7fc03bd5b9a686d87b6970232099fd6", "patch": "@@ -53,7 +53,7 @@ impl Default for MiriConfig {\n /// Details of premature program termination.\n pub enum TerminationInfo {\n     Exit(i64),\n-    Abort,\n+    Abort(Option<String>),\n }\n \n /// Returns a freshly created `InterpCx`, along with an `MPlaceTy` representing"}, {"sha": "3a8e7fc9024132e668e84edd0194982fb38eba0f", "filename": "src/machine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b8979c8c7fc03bd5b9a686d87b6970232099fd6/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b8979c8c7fc03bd5b9a686d87b6970232099fd6/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=1b8979c8c7fc03bd5b9a686d87b6970232099fd6", "patch": "@@ -273,7 +273,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'tcx> {\n \n     #[inline(always)]\n     fn abort(_ecx: &mut InterpCx<'mir, 'tcx, Self>) -> InterpResult<'tcx, !> {\n-        throw_machine_stop!(TerminationInfo::Abort)\n+        throw_machine_stop!(TerminationInfo::Abort(None))\n     }\n \n     #[inline(always)]"}]}