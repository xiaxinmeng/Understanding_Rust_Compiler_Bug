{"sha": "bb0a719434490a0805cdbbfe52ba8b47bc5ec211", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiMGE3MTk0MzQ0OTBhMDgwNWNkYmJmZTUyYmE4YjQ3YmM1ZWMyMTE=", "commit": {"author": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-11-07T03:31:56Z"}, "committer": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-11-07T03:31:56Z"}, "message": "Fix panic due to overly long borrow of RefCell\n\nCloses #18711", "tree": {"sha": "165e71acb097f01d6be75bf16fd9d0ac874a97bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/165e71acb097f01d6be75bf16fd9d0ac874a97bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb0a719434490a0805cdbbfe52ba8b47bc5ec211", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb0a719434490a0805cdbbfe52ba8b47bc5ec211", "html_url": "https://github.com/rust-lang/rust/commit/bb0a719434490a0805cdbbfe52ba8b47bc5ec211", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb0a719434490a0805cdbbfe52ba8b47bc5ec211/comments", "author": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45cbdec4174778bf915f17561ef971c068a7fcbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/45cbdec4174778bf915f17561ef971c068a7fcbc", "html_url": "https://github.com/rust-lang/rust/commit/45cbdec4174778bf915f17561ef971c068a7fcbc"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "8c73baf2b677057e6331e8445becb8e515b29582", "filename": "src/librustc/middle/trans/closure.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bb0a719434490a0805cdbbfe52ba8b47bc5ec211/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb0a719434490a0805cdbbfe52ba8b47bc5ec211/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs?ref=bb0a719434490a0805cdbbfe52ba8b47bc5ec211", "patch": "@@ -482,10 +482,9 @@ pub fn trans_unboxed_closure<'blk, 'tcx>(\n         bcx,\n         closure_id).unwrap();\n \n-    let unboxed_closures = bcx.tcx().unboxed_closures.borrow();\n-    let function_type = (*unboxed_closures)[closure_id]\n-                                        .closure_type\n-                                        .clone();\n+    let function_type = (*bcx.tcx().unboxed_closures.borrow())[closure_id]\n+                                                              .closure_type\n+                                                              .clone();\n     let function_type = ty::mk_closure(bcx.tcx(), function_type);\n \n     let freevars: Vec<ty::Freevar> ="}]}