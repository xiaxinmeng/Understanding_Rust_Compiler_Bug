{"sha": "b9d517296aaf8660ef279c83a82d5b0ce0d5b535", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5ZDUxNzI5NmFhZjg2NjBlZjI3OWM4M2E4MmQ1YjBjZTBkNWI1MzU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-20T06:27:31Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-20T06:30:15Z"}, "message": "doc: Update description of logging spec and ::rt module", "tree": {"sha": "2125d239a359447064d69b4770971ea79916ed69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2125d239a359447064d69b4770971ea79916ed69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9d517296aaf8660ef279c83a82d5b0ce0d5b535", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9d517296aaf8660ef279c83a82d5b0ce0d5b535", "html_url": "https://github.com/rust-lang/rust/commit/b9d517296aaf8660ef279c83a82d5b0ce0d5b535", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9d517296aaf8660ef279c83a82d5b0ce0d5b535/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f34c15c291b315f571c4f413e405bd6e4f573bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f34c15c291b315f571c4f413e405bd6e4f573bb", "html_url": "https://github.com/rust-lang/rust/commit/8f34c15c291b315f571c4f413e405bd6e4f573bb"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "bd3661e72fe4fd1927919ef39408f4cfcf5adefb", "filename": "doc/rust.md", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b9d517296aaf8660ef279c83a82d5b0ce0d5b535/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/b9d517296aaf8660ef279c83a82d5b0ce0d5b535/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=b9d517296aaf8660ef279c83a82d5b0ce0d5b535", "patch": "@@ -3268,17 +3268,26 @@ The runtime contains a system for directing [logging\n expressions](#log-expressions) to a logging console and/or internal logging\n buffers. Logging expressions can be enabled per module.\n \n-Logging output is enabled by setting the `RUST_LOG` environment variable.\n-`RUST_LOG` accepts a logging specification that is a comma-separated list of\n-paths. For each module containing log expressions, if `RUST_LOG` contains the\n-path to that module or a parent of that module, then its logs will be output\n-to the console. The path to an module consists of the crate name, any parent\n-modules, then the module itself, all separated by double colons (`::`).\n+Logging output is enabled by setting the `RUST_LOG` environment\n+variable.  `RUST_LOG` accepts a logging specification made up of a\n+comma-separated list of paths, with optional log levels. For each\n+module containing log expressions, if `RUST_LOG` contains the path to\n+that module or a parent of that module, then logs of the appropriate\n+level will be output to the console.\n+\n+The path to a module consists of the crate name, any parent modules,\n+then the module itself, all separated by double colons (`::`).  The\n+optional log level can be appended to the module path with an equals\n+sign (`=`) followed by the log level, from 0 to 3, inclusive. Level 0\n+is the error level, 1 is warning, 2 info, and 3 debug. Any logs\n+less than or equal to the specified level will be output. If not\n+specified then log level 3 is assumed.\n \n As an example, to see all the logs generated by the compiler, you would set\n `RUST_LOG` to `rustc`, which is the crate name (as specified in its `link`\n [attribute](#attributes)). To narrow down the logs to just crate resolution,\n-you would set it to `rustc::metadata::creader`.\n+you would set it to `rustc::metadata::creader`. To see just error logging\n+use `rustc=0`.\n \n Note that when compiling either `.rs` or `.rc` files that don't specifiy a\n crate name the crate is given a default name that matches the source file,\n@@ -3305,7 +3314,7 @@ of runtime logging modules follows.\n * `::rt::gc` Garbage collection\n * `::rt::stdlib` Functions used directly by the standard library\n * `::rt::kern` The runtime kernel\n-* `::rt::backtrace` Unused\n+* `::rt::backtrace` Log a backtrace on task failure\n * `::rt::callback` Unused\n \n "}]}