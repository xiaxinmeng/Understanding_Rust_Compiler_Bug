{"sha": "77cc0cddd9b0d90b2f7b68c6cb62d1eec33c9427", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3Y2MwY2RkZDliMGQ5MGIyZjdiNjhjNmNiNjJkMWVlYzMzYzk0Mjc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-09T09:22:30Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-19T07:25:08Z"}, "message": "add test for validation finding use-after-free", "tree": {"sha": "1bcaf1d795a234c1a517990cbb1d164770eb064b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bcaf1d795a234c1a517990cbb1d164770eb064b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77cc0cddd9b0d90b2f7b68c6cb62d1eec33c9427", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77cc0cddd9b0d90b2f7b68c6cb62d1eec33c9427", "html_url": "https://github.com/rust-lang/rust/commit/77cc0cddd9b0d90b2f7b68c6cb62d1eec33c9427", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77cc0cddd9b0d90b2f7b68c6cb62d1eec33c9427/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6e8773272a83b84b972910ca88570388ae06590", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e8773272a83b84b972910ca88570388ae06590", "html_url": "https://github.com/rust-lang/rust/commit/e6e8773272a83b84b972910ca88570388ae06590"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "46e17375a82828e31f584443dc3c713179c6bbd6", "filename": "tests/compile-fail/validity/dangling_ref3.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/77cc0cddd9b0d90b2f7b68c6cb62d1eec33c9427/tests%2Fcompile-fail%2Fvalidity%2Fdangling_ref3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77cc0cddd9b0d90b2f7b68c6cb62d1eec33c9427/tests%2Fcompile-fail%2Fvalidity%2Fdangling_ref3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Fdangling_ref3.rs?ref=77cc0cddd9b0d90b2f7b68c6cb62d1eec33c9427", "patch": "@@ -0,0 +1,10 @@\n+use std::mem;\n+\n+fn dangling() -> *const u8 {\n+    let x = 0u8;\n+    &x as *const _\n+}\n+\n+fn main() {\n+    let _x: &i32 = unsafe { mem::transmute(dangling()) }; //~ ERROR dangling reference (use-after-free)\n+}"}]}