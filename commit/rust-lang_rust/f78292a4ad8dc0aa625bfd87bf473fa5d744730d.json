{"sha": "f78292a4ad8dc0aa625bfd87bf473fa5d744730d", "node_id": "C_kwDOAAsO6NoAKGY3ODI5MmE0YWQ4ZGMwYWE2MjViZmQ4N2JmNDczZmE1ZDc0NDczMGQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-13T12:52:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-13T12:52:08Z"}, "message": "Auto merge of #9156 - Rqnsom:manual_flatten, r=Alexendoo\n\nfix [`manual_flatten`] help texts order\n\nfixes  #8948\n\nWhenever suggestion for this lint does not fit in one line,\nlegacy solution has some unexpected/unhandled behavior:\nlint will then generate two help messages which seem to be shown in the wrong order.\nThe second help message in that case will contain the suggestion.\n\nThe first help message always refers to a suggestion message,\nand **it should adapt** depending on the location of the suggestion:\n- inline suggestion within the error/warning message\n- suggestion separated into a second help text\n\nThis is my first contribution here, so I hope I didn't miss anything for creating this PR.\n\nchangelog: fix [`manual_flatten`] help texts order", "tree": {"sha": "ec29a427a415ed40ab74a92b758fb6cf58d30fcd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec29a427a415ed40ab74a92b758fb6cf58d30fcd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f78292a4ad8dc0aa625bfd87bf473fa5d744730d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f78292a4ad8dc0aa625bfd87bf473fa5d744730d", "html_url": "https://github.com/rust-lang/rust/commit/f78292a4ad8dc0aa625bfd87bf473fa5d744730d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f78292a4ad8dc0aa625bfd87bf473fa5d744730d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07ab0e87417e8cea018a34c7cd46fde0693d32a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/07ab0e87417e8cea018a34c7cd46fde0693d32a5", "html_url": "https://github.com/rust-lang/rust/commit/07ab0e87417e8cea018a34c7cd46fde0693d32a5"}, {"sha": "852c38c543d4b2cdea4af9fe8d5ddf229ebd1410", "url": "https://api.github.com/repos/rust-lang/rust/commits/852c38c543d4b2cdea4af9fe8d5ddf229ebd1410", "html_url": "https://github.com/rust-lang/rust/commit/852c38c543d4b2cdea4af9fe8d5ddf229ebd1410"}], "stats": {"total": 63, "additions": 59, "deletions": 4}, "files": [{"sha": "1d6ddf4b99f7b6835717672b238eb660547a4e45", "filename": "clippy_lints/src/loops/manual_flatten.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f78292a4ad8dc0aa625bfd87bf473fa5d744730d/clippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78292a4ad8dc0aa625bfd87bf473fa5d744730d/clippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs?ref=f78292a4ad8dc0aa625bfd87bf473fa5d744730d", "patch": "@@ -51,22 +51,32 @@ pub(super) fn check<'tcx>(\n                 _ => \"\"\n             };\n \n+            let sugg = format!(\"{arg_snippet}{copied}.flatten()\");\n+\n+            // If suggestion is not a one-liner, it won't be shown inline within the error message. In that case,\n+            // it will be shown in the extra `help` message at the end, which is why the first `help_msg` needs\n+            // to refer to the correct relative position of the suggestion.\n+            let help_msg = if sugg.contains('\\n') {\n+                \"remove the `if let` statement in the for loop and then...\"\n+            } else {\n+                \"...and remove the `if let` statement in the for loop\"\n+            };\n+\n             span_lint_and_then(\n                 cx,\n                 MANUAL_FLATTEN,\n                 span,\n                 &msg,\n                 |diag| {\n-                    let sugg = format!(\"{}{}.flatten()\", arg_snippet, copied);\n                     diag.span_suggestion(\n                         arg.span,\n                         \"try\",\n                         sugg,\n-                        Applicability::MaybeIncorrect,\n+                        applicability,\n                     );\n                     diag.span_help(\n                         inner_expr.span,\n-                        \"...and remove the `if let` statement in the for loop\",\n+                        help_msg,\n                     );\n                 }\n             );"}, {"sha": "9519c2e937901922e9aca2db97f9c151405aa0e6", "filename": "tests/lint_message_convention.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f78292a4ad8dc0aa625bfd87bf473fa5d744730d/tests%2Flint_message_convention.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78292a4ad8dc0aa625bfd87bf473fa5d744730d/tests%2Flint_message_convention.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Flint_message_convention.rs?ref=f78292a4ad8dc0aa625bfd87bf473fa5d744730d", "patch": "@@ -42,6 +42,7 @@ impl Message {\n             r\".*remove .*the return type...\",\n             r\"note: Clippy version: .*\",\n             r\"the compiler unexpectedly panicked. this is a bug.\",\n+            r\"remove the `if let` statement in the for loop and then...\",\n         ])\n         .unwrap();\n "}, {"sha": "d922593bc6f93445ab9b3fc7805692a4da2a6c31", "filename": "tests/ui/manual_flatten.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f78292a4ad8dc0aa625bfd87bf473fa5d744730d/tests%2Fui%2Fmanual_flatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78292a4ad8dc0aa625bfd87bf473fa5d744730d/tests%2Fui%2Fmanual_flatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_flatten.rs?ref=f78292a4ad8dc0aa625bfd87bf473fa5d744730d", "patch": "@@ -106,4 +106,20 @@ fn main() {\n     for n in vec![Some(1), Some(2), Some(3)].iter().flatten() {\n         println!(\"{}\", n);\n     }\n+\n+    run_unformatted_tests();\n+}\n+\n+#[rustfmt::skip]\n+fn run_unformatted_tests() {\n+    // Skip rustfmt here on purpose so the suggestion does not fit in one line\n+    for n in vec![\n+        Some(1),\n+        Some(2),\n+        Some(3)\n+    ].iter() {\n+        if let Some(n) = n {\n+            println!(\"{:?}\", n);\n+        }\n+    }\n }"}, {"sha": "da053c0566833618d5497711b314091575480b12", "filename": "tests/ui/manual_flatten.stderr", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f78292a4ad8dc0aa625bfd87bf473fa5d744730d/tests%2Fui%2Fmanual_flatten.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f78292a4ad8dc0aa625bfd87bf473fa5d744730d/tests%2Fui%2Fmanual_flatten.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_flatten.stderr?ref=f78292a4ad8dc0aa625bfd87bf473fa5d744730d", "patch": "@@ -167,5 +167,33 @@ LL | |             println!(\"{:?}\", n);\n LL | |         }\n    | |_________^\n \n-error: aborting due to 8 previous errors\n+error: unnecessary `if let` since only the `Some` variant of the iterator element is used\n+  --> $DIR/manual_flatten.rs:116:5\n+   |\n+LL | /     for n in vec![\n+LL | |         Some(1),\n+LL | |         Some(2),\n+LL | |         Some(3)\n+...  |\n+LL | |         }\n+LL | |     }\n+   | |_____^\n+   |\n+help: remove the `if let` statement in the for loop and then...\n+  --> $DIR/manual_flatten.rs:121:9\n+   |\n+LL | /         if let Some(n) = n {\n+LL | |             println!(\"{:?}\", n);\n+LL | |         }\n+   | |_________^\n+help: try\n+   |\n+LL ~     for n in vec![\n+LL +         Some(1),\n+LL +         Some(2),\n+LL +         Some(3)\n+LL ~     ].iter().flatten() {\n+   |\n+\n+error: aborting due to 9 previous errors\n "}]}