{"sha": "b05ab18aec28c5025212ad44a202072ed2f610d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwNWFiMThhZWMyOGM1MDI1MjEyYWQ0NGEyMDIwNzJlZDJmNjEwZDc=", "commit": {"author": {"name": "Thomas Bahn", "email": "thomas@thomas-bahn.net", "date": "2020-12-19T22:13:50Z"}, "committer": {"name": "Thomas Bahn", "email": "thomas@thomas-bahn.net", "date": "2020-12-20T12:11:07Z"}, "message": "Fix pretty printing an AST representing `&(mut ident)`\n\n`PatKind::Ref(PatKind::Ident(BindingMode::ByValue(Mutability::Mut), ..), ..)`\nis an AST representing `&(mut ident)`. It was errorneously printed as\n`&mut ident` which reparsed into a syntactically different AST.\n\nThis affected help diagnostics in the parser.", "tree": {"sha": "4c24cf8947c9ed79b37dde8d54b7d55215ad6cb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c24cf8947c9ed79b37dde8d54b7d55215ad6cb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b05ab18aec28c5025212ad44a202072ed2f610d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b05ab18aec28c5025212ad44a202072ed2f610d7", "html_url": "https://github.com/rust-lang/rust/commit/b05ab18aec28c5025212ad44a202072ed2f610d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b05ab18aec28c5025212ad44a202072ed2f610d7/comments", "author": null, "committer": null, "parents": [{"sha": "b1964e60b72c2d10e9fd4e801990f8af3f306ac0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1964e60b72c2d10e9fd4e801990f8af3f306ac0", "html_url": "https://github.com/rust-lang/rust/commit/b1964e60b72c2d10e9fd4e801990f8af3f306ac0"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "dcb6e115eda052873aca3fed5bec9b218d3787b0", "filename": "compiler/rustc_ast_pretty/src/pprust/state.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b05ab18aec28c5025212ad44a202072ed2f610d7/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b05ab18aec28c5025212ad44a202072ed2f610d7/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs?ref=b05ab18aec28c5025212ad44a202072ed2f610d7", "patch": "@@ -2420,7 +2420,15 @@ impl<'a> State<'a> {\n                 if mutbl == ast::Mutability::Mut {\n                     self.s.word(\"mut \");\n                 }\n-                self.print_pat(inner);\n+                if let PatKind::Ident(ast::BindingMode::ByValue(ast::Mutability::Mut), ..) =\n+                    inner.kind\n+                {\n+                    self.popen();\n+                    self.print_pat(inner);\n+                    self.pclose();\n+                } else {\n+                    self.print_pat(inner);\n+                }\n             }\n             PatKind::Lit(ref e) => self.print_expr(&**e),\n             PatKind::Range(ref begin, ref end, Spanned { node: ref end_kind, .. }) => {"}, {"sha": "a5e9b1db54679b85fefc5bab1e0695a09f0a5346", "filename": "src/test/ui/pattern/issue-80186-mut-binding-help-suggestion.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b05ab18aec28c5025212ad44a202072ed2f610d7/src%2Ftest%2Fui%2Fpattern%2Fissue-80186-mut-binding-help-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b05ab18aec28c5025212ad44a202072ed2f610d7/src%2Ftest%2Fui%2Fpattern%2Fissue-80186-mut-binding-help-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fissue-80186-mut-binding-help-suggestion.rs?ref=b05ab18aec28c5025212ad44a202072ed2f610d7", "patch": "@@ -0,0 +1,9 @@\n+// Regression test for correct pretty-printing of an AST representing `&(mut x)` in help\n+// suggestion diagnostic.\n+\n+fn main() {\n+    let mut &x = &0;\n+    //~^ ERROR `mut` must be attached to each individual binding\n+    //~| HELP add `mut` to each binding\n+    //~| SUGGESTION &(mut x)\n+}"}, {"sha": "75b6c163b2cc37b0820031d4fcee0fdb0989d76b", "filename": "src/test/ui/pattern/issue-80186-mut-binding-help-suggestion.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b05ab18aec28c5025212ad44a202072ed2f610d7/src%2Ftest%2Fui%2Fpattern%2Fissue-80186-mut-binding-help-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b05ab18aec28c5025212ad44a202072ed2f610d7/src%2Ftest%2Fui%2Fpattern%2Fissue-80186-mut-binding-help-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fissue-80186-mut-binding-help-suggestion.stderr?ref=b05ab18aec28c5025212ad44a202072ed2f610d7", "patch": "@@ -0,0 +1,10 @@\n+error: `mut` must be attached to each individual binding\n+  --> $DIR/issue-80186-mut-binding-help-suggestion.rs:5:9\n+   |\n+LL |     let mut &x = &0;\n+   |         ^^^^^^ help: add `mut` to each binding: `&(mut x)`\n+   |\n+   = note: `mut` may be followed by `variable` and `variable @ pattern`\n+\n+error: aborting due to previous error\n+"}]}