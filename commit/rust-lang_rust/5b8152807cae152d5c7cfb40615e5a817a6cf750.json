{"sha": "5b8152807cae152d5c7cfb40615e5a817a6cf750", "node_id": "C_kwDOAAsO6NoAKDViODE1MjgwN2NhZTE1MmQ1YzdjZmI0MDYxNWU1YTgxN2E2Y2Y3NTA", "commit": {"author": {"name": "Jhonny Bill Mena", "email": "jhonnybillm@gmail.com", "date": "2022-09-07T13:36:08Z"}, "committer": {"name": "Jhonny Bill Mena", "email": "jhonnybillm@gmail.com", "date": "2022-09-21T15:39:52Z"}, "message": "UPDATE - move SessionDiagnostic from rustc_session to rustc_errors", "tree": {"sha": "4550b129bfedd6ac5b9535f8d889fb0174fff56f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4550b129bfedd6ac5b9535f8d889fb0174fff56f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b8152807cae152d5c7cfb40615e5a817a6cf750", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b8152807cae152d5c7cfb40615e5a817a6cf750", "html_url": "https://github.com/rust-lang/rust/commit/5b8152807cae152d5c7cfb40615e5a817a6cf750", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b8152807cae152d5c7cfb40615e5a817a6cf750/comments", "author": {"login": "JhonnyBillM", "id": 18747072, "node_id": "MDQ6VXNlcjE4NzQ3MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/18747072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JhonnyBillM", "html_url": "https://github.com/JhonnyBillM", "followers_url": "https://api.github.com/users/JhonnyBillM/followers", "following_url": "https://api.github.com/users/JhonnyBillM/following{/other_user}", "gists_url": "https://api.github.com/users/JhonnyBillM/gists{/gist_id}", "starred_url": "https://api.github.com/users/JhonnyBillM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JhonnyBillM/subscriptions", "organizations_url": "https://api.github.com/users/JhonnyBillM/orgs", "repos_url": "https://api.github.com/users/JhonnyBillM/repos", "events_url": "https://api.github.com/users/JhonnyBillM/events{/privacy}", "received_events_url": "https://api.github.com/users/JhonnyBillM/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JhonnyBillM", "id": 18747072, "node_id": "MDQ6VXNlcjE4NzQ3MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/18747072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JhonnyBillM", "html_url": "https://github.com/JhonnyBillM", "followers_url": "https://api.github.com/users/JhonnyBillM/followers", "following_url": "https://api.github.com/users/JhonnyBillM/following{/other_user}", "gists_url": "https://api.github.com/users/JhonnyBillM/gists{/gist_id}", "starred_url": "https://api.github.com/users/JhonnyBillM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JhonnyBillM/subscriptions", "organizations_url": "https://api.github.com/users/JhonnyBillM/orgs", "repos_url": "https://api.github.com/users/JhonnyBillM/repos", "events_url": "https://api.github.com/users/JhonnyBillM/events{/privacy}", "received_events_url": "https://api.github.com/users/JhonnyBillM/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b79b7d8b4e0f2b112142a9ce1fea335f321a6558", "url": "https://api.github.com/repos/rust-lang/rust/commits/b79b7d8b4e0f2b112142a9ce1fea335f321a6558", "html_url": "https://github.com/rust-lang/rust/commit/b79b7d8b4e0f2b112142a9ce1fea335f321a6558"}], "stats": {"total": 63, "additions": 33, "deletions": 30}, "files": [{"sha": "ed8400391c28d6381edba68631c66f7d0c2d2b4e", "filename": "compiler/rustc_attr/src/session_diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_attr%2Fsrc%2Fsession_diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_attr%2Fsrc%2Fsession_diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2Fsrc%2Fsession_diagnostics.rs?ref=5b8152807cae152d5c7cfb40615e5a817a6cf750", "patch": "@@ -1,11 +1,11 @@\n use std::num::IntErrorKind;\n \n use rustc_ast as ast;\n+use rustc_errors::SessionDiagnostic;\n use rustc_errors::{\n     error_code, fluent, Applicability, DiagnosticBuilder, ErrorGuaranteed, Handler,\n };\n use rustc_macros::SessionDiagnostic;\n-use rustc_session::SessionDiagnostic;\n use rustc_span::{Span, Symbol};\n \n use crate::UnsupportedLiteralReason;"}, {"sha": "71e21373d0da155a3d11a5c8b4633e92fe489996", "filename": "compiler/rustc_errors/src/diagnostic_builder.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs?ref=5b8152807cae152d5c7cfb40615e5a817a6cf750", "patch": "@@ -13,6 +13,15 @@ use std::marker::PhantomData;\n use std::ops::{Deref, DerefMut};\n use std::thread::panicking;\n \n+/// Trait implemented by error types. This should not be implemented manually. Instead, use\n+/// `#[derive(SessionDiagnostic)]` -- see [rustc_macros::SessionDiagnostic].\n+#[rustc_diagnostic_item = \"SessionDiagnostic\"]\n+pub trait SessionDiagnostic<'a, T: EmissionGuarantee = ErrorGuaranteed> {\n+    /// Write out as a diagnostic out of `Handler`.\n+    #[must_use]\n+    fn into_diagnostic(self, handler: &'a Handler) -> DiagnosticBuilder<'a, T>;\n+}\n+\n /// Used for emitting structured error messages and other diagnostic information.\n ///\n /// If there is some state in a downstream crate you would like to"}, {"sha": "3549d3c4999285b30d9cc2411d85739a94192f70", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=5b8152807cae152d5c7cfb40615e5a817a6cf750", "patch": "@@ -60,6 +60,7 @@ mod snippet;\n mod styled_buffer;\n pub mod translation;\n \n+pub use diagnostic_builder::SessionDiagnostic;\n pub use snippet::Style;\n \n pub type PResult<'a, T> = Result<T, DiagnosticBuilder<'a, ErrorGuaranteed>>;"}, {"sha": "11598ea0fff6f9399c18e1e5dcd5f4c69a49a5f5", "filename": "compiler/rustc_expand/src/base.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbase.rs?ref=5b8152807cae152d5c7cfb40615e5a817a6cf750", "patch": "@@ -10,11 +10,13 @@ use rustc_ast::{self as ast, AttrVec, Attribute, HasAttrs, Item, NodeId, PatKind\n use rustc_attr::{self as attr, Deprecation, Stability};\n use rustc_data_structures::fx::{FxHashSet, FxIndexMap};\n use rustc_data_structures::sync::{self, Lrc};\n-use rustc_errors::{Applicability, DiagnosticBuilder, ErrorGuaranteed, MultiSpan, PResult};\n+use rustc_errors::{\n+    Applicability, DiagnosticBuilder, ErrorGuaranteed, MultiSpan, PResult, SessionDiagnostic,\n+};\n use rustc_lint_defs::builtin::PROC_MACRO_BACK_COMPAT;\n use rustc_lint_defs::{BufferedEarlyLint, BuiltinLintDiagnostics};\n use rustc_parse::{self, parser, MACRO_ARGUMENTS};\n-use rustc_session::{parse::ParseSess, Limit, Session, SessionDiagnostic};\n+use rustc_session::{parse::ParseSess, Limit, Session};\n use rustc_span::def_id::{CrateNum, DefId, LocalDefId};\n use rustc_span::edition::Edition;\n use rustc_span::hygiene::{AstPass, ExpnData, ExpnKind, LocalExpnId};"}, {"sha": "dccd3f3a1ccd5018cfa48d93189c650b003021ed", "filename": "compiler/rustc_infer/src/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=5b8152807cae152d5c7cfb40615e5a817a6cf750", "patch": "@@ -4,6 +4,7 @@ use crate::errors::{\n };\n use crate::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use crate::infer::InferCtxt;\n+use rustc_errors::SessionDiagnostic;\n use rustc_errors::{DiagnosticBuilder, ErrorGuaranteed, IntoDiagnosticArg};\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n@@ -18,7 +19,6 @@ use rustc_middle::ty::print::{FmtPrinter, PrettyPrinter, Print, Printer};\n use rustc_middle::ty::{self, DefIdTree, InferConst};\n use rustc_middle::ty::{GenericArg, GenericArgKind, SubstsRef};\n use rustc_middle::ty::{IsSuggestable, Ty, TyCtxt, TypeckResults};\n-use rustc_session::SessionDiagnostic;\n use rustc_span::symbol::{kw, Ident};\n use rustc_span::{BytePos, Span};\n use std::borrow::Cow;"}, {"sha": "ac98948189ba1185e69a5a1fad333cd9064f2023", "filename": "compiler/rustc_lint/src/errors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs?ref=5b8152807cae152d5c7cfb40615e5a817a6cf750", "patch": "@@ -1,6 +1,6 @@\n-use rustc_errors::{fluent, AddSubdiagnostic, ErrorGuaranteed, Handler};\n+use rustc_errors::{fluent, AddSubdiagnostic, ErrorGuaranteed, Handler, SessionDiagnostic};\n use rustc_macros::{SessionDiagnostic, SessionSubdiagnostic};\n-use rustc_session::{lint::Level, SessionDiagnostic};\n+use rustc_session::lint::Level;\n use rustc_span::{Span, Symbol};\n \n #[derive(SessionDiagnostic)]"}, {"sha": "891b6a118ded55f52535b852e05cc9f295fc5624", "filename": "compiler/rustc_macros/src/diagnostics/diagnostic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fdiagnostic.rs?ref=5b8152807cae152d5c7cfb40615e5a817a6cf750", "patch": "@@ -82,7 +82,7 @@ impl<'a> SessionDiagnosticDerive<'a> {\n \n         structure.gen_impl(quote! {\n             gen impl<'__session_diagnostic_sess, G>\n-                    rustc_session::SessionDiagnostic<'__session_diagnostic_sess, G>\n+                    rustc_errors::SessionDiagnostic<'__session_diagnostic_sess, G>\n                     for @Self\n                 where G: rustc_errors::EmissionGuarantee\n             {"}, {"sha": "8cbcadb625a7af93b9ab414e44f5209f3b5603bc", "filename": "compiler/rustc_metadata/src/errors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_metadata%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_metadata%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Ferrors.rs?ref=5b8152807cae152d5c7cfb40615e5a817a6cf750", "patch": "@@ -3,9 +3,9 @@ use std::{\n     path::{Path, PathBuf},\n };\n \n-use rustc_errors::{error_code, ErrorGuaranteed};\n+use rustc_errors::{error_code, ErrorGuaranteed, SessionDiagnostic};\n use rustc_macros::SessionDiagnostic;\n-use rustc_session::{config, SessionDiagnostic};\n+use rustc_session::config;\n use rustc_span::{sym, Span, Symbol};\n use rustc_target::spec::{PanicStrategy, TargetTriple};\n "}, {"sha": "883380dca08a212a0ac0d337fb1a9acd9b21d939", "filename": "compiler/rustc_monomorphize/src/errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_monomorphize%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_monomorphize%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Ferrors.rs?ref=5b8152807cae152d5c7cfb40615e5a817a6cf750", "patch": "@@ -1,8 +1,8 @@\n use std::path::PathBuf;\n \n use rustc_errors::ErrorGuaranteed;\n+use rustc_errors::SessionDiagnostic;\n use rustc_macros::{LintDiagnostic, SessionDiagnostic};\n-use rustc_session::SessionDiagnostic;\n use rustc_span::Span;\n \n #[derive(SessionDiagnostic)]"}, {"sha": "bb93f1cc260c1b413e4fbf633113b9e35a77902f", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=5b8152807cae152d5c7cfb40615e5a817a6cf750", "patch": "@@ -36,10 +36,10 @@ use rustc_ast::{AnonConst, BinOp, BinOpKind, FnDecl, FnRetTy, MacCall, Param, Ty\n use rustc_ast::{Arm, Async, BlockCheckMode, Expr, ExprKind, Label, Movability, RangeLimits};\n use rustc_ast::{ClosureBinder, StmtKind};\n use rustc_ast_pretty::pprust;\n+use rustc_errors::SessionDiagnostic;\n use rustc_errors::{Applicability, Diagnostic, PResult};\n use rustc_session::lint::builtin::BREAK_WITH_LABEL_AND_LOOP;\n use rustc_session::lint::BuiltinLintDiagnostics;\n-use rustc_session::SessionDiagnostic;\n use rustc_span::source_map::{self, Span, Spanned};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::{BytePos, Pos};"}, {"sha": "705305ff80690e0eedb1fe4b4bc984ca7a58080f", "filename": "compiler/rustc_query_system/src/query/job.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fjob.rs?ref=5b8152807cae152d5c7cfb40615e5a817a6cf750", "patch": "@@ -3,9 +3,11 @@ use crate::query::plumbing::CycleError;\n use crate::query::{QueryContext, QueryStackFrame};\n \n use rustc_data_structures::fx::FxHashMap;\n-use rustc_errors::{Diagnostic, DiagnosticBuilder, ErrorGuaranteed, Handler, Level};\n+use rustc_errors::{\n+    Diagnostic, DiagnosticBuilder, ErrorGuaranteed, Handler, Level, SessionDiagnostic,\n+};\n use rustc_hir::def::DefKind;\n-use rustc_session::{Session, SessionDiagnostic};\n+use rustc_session::Session;\n use rustc_span::Span;\n \n use std::hash::Hash;"}, {"sha": "564629a6703bf5bc3b70463ea4847ac46278f2ee", "filename": "compiler/rustc_session/src/parse.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_session%2Fsrc%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_session%2Fsrc%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fparse.rs?ref=5b8152807cae152d5c7cfb40615e5a817a6cf750", "patch": "@@ -6,14 +6,13 @@ use crate::errors::{FeatureDiagnosticForIssue, FeatureDiagnosticHelp, FeatureGat\n use crate::lint::{\n     builtin::UNSTABLE_SYNTAX_PRE_EXPANSION, BufferedEarlyLint, BuiltinLintDiagnostics, Lint, LintId,\n };\n-use crate::SessionDiagnostic;\n use rustc_ast::node_id::NodeId;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexSet};\n use rustc_data_structures::sync::{Lock, Lrc};\n use rustc_errors::{emitter::SilentEmitter, ColorConfig, Handler};\n use rustc_errors::{\n     fallback_fluent_bundle, Applicability, Diagnostic, DiagnosticBuilder, DiagnosticId,\n-    DiagnosticMessage, EmissionGuarantee, ErrorGuaranteed, MultiSpan, StashKey,\n+    DiagnosticMessage, EmissionGuarantee, ErrorGuaranteed, MultiSpan, SessionDiagnostic, StashKey,\n };\n use rustc_feature::{find_feature_issue, GateIssue, UnstableFeatures};\n use rustc_span::edition::Edition;"}, {"sha": "6a5a89747df5ac1c0f60a62b69f97d15c06324c2", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=5b8152807cae152d5c7cfb40615e5a817a6cf750", "patch": "@@ -28,7 +28,7 @@ use rustc_errors::json::JsonEmitter;\n use rustc_errors::registry::Registry;\n use rustc_errors::{\n     error_code, fallback_fluent_bundle, DiagnosticBuilder, DiagnosticId, DiagnosticMessage,\n-    EmissionGuarantee, ErrorGuaranteed, FluentBundle, Handler, LazyFallbackBundle, MultiSpan,\n+    ErrorGuaranteed, FluentBundle, LazyFallbackBundle, MultiSpan, SessionDiagnostic,\n };\n use rustc_macros::HashStable_Generic;\n pub use rustc_span::def_id::StableCrateId;\n@@ -223,15 +223,6 @@ pub struct PerfStats {\n     pub normalize_projection_ty: AtomicUsize,\n }\n \n-/// Trait implemented by error types. This should not be implemented manually. Instead, use\n-/// `#[derive(SessionDiagnostic)]` -- see [rustc_macros::SessionDiagnostic].\n-#[rustc_diagnostic_item = \"SessionDiagnostic\"]\n-pub trait SessionDiagnostic<'a, T: EmissionGuarantee = ErrorGuaranteed> {\n-    /// Write out as a diagnostic out of `Handler`.\n-    #[must_use]\n-    fn into_diagnostic(self, handler: &'a Handler) -> DiagnosticBuilder<'a, T>;\n-}\n-\n impl Session {\n     pub fn miri_unleashed_feature(&self, span: Span, feature_gate: Option<Symbol>) {\n         self.miri_unleashed_features.lock().push((span, feature_gate));"}, {"sha": "dc7078d9ada3c0d93fa9ac725556223ed9c861fb", "filename": "compiler/rustc_trait_selection/src/errors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_trait_selection%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_trait_selection%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ferrors.rs?ref=5b8152807cae152d5c7cfb40615e5a817a6cf750", "patch": "@@ -1,7 +1,7 @@\n-use rustc_errors::{fluent, ErrorGuaranteed, Handler};\n+use rustc_errors::{fluent, ErrorGuaranteed, Handler, SessionDiagnostic};\n use rustc_macros::SessionDiagnostic;\n use rustc_middle::ty::{PolyTraitRef, Ty, Unevaluated};\n-use rustc_session::{Limit, SessionDiagnostic};\n+use rustc_session::Limit;\n use rustc_span::{Span, Symbol};\n \n #[derive(SessionDiagnostic)]"}, {"sha": "ed4c4f688bf188f984b14bb72fab5d1e364227b4", "filename": "compiler/rustc_typeck/src/errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_typeck%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8152807cae152d5c7cfb40615e5a817a6cf750/compiler%2Frustc_typeck%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Ferrors.rs?ref=5b8152807cae152d5c7cfb40615e5a817a6cf750", "patch": "@@ -1,8 +1,8 @@\n //! Errors emitted by typeck.\n+use rustc_errors::SessionDiagnostic;\n use rustc_errors::{error_code, Applicability, DiagnosticBuilder, ErrorGuaranteed, Handler};\n use rustc_macros::{LintDiagnostic, SessionDiagnostic, SessionSubdiagnostic};\n use rustc_middle::ty::Ty;\n-use rustc_session::SessionDiagnostic;\n use rustc_span::{symbol::Ident, Span, Symbol};\n \n #[derive(SessionDiagnostic)]"}, {"sha": "3b31a290449c9425b0f15659cf79b99245c826d2", "filename": "src/test/ui-fulldeps/internal-lints/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5b8152807cae152d5c7cfb40615e5a817a6cf750/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b8152807cae152d5c7cfb40615e5a817a6cf750/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.rs?ref=5b8152807cae152d5c7cfb40615e5a817a6cf750", "patch": "@@ -12,10 +12,9 @@ extern crate rustc_session;\n extern crate rustc_span;\n \n use rustc_errors::{\n-    AddSubdiagnostic, Diagnostic, DiagnosticBuilder, ErrorGuaranteed, Handler, fluent\n+    AddSubdiagnostic, SessionDiagnostic, Diagnostic, DiagnosticBuilder, ErrorGuaranteed, Handler, fluent\n };\n use rustc_macros::{SessionDiagnostic, SessionSubdiagnostic};\n-use rustc_session::SessionDiagnostic;\n use rustc_span::Span;\n \n #[derive(SessionDiagnostic)]"}]}