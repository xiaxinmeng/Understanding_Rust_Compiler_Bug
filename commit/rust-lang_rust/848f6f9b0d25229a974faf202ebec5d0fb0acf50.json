{"sha": "848f6f9b0d25229a974faf202ebec5d0fb0acf50", "node_id": "C_kwDOAAsO6NoAKDg0OGY2ZjliMGQyNTIyOWE5NzRmYWYyMDJlYmVjNWQwZmIwYWNmNTA", "commit": {"author": {"name": "James Farrell", "email": "jamesfarrell@google.com", "date": "2023-02-28T20:37:05Z"}, "committer": {"name": "James Farrell", "email": "jamesfarrell@google.com", "date": "2023-02-28T20:37:05Z"}, "message": "Add a new config flag, dist.include-mingw-linker.\n\nThe flag controls whether to copy the linker, DLLs, and various\nlibraries from MinGW into the rustc toolchain.\n\nIt applies only when the host or target is pc-windows-gnu.\n\nThe flag is true by default to preserve existing behavior.", "tree": {"sha": "d60b4dcf630a85fc238e649960ebf101298f580b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d60b4dcf630a85fc238e649960ebf101298f580b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/848f6f9b0d25229a974faf202ebec5d0fb0acf50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/848f6f9b0d25229a974faf202ebec5d0fb0acf50", "html_url": "https://github.com/rust-lang/rust/commit/848f6f9b0d25229a974faf202ebec5d0fb0acf50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/848f6f9b0d25229a974faf202ebec5d0fb0acf50/comments", "author": {"login": "jfgoog", "id": 83229348, "node_id": "MDQ6VXNlcjgzMjI5MzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/83229348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfgoog", "html_url": "https://github.com/jfgoog", "followers_url": "https://api.github.com/users/jfgoog/followers", "following_url": "https://api.github.com/users/jfgoog/following{/other_user}", "gists_url": "https://api.github.com/users/jfgoog/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfgoog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfgoog/subscriptions", "organizations_url": "https://api.github.com/users/jfgoog/orgs", "repos_url": "https://api.github.com/users/jfgoog/repos", "events_url": "https://api.github.com/users/jfgoog/events{/privacy}", "received_events_url": "https://api.github.com/users/jfgoog/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jfgoog", "id": 83229348, "node_id": "MDQ6VXNlcjgzMjI5MzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/83229348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfgoog", "html_url": "https://github.com/jfgoog", "followers_url": "https://api.github.com/users/jfgoog/followers", "following_url": "https://api.github.com/users/jfgoog/following{/other_user}", "gists_url": "https://api.github.com/users/jfgoog/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfgoog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfgoog/subscriptions", "organizations_url": "https://api.github.com/users/jfgoog/orgs", "repos_url": "https://api.github.com/users/jfgoog/repos", "events_url": "https://api.github.com/users/jfgoog/events{/privacy}", "received_events_url": "https://api.github.com/users/jfgoog/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31f858d9a511f24fedb8ed997b28304fec809630", "url": "https://api.github.com/repos/rust-lang/rust/commits/31f858d9a511f24fedb8ed997b28304fec809630", "html_url": "https://github.com/rust-lang/rust/commit/31f858d9a511f24fedb8ed997b28304fec809630"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "d66143aa92de578524b4eb88b2c9c169747396c5", "filename": "config.toml.example", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/848f6f9b0d25229a974faf202ebec5d0fb0acf50/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/848f6f9b0d25229a974faf202ebec5d0fb0acf50/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=848f6f9b0d25229a974faf202ebec5d0fb0acf50", "patch": "@@ -669,6 +669,10 @@ changelog-seen = 2\n # Build compiler with the optimization enabled and -Zvalidate-mir, currently only for `std`\n #validate-mir-opts = 3\n \n+# Copy the linker, DLLs, and various libraries from MinGW into the rustc toolchain.\n+# Only applies when the host or target is pc-windows-gnu.\n+#include-mingw-linker = true\n+\n # =============================================================================\n # Options for specific targets\n #"}, {"sha": "5c69ae37720ec84d3ca5c8752f84d6bc062f7e49", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/848f6f9b0d25229a974faf202ebec5d0fb0acf50/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/848f6f9b0d25229a974faf202ebec5d0fb0acf50/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=848f6f9b0d25229a974faf202ebec5d0fb0acf50", "patch": "@@ -192,6 +192,7 @@ pub struct Config {\n     pub dist_sign_folder: Option<PathBuf>,\n     pub dist_upload_addr: Option<String>,\n     pub dist_compression_formats: Option<Vec<String>>,\n+    pub dist_include_mingw_linker: bool,\n \n     // libstd features\n     pub backtrace: bool, // support for RUST_BACKTRACE\n@@ -704,6 +705,7 @@ define_config! {\n         src_tarball: Option<bool> = \"src-tarball\",\n         missing_tools: Option<bool> = \"missing-tools\",\n         compression_formats: Option<Vec<String>> = \"compression-formats\",\n+        include_mingw_linker: Option<bool> = \"include-mingw-linker\",\n     }\n }\n \n@@ -821,6 +823,7 @@ impl Config {\n         config.rust_codegen_backends = vec![INTERNER.intern_str(\"llvm\")];\n         config.deny_warnings = true;\n         config.bindir = \"bin\".into();\n+        config.dist_include_mingw_linker = true;\n \n         // set by build.rs\n         config.build = TargetSelection::from_user(&env!(\"BUILD_TRIPLE\"));\n@@ -1311,6 +1314,7 @@ impl Config {\n             config.dist_compression_formats = t.compression_formats;\n             set(&mut config.rust_dist_src, t.src_tarball);\n             set(&mut config.missing_tools, t.missing_tools);\n+            set(&mut config.dist_include_mingw_linker, t.include_mingw_linker)\n         }\n \n         if let Some(r) = build.rustfmt {"}, {"sha": "3eed0f30be4c419ba141295816508eb39904fb5d", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/848f6f9b0d25229a974faf202ebec5d0fb0acf50/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/848f6f9b0d25229a974faf202ebec5d0fb0acf50/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=848f6f9b0d25229a974faf202ebec5d0fb0acf50", "patch": "@@ -322,7 +322,7 @@ impl Step for Mingw {\n     /// without any extra installed software (e.g., we bundle gcc, libraries, etc).\n     fn run(self, builder: &Builder<'_>) -> Option<GeneratedTarball> {\n         let host = self.host;\n-        if !host.ends_with(\"pc-windows-gnu\") {\n+        if !host.ends_with(\"pc-windows-gnu\") || !builder.config.dist_include_mingw_linker {\n             return None;\n         }\n \n@@ -378,7 +378,7 @@ impl Step for Rustc {\n         // anything requiring us to distribute a license, but it's likely the\n         // install will *also* include the rust-mingw package, which also needs\n         // licenses, so to be safe we just include it here in all MinGW packages.\n-        if host.ends_with(\"pc-windows-gnu\") {\n+        if host.ends_with(\"pc-windows-gnu\") && builder.config.dist_include_mingw_linker {\n             make_win_dist(tarball.image_dir(), &tmpdir(builder), host, builder);\n             tarball.add_dir(builder.src.join(\"src/etc/third-party\"), \"share/doc\");\n         }"}]}