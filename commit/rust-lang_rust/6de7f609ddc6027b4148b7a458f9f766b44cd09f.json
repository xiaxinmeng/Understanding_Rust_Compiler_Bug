{"sha": "6de7f609ddc6027b4148b7a458f9f766b44cd09f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkZTdmNjA5ZGRjNjAyN2I0MTQ4YjdhNDU4ZjlmNzY2YjQ0Y2QwOWY=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2015-08-23T18:10:22Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2015-08-24T18:02:09Z"}, "message": "Atomically open files with O_CLOEXEC where possible\n\nOn Linux the flag is just ignored if it is not supported:\nhttps://lwn.net/Articles/588444/\n\nTouches #24237.", "tree": {"sha": "821d3b0671a88cca79620466c3ec0de794851976", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/821d3b0671a88cca79620466c3ec0de794851976"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6de7f609ddc6027b4148b7a458f9f766b44cd09f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6de7f609ddc6027b4148b7a458f9f766b44cd09f", "html_url": "https://github.com/rust-lang/rust/commit/6de7f609ddc6027b4148b7a458f9f766b44cd09f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6de7f609ddc6027b4148b7a458f9f766b44cd09f/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63ba780fd7ab506bfd0f92d34a39172b412cfbe1", "url": "https://api.github.com/repos/rust-lang/rust/commits/63ba780fd7ab506bfd0f92d34a39172b412cfbe1", "html_url": "https://github.com/rust-lang/rust/commit/63ba780fd7ab506bfd0f92d34a39172b412cfbe1"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "a3950376fcbf742a97fe79fa3efd24bc0c8ff894", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6de7f609ddc6027b4148b7a458f9f766b44cd09f/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6de7f609ddc6027b4148b7a458f9f766b44cd09f/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=6de7f609ddc6027b4148b7a458f9f766b44cd09f", "patch": "@@ -102,6 +102,7 @@ pub use types::os::arch::extra::*;\n pub use consts::os::c95::*;\n pub use consts::os::posix88::*;\n pub use consts::os::posix01::*;\n+pub use consts::os::posix08::*;\n pub use consts::os::bsd44::*;\n pub use consts::os::extra::*;\n \n@@ -3608,6 +3609,8 @@ pub mod consts {\n             pub const RUSAGE_THREAD: c_int = 1;\n         }\n         pub mod posix08 {\n+            use types::os::arch::c95::c_int;\n+            pub const O_CLOEXEC: c_int = 0x80000;\n         }\n         #[cfg(any(target_arch = \"arm\",\n                   target_arch = \"aarch64\",\n@@ -4267,7 +4270,15 @@ pub mod consts {\n             pub const RUSAGE_CHILDREN: c_int = -1;\n             pub const RUSAGE_THREAD: c_int = 1;\n         }\n+        #[cfg(target_os = \"freebsd\")]\n         pub mod posix08 {\n+            use types::os::arch::c95::c_int;\n+            pub const O_CLOEXEC: c_int = 0x100000;\n+        }\n+        #[cfg(target_os = \"dragonfly\")]\n+        pub mod posix08 {\n+            use types::os::arch::c95::c_int;\n+            pub const O_CLOEXEC: c_int = 0x20000;\n         }\n         pub mod bsd44 {\n             use types::os::arch::c95::c_int;\n@@ -4710,7 +4721,15 @@ pub mod consts {\n             pub const RUSAGE_CHILDREN: c_int = -1;\n             pub const RUSAGE_THREAD: c_int = 1;\n         }\n+        #[cfg(any(target_os = \"bitrig\", target_os = \"openbsd\"))]\n         pub mod posix08 {\n+            use types::os::arch::c95::c_int;\n+            pub const O_CLOEXEC: c_int = 0x10000;\n+        }\n+        #[cfg(target_os = \"netbsd\")]\n+        pub mod posix08 {\n+            use types::os::arch::c95::c_int;\n+            pub const O_CLOEXEC: c_int = 0x400000;\n         }\n         pub mod bsd44 {\n             use types::os::arch::c95::c_int;\n@@ -5148,6 +5167,8 @@ pub mod consts {\n             pub const RUSAGE_THREAD: c_int = 1;\n         }\n         pub mod posix08 {\n+            use types::os::arch::c95::c_int;\n+            pub const O_CLOEXEC: c_int = 0x1000000;\n         }\n         pub mod bsd44 {\n             use types::os::arch::c95::c_int;"}, {"sha": "cbbdd223dc2b9530fa7473568efc9ea8e5c7f7b6", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6de7f609ddc6027b4148b7a458f9f766b44cd09f/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6de7f609ddc6027b4148b7a458f9f766b44cd09f/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=6de7f609ddc6027b4148b7a458f9f766b44cd09f", "patch": "@@ -212,7 +212,7 @@ impl DirEntry {\n impl OpenOptions {\n     pub fn new() -> OpenOptions {\n         OpenOptions {\n-            flags: 0,\n+            flags: libc::O_CLOEXEC,\n             read: false,\n             write: false,\n             mode: 0o666,\n@@ -269,6 +269,9 @@ impl File {\n             libc::open(path.as_ptr(), flags, opts.mode)\n         }));\n         let fd = FileDesc::new(fd);\n+        // Even though we open with the O_CLOEXEC flag, still set CLOEXEC here,\n+        // in case the open flag is not supported (it's just ignored by the OS\n+        // in that case).\n         fd.set_cloexec();\n         Ok(File(fd))\n     }"}]}