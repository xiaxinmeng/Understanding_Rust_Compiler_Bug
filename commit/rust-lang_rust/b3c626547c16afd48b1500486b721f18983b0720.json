{"sha": "b3c626547c16afd48b1500486b721f18983b0720", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzYzYyNjU0N2MxNmFmZDQ4YjE1MDA0ODZiNzIxZjE4OTgzYjA3MjA=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-16T06:06:25Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-16T08:52:33Z"}, "message": "Fix fallout in tests", "tree": {"sha": "ae3cff99df4123a900106a5d49a1cdd900dc95c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae3cff99df4123a900106a5d49a1cdd900dc95c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3c626547c16afd48b1500486b721f18983b0720", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3c626547c16afd48b1500486b721f18983b0720", "html_url": "https://github.com/rust-lang/rust/commit/b3c626547c16afd48b1500486b721f18983b0720", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3c626547c16afd48b1500486b721f18983b0720/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65ec4dfe61a70de869c2b62948af7d172c8ee612", "url": "https://api.github.com/repos/rust-lang/rust/commits/65ec4dfe61a70de869c2b62948af7d172c8ee612", "html_url": "https://github.com/rust-lang/rust/commit/65ec4dfe61a70de869c2b62948af7d172c8ee612"}], "stats": {"total": 141, "additions": 71, "deletions": 70}, "files": [{"sha": "03af0d51ec296350e73ba9aa9cc07a09aa734da9", "filename": "src/test/compile-fail/blind-item-block-item-shadow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fblind-item-block-item-shadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fblind-item-block-item-shadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fblind-item-block-item-shadow.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -14,7 +14,7 @@ fn main() {\n     {\n         struct Bar;\n         use foo::Bar;\n-        //~^ ERROR import `Bar` conflicts with type in this module\n-        //~^^ ERROR import `Bar` conflicts with value in this module\n+        //~^ ERROR a type named `Bar` has already been defined in this block\n+        //~^^ ERROR a value named `Bar` has already been defined in this block\n     }\n }"}, {"sha": "b08c78e9060dec4e2518424a178bb2858d829350", "filename": "src/test/compile-fail/blind-item-item-shadow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fblind-item-item-shadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fblind-item-item-shadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fblind-item-item-shadow.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-mod foo { pub mod foo {  } }\n+mod foo { pub mod foo {  } } //~ NOTE previous definition of `foo` here\n \n-use foo::foo; //~ ERROR import `foo` conflicts with existing submodule\n+use foo::foo; //~ ERROR a module named `foo` has already been defined in this module\n \n fn main() {}"}, {"sha": "a6793ee8b9fbda001b64993f792666074de93db0", "filename": "src/test/compile-fail/enum-and-module-in-same-scope.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fenum-and-module-in-same-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fenum-and-module-in-same-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fenum-and-module-in-same-scope.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -8,11 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-enum Foo {\n+enum Foo { //~ NOTE previous definition\n     X\n }\n \n-mod Foo { //~ ERROR duplicate definition of type or module `Foo`\n+mod Foo { //~ ERROR a type named `Foo` has already been defined\n     pub static X: isize = 42;\n     fn f() { f() } // Check that this does not result in a resolution error\n }"}, {"sha": "87b79b5cd67ebf97106acd297efbcf28ad1431bc", "filename": "src/test/compile-fail/issue-19498.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-19498.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-19498.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-19498.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -8,14 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use self::A; //~ ERROR import `A` conflicts with existing submodule\n-use self::B; //~ ERROR import `B` conflicts with existing submodule\n-mod A {}\n-pub mod B {}\n+use self::A; //~ NOTE previous import of `A` here\n+use self::B; //~ NOTE previous import of `B` here\n+mod A {} //~ ERROR a module named `A` has already been imported in this module\n+pub mod B {} //~ ERROR a module named `B` has already been imported in this module\n \n mod C {\n-    use C::D; //~ ERROR import `D` conflicts with existing submodule\n-    mod D {}\n+    use C::D; //~ NOTE previous import of `D` here\n+    mod D {} //~ ERROR a module named `D` has already been imported in this module\n }\n \n fn main() {}"}, {"sha": "11d05ceb9a019d220e4fab6f23fffe374e779945", "filename": "src/test/compile-fail/issue-21546.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-21546.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-21546.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-21546.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -12,54 +12,54 @@\n \n #[allow(non_snake_case)]\n mod Foo { }\n-//~^ NOTE first definition of type or module `Foo`\n+//~^ NOTE previous definition of `Foo` here\n \n #[allow(dead_code)]\n struct Foo;\n-//~^ ERROR duplicate definition of type or module `Foo`\n-\n+//~^ ERROR a module named `Foo` has already been defined in this module\n \n #[allow(non_snake_case)]\n mod Bar { }\n-//~^ NOTE first definition of type or module `Bar`\n+//~^ NOTE previous definition of `Bar` here\n \n #[allow(dead_code)]\n struct Bar(i32);\n-//~^ ERROR duplicate definition of type or module `Bar`\n+//~^ ERROR a module named `Bar` has already been defined\n \n \n #[allow(dead_code)]\n struct Baz(i32);\n-//~^ NOTE first definition of type or module\n+//~^ NOTE previous definition\n \n #[allow(non_snake_case)]\n mod Baz { }\n-//~^ ERROR duplicate definition of type or module `Baz`\n+//~^ ERROR a type named `Baz` has already been defined\n \n \n #[allow(dead_code)]\n struct Qux { x: bool }\n-//~^ NOTE first definition of type or module\n+//~^ NOTE previous definition\n \n #[allow(non_snake_case)]\n mod Qux { }\n-//~^ ERROR duplicate definition of type or module `Qux`\n+//~^ ERROR a type named `Qux` has already been defined\n \n \n #[allow(dead_code)]\n struct Quux;\n-//~^ NOTE first definition of type or module\n+//~^ NOTE previous definition\n \n #[allow(non_snake_case)]\n mod Quux { }\n-//~^ ERROR duplicate definition of type or module `Quux`\n+//~^ ERROR a type named `Quux` has already been defined\n \n \n #[allow(dead_code)]\n enum Corge { A, B }\n+//~^ NOTE previous definition\n \n #[allow(non_snake_case)]\n mod Corge { }\n-//~^ ERROR duplicate definition of type or module `Corge`\n+//~^ ERROR a type named `Corge` has already been defined\n \n fn main() { }"}, {"sha": "94fb30082892e2f9642b2e436ca84a523f4a1c1f", "filename": "src/test/compile-fail/issue-24081.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-24081.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-24081.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-24081.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -8,16 +8,16 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::ops::Add; //~ ERROR import `Add` conflicts with type in this module\n-use std::ops::Sub; //~ ERROR import `Sub` conflicts with type in this module\n-use std::ops::Mul; //~ ERROR import `Mul` conflicts with type in this module\n-use std::ops::Div; //~ ERROR import `Div` conflicts with existing submodule\n-use std::ops::Rem; //~ ERROR import `Rem` conflicts with trait in this module\n+use std::ops::Add; //~ NOTE previous import\n+use std::ops::Sub; //~ NOTE previous import\n+use std::ops::Mul; //~ NOTE previous import\n+use std::ops::Div; //~ NOTE previous import\n+use std::ops::Rem; //~ NOTE previous import\n \n-type Add = bool;\n-struct Sub { x: f32 }\n-enum Mul { A, B }\n-mod Div { }\n-trait Rem { }\n+type Add = bool; //~ ERROR a trait named `Add` has already been imported in this module\n+struct Sub { x: f32 } //~ ERROR a trait named `Sub` has already been imported in this module\n+enum Mul { A, B } //~ ERROR a trait named `Mul` has already been imported in this module\n+mod Div { } //~ ERROR a trait named `Div` has already been imported in this module\n+trait Rem {  } //~ ERROR a trait named `Rem` has already been imported in this module\n \n fn main() {}"}, {"sha": "ca5bd9c6717cf55f89f3834de6988fbb53a286f1", "filename": "src/test/compile-fail/issue-28472.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-28472.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-28472.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28472.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -13,10 +13,10 @@\n extern {\n   fn foo();\n \n-  pub //~ ERROR duplicate definition\n+  pub //~ ERROR a value named `foo` has already been defined\n   fn foo();\n \n-  pub //~ ERROR duplicate definition\n+  pub //~ ERROR a value named `foo` has already been defined\n   static mut foo: u32;\n }\n "}, {"sha": "cc7de01b0631ba1ed1b61db79735c4730ea63a83", "filename": "src/test/compile-fail/issue-3099-a.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-3099-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-3099-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3099-a.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -10,6 +10,6 @@\n \n enum a { b, c }\n \n-enum a { d, e } //~ ERROR duplicate definition of type or module `a`\n+enum a { d, e } //~ ERROR a type named `a` has already been defined in this module\n \n fn main() {}"}, {"sha": "ae667341022f61659eb8c2325054372c08fc94cb", "filename": "src/test/compile-fail/issue-3099-b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-3099-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-3099-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3099-b.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -10,6 +10,6 @@\n \n pub mod a {}\n \n-pub mod a {} //~ ERROR duplicate definition of type or module `a`\n+pub mod a {} //~ ERROR a module named `a` has already been defined in this module\n \n fn main() {}"}, {"sha": "34bc21833e59f5a3b434cc3c476c5e60ef7c15b1", "filename": "src/test/compile-fail/issue-3099.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-3099.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-3099.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3099.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -12,7 +12,7 @@ fn a(x: String) -> String {\n     format!(\"First function with {}\", x)\n }\n \n-fn a(x: String, y: String) -> String { //~ ERROR duplicate definition of value `a`\n+fn a(x: String, y: String) -> String { //~ ERROR a value named `a` has already been defined\n     format!(\"Second function with {} and {}\", x, y)\n }\n "}, {"sha": "c8021a229957f77227a9e95ed2146469d204d97e", "filename": "src/test/compile-fail/issue-6936.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-6936.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-6936.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-6936.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -12,17 +12,17 @@ struct T;\n \n mod t1 {\n     type Foo = ::T;\n-    mod Foo {} //~ ERROR: duplicate definition of type or module `Foo`\n+    mod Foo {} //~ ERROR: `Foo` has already been defined\n }\n \n mod t2 {\n     type Foo = ::T;\n-    struct Foo; //~ ERROR: duplicate definition of type or module `Foo`\n+    struct Foo; //~ ERROR: `Foo` has already been defined\n }\n \n mod t3 {\n     type Foo = ::T;\n-    enum Foo {} //~ ERROR: duplicate definition of type or module `Foo`\n+    enum Foo {} //~ ERROR: `Foo` has already been defined\n }\n \n mod t4 {\n@@ -32,7 +32,7 @@ mod t4 {\n \n mod t5 {\n     type Bar<T> = T;\n-    mod Bar {} //~ ERROR: duplicate definition of type or module `Bar`\n+    mod Bar {} //~ ERROR: `Bar` has already been defined\n }\n \n mod t6 {"}, {"sha": "06573bea13c1474abad123865dc43a75f3194f03", "filename": "src/test/compile-fail/issue-7044.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-7044.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-7044.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7044.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -9,6 +9,6 @@\n // except according to those terms.\n \n static X: isize = 0;\n-struct X; //~ ERROR error: duplicate definition of value `X`\n+struct X; //~ ERROR `X` has already been defined\n \n fn main() {}"}, {"sha": "e469e05a2444a798c85c561a3dd86936a61843f8", "filename": "src/test/compile-fail/issue-8640.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-8640.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fissue-8640.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-8640.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -12,8 +12,8 @@\n \n mod foo {\n     use baz::bar;\n-    //~^ ERROR import `bar` conflicts with existing submodule\n     mod bar {}\n+    //~^ ERROR a module named `bar` has already been imported\n }\n mod baz { pub mod bar {} }\n "}, {"sha": "f2a27dc528e6cf82da0b2498d0f657ecedfd2357", "filename": "src/test/compile-fail/no-std-inject.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fno-std-inject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fno-std-inject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-std-inject.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -10,7 +10,7 @@\n \n #![no_std]\n \n-extern crate core; //~ ERROR: an external crate named `core` has already\n+extern crate core; //~ ERROR: an extern crate named `core` has already\n extern crate std;\n \n fn main() {}"}, {"sha": "c05d0cc1b0e51ca7055d416ed18f60403077fad2", "filename": "src/test/compile-fail/resolve-conflict-extern-crate-vs-extern-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-extern-crate-vs-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-extern-crate-vs-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-extern-crate-vs-extern-crate.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -9,6 +9,6 @@\n // except according to those terms.\n \n extern crate std;\n-//~^ ERROR an external crate named `std` has already been imported\n+//~^ ERROR an extern crate named `std` has already been imported\n \n fn main(){}"}, {"sha": "6cbc728c03edcad6edbc800d26a91881eba3eff5", "filename": "src/test/compile-fail/resolve-conflict-import-vs-extern-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-extern-crate.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::slice as std; //~ ERROR import `std` conflicts with imported crate\n+use std::slice as std; //~ ERROR an extern crate named `std` has already been imported\n \n fn main() {\n }"}, {"sha": "b0954ee1571eee7d55f5514b7797867667241eb8", "filename": "src/test/compile-fail/resolve-conflict-item-vs-extern-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-extern-crate.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n fn std() {}\n-mod std {}    //~ ERROR the name `std` conflicts with an external crate\n+mod std {}    //~ ERROR an extern crate named `std` has already been imported\n \n fn main() {\n }"}, {"sha": "dbd1ecf44fd7312d7a776e2a0ba39e1cd5513bd5", "filename": "src/test/compile-fail/resolve-conflict-item-vs-import.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-import.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -9,9 +9,10 @@\n // except according to those terms.\n \n use std::mem::transmute;\n-//~^ ERROR import `transmute` conflicts with value in this module\n+//~^ NOTE previous import of `transmute` here\n \n fn transmute() {}\n+//~^ ERROR a value named `transmute` has already been imported in this module\n \n fn main() {\n }"}, {"sha": "aa7e47e223ff5a9ec04b268114a36f74bfcdf7af", "filename": "src/test/compile-fail/resolve-conflict-type-vs-import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-type-vs-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-type-vs-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-type-vs-import.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -9,9 +9,9 @@\n // except according to those terms.\n \n use std::slice::Iter;\n-//~^ ERROR import `Iter` conflicts with type in this module\n \n struct Iter;\n+//~^ ERROR a type named `Iter` has already been imported in this module\n \n fn main() {\n }"}, {"sha": "41700b25bbb726798de48eca9d0544c393220b56", "filename": "src/test/compile-fail/trait-duplicate-methods.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Ftrait-duplicate-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Ftrait-duplicate-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-duplicate-methods.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -9,8 +9,8 @@\n // except according to those terms.\n \n trait Foo {\n-    fn orange(&self);\n-    fn orange(&self);   //~ ERROR error: duplicate definition of value `orange`\n+    fn orange(&self); //~ NOTE previous definition of `orange` here\n+    fn orange(&self); //~ ERROR a value named `orange` has already been defined in this trait\n }\n \n fn main() {}"}, {"sha": "cc328d8c9e919bcd38dd9947e311208889bfc82b", "filename": "src/test/compile-fail/unresolved-extern-mod-suggestion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Funresolved-extern-mod-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Funresolved-extern-mod-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funresolved-extern-mod-suggestion.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -10,6 +10,6 @@\n \n extern crate core;\n use core;\n-//~^ ERROR import `core` conflicts with imported crate in this module\n+//~^ ERROR an extern crate named `core` has already been imported in this module\n \n fn main() {}"}, {"sha": "a8bb94b78fcc0a9940573dd903d3e394e67aa11d", "filename": "src/test/compile-fail/variant-namespacing.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fvariant-namespacing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c626547c16afd48b1500486b721f18983b0720/src%2Ftest%2Fcompile-fail%2Fvariant-namespacing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariant-namespacing.rs?ref=b3c626547c16afd48b1500486b721f18983b0720", "patch": "@@ -10,22 +10,6 @@\n \n // aux-build:variant-namespacing.rs\n \n-extern crate variant_namespacing;\n-pub use variant_namespacing::XE::*;\n-//~^ ERROR import `XStruct` conflicts with type in this module\n-//~| ERROR import `XStruct` conflicts with value in this module\n-//~| ERROR import `XTuple` conflicts with type in this module\n-//~| ERROR import `XTuple` conflicts with value in this module\n-//~| ERROR import `XUnit` conflicts with type in this module\n-//~| ERROR import `XUnit` conflicts with value in this module\n-pub use E::*;\n-//~^ ERROR import `Struct` conflicts with type in this module\n-//~| ERROR import `Struct` conflicts with value in this module\n-//~| ERROR import `Tuple` conflicts with type in this module\n-//~| ERROR import `Tuple` conflicts with value in this module\n-//~| ERROR import `Unit` conflicts with type in this module\n-//~| ERROR import `Unit` conflicts with value in this module\n-\n enum E {\n     Struct { a: u8 },\n     Tuple(u8),\n@@ -46,4 +30,20 @@ const XStruct: u8 = 0;\n const XTuple: u8 = 0;\n const XUnit: u8 = 0;\n \n+extern crate variant_namespacing;\n+pub use variant_namespacing::XE::*;\n+//~^ ERROR `XStruct` has already been defined\n+//~| ERROR `XStruct` has already been defined\n+//~| ERROR `XTuple` has already been defined\n+//~| ERROR `XTuple` has already been defined\n+//~| ERROR `XUnit` has already been defined\n+//~| ERROR `XUnit` has already been defined\n+pub use E::*;\n+//~^ ERROR `Struct` has already been defined\n+//~| ERROR `Struct` has already been defined\n+//~| ERROR `Tuple` has already been defined\n+//~| ERROR `Tuple` has already been defined\n+//~| ERROR `Unit` has already been defined\n+//~| ERROR `Unit` has already been defined\n+\n fn main() {}"}]}