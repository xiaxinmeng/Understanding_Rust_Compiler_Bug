{"sha": "e576c8c06c36f2602b9f3912dd24432e1624c99d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1NzZjOGMwNmMzNmYyNjAyYjlmMzkxMmRkMjQ0MzJlMTYyNGM5OWQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-24T17:25:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-24T17:25:45Z"}, "message": "Rollup merge of #57846 - QuietMisdreavus:proc-macro-links, r=GuillaumeGomez\n\nrustdoc: fix ICE from loading proc-macro stubs\n\nFixes https://github.com/rust-lang/rust/issues/55399\n\nWhen trying to resolve a macro, rustdoc first tries to load it from the resolver to see whether it's a Macros 2.0 macro, so it can return that Def before looking for any other kind of macro. However, this becomes a problem when you try to load proc-macros: since you can't use a proc-macro inside its own crate, this lookup also fails when attempting to link to it.\n\nHowever, we have a hint that this lookup will fail: Macros which are actually `ProcMacroStub`s will fail the lookup, so we can use that information to skip loading the macro. Rustdoc will then happily check `resolve.all_macros`, which will return a usable Def that we can link to.", "tree": {"sha": "4efd2bfd5730b62ace6418a0e1a3667650a7f50e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4efd2bfd5730b62ace6418a0e1a3667650a7f50e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e576c8c06c36f2602b9f3912dd24432e1624c99d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcSfUaCRBK7hj4Ov3rIwAAdHIIAIx6INQ6iZHtkW3C0uLJXLYa\nMRYv4Wq7O+NLuizXEuLEVjCoJ62XSyvo9lmhPivxh6TkxGw2JOOfu9+DaPCtpspd\nWKdkgEDlnwBoLXXPCRvPyI+fOMSIbOMTqYVGo0mQRYGyIegg1iiSqSU5OAR4hMuH\n3nB5lfTpVYPtByO9YA9ddawwop9sJLlcgNZIEraO5X5Lem/iMUJBMRWgqRzSRbqX\nevgS2CVmj2hk2I4E7f6v1AqHcsTDftPys/dtGdQ9d/S2k3kxneyq0Ax11SNZNRIm\nip8FAIuLXvTMx2KcTeaeHhhIrtRN/MTja02QYixeHTXBZajT+LuAz/b7JzuJV4E=\n=UVCo\n-----END PGP SIGNATURE-----\n", "payload": "tree 4efd2bfd5730b62ace6418a0e1a3667650a7f50e\nparent bea83213f3cf0293b0c7707ff1ddcdb6519e0d64\nparent b876694734cfc5919b8c12527c287aea1a8d8cfd\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1548350745 +0100\ncommitter GitHub <noreply@github.com> 1548350745 +0100\n\nRollup merge of #57846 - QuietMisdreavus:proc-macro-links, r=GuillaumeGomez\n\nrustdoc: fix ICE from loading proc-macro stubs\n\nFixes https://github.com/rust-lang/rust/issues/55399\n\nWhen trying to resolve a macro, rustdoc first tries to load it from the resolver to see whether it's a Macros 2.0 macro, so it can return that Def before looking for any other kind of macro. However, this becomes a problem when you try to load proc-macros: since you can't use a proc-macro inside its own crate, this lookup also fails when attempting to link to it.\n\nHowever, we have a hint that this lookup will fail: Macros which are actually `ProcMacroStub`s will fail the lookup, so we can use that information to skip loading the macro. Rustdoc will then happily check `resolve.all_macros`, which will return a usable Def that we can link to.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e576c8c06c36f2602b9f3912dd24432e1624c99d", "html_url": "https://github.com/rust-lang/rust/commit/e576c8c06c36f2602b9f3912dd24432e1624c99d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e576c8c06c36f2602b9f3912dd24432e1624c99d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bea83213f3cf0293b0c7707ff1ddcdb6519e0d64", "url": "https://api.github.com/repos/rust-lang/rust/commits/bea83213f3cf0293b0c7707ff1ddcdb6519e0d64", "html_url": "https://github.com/rust-lang/rust/commit/bea83213f3cf0293b0c7707ff1ddcdb6519e0d64"}, {"sha": "b876694734cfc5919b8c12527c287aea1a8d8cfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/b876694734cfc5919b8c12527c287aea1a8d8cfd", "html_url": "https://github.com/rust-lang/rust/commit/b876694734cfc5919b8c12527c287aea1a8d8cfd"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "13ad05101e4b66bfee470a363e3646b16a3c74f5", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e576c8c06c36f2602b9f3912dd24432e1624c99d/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e576c8c06c36f2602b9f3912dd24432e1624c99d/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=e576c8c06c36f2602b9f3912dd24432e1624c99d", "patch": "@@ -431,8 +431,12 @@ fn macro_resolve(cx: &DocContext, path_str: &str) -> Option<Def> {\n     let parent_scope = resolver.dummy_parent_scope();\n     if let Ok(def) = resolver.resolve_macro_to_def_inner(&path, MacroKind::Bang,\n                                                          &parent_scope, false, false) {\n-        if let SyntaxExtension::DeclMacro { .. } = *resolver.get_macro(def) {\n-            return Some(def);\n+        if let Def::Macro(_, MacroKind::ProcMacroStub) = def {\n+            // skip proc-macro stubs, they'll cause `get_macro` to crash\n+        } else {\n+            if let SyntaxExtension::DeclMacro { .. } = *resolver.get_macro(def) {\n+                return Some(def);\n+            }\n         }\n     }\n     if let Some(def) = resolver.all_macros.get(&Symbol::intern(path_str)) {"}, {"sha": "1e396f1be0e0440ce8c24e3b23bce3e26d780824", "filename": "src/test/rustdoc/proc-macro.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e576c8c06c36f2602b9f3912dd24432e1624c99d/src%2Ftest%2Frustdoc%2Fproc-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e576c8c06c36f2602b9f3912dd24432e1624c99d/src%2Ftest%2Frustdoc%2Fproc-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fproc-macro.rs?ref=e576c8c06c36f2602b9f3912dd24432e1624c99d", "patch": "@@ -4,6 +4,11 @@\n #![crate_type=\"proc-macro\"]\n #![crate_name=\"some_macros\"]\n \n+// @has some_macros/index.html\n+// @has - '//a/[@href=\"attr.some_proc_attr.html\"]' 'some_proc_attr'\n+\n+//! include a link to [some_proc_attr] to make sure it works.\n+\n extern crate proc_macro;\n \n use proc_macro::TokenStream;"}]}