{"sha": "911c178f038f53b9ac6d63b6ee8fa473a898161d", "node_id": "C_kwDOAAsO6NoAKDkxMWMxNzhmMDM4ZjUzYjlhYzZkNjNiNmVlOGZhNDczYTg5ODE2MWQ", "commit": {"author": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-09-13T21:38:28Z"}, "committer": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-09-13T22:16:14Z"}, "message": "Update issue-70935-complex-spans.rs", "tree": {"sha": "d8d0efa0bcc6df93232d1095c9b9ff534b915436", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8d0efa0bcc6df93232d1095c9b9ff534b915436"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/911c178f038f53b9ac6d63b6ee8fa473a898161d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/911c178f038f53b9ac6d63b6ee8fa473a898161d", "html_url": "https://github.com/rust-lang/rust/commit/911c178f038f53b9ac6d63b6ee8fa473a898161d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/911c178f038f53b9ac6d63b6ee8fa473a898161d/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5114cf38b123dd2aa50078a0e171c4d6eb8aadb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5114cf38b123dd2aa50078a0e171c4d6eb8aadb5", "html_url": "https://github.com/rust-lang/rust/commit/5114cf38b123dd2aa50078a0e171c4d6eb8aadb5"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "198de7bf79f3668394cd1fbe5f9a1bce88b59bf9", "filename": "src/test/ui/async-await/issue-70935-complex-spans.drop_tracking.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/911c178f038f53b9ac6d63b6ee8fa473a898161d/src%2Ftest%2Fui%2Fasync-await%2Fissue-70935-complex-spans.drop_tracking.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/911c178f038f53b9ac6d63b6ee8fa473a898161d/src%2Ftest%2Fui%2Fasync-await%2Fissue-70935-complex-spans.drop_tracking.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-70935-complex-spans.drop_tracking.stderr?ref=911c178f038f53b9ac6d63b6ee8fa473a898161d", "patch": "@@ -1,26 +1,26 @@\n error[E0277]: `Sender<i32>` cannot be shared between threads safely\n-  --> $DIR/issue-70935-complex-spans.rs:12:45\n+  --> $DIR/issue-70935-complex-spans.rs:13:45\n    |\n LL | fn foo(tx: std::sync::mpsc::Sender<i32>) -> impl Future + Send {\n    |                                             ^^^^^^^^^^^^^^^^^^ `Sender<i32>` cannot be shared between threads safely\n    |\n    = help: the trait `Sync` is not implemented for `Sender<i32>`\n    = note: required for `&Sender<i32>` to implement `Send`\n note: required because it's used within this closure\n-  --> $DIR/issue-70935-complex-spans.rs:16:13\n+  --> $DIR/issue-70935-complex-spans.rs:17:13\n    |\n LL |         baz(|| async{\n    |             ^^\n note: required because it's used within this `async fn` body\n-  --> $DIR/issue-70935-complex-spans.rs:9:67\n+  --> $DIR/issue-70935-complex-spans.rs:10:67\n    |\n LL |   async fn baz<T>(_c: impl FnMut() -> T) where T: Future<Output=()> {\n    |  ___________________________________________________________________^\n LL | | }\n    | |_^\n    = note: required because it captures the following types: `ResumeTy`, `impl for<'r, 's, 't0> Future<Output = ()>`, `()`\n note: required because it's used within this `async` block\n-  --> $DIR/issue-70935-complex-spans.rs:15:16\n+  --> $DIR/issue-70935-complex-spans.rs:16:16\n    |\n LL |       async move {\n    |  ________________^"}, {"sha": "34b31198e4f613a16a485e4d1d5a0ea144e7f9e8", "filename": "src/test/ui/async-await/issue-70935-complex-spans.no_drop_tracking.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/911c178f038f53b9ac6d63b6ee8fa473a898161d/src%2Ftest%2Fui%2Fasync-await%2Fissue-70935-complex-spans.no_drop_tracking.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/911c178f038f53b9ac6d63b6ee8fa473a898161d/src%2Ftest%2Fui%2Fasync-await%2Fissue-70935-complex-spans.no_drop_tracking.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-70935-complex-spans.no_drop_tracking.stderr?ref=911c178f038f53b9ac6d63b6ee8fa473a898161d", "patch": "@@ -1,22 +1,22 @@\n error: future cannot be sent between threads safely\n-  --> $DIR/issue-70935-complex-spans.rs:12:45\n+  --> $DIR/issue-70935-complex-spans.rs:13:45\n    |\n LL | fn foo(tx: std::sync::mpsc::Sender<i32>) -> impl Future + Send {\n    |                                             ^^^^^^^^^^^^^^^^^^ future created by async block is not `Send`\n    |\n    = help: the trait `Sync` is not implemented for `Sender<i32>`\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/issue-70935-complex-spans.rs:18:11\n+  --> $DIR/issue-70935-complex-spans.rs:19:11\n    |\n LL |           baz(|| async{\n    |  _____________-\n LL | |             foo(tx.clone());\n LL | |         }).await;\n    | |         - ^^^^^^ await occurs here, with the value maybe used later\n    | |_________|\n-   |           has type `[closure@$DIR/issue-70935-complex-spans.rs:16:13: 16:15]` which is not `Send`\n+   |           has type `[closure@$DIR/issue-70935-complex-spans.rs:17:13: 17:15]` which is not `Send`\n note: the value is later dropped here\n-  --> $DIR/issue-70935-complex-spans.rs:18:17\n+  --> $DIR/issue-70935-complex-spans.rs:19:17\n    |\n LL |         }).await;\n    |                 ^", "previous_filename": "src/test/ui/async-await/issue-70935-complex-spans.normal.stderr"}, {"sha": "b6d17f93a6675119914d4467741fea2fbcac046e", "filename": "src/test/ui/async-await/issue-70935-complex-spans.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/911c178f038f53b9ac6d63b6ee8fa473a898161d/src%2Ftest%2Fui%2Fasync-await%2Fissue-70935-complex-spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/911c178f038f53b9ac6d63b6ee8fa473a898161d/src%2Ftest%2Fui%2Fasync-await%2Fissue-70935-complex-spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-70935-complex-spans.rs?ref=911c178f038f53b9ac6d63b6ee8fa473a898161d", "patch": "@@ -1,5 +1,6 @@\n // edition:2018\n-// revisions: normal drop_tracking\n+// revisions: no_drop_tracking drop_tracking\n+// [no_drop_tracking]compile-flags:-Zdrop-tracking=no\n // [drop_tracking]compile-flags:-Zdrop-tracking\n // #70935: Check if we do not emit snippet\n // with newlines which lead complex diagnostics.\n@@ -10,7 +11,7 @@ async fn baz<T>(_c: impl FnMut() -> T) where T: Future<Output=()> {\n }\n \n fn foo(tx: std::sync::mpsc::Sender<i32>) -> impl Future + Send {\n-    //[normal]~^ ERROR future cannot be sent between threads safely\n+    //[no_drop_tracking]~^ ERROR future cannot be sent between threads safely\n     //[drop_tracking]~^^ ERROR `Sender<i32>` cannot be shared between threads\n     async move {\n         baz(|| async{"}]}