{"sha": "225a6a272d6fa9c945e9e55f2070f736844c2781", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNWE2YTI3MmQ2ZmE5Yzk0NWU5ZTU1ZjIwNzBmNzM2ODQ0YzI3ODE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-09T09:16:09Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-09T09:16:09Z"}, "message": "we already have the constant's type, no need to recompute from the def_id", "tree": {"sha": "54f3367b8cdecefd86c5d4de1049b2e2c21ff3af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54f3367b8cdecefd86c5d4de1049b2e2c21ff3af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/225a6a272d6fa9c945e9e55f2070f736844c2781", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXWTPZAAoJEFbW7qD8Z6xG7OUP/jbaSBWqz6WksF5pdXyquknr\neF26EW3XknMYjCOY+J49+uvyKZONBF3I0auwWrzXICpq6NNUnqzjzOLgJyJf3dEo\n5zB5ztbRW7HNvtTlagaD/VsXdrxZcMWjyFAhs5VElrXXWVa/LtEctlH726mpc8SL\nI2aaxPJRp0Hl0no+sf+BCNac6oM+8GGox4fud9lAvA607GsfYHLiofRLxpSwea5w\nMG4dhlZSO2/NypzRhMik88P6ErKBumSPT4Qd/SHQrDAF5lbRdFzV+O9optDymzTg\n1XhjXHnNYvCRQsWUMb04QuCbRJvMmcqvmnUhNphfzFdFkG79ohRnj+ttgWPH7GZK\nBhyksxgguZ6I+5GGAp0vaxROhysZ33g5880eip8kx8GDYBtYeLx6roHZo4/5mgYF\niR0Ve6Hum36jqtJ45cEB7UzMXZb5cAHCC3q43jDmatEfHtnoSfghYb8oaPw53kR0\noJhqAXM9/iJuKrza+uVRK4kzv1WjgoGS8sO1vFmCIb3FzNMrqJzoHdIencST9Ane\nRKY6ovXVodAsqLe0kb9bEn0h86HUCVtSR/vnOpMNxRKZ4muAr0WN5iL+RCLIroBU\nb1yxLuK0rSdlvOaJgjVgOUnI9IZ5Fu/trttWqQs7yev5GK47YYlFRsDf9rqk5haM\nxlpxKY65L3zI6sZEDWVX\n=f6lv\n-----END PGP SIGNATURE-----", "payload": "tree 54f3367b8cdecefd86c5d4de1049b2e2c21ff3af\nparent 59d858a0b142a718a771bdcc3c1f096e3ae01d5f\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465463769 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465463769 +0200\n\nwe already have the constant's type, no need to recompute from the def_id"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/225a6a272d6fa9c945e9e55f2070f736844c2781", "html_url": "https://github.com/rust-lang/rust/commit/225a6a272d6fa9c945e9e55f2070f736844c2781", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/225a6a272d6fa9c945e9e55f2070f736844c2781/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59d858a0b142a718a771bdcc3c1f096e3ae01d5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/59d858a0b142a718a771bdcc3c1f096e3ae01d5f", "html_url": "https://github.com/rust-lang/rust/commit/59d858a0b142a718a771bdcc3c1f096e3ae01d5f"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "15fa4cdd3b842c48a6b4ba945285f5ec38b747dc", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/225a6a272d6fa9c945e9e55f2070f736844c2781/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/225a6a272d6fa9c945e9e55f2070f736844c2781/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=225a6a272d6fa9c945e9e55f2070f736844c2781", "patch": "@@ -1184,13 +1184,12 @@ impl<'a, 'b, 'mir, 'tcx> FnEvalContext<'a, 'b, 'mir, 'tcx> {\n         use rustc::mir::repr::Operand::*;\n         match *op {\n             Consume(ref lvalue) => Ok(self.eval_lvalue(lvalue)?.to_ptr()),\n-            Constant(mir::Constant { ref literal, .. }) => {\n+            Constant(mir::Constant { ref literal, ty, .. }) => {\n                 use rustc::mir::repr::Literal::*;\n                 match *literal {\n                     Value { ref value } => Ok(self.const_to_ptr(value)?),\n                     Item { def_id, substs } => {\n-                        let item_ty = self.tcx.lookup_item_type(def_id).subst(self.tcx, substs);\n-                        if item_ty.ty.is_fn() {\n+                        if ty.is_fn() {\n                             Err(EvalError::Unimplemented(\"unimplemented: mentions of function items\".to_string()))\n                         } else {\n                             let cid = ConstantId {"}, {"sha": "587239fdf068db9a2dbe57ce1e9a2aab6986a58e", "filename": "src/interpreter/stepper.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/225a6a272d6fa9c945e9e55f2070f736844c2781/src%2Finterpreter%2Fstepper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/225a6a272d6fa9c945e9e55f2070f736844c2781/src%2Finterpreter%2Fstepper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fstepper.rs?ref=225a6a272d6fa9c945e9e55f2070f736844c2781", "patch": "@@ -8,7 +8,7 @@ use super::{\n };\n use error::EvalResult;\n use rustc::mir::repr as mir;\n-use rustc::ty::subst::{self, Subst};\n+use rustc::ty::subst;\n use rustc::hir::def_id::DefId;\n use rustc::mir::visit::{Visitor, LvalueContext};\n use syntax::codemap::Span;\n@@ -151,9 +151,10 @@ impl<'a, 'b, 'mir, 'tcx> Visitor<'tcx> for ConstantExtractor<'a, 'b, 'mir, 'tcx>\n             // already computed by rustc\n             mir::Literal::Value { .. } => {}\n             mir::Literal::Item { def_id, substs } => {\n-                let item_ty = self.gecx.tcx.lookup_item_type(def_id).subst(self.gecx.tcx, substs);\n-                if item_ty.ty.is_fn() {\n-                    // unimplemented\n+                if constant.ty.is_fn() {\n+                    // No need to do anything here, even if function pointers are implemented,\n+                    // because the type is the actual function, not the signature of the function.\n+                    // Thus we can simply create a zero sized allocation in `evaluate_operand`\n                 } else {\n                     self.static_item(def_id, substs, constant.span);\n                 }"}]}