{"sha": "dcc23217b7364056d5a83aaa058993ccd83b6e78", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjYzIzMjE3YjczNjQwNTZkNWE4M2FhYTA1ODk5M2NjZDgzYjZlNzg=", "commit": {"author": {"name": "DutchGhost", "email": "kasper199914@gmail.com", "date": "2020-03-16T12:24:59Z"}, "committer": {"name": "DutchGhost", "email": "kasper199914@gmail.com", "date": "2020-03-16T12:24:59Z"}, "message": "The const_forget_box was unused, and doesns't add anything to test by itself.", "tree": {"sha": "02720ffcf2ba37939c97b0efa99e094eb30303c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02720ffcf2ba37939c97b0efa99e094eb30303c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcc23217b7364056d5a83aaa058993ccd83b6e78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcc23217b7364056d5a83aaa058993ccd83b6e78", "html_url": "https://github.com/rust-lang/rust/commit/dcc23217b7364056d5a83aaa058993ccd83b6e78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcc23217b7364056d5a83aaa058993ccd83b6e78/comments", "author": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DutchGhost", "id": 25501014, "node_id": "MDQ6VXNlcjI1NTAxMDE0", "avatar_url": "https://avatars.githubusercontent.com/u/25501014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DutchGhost", "html_url": "https://github.com/DutchGhost", "followers_url": "https://api.github.com/users/DutchGhost/followers", "following_url": "https://api.github.com/users/DutchGhost/following{/other_user}", "gists_url": "https://api.github.com/users/DutchGhost/gists{/gist_id}", "starred_url": "https://api.github.com/users/DutchGhost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DutchGhost/subscriptions", "organizations_url": "https://api.github.com/users/DutchGhost/orgs", "repos_url": "https://api.github.com/users/DutchGhost/repos", "events_url": "https://api.github.com/users/DutchGhost/events{/privacy}", "received_events_url": "https://api.github.com/users/DutchGhost/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57b1e7a428c16a1b692b88cc25ce8b09d8ea503b", "url": "https://api.github.com/repos/rust-lang/rust/commits/57b1e7a428c16a1b692b88cc25ce8b09d8ea503b", "html_url": "https://github.com/rust-lang/rust/commit/57b1e7a428c16a1b692b88cc25ce8b09d8ea503b"}], "stats": {"total": 8, "additions": 0, "deletions": 8}, "files": [{"sha": "1502c9ac3753b0ee4b3ac177fdd68cb685270d71", "filename": "src/libcore/tests/mem.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dcc23217b7364056d5a83aaa058993ccd83b6e78/src%2Flibcore%2Ftests%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcc23217b7364056d5a83aaa058993ccd83b6e78/src%2Flibcore%2Ftests%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fmem.rs?ref=dcc23217b7364056d5a83aaa058993ccd83b6e78", "patch": "@@ -134,12 +134,4 @@ fn test_discriminant_send_sync() {\n fn test_const_forget() {\n     const _: () = forget(0i32);\n     const _: () = forget(Vec::<Vec<Box<i32>>>::new());\n-\n-    // Writing this function signature without const-forget\n-    // triggers compiler errors:\n-    // 1) That we use a non-const fn inside a const fn\n-    // 2) without the forget, it complains about the destructor of Box\n-    const fn const_forget_box<T>(x: Box<T>) {\n-        forget(x);\n-    }\n }"}]}