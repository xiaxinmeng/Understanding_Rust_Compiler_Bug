{"sha": "805dcd12d41e72c16bbca83496f4b89ba49eed64", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNWRjZDEyZDQxZTcyYzE2YmJjYTgzNDk2ZjRiODliYTQ5ZWVkNjQ=", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-06T09:05:15Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-11T10:40:24Z"}, "message": "move filter_map_map to its own module", "tree": {"sha": "dc004dc26b031132788ff5f15aa475b52cc0449f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc004dc26b031132788ff5f15aa475b52cc0449f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/805dcd12d41e72c16bbca83496f4b89ba49eed64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/805dcd12d41e72c16bbca83496f4b89ba49eed64", "html_url": "https://github.com/rust-lang/rust/commit/805dcd12d41e72c16bbca83496f4b89ba49eed64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/805dcd12d41e72c16bbca83496f4b89ba49eed64/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "183daeb961c83d5be108cfa5ee463bba412dedc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/183daeb961c83d5be108cfa5ee463bba412dedc4", "html_url": "https://github.com/rust-lang/rust/commit/183daeb961c83d5be108cfa5ee463bba412dedc4"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "d015b4c7b385e85381ecd8c9876a3a7294c9bf18", "filename": "clippy_lints/src/methods/filter_map_map.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/805dcd12d41e72c16bbca83496f4b89ba49eed64/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/805dcd12d41e72c16bbca83496f4b89ba49eed64/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_map.rs?ref=805dcd12d41e72c16bbca83496f4b89ba49eed64", "patch": "@@ -0,0 +1,20 @@\n+use crate::utils::{match_trait_method, paths, span_lint_and_help};\n+use rustc_hir as hir;\n+use rustc_lint::LateContext;\n+\n+use super::FILTER_MAP;\n+\n+/// lint use of `filter_map().map()` for `Iterators`\n+pub(super) fn check<'tcx>(\n+    cx: &LateContext<'tcx>,\n+    expr: &'tcx hir::Expr<'_>,\n+    _filter_args: &'tcx [hir::Expr<'_>],\n+    _map_args: &'tcx [hir::Expr<'_>],\n+) {\n+    // lint if caller of `.filter_map().map()` is an Iterator\n+    if match_trait_method(cx, expr, &paths::ITERATOR) {\n+        let msg = \"called `filter_map(..).map(..)` on an `Iterator`\";\n+        let hint = \"this is more succinctly expressed by only calling `.filter_map(..)` instead\";\n+        span_lint_and_help(cx, FILTER_MAP, expr.span, msg, None, hint);\n+    }\n+}"}, {"sha": "2e5dc857b4419c6fc3c280d9c7a31f6cae7a35bc", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/805dcd12d41e72c16bbca83496f4b89ba49eed64/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/805dcd12d41e72c16bbca83496f4b89ba49eed64/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=805dcd12d41e72c16bbca83496f4b89ba49eed64", "patch": "@@ -5,6 +5,7 @@ mod expect_used;\n mod filetype_is_file;\n mod filter_map;\n mod filter_map_identity;\n+mod filter_map_map;\n mod filter_next;\n mod from_iter_instead_of_collect;\n mod get_unwrap;\n@@ -1700,7 +1701,7 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n             [\"next\", \"skip_while\"] => skip_while_next::check(cx, expr, arg_lists[1]),\n             [\"next\", \"iter\"] => iter_next_slice::check(cx, expr, arg_lists[1]),\n             [\"map\", \"filter\"] => filter_map::check(cx, expr, false),\n-            [\"map\", \"filter_map\"] => lint_filter_map_map(cx, expr, arg_lists[1], arg_lists[0]),\n+            [\"map\", \"filter_map\"] => filter_map_map::check(cx, expr, arg_lists[1], arg_lists[0]),\n             [\"next\", \"filter_map\"] => lint_filter_map_next(cx, expr, arg_lists[1], self.msrv.as_ref()),\n             [\"map\", \"find\"] => filter_map::check(cx, expr, true),\n             [\"flat_map\", \"filter\"] => lint_filter_flat_map(cx, expr, arg_lists[1], arg_lists[0]),\n@@ -2785,21 +2786,6 @@ fn lint_filter_map_next<'tcx>(\n     }\n }\n \n-/// lint use of `filter_map().map()` for `Iterators`\n-fn lint_filter_map_map<'tcx>(\n-    cx: &LateContext<'tcx>,\n-    expr: &'tcx hir::Expr<'_>,\n-    _filter_args: &'tcx [hir::Expr<'_>],\n-    _map_args: &'tcx [hir::Expr<'_>],\n-) {\n-    // lint if caller of `.filter_map().map()` is an Iterator\n-    if match_trait_method(cx, expr, &paths::ITERATOR) {\n-        let msg = \"called `filter_map(..).map(..)` on an `Iterator`\";\n-        let hint = \"this is more succinctly expressed by only calling `.filter_map(..)` instead\";\n-        span_lint_and_help(cx, FILTER_MAP, expr.span, msg, None, hint);\n-    }\n-}\n-\n /// lint use of `filter().flat_map()` for `Iterators`\n fn lint_filter_flat_map<'tcx>(\n     cx: &LateContext<'tcx>,"}]}