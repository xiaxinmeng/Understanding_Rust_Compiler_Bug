{"sha": "d6af19b89c477708ed0f5341ab7a26f1764f1ffa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2YWYxOWI4OWM0Nzc3MDhlZDBmNTM0MWFiN2EyNmYxNzY0ZjFmZmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-23T08:03:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-23T08:03:04Z"}, "message": "Auto merge of #32348 - brson:cargotest, r=alexcrichton\n\nIntroduce 'cargotest' and the check-cargotest buildstep\n\nThis is a new suite of tests that verifies that the compiler builds specific revisions of select crates from crates.io.\n\nIt does not run by default. It is intended that bors runs these tests against all PRs, and gates on them. In this way we will make it harder still to break important swaths of the ecosystem, even on nightly.\n\nThis is a very basic implementation intended for feedback. The biggest thing it probably should do but doesn't is use a lockfile for every project it builds.\n\nr? @alexcrichton cc @rust-lang/lang @rust-lang/libs", "tree": {"sha": "8abcf31c6710406e419e86f399137d5ba3d3e4fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8abcf31c6710406e419e86f399137d5ba3d3e4fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6af19b89c477708ed0f5341ab7a26f1764f1ffa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6af19b89c477708ed0f5341ab7a26f1764f1ffa", "html_url": "https://github.com/rust-lang/rust/commit/d6af19b89c477708ed0f5341ab7a26f1764f1ffa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6af19b89c477708ed0f5341ab7a26f1764f1ffa/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ba2ea5fadffe3ec9e3ef196c33b27be19689600", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ba2ea5fadffe3ec9e3ef196c33b27be19689600", "html_url": "https://github.com/rust-lang/rust/commit/8ba2ea5fadffe3ec9e3ef196c33b27be19689600"}, {"sha": "3a790acf191a426c45b155d0d4a5078ef208a4b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a790acf191a426c45b155d0d4a5078ef208a4b4", "html_url": "https://github.com/rust-lang/rust/commit/3a790acf191a426c45b155d0d4a5078ef208a4b4"}], "stats": {"total": 529, "additions": 529, "deletions": 0}, "files": [{"sha": "4e2ee4752851a7332a485da1255d4bafb49c32e4", "filename": "src/bootstrap/build/check.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d6af19b89c477708ed0f5341ab7a26f1764f1ffa/src%2Fbootstrap%2Fbuild%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6af19b89c477708ed0f5341ab7a26f1764f1ffa/src%2Fbootstrap%2Fbuild%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuild%2Fcheck.rs?ref=d6af19b89c477708ed0f5341ab7a26f1764f1ffa", "patch": "@@ -16,3 +16,11 @@ pub fn linkcheck(build: &Build, stage: u32, host: &str) {\n     build.run(build.tool_cmd(&compiler, \"linkchecker\")\n                    .arg(build.out.join(host).join(\"doc\")));\n }\n+\n+pub fn cargotest(build: &Build, stage: u32, host: &str) {\n+    let ref compiler = Compiler::new(stage, host);\n+    build.run(build.tool_cmd(compiler, \"cargotest\")\n+              .env(\"RUSTC\", build.compiler_path(compiler))\n+              .env(\"RUSTDOC\", build.rustdoc(compiler))\n+              .arg(&build.cargo));\n+}"}, {"sha": "3427feeca6e2500f83d1c000bf3b4185263a009c", "filename": "src/bootstrap/build/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d6af19b89c477708ed0f5341ab7a26f1764f1ffa/src%2Fbootstrap%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6af19b89c477708ed0f5341ab7a26f1764f1ffa/src%2Fbootstrap%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuild%2Fmod.rs?ref=d6af19b89c477708ed0f5341ab7a26f1764f1ffa", "patch": "@@ -183,6 +183,9 @@ impl Build {\n                     compile::tool(self, stage, target.target,\n                                   \"error_index_generator\");\n                 }\n+                ToolCargoTest { stage } => {\n+                    compile::tool(self, stage, target.target, \"cargotest\");\n+                }\n                 DocBook { stage } => {\n                     doc::rustbook(self, stage, target.target, \"book\", &doc_out);\n                 }\n@@ -210,6 +213,9 @@ impl Build {\n                 CheckLinkcheck { stage } => {\n                     check::linkcheck(self, stage, target.target);\n                 }\n+                CheckCargoTest { stage } => {\n+                    check::cargotest(self, stage, target.target);\n+                }\n \n                 DistDocs { stage } => dist::docs(self, stage, target.target),\n                 DistMingw { _dummy } => dist::mingw(self, target.target),"}, {"sha": "107b0688b688920a712ba5c60db527516be30965", "filename": "src/bootstrap/build/step.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d6af19b89c477708ed0f5341ab7a26f1764f1ffa/src%2Fbootstrap%2Fbuild%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6af19b89c477708ed0f5341ab7a26f1764f1ffa/src%2Fbootstrap%2Fbuild%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuild%2Fstep.rs?ref=d6af19b89c477708ed0f5341ab7a26f1764f1ffa", "patch": "@@ -47,6 +47,7 @@ macro_rules! targets {\n             (tool_linkchecker, ToolLinkchecker { stage: u32 }),\n             (tool_rustbook, ToolRustbook { stage: u32 }),\n             (tool_error_index, ToolErrorIndex { stage: u32 }),\n+            (tool_cargotest, ToolCargoTest { stage: u32 }),\n \n             // Steps for long-running native builds. Ideally these wouldn't\n             // actually exist and would be part of build scripts, but for now\n@@ -73,6 +74,7 @@ macro_rules! targets {\n             // target to depend on a bunch of others.\n             (check, Check { stage: u32, compiler: Compiler<'a> }),\n             (check_linkcheck, CheckLinkcheck { stage: u32 }),\n+            (check_cargotest, CheckCargoTest { stage: u32 }),\n \n             // Distribution targets, creating tarballs\n             (dist, Dist { stage: u32 }),\n@@ -292,6 +294,9 @@ impl<'a> Step<'a> {\n             Source::CheckLinkcheck { stage } => {\n                 vec![self.tool_linkchecker(stage), self.doc(stage)]\n             }\n+            Source::CheckCargoTest { stage } => {\n+                vec![self.tool_cargotest(stage)]\n+            }\n \n             Source::ToolLinkchecker { stage } => {\n                 vec![self.libstd(self.compiler(stage))]\n@@ -300,6 +305,9 @@ impl<'a> Step<'a> {\n             Source::ToolRustbook { stage } => {\n                 vec![self.librustc(self.compiler(stage))]\n             }\n+            Source::ToolCargoTest { stage } => {\n+                vec![self.libstd(self.compiler(stage))]\n+            }\n \n             Source::DistDocs { stage } => vec![self.doc(stage)],\n             Source::DistMingw { _dummy: _ } => Vec::new(),"}, {"sha": "7dd45a95a828bb4503d2c24ea011e1a7a40c656d", "filename": "src/bootstrap/mk/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d6af19b89c477708ed0f5341ab7a26f1764f1ffa/src%2Fbootstrap%2Fmk%2FMakefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/d6af19b89c477708ed0f5341ab7a26f1764f1ffa/src%2Fbootstrap%2Fmk%2FMakefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmk%2FMakefile.in?ref=d6af19b89c477708ed0f5341ab7a26f1764f1ffa", "patch": "@@ -38,6 +38,8 @@ standalone-docs:\n \t$(Q)$(BOOTSTRAP) --step doc-standalone\n check:\n \t$(Q)$(BOOTSTRAP) --step check\n+cargotest:\n+\t$(Q)$(BOOTSTRAP) --step cargotest\n dist:\n \t$(Q)$(BOOTSTRAP) --step dist\n "}, {"sha": "30b14277333072f66b8497111286ce5bd72a83fe", "filename": "src/tools/cargotest/Cargo.lock", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d6af19b89c477708ed0f5341ab7a26f1764f1ffa/src%2Ftools%2Fcargotest%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d6af19b89c477708ed0f5341ab7a26f1764f1ffa/src%2Ftools%2Fcargotest%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargotest%2FCargo.lock?ref=d6af19b89c477708ed0f5341ab7a26f1764f1ffa", "patch": "@@ -0,0 +1,28 @@\n+[root]\n+name = \"cargotest\"\n+version = \"0.1.0\"\n+dependencies = [\n+ \"tempdir 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"libc\"\n+version = \"0.2.8\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"rand\"\n+version = \"0.3.14\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"tempdir\"\n+version = \"0.3.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"rand 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+"}, {"sha": "2c7e235e0b5068c7ef92e46d5f224890928a96f9", "filename": "src/tools/cargotest/Cargo.toml", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d6af19b89c477708ed0f5341ab7a26f1764f1ffa/src%2Ftools%2Fcargotest%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d6af19b89c477708ed0f5341ab7a26f1764f1ffa/src%2Ftools%2Fcargotest%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargotest%2FCargo.toml?ref=d6af19b89c477708ed0f5341ab7a26f1764f1ffa", "patch": "@@ -0,0 +1,11 @@\n+[package]\n+name = \"cargotest\"\n+version = \"0.1.0\"\n+authors = [\"Brian Anderson <banderson@mozilla.com>\"]\n+\n+[dependencies]\n+tempdir = \"0.3.4\"\n+\n+[[bin]]\n+name = \"cargotest\"\n+path = \"main.rs\""}, {"sha": "843f2dcea512a8c565c10131e8aa818bd485614c", "filename": "src/tools/cargotest/lockfiles/iron-Cargo.lock", "status": "added", "additions": 364, "deletions": 0, "changes": 364, "blob_url": "https://github.com/rust-lang/rust/blob/d6af19b89c477708ed0f5341ab7a26f1764f1ffa/src%2Ftools%2Fcargotest%2Flockfiles%2Firon-Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d6af19b89c477708ed0f5341ab7a26f1764f1ffa/src%2Ftools%2Fcargotest%2Flockfiles%2Firon-Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargotest%2Flockfiles%2Firon-Cargo.lock?ref=d6af19b89c477708ed0f5341ab7a26f1764f1ffa", "patch": "@@ -0,0 +1,364 @@\n+[root]\n+name = \"iron\"\n+version = \"0.3.0\"\n+dependencies = [\n+ \"conduit-mime-types 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"error 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"hyper 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"modifier 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"num_cpus 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"plugin 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"time 0.1.34 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"typemap 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"url 0.5.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"bitflags\"\n+version = \"0.4.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"conduit-mime-types\"\n+version = \"0.7.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"rustc-serialize 0.3.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"cookie\"\n+version = \"0.2.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"openssl 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-serialize 0.3.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"time 0.1.34 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"url 0.5.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"error\"\n+version = \"0.1.9\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"traitobject 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"typeable 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"gcc\"\n+version = \"0.3.26\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"gdi32-sys\"\n+version = \"0.1.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"winapi 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"hpack\"\n+version = \"0.2.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"log 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"httparse\"\n+version = \"1.1.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"hyper\"\n+version = \"0.8.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"cookie 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"httparse 1.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"language-tags 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"mime 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"num_cpus 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-serialize 0.3.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"solicit 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"time 0.1.34 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"traitobject 0.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"typeable 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"unicase 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"url 0.5.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"kernel32-sys\"\n+version = \"0.2.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"winapi 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"language-tags\"\n+version = \"0.2.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"lazy_static\"\n+version = \"0.1.15\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"libc\"\n+version = \"0.2.8\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"libressl-pnacl-sys\"\n+version = \"2.1.6\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"pnacl-build-helper 1.4.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"log\"\n+version = \"0.3.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"matches\"\n+version = \"0.1.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"mime\"\n+version = \"0.2.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"log 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"modifier\"\n+version = \"0.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"num_cpus\"\n+version = \"0.2.11\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"openssl\"\n+version = \"0.7.8\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"bitflags 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.26 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl-sys 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl-sys-extras 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"openssl-sys\"\n+version = \"0.7.8\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"gdi32-sys 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libressl-pnacl-sys 2.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"pkg-config 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"user32-sys 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"openssl-sys-extras\"\n+version = \"0.7.8\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"gcc 0.3.26 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"openssl-sys 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"pkg-config\"\n+version = \"0.3.8\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"plugin\"\n+version = \"0.2.6\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"typemap 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"pnacl-build-helper\"\n+version = \"1.4.10\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"tempdir 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"rand\"\n+version = \"0.3.14\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"rustc-serialize\"\n+version = \"0.3.18\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"rustc_version\"\n+version = \"0.1.7\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"semver 0.1.20 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"semver\"\n+version = \"0.1.20\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"solicit\"\n+version = \"0.4.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"hpack 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"tempdir\"\n+version = \"0.3.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"rand 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"time\"\n+version = \"0.1.34\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"kernel32-sys 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"traitobject\"\n+version = \"0.0.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"traitobject\"\n+version = \"0.0.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"typeable\"\n+version = \"0.1.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"typemap\"\n+version = \"0.3.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"unsafe-any 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"unicase\"\n+version = \"1.4.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"rustc_version 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"unicode-bidi\"\n+version = \"0.2.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"matches 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"unicode-normalization\"\n+version = \"0.1.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"unsafe-any\"\n+version = \"0.4.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"traitobject 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"url\"\n+version = \"0.5.7\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"matches 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-serialize 0.3.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"unicode-bidi 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"unicode-normalization 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"uuid 0.1.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"user32-sys\"\n+version = \"0.1.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"winapi 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"uuid\"\n+version = \"0.1.18\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"rand 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-serialize 0.3.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"winapi\"\n+version = \"0.2.6\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"winapi-build\"\n+version = \"0.1.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+"}, {"sha": "69ec9299d68e895a6cb474f7fcdafe9b58710d28", "filename": "src/tools/cargotest/main.rs", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/d6af19b89c477708ed0f5341ab7a26f1764f1ffa/src%2Ftools%2Fcargotest%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6af19b89c477708ed0f5341ab7a26f1764f1ffa/src%2Ftools%2Fcargotest%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargotest%2Fmain.rs?ref=d6af19b89c477708ed0f5341ab7a26f1764f1ffa", "patch": "@@ -0,0 +1,102 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate tempdir;\n+\n+use tempdir::TempDir;\n+use std::env;\n+use std::process::Command;\n+use std::path::Path;\n+use std::fs::File;\n+use std::io::Write;\n+\n+const TEST_REPOS: &'static [(&'static str, &'static str, Option<&'static str>)] = &[\n+    (\"https://github.com/rust-lang/cargo\",\n+     \"ff02b156f094fb83e70acd965c83c9286411914e\",\n+     None),\n+    (\"https://github.com/iron/iron\",\n+     \"16c858ec2901e2992fe5e529780f59fa8ed12903\",\n+     Some(include_str!(\"lockfiles/iron-Cargo.lock\")))\n+];\n+\n+\n+fn main() {\n+    let ref cargo = env::args().collect::<Vec<_>>()[1];\n+    let ref cargo = Path::new(cargo);\n+\n+    for &(repo, sha, lockfile) in TEST_REPOS.iter().rev() {\n+        test_repo(cargo, repo, sha, lockfile);\n+    }\n+}\n+\n+fn test_repo(cargo: &Path, repo: &str, sha: &str, lockfile: Option<&str>) {\n+    println!(\"testing {}\", repo);\n+    let dir = clone_repo(repo, sha);\n+    if let Some(lockfile) = lockfile {\n+        File::create(&dir.path().join(\"Cargo.lock\")).expect(\"\")\n+            .write_all(lockfile.as_bytes()).expect(\"\");\n+    }\n+    if !run_cargo_test(cargo, dir.path()) {\n+        panic!(\"tests failed for {}\", repo);\n+    }\n+}\n+\n+fn clone_repo(repo: &str, sha: &str) -> TempDir {\n+    let dir = TempDir::new(\"cargotest\").expect(\"\");\n+    let status = Command::new(\"git\")\n+        .arg(\"init\")\n+        .arg(dir.path())\n+        .status()\n+        .expect(\"\");\n+    assert!(status.success());\n+\n+    // Try progressively deeper fetch depths to find the commit\n+    let mut found = false;\n+    for depth in &[1, 10, 100, 1000, 100000] {\n+        let status = Command::new(\"git\")\n+            .arg(\"fetch\")\n+            .arg(repo)\n+            .arg(\"master\")\n+            .arg(&format!(\"--depth={}\", depth))\n+            .current_dir(dir.path())\n+            .status()\n+            .expect(\"\");\n+        assert!(status.success());\n+\n+        let status = Command::new(\"git\")\n+            .arg(\"reset\")\n+            .arg(sha)\n+            .arg(\"--hard\")\n+            .current_dir(dir.path())\n+            .status()\n+            .expect(\"\");\n+\n+        if status.success() {\n+            found = true;\n+            break;\n+        }\n+    }\n+\n+    if !found { panic!(\"unable to find commit {}\", sha) }\n+\n+    dir\n+}\n+\n+fn run_cargo_test(cargo_path: &Path, crate_path: &Path) -> bool {\n+    let status = Command::new(cargo_path)\n+        .arg(\"test\")\n+        // Disable rust-lang/cargo's cross-compile tests\n+        .env(\"CFG_DISABLE_CROSS_TESTS\", \"1\")\n+        .current_dir(crate_path)\n+        .status()\n+        .expect(\"\");\n+\n+    status.success()\n+}"}]}