{"sha": "d28ef9dbf1e9bedd0a30ad96ead65d95aaa09ebb", "node_id": "C_kwDOAAsO6NoAKGQyOGVmOWRiZjFlOWJlZGQwYTMwYWQ5NmVhZDY1ZDk1YWFhMDllYmI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-28T21:22:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-28T21:22:21Z"}, "message": "Rollup merge of #105998 - RalfJung:no-unwind-panic-msg, r=thomcc\n\nadjust message on non-unwinding panic\n\n\"thread panicked while panicking\" is just plain wrong in case this is a non-unwinding panic, such as\n- a panic out of a `nounwind` function\n- the sanity checks we have in `mem::uninitialized` and `mem::zeroed`\n- the optional debug assertion in various unsafe std library functions", "tree": {"sha": "e89d087e56c18320949d77252bc58c1c2c70cba2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e89d087e56c18320949d77252bc58c1c2c70cba2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d28ef9dbf1e9bedd0a30ad96ead65d95aaa09ebb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjrLONCRBK7hj4Ov3rIwAA2xcIAJ8U9wAMTI9XDKZiIz3HgOXd\nUOU80J/BSVrwliumMhDHjPn8Oc9jgKwYJ3cPDAw8Mbk4vCXFRrziILACJwmsjcP9\nfV3ewB3VrlEVzW/2waPi2x7DEUEVvHUgsYRzon8+4LwaknqwD43dKlypUrXJdVmJ\nS7bWeqtdycJ7REBJb02zpAYcPFxAi5HmAbUxeFeUf+qWSd2eluG+Day9muFIvGLW\nONgu6+ufgBfIoK2Y3PT7+rbqNPxvBNleTaXDPRH5tJm9WftLJ/borsqgwc04+zQr\nVZpPF30bWap83TCOaPvwkbflxWsZPtoGKgi+UlnfwE8Qj3ka42EKzOiMC6VreUY=\n=H0Gk\n-----END PGP SIGNATURE-----\n", "payload": "tree e89d087e56c18320949d77252bc58c1c2c70cba2\nparent 06306770f83404fe5f73658d3e041768ec5736af\nparent b804c0d5a54dee10a59fc2b3d54037cb96fbb598\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1672262541 +0100\ncommitter GitHub <noreply@github.com> 1672262541 +0100\n\nRollup merge of #105998 - RalfJung:no-unwind-panic-msg, r=thomcc\n\nadjust message on non-unwinding panic\n\n\"thread panicked while panicking\" is just plain wrong in case this is a non-unwinding panic, such as\n- a panic out of a `nounwind` function\n- the sanity checks we have in `mem::uninitialized` and `mem::zeroed`\n- the optional debug assertion in various unsafe std library functions\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d28ef9dbf1e9bedd0a30ad96ead65d95aaa09ebb", "html_url": "https://github.com/rust-lang/rust/commit/d28ef9dbf1e9bedd0a30ad96ead65d95aaa09ebb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d28ef9dbf1e9bedd0a30ad96ead65d95aaa09ebb/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06306770f83404fe5f73658d3e041768ec5736af", "url": "https://api.github.com/repos/rust-lang/rust/commits/06306770f83404fe5f73658d3e041768ec5736af", "html_url": "https://github.com/rust-lang/rust/commit/06306770f83404fe5f73658d3e041768ec5736af"}, {"sha": "b804c0d5a54dee10a59fc2b3d54037cb96fbb598", "url": "https://api.github.com/repos/rust-lang/rust/commits/b804c0d5a54dee10a59fc2b3d54037cb96fbb598", "html_url": "https://github.com/rust-lang/rust/commit/b804c0d5a54dee10a59fc2b3d54037cb96fbb598"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "49c2f81403a9bfc037c22d691d81c83b79c9c4fd", "filename": "library/std/src/panicking.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d28ef9dbf1e9bedd0a30ad96ead65d95aaa09ebb/library%2Fstd%2Fsrc%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d28ef9dbf1e9bedd0a30ad96ead65d95aaa09ebb/library%2Fstd%2Fsrc%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpanicking.rs?ref=d28ef9dbf1e9bedd0a30ad96ead65d95aaa09ebb", "patch": "@@ -699,7 +699,11 @@ fn rust_panic_with_hook(\n         // have limited options. Currently our preference is to\n         // just abort. In the future we may consider resuming\n         // unwinding or otherwise exiting the thread cleanly.\n-        rtprintpanic!(\"thread panicked while panicking. aborting.\\n\");\n+        if !can_unwind {\n+            rtprintpanic!(\"thread caused non-unwinding panic. aborting.\\n\");\n+        } else {\n+            rtprintpanic!(\"thread panicked while panicking. aborting.\\n\");\n+        }\n         crate::sys::abort_internal();\n     }\n "}]}