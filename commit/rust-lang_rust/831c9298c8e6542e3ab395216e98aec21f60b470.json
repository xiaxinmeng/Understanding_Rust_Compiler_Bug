{"sha": "831c9298c8e6542e3ab395216e98aec21f60b470", "node_id": "C_kwDOAAsO6NoAKDgzMWM5Mjk4YzhlNjU0MmUzYWIzOTUyMTZlOThhZWMyMWY2MGI0NzA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-30T13:58:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-30T13:58:00Z"}, "message": "Auto merge of #103406 - Jules-Bertholet:from_clone_slice_to_box, r=dtolnay\n\nLoosen `From<&[T]> for Box<[T]>` bound to `T: Clone`\n\nAlso loosens `From<Cow<'_, [T]>> for Box<[T]>`'s bound.\n\n[Discussion on Zulip](https://rust-lang.zulipchat.com/#narrow/stream/219381-t-libs/topic/From.3C.26.5BT.5D.3E.20impls.20consistency)", "tree": {"sha": "fefa3361066acde0c66f593dcee9e6c3421fb29d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fefa3361066acde0c66f593dcee9e6c3421fb29d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/831c9298c8e6542e3ab395216e98aec21f60b470", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/831c9298c8e6542e3ab395216e98aec21f60b470", "html_url": "https://github.com/rust-lang/rust/commit/831c9298c8e6542e3ab395216e98aec21f60b470", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/831c9298c8e6542e3ab395216e98aec21f60b470/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89158e210ce0b9550b42c65ede244087f2e144b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/89158e210ce0b9550b42c65ede244087f2e144b5", "html_url": "https://github.com/rust-lang/rust/commit/89158e210ce0b9550b42c65ede244087f2e144b5"}, {"sha": "18d2c60975c356d36ce6138130b5e0fdc79b1424", "url": "https://api.github.com/repos/rust-lang/rust/commits/18d2c60975c356d36ce6138130b5e0fdc79b1424", "html_url": "https://github.com/rust-lang/rust/commit/18d2c60975c356d36ce6138130b5e0fdc79b1424"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "1768687e8cd0263b0da8fd8cd401e4df0964d88c", "filename": "library/alloc/src/boxed.rs", "status": "modified", "additions": 31, "deletions": 8, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/831c9298c8e6542e3ab395216e98aec21f60b470/library%2Falloc%2Fsrc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/831c9298c8e6542e3ab395216e98aec21f60b470/library%2Falloc%2Fsrc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fboxed.rs?ref=831c9298c8e6542e3ab395216e98aec21f60b470", "patch": "@@ -1455,9 +1455,36 @@ where\n     }\n }\n \n+/// Specialization trait used for `From<&[T]>`.\n+#[cfg(not(no_global_oom_handling))]\n+trait BoxFromSlice<T> {\n+    fn from_slice(slice: &[T]) -> Self;\n+}\n+\n+#[cfg(not(no_global_oom_handling))]\n+impl<T: Clone> BoxFromSlice<T> for Box<[T]> {\n+    #[inline]\n+    default fn from_slice(slice: &[T]) -> Self {\n+        slice.to_vec().into_boxed_slice()\n+    }\n+}\n+\n+#[cfg(not(no_global_oom_handling))]\n+impl<T: Copy> BoxFromSlice<T> for Box<[T]> {\n+    #[inline]\n+    fn from_slice(slice: &[T]) -> Self {\n+        let len = slice.len();\n+        let buf = RawVec::with_capacity(len);\n+        unsafe {\n+            ptr::copy_nonoverlapping(slice.as_ptr(), buf.ptr(), len);\n+            buf.into_box(slice.len()).assume_init()\n+        }\n+    }\n+}\n+\n #[cfg(not(no_global_oom_handling))]\n #[stable(feature = \"box_from_slice\", since = \"1.17.0\")]\n-impl<T: Copy> From<&[T]> for Box<[T]> {\n+impl<T: Clone> From<&[T]> for Box<[T]> {\n     /// Converts a `&[T]` into a `Box<[T]>`\n     ///\n     /// This conversion allocates on the heap\n@@ -1471,19 +1498,15 @@ impl<T: Copy> From<&[T]> for Box<[T]> {\n     ///\n     /// println!(\"{boxed_slice:?}\");\n     /// ```\n+    #[inline]\n     fn from(slice: &[T]) -> Box<[T]> {\n-        let len = slice.len();\n-        let buf = RawVec::with_capacity(len);\n-        unsafe {\n-            ptr::copy_nonoverlapping(slice.as_ptr(), buf.ptr(), len);\n-            buf.into_box(slice.len()).assume_init()\n-        }\n+        <Self as BoxFromSlice<T>>::from_slice(slice)\n     }\n }\n \n #[cfg(not(no_global_oom_handling))]\n #[stable(feature = \"box_from_cow\", since = \"1.45.0\")]\n-impl<T: Copy> From<Cow<'_, [T]>> for Box<[T]> {\n+impl<T: Clone> From<Cow<'_, [T]>> for Box<[T]> {\n     /// Converts a `Cow<'_, [T]>` into a `Box<[T]>`\n     ///\n     /// When `cow` is the `Cow::Borrowed` variant, this"}]}