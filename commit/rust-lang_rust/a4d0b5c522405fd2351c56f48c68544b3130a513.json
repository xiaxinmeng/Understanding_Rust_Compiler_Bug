{"sha": "a4d0b5c522405fd2351c56f48c68544b3130a513", "node_id": "C_kwDOAAsO6NoAKGE0ZDBiNWM1MjI0MDVmZDIzNTFjNTZmNDhjNjg1NDRiMzEzMGE1MTM", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-02-05T11:02:16Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-02-05T13:28:03Z"}, "message": "Add regression tests", "tree": {"sha": "33a4f95a78a8dc7037ee205eb406272fad87622d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33a4f95a78a8dc7037ee205eb406272fad87622d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4d0b5c522405fd2351c56f48c68544b3130a513", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmPfrvEACgkQ4laYqTBY\nYXGbAQ/+KogAUTjoBPRs0AJH14aLVhDSl5qj58JXJDBd0kYpZwebF0htr6V00ojh\ny5ccVbtyo3kDXGtVroxalopBXWhR0fbSD9a2MJhBa7hTpUAC9LGFrpeNQE1Tn7Z5\nmFGcojuRmel3VxIlzRAnX9qQUSH+2VWnSzP/BRuhibZNKz/Ok/xjICzI1B85dSff\n6jWe7kDKqRqlDZWxVSGK3AZCltihknr+OTliAcNcc4ugTN1nwGslXdVvs/K5oGhG\nPlZ6JE6BcwAa6ylc8ELpPxa0e5cmjoA7LczRqAVGCYh/4CNPbR2AWA47HCW9nA+H\nQDEO9xDONwBlmN0Ntqxadcj/Ueop/VNWAtc3yA+TvQ50ywkGMfaLZBUq//SzgQK2\nwWQhascWImLiMXgL7eVz5xbiQpbj4eo4zN2hrE7L0Ywxb1IzPfhfj5BUu17/LpRK\nHfpd6co+iATJFcZKm5RaMH5rYN6e3RLUuXj7/GK4CYvT9NE+EjJ7HMECA23MhWcm\nZkdWdAXfVWSqHS4Ij6lfFRCKd5Jgdr1PKZ7UEK8IH+BJ3I8hzLV4mkx3VWhcZO6a\nkz6Kw8zW426AcQgqZJcdV9P0AC1rln6XglPWCZkMTdFqWLdXNZ7OQ5PxLg2tDmwQ\nwF/IPG4CuWQUwtZvfFxfFSQhKFy/6sYcYAxXv5UH6+EHzOrOFwM=\n=SFHM\n-----END PGP SIGNATURE-----", "payload": "tree 33a4f95a78a8dc7037ee205eb406272fad87622d\nparent 0ec2911857eeba97358445582ee3484a6d81d19c\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1675594936 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1675603683 +0900\n\nAdd regression tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4d0b5c522405fd2351c56f48c68544b3130a513", "html_url": "https://github.com/rust-lang/rust/commit/a4d0b5c522405fd2351c56f48c68544b3130a513", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4d0b5c522405fd2351c56f48c68544b3130a513/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ec2911857eeba97358445582ee3484a6d81d19c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ec2911857eeba97358445582ee3484a6d81d19c", "html_url": "https://github.com/rust-lang/rust/commit/0ec2911857eeba97358445582ee3484a6d81d19c"}], "stats": {"total": 92, "additions": 90, "deletions": 2}, "files": [{"sha": "8a7e9dfadfed2b79b39f423e029425782e702598", "filename": "crates/base-db/src/fixture.rs", "status": "modified", "additions": 60, "deletions": 2, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/a4d0b5c522405fd2351c56f48c68544b3130a513/crates%2Fbase-db%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4d0b5c522405fd2351c56f48c68544b3130a513/crates%2Fbase-db%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase-db%2Fsrc%2Ffixture.rs?ref=a4d0b5c522405fd2351c56f48c68544b3130a513", "patch": "@@ -6,7 +6,7 @@ use rustc_hash::FxHashMap;\n use test_utils::{\n     extract_range_or_offset, Fixture, RangeOrOffset, CURSOR_MARKER, ESCAPED_CURSOR_MARKER,\n };\n-use tt::token_id::Subtree;\n+use tt::token_id::{Leaf, Subtree, TokenTree};\n use vfs::{file_set::FileSet, VfsPath};\n \n use crate::{\n@@ -310,7 +310,7 @@ impl ChangeFixture {\n     }\n }\n \n-fn default_test_proc_macros() -> [(String, ProcMacro); 4] {\n+fn default_test_proc_macros() -> [(String, ProcMacro); 5] {\n     [\n         (\n             r#\"\n@@ -368,6 +368,20 @@ pub fn mirror(input: TokenStream) -> TokenStream {\n                 expander: Arc::new(MirrorProcMacroExpander),\n             },\n         ),\n+        (\n+            r#\"\n+#[proc_macro]\n+pub fn shorten(input: TokenStream) -> TokenStream {\n+    loop {}\n+}\n+\"#\n+            .into(),\n+            ProcMacro {\n+                name: \"shorten\".into(),\n+                kind: crate::ProcMacroKind::FuncLike,\n+                expander: Arc::new(ShortenProcMacroExpander),\n+            },\n+        ),\n     ]\n }\n \n@@ -508,3 +522,47 @@ impl ProcMacroExpander for MirrorProcMacroExpander {\n         Ok(traverse(input))\n     }\n }\n+\n+// Replaces every literal with an empty string literal and every identifier with its first letter,\n+// but retains all tokens' span. Useful for testing we don't assume token hasn't been modified by\n+// macros even if it retains its span.\n+#[derive(Debug)]\n+struct ShortenProcMacroExpander;\n+impl ProcMacroExpander for ShortenProcMacroExpander {\n+    fn expand(\n+        &self,\n+        input: &Subtree,\n+        _: Option<&Subtree>,\n+        _: &Env,\n+    ) -> Result<Subtree, ProcMacroExpansionError> {\n+        return Ok(traverse(input));\n+\n+        fn traverse(input: &Subtree) -> Subtree {\n+            let token_trees = input\n+                .token_trees\n+                .iter()\n+                .map(|it| match it {\n+                    TokenTree::Leaf(leaf) => tt::TokenTree::Leaf(modify_leaf(leaf)),\n+                    TokenTree::Subtree(subtree) => tt::TokenTree::Subtree(traverse(subtree)),\n+                })\n+                .collect();\n+            Subtree { delimiter: input.delimiter, token_trees }\n+        }\n+\n+        fn modify_leaf(leaf: &Leaf) -> Leaf {\n+            let mut leaf = leaf.clone();\n+            match &mut leaf {\n+                Leaf::Literal(it) => {\n+                    // XXX Currently replaces any literals with an empty string, but supporting\n+                    // \"shortening\" other literals would be nice.\n+                    it.text = \"\\\"\\\"\".into();\n+                }\n+                Leaf::Punct(_) => {}\n+                Leaf::Ident(it) => {\n+                    it.text = it.text.chars().take(1).collect();\n+                }\n+            }\n+            leaf\n+        }\n+    }\n+}"}, {"sha": "fec149e56a9e21d2cf75799c5cbfd57abf79fdf7", "filename": "crates/ide-completion/src/tests/proc_macros.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a4d0b5c522405fd2351c56f48c68544b3130a513/crates%2Fide-completion%2Fsrc%2Ftests%2Fproc_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4d0b5c522405fd2351c56f48c68544b3130a513/crates%2Fide-completion%2Fsrc%2Ftests%2Fproc_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Ftests%2Fproc_macros.rs?ref=a4d0b5c522405fd2351c56f48c68544b3130a513", "patch": "@@ -131,3 +131,33 @@ fn main() {}\n         \"#]],\n     )\n }\n+\n+#[test]\n+fn issue_13836_str() {\n+    check(\n+        r#\"\n+//- proc_macros: shorten\n+fn main() {\n+    let s = proc_macros::shorten!(\"text.$0\");\n+}\n+\"#,\n+        expect![[r#\"\"#]],\n+    )\n+}\n+\n+#[test]\n+fn issue_13836_ident() {\n+    check(\n+        r#\"\n+//- proc_macros: shorten\n+struct S;\n+impl S {\n+    fn foo(&self) {}\n+}\n+fn main() {\n+    let s = proc_macros::shorten!(S.fo$0);\n+}\n+\"#,\n+        expect![[r#\"\"#]],\n+    )\n+}"}]}