{"sha": "bd8f6097a77206e34fbbe9592a3cc61111562d63", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkOGY2MDk3YTc3MjA2ZTM0ZmJiZTk1OTJhM2NjNjExMTE1NjJkNjM=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-06-16T01:03:15Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-16T18:58:29Z"}, "message": "Get rid of old vec_append glue.", "tree": {"sha": "aa28317b641b396035f5c37afdab6fbd94f96cec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa28317b641b396035f5c37afdab6fbd94f96cec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd8f6097a77206e34fbbe9592a3cc61111562d63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd8f6097a77206e34fbbe9592a3cc61111562d63", "html_url": "https://github.com/rust-lang/rust/commit/bd8f6097a77206e34fbbe9592a3cc61111562d63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd8f6097a77206e34fbbe9592a3cc61111562d63/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9d62e5a90c4c29276ea3a3b7475712a63af8174", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9d62e5a90c4c29276ea3a3b7475712a63af8174", "html_url": "https://github.com/rust-lang/rust/commit/a9d62e5a90c4c29276ea3a3b7475712a63af8174"}], "stats": {"total": 26, "additions": 9, "deletions": 17}, "files": [{"sha": "b6a3b8821642ada5704f7fca798af901f80e0ca4", "filename": "mk/rt.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd8f6097a77206e34fbbe9592a3cc61111562d63/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/bd8f6097a77206e34fbbe9592a3cc61111562d63/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=bd8f6097a77206e34fbbe9592a3cc61111562d63", "patch": "@@ -30,7 +30,7 @@ RUNTIME_CS := rt/sync/timer.cpp \\\n               rt/test/rust_test_util.cpp \\\n               rt/arch/i386/context.cpp \\\n \n-RUNTIME_LL := rt/vec_append.ll\n+RUNTIME_LL :=\n \n RUNTIME_S := rt/arch/i386/_context.s\n "}, {"sha": "604ca8a5b587b367601ea81fcfa4c2784d97ce1c", "filename": "src/comp/back/upcall.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd8f6097a77206e34fbbe9592a3cc61111562d63/src%2Fcomp%2Fback%2Fupcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd8f6097a77206e34fbbe9592a3cc61111562d63/src%2Fcomp%2Fback%2Fupcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Fupcall.rs?ref=bd8f6097a77206e34fbbe9592a3cc61111562d63", "patch": "@@ -51,7 +51,6 @@ type upcalls =\n         ValueRef mark,\n         ValueRef new_str,\n         ValueRef new_vec,\n-        ValueRef vec_grow,\n         ValueRef vec_append,\n         ValueRef get_type_desc,\n         ValueRef new_task,\n@@ -106,9 +105,6 @@ fn declare_upcalls(type_names tn, ModuleRef llmod) -> @upcalls {\n                        T_ptr(T_str())),\n              new_vec=d(\"new_vec\", [T_size_t(), T_ptr(T_tydesc(tn))],\n                        T_opaque_vec_ptr()),\n-             vec_grow=d(\"vec_grow\",\n-                        [T_opaque_vec_ptr(), T_size_t(), T_ptr(T_int()),\n-                         T_ptr(T_tydesc(tn))], T_opaque_vec_ptr()),\n              vec_append=d(\"vec_append\",\n                           [T_ptr(T_tydesc(tn)), T_ptr(T_tydesc(tn)),\n                            T_ptr(T_opaque_vec_ptr()), T_opaque_vec_ptr(),"}, {"sha": "bfb72ffd648d29190486eda02a27d5a1321f5e47", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bd8f6097a77206e34fbbe9592a3cc61111562d63/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/bd8f6097a77206e34fbbe9592a3cc61111562d63/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=bd8f6097a77206e34fbbe9592a3cc61111562d63", "patch": "@@ -370,17 +370,16 @@ upcall_new_vec(rust_task *task, size_t fill, type_desc *td) {\n     return v;\n }\n \n-extern \"C\" CDECL rust_vec *\n-upcall_vec_grow(rust_task *task,\n-                rust_vec *v,\n-                size_t n_bytes,\n-                uintptr_t *need_copy,\n-                type_desc *td)\n+static rust_vec *\n+vec_grow(rust_task *task,\n+         rust_vec *v,\n+         size_t n_bytes,\n+         uintptr_t *need_copy,\n+         type_desc *td)\n {\n-    LOG_UPCALL_ENTRY(task);\n     rust_dom *dom = task->dom;\n     LOG(task, mem,\n-        \"upcall vec_grow(0x%\" PRIxPTR \", %\" PRIdPTR\n+        \"vec_grow(0x%\" PRIxPTR \", %\" PRIdPTR\n         \"), rc=%\" PRIdPTR \" alloc=%\" PRIdPTR \", fill=%\" PRIdPTR\n         \", need_copy=0x%\" PRIxPTR,\n         v, n_bytes, v->ref_count, v->alloc, v->fill, need_copy);\n@@ -465,8 +464,7 @@ upcall_vec_append(rust_task *task, type_desc *t, type_desc *elem_t,\n     uintptr_t need_copy;\n     size_t n_src_bytes = skip_null ? src->fill - 1 : src->fill;\n     size_t n_dst_bytes = skip_null ? dst->fill - 1 : dst->fill;\n-    rust_vec *new_vec = upcall_vec_grow(task, dst, n_src_bytes,\n-                                        &need_copy, t);\n+    rust_vec *new_vec = vec_grow(task, dst, n_src_bytes, &need_copy, t);\n \n     if (need_copy) {\n         // Copy any dst elements in, omitting null if doing str."}, {"sha": "9fb1b45287e7fb11d9cb9029ec9b8f22a0563d5e", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd8f6097a77206e34fbbe9592a3cc61111562d63/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/bd8f6097a77206e34fbbe9592a3cc61111562d63/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=bd8f6097a77206e34fbbe9592a3cc61111562d63", "patch": "@@ -24,7 +24,6 @@ rust_process_wait\n rust_ptr_eq\n rust_run_program\n rust_start\n-rust_vec_append_glue\n size_of\n squareroot\n str_alloc\n@@ -73,7 +72,6 @@ upcall_start_task\n upcall_start_thread\n upcall_trace_str\n upcall_trace_word\n-upcall_vec_grow\n upcall_vec_append\n upcall_yield\n vec_alloc"}]}