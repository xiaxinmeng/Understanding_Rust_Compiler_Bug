{"sha": "84bd6bba45997aca9b1bd9f55d3f2b5c949c7b77", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0YmQ2YmJhNDU5OTdhY2E5YjFiZDlmNTVkM2YyYjVjOTQ5YzdiNzc=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2014-09-19T20:59:43Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2014-09-22T21:54:10Z"}, "message": "logging is an external crate", "tree": {"sha": "be701abd12747f366b0573dab4db1c08d4318028", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be701abd12747f366b0573dab4db1c08d4318028"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84bd6bba45997aca9b1bd9f55d3f2b5c949c7b77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84bd6bba45997aca9b1bd9f55d3f2b5c949c7b77", "html_url": "https://github.com/rust-lang/rust/commit/84bd6bba45997aca9b1bd9f55d3f2b5c949c7b77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84bd6bba45997aca9b1bd9f55d3f2b5c949c7b77/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68b8901fffa0646f3da56a2c2b8d8515c8d595c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/68b8901fffa0646f3da56a2c2b8d8515c8d595c8", "html_url": "https://github.com/rust-lang/rust/commit/68b8901fffa0646f3da56a2c2b8d8515c8d595c8"}], "stats": {"total": 58, "additions": 0, "deletions": 58}, "files": [{"sha": "8c13b8212e4e4789704a8d33fa2648ba8eeb920a", "filename": "src/doc/reference.md", "status": "modified", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/84bd6bba45997aca9b1bd9f55d3f2b5c949c7b77/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/84bd6bba45997aca9b1bd9f55d3f2b5c949c7b77/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=84bd6bba45997aca9b1bd9f55d3f2b5c949c7b77", "patch": "@@ -4243,64 +4243,6 @@ In general, `--crate-type=bin` or `--crate-type=lib` should be sufficient for\n all compilation needs, and the other options are just available if more\n fine-grained control is desired over the output format of a Rust crate.\n \n-### Logging system\n-\n-The runtime contains a system for directing [logging\n-expressions](#logging-expressions) to a logging console and/or internal logging\n-buffers. Logging can be enabled per module.\n-\n-Logging output is enabled by setting the `RUST_LOG` environment variable.\n-`RUST_LOG` accepts a logging specification made up of a comma-separated list of\n-paths, with optional log levels. For each module containing log expressions, if\n-`RUST_LOG` contains the path to that module or a parent of that module, then\n-logs of the appropriate level will be output to the console.\n-\n-The path to a module consists of the crate name, any parent modules, then the\n-module itself, all separated by double colons (`::`). The optional log level\n-can be appended to the module path with an equals sign (`=`) followed by the\n-log level, from 1 to 4, inclusive. Level 1 is the error level, 2 is warning, 3\n-info, and 4 debug. You can also use the symbolic constants `error`, `warn`,\n-`info`, and `debug`. Any logs less than or equal to the specified level will\n-be output. If not specified then log level 4 is assumed. Debug messages can be\n-omitted by passing `--cfg ndebug` to `rustc`.\n-\n-As an example, to see all the logs generated by the compiler, you would set\n-`RUST_LOG` to `rustc`, which is the crate name (as specified in its `crate_id`\n-[attribute](#attributes)). To narrow down the logs to just crate resolution,\n-you would set it to `rustc::metadata::creader`. To see just error logging use\n-`rustc=0`.\n-\n-Note that when compiling source files that don't specify a crate name the crate\n-is given a default name that matches the source file, with the extension\n-removed. In that case, to turn on logging for a program compiled from, e.g.\n-`helloworld.rs`, `RUST_LOG` should be set to `helloworld`.\n-\n-#### Logging Expressions\n-\n-Rust provides several macros to log information. Here's a simple Rust program\n-that demonstrates all four of them:\n-\n-```\n-#![feature(phase)]\n-#[phase(plugin, link)] extern crate log;\n-\n-fn main() {\n-    error!(\"This is an error log\")\n-    warn!(\"This is a warn log\")\n-    info!(\"this is an info log\")\n-    debug!(\"This is a debug log\")\n-}\n-```\n-\n-These four log levels correspond to levels 1-4, as controlled by `RUST_LOG`:\n-\n-```sh\n-$ RUST_LOG=rust=3 ./rust\n-This is an error log\n-This is a warn log\n-this is an info log\n-```\n-\n # Appendix: Rationales and design tradeoffs\n \n *TODO*."}]}