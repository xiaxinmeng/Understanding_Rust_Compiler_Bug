{"sha": "9b1d4cc8abdd756f6a46e220a278c012846bb56a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliMWQ0Y2M4YWJkZDc1NmY2YTQ2ZTIyMGEyNzhjMDEyODQ2YmI1NmE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-11-06T19:29:41Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-11-06T19:29:41Z"}, "message": "don\\t indent tests", "tree": {"sha": "fc1ef378430afd0e08de576b84b7208d34dd7a01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc1ef378430afd0e08de576b84b7208d34dd7a01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b1d4cc8abdd756f6a46e220a278c012846bb56a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b1d4cc8abdd756f6a46e220a278c012846bb56a", "html_url": "https://github.com/rust-lang/rust/commit/9b1d4cc8abdd756f6a46e220a278c012846bb56a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b1d4cc8abdd756f6a46e220a278c012846bb56a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d5be44b6e0ccd3e806697dcfc2337a2c0ed5914", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d5be44b6e0ccd3e806697dcfc2337a2c0ed5914", "html_url": "https://github.com/rust-lang/rust/commit/0d5be44b6e0ccd3e806697dcfc2337a2c0ed5914"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "1a952197fe1de4f8376152a27fb3c461694e02fe", "filename": "docs/dev/style.md", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9b1d4cc8abdd756f6a46e220a278c012846bb56a/docs%2Fdev%2Fstyle.md", "raw_url": "https://github.com/rust-lang/rust/raw/9b1d4cc8abdd756f6a46e220a278c012846bb56a/docs%2Fdev%2Fstyle.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fstyle.md?ref=9b1d4cc8abdd756f6a46e220a278c012846bb56a", "patch": "@@ -89,6 +89,32 @@ There are many benefits to this:\n It also makes sense to format snippets more compactly (for example, by placing enum definitions like `enum E { Foo, Bar }` on a single line),\n as long as they are still readable.\n \n+When using multiline fixtures, use unindented raw string literals:\n+\n+```rust\n+    #[test]\n+    fn inline_field_shorthand() {\n+        check_assist(\n+            inline_local_variable,\n+            r\"\n+struct S { foo: i32}\n+fn main() {\n+    let <|>foo = 92;\n+    S { foo }\n+}\n+\",\n+            r\"\n+struct S { foo: i32}\n+fn main() {\n+    S { foo: 92 }\n+}\n+\",\n+        );\n+    }\n+```\n+\n+That way, you can use your editor's \"number of selected characters\" feature to correlate offsets with test's source code.\n+\n ## Preconditions\n \n Express function preconditions in types and force the caller to provide them (rather than checking in callee):"}]}