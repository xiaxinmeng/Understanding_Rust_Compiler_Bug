{"sha": "53f7d6119ab2cc81ccfd658c5356292b593f7602", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzZjdkNjExOWFiMmNjODFjY2ZkNjU4YzUzNTYyOTJiNTkzZjc2MDI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-08T00:43:55Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-12T00:31:39Z"}, "message": "Add some FIXMEs about unwinding implementation\n\nIssue #236", "tree": {"sha": "92c4f9aae5ae9c57eeb5035725890311fa241602", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92c4f9aae5ae9c57eeb5035725890311fa241602"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53f7d6119ab2cc81ccfd658c5356292b593f7602", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53f7d6119ab2cc81ccfd658c5356292b593f7602", "html_url": "https://github.com/rust-lang/rust/commit/53f7d6119ab2cc81ccfd658c5356292b593f7602", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53f7d6119ab2cc81ccfd658c5356292b593f7602/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8a16353ea69d7ab5e31abaeb459adcad4bc7a36", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8a16353ea69d7ab5e31abaeb459adcad4bc7a36", "html_url": "https://github.com/rust-lang/rust/commit/e8a16353ea69d7ab5e31abaeb459adcad4bc7a36"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "4d535c48eb16e0c1e4eeefbd346e4adcdf192fa3", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/53f7d6119ab2cc81ccfd658c5356292b593f7602/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53f7d6119ab2cc81ccfd658c5356292b593f7602/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=53f7d6119ab2cc81ccfd658c5356292b593f7602", "patch": "@@ -3808,6 +3808,8 @@ fn invoke_(bcx: &@block_ctxt, llfn: ValueRef,\n            llargs: &[ValueRef],\n            invoker: fn(&@block_ctxt, ValueRef, &[ValueRef],\n                        BasicBlockRef, BasicBlockRef) -> ValueRef) -> result {\n+    // FIXME: May be worth turning this into a plain call when there are no\n+    // cleanups to run\n     let normal_bcx = new_sub_block_ctxt(bcx, \"normal return\");\n     let unwind_bcx = new_sub_block_ctxt(bcx, \"unwind\");\n     let retval = invoker(bcx, llfn, llargs,\n@@ -3835,6 +3837,9 @@ fn trans_landing_pad(bcx: &@block_ctxt) {\n     // The landing pad block is a cleanup\n     SetCleanup(bcx, llpad);\n \n+    // FIXME: This seems like a very naive and redundant way to generate the\n+    // landing pads, as we're re-generating all in-scope cleanups for each\n+    // function call. Probably good optimization opportunities here.\n     let bcx = bcx;\n     let scope_cx = bcx;\n     while true {"}]}