{"sha": "9e8fc364b09ff0cd4820d784b3e747c9738ed67b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllOGZjMzY0YjA5ZmYwY2Q0ODIwZDc4NGIzZTc0N2M5NzM4ZWQ2N2I=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2012-02-18T21:13:00Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2012-02-18T21:13:00Z"}, "message": "Merge pull request #1865 from cpeterso/time\n\nFix Windows system time conversion for get_time()", "tree": {"sha": "e29cf58c867a59d3c110c81f2167ea5df22cbfc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e29cf58c867a59d3c110c81f2167ea5df22cbfc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e8fc364b09ff0cd4820d784b3e747c9738ed67b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e8fc364b09ff0cd4820d784b3e747c9738ed67b", "html_url": "https://github.com/rust-lang/rust/commit/9e8fc364b09ff0cd4820d784b3e747c9738ed67b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e8fc364b09ff0cd4820d784b3e747c9738ed67b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef6f6285893ca2546d740771b4c8046bfa68f668", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef6f6285893ca2546d740771b4c8046bfa68f668", "html_url": "https://github.com/rust-lang/rust/commit/ef6f6285893ca2546d740771b4c8046bfa68f668"}, {"sha": "3d202d7eaebd97e2b98a6c6021dd2bb763356d80", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d202d7eaebd97e2b98a6c6021dd2bb763356d80", "html_url": "https://github.com/rust-lang/rust/commit/3d202d7eaebd97e2b98a6c6021dd2bb763356d80"}], "stats": {"total": 107, "additions": 87, "deletions": 20}, "files": [{"sha": "aaf94657a8b8d271e11203a7ed7378806ec75fe2", "filename": "src/libstd/time.rs", "status": "modified", "additions": 72, "deletions": 8, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/9e8fc364b09ff0cd4820d784b3e747c9738ed67b/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e8fc364b09ff0cd4820d784b3e747c9738ed67b/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=9e8fc364b09ff0cd4820d784b3e747c9738ed67b", "patch": "@@ -2,29 +2,93 @@\n Module: time\n */\n \n-// FIXME: Document what these functions do\n-\n #[abi = \"cdecl\"]\n native mod rustrt {\n     fn get_time(&sec: u32, &usec: u32);\n-    fn nano_time(&ns: u64);\n+    fn precise_time_ns(&ns: u64);\n }\n \n-/* Type: timeval */\n+/*\n+Type: timeval\n+\n+A record specifying a time value in seconds and microseconds.\n+*/\n type timeval = {sec: u32, usec: u32};\n \n-/* Function: get_time */\n+/*\n+Function: get_time\n+\n+Returns the current time as a `timeval` containing the seconds and\n+microseconds since 1970-01-01T00:00:00Z.\n+*/\n fn get_time() -> timeval {\n     let sec = 0u32;\n     let usec = 0u32;\n     rustrt::get_time(sec, usec);\n     ret {sec: sec, usec: usec};\n }\n \n-/* Function: precise_time_ns */\n-fn precise_time_ns() -> u64 { let ns = 0u64; rustrt::nano_time(ns); ret ns; }\n+/*\n+Function: precise_time_ns\n+\n+Returns the current value of a high-resolution performance counter\n+in nanoseconds since an unspecified epoch.\n+*/\n+fn precise_time_ns() -> u64 { let ns = 0u64; rustrt::precise_time_ns(ns); ns }\n+\n+/*\n+Function: precise_time_s\n \n-/* Function: precise_time_s */\n+Returns the current value of a high-resolution performance counter\n+in seconds since an unspecified epoch.\n+*/\n fn precise_time_s() -> float {\n     ret (precise_time_ns() as float) / 1000000000.;\n }\n+\n+#[cfg(test)]\n+mod tests {\n+    import task;\n+\n+    #[test]\n+    fn test_get_time() {\n+        const some_recent_date: u32 = 1325376000u32; // 2012-01-01T00:00:00Z\n+        const some_future_date: u32 = 1577836800u32; // 2020-01-01T00:00:00Z\n+\n+        let tv1 = get_time();\n+        log(debug, \"tv1=\" + uint::str(tv1.sec as uint) + \" sec + \"\n+                   + uint::str(tv1.usec as uint) + \" usec\");\n+\n+        assert tv1.sec > some_recent_date;\n+        assert tv1.usec < 1000000u32;\n+\n+        let tv2 = get_time();\n+        log(debug, \"tv2=\" + uint::str(tv2.sec as uint) + \" sec + \"\n+                   + uint::str(tv2.usec as uint) + \" usec\");\n+\n+        assert tv2.sec >= tv1.sec;\n+        assert tv2.sec < some_future_date;\n+        assert tv2.usec < 1000000u32;\n+        if tv2.sec == tv1.sec {\n+            assert tv2.usec >= tv1.usec;\n+        }\n+    }\n+\n+    #[test]\n+    fn test_precise_time() {\n+        let s0 = precise_time_s();\n+        let ns1 = precise_time_ns();\n+\n+        log(debug, \"s0=\" + float::to_str(s0, 9u) + \" sec\");\n+        assert s0 > 0.;\n+        let ns0 = (s0 * 1000000000.) as u64;\n+        log(debug, \"ns0=\" + u64::str(ns0) + \" ns\");\n+\n+        log(debug, \"ns1=\" + u64::str(ns1) + \" ns\");\n+        assert ns1 >= ns0;\n+\n+        let ns2 = precise_time_ns();\n+        log(debug, \"ns2=\" + u64::str(ns2) + \" ns\");\n+        assert ns2 >= ns1;\n+    }\n+}"}, {"sha": "6c0cd5e5fc0c03dedfe271d8f7408fd6bc3e5cf1", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9e8fc364b09ff0cd4820d784b3e747c9738ed67b/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/9e8fc364b09ff0cd4820d784b3e747c9738ed67b/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=9e8fc364b09ff0cd4820d784b3e747c9738ed67b", "patch": "@@ -393,18 +393,21 @@ rust_ptr_eq(type_desc *t, rust_box *a, rust_box *b) {\n #if defined(__WIN32__)\n extern \"C\" CDECL void\n get_time(uint32_t *sec, uint32_t *usec) {\n-    rust_task *task = rust_task_thread::get_task();\n-    SYSTEMTIME systemTime;\n     FILETIME fileTime;\n-    GetSystemTime(&systemTime);\n-    if (!SystemTimeToFileTime(&systemTime, &fileTime)) {\n-        task->fail();\n-        return;\n-    }\n+    GetSystemTimeAsFileTime(&fileTime);\n+\n+    // A FILETIME contains a 64-bit value representing the number of\n+    // hectonanosecond (100-nanosecond) intervals since 1601-01-01T00:00:00Z.\n+    // http://support.microsoft.com/kb/167296/en-us\n+    ULARGE_INTEGER ul;\n+    ul.LowPart = fileTime.dwLowDateTime;\n+    ul.HighPart = fileTime.dwHighDateTime;\n+    uint64_t ns_since_1601 = ul.QuadPart / 10;\n \n-    // FIXME: This is probably completely wrong.\n-    *sec = fileTime.dwHighDateTime;\n-    *usec = fileTime.dwLowDateTime;\n+    const uint64_t NANOSECONDS_FROM_1601_TO_1970 = 11644473600000000u;\n+    uint64_t ns_since_1970 = ns_since_1601 - NANOSECONDS_FROM_1601_TO_1970;\n+    *sec = ns_since_1970 / 1000000;\n+    *usec = ns_since_1970 % 1000000;\n }\n #else\n extern \"C\" CDECL void\n@@ -417,7 +420,7 @@ get_time(uint32_t *sec, uint32_t *usec) {\n #endif\n \n extern \"C\" CDECL void\n-nano_time(uint64_t *ns) {\n+precise_time_ns(uint64_t *ns) {\n     timer t;\n     *ns = t.time_ns();\n }"}, {"sha": "5b62d606917f59a4f73a75cc059bf56d9ca17a75", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e8fc364b09ff0cd4820d784b3e747c9738ed67b/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/9e8fc364b09ff0cd4820d784b3e747c9738ed67b/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=9e8fc364b09ff0cd4820d784b3e747c9738ed67b", "patch": "@@ -13,10 +13,10 @@ get_port_id\n get_task_id\n get_time\n last_os_error\n-nano_time\n new_port\n new_task\n port_recv\n+precise_time_ns\n rust_port_select\n rand_free\n rand_new"}]}