{"sha": "6bc7f41955c7583eca76c77fb45e51e3431cc89e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiYzdmNDE5NTVjNzU4M2VjYTc2Yzc3ZmI0NWU1MWUzNDMxY2M4OWU=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-02-27T01:14:58Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-03-07T00:58:03Z"}, "message": "Remove the contains_extern_indicator query\n\nPart of #47320", "tree": {"sha": "a4db6e18f2e0f5264ab16cf2e7db59bd34327def", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4db6e18f2e0f5264ab16cf2e7db59bd34327def"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bc7f41955c7583eca76c77fb45e51e3431cc89e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bc7f41955c7583eca76c77fb45e51e3431cc89e", "html_url": "https://github.com/rust-lang/rust/commit/6bc7f41955c7583eca76c77fb45e51e3431cc89e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bc7f41955c7583eca76c77fb45e51e3431cc89e/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5460b8877485e1040d51b52bf9bd9f7cb159060f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5460b8877485e1040d51b52bf9bd9f7cb159060f", "html_url": "https://github.com/rust-lang/rust/commit/5460b8877485e1040d51b52bf9bd9f7cb159060f"}], "stats": {"total": 27, "additions": 11, "deletions": 16}, "files": [{"sha": "2550ef667e0804c92870e70113b2815ef7babaf1", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=6bc7f41955c7583eca76c77fb45e51e3431cc89e", "patch": "@@ -627,7 +627,6 @@ define_dep_nodes!( <'tcx>\n     [input] AllCrateNums,\n     [] ExportedSymbols(CrateNum),\n     [eval_always] CollectAndPartitionTranslationItems,\n-    [] ContainsExternIndicator(DefId),\n     [] IsTranslatedItem(DefId),\n     [] CodegenUnit(InternedString),\n     [] CompileCodegenUnit(InternedString),"}, {"sha": "e9bada5a1478da1289de5b7bf8a75bffb731e077", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=6bc7f41955c7583eca76c77fb45e51e3431cc89e", "patch": "@@ -2227,6 +2227,7 @@ bitflags! {\n         const UNWIND                    = 0b0000_0100;\n         const RUSTC_ALLOCATOR_NOUNWIND  = 0b0000_1000;\n         const NAKED                     = 0b0001_0000;\n+        const NO_MANGLE                 = 0b0010_0000;\n     }\n }\n \n@@ -2246,5 +2247,10 @@ impl TransFnAttrs {\n             InlineAttr::None | InlineAttr::Never => false,\n         }\n     }\n+\n+    /// True if `#[no_mangle]` or `#[export_name(...)]` is present.\n+    pub fn contains_extern_indicator(&self) -> bool {\n+        self.flags.contains(TransFnAttrFlags::NO_MANGLE) || self.export_name.is_some()\n+    }\n }\n "}, {"sha": "48a62c8c14d6969e00b20916ba05ecd55ee4c682", "filename": "src/librustc/middle/reachable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc%2Fmiddle%2Freachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc%2Fmiddle%2Freachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Freachable.rs?ref=6bc7f41955c7583eca76c77fb45e51e3431cc89e", "patch": "@@ -233,7 +233,7 @@ impl<'a, 'tcx> ReachableContext<'a, 'tcx> {\n                     false\n                 };\n                 let def_id = self.tcx.hir.local_def_id(item.id);\n-                let is_extern = self.tcx.contains_extern_indicator(def_id);\n+                let is_extern = self.tcx.trans_fn_attrs(def_id).contains_extern_indicator();\n                 if reachable || is_extern {\n                     self.reachable_symbols.insert(search_item);\n                 }"}, {"sha": "fdc929ed084136652323815bdaec37ec055727e2", "filename": "src/librustc/ty/maps/config.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs?ref=6bc7f41955c7583eca76c77fb45e51e3431cc89e", "patch": "@@ -687,7 +687,6 @@ impl_disk_cacheable_query!(borrowck, |def_id| def_id.is_local());\n impl_disk_cacheable_query!(mir_borrowck, |def_id| def_id.is_local());\n impl_disk_cacheable_query!(mir_const_qualif, |def_id| def_id.is_local());\n impl_disk_cacheable_query!(check_match, |def_id| def_id.is_local());\n-impl_disk_cacheable_query!(contains_extern_indicator, |_| true);\n impl_disk_cacheable_query!(def_symbol_name, |_| true);\n impl_disk_cacheable_query!(type_of, |def_id| def_id.is_local());\n impl_disk_cacheable_query!(predicates_of, |def_id| def_id.is_local());"}, {"sha": "9fb021ea6d7673d2837b4aab7e962d83a2252c81", "filename": "src/librustc/ty/maps/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs?ref=6bc7f41955c7583eca76c77fb45e51e3431cc89e", "patch": "@@ -363,7 +363,6 @@ define_maps! { <'tcx>\n     [] fn collect_and_partition_translation_items:\n         collect_and_partition_translation_items_node(CrateNum)\n         -> (Arc<DefIdSet>, Arc<Vec<Arc<CodegenUnit<'tcx>>>>),\n-    [] fn contains_extern_indicator: ContainsExternIndicator(DefId) -> bool,\n     [] fn symbol_export_level: GetSymbolExportLevel(DefId) -> SymbolExportLevel,\n     [] fn is_translated_item: IsTranslatedItem(DefId) -> bool,\n     [] fn codegen_unit: CodegenUnit(InternedString) -> Arc<CodegenUnit<'tcx>>,"}, {"sha": "ba99c80ffeba53d0ebfdb35fc7634bcba221e067", "filename": "src/librustc/ty/maps/on_disk_cache.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc%2Fty%2Fmaps%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc%2Fty%2Fmaps%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fon_disk_cache.rs?ref=6bc7f41955c7583eca76c77fb45e51e3431cc89e", "patch": "@@ -217,7 +217,6 @@ impl<'sess> OnDiskCache<'sess> {\n                 encode_query_results::<mir_const_qualif, _>(tcx, enc, qri)?;\n                 encode_query_results::<def_symbol_name, _>(tcx, enc, qri)?;\n                 encode_query_results::<const_is_rvalue_promotable_to_static, _>(tcx, enc, qri)?;\n-                encode_query_results::<contains_extern_indicator, _>(tcx, enc, qri)?;\n                 encode_query_results::<symbol_name, _>(tcx, enc, qri)?;\n                 encode_query_results::<check_match, _>(tcx, enc, qri)?;\n             }"}, {"sha": "69332f6502f7e6303a90a1a737aae42556ab4de7", "filename": "src/librustc/ty/maps/plumbing.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fplumbing.rs?ref=6bc7f41955c7583eca76c77fb45e51e3431cc89e", "patch": "@@ -926,9 +926,6 @@ pub fn force_from_dep_node<'a, 'gcx, 'lcx>(tcx: TyCtxt<'a, 'gcx, 'lcx>,\n         DepKind::CollectAndPartitionTranslationItems => {\n             force!(collect_and_partition_translation_items, LOCAL_CRATE);\n         }\n-        DepKind::ContainsExternIndicator => {\n-            force!(contains_extern_indicator, def_id!());\n-        }\n         DepKind::IsTranslatedItem => { force!(is_translated_item, def_id!()); }\n         DepKind::OutputFilenames => { force!(output_filenames, LOCAL_CRATE); }\n \n@@ -997,7 +994,6 @@ impl_load_from_cache!(\n     MirConstQualif => mir_const_qualif,\n     SymbolName => def_symbol_name,\n     ConstIsRvaluePromotableToStatic => const_is_rvalue_promotable_to_static,\n-    ContainsExternIndicator => contains_extern_indicator,\n     CheckMatch => check_match,\n     TypeOfItem => type_of,\n     GenericsOfItem => generics_of,"}, {"sha": "799d8319767aaac8b145dc3d65e2c0a3fa8e3a8e", "filename": "src/librustc_trans/back/symbol_export.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fsymbol_export.rs?ref=6bc7f41955c7583eca76c77fb45e51e3431cc89e", "patch": "@@ -256,7 +256,8 @@ fn symbol_export_level_provider(tcx: TyCtxt, sym_def_id: DefId) -> SymbolExportL\n     // special symbols in the standard library for various plumbing between\n     // core/std/allocators/etc. For example symbols used to hook up allocation\n     // are not considered for export\n-    let is_extern = tcx.contains_extern_indicator(sym_def_id);\n+    let trans_fn_attrs = tcx.trans_fn_attrs(sym_def_id);\n+    let is_extern = trans_fn_attrs.contains_extern_indicator();\n     let std_internal = attr::contains_name(&tcx.get_attrs(sym_def_id),\n                                            \"rustc_std_internal_symbol\");\n     if is_extern && !std_internal {"}, {"sha": "f9f93730255e6e302409d59615671653c1030cbf", "filename": "src/librustc_trans_utils/symbol_names.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc_trans_utils%2Fsymbol_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc_trans_utils%2Fsymbol_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans_utils%2Fsymbol_names.rs?ref=6bc7f41955c7583eca76c77fb45e51e3431cc89e", "patch": "@@ -120,11 +120,6 @@ pub fn provide(providers: &mut Providers) {\n         def_symbol_name,\n         symbol_name,\n \n-        contains_extern_indicator: |tcx, id| {\n-            attr::contains_name(&tcx.get_attrs(id), \"no_mangle\") ||\n-                tcx.trans_fn_attrs(id).export_name.is_some()\n-        },\n-\n         ..*providers\n     };\n }"}, {"sha": "04e993f1b0321bbbac1c91bc22f44e70d16563e1", "filename": "src/librustc_trans_utils/trans_crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc_trans_utils%2Ftrans_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc_trans_utils%2Ftrans_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans_utils%2Ftrans_crate.rs?ref=6bc7f41955c7583eca76c77fb45e51e3431cc89e", "patch": "@@ -233,7 +233,6 @@ impl TransCrate for MetadataOnlyTransCrate {\n                 MonoItem::Fn(inst) => {\n                     let def_id = inst.def_id();\n                     if def_id.is_local()  {\n-                        let _ = tcx.contains_extern_indicator(def_id);\n                         let _ = inst.def.is_inline(tcx);\n                         let _ = tcx.trans_fn_attrs(def_id);\n                     }"}, {"sha": "76d2be6695c75d744dd9bf27f903d183e3c5b3df", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc7f41955c7583eca76c77fb45e51e3431cc89e/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=6bc7f41955c7583eca76c77fb45e51e3431cc89e", "patch": "@@ -1743,6 +1743,8 @@ fn trans_fn_attrs<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, id: DefId) -> TransFnAt\n             trans_fn_attrs.flags |= TransFnAttrFlags::RUSTC_ALLOCATOR_NOUNWIND;\n         } else if attr.check_name(\"naked\") {\n             trans_fn_attrs.flags |= TransFnAttrFlags::NAKED;\n+        } else if attr.check_name(\"no_mangle\") {\n+            trans_fn_attrs.flags |= TransFnAttrFlags::NO_MANGLE;\n         } else if attr.check_name(\"inline\") {\n             trans_fn_attrs.inline = attrs.iter().fold(InlineAttr::None, |ia, attr| {\n                 if attr.path != \"inline\" {"}]}