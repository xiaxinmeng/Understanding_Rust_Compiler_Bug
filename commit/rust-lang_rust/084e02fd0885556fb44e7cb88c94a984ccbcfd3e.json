{"sha": "084e02fd0885556fb44e7cb88c94a984ccbcfd3e", "node_id": "C_kwDOAAsO6NoAKDA4NGUwMmZkMDg4NTU1NmZiNDRlN2NiODhjOTRhOTg0Y2NiY2ZkM2U", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-21T01:52:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-21T01:52:14Z"}, "message": "Auto merge of #2398 - sunshowers:nextest-compat, r=RalfJung\n\n[cargo-miri] support nextest\n\nAdd the ability to run `cargo miri nextest list` and `cargo miri nextest run`.\n\n[cargo-nextest](https://nexte.st) is a new test runner for Rust maintained mostly by myself. It has several new features, but the most relevant to miri is the fact that it runs [each test in its own process](https://nexte.st/book/how-it-works.html#the-nextest-model). This gives miri users better leak detection (https://github.com/rust-lang/miri/issues/1481) for free, for example.\n\nSee https://github.com/nextest-rs/nextest/issues/181 for discussion, including comments by `@eddyb` and `@RalfJung.`\n\nFuture work might be to have miri read [the list of tests](https://docs.rs/nextest-metadata/latest/nextest_metadata/struct.TestListSummary.html) (or [test binaries](https://docs.rs/nextest-metadata/latest/nextest_metadata/struct.BinaryListSummary.html)) generated by `nextest list`. `@eddyb` thinks that might be useful.\n\nI tested `cargo miri nextest run` against smallvec, and it worked great.\n\nNote: Running tests out of archives is currently broken, as the comment in run-test.py explains.", "tree": {"sha": "6999064ea6fbde87b759be3b4c51b11fed20a83c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6999064ea6fbde87b759be3b4c51b11fed20a83c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/084e02fd0885556fb44e7cb88c94a984ccbcfd3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/084e02fd0885556fb44e7cb88c94a984ccbcfd3e", "html_url": "https://github.com/rust-lang/rust/commit/084e02fd0885556fb44e7cb88c94a984ccbcfd3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/084e02fd0885556fb44e7cb88c94a984ccbcfd3e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ecdc9ea6180118efcf4192ce5e073c39fb5db30", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ecdc9ea6180118efcf4192ce5e073c39fb5db30", "html_url": "https://github.com/rust-lang/rust/commit/9ecdc9ea6180118efcf4192ce5e073c39fb5db30"}, {"sha": "88ad9ca9067ea1ce04313d7384c14fc24d1adbee", "url": "https://api.github.com/repos/rust-lang/rust/commits/88ad9ca9067ea1ce04313d7384c14fc24d1adbee", "html_url": "https://github.com/rust-lang/rust/commit/88ad9ca9067ea1ce04313d7384c14fc24d1adbee"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "9f6603f80b7eb6baf2df15ecda38f5319ddd22c2", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/084e02fd0885556fb44e7cb88c94a984ccbcfd3e/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/084e02fd0885556fb44e7cb88c94a984ccbcfd3e/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=084e02fd0885556fb44e7cb88c94a984ccbcfd3e", "patch": "@@ -27,6 +27,7 @@ Usage:\n Subcommands:\n     run, r                   Run binaries\n     test, t                  Run tests\n+    nextest                  Run tests with nextest (requires cargo-nextest installed)\n     setup                    Only perform automatic setup, but without asking questions (for getting a proper libstd)\n \n The cargo options are exactly the same as for `cargo run` and `cargo test`, respectively.\n@@ -586,11 +587,10 @@ fn phase_cargo_miri(mut args: env::Args) {\n     };\n     let subcommand = match &*subcommand {\n         \"setup\" => MiriCommand::Setup,\n-        \"test\" | \"t\" | \"run\" | \"r\" => MiriCommand::Forward(subcommand),\n-        // Invalid command.\n+        \"test\" | \"t\" | \"run\" | \"r\" | \"nextest\" => MiriCommand::Forward(subcommand),\n         _ =>\n             show_error(format!(\n-                \"`cargo miri` supports the following subcommands: `run`, `test`, and `setup`.\"\n+                \"`cargo miri` supports the following subcommands: `run`, `test`, `nextest`, and `setup`.\"\n             )),\n     };\n     let verbose = num_arg_flag(\"-v\");"}]}