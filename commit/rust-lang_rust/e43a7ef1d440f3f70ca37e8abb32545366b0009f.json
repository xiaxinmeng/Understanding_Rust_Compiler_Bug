{"sha": "e43a7ef1d440f3f70ca37e8abb32545366b0009f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0M2E3ZWYxZDQ0MGYzZjcwY2EzN2U4YWJiMzI1NDUzNjZiMDAwOWY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-07T03:37:05Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-23T12:55:10Z"}, "message": "simplify parse_prefix_range_expr", "tree": {"sha": "cb923bfe78e9c427af9df517109da5f7c0a4f0d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb923bfe78e9c427af9df517109da5f7c0a4f0d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e43a7ef1d440f3f70ca37e8abb32545366b0009f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e43a7ef1d440f3f70ca37e8abb32545366b0009f", "html_url": "https://github.com/rust-lang/rust/commit/e43a7ef1d440f3f70ca37e8abb32545366b0009f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e43a7ef1d440f3f70ca37e8abb32545366b0009f/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8456c403e1e79220d898b29074ce41dfeb752b08", "url": "https://api.github.com/repos/rust-lang/rust/commits/8456c403e1e79220d898b29074ce41dfeb752b08", "html_url": "https://github.com/rust-lang/rust/commit/8456c403e1e79220d898b29074ce41dfeb752b08"}], "stats": {"total": 31, "additions": 13, "deletions": 18}, "files": [{"sha": "bae3b5283450f41d0727535bf7e816c8bfd898d0", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/e43a7ef1d440f3f70ca37e8abb32545366b0009f/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e43a7ef1d440f3f70ca37e8abb32545366b0009f/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=e43a7ef1d440f3f70ca37e8abb32545366b0009f", "patch": "@@ -406,10 +406,7 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Parses prefix-forms of range notation: `..expr`, `..`, `..=expr`.\n-    fn parse_prefix_range_expr(\n-        &mut self,\n-        already_parsed_attrs: Option<AttrVec>,\n-    ) -> PResult<'a, P<Expr>> {\n+    fn parse_prefix_range_expr(&mut self, attrs: Option<AttrVec>) -> PResult<'a, P<Expr>> {\n         // Check for deprecated `...` syntax.\n         if self.token == token::DotDotDot {\n             self.err_dotdotdot_syntax(self.token.span);\n@@ -420,25 +417,23 @@ impl<'a> Parser<'a> {\n             \"parse_prefix_range_expr: token {:?} is not DotDot/DotDotEq\",\n             self.token\n         );\n-        let tok = self.token.clone();\n-        let attrs = self.parse_or_use_outer_attributes(already_parsed_attrs)?;\n+\n+        let limits = match self.token.kind {\n+            token::DotDot => RangeLimits::HalfOpen,\n+            _ => RangeLimits::Closed,\n+        };\n+        let op = AssocOp::from_token(&self.token);\n+        let attrs = self.parse_or_use_outer_attributes(attrs)?;\n         let lo = self.token.span;\n-        let mut hi = self.token.span;\n         self.bump();\n-        let opt_end = if self.is_at_start_of_range_notation_rhs() {\n+        let (span, opt_end) = if self.is_at_start_of_range_notation_rhs() {\n             // RHS must be parsed with more associativity than the dots.\n-            let next_prec = AssocOp::from_token(&tok).unwrap().precedence() + 1;\n-            Some(self.parse_assoc_expr_with(next_prec, LhsExpr::NotYetParsed).map(|x| {\n-                hi = x.span;\n-                x\n-            })?)\n+            self.parse_assoc_expr_with(op.unwrap().precedence() + 1, LhsExpr::NotYetParsed)\n+                .map(|x| (lo.to(x.span), Some(x)))?\n         } else {\n-            None\n+            (lo, None)\n         };\n-        let limits = if tok == token::DotDot { RangeLimits::HalfOpen } else { RangeLimits::Closed };\n-\n-        let r = self.mk_range(None, opt_end, limits)?;\n-        Ok(self.mk_expr(lo.to(hi), r, attrs))\n+        Ok(self.mk_expr(span, self.mk_range(None, opt_end, limits)?, attrs))\n     }\n \n     /// Parses a prefix-unary-operator expr."}]}