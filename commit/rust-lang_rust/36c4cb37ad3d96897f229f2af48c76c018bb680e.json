{"sha": "36c4cb37ad3d96897f229f2af48c76c018bb680e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2YzRjYjM3YWQzZDk2ODk3ZjIyOWYyYWY0OGM3NmMwMThiYjY4MGU=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-07-09T04:49:34Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-07-09T05:25:57Z"}, "message": "Improve impossible-case handling in ty::get_element_type", "tree": {"sha": "a9333e5da23dbb1ca85fe552cb9c3c232d7bf01a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9333e5da23dbb1ca85fe552cb9c3c232d7bf01a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36c4cb37ad3d96897f229f2af48c76c018bb680e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36c4cb37ad3d96897f229f2af48c76c018bb680e", "html_url": "https://github.com/rust-lang/rust/commit/36c4cb37ad3d96897f229f2af48c76c018bb680e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36c4cb37ad3d96897f229f2af48c76c018bb680e/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91d45b91e64c4db6f07b9dd21837dac84f0a1255", "url": "https://api.github.com/repos/rust-lang/rust/commits/91d45b91e64c4db6f07b9dd21837dac84f0a1255", "html_url": "https://github.com/rust-lang/rust/commit/91d45b91e64c4db6f07b9dd21837dac84f0a1255"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "678821f0cdea4e7d6f2ea882b54efd95978b735a", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/36c4cb37ad3d96897f229f2af48c76c018bb680e/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36c4cb37ad3d96897f229f2af48c76c018bb680e/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=36c4cb37ad3d96897f229f2af48c76c018bb680e", "patch": "@@ -959,16 +959,17 @@ fn type_is_tup_like(&ctxt cx, &t ty) -> bool {\n }\n \n fn get_element_type(&ctxt cx, &t ty, uint i) -> t {\n-    assert (type_is_tup_like(cx, ty));\n     alt (struct(cx, ty)) {\n         case (ty_tup(?mts)) { ret mts.(i).ty; }\n         case (ty_rec(?flds)) { ret flds.(i).mt.ty; }\n+        case (_)             {\n+            cx.sess.bug(\"get_element_type called on type \"\n+                        + ty_to_str(cx, ty) + \" - expected a \\\n+            tuple or record\");\n+        }\n     }\n     // NB: This is not exhaustive -- struct(cx, ty) could be a box or a\n     // tag.\n-\n-    cx.sess.bug(\"get_element_type called on a value other than a \" +\n-                    \"tuple or record\");\n }\n \n fn type_is_box(&ctxt cx, &t ty) -> bool {"}]}