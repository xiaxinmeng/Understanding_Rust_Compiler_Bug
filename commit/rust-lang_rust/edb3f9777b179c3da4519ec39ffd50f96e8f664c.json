{"sha": "edb3f9777b179c3da4519ec39ffd50f96e8f664c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkYjNmOTc3N2IxNzljM2RhNDUxOWVjMzlmZmQ1MGY5NmU4ZjY2NGM=", "commit": {"author": {"name": "scalexm", "email": "martin.alex32@hotmail.fr", "date": "2018-10-03T16:49:27Z"}, "committer": {"name": "scalexm", "email": "martin.alex32@hotmail.fr", "date": "2018-10-03T16:49:27Z"}, "message": "Fix `ty::UnnormalizedProjection` in rustdoc", "tree": {"sha": "55bf3766638a8d768c829fa5ced3b2158f371fe2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55bf3766638a8d768c829fa5ced3b2158f371fe2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edb3f9777b179c3da4519ec39ffd50f96e8f664c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edb3f9777b179c3da4519ec39ffd50f96e8f664c", "html_url": "https://github.com/rust-lang/rust/commit/edb3f9777b179c3da4519ec39ffd50f96e8f664c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edb3f9777b179c3da4519ec39ffd50f96e8f664c/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "608adfc3f01c425d2ede9263e6fafaaf7f38b377", "url": "https://api.github.com/repos/rust-lang/rust/commits/608adfc3f01c425d2ede9263e6fafaaf7f38b377", "html_url": "https://github.com/rust-lang/rust/commit/608adfc3f01c425d2ede9263e6fafaaf7f38b377"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "9b305ad03b056bfeb9fe83a77eeda6cb1ff11969", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/edb3f9777b179c3da4519ec39ffd50f96e8f664c/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edb3f9777b179c3da4519ec39ffd50f96e8f664c/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=edb3f9777b179c3da4519ec39ffd50f96e8f664c", "patch": "@@ -2737,6 +2737,7 @@ impl<'tcx> Clean<Type> for Ty<'tcx> {\n \n             ty::Closure(..) | ty::Generator(..) => Tuple(vec![]), // FIXME(pcwalton)\n \n+            ty::UnnormalizedProjection(..) => panic!(\"UnnormalizedProjection\"),\n             ty::GeneratorWitness(..) => panic!(\"GeneratorWitness\"),\n             ty::Infer(..) => panic!(\"Infer\"),\n             ty::Error => panic!(\"Error\"),"}]}