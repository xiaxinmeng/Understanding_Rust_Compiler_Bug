{"sha": "5cf387c4f41fd0afc01650e896e865c90d387d31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZjM4N2M0ZjQxZmQwYWZjMDE2NTBlODk2ZTg2NWM5MGQzODdkMzE=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-07-28T08:06:11Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-08-19T23:53:43Z"}, "message": "Update try-block tests to work under NLL", "tree": {"sha": "13be7fa1199bb6816fb5d25c8fcaafd2d3b84e11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13be7fa1199bb6816fb5d25c8fcaafd2d3b84e11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cf387c4f41fd0afc01650e896e865c90d387d31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cf387c4f41fd0afc01650e896e865c90d387d31", "html_url": "https://github.com/rust-lang/rust/commit/5cf387c4f41fd0afc01650e896e865c90d387d31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cf387c4f41fd0afc01650e896e865c90d387d31/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "html_url": "https://github.com/rust-lang/rust/commit/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "576a0202018b6ae5b00fa8e020e9a1fc5efbf85a", "filename": "src/test/compile-fail/try-block-bad-lifetime.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5cf387c4f41fd0afc01650e896e865c90d387d31/src%2Ftest%2Fcompile-fail%2Ftry-block-bad-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cf387c4f41fd0afc01650e896e865c90d387d31/src%2Ftest%2Fcompile-fail%2Ftry-block-bad-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftry-block-bad-lifetime.rs?ref=5cf387c4f41fd0afc01650e896e865c90d387d31", "patch": "@@ -12,18 +12,22 @@\n \n #![feature(try_blocks)]\n \n+#![inline(never)]\n+fn do_something_with<T>(_x: T) {}\n+\n // This test checks that borrows made and returned inside try blocks are properly constrained\n pub fn main() {\n     {\n         // Test that borrows returned from a try block must be valid for the lifetime of the\n         // result variable\n-        let _result: Result<(), &str> = try {\n+        let result: Result<(), &str> = try {\n             let my_string = String::from(\"\");\n             let my_str: & str = & my_string;\n             //~^ ERROR `my_string` does not live long enough\n             Err(my_str) ?;\n             Err(\"\") ?;\n         };\n+        do_something_with(result);\n     }\n \n     {"}, {"sha": "b5e0ebdbc222ef10adcfc2979fd87ea3c04070ba", "filename": "src/test/compile-fail/try-block-maybe-bad-lifetime.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5cf387c4f41fd0afc01650e896e865c90d387d31/src%2Ftest%2Fcompile-fail%2Ftry-block-maybe-bad-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cf387c4f41fd0afc01650e896e865c90d387d31/src%2Ftest%2Fcompile-fail%2Ftry-block-maybe-bad-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftry-block-maybe-bad-lifetime.rs?ref=5cf387c4f41fd0afc01650e896e865c90d387d31", "patch": "@@ -12,6 +12,9 @@\n \n #![feature(try_blocks)]\n \n+#![inline(never)]\n+fn do_something_with<T>(_x: T) {}\n+\n // This test checks that borrows made and returned inside try blocks are properly constrained\n pub fn main() {\n     {\n@@ -21,9 +24,9 @@ pub fn main() {\n             Err(())?;\n             &i\n         };\n-        x.ok().cloned();\n         i = 0; //~ ERROR cannot assign to `i` because it is borrowed\n         let _ = i;\n+        do_something_with(x);\n     }\n \n     {\n@@ -32,20 +35,21 @@ pub fn main() {\n             Err(())?;\n             ::std::mem::drop(x);\n         };\n-        println!(\"{}\", x); //~ ERROR use of moved value: `x`\n+        println!(\"{}\", x); //~ ERROR borrow of moved value: `x`\n     }\n \n     {\n         // Test that a borrow which *might* be assigned to an outer variable still freezes\n         // its referent\n         let mut i = 222;\n-        let j;\n-        let x: Result<(), ()> = try {\n+        let mut j = &-1;\n+        let _x: Result<(), ()> = try {\n             Err(())?;\n             j = &i;\n         };\n         i = 0; //~ ERROR cannot assign to `i` because it is borrowed\n         let _ = i;\n+        do_something_with(j);\n     }\n }\n "}, {"sha": "ca81a9c311037cc98e3f4cd085c078f3ae6537a4", "filename": "src/test/compile-fail/try-block-opt-init.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cf387c4f41fd0afc01650e896e865c90d387d31/src%2Ftest%2Fcompile-fail%2Ftry-block-opt-init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cf387c4f41fd0afc01650e896e865c90d387d31/src%2Ftest%2Fcompile-fail%2Ftry-block-opt-init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftry-block-opt-init.rs?ref=5cf387c4f41fd0afc01650e896e865c90d387d31", "patch": "@@ -22,6 +22,6 @@ pub fn main() {\n         Ok::<(), ()>(())?;\n         use_val(cfg_res);\n     };\n-    assert_eq!(cfg_res, 5); //~ ERROR use of possibly uninitialized variable\n+    assert_eq!(cfg_res, 5); //~ ERROR borrow of possibly uninitialized variable: `cfg_res`\n }\n "}]}