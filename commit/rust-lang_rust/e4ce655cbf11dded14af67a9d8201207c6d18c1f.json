{"sha": "e4ce655cbf11dded14af67a9d8201207c6d18c1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0Y2U2NTVjYmYxMWRkZWQxNGFmNjdhOWQ4MjAxMjA3YzZkMThjMWY=", "commit": {"author": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-04-23T17:29:18Z"}, "committer": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-04-23T17:29:18Z"}, "message": "Handle pretty printing of `else if let` clauses\n\nCloses #84434. Closes #82329.", "tree": {"sha": "d39e9f0a4d7786eb78a737ef35fdf02de6633845", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d39e9f0a4d7786eb78a737ef35fdf02de6633845"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4ce655cbf11dded14af67a9d8201207c6d18c1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4ce655cbf11dded14af67a9d8201207c6d18c1f", "html_url": "https://github.com/rust-lang/rust/commit/e4ce655cbf11dded14af67a9d8201207c6d18c1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4ce655cbf11dded14af67a9d8201207c6d18c1f/comments", "author": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6df26f897cffb2d86880544bb451c6b5f8509b2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6df26f897cffb2d86880544bb451c6b5f8509b2d", "html_url": "https://github.com/rust-lang/rust/commit/6df26f897cffb2d86880544bb451c6b5f8509b2d"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "77d083fc5e967b4cae32fd111f2efdc40646c105", "filename": "compiler/rustc_hir_pretty/src/lib.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e4ce655cbf11dded14af67a9d8201207c6d18c1f/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4ce655cbf11dded14af67a9d8201207c6d18c1f/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs?ref=e4ce655cbf11dded14af67a9d8201207c6d18c1f", "patch": "@@ -1095,8 +1095,8 @@ impl<'a> State<'a> {\n \n     fn print_else(&mut self, els: Option<&hir::Expr<'_>>) {\n         match els {\n-            Some(_else) => {\n-                match _else.kind {\n+            Some(else_) => {\n+                match else_.kind {\n                     // \"another else-if\"\n                     hir::ExprKind::If(ref i, ref then, ref e) => {\n                         self.cbox(INDENT_UNIT - 1);\n@@ -1114,6 +1114,26 @@ impl<'a> State<'a> {\n                         self.s.word(\" else \");\n                         self.print_block(&b)\n                     }\n+                    hir::ExprKind::Match(ref expr, arms, _) => {\n+                        // else if let desugared to match\n+                        assert!(arms.len() == 2, \"if let desugars to match with two arms\");\n+\n+                        self.s.word(\" else \");\n+                        self.s.word(\"{\");\n+\n+                        self.cbox(INDENT_UNIT);\n+                        self.ibox(INDENT_UNIT);\n+                        self.word_nbsp(\"match\");\n+                        self.print_expr_as_cond(&expr);\n+                        self.s.space();\n+                        self.bopen();\n+                        for arm in arms {\n+                            self.print_arm(arm);\n+                        }\n+                        self.bclose(expr.span);\n+\n+                        self.s.word(\"}\");\n+                    }\n                     // BLEAH, constraints would be great here\n                     _ => {\n                         panic!(\"print_if saw if with weird alternative\");"}]}