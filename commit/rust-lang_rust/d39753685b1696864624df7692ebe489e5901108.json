{"sha": "d39753685b1696864624df7692ebe489e5901108", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzOTc1MzY4NWIxNjk2ODY0NjI0ZGY3NjkyZWJlNDg5ZTU5MDExMDg=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-08T14:28:21Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-08T14:28:21Z"}, "message": "Doc tweak.", "tree": {"sha": "e4229f969a2ba164a803e115f820d18de0d9de36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4229f969a2ba164a803e115f820d18de0d9de36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d39753685b1696864624df7692ebe489e5901108", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d39753685b1696864624df7692ebe489e5901108", "html_url": "https://github.com/rust-lang/rust/commit/d39753685b1696864624df7692ebe489e5901108", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d39753685b1696864624df7692ebe489e5901108/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e813388df8df90d0db658e1e745a0a8a4d27ad8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e813388df8df90d0db658e1e745a0a8a4d27ad8c", "html_url": "https://github.com/rust-lang/rust/commit/e813388df8df90d0db658e1e745a0a8a4d27ad8c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "b8a59a2bc2193eec301b6bc082cd96e24a89e298", "filename": "doc/rust.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d39753685b1696864624df7692ebe489e5901108/doc%2Frust.texi", "raw_url": "https://github.com/rust-lang/rust/raw/d39753685b1696864624df7692ebe489e5901108/doc%2Frust.texi", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.texi?ref=d39753685b1696864624df7692ebe489e5901108", "patch": "@@ -444,9 +444,9 @@ each frame. The static calculation of the typestates of a program is a\n function-local dataflow problem, and handles user-defined predicates in a\n similar fashion to the way the type system permits user-defined types.\n \n-A short way of thinking of this is: types statically model the kinds of values\n-held in slots, typestates statically model @emph{assertions that hold} before\n-and after statements.\n+A short way of thinking of this is: types statically model values,\n+typestates statically model @emph{assertions that hold} before and\n+after statements.\n \n @end itemize\n "}]}