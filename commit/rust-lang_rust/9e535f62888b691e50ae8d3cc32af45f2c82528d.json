{"sha": "9e535f62888b691e50ae8d3cc32af45f2c82528d", "node_id": "C_kwDOAAsO6NoAKDllNTM1ZjYyODg4YjY5MWU1MGFlOGQzY2MzMmFmNDVmMmM4MjUyOGQ", "commit": {"author": {"name": "disco07", "email": "koneenok@outlook.fr", "date": "2023-05-06T22:59:52Z"}, "committer": {"name": "disco07", "email": "koneenok@outlook.fr", "date": "2023-05-06T22:59:52Z"}, "message": "fix conflict with matches macro", "tree": {"sha": "ba924e5147735b9336a0a7aeeef22f649852f2d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba924e5147735b9336a0a7aeeef22f649852f2d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e535f62888b691e50ae8d3cc32af45f2c82528d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e535f62888b691e50ae8d3cc32af45f2c82528d", "html_url": "https://github.com/rust-lang/rust/commit/9e535f62888b691e50ae8d3cc32af45f2c82528d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e535f62888b691e50ae8d3cc32af45f2c82528d/comments", "author": {"login": "disco07", "id": 60718751, "node_id": "MDQ6VXNlcjYwNzE4NzUx", "avatar_url": "https://avatars.githubusercontent.com/u/60718751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/disco07", "html_url": "https://github.com/disco07", "followers_url": "https://api.github.com/users/disco07/followers", "following_url": "https://api.github.com/users/disco07/following{/other_user}", "gists_url": "https://api.github.com/users/disco07/gists{/gist_id}", "starred_url": "https://api.github.com/users/disco07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/disco07/subscriptions", "organizations_url": "https://api.github.com/users/disco07/orgs", "repos_url": "https://api.github.com/users/disco07/repos", "events_url": "https://api.github.com/users/disco07/events{/privacy}", "received_events_url": "https://api.github.com/users/disco07/received_events", "type": "User", "site_admin": false}, "committer": {"login": "disco07", "id": 60718751, "node_id": "MDQ6VXNlcjYwNzE4NzUx", "avatar_url": "https://avatars.githubusercontent.com/u/60718751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/disco07", "html_url": "https://github.com/disco07", "followers_url": "https://api.github.com/users/disco07/followers", "following_url": "https://api.github.com/users/disco07/following{/other_user}", "gists_url": "https://api.github.com/users/disco07/gists{/gist_id}", "starred_url": "https://api.github.com/users/disco07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/disco07/subscriptions", "organizations_url": "https://api.github.com/users/disco07/orgs", "repos_url": "https://api.github.com/users/disco07/repos", "events_url": "https://api.github.com/users/disco07/events{/privacy}", "received_events_url": "https://api.github.com/users/disco07/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2bbe760081f52b2afa237944a78b93097aad51c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2bbe760081f52b2afa237944a78b93097aad51c", "html_url": "https://github.com/rust-lang/rust/commit/d2bbe760081f52b2afa237944a78b93097aad51c"}], "stats": {"total": 39, "additions": 32, "deletions": 7}, "files": [{"sha": "107c2cd844b6b31a643ef7aca841b918284174a8", "filename": "clippy_lints/src/matches/match_like_matches.rs", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9e535f62888b691e50ae8d3cc32af45f2c82528d/clippy_lints%2Fsrc%2Fmatches%2Fmatch_like_matches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e535f62888b691e50ae8d3cc32af45f2c82528d/clippy_lints%2Fsrc%2Fmatches%2Fmatch_like_matches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fmatch_like_matches.rs?ref=9e535f62888b691e50ae8d3cc32af45f2c82528d", "patch": "@@ -1,10 +1,12 @@\n+use super::REDUNDANT_PATTERN_MATCHING;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::is_lint_allowed;\n use clippy_utils::is_wild;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::span_contains_comment;\n use rustc_ast::{Attribute, LitKind};\n use rustc_errors::Applicability;\n-use rustc_hir::{Arm, BorrowKind, Expr, ExprKind, Guard, Pat};\n+use rustc_hir::{Arm, BorrowKind, Expr, ExprKind, Guard, Pat, PatKind, QPath};\n use rustc_lint::{LateContext, LintContext};\n use rustc_middle::ty;\n use rustc_span::source_map::Spanned;\n@@ -99,6 +101,14 @@ where\n                 }\n             }\n \n+            for arm in iter_without_last.clone() {\n+                if let Some(pat) = arm.1 {\n+                    if !is_lint_allowed(cx, REDUNDANT_PATTERN_MATCHING, pat.hir_id) && is_some(pat.kind) {\n+                        return false;\n+                    }\n+                }\n+            }\n+\n             // The suggestion may be incorrect, because some arms can have `cfg` attributes\n             // evaluated into `false` and so such arms will be stripped before.\n             let mut applicability = Applicability::MaybeIncorrect;\n@@ -170,3 +180,19 @@ fn find_bool_lit(ex: &ExprKind<'_>) -> Option<bool> {\n         _ => None,\n     }\n }\n+\n+fn is_some(path_kind: PatKind<'_>) -> bool {\n+    match path_kind {\n+        PatKind::TupleStruct(ref path_left, patterns, _) if is_wild(&patterns[0]) => match path_left {\n+            QPath::Resolved(_, path) => {\n+                let name = path.segments[0].ident;\n+                if name.as_str() == \"Some\" {\n+                    return true;\n+                }\n+                return false;\n+            },\n+            _ => false,\n+        },\n+        _ => false,\n+    }\n+}"}, {"sha": "2ad119953252496a826e9a1de729ec4788eca69f", "filename": "clippy_lints/src/matches/redundant_pattern_match.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e535f62888b691e50ae8d3cc32af45f2c82528d/clippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e535f62888b691e50ae8d3cc32af45f2c82528d/clippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs?ref=9e535f62888b691e50ae8d3cc32af45f2c82528d", "patch": "@@ -186,7 +186,6 @@ fn find_sugg_for_if_let<'tcx>(\n }\n \n pub(super) fn check_match<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>, op: &Expr<'_>, arms: &[Arm<'_>]) {\n-    //eprintln!(\"{:#?}\", expr);\n     if arms.len() == 2 {\n         let node_pair = (&arms[0].pat.kind, &arms[1].pat.kind);\n         let found_good_method = match node_pair {"}, {"sha": "60f590661735cc0d20a117bb73f1be3d614db7c1", "filename": "tests/ui/match_expr_like_matches_macro.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e535f62888b691e50ae8d3cc32af45f2c82528d/tests%2Fui%2Fmatch_expr_like_matches_macro.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/9e535f62888b691e50ae8d3cc32af45f2c82528d/tests%2Fui%2Fmatch_expr_like_matches_macro.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_expr_like_matches_macro.fixed?ref=9e535f62888b691e50ae8d3cc32af45f2c82528d", "patch": "@@ -15,7 +15,7 @@ fn main() {\n     let _y = matches!(x, Some(0));\n \n     // Lint\n-    let _w = matches!(x, Some(_));\n+    let _w = x.is_some();\n \n     // Turn into is_none\n     let _z = x.is_none();"}, {"sha": "b72fe10b748042a0965eec5a086051fea7219090", "filename": "tests/ui/match_expr_like_matches_macro.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9e535f62888b691e50ae8d3cc32af45f2c82528d/tests%2Fui%2Fmatch_expr_like_matches_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9e535f62888b691e50ae8d3cc32af45f2c82528d/tests%2Fui%2Fmatch_expr_like_matches_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_expr_like_matches_macro.stderr?ref=9e535f62888b691e50ae8d3cc32af45f2c82528d", "patch": "@@ -10,15 +10,17 @@ LL | |     };\n    |\n    = note: `-D clippy::match-like-matches-macro` implied by `-D warnings`\n \n-error: match expression looks like `matches!` macro\n+error: redundant pattern matching, consider using `is_some()`\n   --> $DIR/match_expr_like_matches_macro.rs:21:14\n    |\n LL |       let _w = match x {\n    |  ______________^\n LL | |         Some(_) => true,\n LL | |         _ => false,\n LL | |     };\n-   | |_____^ help: try this: `matches!(x, Some(_))`\n+   | |_____^ help: try this: `x.is_some()`\n+   |\n+   = note: `-D clippy::redundant-pattern-matching` implied by `-D warnings`\n \n error: redundant pattern matching, consider using `is_none()`\n   --> $DIR/match_expr_like_matches_macro.rs:27:14\n@@ -29,8 +31,6 @@ LL | |         Some(_) => false,\n LL | |         None => true,\n LL | |     };\n    | |_____^ help: try this: `x.is_none()`\n-   |\n-   = note: `-D clippy::redundant-pattern-matching` implied by `-D warnings`\n \n error: match expression looks like `matches!` macro\n   --> $DIR/match_expr_like_matches_macro.rs:33:15"}]}