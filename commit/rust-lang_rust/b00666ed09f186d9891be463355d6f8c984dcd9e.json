{"sha": "b00666ed09f186d9891be463355d6f8c984dcd9e", "node_id": "C_kwDOAAsO6NoAKGIwMDY2NmVkMDlmMTg2ZDk4OTFiZTQ2MzM1NWQ2ZjhjOTg0ZGNkOWU", "commit": {"author": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2022-10-23T17:16:49Z"}, "committer": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2022-11-07T20:44:24Z"}, "message": "add benchmark for iter::ArrayChunks::fold specialization\n\nThis also updates the existing iter::Copied::next_chunk benchmark so\nthat the thing it benches doesn't get masked by the ArrayChunks specialization", "tree": {"sha": "b591b66a0b5cf3bacf7779c752fe38570c883fc0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b591b66a0b5cf3bacf7779c752fe38570c883fc0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b00666ed09f186d9891be463355d6f8c984dcd9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b00666ed09f186d9891be463355d6f8c984dcd9e", "html_url": "https://github.com/rust-lang/rust/commit/b00666ed09f186d9891be463355d6f8c984dcd9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b00666ed09f186d9891be463355d6f8c984dcd9e/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d69c33ad4c65e42a7a2d018a5c2ee1c7dbd0fc15", "url": "https://api.github.com/repos/rust-lang/rust/commits/d69c33ad4c65e42a7a2d018a5c2ee1c7dbd0fc15", "html_url": "https://github.com/rust-lang/rust/commit/d69c33ad4c65e42a7a2d018a5c2ee1c7dbd0fc15"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "9193c79bee875daf690d6f3af31e252cee70ff21", "filename": "library/core/benches/iter.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b00666ed09f186d9891be463355d6f8c984dcd9e/library%2Fcore%2Fbenches%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b00666ed09f186d9891be463355d6f8c984dcd9e/library%2Fcore%2Fbenches%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fbenches%2Fiter.rs?ref=b00666ed09f186d9891be463355d6f8c984dcd9e", "patch": "@@ -1,3 +1,4 @@\n+use core::borrow::Borrow;\n use core::iter::*;\n use core::mem;\n use core::num::Wrapping;\n@@ -403,13 +404,31 @@ fn bench_trusted_random_access_adapters(b: &mut Bencher) {\n \n /// Exercises the iter::Copied specialization for slice::Iter\n #[bench]\n-fn bench_copied_array_chunks(b: &mut Bencher) {\n+fn bench_copied_chunks(b: &mut Bencher) {\n+    let v = vec![1u8; 1024];\n+\n+    b.iter(|| {\n+        let mut iter = black_box(&v).iter().copied();\n+        let mut acc = Wrapping(0);\n+        // This uses a while-let loop to side-step the TRA specialization in ArrayChunks\n+        while let Ok(chunk) = iter.next_chunk::<{ mem::size_of::<u64>() }>() {\n+            let d = u64::from_ne_bytes(chunk);\n+            acc += Wrapping(d.rotate_left(7).wrapping_add(1));\n+        }\n+        acc\n+    })\n+}\n+\n+/// Exercises the TrustedRandomAccess specialization in ArrayChunks\n+#[bench]\n+fn bench_trusted_random_access_chunks(b: &mut Bencher) {\n     let v = vec![1u8; 1024];\n \n     b.iter(|| {\n         black_box(&v)\n             .iter()\n-            .copied()\n+            // this shows that we're not relying on the slice::Iter specialization in Copied\n+            .map(|b| *b.borrow())\n             .array_chunks::<{ mem::size_of::<u64>() }>()\n             .map(|ary| {\n                 let d = u64::from_ne_bytes(ary);"}, {"sha": "cf5a7cada93ce30b4a5925b7ea9f21b2793b8d78", "filename": "library/core/benches/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b00666ed09f186d9891be463355d6f8c984dcd9e/library%2Fcore%2Fbenches%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b00666ed09f186d9891be463355d6f8c984dcd9e/library%2Fcore%2Fbenches%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fbenches%2Flib.rs?ref=b00666ed09f186d9891be463355d6f8c984dcd9e", "patch": "@@ -5,6 +5,7 @@\n #![feature(test)]\n #![feature(trusted_random_access)]\n #![feature(iter_array_chunks)]\n+#![feature(iter_next_chunk)]\n \n extern crate test;\n "}]}