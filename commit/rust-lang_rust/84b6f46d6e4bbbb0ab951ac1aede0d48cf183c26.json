{"sha": "84b6f46d6e4bbbb0ab951ac1aede0d48cf183c26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0YjZmNDZkNmU0YmJiYjBhYjk1MWFjMWFlZGUwZDQ4Y2YxODNjMjY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-31T00:47:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-31T00:47:33Z"}, "message": "Rollup merge of #81422 - estebank:dotdot_sugg, r=davidtwco\n\nAccount for existing `_` field pattern when suggesting `..`\n\nFollow up to #80017.", "tree": {"sha": "4c5ca569b61c4726161b3ff728151f5077039c27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c5ca569b61c4726161b3ff728151f5077039c27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84b6f46d6e4bbbb0ab951ac1aede0d48cf183c26", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgFf4lCRBK7hj4Ov3rIwAAdHIIAJFw60kKs1tqAS9mm50AlRDS\n67cGEg3qX5+/ydVT6J/5rq4WCru8ip4/eLe6I4udXWjVyVXUYbfHw6rykYbgY6V5\nbZraK3LFA2sok1cMbfVEWXEhYAAQ/Hv7KCYt3wMIWxzoxz+qL2fpuC7Van3FYmGe\n2yopSGCgufNea8aMNxlh7hfXJjzQXx3OjGE8bjLnPCwPbf8bERWhDEYc5ITOvEeC\ntVPR4bXybwgVN6M12szQxB1EMG39QgmW52aM771lQDMXc4PbkGtkO65Ao21ORzk3\n8+BwbKvU1EKLo6dwG9KvMOfSbdqE3PZJo53ZKw3yGM0FjjDk/MpUQnmcWQNTZvM=\n=tJHe\n-----END PGP SIGNATURE-----\n", "payload": "tree 4c5ca569b61c4726161b3ff728151f5077039c27\nparent 13b3294e91664fa039a9999f37f16a2494c72078\nparent a398994cb214c9ba022cb8e6cd97c3fee4bca6ac\nauthor Jonas Schievink <jonasschievink@gmail.com> 1612054053 +0100\ncommitter GitHub <noreply@github.com> 1612054053 +0100\n\nRollup merge of #81422 - estebank:dotdot_sugg, r=davidtwco\n\nAccount for existing `_` field pattern when suggesting `..`\n\nFollow up to #80017.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84b6f46d6e4bbbb0ab951ac1aede0d48cf183c26", "html_url": "https://github.com/rust-lang/rust/commit/84b6f46d6e4bbbb0ab951ac1aede0d48cf183c26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84b6f46d6e4bbbb0ab951ac1aede0d48cf183c26/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13b3294e91664fa039a9999f37f16a2494c72078", "url": "https://api.github.com/repos/rust-lang/rust/commits/13b3294e91664fa039a9999f37f16a2494c72078", "html_url": "https://github.com/rust-lang/rust/commit/13b3294e91664fa039a9999f37f16a2494c72078"}, {"sha": "a398994cb214c9ba022cb8e6cd97c3fee4bca6ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/a398994cb214c9ba022cb8e6cd97c3fee4bca6ac", "html_url": "https://github.com/rust-lang/rust/commit/a398994cb214c9ba022cb8e6cd97c3fee4bca6ac"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "d7e69668e5eae409e558f1c9c902012e3884fb21", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/84b6f46d6e4bbbb0ab951ac1aede0d48cf183c26/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84b6f46d6e4bbbb0ab951ac1aede0d48cf183c26/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=84b6f46d6e4bbbb0ab951ac1aede0d48cf183c26", "patch": "@@ -1041,12 +1041,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 vec![(left, \"(\".to_string()), (right.shrink_to_hi(), \")\".to_string())],\n                 Applicability::MachineApplicable,\n             );\n-        } else if fields.len() > subpats.len() {\n-            let after_fields_span = if pat_span == DUMMY_SP {\n-                pat_span\n-            } else {\n-                pat_span.with_hi(pat_span.hi() - BytePos(1)).shrink_to_hi()\n-            };\n+        } else if fields.len() > subpats.len() && pat_span != DUMMY_SP {\n+            let after_fields_span = pat_span.with_hi(pat_span.hi() - BytePos(1)).shrink_to_hi();\n             let all_fields_span = match subpats {\n                 [] => after_fields_span,\n                 [field] => field.span,\n@@ -1055,7 +1051,19 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n             // Check if all the fields in the pattern are wildcards.\n             let all_wildcards = subpats.iter().all(|pat| matches!(pat.kind, PatKind::Wild));\n+            let first_tail_wildcard =\n+                subpats.iter().enumerate().fold(None, |acc, (pos, pat)| match (acc, &pat.kind) {\n+                    (None, PatKind::Wild) => Some(pos),\n+                    (Some(_), PatKind::Wild) => acc,\n+                    _ => None,\n+                });\n+            let tail_span = match first_tail_wildcard {\n+                None => after_fields_span,\n+                Some(0) => subpats[0].span.to(after_fields_span),\n+                Some(pos) => subpats[pos - 1].span.shrink_to_hi().to(after_fields_span),\n+            };\n \n+            // FIXME: heuristic-based suggestion to check current types for where to add `_`.\n             let mut wildcard_sugg = vec![\"_\"; fields.len() - subpats.len()].join(\", \");\n             if !subpats.is_empty() {\n                 wildcard_sugg = String::from(\", \") + &wildcard_sugg;\n@@ -1080,7 +1088,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     );\n                 } else {\n                     err.span_suggestion_verbose(\n-                        after_fields_span,\n+                        tail_span,\n                         \"use `..` to ignore the rest of the fields\",\n                         String::from(\", ..\"),\n                         Applicability::MaybeIncorrect,"}, {"sha": "70c21dbafe9fc160bce1b2bd5069c2eab5beb96f", "filename": "src/test/ui/pattern/pat-tuple-underfield.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/84b6f46d6e4bbbb0ab951ac1aede0d48cf183c26/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/84b6f46d6e4bbbb0ab951ac1aede0d48cf183c26/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr?ref=84b6f46d6e4bbbb0ab951ac1aede0d48cf183c26", "patch": "@@ -122,8 +122,8 @@ LL |         Point4(   a   ,     _    , _, _) => {}\n    |                                  ^^^^^^\n help: use `..` to ignore the rest of the fields\n    |\n-LL |         Point4(   a   ,     _    , ..) => {}\n-   |                                  ^^^^\n+LL |         Point4(   a, ..) => {}\n+   |                    ^^^^\n \n error: aborting due to 8 previous errors\n "}]}