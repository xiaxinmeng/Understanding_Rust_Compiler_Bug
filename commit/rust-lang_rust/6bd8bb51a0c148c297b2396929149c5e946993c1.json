{"sha": "6bd8bb51a0c148c297b2396929149c5e946993c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiZDhiYjUxYTBjMTQ4YzI5N2IyMzk2OTI5MTQ5YzVlOTQ2OTkzYzE=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-11-15T13:39:48Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-11-16T11:20:42Z"}, "message": "lint: _-prefixed variables don't get an unused-mut warning.\n\nBringing it into line with the unused-variable one,\n\n    fn main() {\n        let mut _a = 1;\n    }\n\nwill not warn that `_a` is never used mutably.\n\nFixes #6911.", "tree": {"sha": "05083c7533e26f6705fb2230e1a5a8aadbafaf3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05083c7533e26f6705fb2230e1a5a8aadbafaf3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bd8bb51a0c148c297b2396929149c5e946993c1", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bd8bb51a0c148c297b2396929149c5e946993c1", "html_url": "https://github.com/rust-lang/rust/commit/6bd8bb51a0c148c297b2396929149c5e946993c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bd8bb51a0c148c297b2396929149c5e946993c1/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90754ae9c95c18841c0200d77da917af5ecde5ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/90754ae9c95c18841c0200d77da917af5ecde5ee", "html_url": "https://github.com/rust-lang/rust/commit/90754ae9c95c18841c0200d77da917af5ecde5ee"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "9395ebefe8725c9c349364cb440b6ccdbcd7d4cc", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/6bd8bb51a0c148c297b2396929149c5e946993c1/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bd8bb51a0c148c297b2396929149c5e946993c1/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=6bd8bb51a0c148c297b2396929149c5e946993c1", "patch": "@@ -883,20 +883,23 @@ fn check_unused_unsafe(cx: &Context, e: &ast::Expr) {\n \n fn check_unused_mut_pat(cx: &Context, p: @ast::Pat) {\n     match p.node {\n-        ast::PatIdent(ast::BindByValue(ast::MutMutable), _, _) => {\n-            let mut used = false;\n-            let mut bindings = 0;\n-            do pat_util::pat_bindings(cx.tcx.def_map, p) |_, id, _, _| {\n-                used = used || cx.tcx.used_mut_nodes.contains(&id);\n-                bindings += 1;\n-            }\n-            if !used {\n-                let msg = if bindings == 1 {\n-                    \"variable does not need to be mutable\"\n-                } else {\n-                    \"variables do not need to be mutable\"\n-                };\n-                cx.span_lint(unused_mut, p.span, msg);\n+        ast::PatIdent(ast::BindByValue(ast::MutMutable),\n+                      ref path, _) if pat_util::pat_is_binding(cx.tcx.def_map, p)=> {\n+            // `let mut _a = 1;` doesn't need a warning.\n+            let initial_underscore = match path.segments {\n+                [ast::PathSegment { identifier: id, _ }] => {\n+                    cx.tcx.sess.str_of(id).starts_with(\"_\")\n+                }\n+                _ => {\n+                    cx.tcx.sess.span_bug(p.span,\n+                                         \"mutable binding that doesn't \\\n+                                         consist of exactly one segment\");\n+                }\n+            };\n+\n+            if !initial_underscore && !cx.tcx.used_mut_nodes.contains(&p.id) {\n+                cx.span_lint(unused_mut, p.span,\n+                             \"variable does not need to be mutable\");\n             }\n         }\n         _ => ()"}, {"sha": "3abacdba18340b83a98327f8cfa1f919800f3b38", "filename": "src/test/compile-fail/lint-unused-mut-variables.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6bd8bb51a0c148c297b2396929149c5e946993c1/src%2Ftest%2Fcompile-fail%2Flint-unused-mut-variables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bd8bb51a0c148c297b2396929149c5e946993c1/src%2Ftest%2Fcompile-fail%2Flint-unused-mut-variables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-unused-mut-variables.rs?ref=6bd8bb51a0c148c297b2396929149c5e946993c1", "patch": "@@ -49,6 +49,10 @@ fn main() {\n \n     let x = |mut y: int| y = 32;\n     fn nothing(mut foo: int) { foo = 37; }\n+\n+    // leading underscore should avoid the warning, just like the\n+    // unused variable lint.\n+    let mut _allowed = 1;\n }\n \n fn callback(f: &fn()) {}"}]}