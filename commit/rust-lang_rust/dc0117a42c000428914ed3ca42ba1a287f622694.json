{"sha": "dc0117a42c000428914ed3ca42ba1a287f622694", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMDExN2E0MmMwMDA0Mjg5MTRlZDNjYTQyYmExYTI4N2Y2MjI2OTQ=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-11-28T16:57:34Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-12-02T14:43:40Z"}, "message": "Add dual tests for const_mut_refs", "tree": {"sha": "eb8e644d9214f40fe6b2b6c45dc42c8040b88230", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb8e644d9214f40fe6b2b6c45dc42c8040b88230"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc0117a42c000428914ed3ca42ba1a287f622694", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc0117a42c000428914ed3ca42ba1a287f622694", "html_url": "https://github.com/rust-lang/rust/commit/dc0117a42c000428914ed3ca42ba1a287f622694", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc0117a42c000428914ed3ca42ba1a287f622694/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19ddfb545bb6e70ba3281bdce4f40ae8e564a53a", "url": "https://api.github.com/repos/rust-lang/rust/commits/19ddfb545bb6e70ba3281bdce4f40ae8e564a53a", "html_url": "https://github.com/rust-lang/rust/commit/19ddfb545bb6e70ba3281bdce4f40ae8e564a53a"}], "stats": {"total": 48, "additions": 39, "deletions": 9}, "files": [{"sha": "23538777c9df3698191727f8504f68b016f1b220", "filename": "src/test/ui/consts/projection_qualif.mut_refs.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dc0117a42c000428914ed3ca42ba1a287f622694/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.mut_refs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc0117a42c000428914ed3ca42ba1a287f622694/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.mut_refs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.mut_refs.stderr?ref=dc0117a42c000428914ed3ca42ba1a287f622694", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: dereferencing raw pointers in constants is unstable\n+  --> $DIR/projection_qualif.rs:11:18\n+   |\n+LL |         unsafe { *b = 5; }\n+   |                  ^^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/51911\n+   = help: add `#![feature(const_raw_ptr_deref)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "cfe8e7f03d5e45e8445ff79094bf79610b71de1d", "filename": "src/test/ui/consts/projection_qualif.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dc0117a42c000428914ed3ca42ba1a287f622694/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc0117a42c000428914ed3ca42ba1a287f622694/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.rs?ref=dc0117a42c000428914ed3ca42ba1a287f622694", "patch": "@@ -1,11 +1,15 @@\n+// revisions: stock mut_refs\n+\n+#![cfg_attr(mut_refs, feature(const_mut_refs))]\n+\n use std::cell::Cell;\n \n const FOO: &u32 = {\n     let mut a = 42;\n     {\n-        let b: *mut u32 = &mut a; //~ ERROR may only refer to immutable values\n+        let b: *mut u32 = &mut a; //[stock]~ ERROR may only refer to immutable values\n         unsafe { *b = 5; } //~ ERROR dereferencing raw pointers in constants\n-        //~^ contains unimplemented expression\n+        //[stock]~^ contains unimplemented expression\n     }\n     &{a}\n };"}, {"sha": "472d2607453d066f9fa1488027588d0dea597af3", "filename": "src/test/ui/consts/projection_qualif.stock.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dc0117a42c000428914ed3ca42ba1a287f622694/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc0117a42c000428914ed3ca42ba1a287f622694/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stock.stderr?ref=dc0117a42c000428914ed3ca42ba1a287f622694", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: references in constants may only refer to immutable values\n-  --> $DIR/projection_qualif.rs:6:27\n+  --> $DIR/projection_qualif.rs:10:27\n    |\n LL |         let b: *mut u32 = &mut a;\n    |                           ^^^^^^ constants require immutable values\n@@ -8,7 +8,7 @@ LL |         let b: *mut u32 = &mut a;\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0658]: dereferencing raw pointers in constants is unstable\n-  --> $DIR/projection_qualif.rs:7:18\n+  --> $DIR/projection_qualif.rs:11:18\n    |\n LL |         unsafe { *b = 5; }\n    |                  ^^^^^^\n@@ -17,7 +17,7 @@ LL |         unsafe { *b = 5; }\n    = help: add `#![feature(const_raw_ptr_deref)]` to the crate attributes to enable\n \n error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/projection_qualif.rs:7:18\n+  --> $DIR/projection_qualif.rs:11:18\n    |\n LL |         unsafe { *b = 5; }\n    |                  ^^^^^^", "previous_filename": "src/test/ui/consts/projection_qualif.stderr"}, {"sha": "b43fbc86f99f2c3e6f47107c3f33dcf6c0b4ba5c", "filename": "src/test/ui/consts/static_mut_containing_mut_ref2.mut_refs.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dc0117a42c000428914ed3ca42ba1a287f622694/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.mut_refs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc0117a42c000428914ed3ca42ba1a287f622694/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.mut_refs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.mut_refs.stderr?ref=dc0117a42c000428914ed3ca42ba1a287f622694", "patch": "@@ -0,0 +1,9 @@\n+error[E0080]: could not evaluate static initializer\n+  --> $DIR/static_mut_containing_mut_ref2.rs:7:45\n+   |\n+LL | pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 42; };\n+   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ tried to modify a static's initial value from another static's initializer\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0080`."}, {"sha": "74162fbd54b046537817eeb17a99b8e716632077", "filename": "src/test/ui/consts/static_mut_containing_mut_ref2.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dc0117a42c000428914ed3ca42ba1a287f622694/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc0117a42c000428914ed3ca42ba1a287f622694/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.rs?ref=dc0117a42c000428914ed3ca42ba1a287f622694", "patch": "@@ -1,7 +1,12 @@\n+// revisions: stock mut_refs\n+\n+#![cfg_attr(mut_refs, feature(const_mut_refs))]\n+\n static mut STDERR_BUFFER_SPACE: u8 = 0;\n \n pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 42; };\n-//~^ ERROR references in statics may only refer to immutable values\n-//~| ERROR static contains unimplemented expression type\n+//[mut_refs]~^ ERROR could not evaluate static initializer\n+//[stock]~^^ ERROR references in statics may only refer to immutable values\n+//[stock]~| ERROR static contains unimplemented expression type\n \n fn main() {}"}, {"sha": "430cef94dc3cb88e90cdc5d5248221fadbf9c29f", "filename": "src/test/ui/consts/static_mut_containing_mut_ref2.stock.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dc0117a42c000428914ed3ca42ba1a287f622694/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc0117a42c000428914ed3ca42ba1a287f622694/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstatic_mut_containing_mut_ref2.stock.stderr?ref=dc0117a42c000428914ed3ca42ba1a287f622694", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: references in statics may only refer to immutable values\n-  --> $DIR/static_mut_containing_mut_ref2.rs:3:46\n+  --> $DIR/static_mut_containing_mut_ref2.rs:7:46\n    |\n LL | pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 42; };\n    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ statics require immutable values\n@@ -8,7 +8,7 @@ LL | pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 4\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n error[E0019]: static contains unimplemented expression type\n-  --> $DIR/static_mut_containing_mut_ref2.rs:3:45\n+  --> $DIR/static_mut_containing_mut_ref2.rs:7:45\n    |\n LL | pub static mut STDERR_BUFFER: () = unsafe { *(&mut STDERR_BUFFER_SPACE) = 42; };\n    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^", "previous_filename": "src/test/ui/consts/static_mut_containing_mut_ref2.stderr"}]}