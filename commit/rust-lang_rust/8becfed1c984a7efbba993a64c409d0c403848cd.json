{"sha": "8becfed1c984a7efbba993a64c409d0c403848cd", "node_id": "C_kwDOAAsO6NoAKDhiZWNmZWQxYzk4NGE3ZWZiYmE5OTNhNjRjNDA5ZDBjNDAzODQ4Y2Q", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn.nelson@redjack.com", "date": "2023-03-01T17:33:37Z"}, "committer": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2023-03-05T14:42:15Z"}, "message": "Remove the option to disable `llvm-version-check`\n\nWe don't support old versions of LLVM; there's no reason to have an easy\nway to force bootstrap to use them anyway. If someone really needs to\nuse an unsupported version, they can modify bootstrap to change the\nversion range.", "tree": {"sha": "c964e6f7a40c3eb714ea8de459861c58a41d5922", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c964e6f7a40c3eb714ea8de459861c58a41d5922"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8becfed1c984a7efbba993a64c409d0c403848cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8becfed1c984a7efbba993a64c409d0c403848cd", "html_url": "https://github.com/rust-lang/rust/commit/8becfed1c984a7efbba993a64c409d0c403848cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8becfed1c984a7efbba993a64c409d0c403848cd/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5423745db8b434fcde54888b35f518f00cce00e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/5423745db8b434fcde54888b35f518f00cce00e4", "html_url": "https://github.com/rust-lang/rust/commit/5423745db8b434fcde54888b35f518f00cce00e4"}], "stats": {"total": 15, "additions": 1, "deletions": 14}, "files": [{"sha": "07d2aefa989814d71ee7dab4e3656e81d77b93ba", "filename": "config.toml.example", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8becfed1c984a7efbba993a64c409d0c403848cd/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/8becfed1c984a7efbba993a64c409d0c403848cd/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=8becfed1c984a7efbba993a64c409d0c403848cd", "patch": "@@ -81,11 +81,6 @@ changelog-seen = 2\n # or alternatively ...\n #ccache = \"/path/to/ccache\"\n \n-# If an external LLVM root is specified, we automatically check the version by\n-# default to make sure it's within the range that we're expecting, but setting\n-# this flag will indicate that this version check should not be done.\n-#version-check = true\n-\n # When true, link libstdc++ statically into the rustc_llvm.\n # This is useful if you don't want to use the dynamic version of that\n # library provided by LLVM."}, {"sha": "648eb553c78c181d84e606f278ace06f55347ccb", "filename": "src/bootstrap/CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8becfed1c984a7efbba993a64c409d0c403848cd/src%2Fbootstrap%2FCHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/8becfed1c984a7efbba993a64c409d0c403848cd/src%2Fbootstrap%2FCHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCHANGELOG.md?ref=8becfed1c984a7efbba993a64c409d0c403848cd", "patch": "@@ -16,6 +16,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n - `remote-test-server`'s `verbose` argument has been removed in favor of the `--verbose` flag\n - `remote-test-server`'s `remote` argument has been removed in favor of the `--bind` flag. Use `--bind 0.0.0.0:12345` to replicate the behavior of the `remote` argument.\n - `x.py fmt` now formats only files modified between the merge-base of HEAD and the last commit in the master branch of the rust-lang repository and the current working directory. To restore old behaviour, use `x.py fmt .`. The check mode is not affected by this change. [#105702](https://github.com/rust-lang/rust/pull/105702)\n+- The `llvm.version-check` config option has been removed. Older versions were never supported. If you still need to support older versions (e.g. you are applying custom patches), patch `check_llvm_version` in bootstrap to change the minimum version. [#108619](https://github.com/rust-lang/rust/pull/108619)\n \n ### Non-breaking changes\n "}, {"sha": "8eef3da1726184c8ef65e28b4e035a29a8ed03bb", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8becfed1c984a7efbba993a64c409d0c403848cd/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8becfed1c984a7efbba993a64c409d0c403848cd/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=8becfed1c984a7efbba993a64c409d0c403848cd", "patch": "@@ -119,7 +119,6 @@ pub struct Config {\n     pub llvm_optimize: bool,\n     pub llvm_thin_lto: bool,\n     pub llvm_release_debuginfo: bool,\n-    pub llvm_version_check: bool,\n     pub llvm_static_stdcpp: bool,\n     /// `None` if `llvm_from_ci` is true and we haven't yet downloaded llvm.\n     #[cfg(not(test))]\n@@ -674,7 +673,6 @@ define_config! {\n         tests: Option<bool> = \"tests\",\n         plugins: Option<bool> = \"plugins\",\n         ccache: Option<StringOrBool> = \"ccache\",\n-        version_check: Option<bool> = \"version-check\",\n         static_libstdcpp: Option<bool> = \"static-libstdcpp\",\n         ninja: Option<bool> = \"ninja\",\n         targets: Option<String> = \"targets\",\n@@ -806,7 +804,6 @@ impl Config {\n         let mut config = Config::default();\n         config.llvm_optimize = true;\n         config.ninja_in_file = true;\n-        config.llvm_version_check = true;\n         config.llvm_static_stdcpp = false;\n         config.backtrace = true;\n         config.rust_optimize = true;\n@@ -1174,7 +1171,6 @@ impl Config {\n             set(&mut config.llvm_optimize, llvm.optimize);\n             set(&mut config.llvm_thin_lto, llvm.thin_lto);\n             set(&mut config.llvm_release_debuginfo, llvm.release_debuginfo);\n-            set(&mut config.llvm_version_check, llvm.version_check);\n             set(&mut config.llvm_static_stdcpp, llvm.static_libstdcpp);\n             if let Some(v) = llvm.link_shared {\n                 config.llvm_link_shared.set(Some(v));"}, {"sha": "00f242452a195f3575f3dfa9ea1ec4aa598120df", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8becfed1c984a7efbba993a64c409d0c403848cd/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/8becfed1c984a7efbba993a64c409d0c403848cd/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=8becfed1c984a7efbba993a64c409d0c403848cd", "patch": "@@ -44,7 +44,6 @@ def v(*args):\n o(\"llvm-static-stdcpp\", \"llvm.static-libstdcpp\", \"statically link to libstdc++ for LLVM\")\n o(\"llvm-link-shared\", \"llvm.link-shared\", \"prefer shared linking to LLVM (llvm-config --link-shared)\")\n o(\"rpath\", \"rust.rpath\", \"build rpaths into rustc itself\")\n-o(\"llvm-version-check\", \"llvm.version-check\", \"check if the LLVM version is supported, build anyway\")\n o(\"codegen-tests\", \"rust.codegen-tests\", \"run the tests/codegen tests\")\n o(\"option-checking\", None, \"complain about unrecognized options in this configure script\")\n o(\"ninja\", \"llvm.ninja\", \"build LLVM using the Ninja generator (for MSVC, requires building in the correct environment)\")"}, {"sha": "37f6720150ee182e70f4592b497c90b49f2736f9", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8becfed1c984a7efbba993a64c409d0c403848cd/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8becfed1c984a7efbba993a64c409d0c403848cd/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=8becfed1c984a7efbba993a64c409d0c403848cd", "patch": "@@ -549,10 +549,6 @@ fn get_built_llvm_lib_path(llvm_config_path: &Path) -> PathBuf {\n }\n \n fn check_llvm_version(builder: &Builder<'_>, llvm_config: &Path) {\n-    if !builder.config.llvm_version_check {\n-        return;\n-    }\n-\n     if builder.config.dry_run() {\n         return;\n     }"}]}