{"sha": "dd404cc92e5fe967064fb43360e26db247410734", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNDA0Y2M5MmU1ZmU5NjcwNjRmYjQzMzYwZTI2ZGIyNDc0MTA3MzQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-17T11:56:00Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-19T13:27:58Z"}, "message": "avoid importing C functions in alloc_write_race test", "tree": {"sha": "3b40d8dfaf08e06af7b27b14369850d738b3cbc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b40d8dfaf08e06af7b27b14369850d738b3cbc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd404cc92e5fe967064fb43360e26db247410734", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd404cc92e5fe967064fb43360e26db247410734", "html_url": "https://github.com/rust-lang/rust/commit/dd404cc92e5fe967064fb43360e26db247410734", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd404cc92e5fe967064fb43360e26db247410734/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "801a1744cd6e509fb5aed5517a38238b7e987573", "url": "https://api.github.com/repos/rust-lang/rust/commits/801a1744cd6e509fb5aed5517a38238b7e987573", "html_url": "https://github.com/rust-lang/rust/commit/801a1744cd6e509fb5aed5517a38238b7e987573"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "becebe6a122a97fdf40cc3b695b6222439bc8ddd", "filename": "tests/compile-fail/data_race/alloc_write_race.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd404cc92e5fe967064fb43360e26db247410734/tests%2Fcompile-fail%2Fdata_race%2Falloc_write_race.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd404cc92e5fe967064fb43360e26db247410734/tests%2Fcompile-fail%2Fdata_race%2Falloc_write_race.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdata_race%2Falloc_write_race.rs?ref=dd404cc92e5fe967064fb43360e26db247410734", "patch": "@@ -1,4 +1,5 @@\n // ignore-windows: Concurrency on Windows is not supported yet.\n+#![feature(new_uninit)]\n \n use std::thread::spawn;\n use std::ptr::null_mut;\n@@ -10,11 +11,6 @@ struct EvilSend<T>(pub T);\n unsafe impl<T> Send for EvilSend<T> {}\n unsafe impl<T> Sync for EvilSend<T> {}\n \n-extern \"C\" {\n-    fn malloc(size: usize) -> *mut u8;\n-    fn free(ptr: *mut u8);\n-}\n-\n pub fn main() {\n     // Shared atomic pointer\n     let pointer = AtomicPtr::new(null_mut::<usize>());\n@@ -33,7 +29,7 @@ pub fn main() {\n             // Uses relaxed semantics to not generate\n             // a release sequence.\n             let pointer = &*ptr.0;\n-            pointer.store(malloc(std::mem::size_of::<usize>()) as *mut usize, Ordering::Relaxed);\n+            pointer.store(Box::into_raw(Box::<usize>::new_uninit()) as *mut usize, Ordering::Relaxed);\n         });\n \n         let j2 = spawn(move || {\n@@ -45,6 +41,6 @@ pub fn main() {\n         j2.join().unwrap();\n \n         // Clean up memory, will never be executed\n-        free(pointer.load(Ordering::Relaxed) as *mut _);\n+        drop(Box::from_raw(pointer.load(Ordering::Relaxed)));\n     }\n }"}]}