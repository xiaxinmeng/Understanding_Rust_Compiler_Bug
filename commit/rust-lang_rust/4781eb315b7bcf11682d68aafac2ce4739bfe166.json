{"sha": "4781eb315b7bcf11682d68aafac2ce4739bfe166", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3ODFlYjMxNWI3YmNmMTE2ODJkNjhhYWZhYzJjZTQ3MzliZmUxNjY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-12-30T17:26:25Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-12-30T17:36:23Z"}, "message": "travis: Add a distcheck target\n\nThis commit adds a new entry to the Travis matrix which performs a \"distcheck\",\nwhich basically means that we create a tarball, extract that tarball, and then\nbuild/test inside there. This ensures that the tarballs we produce are actually\nable to be built/tested!\n\nAlong the way this also updates the rustbuild distcheck definition to propagate\nthe configure args from the top-level invocation.\n\nCloses #38691", "tree": {"sha": "f8d07d19fb07c907686eebcc645d878476ce3386", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8d07d19fb07c907686eebcc645d878476ce3386"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4781eb315b7bcf11682d68aafac2ce4739bfe166", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4781eb315b7bcf11682d68aafac2ce4739bfe166", "html_url": "https://github.com/rust-lang/rust/commit/4781eb315b7bcf11682d68aafac2ce4739bfe166", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4781eb315b7bcf11682d68aafac2ce4739bfe166/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0881eaec7d1300566607bb465acf614ce073b75", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0881eaec7d1300566607bb465acf614ce073b75", "html_url": "https://github.com/rust-lang/rust/commit/d0881eaec7d1300566607bb465acf614ce073b75"}], "stats": {"total": 52, "additions": 45, "deletions": 7}, "files": [{"sha": "26cabf92bdac81d98ced0ba6cee456f199092458", "filename": ".travis.yml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4781eb315b7bcf11682d68aafac2ce4739bfe166/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/4781eb315b7bcf11682d68aafac2ce4739bfe166/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=4781eb315b7bcf11682d68aafac2ce4739bfe166", "patch": "@@ -26,6 +26,7 @@ matrix:\n     - env: IMAGE=x86_64-gnu-make\n     - env: IMAGE=x86_64-gnu-llvm-3.7 ALLOW_PR=1 RUST_BACKTRACE=1\n     - env: IMAGE=x86_64-musl\n+    - env: IMAGE=x86_64-gnu-distcheck\n \n     # OSX builders\n     - env: >"}, {"sha": "0c6680fab660c55fc656ac28eaeb1556e0649bca", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4781eb315b7bcf11682d68aafac2ce4739bfe166/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4781eb315b7bcf11682d68aafac2ce4739bfe166/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=4781eb315b7bcf11682d68aafac2ce4739bfe166", "patch": "@@ -554,6 +554,7 @@ pub fn distcheck(build: &Build) {\n        .current_dir(&dir);\n     build.run(&mut cmd);\n     build.run(Command::new(\"./configure\")\n+                     .args(&build.config.configure_args)\n                      .current_dir(&dir));\n     build.run(Command::new(build_helper::make(&build.config.build))\n                      .arg(\"check\")"}, {"sha": "11c5b374ed9654d821f3e908387b32637bc24d47", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4781eb315b7bcf11682d68aafac2ce4739bfe166/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4781eb315b7bcf11682d68aafac2ce4739bfe166/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=4781eb315b7bcf11682d68aafac2ce4739bfe166", "patch": "@@ -94,6 +94,7 @@ pub struct Config {\n     pub nodejs: Option<PathBuf>,\n     pub gdb: Option<PathBuf>,\n     pub python: Option<PathBuf>,\n+    pub configure_args: Vec<String>,\n }\n \n /// Per-target configuration stored in the global configuration structure.\n@@ -519,6 +520,11 @@ impl Config {\n                 \"CFG_ENABLE_SCCACHE\" if value == \"1\" => {\n                     self.ccache = Some(\"sccache\".to_string());\n                 }\n+                \"CFG_CONFIGURE_ARGS\" if value.len() > 0 => {\n+                    self.configure_args = value.split_whitespace()\n+                                               .map(|s| s.to_string())\n+                                               .collect();\n+                }\n                 _ => {}\n             }\n         }"}, {"sha": "2ab3776ada0966061561d00ba983b30011863a08", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4781eb315b7bcf11682d68aafac2ce4739bfe166/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4781eb315b7bcf11682d68aafac2ce4739bfe166/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=4781eb315b7bcf11682d68aafac2ce4739bfe166", "patch": "@@ -76,9 +76,9 @@ pub fn cp_r(src: &Path, dst: &Path) {\n /// Copies the `src` directory recursively to `dst`. Both are assumed to exist\n /// when this function is called. Unwanted files or directories can be skipped\n /// by returning `false` from the filter function.\n-pub fn cp_filtered<F: Fn(&Path) -> bool>(src: &Path, dst: &Path, filter: &F) {\n+pub fn cp_filtered(src: &Path, dst: &Path, filter: &Fn(&Path) -> bool) {\n     // Inner function does the actual work\n-    fn recurse<F: Fn(&Path) -> bool>(src: &Path, dst: &Path, relative: &Path, filter: &F) {\n+    fn recurse(src: &Path, dst: &Path, relative: &Path, filter: &Fn(&Path) -> bool) {\n         for f in t!(fs::read_dir(src)) {\n             let f = t!(f);\n             let path = f.path();"}, {"sha": "880c70866b0f46148aefd4b6e7989054cc66fd4d", "filename": "src/ci/docker/x86_64-gnu-distcheck/Dockerfile", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4781eb315b7bcf11682d68aafac2ce4739bfe166/src%2Fci%2Fdocker%2Fx86_64-gnu-distcheck%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4781eb315b7bcf11682d68aafac2ce4739bfe166/src%2Fci%2Fdocker%2Fx86_64-gnu-distcheck%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-distcheck%2FDockerfile?ref=4781eb315b7bcf11682d68aafac2ce4739bfe166", "patch": "@@ -0,0 +1,26 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  git \\\n+  cmake \\\n+  sudo \\\n+  gdb \\\n+  xz-utils\n+\n+ENV SCCACHE_DIGEST=7237e38e029342fa27b7ac25412cb9d52554008b12389727320bd533fd7f05b6a96d55485f305caf95e5c8f5f97c3313e10012ccad3e752aba2518f3522ba783\n+RUN curl -L https://api.pub.build.mozilla.org/tooltool/sha512/$SCCACHE_DIGEST | \\\n+      tar xJf - -C /usr/local/bin --strip-components=1\n+\n+RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n+    dpkg -i dumb-init_*.deb && \\\n+    rm dumb-init_*.deb\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n+\n+ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu\n+ENV XPY_RUN test distcheck"}, {"sha": "3dc3cf915019341036f8dcf910a54d1f355e13e3", "filename": "src/ci/run.sh", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4781eb315b7bcf11682d68aafac2ce4739bfe166/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/4781eb315b7bcf11682d68aafac2ce4739bfe166/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=4781eb315b7bcf11682d68aafac2ce4739bfe166", "patch": "@@ -43,10 +43,14 @@ else\n     ncpus=$(nproc)\n fi\n \n-make -j $ncpus tidy\n-make -j $ncpus\n-if [ ! -z \"$XPY_CHECK\" ]; then\n-  exec python2.7 $SRC/x.py $XPY_CHECK\n+if [ ! -z \"$XPY_RUN\" ]; then\n+  exec python2.7 $SRC/x.py $XPY_RUN\n else\n-  exec make $RUST_CHECK_TARGET -j $ncpus\n+  make -j $ncpus tidy\n+  make -j $ncpus\n+  if [ ! -z \"$XPY_CHECK\" ]; then\n+    exec python2.7 $SRC/x.py $XPY_CHECK\n+  else\n+    exec make $RUST_CHECK_TARGET -j $ncpus\n+  fi\n fi"}]}