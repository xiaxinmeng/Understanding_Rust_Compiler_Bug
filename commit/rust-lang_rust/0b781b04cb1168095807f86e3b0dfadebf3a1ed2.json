{"sha": "0b781b04cb1168095807f86e3b0dfadebf3a1ed2", "node_id": "C_kwDOAAsO6NoAKDBiNzgxYjA0Y2IxMTY4MDk1ODA3Zjg2ZTNiMGRmYWRlYmYzYTFlZDI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-20T13:55:55Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-20T13:55:55Z"}, "message": "Ensure we never consider the null pointer dereferencable", "tree": {"sha": "7d01396d86601056d95b39a2a731c56c4cfae603", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d01396d86601056d95b39a2a731c56c4cfae603"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b781b04cb1168095807f86e3b0dfadebf3a1ed2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b781b04cb1168095807f86e3b0dfadebf3a1ed2", "html_url": "https://github.com/rust-lang/rust/commit/0b781b04cb1168095807f86e3b0dfadebf3a1ed2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b781b04cb1168095807f86e3b0dfadebf3a1ed2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "512a328e2fb32bddd206461770a2c058368519cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/512a328e2fb32bddd206461770a2c058368519cc", "html_url": "https://github.com/rust-lang/rust/commit/512a328e2fb32bddd206461770a2c058368519cc"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "5dcd209a8fb308b7e0664b9cca8146992db22ee3", "filename": "compiler/rustc_const_eval/src/interpret/memory.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b781b04cb1168095807f86e3b0dfadebf3a1ed2/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b781b04cb1168095807f86e3b0dfadebf3a1ed2/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmemory.rs?ref=0b781b04cb1168095807f86e3b0dfadebf3a1ed2", "patch": "@@ -441,6 +441,10 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                         msg,\n                     })\n                 }\n+                // Ensure we never consider the null pointer dereferencable.\n+                if M::PointerTag::OFFSET_IS_ADDR {\n+                    assert_ne!(ptr.addr(), Size::ZERO);\n+                }\n                 // Test align. Check this last; if both bounds and alignment are violated\n                 // we want the error to be about the bounds.\n                 if let Some(align) = align {"}]}