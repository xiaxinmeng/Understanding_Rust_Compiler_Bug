{"sha": "96261814948099370141413446c3b34a1354548a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MjYxODE0OTQ4MDk5MzcwMTQxNDEzNDQ2YzNiMzRhMTM1NDU0OGE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-30T02:30:49Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-30T02:30:49Z"}, "message": "check.rs: inline a constant", "tree": {"sha": "262afd26d34f97f86d873324c579487bebd61bfd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/262afd26d34f97f86d873324c579487bebd61bfd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96261814948099370141413446c3b34a1354548a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96261814948099370141413446c3b34a1354548a", "html_url": "https://github.com/rust-lang/rust/commit/96261814948099370141413446c3b34a1354548a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96261814948099370141413446c3b34a1354548a/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b45f21d38e7e127d257c6299b9da00fdc57476b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b45f21d38e7e127d257c6299b9da00fdc57476b9", "html_url": "https://github.com/rust-lang/rust/commit/b45f21d38e7e127d257c6299b9da00fdc57476b9"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "ea0eff1eed9f86fe441df3bede0ade7b42091173", "filename": "src/libsyntax/feature_gate/check.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/96261814948099370141413446c3b34a1354548a/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96261814948099370141413446c3b34a1354548a/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs?ref=96261814948099370141413446c3b34a1354548a", "patch": "@@ -145,9 +145,6 @@ fn leveled_feature_err<'a, S: Into<MultiSpan>>(\n \n }\n \n-const EXPLAIN_BOX_SYNTAX: &str =\n-    \"box expression syntax is experimental; you can call `Box::new` instead\";\n-\n struct PostExpansionVisitor<'a> {\n     parse_sess: &'a ParseSess,\n     features: &'a Features,\n@@ -507,7 +504,10 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n     fn visit_expr(&mut self, e: &'a ast::Expr) {\n         match e.kind {\n             ast::ExprKind::Box(_) => {\n-                gate_feature_post!(&self, box_syntax, e.span, EXPLAIN_BOX_SYNTAX);\n+                gate_feature_post!(\n+                    &self, box_syntax, e.span,\n+                    \"box expression syntax is experimental; you can call `Box::new` instead\"\n+                );\n             }\n             ast::ExprKind::Type(..) => {\n                 // To avoid noise about type ascription in common syntax errors, only emit if it"}]}