{"sha": "bf61bb6b7f6522dc78a7100c18282282206af14a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmNjFiYjZiN2Y2NTIyZGM3OGE3MTAwYzE4MjgyMjgyMjA2YWYxNGE=", "commit": {"author": {"name": "Edward Wang", "email": "edward.yu.wang@gmail.com", "date": "2014-06-23T17:42:13Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-25T00:19:19Z"}, "message": "Add tests for #12470 and #14285\n\nThe #14869 removed `TraitStore` from `ty_trait` and represented trait\nreference as regular `ty_rptr`. An old bug of the missing constraint\nupon lifetime parameter of trait reference then is fixed as a side\neffect. Adds tests for affected bugs and closes them.\n\nCloses #12470.\nCloses #14285.", "tree": {"sha": "95fbe463428ce1ed956826be9e74f80b0de91fc7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95fbe463428ce1ed956826be9e74f80b0de91fc7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf61bb6b7f6522dc78a7100c18282282206af14a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf61bb6b7f6522dc78a7100c18282282206af14a", "html_url": "https://github.com/rust-lang/rust/commit/bf61bb6b7f6522dc78a7100c18282282206af14a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf61bb6b7f6522dc78a7100c18282282206af14a/comments", "author": {"login": "edwardw", "id": 454049, "node_id": "MDQ6VXNlcjQ1NDA0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/454049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwardw", "html_url": "https://github.com/edwardw", "followers_url": "https://api.github.com/users/edwardw/followers", "following_url": "https://api.github.com/users/edwardw/following{/other_user}", "gists_url": "https://api.github.com/users/edwardw/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwardw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwardw/subscriptions", "organizations_url": "https://api.github.com/users/edwardw/orgs", "repos_url": "https://api.github.com/users/edwardw/repos", "events_url": "https://api.github.com/users/edwardw/events{/privacy}", "received_events_url": "https://api.github.com/users/edwardw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d58412bfa13a21718c629407939d08b8fca2edc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d58412bfa13a21718c629407939d08b8fca2edc7", "html_url": "https://github.com/rust-lang/rust/commit/d58412bfa13a21718c629407939d08b8fca2edc7"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "d5e608ecae303a570f9151f35ae2685bfa0b38ac", "filename": "src/test/compile-fail/issue-14285.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/bf61bb6b7f6522dc78a7100c18282282206af14a/src%2Ftest%2Fcompile-fail%2Fissue-14285.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf61bb6b7f6522dc78a7100c18282282206af14a/src%2Ftest%2Fcompile-fail%2Fissue-14285.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-14285.rs?ref=bf61bb6b7f6522dc78a7100c18282282206af14a", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Foo {}\n+\n+struct A;\n+\n+impl Foo for A {}\n+\n+struct B<'a>(&'a Foo);\n+\n+fn foo<'a>(a: &Foo) -> B<'a> {\n+    B(a)    //~ ERROR cannot infer an appropriate lifetime\n+}\n+\n+fn main() {\n+    let _test = foo(&A);\n+}"}, {"sha": "18bfb7abe6c861fe89bc75b1db369bcf5fe21fae", "filename": "src/test/compile-fail/isuue-12470.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/bf61bb6b7f6522dc78a7100c18282282206af14a/src%2Ftest%2Fcompile-fail%2Fisuue-12470.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf61bb6b7f6522dc78a7100c18282282206af14a/src%2Ftest%2Fcompile-fail%2Fisuue-12470.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fisuue-12470.rs?ref=bf61bb6b7f6522dc78a7100c18282282206af14a", "patch": "@@ -0,0 +1,42 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait X {\n+    fn get_i(&self) -> int;\n+}\n+\n+\n+struct B {\n+    i: int\n+}\n+\n+impl X for B {\n+    fn get_i(&self) -> int {\n+        self.i\n+    }\n+}\n+\n+struct A<'a> {\n+    p: &'a X\n+}\n+\n+fn make_a<'a>(p: &'a X) -> A<'a> {\n+    A { p: p }\n+}\n+\n+fn make_make_a() -> A {\n+    let b: Box<B> = box B {i:1};\n+    let bb: &B = b;    //~ ERROR does not live long enough\n+    make_a(bb)\n+}\n+\n+fn main() {\n+    let _a = make_make_a();\n+}"}]}