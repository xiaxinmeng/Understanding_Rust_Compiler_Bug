{"sha": "80c603fc6589aaf70df7c142723eef9a1d28aec5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwYzYwM2ZjNjU4OWFhZjcwZGY3YzE0MjcyM2VlZjlhMWQyOGFlYzU=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2017-07-15T17:26:11Z"}, "committer": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2017-07-15T19:46:03Z"}, "message": "path, not name, in sole-argument variant type mismatch suggestion\n\nWe want the suggested replacement (which IDE tooling and such might offer to\nautomatically swap in) to, like, actually be correct: suggesting `MyVariant(x)`\nwhen the actual fix is `MyEnum::MyVariant(x)` might be better than nothing, but\nRust is supposed to be the future of computing: we're better than better than\nnothing.\n\nAs an exceptional case, we excise the prelude path, preferring to suggest\n`Some` or `Ok` rather than `std::prelude::v1::Some` and\n`std::prelude::v2::Ok`. (It's not worth the effort to future-proof against\nhypothetical preludes v2, v3, &c.: we trust our successors to grep\u2014excuse me,\nripgrep\u2014for that.)\n\nAlso, don't make this pre\u00ebmpt the existing probe-for-return-type suggestions,\ndespite their being looked unfavorably upon, at least in this situation\n(https://github.com/rust-lang/rust/issues/42764#issuecomment-311388958): Cody\nSchafer pointed out that that's a separate issue\n(https://github.com/rust-lang/rust/pull/43178#issuecomment-314953229).\n\nThis is in the matter of #42764.", "tree": {"sha": "c6e140a392247791f53cc08ca691d463e077707b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6e140a392247791f53cc08ca691d463e077707b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80c603fc6589aaf70df7c142723eef9a1d28aec5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80c603fc6589aaf70df7c142723eef9a1d28aec5", "html_url": "https://github.com/rust-lang/rust/commit/80c603fc6589aaf70df7c142723eef9a1d28aec5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80c603fc6589aaf70df7c142723eef9a1d28aec5/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eac74104054ed1390f8c92be1d4163af128d38de", "url": "https://api.github.com/repos/rust-lang/rust/commits/eac74104054ed1390f8c92be1d4163af128d38de", "html_url": "https://github.com/rust-lang/rust/commit/eac74104054ed1390f8c92be1d4163af128d38de"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "828106df7821b2e1b435c295b4b3a40c471d36c4", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/80c603fc6589aaf70df7c142723eef9a1d28aec5/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80c603fc6589aaf70df7c142723eef9a1d28aec5/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=80c603fc6589aaf70df7c142723eef9a1d28aec5", "patch": "@@ -106,7 +106,10 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                         let sole_field = &variant.fields[0];\n                         let sole_field_ty = sole_field.ty(self.tcx, substs);\n                         if self.can_coerce(expr_ty, sole_field_ty) {\n-                            compatible_variants.push(variant.name);\n+                            let mut variant_path = self.tcx.item_path_str(variant.did);\n+                            variant_path = variant_path.trim_left_matches(\"std::prelude::v1::\")\n+                                .to_string();\n+                            compatible_variants.push(variant_path);\n                         }\n                     }\n                 }\n@@ -117,7 +120,6 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     err.span_suggestions(expr.span,\n                                          \"perhaps you meant to use a variant of the expected type\",\n                                          suggestions);\n-                    return Some(err);\n                 }\n             }\n "}, {"sha": "ecaeb7b1161f7fc332a4a61011033a260606b3c4", "filename": "src/test/ui/did_you_mean/issue-42764.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80c603fc6589aaf70df7c142723eef9a1d28aec5/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42764.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80c603fc6589aaf70df7c142723eef9a1d28aec5/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42764.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42764.rs?ref=80c603fc6589aaf70df7c142723eef9a1d28aec5", "patch": "@@ -11,7 +11,7 @@\n enum DoubleOption<T> {\n     FirstSome(T),\n     AlternativeSome(T),\n-    None,\n+    Nothing,\n }\n \n fn this_function_expects_a_double_option<T>(d: DoubleOption<T>) {}"}, {"sha": "7ba129039bc2f028795fc0178edaee4133b9e780", "filename": "src/test/ui/did_you_mean/issue-42764.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/80c603fc6589aaf70df7c142723eef9a1d28aec5/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42764.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/80c603fc6589aaf70df7c142723eef9a1d28aec5/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42764.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42764.stderr?ref=80c603fc6589aaf70df7c142723eef9a1d28aec5", "patch": "@@ -8,10 +8,10 @@ error[E0308]: mismatched types\n               found type `usize`\n help: perhaps you meant to use a variant of the expected type\n    |\n-21 |     this_function_expects_a_double_option(FirstSome(n));\n-   |                                           ^^^^^^^^^^^^\n-21 |     this_function_expects_a_double_option(AlternativeSome(n));\n-   |                                           ^^^^^^^^^^^^^^^^^^\n+21 |     this_function_expects_a_double_option(DoubleOption::FirstSome(n));\n+   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+21 |     this_function_expects_a_double_option(DoubleOption::AlternativeSome(n));\n+   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}]}