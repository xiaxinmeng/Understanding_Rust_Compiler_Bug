{"sha": "00ac29d7b2e7a9a2da79f8754efc8e0d51e81886", "node_id": "C_kwDOAAsO6NoAKDAwYWMyOWQ3YjJlN2E5YTJkYTc5Zjg3NTRlZmM4ZTBkNTFlODE4ODY", "commit": {"author": {"name": "Jakub Ber\u00e1nek", "email": "berykubik@gmail.com", "date": "2023-05-04T13:39:21Z"}, "committer": {"name": "Jakub Ber\u00e1nek", "email": "berykubik@gmail.com", "date": "2023-05-04T13:39:21Z"}, "message": "Output LLVM optimization remark kind in `-Cremark` output", "tree": {"sha": "a123ba18014bcf67ffbdc962dc9190489f3f01c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a123ba18014bcf67ffbdc962dc9190489f3f01c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00ac29d7b2e7a9a2da79f8754efc8e0d51e81886", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEzFQynJm4WzBnfhz8kJzQ0mSDUWsFAmRTtYkACgkQkJzQ0mSD\nUWsoZgv+Jkm9JGdNf7TFalM8kw9TanmxtfdLCmwWQqEGZmgzDYrVSSXusGUeEAJy\narntwO+PhrZzDQKG7KW9UfB1BRtIFfGX6Mdq/htTeqmXxQpOGY5505NXrrUp88Oi\nDzkuVFKel+4yLBsUIukUhEynNugku9GwVCPr3bDIUs9O70zPEh0gLQ4PTGtHXS0O\n9UlonWNh2o8eWSor8RbqyVnB+gxZQpZg8CzrWKBHTf3cENZ6nkggNVYEI9oSjKCD\nyMxg+/liKRuziRdOSeyB1WXlHJSfXvG5LnrVhaefRrFp7zyGe/zenDbxZiwc0l6t\nkdjrkIM69Q4s8Tbn81LY+CBa3FN81OTTcg6ePIhLVd4myyNOWXf3xmNoSGF2k0vZ\nOGuJY4sAMbPH3PjpPHLf4DqBX9Oa9rkIV/FGvnCknVgPsXZXGf0P4I0ADtGdatbY\n9OPoXd9ArpCx1O/pD4s7QmsY1hpjokZRBzK9d07AJbR33HPLTTNObY+nx4GNuDXI\nxOJCy+ng\n=a998\n-----END PGP SIGNATURE-----", "payload": "tree a123ba18014bcf67ffbdc962dc9190489f3f01c7\nparent 6f8c0557e0b73c73a8a7163a15f4a5a3feca7d5c\nauthor Jakub Ber\u00e1nek <berykubik@gmail.com> 1683207561 +0200\ncommitter Jakub Ber\u00e1nek <berykubik@gmail.com> 1683207561 +0200\n\nOutput LLVM optimization remark kind in `-Cremark` output\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00ac29d7b2e7a9a2da79f8754efc8e0d51e81886", "html_url": "https://github.com/rust-lang/rust/commit/00ac29d7b2e7a9a2da79f8754efc8e0d51e81886", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00ac29d7b2e7a9a2da79f8754efc8e0d51e81886/comments", "author": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f8c0557e0b73c73a8a7163a15f4a5a3feca7d5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f8c0557e0b73c73a8a7163a15f4a5a3feca7d5c", "html_url": "https://github.com/rust-lang/rust/commit/6f8c0557e0b73c73a8a7163a15f4a5a3feca7d5c"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "b8c6eb8199a3c0db752b9bcaa49e43d07a77e51d", "filename": "compiler/rustc_codegen_llvm/messages.ftl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00ac29d7b2e7a9a2da79f8754efc8e0d51e81886/compiler%2Frustc_codegen_llvm%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/00ac29d7b2e7a9a2da79f8754efc8e0d51e81886/compiler%2Frustc_codegen_llvm%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fmessages.ftl?ref=00ac29d7b2e7a9a2da79f8754efc8e0d51e81886", "patch": "@@ -82,7 +82,7 @@ codegen_llvm_prepare_thin_lto_module_with_llvm_err = failed to prepare thin LTO\n codegen_llvm_parse_bitcode = failed to parse bitcode for LTO module\n codegen_llvm_parse_bitcode_with_llvm_err = failed to parse bitcode for LTO module: {$llvm_err}\n \n-codegen_llvm_from_llvm_optimization_diag = {$filename}:{$line}:{$column} {$pass_name}: {$message}\n+codegen_llvm_from_llvm_optimization_diag = {$filename}:{$line}:{$column} {$pass_name} ({$kind}): {$message}\n codegen_llvm_from_llvm_diag = {$message}\n \n codegen_llvm_write_bytecode = failed to write bytecode to {$path}: {$err}"}, {"sha": "ca2eab28f872b26680425aec92eada7a3d64053f", "filename": "compiler/rustc_codegen_llvm/src/back/write.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/00ac29d7b2e7a9a2da79f8754efc8e0d51e81886/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00ac29d7b2e7a9a2da79f8754efc8e0d51e81886/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs?ref=00ac29d7b2e7a9a2da79f8754efc8e0d51e81886", "patch": "@@ -31,6 +31,7 @@ use rustc_span::symbol::sym;\n use rustc_span::InnerSpan;\n use rustc_target::spec::{CodeModel, RelocModel, SanitizerSet, SplitDebuginfo};\n \n+use crate::llvm::diagnostic::OptimizationDiagnosticKind;\n use libc::{c_char, c_int, c_uint, c_void, size_t};\n use std::ffi::CString;\n use std::fs;\n@@ -363,6 +364,15 @@ unsafe extern \"C\" fn diagnostic_handler(info: &DiagnosticInfo, user: *mut c_void\n                     line: opt.line,\n                     column: opt.column,\n                     pass_name: &opt.pass_name,\n+                    kind: match opt.kind {\n+                        OptimizationDiagnosticKind::OptimizationRemark => \"success\",\n+                        OptimizationDiagnosticKind::OptimizationMissed\n+                        | OptimizationDiagnosticKind::OptimizationFailure => \"missed\",\n+                        OptimizationDiagnosticKind::OptimizationAnalysis\n+                        | OptimizationDiagnosticKind::OptimizationAnalysisFPCommute\n+                        | OptimizationDiagnosticKind::OptimizationAnalysisAliasing => \"analysis\",\n+                        OptimizationDiagnosticKind::OptimizationRemarkOther => \"other\",\n+                    },\n                     message: &opt.message,\n                 });\n             }"}, {"sha": "edebd07cb1cea23d2e1f2cac6de6e5b2732cba9e", "filename": "compiler/rustc_codegen_llvm/src/errors.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00ac29d7b2e7a9a2da79f8754efc8e0d51e81886/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00ac29d7b2e7a9a2da79f8754efc8e0d51e81886/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs?ref=00ac29d7b2e7a9a2da79f8754efc8e0d51e81886", "patch": "@@ -195,6 +195,7 @@ pub(crate) struct FromLlvmOptimizationDiag<'a> {\n     pub line: std::ffi::c_uint,\n     pub column: std::ffi::c_uint,\n     pub pass_name: &'a str,\n+    pub kind: &'a str,\n     pub message: &'a str,\n }\n "}, {"sha": "8fd30466f43c9a7b93211016a1a8b0fd6c31518a", "filename": "tests/ui/optimization-remark.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00ac29d7b2e7a9a2da79f8754efc8e0d51e81886/tests%2Fui%2Foptimization-remark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00ac29d7b2e7a9a2da79f8754efc8e0d51e81886/tests%2Fui%2Foptimization-remark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foptimization-remark.rs?ref=00ac29d7b2e7a9a2da79f8754efc8e0d51e81886", "patch": "@@ -13,7 +13,7 @@\n // [merge1] compile-flags: -Cremark=all    -Cremark=giraffe\n // [merge2] compile-flags: -Cremark=inline -Cremark=giraffe\n //\n-// error-pattern: inline: 'f' not inlined into 'g'\n+// error-pattern: inline (missed): 'f' not inlined into 'g'\n // dont-check-compiler-stderr\n \n #[no_mangle]"}]}