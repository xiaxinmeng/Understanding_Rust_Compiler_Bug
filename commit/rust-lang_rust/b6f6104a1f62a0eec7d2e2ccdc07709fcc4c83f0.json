{"sha": "b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0", "node_id": "C_kwDOAAsO6NoAKGI2ZjYxMDRhMWY2MmEwZWVjN2QyZTJjY2RjMDc3MDlmY2M0YzgzZjA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-07T08:09:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-07T08:09:20Z"}, "message": "Auto merge of #110019 - jplatte:jplatte/stabilize-is-some-and, r=Amanieu\n\nStabilize is_some_and\n\nThis stabilizes the following public API:\n\n```rust\nimpl<T> Option<T> {\n    pub fn is_some_and(self, f: impl FnOnce(T) -> bool) -> bool;\n}\n\nimpl<T, E> Result<T, E> {\n    pub fn is_ok_and(self, f: impl FnOnce(T) -> bool) -> bool;\n    pub fn is_err_and(self, f: impl FnOnce(E) -> bool) -> bool;\n}\n```\n\nCloses #93050 (tracking issue).\n\n`@rustbot` label +T-libs-api -T-libs", "tree": {"sha": "44dad4c16912704cdd0303f5b907f4ce38cb94a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44dad4c16912704cdd0303f5b907f4ce38cb94a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0", "html_url": "https://github.com/rust-lang/rust/commit/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97879ce24ba6fbc89b1a7a9bef5d31f73963646c", "url": "https://api.github.com/repos/rust-lang/rust/commits/97879ce24ba6fbc89b1a7a9bef5d31f73963646c", "html_url": "https://github.com/rust-lang/rust/commit/97879ce24ba6fbc89b1a7a9bef5d31f73963646c"}, {"sha": "443928f7e33666f83711c768ef2968090c85bc7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/443928f7e33666f83711c768ef2968090c85bc7f", "html_url": "https://github.com/rust-lang/rust/commit/443928f7e33666f83711c768ef2968090c85bc7f"}], "stats": {"total": 16, "additions": 3, "deletions": 13}, "files": [{"sha": "7697b592e33a10b6fb8b4b4d7bd32d5f3687eaf0", "filename": "compiler/rustc_builtin_macros/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs?ref=b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0", "patch": "@@ -7,7 +7,6 @@\n #![feature(box_patterns)]\n #![feature(decl_macro)]\n #![feature(if_let_guard)]\n-#![feature(is_some_and)]\n #![feature(is_sorted)]\n #![feature(let_chains)]\n #![feature(proc_macro_internals)]"}, {"sha": "5ab389d04c7eea344b84dc4b0f520c1291a3e476", "filename": "compiler/rustc_const_eval/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs?ref=b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0", "patch": "@@ -20,7 +20,6 @@ Rust MIR: a lowered representation of Rust.\n #![feature(try_blocks)]\n #![feature(yeet_expr)]\n #![feature(if_let_guard)]\n-#![feature(is_some_and)]\n #![recursion_limit = \"256\"]\n \n #[macro_use]"}, {"sha": "27e56180349efe7ae852cd549359d9cafb2f8d1b", "filename": "compiler/rustc_hir_analysis/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs?ref=b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0", "patch": "@@ -70,7 +70,6 @@ This API is completely unstable and subject to change.\n #![feature(lazy_cell)]\n #![feature(slice_partition_dedup)]\n #![feature(try_blocks)]\n-#![feature(is_some_and)]\n #![feature(type_alias_impl_trait)]\n #![recursion_limit = \"256\"]\n "}, {"sha": "057053297cd2d1f9b1bdc80566889414b608e3d9", "filename": "library/core/src/option.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0", "patch": "@@ -605,8 +605,6 @@ impl<T> Option<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(is_some_and)]\n-    ///\n     /// let x: Option<u32> = Some(2);\n     /// assert_eq!(x.is_some_and(|x| x > 1), true);\n     ///\n@@ -618,7 +616,7 @@ impl<T> Option<T> {\n     /// ```\n     #[must_use]\n     #[inline]\n-    #[unstable(feature = \"is_some_and\", issue = \"93050\")]\n+    #[stable(feature = \"is_some_and\", since = \"CURRENT_RUSTC_VERSION\")]\n     pub fn is_some_and(self, f: impl FnOnce(T) -> bool) -> bool {\n         match self {\n             None => false,"}, {"sha": "241602c0e18f1b7b609f5e109dd475251a030411", "filename": "library/core/src/result.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0", "patch": "@@ -545,8 +545,6 @@ impl<T, E> Result<T, E> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(is_some_and)]\n-    ///\n     /// let x: Result<u32, &str> = Ok(2);\n     /// assert_eq!(x.is_ok_and(|x| x > 1), true);\n     ///\n@@ -558,7 +556,7 @@ impl<T, E> Result<T, E> {\n     /// ```\n     #[must_use]\n     #[inline]\n-    #[unstable(feature = \"is_some_and\", issue = \"93050\")]\n+    #[stable(feature = \"is_some_and\", since = \"CURRENT_RUSTC_VERSION\")]\n     pub fn is_ok_and(self, f: impl FnOnce(T) -> bool) -> bool {\n         match self {\n             Err(_) => false,\n@@ -590,7 +588,6 @@ impl<T, E> Result<T, E> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(is_some_and)]\n     /// use std::io::{Error, ErrorKind};\n     ///\n     /// let x: Result<u32, Error> = Err(Error::new(ErrorKind::NotFound, \"!\"));\n@@ -604,7 +601,7 @@ impl<T, E> Result<T, E> {\n     /// ```\n     #[must_use]\n     #[inline]\n-    #[unstable(feature = \"is_some_and\", issue = \"93050\")]\n+    #[stable(feature = \"is_some_and\", since = \"CURRENT_RUSTC_VERSION\")]\n     pub fn is_err_and(self, f: impl FnOnce(E) -> bool) -> bool {\n         match self {\n             Ok(_) => false,"}, {"sha": "736b3c0497c46d7f0be6b69e97e320dd0bdf5a59", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0", "patch": "@@ -289,7 +289,6 @@\n #![feature(hashmap_internals)]\n #![feature(ip)]\n #![feature(ip_in_core)]\n-#![feature(is_some_and)]\n #![feature(maybe_uninit_slice)]\n #![feature(maybe_uninit_write_slice)]\n #![feature(panic_can_unwind)]"}, {"sha": "fb4e59acd001d19ecdcc7ad6c1ee8d9383964a6d", "filename": "src/tools/miri/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs?ref=b6f6104a1f62a0eec7d2e2ccdc07709fcc4c83f0", "patch": "@@ -5,7 +5,6 @@\n #![feature(io_error_more)]\n #![feature(variant_count)]\n #![feature(yeet_expr)]\n-#![feature(is_some_and)]\n #![feature(nonzero_ops)]\n #![feature(local_key_cell_methods)]\n #![feature(is_terminal)]"}]}