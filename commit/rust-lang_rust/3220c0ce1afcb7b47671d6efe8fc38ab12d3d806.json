{"sha": "3220c0ce1afcb7b47671d6efe8fc38ab12d3d806", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyMjBjMGNlMWFmY2I3YjQ3NjcxZDZlZmU4ZmMzOGFiMTJkM2Q4MDY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-17T15:18:05Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-24T10:36:32Z"}, "message": "Explain why vtable generation needs no alignment checks", "tree": {"sha": "bd7ba496ccaba31b860c4b8a957e8dce88103737", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd7ba496ccaba31b860c4b8a957e8dce88103737"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3220c0ce1afcb7b47671d6efe8fc38ab12d3d806", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3220c0ce1afcb7b47671d6efe8fc38ab12d3d806", "html_url": "https://github.com/rust-lang/rust/commit/3220c0ce1afcb7b47671d6efe8fc38ab12d3d806", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3220c0ce1afcb7b47671d6efe8fc38ab12d3d806/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22872196f55d93d7af6b3c96e34bef3579f0c3fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/22872196f55d93d7af6b3c96e34bef3579f0c3fc", "html_url": "https://github.com/rust-lang/rust/commit/22872196f55d93d7af6b3c96e34bef3579f0c3fc"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "bda585b8eda349f82ad817601495994f14af6b55", "filename": "src/librustc_mir/interpret/traits.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3220c0ce1afcb7b47671d6efe8fc38ab12d3d806/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3220c0ce1afcb7b47671d6efe8fc38ab12d3d806/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs?ref=3220c0ce1afcb7b47671d6efe8fc38ab12d3d806", "patch": "@@ -59,6 +59,9 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n \n         let drop = ::monomorphize::resolve_drop_in_place(*tcx, ty);\n         let drop = self.memory.create_fn_alloc(drop).with_default_tag();\n+        // no need to do any alignment checks on the memory accesses below, because we know the\n+        // allocation is correctly aligned as we created it above. Also we're only offsetting by\n+        // multiples of `ptr_align`, which means that it will stay aligned to `ptr_align`.\n         self.memory\n             .get_mut(vtable.alloc_id)?\n             .write_ptr_sized(tcx, vtable, Scalar::Ptr(drop).into())?;"}]}