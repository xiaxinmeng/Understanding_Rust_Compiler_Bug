{"sha": "d13bfd294c55a47bb33e5846ce184c80cdf547dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxM2JmZDI5NGM1NWE0N2JiMzNlNTg0NmNlMTg0YzgwY2RmNTQ3ZGQ=", "commit": {"author": {"name": "Michael Lamparski", "email": "diagonaldevice@gmail.com", "date": "2018-06-11T23:44:48Z"}, "committer": {"name": "Michael Lamparski", "email": "diagonaldevice@gmail.com", "date": "2018-06-12T12:06:22Z"}, "message": "fix issue #51331 by updating qself.position", "tree": {"sha": "5436d10742b351977add2194323898c8f802c148", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5436d10742b351977add2194323898c8f802c148"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d13bfd294c55a47bb33e5846ce184c80cdf547dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d13bfd294c55a47bb33e5846ce184c80cdf547dd", "html_url": "https://github.com/rust-lang/rust/commit/d13bfd294c55a47bb33e5846ce184c80cdf547dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d13bfd294c55a47bb33e5846ce184c80cdf547dd/comments", "author": {"login": "ExpHP", "id": 1411280, "node_id": "MDQ6VXNlcjE0MTEyODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1411280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExpHP", "html_url": "https://github.com/ExpHP", "followers_url": "https://api.github.com/users/ExpHP/followers", "following_url": "https://api.github.com/users/ExpHP/following{/other_user}", "gists_url": "https://api.github.com/users/ExpHP/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExpHP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExpHP/subscriptions", "organizations_url": "https://api.github.com/users/ExpHP/orgs", "repos_url": "https://api.github.com/users/ExpHP/repos", "events_url": "https://api.github.com/users/ExpHP/events{/privacy}", "received_events_url": "https://api.github.com/users/ExpHP/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ExpHP", "id": 1411280, "node_id": "MDQ6VXNlcjE0MTEyODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1411280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ExpHP", "html_url": "https://github.com/ExpHP", "followers_url": "https://api.github.com/users/ExpHP/followers", "following_url": "https://api.github.com/users/ExpHP/following{/other_user}", "gists_url": "https://api.github.com/users/ExpHP/gists{/gist_id}", "starred_url": "https://api.github.com/users/ExpHP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ExpHP/subscriptions", "organizations_url": "https://api.github.com/users/ExpHP/orgs", "repos_url": "https://api.github.com/users/ExpHP/repos", "events_url": "https://api.github.com/users/ExpHP/events{/privacy}", "received_events_url": "https://api.github.com/users/ExpHP/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a20c177827deb7687856e48dbbace63a22408a07", "url": "https://api.github.com/repos/rust-lang/rust/commits/a20c177827deb7687856e48dbbace63a22408a07", "html_url": "https://github.com/rust-lang/rust/commit/a20c177827deb7687856e48dbbace63a22408a07"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "de7a3dc5ceeb273f061bab2c5338a777a300b024", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d13bfd294c55a47bb33e5846ce184c80cdf547dd/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d13bfd294c55a47bb33e5846ce184c80cdf547dd/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=d13bfd294c55a47bb33e5846ce184c80cdf547dd", "patch": "@@ -138,7 +138,23 @@ impl<'a> base::Resolver for Resolver<'a> {\n         struct EliminateCrateVar<'b, 'a: 'b>(&'b mut Resolver<'a>, Span);\n \n         impl<'a, 'b> Folder for EliminateCrateVar<'a, 'b> {\n-            fn fold_path(&mut self, mut path: ast::Path) -> ast::Path {\n+            fn fold_path(&mut self, path: ast::Path) -> ast::Path {\n+                match self.fold_qpath(None, path) {\n+                    (None, path) => path,\n+                    _ => unreachable!(),\n+                }\n+            }\n+\n+            fn fold_qpath(&mut self, mut qself: Option<ast::QSelf>, mut path: ast::Path)\n+                          -> (Option<ast::QSelf>, ast::Path) {\n+                qself = qself.map(|ast::QSelf { ty, path_span, position }| {\n+                    ast::QSelf {\n+                        ty: self.fold_ty(ty),\n+                        path_span: self.new_span(path_span),\n+                        position,\n+                    }\n+                });\n+\n                 let ident = path.segments[0].ident;\n                 if ident.name == keywords::DollarCrate.name() {\n                     path.segments[0].ident.name = keywords::CrateRoot.name();\n@@ -150,10 +166,13 @@ impl<'a> base::Resolver for Resolver<'a> {\n                                 ast::Ident::with_empty_ctxt(name).with_span_pos(span)\n                             ),\n                             _ => unreachable!(),\n-                        })\n+                        });\n+                        if let Some(qself) = &mut qself {\n+                            qself.position += 1;\n+                        }\n                     }\n                 }\n-                path\n+                (qself, path)\n             }\n \n             fn fold_mac(&mut self, mac: ast::Mac) -> ast::Mac {"}]}