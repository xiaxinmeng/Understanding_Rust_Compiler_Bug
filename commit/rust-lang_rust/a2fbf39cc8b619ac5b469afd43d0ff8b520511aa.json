{"sha": "a2fbf39cc8b619ac5b469afd43d0ff8b520511aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyZmJmMzljYzhiNjE5YWM1YjQ2OWFmZDQzZDBmZjhiNTIwNTExYWE=", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2020-09-04T13:20:13Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2020-09-04T13:31:53Z"}, "message": "Fix rust.use-lld when linker is not set", "tree": {"sha": "4fbf9acfbbec00d65225cd674e2336e9269dd4cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fbf9acfbbec00d65225cd674e2336e9269dd4cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2fbf39cc8b619ac5b469afd43d0ff8b520511aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2fbf39cc8b619ac5b469afd43d0ff8b520511aa", "html_url": "https://github.com/rust-lang/rust/commit/a2fbf39cc8b619ac5b469afd43d0ff8b520511aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2fbf39cc8b619ac5b469afd43d0ff8b520511aa/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ffb5c5954a304daf47a567b34e74e421db86d98", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ffb5c5954a304daf47a567b34e74e421db86d98", "html_url": "https://github.com/rust-lang/rust/commit/4ffb5c5954a304daf47a567b34e74e421db86d98"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "1b655f55fb07175f06cf09c6511757d4590ec8e6", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a2fbf39cc8b619ac5b469afd43d0ff8b520511aa/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2fbf39cc8b619ac5b469afd43d0ff8b520511aa/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=a2fbf39cc8b619ac5b469afd43d0ff8b520511aa", "patch": "@@ -863,7 +863,12 @@ impl Build {\n             && !target.contains(\"msvc\")\n         {\n             Some(self.cc(target))\n-        } else if can_use_lld && self.config.use_lld && self.build == target {\n+        } else if target.contains(\"msvc\")\n+            && can_use_lld\n+            && self.config.use_lld\n+            && self.build == target\n+        {\n+            // Currently we support using LLD directly via `rust.use_lld` option only with MSVC\n             Some(&self.initial_lld)\n         } else {\n             None"}]}