{"sha": "fd4515cb3f8a8e21d3640ffa8f2b3040a381b87c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkNDUxNWNiM2Y4YThlMjFkMzY0MGZmYThmMmIzMDQwYTM4MWI4N2M=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-11-26T21:50:38Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-12-23T18:35:22Z"}, "message": "bootstrap: refactor showing the \"dist\" info", "tree": {"sha": "27c59b7ef95b434222239aad8b87a6baeccaa669", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27c59b7ef95b434222239aad8b87a6baeccaa669"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd4515cb3f8a8e21d3640ffa8f2b3040a381b87c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl/jjfEACgkQPgar6Auq\n8ZzhuQ/+KxtV6H6MFpjWr0M1J80uhUbljHiP3XJrRXIDw0womrVpSbCngnxSxZ63\nTvM6t7Z3I2iWEn2kze2HHC8cTDkFfUrbGUjqKrnHWgcQnnEtt1TO/axrLfoCnWrU\niSYUNli8UlGignwGUI0OV7b7/76yZFQKWfUR820B89uefcNEZ9uEUqk8Bzl5K+dY\npt2DzWsgaeo5yNzKb2tnHmXsc8zoB0f7GGbNYAMAB17vzttfVYj3xMalKAKc8WjT\nr37BEaqi1buar9sEBdr2u9BbAvIE/Ne18cbXZU/rw9s2WVPhLXmWv9L0u7Q70tQM\n3zGka+hphxci2q6OhdsI2yaVhHQKuz6sCuKbO9hDpktQeJdoRMA0z9zvKrcOgtDe\nfB39ArFSgcrWJyrhIMB/CLV9pixjo0cXbbBnjt5Hvi3uB8h8Tmhwl24nyuLySNCK\niyuvWyaICEJUxUZjTdnptsHIUW+LDrzwyIQ0iePlA549Nk7tZLTlPGyFaJoMiqyA\nTAqt3djLV7Lvadls+oeFGCiV+ktbFNxDU9RFmuWsTNJpKag009Fl86A2aqqIz0v/\nqIaXBgm/b4VM8fNAlBK9geLiI5ndfI5O5EyG7VUAVTKjwxqdiHUEWPDQpPJ+jyEB\nukIBFB0pJ39XBMlF14qr7Z0w9z6AJumfFwWXw9WK3Pd7LBvQxnI=\n=/mvP\n-----END PGP SIGNATURE-----", "payload": "tree 27c59b7ef95b434222239aad8b87a6baeccaa669\nparent 0a2e1c5a2c85ff27f2677aa7db1c2deacf34242d\nauthor Pietro Albini <pietro@pietroalbini.org> 1606427438 +0100\ncommitter Pietro Albini <pietro@pietroalbini.org> 1608748522 +0100\n\nbootstrap: refactor showing the \"dist\" info\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd4515cb3f8a8e21d3640ffa8f2b3040a381b87c", "html_url": "https://github.com/rust-lang/rust/commit/fd4515cb3f8a8e21d3640ffa8f2b3040a381b87c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd4515cb3f8a8e21d3640ffa8f2b3040a381b87c/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a2e1c5a2c85ff27f2677aa7db1c2deacf34242d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a2e1c5a2c85ff27f2677aa7db1c2deacf34242d", "html_url": "https://github.com/rust-lang/rust/commit/0a2e1c5a2c85ff27f2677aa7db1c2deacf34242d"}], "stats": {"total": 28, "additions": 5, "deletions": 23}, "files": [{"sha": "0e00649fc032558aa2a8f73a72af7fb1cd164767", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fd4515cb3f8a8e21d3640ffa8f2b3040a381b87c/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4515cb3f8a8e21d3640ffa8f2b3040a381b87c/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=fd4515cb3f8a8e21d3640ffa8f2b3040a381b87c", "patch": "@@ -72,19 +72,14 @@ impl Step for Docs {\n         if !builder.config.docs {\n             return None;\n         }\n-\n         builder.default_doc(None);\n \n-        builder.info(&format!(\"Dist docs ({})\", host));\n-        let _time = timeit(builder);\n-\n         let dest = \"share/doc/rust/html\";\n \n         let mut tarball = Tarball::new(builder, \"rust-docs\", &host.triple);\n         tarball.set_product_name(\"Rust Documentation\");\n         tarball.add_dir(&builder.doc_out(host), dest);\n         tarball.add_file(&builder.src.join(\"src/doc/robots.txt\"), dest, 0o644);\n-\n         Some(tarball.generate())\n     }\n }\n@@ -112,15 +107,11 @@ impl Step for RustcDocs {\n         if !builder.config.compiler_docs {\n             return None;\n         }\n-\n         builder.default_doc(None);\n-        builder.info(&format!(\"Dist compiler docs ({})\", host));\n-        let _time = timeit(builder);\n \n         let mut tarball = Tarball::new(builder, \"rustc-docs\", &host.triple);\n         tarball.set_product_name(\"Rustc Documentation\");\n         tarball.add_dir(&builder.compiler_doc_out(host), \"share/doc/rust/html/rustc\");\n-\n         Some(tarball.generate())\n     }\n }\n@@ -301,9 +292,6 @@ impl Step for Mingw {\n             return None;\n         }\n \n-        builder.info(&format!(\"Dist mingw ({})\", host));\n-        let _time = timeit(builder);\n-\n         let mut tarball = Tarball::new(builder, \"rust-mingw\", &host.triple);\n         tarball.set_product_name(\"Rust MinGW\");\n \n@@ -341,9 +329,6 @@ impl Step for Rustc {\n         let compiler = self.compiler;\n         let host = self.compiler.host;\n \n-        builder.info(&format!(\"Dist rustc stage{} ({})\", compiler.stage, host.triple));\n-        let _time = timeit(builder);\n-\n         let tarball = Tarball::new(builder, \"rustc\", &host.triple);\n \n         // Prepare the rustc \"image\", what will actually end up getting installed\n@@ -2318,9 +2303,6 @@ impl Step for LlvmTools {\n             }\n         }\n \n-        builder.info(&format!(\"Dist LlvmTools ({})\", target));\n-        let _time = timeit(builder);\n-\n         let mut tarball = Tarball::new(builder, \"llvm-tools\", &target.triple);\n         tarball.set_overlay(OverlayKind::LLVM);\n         tarball.is_preview(true);\n@@ -2375,9 +2357,6 @@ impl Step for RustDev {\n             }\n         }\n \n-        builder.info(&format!(\"Dist RustDev ({})\", target));\n-        let _time = timeit(builder);\n-\n         let mut tarball = Tarball::new(builder, \"rust-dev\", &target.triple);\n         tarball.set_overlay(OverlayKind::LLVM);\n "}, {"sha": "f99b6f30192dcf1b8edd07c14a469f14a8bcb18e", "filename": "src/bootstrap/tarball.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fd4515cb3f8a8e21d3640ffa8f2b3040a381b87c/src%2Fbootstrap%2Ftarball.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4515cb3f8a8e21d3640ffa8f2b3040a381b87c/src%2Fbootstrap%2Ftarball.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftarball.rs?ref=fd4515cb3f8a8e21d3640ffa8f2b3040a381b87c", "patch": "@@ -114,13 +114,17 @@ impl<'a> Tarball<'a> {\n             self.builder.install(&self.builder.src.join(file), &self.overlay_dir, 0o644);\n         }\n \n+        let mut cmd = self.builder.tool_cmd(crate::tool::Tool::RustInstaller);\n+\n+        self.builder.info(&format!(\"Dist {} ({})\", self.component, self.target));\n+        let _time = crate::util::timeit(self.builder);\n+\n         let mut component_name = self.component.clone();\n         if self.is_preview {\n             component_name.push_str(\"-preview\");\n         }\n \n         let distdir = crate::dist::distdir(self.builder);\n-        let mut cmd = self.builder.tool_cmd(crate::tool::Tool::RustInstaller);\n         cmd.arg(\"generate\")\n             .arg(format!(\"--product-name={}\", self.product_name))\n             .arg(\"--rel-manifest-dir=rustlib\")\n@@ -137,7 +141,6 @@ impl<'a> Tarball<'a> {\n             .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n             .arg(format!(\"--component-name={}\", component_name));\n         self.builder.run(&mut cmd);\n-\n         t!(std::fs::remove_dir_all(&self.temp_dir));\n \n         distdir.join(format!(\"{}-{}.tar.gz\", self.pkgname, self.target))"}]}