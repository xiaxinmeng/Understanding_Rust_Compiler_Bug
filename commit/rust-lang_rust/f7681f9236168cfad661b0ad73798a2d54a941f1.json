{"sha": "f7681f9236168cfad661b0ad73798a2d54a941f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3NjgxZjkyMzYxNjhjZmFkNjYxYjBhZDczNzk4YTJkNTRhOTQxZjE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-05T22:31:38Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-05T22:31:38Z"}, "message": "Accept Copy, Send, Const, Owned, as kind bounds", "tree": {"sha": "6278ebff80e0c1f514c68c41dc49faac33cfa2ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6278ebff80e0c1f514c68c41dc49faac33cfa2ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7681f9236168cfad661b0ad73798a2d54a941f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7681f9236168cfad661b0ad73798a2d54a941f1", "html_url": "https://github.com/rust-lang/rust/commit/f7681f9236168cfad661b0ad73798a2d54a941f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7681f9236168cfad661b0ad73798a2d54a941f1/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7fe903d882ba3206016442f2a743ba8369abf97", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7fe903d882ba3206016442f2a743ba8369abf97", "html_url": "https://github.com/rust-lang/rust/commit/e7fe903d882ba3206016442f2a743ba8369abf97"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "b1205c77fe8d5956974247a0d076a62aec6a97ce", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f7681f9236168cfad661b0ad73798a2d54a941f1/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7681f9236168cfad661b0ad73798a2d54a941f1/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f7681f9236168cfad661b0ad73798a2d54a941f1", "patch": "@@ -2262,6 +2262,30 @@ struct parser {\n                     push(bounds, bound_const);\n                 } else if self.eat_keyword(~\"owned\") {\n                     push(bounds, bound_owned);\n+                } else if is_ident(self.token) {\n+                    // XXX: temporary until kinds become traits\n+                    let maybe_bound = match self.token {\n+                      token::IDENT(sid, _) => {\n+                        match *self.id_to_str(sid) {\n+                          ~\"Send\" => Some(bound_send),\n+                          ~\"Copy\" => Some(bound_copy),\n+                          ~\"Const\" => Some(bound_const),\n+                          ~\"Owned\" => Some(bound_owned),\n+                          _ => None\n+                        }\n+                      }\n+                      _ => fail\n+                    };\n+\n+                    match maybe_bound {\n+                      Some(bound) => {\n+                        self.bump();\n+                        push(bounds, bound);\n+                      }\n+                      None => {\n+                        push(bounds, bound_trait(self.parse_ty(false)));\n+                      }\n+                    }\n                 } else {\n                     push(bounds, bound_trait(self.parse_ty(false)));\n                 }"}]}