{"sha": "4d50e7c7606efca32bd937a4c60772a616fdbc33", "node_id": "C_kwDOAAsO6NoAKDRkNTBlN2M3NjA2ZWZjYTMyYmQ5MzdhNGM2MDc3MmE2MTZmZGJjMzM", "commit": {"author": {"name": "mujpao", "email": "mujpao@gmail.com", "date": "2021-11-02T06:13:30Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-11-06T01:40:49Z"}, "message": "Put empty trait braces on same line if possible", "tree": {"sha": "03487c8b756af01e3b4d19a371629f501759c654", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03487c8b756af01e3b4d19a371629f501759c654"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d50e7c7606efca32bd937a4c60772a616fdbc33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d50e7c7606efca32bd937a4c60772a616fdbc33", "html_url": "https://github.com/rust-lang/rust/commit/4d50e7c7606efca32bd937a4c60772a616fdbc33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d50e7c7606efca32bd937a4c60772a616fdbc33/comments", "author": {"login": "mujpao", "id": 13281891, "node_id": "MDQ6VXNlcjEzMjgxODkx", "avatar_url": "https://avatars.githubusercontent.com/u/13281891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mujpao", "html_url": "https://github.com/mujpao", "followers_url": "https://api.github.com/users/mujpao/followers", "following_url": "https://api.github.com/users/mujpao/following{/other_user}", "gists_url": "https://api.github.com/users/mujpao/gists{/gist_id}", "starred_url": "https://api.github.com/users/mujpao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mujpao/subscriptions", "organizations_url": "https://api.github.com/users/mujpao/orgs", "repos_url": "https://api.github.com/users/mujpao/repos", "events_url": "https://api.github.com/users/mujpao/events{/privacy}", "received_events_url": "https://api.github.com/users/mujpao/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9027db984be06dc99fd88264e9dbe84541547f08", "url": "https://api.github.com/repos/rust-lang/rust/commits/9027db984be06dc99fd88264e9dbe84541547f08", "html_url": "https://github.com/rust-lang/rust/commit/9027db984be06dc99fd88264e9dbe84541547f08"}], "stats": {"total": 166, "additions": 163, "deletions": 3}, "files": [{"sha": "e37a1b696584f8ed55c3d93c6624309ddf20f1da", "filename": "src/items.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4d50e7c7606efca32bd937a4c60772a616fdbc33/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d50e7c7606efca32bd937a4c60772a616fdbc33/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=4d50e7c7606efca32bd937a4c60772a616fdbc33", "patch": "@@ -1122,12 +1122,24 @@ pub(crate) fn format_trait(\n             }\n         }\n \n+        let block_span = mk_sp(generics.where_clause.span.hi(), item.span.hi());\n+        let snippet = context.snippet(block_span);\n+        let open_pos = snippet.find_uncommented(\"{\")? + 1;\n+\n         match context.config.brace_style() {\n             _ if last_line_contains_single_line_comment(&result)\n                 || last_line_width(&result) + 2 > context.budget(offset.width()) =>\n             {\n                 result.push_str(&offset.to_string_with_newline(context.config));\n             }\n+            _ if context.config.empty_item_single_line()\n+                && trait_items.is_empty()\n+                && !result.contains('\\n')\n+                && !contains_comment(&snippet[open_pos..]) =>\n+            {\n+                result.push_str(\" {}\");\n+                return Some(result);\n+            }\n             BraceStyle::AlwaysNextLine => {\n                 result.push_str(&offset.to_string_with_newline(context.config));\n             }\n@@ -1144,9 +1156,6 @@ pub(crate) fn format_trait(\n         }\n         result.push('{');\n \n-        let block_span = mk_sp(generics.where_clause.span.hi(), item.span.hi());\n-        let snippet = context.snippet(block_span);\n-        let open_pos = snippet.find_uncommented(\"{\")? + 1;\n         let outer_indent_str = offset.block_only().to_string_with_newline(context.config);\n \n         if !trait_items.is_empty() || contains_comment(&snippet[open_pos..]) {"}, {"sha": "20c5bc83b466a0fe3b64130c219d657cae76fe33", "filename": "tests/source/empty-item-single-line-false.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/4d50e7c7606efca32bd937a4c60772a616fdbc33/tests%2Fsource%2Fempty-item-single-line-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d50e7c7606efca32bd937a4c60772a616fdbc33/tests%2Fsource%2Fempty-item-single-line-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fempty-item-single-line-false.rs?ref=4d50e7c7606efca32bd937a4c60772a616fdbc33", "patch": "@@ -0,0 +1,46 @@\n+// rustfmt-brace_style: AlwaysNextLine\n+// rustfmt-empty_item_single_line: false\n+\n+fn function()\n+{\n+\n+}\n+\n+struct Struct\n+{\n+\n+}\n+\n+enum Enum\n+{\n+\n+}\n+\n+trait Trait\n+{\n+\n+}\n+\n+impl<T> Trait for T\n+{\n+\n+}\n+\n+trait Trait2<T>\n+where\n+    T: Copy + Display + Write + Read + FromStr, {}\n+\n+trait Trait3<T>\n+where\n+    T: Something\n+        + SomethingElse\n+        + Sync\n+        + Send\n+        + Display\n+        + Debug\n+        + Copy\n+        + Hash\n+        + Debug\n+        + Display\n+        + Write\n+        + Read, {}"}, {"sha": "0fb6405120aa7c5d7205c3bd6b126383ac36d1c2", "filename": "tests/source/item-brace-style-always-next-line.rs", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/4d50e7c7606efca32bd937a4c60772a616fdbc33/tests%2Fsource%2Fitem-brace-style-always-next-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d50e7c7606efca32bd937a4c60772a616fdbc33/tests%2Fsource%2Fitem-brace-style-always-next-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fitem-brace-style-always-next-line.rs?ref=4d50e7c7606efca32bd937a4c60772a616fdbc33", "patch": "@@ -27,3 +27,38 @@ mod M {\n \n     struct D<T> where T: Copy {}\n }\n+\n+\n+fn function()\n+{\n+\n+}\n+\n+trait Trait\n+{\n+\n+}\n+\n+impl<T> Trait for T\n+{\n+\n+}\n+\n+trait Trait2<T>\n+where\n+    T: Copy + Display + Write + Read + FromStr, {}\n+\n+trait Trait3<T>\n+where\n+    T: Something\n+        + SomethingElse\n+        + Sync\n+        + Send\n+        + Display\n+        + Debug\n+        + Copy\n+        + Hash\n+        + Debug\n+        + Display\n+        + Write\n+        + Read, {}"}, {"sha": "bf7f70e7c4321793cf27127efb91892eb67fbb36", "filename": "tests/target/empty-item-single-line-false.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/4d50e7c7606efca32bd937a4c60772a616fdbc33/tests%2Ftarget%2Fempty-item-single-line-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d50e7c7606efca32bd937a4c60772a616fdbc33/tests%2Ftarget%2Fempty-item-single-line-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fempty-item-single-line-false.rs?ref=4d50e7c7606efca32bd937a4c60772a616fdbc33", "patch": "@@ -0,0 +1,41 @@\n+// rustfmt-brace_style: AlwaysNextLine\n+// rustfmt-empty_item_single_line: false\n+\n+fn function()\n+{\n+}\n+\n+struct Struct {}\n+\n+enum Enum {}\n+\n+trait Trait\n+{\n+}\n+\n+impl<T> Trait for T\n+{\n+}\n+\n+trait Trait2<T>\n+where\n+    T: Copy + Display + Write + Read + FromStr,\n+{\n+}\n+\n+trait Trait3<T>\n+where\n+    T: Something\n+        + SomethingElse\n+        + Sync\n+        + Send\n+        + Display\n+        + Debug\n+        + Copy\n+        + Hash\n+        + Debug\n+        + Display\n+        + Write\n+        + Read,\n+{\n+}"}, {"sha": "4935fac04f1111cec322b7443c9f7b58c2677eef", "filename": "tests/target/item-brace-style-always-next-line.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4d50e7c7606efca32bd937a4c60772a616fdbc33/tests%2Ftarget%2Fitem-brace-style-always-next-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d50e7c7606efca32bd937a4c60772a616fdbc33/tests%2Ftarget%2Fitem-brace-style-always-next-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fitem-brace-style-always-next-line.rs?ref=4d50e7c7606efca32bd937a4c60772a616fdbc33", "patch": "@@ -40,3 +40,32 @@ mod M\n     where\n         T: Copy, {}\n }\n+\n+fn function() {}\n+\n+trait Trait {}\n+\n+impl<T> Trait for T {}\n+\n+trait Trait2<T>\n+where\n+    T: Copy + Display + Write + Read + FromStr,\n+{\n+}\n+\n+trait Trait3<T>\n+where\n+    T: Something\n+        + SomethingElse\n+        + Sync\n+        + Send\n+        + Display\n+        + Debug\n+        + Copy\n+        + Hash\n+        + Debug\n+        + Display\n+        + Write\n+        + Read,\n+{\n+}"}]}