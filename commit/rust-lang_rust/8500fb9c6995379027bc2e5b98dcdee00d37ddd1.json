{"sha": "8500fb9c6995379027bc2e5b98dcdee00d37ddd1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1MDBmYjljNjk5NTM3OTAyN2JjMmU1Yjk4ZGNkZWUwMGQzN2RkZDE=", "commit": {"author": {"name": "David Teller", "email": "D.O.Teller@gmail.com", "date": "2017-12-07T15:04:59Z"}, "committer": {"name": "David Teller", "email": "D.O.Teller@gmail.com", "date": "2017-12-07T15:04:59Z"}, "message": "Issue #46555 - Making IndexVec Send if its contents are Send", "tree": {"sha": "be57d3b9c59e3bf2d6a8a8323f4878de0fc7ed30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be57d3b9c59e3bf2d6a8a8323f4878de0fc7ed30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8500fb9c6995379027bc2e5b98dcdee00d37ddd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8500fb9c6995379027bc2e5b98dcdee00d37ddd1", "html_url": "https://github.com/rust-lang/rust/commit/8500fb9c6995379027bc2e5b98dcdee00d37ddd1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8500fb9c6995379027bc2e5b98dcdee00d37ddd1/comments", "author": {"login": "Yoric", "id": 10190, "node_id": "MDQ6VXNlcjEwMTkw", "avatar_url": "https://avatars.githubusercontent.com/u/10190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yoric", "html_url": "https://github.com/Yoric", "followers_url": "https://api.github.com/users/Yoric/followers", "following_url": "https://api.github.com/users/Yoric/following{/other_user}", "gists_url": "https://api.github.com/users/Yoric/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yoric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yoric/subscriptions", "organizations_url": "https://api.github.com/users/Yoric/orgs", "repos_url": "https://api.github.com/users/Yoric/repos", "events_url": "https://api.github.com/users/Yoric/events{/privacy}", "received_events_url": "https://api.github.com/users/Yoric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Yoric", "id": 10190, "node_id": "MDQ6VXNlcjEwMTkw", "avatar_url": "https://avatars.githubusercontent.com/u/10190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yoric", "html_url": "https://github.com/Yoric", "followers_url": "https://api.github.com/users/Yoric/followers", "following_url": "https://api.github.com/users/Yoric/following{/other_user}", "gists_url": "https://api.github.com/users/Yoric/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yoric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yoric/subscriptions", "organizations_url": "https://api.github.com/users/Yoric/orgs", "repos_url": "https://api.github.com/users/Yoric/repos", "events_url": "https://api.github.com/users/Yoric/events{/privacy}", "received_events_url": "https://api.github.com/users/Yoric/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1364a65c0e064ee12aea8d58aceb403b8200682", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1364a65c0e064ee12aea8d58aceb403b8200682", "html_url": "https://github.com/rust-lang/rust/commit/d1364a65c0e064ee12aea8d58aceb403b8200682"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "19528a1403828db66ebfec1a1f6bbe109d53dab0", "filename": "src/librustc_data_structures/indexed_vec.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8500fb9c6995379027bc2e5b98dcdee00d37ddd1/src%2Flibrustc_data_structures%2Findexed_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8500fb9c6995379027bc2e5b98dcdee00d37ddd1/src%2Flibrustc_data_structures%2Findexed_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Findexed_vec.rs?ref=8500fb9c6995379027bc2e5b98dcdee00d37ddd1", "patch": "@@ -330,6 +330,10 @@ pub struct IndexVec<I: Idx, T> {\n     _marker: PhantomData<Fn(&I)>\n }\n \n+// Whether `IndexVec` is `Send` depends only on the data,\n+// not the phantom data.\n+unsafe impl<I: Idx, T> Send for IndexVec<I, T> where T: Send {}\n+\n impl<I: Idx, T: serialize::Encodable> serialize::Encodable for IndexVec<I, T> {\n     fn encode<S: serialize::Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n         serialize::Encodable::encode(&self.raw, s)"}]}