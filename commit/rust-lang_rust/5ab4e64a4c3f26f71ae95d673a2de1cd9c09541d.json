{"sha": "5ab4e64a4c3f26f71ae95d673a2de1cd9c09541d", "node_id": "C_kwDOAAsO6NoAKDVhYjRlNjRhNGMzZjI2ZjcxYWU5NWQ2NzNhMmRlMWNkOWMwOTU0MWQ", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-04-06T20:17:12Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-04-06T20:46:30Z"}, "message": "fix: unify types in `infer_expr_coerce_never()`", "tree": {"sha": "12859e75770ead6e5f0013774cdcdd02b1c9d507", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12859e75770ead6e5f0013774cdcdd02b1c9d507"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ab4e64a4c3f26f71ae95d673a2de1cd9c09541d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmQvL6YACgkQ4laYqTBY\nYXHzTg//RqThMj0j8b6cJYpCtGlHQurCcX56Wp6Y7Iyk8rwFSwyx5d4T/8P7Ty+Z\nI9+D0IQCYP9+QdUEUOlbicj1U4RCxF8riDBFA7Z7D+CQ6ZsEymVLf9TecYhdSJYx\nSJNnwfpHa2r8ZsGUN1bkwmoBdNMoe+JwVcOs4cB+wP4TyuN0Onjbn8PGw6ru+QkF\nY0yFMp7MW1/v4PKNGhygWxVBe78hbaMjuvCSXJdKI57CRKEaVH/sGfY6KKaxXLTI\nt4PcEKu0ABgUxYh5KEqtS3xmcw3nmGA9swLG8Jcx9/xpCjdLWUGcqTHkgNLPGJqG\nozOFhgGmSaYfgv1vdKfoR/oRJct5U0sXD8/eoZq4R0ykXxRHkDCnPnp5h9hh2xfb\nIZz5NEzZ2erqzlHhLv2javl88iTFLpL3j74HrsXXJl5nlR5sm33QFEdd/Jb8V5gE\nr2ZSLxMyaTMAAd+cWbw49dno1Qsm0jESVtdSwecd3xBXVlzDLPU9zuXB1EhUaO58\nkpB8cU64ByKQC5zloL16wYmFqFdhSKsSNOK0aGPhE5idV8sCl696VajGsKwg29zE\nMiFy7pN1rW3U2ZHj4llXxanAqujzb4R7/5ZfGayghGW5yJf/xQoCjlD26sEmsJL8\nbBn9sNornlgBfi0KBqtOj75rb+9cNLu5ekkdimKt0e2uBiPAaz0=\n=jpz/\n-----END PGP SIGNATURE-----", "payload": "tree 12859e75770ead6e5f0013774cdcdd02b1c9d507\nparent 625a6f37dec0629e8777a3550f5381618c819a3c\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1680812232 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1680813990 +0900\n\nfix: unify types in `infer_expr_coerce_never()`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ab4e64a4c3f26f71ae95d673a2de1cd9c09541d", "html_url": "https://github.com/rust-lang/rust/commit/5ab4e64a4c3f26f71ae95d673a2de1cd9c09541d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ab4e64a4c3f26f71ae95d673a2de1cd9c09541d/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "625a6f37dec0629e8777a3550f5381618c819a3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/625a6f37dec0629e8777a3550f5381618c819a3c", "html_url": "https://github.com/rust-lang/rust/commit/625a6f37dec0629e8777a3550f5381618c819a3c"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "d6a205e6086f5e361985fd5015e37c02d9287ef9", "filename": "crates/hir-ty/src/infer/expr.rs", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5ab4e64a4c3f26f71ae95d673a2de1cd9c09541d/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ab4e64a4c3f26f71ae95d673a2de1cd9c09541d/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs?ref=5ab4e64a4c3f26f71ae95d673a2de1cd9c09541d", "patch": "@@ -86,10 +86,10 @@ impl<'a> InferenceContext<'a> {\n         }\n     }\n \n-    pub(super) fn infer_expr_coerce_never(&mut self, expr: ExprId, expected: &Expectation) -> Ty {\n+    fn infer_expr_coerce_never(&mut self, expr: ExprId, expected: &Expectation) -> Ty {\n         let ty = self.infer_expr_inner(expr, expected);\n         // While we don't allow *arbitrary* coercions here, we *do* allow\n-        // coercions from ! to `expected`.\n+        // coercions from `!` to `expected`.\n         if ty.is_never() {\n             if let Some(adjustments) = self.result.expr_adjustments.get(&expr) {\n                 return if let [Adjustment { kind: Adjust::NeverToAny, target }] = &**adjustments {\n@@ -99,13 +99,22 @@ impl<'a> InferenceContext<'a> {\n                 };\n             }\n \n-            let adj_ty = self.table.new_type_var();\n-            self.write_expr_adj(\n-                expr,\n-                vec![Adjustment { kind: Adjust::NeverToAny, target: adj_ty.clone() }],\n-            );\n-            adj_ty\n+            if let Some(target) = expected.only_has_type(&mut self.table) {\n+                self.coerce(Some(expr), &ty, &target)\n+                    .expect(\"never-to-any coercion should always succeed\")\n+            } else {\n+                ty\n+            }\n         } else {\n+            if let Some(expected_ty) = expected.only_has_type(&mut self.table) {\n+                let could_unify = self.unify(&ty, &expected_ty);\n+                if !could_unify {\n+                    self.result.type_mismatches.insert(\n+                        expr.into(),\n+                        TypeMismatch { expected: expected_ty, actual: ty.clone() },\n+                    );\n+                }\n+            }\n             ty\n         }\n     }"}, {"sha": "be67329fee4417189c42474436427f0151723c74", "filename": "crates/hir-ty/src/tests/patterns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ab4e64a4c3f26f71ae95d673a2de1cd9c09541d/crates%2Fhir-ty%2Fsrc%2Ftests%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ab4e64a4c3f26f71ae95d673a2de1cd9c09541d/crates%2Fhir-ty%2Fsrc%2Ftests%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Ftests%2Fpatterns.rs?ref=5ab4e64a4c3f26f71ae95d673a2de1cd9c09541d", "patch": "@@ -476,7 +476,7 @@ fn infer_adt_pattern() {\n             183..184 'x': usize\n             190..191 'x': usize\n             201..205 'E::B': E\n-            209..212 'foo': {unknown}\n+            209..212 'foo': bool\n             216..217 '1': usize\n             227..231 'E::B': E\n             235..237 '10': usize"}, {"sha": "74c7e3efc058fe53e019d029715ab6e00cb2b7bc", "filename": "crates/hir-ty/src/tests/regression.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5ab4e64a4c3f26f71ae95d673a2de1cd9c09541d/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ab4e64a4c3f26f71ae95d673a2de1cd9c09541d/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs?ref=5ab4e64a4c3f26f71ae95d673a2de1cd9c09541d", "patch": "@@ -270,7 +270,7 @@ fn infer_std_crash_5() {\n             61..320 '{     ...     }': ()\n             75..79 'name': &{unknown}\n             82..166 'if doe...     }': &{unknown}\n-            85..98 'doesnt_matter': {unknown}\n+            85..98 'doesnt_matter': bool\n             99..128 '{     ...     }': &{unknown}\n             113..118 'first': &{unknown}\n             134..166 '{     ...     }': &{unknown}\n@@ -279,7 +279,7 @@ fn infer_std_crash_5() {\n             181..188 'content': &{unknown}\n             191..313 'if ICE...     }': &{unknown}\n             194..231 'ICE_RE..._VALUE': {unknown}\n-            194..247 'ICE_RE...&name)': {unknown}\n+            194..247 'ICE_RE...&name)': bool\n             241..246 '&name': &&{unknown}\n             242..246 'name': &{unknown}\n             248..276 '{     ...     }': &{unknown}"}]}