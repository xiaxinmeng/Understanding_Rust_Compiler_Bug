{"sha": "49d60b851cbff5339df53fde64a2accd993c4f1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ZDYwYjg1MWNiZmY1MzM5ZGY1M2ZkZTY0YTJhY2NkOTkzYzRmMWE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-04-22T03:58:34Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-04-22T03:58:34Z"}, "message": "str: Inline `only_ascii` in string iterators.\n\nWas killing performance of selector matching in Servo.", "tree": {"sha": "06cf6784de423fd49911d72991b3d1a5a9ea7ec8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06cf6784de423fd49911d72991b3d1a5a9ea7ec8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49d60b851cbff5339df53fde64a2accd993c4f1a", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49d60b851cbff5339df53fde64a2accd993c4f1a", "html_url": "https://github.com/rust-lang/rust/commit/49d60b851cbff5339df53fde64a2accd993c4f1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49d60b851cbff5339df53fde64a2accd993c4f1a/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "960bf8ce66d4d3563e1a03f2dbd161857ac0f398", "url": "https://api.github.com/repos/rust-lang/rust/commits/960bf8ce66d4d3563e1a03f2dbd161857ac0f398", "html_url": "https://github.com/rust-lang/rust/commit/960bf8ce66d4d3563e1a03f2dbd161857ac0f398"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "f537022cdf6dc4734a5db7757502a4be7e12121b", "filename": "src/libstd/str.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49d60b851cbff5339df53fde64a2accd993c4f1a/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d60b851cbff5339df53fde64a2accd993c4f1a/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=49d60b851cbff5339df53fde64a2accd993c4f1a", "patch": "@@ -227,20 +227,23 @@ impl CharEq for char {\n     #[inline]\n     fn matches(&self, c: char) -> bool { *self == c }\n \n+    #[inline]\n     fn only_ascii(&self) -> bool { (*self as uint) < 128 }\n }\n \n impl<'a> CharEq for |char|: 'a -> bool {\n     #[inline]\n     fn matches(&self, c: char) -> bool { (*self)(c) }\n \n+    #[inline]\n     fn only_ascii(&self) -> bool { false }\n }\n \n impl CharEq for extern \"Rust\" fn(char) -> bool {\n     #[inline]\n     fn matches(&self, c: char) -> bool { (*self)(c) }\n \n+    #[inline]\n     fn only_ascii(&self) -> bool { false }\n }\n \n@@ -250,6 +253,7 @@ impl<'a, C: CharEq> CharEq for &'a [C] {\n         self.iter().any(|m| m.matches(c))\n     }\n \n+    #[inline]\n     fn only_ascii(&self) -> bool {\n         self.iter().all(|m| m.only_ascii())\n     }"}]}