{"sha": "00ca4d0dd3f9e8432420c234e44e21a3502db382", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwY2E0ZDBkZDNmOWU4NDMyNDIwYzIzNGU0NGUyMWEzNTAyZGIzODI=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-16T15:26:08Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-16T15:26:08Z"}, "message": "Update non_fmt_panics test.", "tree": {"sha": "3d9b1a625995161f5cdf63f31369a90d44de3a56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d9b1a625995161f5cdf63f31369a90d44de3a56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00ca4d0dd3f9e8432420c234e44e21a3502db382", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00ca4d0dd3f9e8432420c234e44e21a3502db382", "html_url": "https://github.com/rust-lang/rust/commit/00ca4d0dd3f9e8432420c234e44e21a3502db382", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00ca4d0dd3f9e8432420c234e44e21a3502db382/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a313250a4b34effd1f3a9b9adaf01fe01989934", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a313250a4b34effd1f3a9b9adaf01fe01989934", "html_url": "https://github.com/rust-lang/rust/commit/0a313250a4b34effd1f3a9b9adaf01fe01989934"}], "stats": {"total": 83, "additions": 68, "deletions": 15}, "files": [{"sha": "0686b08eaad92808975261f5de129a9230af920e", "filename": "src/test/ui/non-fmt-panic.fixed", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00ca4d0dd3f9e8432420c234e44e21a3502db382/src%2Ftest%2Fui%2Fnon-fmt-panic.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/00ca4d0dd3f9e8432420c234e44e21a3502db382/src%2Ftest%2Fui%2Fnon-fmt-panic.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon-fmt-panic.fixed?ref=00ca4d0dd3f9e8432420c234e44e21a3502db382", "patch": "@@ -17,11 +17,16 @@ fn main() {\n     //~^ WARN panic message contains unused formatting placeholders\n     assert!(false, \"{}\", S);\n     //~^ WARN panic message is not a string literal\n+    assert!(false, \"{}\", 123);\n+    //~^ WARN panic message is not a string literal\n+    assert!(false, \"{:?}\", Some(123));\n+    //~^ WARN panic message is not a string literal\n     debug_assert!(false, \"{}\", \"{{}} bla\"); //~ WARN panic message contains braces\n     panic!(\"{}\", C); //~ WARN panic message is not a string literal\n     panic!(\"{}\", S); //~ WARN panic message is not a string literal\n     std::panic::panic_any(123); //~ WARN panic message is not a string literal\n     core::panic!(\"{}\", &*\"abc\"); //~ WARN panic message is not a string literal\n+    std::panic::panic_any(Some(123)); //~ WARN panic message is not a string literal\n     panic!(\"{}\", concat!(\"{\", \"}\")); //~ WARN panic message contains an unused formatting placeholder\n     panic!(\"{}\", concat!(\"{\", \"{\")); //~ WARN panic message contains braces\n "}, {"sha": "e086e2dfdbd6305a4349c0afa4bb71cf97c1cc16", "filename": "src/test/ui/non-fmt-panic.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00ca4d0dd3f9e8432420c234e44e21a3502db382/src%2Ftest%2Fui%2Fnon-fmt-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00ca4d0dd3f9e8432420c234e44e21a3502db382/src%2Ftest%2Fui%2Fnon-fmt-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon-fmt-panic.rs?ref=00ca4d0dd3f9e8432420c234e44e21a3502db382", "patch": "@@ -17,11 +17,16 @@ fn main() {\n     //~^ WARN panic message contains unused formatting placeholders\n     assert!(false, S);\n     //~^ WARN panic message is not a string literal\n+    assert!(false, 123);\n+    //~^ WARN panic message is not a string literal\n+    assert!(false, Some(123));\n+    //~^ WARN panic message is not a string literal\n     debug_assert!(false, \"{{}} bla\"); //~ WARN panic message contains braces\n     panic!(C); //~ WARN panic message is not a string literal\n     panic!(S); //~ WARN panic message is not a string literal\n     std::panic!(123); //~ WARN panic message is not a string literal\n     core::panic!(&*\"abc\"); //~ WARN panic message is not a string literal\n+    panic!(Some(123)); //~ WARN panic message is not a string literal\n     panic!(concat!(\"{\", \"}\")); //~ WARN panic message contains an unused formatting placeholder\n     panic!(concat!(\"{\", \"{\")); //~ WARN panic message contains braces\n "}, {"sha": "5506ead4c7b8665936a3248892201accc516c28a", "filename": "src/test/ui/non-fmt-panic.stderr", "status": "modified", "additions": 58, "deletions": 15, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/00ca4d0dd3f9e8432420c234e44e21a3502db382/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00ca4d0dd3f9e8432420c234e44e21a3502db382/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr?ref=00ca4d0dd3f9e8432420c234e44e21a3502db382", "patch": "@@ -68,8 +68,34 @@ help: add a \"{}\" format string to Display the message\n LL |     assert!(false, \"{}\", S);\n    |                    +++++\n \n+warning: panic message is not a string literal\n+  --> $DIR/non-fmt-panic.rs:20:20\n+   |\n+LL |     assert!(false, 123);\n+   |                    ^^^\n+   |\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n+help: add a \"{}\" format string to Display the message\n+   |\n+LL |     assert!(false, \"{}\", 123);\n+   |                    +++++\n+\n+warning: panic message is not a string literal\n+  --> $DIR/non-fmt-panic.rs:22:20\n+   |\n+LL |     assert!(false, Some(123));\n+   |                    ^^^^^^^^^\n+   |\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n+help: add a \"{:?}\" format string to use the Debug implementation of `Option<i32>`\n+   |\n+LL |     assert!(false, \"{:?}\", Some(123));\n+   |                    +++++++\n+\n warning: panic message contains braces\n-  --> $DIR/non-fmt-panic.rs:20:27\n+  --> $DIR/non-fmt-panic.rs:24:27\n    |\n LL |     debug_assert!(false, \"{{}} bla\");\n    |                           ^^^^\n@@ -81,7 +107,7 @@ LL |     debug_assert!(false, \"{}\", \"{{}} bla\");\n    |                          +++++\n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:21:12\n+  --> $DIR/non-fmt-panic.rs:25:12\n    |\n LL |     panic!(C);\n    |            ^\n@@ -94,7 +120,7 @@ LL |     panic!(\"{}\", C);\n    |            +++++\n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:22:12\n+  --> $DIR/non-fmt-panic.rs:26:12\n    |\n LL |     panic!(S);\n    |            ^\n@@ -107,7 +133,7 @@ LL |     panic!(\"{}\", S);\n    |            +++++\n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:23:17\n+  --> $DIR/non-fmt-panic.rs:27:17\n    |\n LL |     std::panic!(123);\n    |                 ^^^\n@@ -124,7 +150,7 @@ LL |     std::panic::panic_any(123);\n    |     ~~~~~~~~~~~~~~~~~~~~~\n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:24:18\n+  --> $DIR/non-fmt-panic.rs:28:18\n    |\n LL |     core::panic!(&*\"abc\");\n    |                  ^^^^^^^\n@@ -136,8 +162,25 @@ help: add a \"{}\" format string to Display the message\n LL |     core::panic!(\"{}\", &*\"abc\");\n    |                  +++++\n \n+warning: panic message is not a string literal\n+  --> $DIR/non-fmt-panic.rs:29:12\n+   |\n+LL |     panic!(Some(123));\n+   |            ^^^^^^^^^\n+   |\n+   = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\n+help: add a \"{:?}\" format string to use the Debug implementation of `Option<i32>`\n+   |\n+LL |     panic!(\"{:?}\", Some(123));\n+   |            +++++++\n+help: or use std::panic::panic_any instead\n+   |\n+LL |     std::panic::panic_any(Some(123));\n+   |     ~~~~~~~~~~~~~~~~~~~~~\n+\n warning: panic message contains an unused formatting placeholder\n-  --> $DIR/non-fmt-panic.rs:25:12\n+  --> $DIR/non-fmt-panic.rs:30:12\n    |\n LL |     panic!(concat!(\"{\", \"}\"));\n    |            ^^^^^^^^^^^^^^^^^\n@@ -153,7 +196,7 @@ LL |     panic!(\"{}\", concat!(\"{\", \"}\"));\n    |            +++++\n \n warning: panic message contains braces\n-  --> $DIR/non-fmt-panic.rs:26:5\n+  --> $DIR/non-fmt-panic.rs:31:5\n    |\n LL |     panic!(concat!(\"{\", \"{\"));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -165,15 +208,15 @@ LL |     panic!(\"{}\", concat!(\"{\", \"{\"));\n    |            +++++\n \n warning: panic message contains an unused formatting placeholder\n-  --> $DIR/non-fmt-panic.rs:28:37\n+  --> $DIR/non-fmt-panic.rs:33:37\n    |\n LL |     fancy_panic::fancy_panic!(\"test {} 123\");\n    |                                     ^^\n    |\n    = note: this message is not used as a format string when given without arguments, but will be in Rust 2021\n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:38:12\n+  --> $DIR/non-fmt-panic.rs:43:12\n    |\n LL |     panic!(a!());\n    |            ^^^^\n@@ -190,7 +233,7 @@ LL |     std::panic::panic_any(a!());\n    |     ~~~~~~~~~~~~~~~~~~~~~\n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:40:12\n+  --> $DIR/non-fmt-panic.rs:45:12\n    |\n LL |     panic!(format!(\"{}\", 1));\n    |            ^^^^^^^^^^^^^^^^\n@@ -205,7 +248,7 @@ LL +     panic!(\"{}\", 1);\n    | \n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:41:20\n+  --> $DIR/non-fmt-panic.rs:46:20\n    |\n LL |     assert!(false, format!(\"{}\", 1));\n    |                    ^^^^^^^^^^^^^^^^\n@@ -220,7 +263,7 @@ LL +     assert!(false, \"{}\", 1);\n    | \n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:42:26\n+  --> $DIR/non-fmt-panic.rs:47:26\n    |\n LL |     debug_assert!(false, format!(\"{}\", 1));\n    |                          ^^^^^^^^^^^^^^^^\n@@ -235,7 +278,7 @@ LL +     debug_assert!(false, \"{}\", 1);\n    | \n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:44:12\n+  --> $DIR/non-fmt-panic.rs:49:12\n    |\n LL |     panic![123];\n    |            ^^^\n@@ -252,7 +295,7 @@ LL |     std::panic::panic_any(123);\n    |     ~~~~~~~~~~~~~~~~~~~~~~   ~\n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:45:12\n+  --> $DIR/non-fmt-panic.rs:50:12\n    |\n LL |     panic!{123};\n    |            ^^^\n@@ -268,5 +311,5 @@ help: or use std::panic::panic_any instead\n LL |     std::panic::panic_any(123);\n    |     ~~~~~~~~~~~~~~~~~~~~~~   ~\n \n-warning: 19 warnings emitted\n+warning: 22 warnings emitted\n "}]}