{"sha": "a0a769310117cbaafad3f2c50dd4b6d7dc83719e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwYTc2OTMxMDExN2NiYWFmYWQzZjJjNTBkZDRiNmQ3ZGM4MzcxOWU=", "commit": {"author": {"name": "Ivan Petkov", "email": "ivanppetkov@gmail.com", "date": "2014-04-04T06:03:01Z"}, "committer": {"name": "Ivan Petkov", "email": "ivanppetkov@gmail.com", "date": "2014-04-04T06:07:00Z"}, "message": "rustdoc: Fix reporting of ignored tests\n\nlibrustdoc: instead of skipping ignored tests, pass them to libtest\nso it can report them as such.  If a test is marked as `notrust`,\nhowever, it will not show up in the final report.", "tree": {"sha": "248668781b843e13b3649130f0c65f2bb120581c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/248668781b843e13b3649130f0c65f2bb120581c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0a769310117cbaafad3f2c50dd4b6d7dc83719e", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0a769310117cbaafad3f2c50dd4b6d7dc83719e", "html_url": "https://github.com/rust-lang/rust/commit/a0a769310117cbaafad3f2c50dd4b6d7dc83719e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0a769310117cbaafad3f2c50dd4b6d7dc83719e/comments", "author": {"login": "ipetkov", "id": 1638690, "node_id": "MDQ6VXNlcjE2Mzg2OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1638690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ipetkov", "html_url": "https://github.com/ipetkov", "followers_url": "https://api.github.com/users/ipetkov/followers", "following_url": "https://api.github.com/users/ipetkov/following{/other_user}", "gists_url": "https://api.github.com/users/ipetkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ipetkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ipetkov/subscriptions", "organizations_url": "https://api.github.com/users/ipetkov/orgs", "repos_url": "https://api.github.com/users/ipetkov/repos", "events_url": "https://api.github.com/users/ipetkov/events{/privacy}", "received_events_url": "https://api.github.com/users/ipetkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ipetkov", "id": 1638690, "node_id": "MDQ6VXNlcjE2Mzg2OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1638690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ipetkov", "html_url": "https://github.com/ipetkov", "followers_url": "https://api.github.com/users/ipetkov/followers", "following_url": "https://api.github.com/users/ipetkov/following{/other_user}", "gists_url": "https://api.github.com/users/ipetkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ipetkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ipetkov/subscriptions", "organizations_url": "https://api.github.com/users/ipetkov/orgs", "repos_url": "https://api.github.com/users/ipetkov/repos", "events_url": "https://api.github.com/users/ipetkov/events{/privacy}", "received_events_url": "https://api.github.com/users/ipetkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a2d0dce87d8d2d77a1266a3b255b04651f36fe2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a2d0dce87d8d2d77a1266a3b255b04651f36fe2", "html_url": "https://github.com/rust-lang/rust/commit/2a2d0dce87d8d2d77a1266a3b255b04651f36fe2"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "e6fb5629eaf317bed75749962314b4520d3e7f7c", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a0a769310117cbaafad3f2c50dd4b6d7dc83719e/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0a769310117cbaafad3f2c50dd4b6d7dc83719e/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=a0a769310117cbaafad3f2c50dd4b6d7dc83719e", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -268,24 +268,25 @@ pub fn find_testable_code(doc: &str, tests: &mut ::test::Collector) {\n     extern fn block(_ob: *buf, text: *buf, lang: *buf, opaque: *libc::c_void) {\n         unsafe {\n             if text.is_null() { return }\n-            let (should_fail, no_run, ignore) = if lang.is_null() {\n-                (false, false, false)\n+            let (should_fail, no_run, ignore, notrust) = if lang.is_null() {\n+                (false, false, false, false)\n             } else {\n                 slice::raw::buf_as_slice((*lang).data,\n                                        (*lang).size as uint, |lang| {\n                     let s = str::from_utf8(lang).unwrap();\n                     (s.contains(\"should_fail\"),\n                      s.contains(\"no_run\"),\n-                     s.contains(\"ignore\") || s.contains(\"notrust\"))\n+                     s.contains(\"ignore\"),\n+                     s.contains(\"notrust\"))\n                 })\n             };\n-            if ignore { return }\n+            if notrust { return }\n             slice::raw::buf_as_slice((*text).data, (*text).size as uint, |text| {\n                 let tests = &mut *(opaque as *mut ::test::Collector);\n                 let text = str::from_utf8(text).unwrap();\n                 let mut lines = text.lines().map(|l| stripped_filtered_line(l).unwrap_or(l));\n                 let text = lines.collect::<~[&str]>().connect(\"\\n\");\n-                tests.add_test(text, should_fail, no_run);\n+                tests.add_test(text, should_fail, no_run, ignore);\n             })\n         }\n     }"}, {"sha": "3fda4b3b9e82d2d71c4bb73053629c36c28ba2bd", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a0a769310117cbaafad3f2c50dd4b6d7dc83719e/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0a769310117cbaafad3f2c50dd4b6d7dc83719e/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=a0a769310117cbaafad3f2c50dd4b6d7dc83719e", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -217,7 +217,7 @@ impl Collector {\n         }\n     }\n \n-    pub fn add_test(&mut self, test: ~str, should_fail: bool, no_run: bool) {\n+    pub fn add_test(&mut self, test: ~str, should_fail: bool, no_run: bool, should_ignore: bool) {\n         let name = if self.use_headers {\n             let s = self.current_header.as_ref().map(|s| s.as_slice()).unwrap_or(\"\");\n             format!(\"{}_{}\", s, self.cnt)\n@@ -232,7 +232,7 @@ impl Collector {\n         self.tests.push(testing::TestDescAndFn {\n             desc: testing::TestDesc {\n                 name: testing::DynTestName(name),\n-                ignore: false,\n+                ignore: should_ignore,\n                 should_fail: false, // compiler failures are test failures\n             },\n             testfn: testing::DynTestFn(proc() {"}]}