{"sha": "63ee1cd846b92eb3a124ec345d4889bdb5bca8e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzZWUxY2Q4NDZiOTJlYjNhMTI0ZWMzNDVkNDg4OWJkYjViY2E4ZTM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-01-25T23:43:57Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-02-08T09:53:09Z"}, "message": "Improve output a bit in case of error", "tree": {"sha": "220bfb7b8ecfe962de5deb54767aaa9a5cb118fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/220bfb7b8ecfe962de5deb54767aaa9a5cb118fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63ee1cd846b92eb3a124ec345d4889bdb5bca8e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63ee1cd846b92eb3a124ec345d4889bdb5bca8e3", "html_url": "https://github.com/rust-lang/rust/commit/63ee1cd846b92eb3a124ec345d4889bdb5bca8e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63ee1cd846b92eb3a124ec345d4889bdb5bca8e3/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ee69818f728df8c37981137e4a5427bb341f845", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ee69818f728df8c37981137e4a5427bb341f845", "html_url": "https://github.com/rust-lang/rust/commit/9ee69818f728df8c37981137e4a5427bb341f845"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "c08cff988924d73168bb5700d4fd5d7a8266dd8f", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/63ee1cd846b92eb3a124ec345d4889bdb5bca8e3/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63ee1cd846b92eb3a124ec345d4889bdb5bca8e3/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=63ee1cd846b92eb3a124ec345d4889bdb5bca8e3", "patch": "@@ -330,11 +330,13 @@ pub fn main_args(args: &[String]) -> isize {\n         println!(\"rustdoc: [theme-checker] Starting tests!\");\n         for theme_file in to_check.iter() {\n             print!(\" - Checking \\\"{}\\\"...\", theme_file);\n-            let differences = theme::test_theme_against(theme_file, &pathes);\n-            if !differences.is_empty() {\n+            let (success, differences) = theme::test_theme_against(theme_file, &pathes);\n+            if !differences.is_empty() || !success {\n                 eprintln!(\" FAILED\");\n                 errors += 1;\n-                eprintln!(\"{}\", differences.join(\"\\n\"));\n+                if !differences.is_empty() {\n+                    eprintln!(\"{}\", differences.join(\"\\n\"));\n+                }\n             } else {\n                 println!(\" OK\");\n             }\n@@ -408,7 +410,8 @@ pub fn main_args(args: &[String]) -> isize {\n                 eprintln!(\"rustdoc: option --themes arguments must all be files\");\n                 return 1;\n             }\n-            if !theme::test_theme_against(&theme_file, &pathes).is_empty() {\n+            let (success, ret) = theme::test_theme_against(&theme_file, &pathes);\n+            if !success || !ret.is_empty() {\n                 eprintln!(\"rustdoc: invalid theme: \\\"{}\\\"\", theme_s);\n                 eprintln!(\"         Check what's wrong with the \\\"theme-checker\\\" option\");\n                 return 1;"}, {"sha": "fe7538780412d1a920af32055614cb8bd159b3a5", "filename": "src/librustdoc/theme.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/63ee1cd846b92eb3a124ec345d4889bdb5bca8e3/src%2Flibrustdoc%2Ftheme.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63ee1cd846b92eb3a124ec345d4889bdb5bca8e3/src%2Flibrustdoc%2Ftheme.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftheme.rs?ref=63ee1cd846b92eb3a124ec345d4889bdb5bca8e3", "patch": "@@ -259,15 +259,15 @@ pub fn get_differences(against: &CssPath, other: &CssPath, v: &mut Vec<String>)\n     }\n }\n \n-pub fn test_theme_against<P: AsRef<Path>>(f: &P, against: &CssPath) -> Vec<String> {\n-    let mut file = try_something!(File::open(f), Vec::new());\n+pub fn test_theme_against<P: AsRef<Path>>(f: &P, against: &CssPath) -> (bool, Vec<String>) {\n+    let mut file = try_something!(File::open(f), (false, Vec::new()));\n     let mut data = Vec::with_capacity(1000);\n \n-    try_something!(file.read_to_end(&mut data), Vec::new());\n+    try_something!(file.read_to_end(&mut data), (false, Vec::new()));\n     let pathes = load_css_pathes(&data);\n     let mut ret = Vec::new();\n     get_differences(against, &pathes, &mut ret);\n-    ret\n+    (true, ret)\n }\n \n #[cfg(test)]\n@@ -321,6 +321,19 @@ rule j end {}\n                                 &load_css_pathes(text.as_bytes())).is_empty());\n     }\n \n+    #[test]\n+    fn test_text() {\n+        let text = r#\"\n+a\n+/* sdfs\n+*/ b\n+c // sdf\n+d {}\n+\"#;\n+        let pathes = load_css_pathes(text.as_bytes());\n+        assert!(pathes.children.get(\"a  b c d\").is_some());\n+    }\n+\n     #[test]\n     fn test_comparison() {\n         let x = r#\""}]}