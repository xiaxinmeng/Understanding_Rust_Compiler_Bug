{"sha": "21affdd00d52fba6388f1858a52c253b3f83a90d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxYWZmZGQwMGQ1MmZiYTYzODhmMTg1OGE1MmMyNTNiM2Y4M2E5MGQ=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-03-01T19:56:30Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-03-02T12:01:05Z"}, "message": "use values() or keys() respectively when iterating only over keys or values of maps.", "tree": {"sha": "59420901a84b969fd810f493c6991c3132130b55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59420901a84b969fd810f493c6991c3132130b55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21affdd00d52fba6388f1858a52c253b3f83a90d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21affdd00d52fba6388f1858a52c253b3f83a90d", "html_url": "https://github.com/rust-lang/rust/commit/21affdd00d52fba6388f1858a52c253b3f83a90d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21affdd00d52fba6388f1858a52c253b3f83a90d/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22339c340615d6c8ad6a05bf4ff339113c19d968", "url": "https://api.github.com/repos/rust-lang/rust/commits/22339c340615d6c8ad6a05bf4ff339113c19d968", "html_url": "https://github.com/rust-lang/rust/commit/22339c340615d6c8ad6a05bf4ff339113c19d968"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "2fcb70c489de13588a898228cc82dacef2b9187e", "filename": "src/librustc/traits/structural_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21affdd00d52fba6388f1858a52c253b3f83a90d/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21affdd00d52fba6388f1858a52c253b3f83a90d/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs?ref=21affdd00d52fba6388f1858a52c253b3f83a90d", "patch": "@@ -234,7 +234,7 @@ impl BoundNamesCollector {\n             start = false;\n             write!(fmt, \"{}\", r)?;\n         }\n-        for (_, t) in &self.types {\n+        for t in self.types.values() {\n             if !start {\n                 write!(fmt, \", \")?;\n             }"}, {"sha": "3724a83a94981c486191c5b3d4ca4bbfafc0fe07", "filename": "src/librustc_builtin_macros/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21affdd00d52fba6388f1858a52c253b3f83a90d/src%2Flibrustc_builtin_macros%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21affdd00d52fba6388f1858a52c253b3f83a90d/src%2Flibrustc_builtin_macros%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fformat.rs?ref=21affdd00d52fba6388f1858a52c253b3f83a90d", "patch": "@@ -188,7 +188,7 @@ fn parse_args<'a>(\n                 let mut err = ecx\n                     .struct_span_err(e.span, \"positional arguments cannot follow named arguments\");\n                 err.span_label(e.span, \"positional arguments must be before named arguments\");\n-                for (_, pos) in &names {\n+                for pos in names.values() {\n                     err.span_label(args[*pos].span, \"named argument\");\n                 }\n                 err.emit();"}, {"sha": "f948e22e84b10fa158d5972e412a116fc369eeca", "filename": "src/librustc_hir/hir.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/21affdd00d52fba6388f1858a52c253b3f83a90d/src%2Flibrustc_hir%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21affdd00d52fba6388f1858a52c253b3f83a90d/src%2Flibrustc_hir%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fhir.rs?ref=21affdd00d52fba6388f1858a52c253b3f83a90d", "patch": "@@ -679,15 +679,15 @@ impl Crate<'_> {\n     where\n         V: itemlikevisit::ItemLikeVisitor<'hir>,\n     {\n-        for (_, item) in &self.items {\n+        for item in self.items.values() {\n             visitor.visit_item(item);\n         }\n \n-        for (_, trait_item) in &self.trait_items {\n+        for trait_item in self.trait_items.values() {\n             visitor.visit_trait_item(trait_item);\n         }\n \n-        for (_, impl_item) in &self.impl_items {\n+        for impl_item in self.impl_items.values() {\n             visitor.visit_impl_item(impl_item);\n         }\n     }"}, {"sha": "b7278ecd5e4076cff4b24a849ad806117fe78c0f", "filename": "src/librustc_infer/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21affdd00d52fba6388f1858a52c253b3f83a90d/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21affdd00d52fba6388f1858a52c253b3f83a90d/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=21affdd00d52fba6388f1858a52c253b3f83a90d", "patch": "@@ -751,7 +751,7 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n         let dummy_source = graph.add_node(());\n         let dummy_sink = graph.add_node(());\n \n-        for (constraint, _) in &self.data.constraints {\n+        for constraint in self.data.constraints.keys() {\n             match *constraint {\n                 Constraint::VarSubVar(a_id, b_id) => {\n                     graph.add_edge("}, {"sha": "bbd4f3b35508e0a97a33ca44fd60d14f35ea984c", "filename": "src/librustc_infer/infer/region_constraints/leak_check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21affdd00d52fba6388f1858a52c253b3f83a90d/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21affdd00d52fba6388f1858a52c253b3f83a90d/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fregion_constraints%2Fleak_check.rs?ref=21affdd00d52fba6388f1858a52c253b3f83a90d", "patch": "@@ -34,7 +34,7 @@ impl<'tcx> RegionConstraintCollector<'tcx> {\n         assert!(self.in_snapshot());\n \n         // Go through each placeholder that we created.\n-        for (_, &placeholder_region) in placeholder_map {\n+        for &placeholder_region in placeholder_map.values() {\n             // Find the universe this placeholder inhabits.\n             let placeholder = match placeholder_region {\n                 ty::RePlaceholder(p) => p,"}, {"sha": "193b6d75935b2163972ea213267b4150ee05bb39", "filename": "src/librustc_resolve/late/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21affdd00d52fba6388f1858a52c253b3f83a90d/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21affdd00d52fba6388f1858a52c253b3f83a90d/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs?ref=21affdd00d52fba6388f1858a52c253b3f83a90d", "patch": "@@ -347,7 +347,7 @@ fn krate(tcx: TyCtxt<'_>) -> NamedRegionMap {\n             lifetime_uses: &mut Default::default(),\n             missing_named_lifetime_spots: vec![],\n         };\n-        for (_, item) in &krate.items {\n+        for item in krate.items.values() {\n             visitor.visit_item(item);\n         }\n     }"}, {"sha": "199b476cb9a3e74ff44d0d081d9a0ee472a9f243", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21affdd00d52fba6388f1858a52c253b3f83a90d/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21affdd00d52fba6388f1858a52c253b3f83a90d/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=21affdd00d52fba6388f1858a52c253b3f83a90d", "patch": "@@ -1652,7 +1652,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         }\n \n         for (projection_bound, _) in &bounds.projection_bounds {\n-            for (_, def_ids) in &mut associated_types {\n+            for def_ids in associated_types.values_mut() {\n                 def_ids.remove(&projection_bound.projection_def_id());\n             }\n         }"}]}