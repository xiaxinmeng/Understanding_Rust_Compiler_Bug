{"sha": "d7fdf141a4574b57d7e56bc11d4e137de15f08d0", "node_id": "C_kwDOAAsO6NoAKGQ3ZmRmMTQxYTQ1NzRiNTdkN2U1NmJjMTFkNGUxMzdkZTE1ZjA4ZDA", "commit": {"author": {"name": "Alexis (Poliorcetics) Bourget", "email": "ab_github@poliorcetiq.eu", "date": "2023-05-07T07:43:37Z"}, "committer": {"name": "Alexis (Poliorcetics) Bourget", "email": "ab_github@poliorcetiq.eu", "date": "2023-05-07T07:43:37Z"}, "message": "fix: various clippy lints", "tree": {"sha": "f929d5df67d81ab2dde43b4040b0fb6dcfcf4813", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f929d5df67d81ab2dde43b4040b0fb6dcfcf4813"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7fdf141a4574b57d7e56bc11d4e137de15f08d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7fdf141a4574b57d7e56bc11d4e137de15f08d0", "html_url": "https://github.com/rust-lang/rust/commit/d7fdf141a4574b57d7e56bc11d4e137de15f08d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7fdf141a4574b57d7e56bc11d4e137de15f08d0/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "900d6030e7a5b4cfd5f4d28d0f6c266dc533625e", "url": "https://api.github.com/repos/rust-lang/rust/commits/900d6030e7a5b4cfd5f4d28d0f6c266dc533625e", "html_url": "https://github.com/rust-lang/rust/commit/900d6030e7a5b4cfd5f4d28d0f6c266dc533625e"}], "stats": {"total": 24, "additions": 10, "deletions": 14}, "files": [{"sha": "875c1a3ec4b36c6511b1890d3010e9a4057d28d0", "filename": "crates/hir-def/src/body/pretty.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d7fdf141a4574b57d7e56bc11d4e137de15f08d0/crates%2Fhir-def%2Fsrc%2Fbody%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7fdf141a4574b57d7e56bc11d4e137de15f08d0/crates%2Fhir-def%2Fsrc%2Fbody%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fbody%2Fpretty.rs?ref=d7fdf141a4574b57d7e56bc11d4e137de15f08d0", "patch": "@@ -35,11 +35,10 @@ pub(super) fn print_body_hir(db: &dyn DefDatabase, body: &Body, owner: DefWithBo\n         DefWithBodyId::VariantId(it) => {\n             let src = it.parent.child_source(db);\n             let variant = &src.value[it.local_id];\n-            let name = match &variant.name() {\n+            match &variant.name() {\n                 Some(name) => name.to_string(),\n                 None => \"_\".to_string(),\n-            };\n-            format!(\"{name}\")\n+            }\n         }\n     };\n \n@@ -445,7 +444,7 @@ impl<'a> Printer<'a> {\n     fn print_block(\n         &mut self,\n         label: Option<&str>,\n-        statements: &Box<[Statement]>,\n+        statements: &[Statement],\n         tail: &Option<la_arena::Idx<Expr>>,\n     ) {\n         self.whitespace();\n@@ -455,7 +454,7 @@ impl<'a> Printer<'a> {\n         w!(self, \"{{\");\n         if !statements.is_empty() || tail.is_some() {\n             self.indented(|p| {\n-                for stmt in &**statements {\n+                for stmt in statements {\n                     p.print_stmt(stmt);\n                 }\n                 if let Some(tail) = tail {"}, {"sha": "ef413c63754f6695a089ee3e24ea0f1edad744aa", "filename": "crates/parser/src/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7fdf141a4574b57d7e56bc11d4e137de15f08d0/crates%2Fparser%2Fsrc%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7fdf141a4574b57d7e56bc11d4e137de15f08d0/crates%2Fparser%2Fsrc%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fparser.rs?ref=d7fdf141a4574b57d7e56bc11d4e137de15f08d0", "patch": "@@ -205,7 +205,7 @@ impl<'t> Parser<'t> {\n             marker.bomb.defuse();\n             marker = new_marker;\n         };\n-        self.pos += 1 as usize;\n+        self.pos += 1;\n         self.push_event(Event::FloatSplitHack { ends_in_dot });\n         (ends_in_dot, marker)\n     }"}, {"sha": "5cdb39700dda3cf08bd7b0aa20b801ddfd69a5db", "filename": "crates/parser/src/shortcuts.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d7fdf141a4574b57d7e56bc11d4e137de15f08d0/crates%2Fparser%2Fsrc%2Fshortcuts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7fdf141a4574b57d7e56bc11d4e137de15f08d0/crates%2Fparser%2Fsrc%2Fshortcuts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fshortcuts.rs?ref=d7fdf141a4574b57d7e56bc11d4e137de15f08d0", "patch": "@@ -46,10 +46,8 @@ impl<'a> LexedStr<'a> {\n                     // Tag the token as joint if it is float with a fractional part\n                     // we use this jointness to inform the parser about what token split\n                     // event to emit when we encounter a float literal in a field access\n-                    if kind == SyntaxKind::FLOAT_NUMBER {\n-                        if !self.text(i).ends_with('.') {\n-                            res.was_joint();\n-                        }\n+                    if kind == SyntaxKind::FLOAT_NUMBER && !self.text(i).ends_with('.') {\n+                        res.was_joint();\n                     }\n                 }\n "}, {"sha": "bab3c4734874b507a97adf0e369aae36655ed0bd", "filename": "crates/syntax/src/ast/expr_ext.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d7fdf141a4574b57d7e56bc11d4e137de15f08d0/crates%2Fsyntax%2Fsrc%2Fast%2Fexpr_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7fdf141a4574b57d7e56bc11d4e137de15f08d0/crates%2Fsyntax%2Fsrc%2Fast%2Fexpr_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fexpr_ext.rs?ref=d7fdf141a4574b57d7e56bc11d4e137de15f08d0", "patch": "@@ -366,8 +366,7 @@ impl ast::BlockExpr {\n         match parent.kind() {\n             FOR_EXPR | IF_EXPR => parent\n                 .children()\n-                .filter(|it| ast::Expr::can_cast(it.kind()))\n-                .next()\n+                .find(|it| ast::Expr::can_cast(it.kind()))\n                 .map_or(true, |it| it == *self.syntax()),\n             LET_ELSE | FN | WHILE_EXPR | LOOP_EXPR | CONST_BLOCK_PAT => false,\n             _ => true,"}, {"sha": "8d2dc8709bafd5f49b564dd08c898225f8e49469", "filename": "crates/syntax/src/ast/make.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d7fdf141a4574b57d7e56bc11d4e137de15f08d0/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7fdf141a4574b57d7e56bc11d4e137de15f08d0/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs?ref=d7fdf141a4574b57d7e56bc11d4e137de15f08d0", "patch": "@@ -195,7 +195,7 @@ pub fn ty_alias(\n         }\n     }\n \n-    s.push_str(\";\");\n+    s.push(';');\n     ast_from_text(&s)\n }\n \n@@ -399,7 +399,7 @@ pub fn hacky_block_expr(\n                     format_to!(buf, \"    {t}\\n\")\n                 } else if kind == SyntaxKind::WHITESPACE {\n                     let content = t.text().trim_matches(|c| c != '\\n');\n-                    if content.len() >= 1 {\n+                    if !content.is_empty() {\n                         format_to!(buf, \"{}\", &content[1..])\n                     }\n                 }"}]}