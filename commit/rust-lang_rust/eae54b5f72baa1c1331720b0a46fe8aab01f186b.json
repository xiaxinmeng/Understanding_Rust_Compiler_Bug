{"sha": "eae54b5f72baa1c1331720b0a46fe8aab01f186b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZTU0YjVmNzJiYWExYzEzMzE3MjBiMGE0NmZlOGFhYjAxZjE4NmI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-10-25T14:50:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-25T14:50:48Z"}, "message": "Merge #6357\n\n6357: Don't keep parens around with remove-dbg r=SomeoneToIgnore a=Veykril\n\nFixes #6355\r\n\r\n~~This causes remove-dbg to not keep parentheses when it comes to ranges though due to ranges not having `DOT2` and `DOT2EQ` tokens but having two `DOT` tokens inside of macro invocations.~~\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "3bb749cdf23e7d77fc5b43bcdec7fecff35de08d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bb749cdf23e7d77fc5b43bcdec7fecff35de08d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eae54b5f72baa1c1331720b0a46fe8aab01f186b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJflZDICRBK7hj4Ov3rIwAAdHIIAAdC1BYju4W5uW8Dws8igMSF\n+UrXkW2VOj5DR3Mk809SZrgma9hhx2q2OAsRcRK8zd6bgzrMlY08m1BxtpjCktMt\n05FJHvtef5Q7cG0rNkAQf3YNze5RIhUdFO43bGfLGLAiXqgN6UPo59ZVUUAhe98L\nCEowYCPeNChW9zjQwAQ7yCyNpeupJapRO10tvprXBfLqhv+rtUh8uV4XlBsGYIP0\n3lX7GXEj1tT7BtETKWp1AbkVE85K73UTWSdjEzjK8p/BZWg/N+Ni6dReSYfIfJc4\nmxrHUsjQB/9Qn+YgjRipwq3mRijixHGMQwudpTmCeQlo+4esrajkLWChZ+4gJYg=\n=BwI3\n-----END PGP SIGNATURE-----\n", "payload": "tree 3bb749cdf23e7d77fc5b43bcdec7fecff35de08d\nparent 91c1af36120ed9b5ad1da4972ab18d0d042e991f\nparent 551bf65e6d035f95e77b116679a4622d6cb590db\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1603637448 +0000\ncommitter GitHub <noreply@github.com> 1603637448 +0000\n\nMerge #6357\n\n6357: Don't keep parens around with remove-dbg r=SomeoneToIgnore a=Veykril\n\nFixes #6355\r\n\r\n~~This causes remove-dbg to not keep parentheses when it comes to ranges though due to ranges not having `DOT2` and `DOT2EQ` tokens but having two `DOT` tokens inside of macro invocations.~~\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eae54b5f72baa1c1331720b0a46fe8aab01f186b", "html_url": "https://github.com/rust-lang/rust/commit/eae54b5f72baa1c1331720b0a46fe8aab01f186b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eae54b5f72baa1c1331720b0a46fe8aab01f186b/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91c1af36120ed9b5ad1da4972ab18d0d042e991f", "url": "https://api.github.com/repos/rust-lang/rust/commits/91c1af36120ed9b5ad1da4972ab18d0d042e991f", "html_url": "https://github.com/rust-lang/rust/commit/91c1af36120ed9b5ad1da4972ab18d0d042e991f"}, {"sha": "551bf65e6d035f95e77b116679a4622d6cb590db", "url": "https://api.github.com/repos/rust-lang/rust/commits/551bf65e6d035f95e77b116679a4622d6cb590db", "html_url": "https://github.com/rust-lang/rust/commit/551bf65e6d035f95e77b116679a4622d6cb590db"}], "stats": {"total": 87, "additions": 84, "deletions": 3}, "files": [{"sha": "9731344b8687351c9a68a4309e91396c46d4b565", "filename": "crates/assists/src/handlers/remove_dbg.rs", "status": "modified", "additions": 84, "deletions": 3, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/eae54b5f72baa1c1331720b0a46fe8aab01f186b/crates%2Fassists%2Fsrc%2Fhandlers%2Fremove_dbg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eae54b5f72baa1c1331720b0a46fe8aab01f186b/crates%2Fassists%2Fsrc%2Fhandlers%2Fremove_dbg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fremove_dbg.rs?ref=eae54b5f72baa1c1331720b0a46fe8aab01f186b", "patch": "@@ -93,8 +93,9 @@ fn needs_parentheses_around_macro_contents(macro_contents: Vec<SyntaxElement>) -\n     if macro_contents.len() < 2 {\n         return false;\n     }\n+    let mut macro_contents = macro_contents.into_iter().peekable();\n     let mut unpaired_brackets_in_contents = Vec::new();\n-    for element in macro_contents {\n+    while let Some(element) = macro_contents.next() {\n         match element.kind() {\n             T!['('] | T!['['] | T!['{'] => unpaired_brackets_in_contents.push(element),\n             T![')'] => {\n@@ -118,8 +119,14 @@ fn needs_parentheses_around_macro_contents(macro_contents: Vec<SyntaxElement>) -\n             symbol_kind => {\n                 let symbol_not_in_bracket = unpaired_brackets_in_contents.is_empty();\n                 if symbol_not_in_bracket\n-                    && symbol_kind != SyntaxKind::COLON\n-                    && symbol_kind.is_punct()\n+                    && symbol_kind != SyntaxKind::COLON // paths\n+                    && (symbol_kind != SyntaxKind::DOT // field/method access\n+                        || macro_contents // range expressions consist of two SyntaxKind::Dot in macro invocations\n+                            .peek()\n+                            .map(|element| element.kind() == SyntaxKind::DOT)\n+                            .unwrap_or(false))\n+                    && symbol_kind != SyntaxKind::QUESTION // try operator\n+                    && (symbol_kind.is_punct() || symbol_kind == SyntaxKind::AS_KW)\n                 {\n                     return true;\n                 }\n@@ -242,6 +249,25 @@ fn main() {\n         check_assist(remove_dbg, r#\"let res = <|>dbg![2 + 2] * 5\"#, r#\"let res = (2 + 2) * 5\"#);\n     }\n \n+    #[test]\n+    fn test_remove_dbg_method_chaining() {\n+        check_assist(\n+            remove_dbg,\n+            r#\"let res = <|>dbg!(foo().bar()).baz();\"#,\n+            r#\"let res = foo().bar().baz();\"#,\n+        );\n+        check_assist(\n+            remove_dbg,\n+            r#\"let res = <|>dbg!(foo.bar()).baz();\"#,\n+            r#\"let res = foo.bar().baz();\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_remove_dbg_field_chaining() {\n+        check_assist(remove_dbg, r#\"let res = <|>dbg!(foo.bar).baz;\"#, r#\"let res = foo.bar.baz;\"#);\n+    }\n+\n     #[test]\n     fn test_remove_dbg_from_inside_fn() {\n         check_assist_target(\n@@ -280,4 +306,59 @@ fn main() {\n }\"#,\n         );\n     }\n+\n+    #[test]\n+    fn test_remove_dbg_try_expr() {\n+        check_assist(\n+            remove_dbg,\n+            r#\"let res = <|>dbg!(result?).foo();\"#,\n+            r#\"let res = result?.foo();\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_remove_dbg_await_expr() {\n+        check_assist(\n+            remove_dbg,\n+            r#\"let res = <|>dbg!(fut.await).foo();\"#,\n+            r#\"let res = fut.await.foo();\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_remove_dbg_as_cast() {\n+        check_assist(\n+            remove_dbg,\n+            r#\"let res = <|>dbg!(3 as usize).foo();\"#,\n+            r#\"let res = (3 as usize).foo();\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_remove_dbg_index_expr() {\n+        check_assist(\n+            remove_dbg,\n+            r#\"let res = <|>dbg!(array[3]).foo();\"#,\n+            r#\"let res = array[3].foo();\"#,\n+        );\n+        check_assist(\n+            remove_dbg,\n+            r#\"let res = <|>dbg!(tuple.3).foo();\"#,\n+            r#\"let res = tuple.3.foo();\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_remove_dbg_range_expr() {\n+        check_assist(\n+            remove_dbg,\n+            r#\"let res = <|>dbg!(foo..bar).foo();\"#,\n+            r#\"let res = (foo..bar).foo();\"#,\n+        );\n+        check_assist(\n+            remove_dbg,\n+            r#\"let res = <|>dbg!(foo..=bar).foo();\"#,\n+            r#\"let res = (foo..=bar).foo();\"#,\n+        );\n+    }\n }"}]}