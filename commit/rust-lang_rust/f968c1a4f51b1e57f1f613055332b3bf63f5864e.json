{"sha": "f968c1a4f51b1e57f1f613055332b3bf63f5864e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NjhjMWE0ZjUxYjFlNTdmMWY2MTMwNTUzMzJiM2JmNjNmNTg2NGU=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-09-04T08:08:54Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-09-16T14:30:50Z"}, "message": "ci: address publish_toolstate review comments", "tree": {"sha": "0a7419134235ff00d0112eb64b5f6451f94a0775", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a7419134235ff00d0112eb64b5f6451f94a0775"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f968c1a4f51b1e57f1f613055332b3bf63f5864e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl1/nJoACgkQPgar6Auq\n8ZyKxQ//fdUiPxyo9clKs4D70LXMFRL6gdxWNL2Tchqi+iVUpXkH37G6OUAhnYg/\n6G4tKWyJ/QRAiapwTWSH0gIHCf89V6OSC8E5GsbLLx2Jr6BSlwmjliZPgYTwKV/A\nmzwspPIYABhVbOGjnHnPAtC+/u/fhNpFK7VhZ1CncCUTpI7DPq3UPGJHP9nIm6zQ\nUg26INHdzGtY3qYxzJu1LTRvvQW2OsjrZDdCE0uEFLa5FQowLVy5E8bvACehmQyP\nbUz2xItV3dLz6ViwwYMdapirO/ReVTtz89RbPCgU4fo3FnezgY7VFMm51M7l1SVQ\nWDd128gw3fsiGtSsXzQ7lF6jvR0la0dDiNMllv95J1JMwTszjdil9SUZyCGcD/f5\nYSmPOChK8WoMFMyTqJojzv1CG23Bk2soCr2JEGGm82FKmmruC/WhwhuLnfCiAZjH\nb1UV9ImGHqDAKRkKm50/Qtb8ktq4Zx43oT0/8POM+sNsuOYyBUa4UxBSdapxQx8w\nk93eQlVE+kVCIab/qB5abYkObyR/hqINmord0FTFp2lsYts0Te2O8QaKk/so/vSW\nZpzrwpNZW+16t5Q0atVOqay3ETSv2tIRRMm+QVOVNI/4zeoOOldQvJxrqrJ7bGx3\nFoF8YT8bxuuskF5fji4jg0CAk6esRWP3QCbaLDNccSNeGoKJ5Do=\n=dFKh\n-----END PGP SIGNATURE-----", "payload": "tree 0a7419134235ff00d0112eb64b5f6451f94a0775\nparent eb97b1bfdede51981dbed39bb3fe483311f8f65d\nauthor Pietro Albini <pietro@pietroalbini.org> 1567584534 +0200\ncommitter Pietro Albini <pietro@pietroalbini.org> 1568644250 +0200\n\nci: address publish_toolstate review comments\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f968c1a4f51b1e57f1f613055332b3bf63f5864e", "html_url": "https://github.com/rust-lang/rust/commit/f968c1a4f51b1e57f1f613055332b3bf63f5864e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f968c1a4f51b1e57f1f613055332b3bf63f5864e/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb97b1bfdede51981dbed39bb3fe483311f8f65d", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb97b1bfdede51981dbed39bb3fe483311f8f65d", "html_url": "https://github.com/rust-lang/rust/commit/eb97b1bfdede51981dbed39bb3fe483311f8f65d"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "5211d1141c7e03fdbb77fdc9ef5b3eaad1d74bd6", "filename": "src/tools/publish_toolstate.py", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f968c1a4f51b1e57f1f613055332b3bf63f5864e/src%2Ftools%2Fpublish_toolstate.py", "raw_url": "https://github.com/rust-lang/rust/raw/f968c1a4f51b1e57f1f613055332b3bf63f5864e/src%2Ftools%2Fpublish_toolstate.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fpublish_toolstate.py?ref=f968c1a4f51b1e57f1f613055332b3bf63f5864e", "patch": "@@ -69,15 +69,14 @@ def validate_maintainers(repo, github_token):\n             # Properly load nested teams.\n             'Accept': 'application/vnd.github.hellcat-preview+json',\n         }))\n-        for user in json.loads(response.read()):\n-            assignable.append(user['login'])\n+        assignable.extend(user['login'] for user in json.load(response))\n         # Load the next page if available\n-        if 'Link' in response.headers:\n-            matches = next_link_re.match(response.headers['Link'])\n+        url = None\n+        link_header = response.headers.get('Link')\n+        if link_header:\n+            matches = next_link_re.match(link_header)\n             if matches is not None:\n                 url = matches.group(1)\n-            else:\n-                url = None\n \n     errors = False\n     for tool, maintainers in MAINTAINERS.items():\n@@ -251,13 +250,14 @@ def update_latest(\n \n \n if __name__ == '__main__':\n-    if 'TOOLSTATE_VALIDATE_MAINTAINERS_REPO' in os.environ:\n-        repo = os.environ['TOOLSTATE_VALIDATE_MAINTAINERS_REPO']\n-        if 'TOOLSTATE_REPO_ACCESS_TOKEN' in os.environ:\n-            github_token = os.environ['TOOLSTATE_REPO_ACCESS_TOKEN']\n+    repo = os.environ.get('TOOLSTATE_VALIDATE_MAINTAINERS_REPO')\n+    if repo:\n+        github_token = os.environ.get('TOOLSTATE_REPO_ACCESS_TOKEN')\n+        if github_token:\n             validate_maintainers(repo, github_token)\n         else:\n             print('skipping toolstate maintainers validation since no GitHub token is present')\n+        # When validating maintainers don't run the full script.\n         exit(0)\n \n     cur_commit = sys.argv[1]"}]}