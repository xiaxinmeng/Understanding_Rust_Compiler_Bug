{"sha": "be916ce584f508ad03e507dac8f65db06304cccb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlOTE2Y2U1ODRmNTA4YWQwM2U1MDdkYWM4ZjY1ZGIwNjMwNGNjY2I=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-01-17T17:57:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-17T17:57:23Z"}, "message": "Rollup merge of #47467 - arielb1:cleanup-shims, r=eddyb\n\nremove noop landing pads in cleanup shims\n\nNo-op landing pads are already removed in the normal optimization pipeline - so also removing them on the shim pipeline should slightly improve codegen performance, as these cleanup blocks are known to hurt LLVM.\n\nThis un-regresses and is therefore a fix for #47442. However, the reporter of that issue should try using `-C panic=abort` instead of carefully avoiding panics.\n\nr? @eddyb", "tree": {"sha": "5f0876a40de4e2a0eef178d5a24e6e45cff7126f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f0876a40de4e2a0eef178d5a24e6e45cff7126f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be916ce584f508ad03e507dac8f65db06304cccb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be916ce584f508ad03e507dac8f65db06304cccb", "html_url": "https://github.com/rust-lang/rust/commit/be916ce584f508ad03e507dac8f65db06304cccb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be916ce584f508ad03e507dac8f65db06304cccb/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b636d01654c8633f9d91dfaa4849a3dcfe14085", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b636d01654c8633f9d91dfaa4849a3dcfe14085", "html_url": "https://github.com/rust-lang/rust/commit/4b636d01654c8633f9d91dfaa4849a3dcfe14085"}, {"sha": "dc44d41b984610406af00dc60d8e1903c9a6751b", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc44d41b984610406af00dc60d8e1903c9a6751b", "html_url": "https://github.com/rust-lang/rust/commit/dc44d41b984610406af00dc60d8e1903c9a6751b"}], "stats": {"total": 54, "additions": 47, "deletions": 7}, "files": [{"sha": "c206d0ea9b5fd6e6ee04ad96ddcaa59c4d105e23", "filename": "src/librustc_mir/shim.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/be916ce584f508ad03e507dac8f65db06304cccb/src%2Flibrustc_mir%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be916ce584f508ad03e507dac8f65db06304cccb/src%2Flibrustc_mir%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fshim.rs?ref=be916ce584f508ad03e507dac8f65db06304cccb", "patch": "@@ -28,7 +28,7 @@ use std::fmt;\n use std::iter;\n \n use transform::{add_moves_for_packed_drops, add_call_guards};\n-use transform::{no_landing_pads, simplify};\n+use transform::{remove_noop_landing_pads, no_landing_pads, simplify};\n use util::elaborate_drops::{self, DropElaborator, DropStyle, DropFlagMode};\n use util::patch::MirPatch;\n \n@@ -118,6 +118,7 @@ fn make_shim<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     add_moves_for_packed_drops::add_moves_for_packed_drops(\n         tcx, &mut result, instance.def_id());\n     no_landing_pads::no_landing_pads(tcx, &mut result);\n+    remove_noop_landing_pads::remove_noop_landing_pads(tcx, &mut result);\n     simplify::simplify_cfg(&mut result);\n     add_call_guards::CriticalCallEdges.add_call_guards(&mut result);\n     debug!(\"make_shim({:?}) = {:?}\", instance, result);"}, {"sha": "e7cab469bc222e0691e671857f5109cad11c81c5", "filename": "src/librustc_mir/transform/remove_noop_landing_pads.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/be916ce584f508ad03e507dac8f65db06304cccb/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be916ce584f508ad03e507dac8f65db06304cccb/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs?ref=be916ce584f508ad03e507dac8f65db06304cccb", "patch": "@@ -20,17 +20,24 @@ use util::patch::MirPatch;\n /// code for these.\n pub struct RemoveNoopLandingPads;\n \n+pub fn remove_noop_landing_pads<'a, 'tcx>(\n+    tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+    mir: &mut Mir<'tcx>)\n+{\n+    if tcx.sess.no_landing_pads() {\n+        return\n+    }\n+    debug!(\"remove_noop_landing_pads({:?})\", mir);\n+\n+    RemoveNoopLandingPads.remove_nop_landing_pads(mir)\n+}\n+\n impl MirPass for RemoveNoopLandingPads {\n     fn run_pass<'a, 'tcx>(&self,\n                           tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                           _src: MirSource,\n                           mir: &mut Mir<'tcx>) {\n-        if tcx.sess.no_landing_pads() {\n-            return\n-        }\n-\n-        debug!(\"remove_noop_landing_pads({:?})\", mir);\n-        self.remove_nop_landing_pads(mir);\n+        remove_noop_landing_pads(tcx, mir);\n     }\n }\n "}, {"sha": "d0c9932e4e20f95ccfdd0836a7e0fee2485e3e09", "filename": "src/test/codegen/issue-47442.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/be916ce584f508ad03e507dac8f65db06304cccb/src%2Ftest%2Fcodegen%2Fissue-47442.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be916ce584f508ad03e507dac8f65db06304cccb/src%2Ftest%2Fcodegen%2Fissue-47442.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fissue-47442.rs?ref=be916ce584f508ad03e507dac8f65db06304cccb", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// check that we don't emit unneeded `resume` cleanup blocks for every\n+// destructor.\n+\n+// CHECK-NOT: Unwind\n+\n+#![feature(test)]\n+#![crate_type=\"rlib\"]\n+\n+extern crate test;\n+\n+struct Foo {}\n+\n+impl Drop for Foo {\n+    fn drop(&mut self) {\n+        test::black_box(());\n+    }\n+}\n+\n+#[no_mangle]\n+pub fn foo() {\n+    let _foo = Foo {};\n+}"}]}