{"sha": "bffb0decc870ee76783c5da956acc980e73939bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmZmIwZGVjYzg3MGVlNzY3ODNjNWRhOTU2YWNjOTgwZTczOTM5YmY=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-06T12:28:11Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-17T19:51:52Z"}, "message": "tests: Use arguments in codegen/stores.rs to turn aggregates into immediates.", "tree": {"sha": "7441f2ad7859043e0386aa0bf9aa93a1e74d7d71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7441f2ad7859043e0386aa0bf9aa93a1e74d7d71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bffb0decc870ee76783c5da956acc980e73939bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bffb0decc870ee76783c5da956acc980e73939bf", "html_url": "https://github.com/rust-lang/rust/commit/bffb0decc870ee76783c5da956acc980e73939bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bffb0decc870ee76783c5da956acc980e73939bf/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c0674e613a708e25d9ae92de4ae4bc5756805c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c0674e613a708e25d9ae92de4ae4bc5756805c4", "html_url": "https://github.com/rust-lang/rust/commit/6c0674e613a708e25d9ae92de4ae4bc5756805c4"}], "stats": {"total": 23, "additions": 8, "deletions": 15}, "files": [{"sha": "46e4c5f341be86c9d395c780b8c02b6e051b3913", "filename": "src/test/codegen/stores.rs", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/bffb0decc870ee76783c5da956acc980e73939bf/src%2Ftest%2Fcodegen%2Fstores.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bffb0decc870ee76783c5da956acc980e73939bf/src%2Ftest%2Fcodegen%2Fstores.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fstores.rs?ref=bffb0decc870ee76783c5da956acc980e73939bf", "patch": "@@ -23,25 +23,18 @@ pub struct Bytes {\n // The array is stored as i32, but its alignment is lower, go with 1 byte to avoid target\n // dependent alignment\n #[no_mangle]\n-pub fn small_array_alignment(x: &mut [i8; 4]) {\n-// CHECK: [[VAR:%[0-9]+]] = load {{(\\[4 x i8\\]\\*, )?}}[4 x i8]** %x\n-// CHECK: [[VAR2:%[0-9]+]] = bitcast [4 x i8]* [[VAR]] to i32*\n-// CHECK: store i32 %{{.*}}, i32* [[VAR2]], align 1\n-    *x = [0; 4];\n+pub fn small_array_alignment(x: &mut [i8; 4], y: [i8; 4]) {\n+// CHECK: [[VAR:%[0-9]+]] = bitcast [4 x i8]* %y to i32*\n+// CHECK: store i32 %{{.*}}, i32* [[VAR]], align 1\n+    *x = y;\n }\n \n // CHECK-LABEL: small_struct_alignment\n // The struct is stored as i32, but its alignment is lower, go with 1 byte to avoid target\n // dependent alignment\n #[no_mangle]\n-pub fn small_struct_alignment(x: &mut Bytes) {\n-// CHECK: [[VAR:%[0-9]+]] = load {{(%Bytes\\*, )?}}%Bytes** %x\n-// CHECK: [[VAR2:%[0-9]+]] = bitcast %Bytes* [[VAR]] to i32*\n-// CHECK: store i32 %{{.*}}, i32* [[VAR2]], align 1\n-    *x = Bytes {\n-        a: 0,\n-        b: 0,\n-        c: 0,\n-        d: 0,\n-    };\n+pub fn small_struct_alignment(x: &mut Bytes, y: Bytes) {\n+// CHECK: [[VAR:%[0-9]+]] = bitcast %Bytes* %y to i32*\n+// CHECK: store i32 %{{.*}}, i32* [[VAR]], align 1\n+    *x = y;\n }"}]}