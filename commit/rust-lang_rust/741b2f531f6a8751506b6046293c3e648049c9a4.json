{"sha": "741b2f531f6a8751506b6046293c3e648049c9a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0MWIyZjUzMWY2YTg3NTE1MDZiNjA0NjI5M2MzZTY0ODA0OWM5YTQ=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-31T13:35:22Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-31T13:35:22Z"}, "message": "Don't take the parent kind of trailing attributes in attr completion", "tree": {"sha": "b0fc1d69f0042221c1354fa35b31fc98c404e439", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0fc1d69f0042221c1354fa35b31fc98c404e439"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/741b2f531f6a8751506b6046293c3e648049c9a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/741b2f531f6a8751506b6046293c3e648049c9a4", "html_url": "https://github.com/rust-lang/rust/commit/741b2f531f6a8751506b6046293c3e648049c9a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/741b2f531f6a8751506b6046293c3e648049c9a4/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7cbb49057c4495307d91f5db32465c29c175124", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7cbb49057c4495307d91f5db32465c29c175124", "html_url": "https://github.com/rust-lang/rust/commit/d7cbb49057c4495307d91f5db32465c29c175124"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "c48bb9e6619d0001afc6527aa80397299e360ede", "filename": "crates/ide_completion/src/completions/attribute.rs", "status": "modified", "additions": 53, "deletions": 3, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/741b2f531f6a8751506b6046293c3e648049c9a4/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/741b2f531f6a8751506b6046293c3e648049c9a4/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs?ref=741b2f531f6a8751506b6046293c3e648049c9a4", "patch": "@@ -5,7 +5,7 @@\n \n use once_cell::sync::Lazy;\n use rustc_hash::{FxHashMap, FxHashSet};\n-use syntax::{ast, AstNode, NodeOrToken, SyntaxKind, T};\n+use syntax::{algo::non_trivia_sibling, ast, AstNode, Direction, NodeOrToken, SyntaxKind, T};\n \n use crate::{\n     context::CompletionContext,\n@@ -37,15 +37,20 @@ pub(crate) fn complete_attribute(acc: &mut Completions, ctx: &CompletionContext)\n }\n \n fn complete_new_attribute(acc: &mut Completions, ctx: &CompletionContext, attribute: &ast::Attr) {\n-    let attribute_annotated_item_kind = attribute.syntax().parent().map(|it| it.kind());\n+    let is_inner = attribute.kind() == ast::AttrKind::Inner;\n+    let attribute_annotated_item_kind =\n+        attribute.syntax().parent().map(|it| it.kind()).filter(|_| {\n+            is_inner\n+            // If we got nothing coming after the attribute it could be anything so filter it the kind out\n+                || non_trivia_sibling(attribute.syntax().clone().into(), Direction::Next).is_some()\n+        });\n     let attributes = attribute_annotated_item_kind.and_then(|kind| {\n         if ast::Expr::can_cast(kind) {\n             Some(EXPR_ATTRIBUTES)\n         } else {\n             KIND_TO_ATTRIBUTES.get(&kind).copied()\n         }\n     });\n-    let is_inner = attribute.kind() == ast::AttrKind::Inner;\n \n     let add_completion = |attr_completion: &AttrCompletion| {\n         let mut item = CompletionItem::new(\n@@ -781,4 +786,49 @@ mod tests {\n             \"#]],\n         );\n     }\n+\n+    #[test]\n+    fn complete_attribute_in_source_file_end() {\n+        check(\n+            r#\"#[$0]\"#,\n+            expect![[r#\"\n+                at allow(\u2026)\n+                at automatically_derived\n+                at cfg(\u2026)\n+                at cfg_attr(\u2026)\n+                at cold\n+                at deny(\u2026)\n+                at deprecated\n+                at derive(\u2026)\n+                at doc = \"\u2026\"\n+                at doc(alias = \"\u2026\")\n+                at doc(hidden)\n+                at export_name = \"\u2026\"\n+                at forbid(\u2026)\n+                at global_allocator\n+                at ignore = \"\u2026\"\n+                at inline\n+                at link\n+                at link_name = \"\u2026\"\n+                at link_section = \"\u2026\"\n+                at macro_export\n+                at macro_use\n+                at must_use\n+                at no_mangle\n+                at non_exhaustive\n+                at panic_handler\n+                at path = \"\u2026\"\n+                at proc_macro\n+                at proc_macro_attribute\n+                at proc_macro_derive(\u2026)\n+                at repr(\u2026)\n+                at should_panic\n+                at target_feature = \"\u2026\"\n+                at test\n+                at track_caller\n+                at used\n+                at warn(\u2026)\n+            \"#]],\n+        );\n+    }\n }"}]}