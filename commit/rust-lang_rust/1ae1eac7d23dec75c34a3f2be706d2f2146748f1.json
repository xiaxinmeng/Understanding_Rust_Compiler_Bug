{"sha": "1ae1eac7d23dec75c34a3f2be706d2f2146748f1", "node_id": "C_kwDOAAsO6NoAKDFhZTFlYWM3ZDIzZGVjNzVjMzRhM2YyYmU3MDZkMmYyMTQ2NzQ4ZjE", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2023-02-14T13:40:57Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2023-02-16T13:55:05Z"}, "message": "Add some comments and use inline(always) on query_provided_to_value", "tree": {"sha": "75805da4a963d5ce75cf856b5377764b6fc5a897", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75805da4a963d5ce75cf856b5377764b6fc5a897"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ae1eac7d23dec75c34a3f2be706d2f2146748f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ae1eac7d23dec75c34a3f2be706d2f2146748f1", "html_url": "https://github.com/rust-lang/rust/commit/1ae1eac7d23dec75c34a3f2be706d2f2146748f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ae1eac7d23dec75c34a3f2be706d2f2146748f1/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "067bf2ac1340a9362585d0d1690b9da24195582c", "url": "https://api.github.com/repos/rust-lang/rust/commits/067bf2ac1340a9362585d0d1690b9da24195582c", "html_url": "https://github.com/rust-lang/rust/commit/067bf2ac1340a9362585d0d1690b9da24195582c"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "5c45cc389ee64ecb1e0604e9f329e9b1925dbbbe", "filename": "compiler/rustc_middle/src/ty/query.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1ae1eac7d23dec75c34a3f2be706d2f2146748f1/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ae1eac7d23dec75c34a3f2be706d2f2146748f1/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs?ref=1ae1eac7d23dec75c34a3f2be706d2f2146748f1", "patch": "@@ -200,6 +200,10 @@ macro_rules! define_callbacks {\n \n             $(pub type $name<'tcx> = $V;)*\n         }\n+\n+        /// This module specifies the type returned from query providers and the type used for\n+        /// decoding. For regular queries this is the declared returned type `V`, but\n+        /// `arena_cache` will use `<V as Deref>::Target` instead.\n         #[allow(nonstandard_style, unused_lifetimes)]\n         pub mod query_provided {\n             use super::*;\n@@ -208,12 +212,17 @@ macro_rules! define_callbacks {\n                 pub type $name<'tcx> = query_if_arena!([$($modifiers)*] (<$V as Deref>::Target) ($V));\n             )*\n         }\n+\n+        /// This module has a function per query which takes a `query_provided` value and coverts\n+        /// it to a regular `V` value by allocating it on an arena if the query has the\n+        /// `arena_cache` modifier. This will happen when computing the query using a provider or\n+        /// decoding a stored result.\n         #[allow(nonstandard_style, unused_lifetimes)]\n         pub mod query_provided_to_value {\n             use super::*;\n \n             $(\n-                #[inline]\n+                #[inline(always)]\n                 pub fn $name<'tcx>(\n                     _tcx: TyCtxt<'tcx>,\n                     value: query_provided::$name<'tcx>,"}]}