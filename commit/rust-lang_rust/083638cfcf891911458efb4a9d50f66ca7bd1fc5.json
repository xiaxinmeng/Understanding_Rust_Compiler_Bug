{"sha": "083638cfcf891911458efb4a9d50f66ca7bd1fc5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4MzYzOGNmY2Y4OTE5MTE0NThlZmI0YTlkNTBmNjZjYTdiZDFmYzU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-13T21:02:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-13T21:02:35Z"}, "message": "Rollup merge of #77886 - LingMan:ast_pretty_bool_matches, r=petrochenkov\n\nReplace trivial bool matches with the `matches!` macro\n\nThis derives `PartialEq` on one enum (and two structs it contains) to enable the `==` operator for it. If there's some downside to this, I could respin with the `matches!` macro instead.", "tree": {"sha": "682416d63ba6c1085eb360d072bb2910aad7501a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/682416d63ba6c1085eb360d072bb2910aad7501a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/083638cfcf891911458efb4a9d50f66ca7bd1fc5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfhhXrCRBK7hj4Ov3rIwAAdHIIAE/0Y7HUX2ORidSM/ZfsvIpO\ntWrfSmwfBM+ArXv4SaHPy2/vJ1E2EBgC1JUzaDPjjQoTEscOvYYzm1EoS/hqgM5y\n8QLW8okfn6r3gepiJ0n051QhaStSKlrcSmmvO8VqtbZ0KI/jJ1uQhozmCVUX5KEA\nTGyp87IxorTS9fa4NFreidgJCXKDPBkO8LNzzXu9f/h4sw9HtB9jFJ+EWgGsOlrt\nvuHMD96jdim/F/gyiXaDXS6HEjGynGbjBh9dbmYvOTx57ULoM4OzdnWYpJQKTct+\nsEuQXYQwf/696Rmz/XZvLy/LKxRoqhEY1/+zTR2cvj2V8y7BPZOLm+pZWiDWk2Y=\n=ARNt\n-----END PGP SIGNATURE-----\n", "payload": "tree 682416d63ba6c1085eb360d072bb2910aad7501a\nparent 31135e02fac0c7bfbba05b26f6c6b8bda1fa49ad\nparent 7a23a71e5138531f784ca4118e5136b6664bad55\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1602622955 +0900\ncommitter GitHub <noreply@github.com> 1602622955 +0900\n\nRollup merge of #77886 - LingMan:ast_pretty_bool_matches, r=petrochenkov\n\nReplace trivial bool matches with the `matches!` macro\n\nThis derives `PartialEq` on one enum (and two structs it contains) to enable the `==` operator for it. If there's some downside to this, I could respin with the `matches!` macro instead.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/083638cfcf891911458efb4a9d50f66ca7bd1fc5", "html_url": "https://github.com/rust-lang/rust/commit/083638cfcf891911458efb4a9d50f66ca7bd1fc5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/083638cfcf891911458efb4a9d50f66ca7bd1fc5/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31135e02fac0c7bfbba05b26f6c6b8bda1fa49ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/31135e02fac0c7bfbba05b26f6c6b8bda1fa49ad", "html_url": "https://github.com/rust-lang/rust/commit/31135e02fac0c7bfbba05b26f6c6b8bda1fa49ad"}, {"sha": "7a23a71e5138531f784ca4118e5136b6664bad55", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a23a71e5138531f784ca4118e5136b6664bad55", "html_url": "https://github.com/rust-lang/rust/commit/7a23a71e5138531f784ca4118e5136b6664bad55"}], "stats": {"total": 10, "additions": 2, "deletions": 8}, "files": [{"sha": "95f969d7691e015c12f6ae23c9fee40dd43e92a9", "filename": "compiler/rustc_ast_pretty/src/pp.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/083638cfcf891911458efb4a9d50f66ca7bd1fc5/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083638cfcf891911458efb4a9d50f66ca7bd1fc5/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs?ref=083638cfcf891911458efb4a9d50f66ca7bd1fc5", "patch": "@@ -170,17 +170,11 @@ pub enum Token {\n \n impl Token {\n     crate fn is_eof(&self) -> bool {\n-        match *self {\n-            Token::Eof => true,\n-            _ => false,\n-        }\n+        matches!(self, Token::Eof)\n     }\n \n     pub fn is_hardbreak_tok(&self) -> bool {\n-        match *self {\n-            Token::Break(BreakToken { offset: 0, blank_space: bs }) if bs == SIZE_INFINITY => true,\n-            _ => false,\n-        }\n+        matches!(self, Token::Break(BreakToken { offset: 0, blank_space: SIZE_INFINITY }))\n     }\n }\n "}]}