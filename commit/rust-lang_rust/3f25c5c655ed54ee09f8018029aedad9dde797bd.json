{"sha": "3f25c5c655ed54ee09f8018029aedad9dde797bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmMjVjNWM2NTVlZDU0ZWUwOWY4MDE4MDI5YWVkYWQ5ZGRlNzk3YmQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-11-25T03:51:18Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-11-25T03:51:18Z"}, "message": "Rollup merge of #30038 - Carreau:cargo-philosopher, r=steveklabnik\n\nAt this point of the book, reader have likely use `cargo new --bin`,\nlikely 2 times, once if they are lazy. This remind them of the `cargo`\nsyntax.\n\nI was myself unsure whether it was `cargo create`, `cargo new`, and\nwhether it would initialize in current working directory or needed a\ntarget.\n\n--\n\nOtherwise thanks, I've been writing rust for a few hours, and likes it so far.", "tree": {"sha": "deee6c80a45cd2e3411200965c41a27b9cfb4709", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/deee6c80a45cd2e3411200965c41a27b9cfb4709"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f25c5c655ed54ee09f8018029aedad9dde797bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f25c5c655ed54ee09f8018029aedad9dde797bd", "html_url": "https://github.com/rust-lang/rust/commit/3f25c5c655ed54ee09f8018029aedad9dde797bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f25c5c655ed54ee09f8018029aedad9dde797bd/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a8f2004a6c8af34acac65558c13c500c301ac07", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a8f2004a6c8af34acac65558c13c500c301ac07", "html_url": "https://github.com/rust-lang/rust/commit/4a8f2004a6c8af34acac65558c13c500c301ac07"}, {"sha": "5aa45071db5d00137702e8dbde4af943dcff5de0", "url": "https://api.github.com/repos/rust-lang/rust/commits/5aa45071db5d00137702e8dbde4af943dcff5de0", "html_url": "https://github.com/rust-lang/rust/commit/5aa45071db5d00137702e8dbde4af943dcff5de0"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "ace0fbc821a27764e19b3a0c5fc7a4b06cc971d6", "filename": "src/doc/book/dining-philosophers.md", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3f25c5c655ed54ee09f8018029aedad9dde797bd/src%2Fdoc%2Fbook%2Fdining-philosophers.md", "raw_url": "https://github.com/rust-lang/rust/raw/3f25c5c655ed54ee09f8018029aedad9dde797bd/src%2Fdoc%2Fbook%2Fdining-philosophers.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fdining-philosophers.md?ref=3f25c5c655ed54ee09f8018029aedad9dde797bd", "patch": "@@ -45,8 +45,17 @@ Now, let\u2019s imagine this sequence of events:\n 6. ... ? All the forks are taken, but nobody can eat!\n \n There are different ways to solve this problem. We\u2019ll get to our solution in\n-the tutorial itself. For now, let\u2019s get started modeling the problem itself.\n-We\u2019ll start with the philosophers:\n+the tutorial itself. For now, let\u2019s get started and create a new project with\n+`cargo`:\n+\n+```bash\n+$ cd ~/projects\n+$ cargo new dining_philosophers --bin\n+$ cd dining_philosophers\n+```\n+\n+Now we can start modeling the problem itself. We\u2019ll start with the philosophers\n+in `src/main.rs`:\n \n ```rust\n struct Philosopher {"}]}