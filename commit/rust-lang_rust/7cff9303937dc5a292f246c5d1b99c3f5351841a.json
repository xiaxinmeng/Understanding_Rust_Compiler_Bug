{"sha": "7cff9303937dc5a292f246c5d1b99c3f5351841a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjZmY5MzAzOTM3ZGM1YTI5MmYyNDZjNWQxYjk5YzNmNTM1MTg0MWE=", "commit": {"author": {"name": "elkowar", "email": "5300871+elkowar@users.noreply.github.com", "date": "2021-08-21T09:11:27Z"}, "committer": {"name": "elkowar", "email": "5300871+elkowar@users.noreply.github.com", "date": "2021-08-21T09:11:27Z"}, "message": "Use NameClass::classify to check for ConstReference", "tree": {"sha": "b74f1e922bc6979bb14bd8634faf00686de05fc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b74f1e922bc6979bb14bd8634faf00686de05fc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cff9303937dc5a292f246c5d1b99c3f5351841a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEtViXQSiCDLRzvZgH4yGtcbHR8n8FAmEgwz8ACgkQ4yGtcbHR\n8n/snAv/VRPKZnb6tY8xNPuaXnojh25GIs+taLi6UYUm2B87sIo0hOGOPggauoTD\nJApQ/JMjmmTl+ckS4Y2dRTujXAl2aPQoqWaIKkVDXNplSq9AtvRRUlfYxEde9Yju\nYKRjOd8puVfr2KmvW0DHpSAhzmP3HUad+oLrT5LnW8i+HdcTB/VhoaIbjBWPR6nK\noIO+bW35WqP08TW+zx5PVnFQ4rVtLlujxqwlNiRH4VJqs+NdaSzGlRzcNG4ULH7O\n2VhSdWh1FXjvKPrK2POMcqy46tOrA/NtyaGEVBWO1vudBsj5pZtLm85umFCagENX\no4vJnBFGNaswX5ucaD4nQhcYz+bXBsa2JGDCMCE7PPNhwjcD0fLC01fS/NyxUSWx\nXnkSJAyNRB0kLZiTFBA4MH1GYL1lwXExyFuIthpHR32Gxjrw6CwpmwP4vUSJ/EDN\n8oVsu4qvsP0cpdK0IVHE7L8B/u5uR6FaenXR3IT3mxhOVydTlpDtrXpXtvLCfFHF\nWjXKx3mm\n=bJ8k\n-----END PGP SIGNATURE-----", "payload": "tree b74f1e922bc6979bb14bd8634faf00686de05fc6\nparent 75f07012111972dcf38900b2d4347646fb89b75b\nauthor elkowar <5300871+elkowar@users.noreply.github.com> 1629537087 +0200\ncommitter elkowar <5300871+elkowar@users.noreply.github.com> 1629537087 +0200\n\nUse NameClass::classify to check for ConstReference\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cff9303937dc5a292f246c5d1b99c3f5351841a", "html_url": "https://github.com/rust-lang/rust/commit/7cff9303937dc5a292f246c5d1b99c3f5351841a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cff9303937dc5a292f246c5d1b99c3f5351841a/comments", "author": {"login": "elkowar", "id": 5300871, "node_id": "MDQ6VXNlcjUzMDA4NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/5300871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elkowar", "html_url": "https://github.com/elkowar", "followers_url": "https://api.github.com/users/elkowar/followers", "following_url": "https://api.github.com/users/elkowar/following{/other_user}", "gists_url": "https://api.github.com/users/elkowar/gists{/gist_id}", "starred_url": "https://api.github.com/users/elkowar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elkowar/subscriptions", "organizations_url": "https://api.github.com/users/elkowar/orgs", "repos_url": "https://api.github.com/users/elkowar/repos", "events_url": "https://api.github.com/users/elkowar/events{/privacy}", "received_events_url": "https://api.github.com/users/elkowar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "elkowar", "id": 5300871, "node_id": "MDQ6VXNlcjUzMDA4NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/5300871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elkowar", "html_url": "https://github.com/elkowar", "followers_url": "https://api.github.com/users/elkowar/followers", "following_url": "https://api.github.com/users/elkowar/following{/other_user}", "gists_url": "https://api.github.com/users/elkowar/gists{/gist_id}", "starred_url": "https://api.github.com/users/elkowar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elkowar/subscriptions", "organizations_url": "https://api.github.com/users/elkowar/orgs", "repos_url": "https://api.github.com/users/elkowar/repos", "events_url": "https://api.github.com/users/elkowar/events{/privacy}", "received_events_url": "https://api.github.com/users/elkowar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75f07012111972dcf38900b2d4347646fb89b75b", "url": "https://api.github.com/repos/rust-lang/rust/commits/75f07012111972dcf38900b2d4347646fb89b75b", "html_url": "https://github.com/rust-lang/rust/commit/75f07012111972dcf38900b2d4347646fb89b75b"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "43e8ad1c128649ab9709884256ef81ed0c6150b0", "filename": "crates/ide_assists/src/handlers/replace_if_let_with_match.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7cff9303937dc5a292f246c5d1b99c3f5351841a/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cff9303937dc5a292f246c5d1b99c3f5351841a/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs?ref=7cff9303937dc5a292f246c5d1b99c3f5351841a", "patch": "@@ -1,12 +1,12 @@\n use std::iter::{self, successors};\n \n use either::Either;\n-use ide_db::{ty_filter::TryEnum, RootDatabase};\n+use ide_db::{defs::NameClass, ty_filter::TryEnum, RootDatabase};\n use syntax::{\n     ast::{\n         self,\n         edit::{AstNodeEdit, IndentLevel},\n-        make,\n+        make, NameOwner,\n     },\n     AstNode,\n };\n@@ -237,7 +237,7 @@ fn pick_pattern_and_expr_order(\n         (ast::Pat::WildcardPat(_), _) => return None,\n         (pat, _) if is_empty_expr(&expr2) => (pat, expr, expr2),\n         (_, pat) if is_empty_expr(&expr) => (pat, expr2, expr),\n-        (pat, pat2) => match (binds_name(&pat), binds_name(&pat2)) {\n+        (pat, pat2) => match (binds_name(sema, &pat), binds_name(sema, &pat2)) {\n             (true, true) => return None,\n             (true, false) => (pat, expr, expr2),\n             (false, true) => (pat2, expr2, expr),\n@@ -259,11 +259,14 @@ fn is_empty_expr(expr: &ast::Expr) -> bool {\n     }\n }\n \n-fn binds_name(pat: &ast::Pat) -> bool {\n-    let binds_name_v = |pat| binds_name(&pat);\n+fn binds_name(sema: &hir::Semantics<RootDatabase>, pat: &ast::Pat) -> bool {\n+    let binds_name_v = |pat| binds_name(&sema, &pat);\n     match pat {\n         ast::Pat::IdentPat(pat) => {\n-            pat.to_string().starts_with(|c: char| c.is_lowercase() && c != '_')\n+            match pat.name().and_then(|name| NameClass::classify(sema, &name)) {\n+                Some(NameClass::ConstReference(_)) => false,\n+                _ => true,\n+            }\n         }\n         ast::Pat::MacroPat(_) => true,\n         ast::Pat::OrPat(pat) => pat.pats().any(binds_name_v),"}]}