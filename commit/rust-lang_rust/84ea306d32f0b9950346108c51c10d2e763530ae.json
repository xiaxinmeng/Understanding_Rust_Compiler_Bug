{"sha": "84ea306d32f0b9950346108c51c10d2e763530ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0ZWEzMDZkMzJmMGI5OTUwMzQ2MTA4YzUxYzEwZDJlNzYzNTMwYWU=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-17T16:08:10Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-03-18T23:23:53Z"}, "message": "Remove unit tests", "tree": {"sha": "fde3f99488995e38677414709b4067231f172736", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fde3f99488995e38677414709b4067231f172736"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84ea306d32f0b9950346108c51c10d2e763530ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84ea306d32f0b9950346108c51c10d2e763530ae", "html_url": "https://github.com/rust-lang/rust/commit/84ea306d32f0b9950346108c51c10d2e763530ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84ea306d32f0b9950346108c51c10d2e763530ae/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9701d8e189ba97471062147e045e64bba783eb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9701d8e189ba97471062147e045e64bba783eb2", "html_url": "https://github.com/rust-lang/rust/commit/c9701d8e189ba97471062147e045e64bba783eb2"}], "stats": {"total": 47, "additions": 0, "deletions": 47}, "files": [{"sha": "1b26c61a820b6e7232f7741f9be5b783094607af", "filename": "src/macros.rs", "status": "modified", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/84ea306d32f0b9950346108c51c10d2e763530ae/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84ea306d32f0b9950346108c51c10d2e763530ae/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=84ea306d32f0b9950346108c51c10d2e763530ae", "patch": "@@ -957,50 +957,3 @@ fn format_lazy_static(context: &RewriteContext, shape: Shape, ts: &TokenStream)\n \n     Some(result)\n }\n-\n-#[cfg(test)]\n-mod test {\n-    use super::*;\n-    use syntax;\n-    use syntax::parse::{parse_stream_from_source_str, ParseSess};\n-    use syntax::codemap::{FileName, FilePathMapping};\n-\n-    fn format_macro_args_str(s: &str) -> String {\n-        let mut result = String::new();\n-        syntax::with_globals(|| {\n-            let input = parse_stream_from_source_str(\n-                FileName::Custom(\"stdin\".to_owned()),\n-                s.to_owned(),\n-                &ParseSess::new(FilePathMapping::empty()),\n-                None,\n-            );\n-            let shape = Shape {\n-                width: 100,\n-                indent: Indent::empty(),\n-                offset: 0,\n-            };\n-            result = format_macro_args(input.into(), shape).unwrap();\n-        });\n-        result\n-    }\n-\n-    #[test]\n-    fn test_format_macro_args() {\n-        assert_eq!(format_macro_args_str(\"\"), \"\".to_owned());\n-        assert_eq!(format_macro_args_str(\"$ x : ident\"), \"$x: ident\".to_owned());\n-        assert_eq!(\n-            format_macro_args_str(\"$ m1 : ident , $ m2 : ident , $ x : ident\"),\n-            \"$m1: ident, $m2: ident, $x: ident\".to_owned()\n-        );\n-        assert_eq!(\n-            format_macro_args_str(\"$($beginning:ident),*;$middle:ident;$($end:ident),*\"),\n-            \"$($beginning: ident),*; $middle: ident; $($end: ident),*\".to_owned()\n-        );\n-        assert_eq!(\n-            format_macro_args_str(\n-                \"$ name : ident ( $ ( $ dol : tt $ var : ident ) * ) $ ( $ body : tt ) *\"\n-            ),\n-            \"$name: ident($($dol: tt $var: ident)*) $($body: tt)*\".to_owned()\n-        );\n-    }\n-}"}]}