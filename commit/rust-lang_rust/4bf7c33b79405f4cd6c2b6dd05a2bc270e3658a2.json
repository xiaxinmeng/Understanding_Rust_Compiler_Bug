{"sha": "4bf7c33b79405f4cd6c2b6dd05a2bc270e3658a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiZjdjMzNiNzk0MDVmNGNkNmMyYjZkZDA1YTJiYzI3MGUzNjU4YTI=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-08T09:44:40Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-12T09:29:53Z"}, "message": "Fix rustdoc", "tree": {"sha": "ebf6c62f53cb8b2f78e9c7ab0cce0eeceefa3e4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebf6c62f53cb8b2f78e9c7ab0cce0eeceefa3e4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bf7c33b79405f4cd6c2b6dd05a2bc270e3658a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bf7c33b79405f4cd6c2b6dd05a2bc270e3658a2", "html_url": "https://github.com/rust-lang/rust/commit/4bf7c33b79405f4cd6c2b6dd05a2bc270e3658a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bf7c33b79405f4cd6c2b6dd05a2bc270e3658a2/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1d89266e5f96a2232c7202bf812dee1f845ae02", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1d89266e5f96a2232c7202bf812dee1f845ae02", "html_url": "https://github.com/rust-lang/rust/commit/a1d89266e5f96a2232c7202bf812dee1f845ae02"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "471ba6345e248ed002112873c40bb9bbd54ab384", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4bf7c33b79405f4cd6c2b6dd05a2bc270e3658a2/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bf7c33b79405f4cd6c2b6dd05a2bc270e3658a2/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=4bf7c33b79405f4cd6c2b6dd05a2bc270e3658a2", "patch": "@@ -243,7 +243,7 @@ fn look_for_tests<'a, 'tcx: 'a, 'rcx: 'a, 'cstore: 'rcx>(\n         if tests.found_tests == 0 {\n             let mut diag = cx.tcx.struct_span_lint_node(\n                 lint::builtin::MISSING_DOC_CODE_EXAMPLES,\n-                NodeId::new(0),\n+                NodeId::from_u32(0),\n                 span_of_attrs(&item.attrs),\n                 \"Missing code example in this documentation\");\n             diag.emit();\n@@ -281,14 +281,14 @@ impl<'a, 'tcx, 'rcx, 'cstore> DocFolder for LinkCollector<'a, 'tcx, 'rcx, 'cstor\n         let current_item = match item.inner {\n             ModuleItem(..) => {\n                 if item.attrs.inner_docs {\n-                    if item_node_id.unwrap() != NodeId::new(0) {\n+                    if item_node_id.unwrap() != NodeId::from_u32(0) {\n                         item.name.clone()\n                     } else {\n                         None\n                     }\n                 } else {\n                     match parent_node.or(self.mod_ids.last().cloned()) {\n-                        Some(parent) if parent != NodeId::new(0) => {\n+                        Some(parent) if parent != NodeId::from_u32(0) => {\n                             //FIXME: can we pull the parent module's name from elsewhere?\n                             Some(self.cx.tcx.hir.name(parent).to_string())\n                         }\n@@ -538,13 +538,13 @@ fn resolution_failure(\n             );\n \n             diag = cx.tcx.struct_span_lint_node(lint::builtin::INTRA_DOC_LINK_RESOLUTION_FAILURE,\n-                                                NodeId::new(0),\n+                                                NodeId::from_u32(0),\n                                                 sp,\n                                                 &msg);\n             diag.span_label(sp, \"cannot be resolved, ignoring\");\n         } else {\n             diag = cx.tcx.struct_span_lint_node(lint::builtin::INTRA_DOC_LINK_RESOLUTION_FAILURE,\n-                                                NodeId::new(0),\n+                                                NodeId::from_u32(0),\n                                                 sp,\n                                                 &msg);\n \n@@ -564,7 +564,7 @@ fn resolution_failure(\n         diag\n     } else {\n         cx.tcx.struct_span_lint_node(lint::builtin::INTRA_DOC_LINK_RESOLUTION_FAILURE,\n-                                     NodeId::new(0),\n+                                     NodeId::from_u32(0),\n                                      sp,\n                                      &msg)\n     };"}]}