{"sha": "35d77c17101852d17ebd27434c09b3652689e5c6", "node_id": "C_kwDOAAsO6NoAKDM1ZDc3YzE3MTAxODUyZDE3ZWJkMjc0MzRjMDliMzY1MjY4OWU1YzY", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-05-06T15:43:50Z"}, "committer": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-05-06T15:43:50Z"}, "message": "Also suggest calling constructors for external DefIds", "tree": {"sha": "183355d2ad8091f0fa5f17d49601e9b95e79c0e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/183355d2ad8091f0fa5f17d49601e9b95e79c0e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35d77c17101852d17ebd27434c09b3652689e5c6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEClCZYSKPPkQPouAvN5zu/dY+XdcFAmJ1QjYACgkQN5zu/dY+\nXde4rxAAtgMEtSDUJoKV12EMcU6eT8p8aRaLUtWuaD9MR9I5nMjY4rbjXxKLISaA\nZpkYKYFo/bjEatvD0l/qf+uYcnumlMPLctXrN6F8AekooItAE2yhR1De+cgn79/j\nbKJhIddf5XbqIYIbaFtabHmJqx9AownH8mMy9t/Tfq1TywfVlESdM666NhDScj9X\nzrue5F+pDPdi9kofKXet5NlKohCstSXfSWkBVG/LI2d97rMH5n2QmxGRvIPB7Hg/\nVtP2kDqNDpRD71D3MtSNcs8VExUu7Syp12ehiTZXsgEOzAVBbShI8MsEgcEKSOFS\nU1TxCsCOTWM54vzTkx0UFv5oF6SwrRe8QhiW2IidUzty+6z5zkTWp7zA6gNg4D+Y\n88+xdNL9aQmi1+OHiMiq8z2x/a3Nla7NrOWmhs2X1yT1QDpAvCZLrfIc/gKCE3X+\n26StPFQT/S19FzVwYLJrsi9QaioC5MaEfCdc/Zmox6So7Pe/Yn4FGqSixr0Vu0JK\nFmB38dHvwPqf7eHmNG+FOkOqABDqCgwQI1VHnFfTniVrSPgzED5idXVVOFAse64L\ny2/bGpKotxVqSz5J2FLLc1IlD6dWS/60y1M9bsEbzsfFGT4v7DJETNcECAyQpm/3\n45SkLqFklNLtE8XfVjIoeQfI5bfNBg4K7S6KiENvqMNwi99Wj7I=\n=zPqV\n-----END PGP SIGNATURE-----", "payload": "tree 183355d2ad8091f0fa5f17d49601e9b95e79c0e7\nparent 436c0e129ca535d249fbf8d61d3b9334e5cd6767\nauthor Yuki Okushi <jtitor@2k36.org> 1651851830 +0900\ncommitter Yuki Okushi <jtitor@2k36.org> 1651851830 +0900\n\nAlso suggest calling constructors for external DefIds\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35d77c17101852d17ebd27434c09b3652689e5c6", "html_url": "https://github.com/rust-lang/rust/commit/35d77c17101852d17ebd27434c09b3652689e5c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35d77c17101852d17ebd27434c09b3652689e5c6/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "436c0e129ca535d249fbf8d61d3b9334e5cd6767", "url": "https://api.github.com/repos/rust-lang/rust/commits/436c0e129ca535d249fbf8d61d3b9334e5cd6767", "html_url": "https://github.com/rust-lang/rust/commit/436c0e129ca535d249fbf8d61d3b9334e5cd6767"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "294a42a114804c73cc83a1bbba13c15f56db5487", "filename": "compiler/rustc_typeck/src/check/method/suggest.rs", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/35d77c17101852d17ebd27434c09b3652689e5c6/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35d77c17101852d17ebd27434c09b3652689e5c6/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=35d77c17101852d17ebd27434c09b3652689e5c6", "patch": "@@ -367,24 +367,34 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n                 if self.is_fn_ty(rcvr_ty, span) {\n                     if let SelfSource::MethodCall(expr) = source {\n-                        let suggest = if let ty::FnDef(def_id, _) = rcvr_ty.kind() && let Some(local_id) = def_id.as_local() {\n-                            let hir_id = tcx.hir().local_def_id_to_hir_id(local_id);\n-                            let node = tcx.hir().get(hir_id);\n-                            let fields = node.tuple_fields();\n-\n-                            if let Some(fields) = fields\n-                                && let Some(DefKind::Ctor(of, _)) = self.tcx.opt_def_kind(local_id) {\n-                                    Some((fields, of))\n+                        let suggest = if let ty::FnDef(def_id, _) = rcvr_ty.kind() {\n+                            if let Some(local_id) = def_id.as_local() {\n+                                let hir_id = tcx.hir().local_def_id_to_hir_id(local_id);\n+                                let node = tcx.hir().get(hir_id);\n+                                let fields = node.tuple_fields();\n+                                if let Some(fields) = fields\n+                                    && let Some(DefKind::Ctor(of, _)) = self.tcx.opt_def_kind(local_id) {\n+                                        Some((fields.len(), of))\n+                                } else {\n+                                    None\n+                                }\n                             } else {\n-                                None\n+                                // The logic here isn't smart but `associated_item_def_ids`\n+                                // doesn't work nicely on local.\n+                                if let DefKind::Ctor(of, _) = tcx.def_kind(def_id) {\n+                                    let parent_def_id = tcx.parent(*def_id);\n+                                    Some((tcx.associated_item_def_ids(parent_def_id).len(), of))\n+                                } else {\n+                                    None\n+                                }\n                             }\n                         } else {\n                             None\n                         };\n \n                         // If the function is a tuple constructor, we recommend that they call it\n                         if let Some((fields, kind)) = suggest {\n-                            suggest_call_constructor(expr.span, kind, fields.len(), &mut err);\n+                            suggest_call_constructor(expr.span, kind, fields, &mut err);\n                         } else {\n                             // General case\n                             err.span_label("}, {"sha": "58c83a36a3bdc1c4998583ad5812a1bb8fc52d9c", "filename": "src/test/ui/typeck/issue-96738.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/35d77c17101852d17ebd27434c09b3652689e5c6/src%2Ftest%2Fui%2Ftypeck%2Fissue-96738.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35d77c17101852d17ebd27434c09b3652689e5c6/src%2Ftest%2Fui%2Ftypeck%2Fissue-96738.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-96738.stderr?ref=35d77c17101852d17ebd27434c09b3652689e5c6", "patch": "@@ -4,7 +4,12 @@ error[E0599]: no method named `nonexistent_method` found for fn item `fn(_) -> O\n LL |     Some.nonexistent_method();\n    |     ---- ^^^^^^^^^^^^^^^^^^ method not found in `fn(_) -> Option<_> {Option::<_>::Some}`\n    |     |\n-   |     this is a function, perhaps you wish to call it\n+   |     this is the constructor of an enum variant\n+   |\n+help: call the constructor\n+   |\n+LL |     (Some)(_).nonexistent_method();\n+   |     +    ++++\n \n error: aborting due to previous error\n "}]}