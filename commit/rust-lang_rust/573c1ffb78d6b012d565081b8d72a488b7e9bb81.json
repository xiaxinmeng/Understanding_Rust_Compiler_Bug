{"sha": "573c1ffb78d6b012d565081b8d72a488b7e9bb81", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3M2MxZmZiNzhkNmIwMTJkNTY1MDgxYjhkNzJhNDg4YjdlOWJiODE=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-12-11T12:19:16Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-12-11T12:19:16Z"}, "message": "Add a FIXME for mir build unreachable destination checking", "tree": {"sha": "33de24654581a205ec7d08098b84911eaf5f7c06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33de24654581a205ec7d08098b84911eaf5f7c06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/573c1ffb78d6b012d565081b8d72a488b7e9bb81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/573c1ffb78d6b012d565081b8d72a488b7e9bb81", "html_url": "https://github.com/rust-lang/rust/commit/573c1ffb78d6b012d565081b8d72a488b7e9bb81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/573c1ffb78d6b012d565081b8d72a488b7e9bb81/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19ea2d1c8b7c36f8b9006ce46f2b719cc122cd52", "url": "https://api.github.com/repos/rust-lang/rust/commits/19ea2d1c8b7c36f8b9006ce46f2b719cc122cd52", "html_url": "https://github.com/rust-lang/rust/commit/19ea2d1c8b7c36f8b9006ce46f2b719cc122cd52"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "146bf538306561f1859aa24a579d37e501642b14", "filename": "src/librustc_mir/build/expr/into.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/573c1ffb78d6b012d565081b8d72a488b7e9bb81/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/573c1ffb78d6b012d565081b8d72a488b7e9bb81/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs?ref=573c1ffb78d6b012d565081b8d72a488b7e9bb81", "patch": "@@ -330,12 +330,14 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n                             func: fun,\n                             args,\n                             cleanup: Some(cleanup),\n-                            destination:\n-                                if expr.ty.conservative_is_privately_uninhabited(this.hir.tcx()) {\n-                                    None\n-                                } else {\n-                                    Some((destination.clone(), success))\n-                                },\n+                            // FIXME(varkor): replace this with an uninhabitedness-based check.\n+                            // This requires getting access to the current module to call\n+                            // `tcx.is_ty_uninhabited_from`, which is currently tricky to do.\n+                            destination: if expr.ty.is_never() {\n+                                None\n+                            } else {\n+                                Some((destination.clone(), success))\n+                            },\n                             from_hir_call,\n                         },\n                     );"}]}