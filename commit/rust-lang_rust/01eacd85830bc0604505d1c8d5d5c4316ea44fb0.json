{"sha": "01eacd85830bc0604505d1c8d5d5c4316ea44fb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZWFjZDg1ODMwYmMwNjA0NTA1ZDFjOGQ1ZDVjNDMxNmVhNDRmYjA=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-25T08:49:01Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-25T08:49:01Z"}, "message": "Remove useless comment", "tree": {"sha": "aad0fcefc0672605af34d2533bdc37913afc4997", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aad0fcefc0672605af34d2533bdc37913afc4997"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01eacd85830bc0604505d1c8d5d5c4316ea44fb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01eacd85830bc0604505d1c8d5d5c4316ea44fb0", "html_url": "https://github.com/rust-lang/rust/commit/01eacd85830bc0604505d1c8d5d5c4316ea44fb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01eacd85830bc0604505d1c8d5d5c4316ea44fb0/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93974cb09e2670eb4debfb3a9081844ba21799f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/93974cb09e2670eb4debfb3a9081844ba21799f4", "html_url": "https://github.com/rust-lang/rust/commit/93974cb09e2670eb4debfb3a9081844ba21799f4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "205f8c5ad068caee0ab33b171f14b2aa715f0762", "filename": "src/librustc/infer/anon_types/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01eacd85830bc0604505d1c8d5d5c4316ea44fb0/src%2Flibrustc%2Finfer%2Fanon_types%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01eacd85830bc0604505d1c8d5d5c4316ea44fb0/src%2Flibrustc%2Finfer%2Fanon_types%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fanon_types%2Fmod.rs?ref=01eacd85830bc0604505d1c8d5d5c4316ea44fb0", "patch": "@@ -696,7 +696,7 @@ impl<'a, 'gcx, 'tcx> Instantiator<'a, 'gcx, 'tcx> {\n                             let anon_parent_node_id = tcx.hir.get_parent(anon_node_id);\n                             parent_def_id == tcx.hir.local_def_id(anon_parent_node_id)\n                         };\n-                        let in_definition_scope = match tcx.hir.find(anon_node_id) { // read recorded by `find`\n+                        let in_definition_scope = match tcx.hir.find(anon_node_id) {\n                             Some(hir::map::NodeItem(item)) => match item.node {\n                                 // impl trait\n                                 hir::ItemKind::Existential(hir::ExistTy {"}]}