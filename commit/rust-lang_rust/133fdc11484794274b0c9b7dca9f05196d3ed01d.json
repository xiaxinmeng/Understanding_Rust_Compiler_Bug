{"sha": "133fdc11484794274b0c9b7dca9f05196d3ed01d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzM2ZkYzExNDg0Nzk0Mjc0YjBjOWI3ZGNhOWYwNTE5NmQzZWQwMWQ=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-06-27T18:32:22Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-06-27T18:32:22Z"}, "message": "Remove unnecessary bounds checks in vec::push_all (issue #2719)\n\nDon't needlessly drop closures (issue #2603)", "tree": {"sha": "af16f2d23c7a2580178e35c24943db77a463ab3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af16f2d23c7a2580178e35c24943db77a463ab3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/133fdc11484794274b0c9b7dca9f05196d3ed01d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/133fdc11484794274b0c9b7dca9f05196d3ed01d", "html_url": "https://github.com/rust-lang/rust/commit/133fdc11484794274b0c9b7dca9f05196d3ed01d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/133fdc11484794274b0c9b7dca9f05196d3ed01d/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "404afcbb41898cf7f516f07cae3dc42e47bda46d", "url": "https://api.github.com/repos/rust-lang/rust/commits/404afcbb41898cf7f516f07cae3dc42e47bda46d", "html_url": "https://github.com/rust-lang/rust/commit/404afcbb41898cf7f516f07cae3dc42e47bda46d"}], "stats": {"total": 65, "additions": 51, "deletions": 14}, "files": [{"sha": "8f1ff7d1a01e21d87f969331b3194a879d3e931e", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/133fdc11484794274b0c9b7dca9f05196d3ed01d/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/133fdc11484794274b0c9b7dca9f05196d3ed01d/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=133fdc11484794274b0c9b7dca9f05196d3ed01d", "patch": "@@ -451,32 +451,30 @@ fn push_slow<T>(&v: [const T]/~, +initval: T) {\n     }\n }\n \n+// Unchecked vector indexing\n+#[inline(always)]\n+unsafe fn ref<T: copy>(v: [const T]/&, i: uint) -> T {\n+    unpack_slice(v) {|p, _len|\n+        *ptr::offset(p, i)\n+    }\n+}\n+\n #[inline(always)]\n fn push_all<T: copy>(&v: [const T]/~, rhs: [const T]/&) {\n     reserve(v, v.len() + rhs.len());\n \n     for uint::range(0u, rhs.len()) {|i|\n-        push(v, rhs[i]);\n+        push(v, unsafe { ref(rhs, i) })\n     }\n }\n \n // Appending\n #[inline(always)]\n pure fn append<T: copy>(lhs: [T]/&, rhs: [const T]/&) -> [T]/~ {\n     let mut v = []/~;\n-    let mut i = 0u;\n-    while i < lhs.len() {\n-        unsafe { // This is impure, but it appears pure to the caller.\n-            push(v, lhs[i]);\n-        }\n-        i += 1u;\n-    }\n-    i = 0u;\n-    while i < rhs.len() {\n-        unsafe { // This is impure, but it appears pure to the caller.\n-            push(v, rhs[i]);\n-        }\n-        i += 1u;\n+    unchecked {\n+        push_all(v, lhs);\n+        push_all(v, rhs);\n     }\n     ret v;\n }"}, {"sha": "26495e233fff6e5093e1ea338721f834560488f7", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/133fdc11484794274b0c9b7dca9f05196d3ed01d/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/133fdc11484794274b0c9b7dca9f05196d3ed01d/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=133fdc11484794274b0c9b7dca9f05196d3ed01d", "patch": "@@ -1234,6 +1234,12 @@ fn type_needs_drop(cx: ctxt, ty: t) -> bool {\n         }\n         accum\n       }\n+      ty_fn(fty) {\n+        alt fty.proto {\n+          proto_bare | proto_any | proto_block { false }\n+          _ { true }\n+        }\n+      }\n       _ { true }\n     };\n "}, {"sha": "9e1f88690d11bd50239804e5b1d2a207e8133566", "filename": "src/test/bench/core-std.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/133fdc11484794274b0c9b7dca9f05196d3ed01d/src%2Ftest%2Fbench%2Fcore-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/133fdc11484794274b0c9b7dca9f05196d3ed01d/src%2Ftest%2Fbench%2Fcore-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fcore-std.rs?ref=133fdc11484794274b0c9b7dca9f05196d3ed01d", "patch": "@@ -22,6 +22,8 @@ fn main(argv: [str]/~) {\n     #bench[shift_push];\n     #bench[read_line];\n     #bench[str_set];\n+    #bench[vec_append];\n+    #bench[vec_push_all];\n }\n \n fn run_test(name: str, test: fn()) {\n@@ -72,3 +74,34 @@ fn str_set() {\n         }\n     }\n }\n+\n+fn vec_append() {\n+    let r = rand::rng();\n+\n+    let mut v = []/~;\n+    for uint::range(0, 1500) {|i|\n+        let rv = vec::from_elem(r.gen_uint_range(0, i + 1), i);\n+        if r.gen_bool() {\n+            v += rv;\n+        }\n+        else {\n+            v = rv + v;\n+        }\n+    }\n+}\n+\n+fn vec_push_all() {\n+    let r = rand::rng();\n+\n+    let mut v = []/~;\n+    for uint::range(0, 1500) {|i|\n+        let mut rv = vec::from_elem(r.gen_uint_range(0, i + 1), i);\n+        if r.gen_bool() {\n+            vec::push_all(v, rv);\n+        }\n+        else {\n+            v <-> rv;\n+            vec::push_all(v, rv);\n+        }\n+    }\n+}"}]}