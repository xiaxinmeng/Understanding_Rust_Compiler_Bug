{"sha": "b8b898093cf2b37dfe5c192cbd7f1004073fde0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4Yjg5ODA5M2NmMmIzN2RmZTVjMTkyY2JkN2YxMDA0MDczZmRlMGU=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2017-02-09T11:09:36Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2017-02-09T11:09:36Z"}, "message": "Avoid unsafe unaligned loads in test.", "tree": {"sha": "da99883ed7e3a4ce02a8052be4cda7b3b137086f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da99883ed7e3a4ce02a8052be4cda7b3b137086f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8b898093cf2b37dfe5c192cbd7f1004073fde0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8b898093cf2b37dfe5c192cbd7f1004073fde0e", "html_url": "https://github.com/rust-lang/rust/commit/b8b898093cf2b37dfe5c192cbd7f1004073fde0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8b898093cf2b37dfe5c192cbd7f1004073fde0e/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10f6a5c4431e09d355a0ba319a630e02a1e38361", "url": "https://api.github.com/repos/rust-lang/rust/commits/10f6a5c4431e09d355a0ba319a630e02a1e38361", "html_url": "https://github.com/rust-lang/rust/commit/10f6a5c4431e09d355a0ba319a630e02a1e38361"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "c54cbe7bd6f45fb5a46d537e09a71934c0cecf02", "filename": "src/test/run-pass/mir_adt_construction.rs", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/b8b898093cf2b37dfe5c192cbd7f1004073fde0e/src%2Ftest%2Frun-pass%2Fmir_adt_construction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8b898093cf2b37dfe5c192cbd7f1004073fde0e/src%2Ftest%2Frun-pass%2Fmir_adt_construction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmir_adt_construction.rs?ref=b8b898093cf2b37dfe5c192cbd7f1004073fde0e", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use std::fmt;\n+\n #[repr(C)]\n enum CEnum {\n     Hello = 30,\n@@ -24,7 +26,6 @@ fn test1(c: CEnum) -> i32 {\n }\n \n #[repr(packed)]\n-#[derive(PartialEq, Debug)]\n struct Pakd {\n     a: u64,\n     b: u32,\n@@ -33,6 +34,36 @@ struct Pakd {\n     e: ()\n }\n \n+// It is unsafe to use #[derive(Debug)] on a packed struct because the code generated by the derive\n+// macro takes references to the fields instead of accessing them directly.\n+impl fmt::Debug for Pakd {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        // It's important that we load the fields into locals by-value here. This will do safe\n+        // unaligned loads into the locals, then pass references to the properly-aligned locals to\n+        // the formatting code.\n+        let Pakd { a, b, c, d, e } = *self;\n+        f.debug_struct(\"Pakd\")\n+            .field(\"a\", &a)\n+            .field(\"b\", &b)\n+            .field(\"c\", &c)\n+            .field(\"d\", &d)\n+            .field(\"e\", &e)\n+            .finish()\n+    }\n+}\n+\n+// It is unsafe to use #[derive(PartialEq)] on a packed struct because the code generated by the\n+// derive macro takes references to the fields instead of accessing them directly.\n+impl PartialEq for Pakd {\n+    fn eq(&self, other: &Pakd) -> bool {\n+        self.a == other.a &&\n+            self.b == other.b &&\n+            self.c == other.c &&\n+            self.d == other.d &&\n+            self.e == other.e\n+    }\n+}\n+\n impl Drop for Pakd {\n     fn drop(&mut self) {}\n }"}]}