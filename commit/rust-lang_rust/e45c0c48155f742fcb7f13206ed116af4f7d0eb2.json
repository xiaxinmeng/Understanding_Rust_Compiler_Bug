{"sha": "e45c0c48155f742fcb7f13206ed116af4f7d0eb2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0NWMwYzQ4MTU1Zjc0MmZjYjdmMTMyMDZlZDExNmFmNGY3ZDBlYjI=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-11T02:46:04Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-11T02:48:17Z"}, "message": "Rename error_on_unformatted_comments_or_strings to error_on_unformatted", "tree": {"sha": "e437c528effd2eea91f70112e2722661292af4d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e437c528effd2eea91f70112e2722661292af4d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e45c0c48155f742fcb7f13206ed116af4f7d0eb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e45c0c48155f742fcb7f13206ed116af4f7d0eb2", "html_url": "https://github.com/rust-lang/rust/commit/e45c0c48155f742fcb7f13206ed116af4f7d0eb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e45c0c48155f742fcb7f13206ed116af4f7d0eb2/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3ee7f3f06b8636ce3a26bf3c53242975bccc2de", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3ee7f3f06b8636ce3a26bf3c53242975bccc2de", "html_url": "https://github.com/rust-lang/rust/commit/d3ee7f3f06b8636ce3a26bf3c53242975bccc2de"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "aebd19d8e4bc04fa1eed745c6fa78a171bc15f52", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e45c0c48155f742fcb7f13206ed116af4f7d0eb2/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e45c0c48155f742fcb7f13206ed116af4f7d0eb2/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=e45c0c48155f742fcb7f13206ed116af4f7d0eb2", "patch": "@@ -117,7 +117,7 @@ impl CliOptions {\n         config.set().verbose(self.verbose);\n         config.set().file_lines(self.file_lines);\n         config.set().unstable_features(self.unstable_features);\n-        config.set().error_on_unformatted_comments_or_strings(self.error_on_unformatted);\n+        config.set().error_on_unformatted(self.error_on_unformatted);\n         if let Some(write_mode) = self.write_mode {\n             config.set().write_mode(write_mode);\n         }"}, {"sha": "ed44df022a944b0c119355db1c614b189ff73822", "filename": "src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e45c0c48155f742fcb7f13206ed116af4f7d0eb2/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e45c0c48155f742fcb7f13206ed116af4f7d0eb2/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=e45c0c48155f742fcb7f13206ed116af4f7d0eb2", "patch": "@@ -682,7 +682,7 @@ create_config! {\n     disable_all_formatting: bool, false, false, \"Don't reformat anything\";\n     skip_children: bool, false, false, \"Don't reformat out of line modules\";\n     error_on_line_overflow: bool, true, false, \"Error if unable to get all lines within max_width\";\n-    error_on_unformatted_comments_or_strings: bool, false, false,\n+    error_on_unformatted: bool, false, false,\n         \"Error if unable to get comments or string literals within max_width, \\\n          or they are left with trailing whitespaces\";\n     report_todo: ReportTactic, ReportTactic::Never, false,"}, {"sha": "2c867539881ca13afb7bbaa808f08ce57722649e", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e45c0c48155f742fcb7f13206ed116af4f7d0eb2/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e45c0c48155f742fcb7f13206ed116af4f7d0eb2/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=e45c0c48155f742fcb7f13206ed116af4f7d0eb2", "patch": "@@ -120,7 +120,7 @@ impl FormattingError {\n \n     fn msg_suffix(&self) -> &str {\n         if self.is_comment || self.is_string {\n-            \"set `error_on_unformatted_comments_or_strings = false` to suppress \\\n+            \"set `error_on_unformatted = false` to suppress \\\n              the warning against comments or string literals\\n\"\n         } else {\n             \"\"\n@@ -372,7 +372,7 @@ fn should_report_error(\n     error_kind: ErrorKind,\n ) -> bool {\n     let allow_error_report = if char_kind.is_comment() || is_string {\n-        config.error_on_unformatted_comments_or_strings()\n+        config.error_on_unformatted()\n     } else {\n         true\n     };"}, {"sha": "6a78374e2a26964493c983891092048174b34540", "filename": "tests/target/configs-error_on_unformatted-false.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e45c0c48155f742fcb7f13206ed116af4f7d0eb2/tests%2Ftarget%2Fconfigs-error_on_unformatted-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e45c0c48155f742fcb7f13206ed116af4f7d0eb2/tests%2Ftarget%2Fconfigs-error_on_unformatted-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-error_on_unformatted-false.rs?ref=e45c0c48155f742fcb7f13206ed116af4f7d0eb2", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-error_on_unformatted_comments_or_strings: false\n+// rustfmt-error_on_unformatted: false\n // Error on line overflow comment or string literals.\n \n // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "previous_filename": "tests/target/configs-error_on_unformatted_comments_or_strings-false.rs"}]}