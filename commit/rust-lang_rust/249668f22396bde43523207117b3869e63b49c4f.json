{"sha": "249668f22396bde43523207117b3869e63b49c4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0OTY2OGYyMjM5NmJkZTQzNTIzMjA3MTE3YjM4NjllNjNiNDljNGY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-07T22:59:44Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-07T23:53:21Z"}, "message": "Remove module keyword", "tree": {"sha": "e2fa1ce33c4609eff693800bf338d266f15f3b57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2fa1ce33c4609eff693800bf338d266f15f3b57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/249668f22396bde43523207117b3869e63b49c4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/249668f22396bde43523207117b3869e63b49c4f", "html_url": "https://github.com/rust-lang/rust/commit/249668f22396bde43523207117b3869e63b49c4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/249668f22396bde43523207117b3869e63b49c4f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0eae8f1c19a051ab750383e479f979c32d4598a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0eae8f1c19a051ab750383e479f979c32d4598a", "html_url": "https://github.com/rust-lang/rust/commit/f0eae8f1c19a051ab750383e479f979c32d4598a"}], "stats": {"total": 30, "additions": 9, "deletions": 21}, "files": [{"sha": "175247bfaf3a1f876092abf99d30b25e6d2a76a2", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/249668f22396bde43523207117b3869e63b49c4f/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/249668f22396bde43523207117b3869e63b49c4f/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=249668f22396bde43523207117b3869e63b49c4f", "patch": "@@ -2936,9 +2936,6 @@ struct parser {\n         if self.is_keyword(~\"mod\") {\n             must_be_named_mod = true;\n             self.expect_keyword(~\"mod\");\n-        } else if self.is_keyword(~\"module\") {\n-            must_be_named_mod = true;\n-            self.expect_keyword(~\"module\");\n         } else if self.token != token::LBRACE {\n             self.span_fatal(copy self.span,\n                             fmt!(\"expected `{` or `mod` but found %s\",\n@@ -3244,8 +3241,7 @@ struct parser {\n             }\n             return self.parse_item_foreign_mod(lo, visibility, attrs,\n                                                items_allowed);\n-        } else if items_allowed && (self.eat_keyword(~\"mod\") ||\n-                                    self.eat_keyword(~\"module\")) {\n+        } else if items_allowed && self.eat_keyword(~\"mod\") {\n             let (ident, item_, extra_attrs) = self.parse_item_mod();\n             return iovi_item(self.mk_item(lo, self.last_span.hi, ident, item_,\n                                           visibility,\n@@ -3557,14 +3553,10 @@ struct parser {\n         let expect_mod = vec::len(outer_attrs) > 0u;\n \n         let lo = self.span.lo;\n-        if expect_mod || self.is_keyword(~\"mod\") ||\n-            self.is_keyword(~\"module\") {\n+        if expect_mod || self.is_keyword(~\"mod\") {\n+\n+            self.expect_keyword(~\"mod\");\n \n-            if self.is_keyword(~\"mod\") {\n-                self.expect_keyword(~\"mod\");\n-            } else {\n-                self.expect_keyword(~\"module\");\n-            }\n             let id = self.parse_ident();\n             match self.token {\n               // mod x = \"foo.rs\";\n@@ -3603,11 +3595,7 @@ struct parser {\n         // accept seeing the terminator next, so if we do see it then fail the\n         // same way parse_crate_directive would\n         if vec::len(first_outer_attr) > 0u && self.token == term {\n-            if self.is_keyword(~\"mod\") {\n-                self.expect_keyword(~\"mod\");\n-            } else {\n-                self.expect_keyword(~\"module\");\n-            }\n+            self.expect_keyword(~\"mod\");\n         }\n \n         let mut cdirs: ~[@crate_directive] = ~[];"}, {"sha": "e258f9a2bdd45abae469d13b5d8cd04798f2b687", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/249668f22396bde43523207117b3869e63b49c4f/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/249668f22396bde43523207117b3869e63b49c4f/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=249668f22396bde43523207117b3869e63b49c4f", "patch": "@@ -421,7 +421,7 @@ fn restricted_keyword_table() -> hashmap<~str, ()> {\n         ~\"fail\", ~\"false\", ~\"fn\", ~\"for\",\n         ~\"if\", ~\"impl\", ~\"import\",\n         ~\"let\", ~\"log\", ~\"loop\",\n-        ~\"match\", ~\"mod\", ~\"module\", ~\"move\", ~\"mut\",\n+        ~\"match\", ~\"mod\", ~\"move\", ~\"mut\",\n         ~\"owned\",\n         ~\"pure\",\n         ~\"ref\", ~\"return\","}, {"sha": "0a86c40a3afa75245753510b73f0a6d132d97f08", "filename": "src/test/compile-fail/attr-bad-crate-attr.rc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/249668f22396bde43523207117b3869e63b49c4f/src%2Ftest%2Fcompile-fail%2Fattr-bad-crate-attr.rc", "raw_url": "https://github.com/rust-lang/rust/raw/249668f22396bde43523207117b3869e63b49c4f/src%2Ftest%2Fcompile-fail%2Fattr-bad-crate-attr.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fattr-bad-crate-attr.rc?ref=249668f22396bde43523207117b3869e63b49c4f", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: expected `module`\n+// error-pattern: expected `mod`\n \n #[attr = \"val\"];\n #[attr = \"val\"] // Unterminated"}, {"sha": "307c629d51f4b3420bbcdd044220579f0eff10a6", "filename": "src/test/compile-fail/issue-3099-b.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/249668f22396bde43523207117b3869e63b49c4f/src%2Ftest%2Fcompile-fail%2Fissue-3099-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/249668f22396bde43523207117b3869e63b49c4f/src%2Ftest%2Fcompile-fail%2Fissue-3099-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3099-b.rs?ref=249668f22396bde43523207117b3869e63b49c4f", "patch": "@@ -1,5 +1,5 @@\n-module a {}\n+mod a {}\n \n-module a {} //~ ERROR Duplicate definition of module a\n+mod a {} //~ ERROR Duplicate definition of module a\n \n fn main() {}"}]}