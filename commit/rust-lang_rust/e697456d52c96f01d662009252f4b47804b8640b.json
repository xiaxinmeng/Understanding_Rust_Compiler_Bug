{"sha": "e697456d52c96f01d662009252f4b47804b8640b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2OTc0NTZkNTJjOTZmMDFkNjYyMDA5MjUyZjRiNDc4MDRiODY0MGI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-03-15T22:28:03Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-03-15T22:40:43Z"}, "message": "Associate FIXMEs with issue numbers (comments only)", "tree": {"sha": "47c3c27ca89a43c61e0f127e8b3e98a9b32ccd5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47c3c27ca89a43c61e0f127e8b3e98a9b32ccd5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e697456d52c96f01d662009252f4b47804b8640b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e697456d52c96f01d662009252f4b47804b8640b", "html_url": "https://github.com/rust-lang/rust/commit/e697456d52c96f01d662009252f4b47804b8640b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e697456d52c96f01d662009252f4b47804b8640b/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f68206a73977507bad9a17f6c5722673c5e7f8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f68206a73977507bad9a17f6c5722673c5e7f8b", "html_url": "https://github.com/rust-lang/rust/commit/5f68206a73977507bad9a17f6c5722673c5e7f8b"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "5a2050bf1dab639ebc12219015d0dec7b490abf9", "filename": "src/compiletest/header.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e697456d52c96f01d662009252f4b47804b8640b/src%2Fcompiletest%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e697456d52c96f01d662009252f4b47804b8640b/src%2Fcompiletest%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fheader.rs?ref=e697456d52c96f01d662009252f4b47804b8640b", "patch": "@@ -56,6 +56,7 @@ fn is_test_ignored(config: config, testfile: str) -> bool {\n     let found = false;\n     iter_header(testfile) {|ln|\n         // FIXME: Can't return or break from iterator\n+        // (Fix when Issue #1619 is resolved)\n         found = found || parse_name_directive(ln, \"xfail-test\");\n         found = found || parse_name_directive(ln, xfail_target());\n         if (config.mode == common::mode_pretty) {"}, {"sha": "3af00ea5627650a125effec1986349decd0e8e08", "filename": "src/libcore/cmath.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e697456d52c96f01d662009252f4b47804b8640b/src%2Flibcore%2Fcmath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e697456d52c96f01d662009252f4b47804b8640b/src%2Flibcore%2Fcmath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmath.rs?ref=e697456d52c96f01d662009252f4b47804b8640b", "patch": "@@ -1,6 +1,7 @@\n export c_float;\n export c_double;\n \n+// uncomment once #1433 is fixed\n // FIXME export c_float_math_consts;\n // FIXME export c_double_math_consts;\n \n@@ -70,6 +71,7 @@ native mod c_double {\n     pure fn modf(n: c_double, &iptr: c_double) -> c_double;\n     pure fn pow(n: c_double, e: c_double) -> c_double;\n // FIXME enable when rounding modes become available\n+// (See Issue #1379)\n //    pure fn rint(n: c_double) -> c_double;\n     pure fn round(n: c_double) -> c_double;\n     // rename: for consistency with logradix\n@@ -152,6 +154,7 @@ native mod c_float {\n                                       &iptr: c_float) -> c_float;\n     #[link_name=\"powf\"] pure fn pow(n: c_float, e: c_float) -> c_float;\n // FIXME enable when rounding modes become available\n+// (See Issue #1379)\n //    #[link_name=\"rintf\"] pure fn rint(n: c_float) -> c_float;\n     #[link_name=\"roundf\"] pure fn round(n: c_float) -> c_float;\n     #[link_name=\"scalbnf\"] pure fn ldexp_radix(n: c_float, i: c_int)\n@@ -167,7 +170,7 @@ native mod c_float {\n \n // PORT check these by running src/etc/machconsts.c for your architecture\n \n-// FIXME obtain machine float/math constants automatically\n+// FIXME obtain machine float/math constants automatically (Issue #1986)\n \n mod c_float_targ_consts {\n     const radix: uint = 2u;\n@@ -178,6 +181,7 @@ mod c_float_targ_consts {\n     const min_10_exp: int = -37;\n     const max_10_exp: int = 38;\n     // FIXME this is wrong! replace with hexadecimal (%a) constants below\n+    // (see Issue #1433)\n     const min_value: f32 = 1.175494e-38_f32;\n     const max_value: f32 = 3.402823e+38_f32;\n     const epsilon: f32 = 0.000000_f32;\n@@ -192,14 +196,15 @@ mod c_double_targ_consts {\n     const min_10_exp: int = -307;\n     const max_10_exp: int = 308;\n     // FIXME this is wrong! replace with hexadecimal (%a) constants below\n+    // (see Issue #1433)\n     const min_value: f64 = 2.225074e-308_f64;\n     const max_value: f64 = 1.797693e+308_f64;\n     const epsilon: f64 = 2.220446e-16_f64;\n }\n \n /*\n \n-FIXME use these once they can be parsed\n+FIXME use these once they can be parsed (see Issue #1433)\n \n mod c_float_math_consts {\n     const pi: c_float = 0x1.921fb6p+1_f32;"}, {"sha": "61c3f54377bda8f9366562d63c0b288b12416e87", "filename": "src/libcore/comm.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e697456d52c96f01d662009252f4b47804b8640b/src%2Flibcore%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e697456d52c96f01d662009252f4b47804b8640b/src%2Flibcore%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcomm.rs?ref=e697456d52c96f01d662009252f4b47804b8640b", "patch": "@@ -58,7 +58,7 @@ native mod rustrt {\n \n #[abi = \"rust-intrinsic\"]\n native mod rusti {\n-    // FIXME: This should probably not take a boxed closure\n+    // FIXME: This should probably not take a boxed closure (Issue #1987)\n     fn call_with_retptr<T: send>(&&f: fn@(*uint)) -> T;\n }\n \n@@ -89,7 +89,7 @@ resource port_ptr<T: send>(po: *rust_port) {\n     if yield != 0u {\n         // Need to wait for the port to be detached\n         // FIXME: If this fails then we're going to leave our port\n-        // in a bogus state.\n+        // in a bogus state. (Issue #1988)\n         task::yield();\n     }\n     rustrt::rust_port_end_detach(po);"}]}