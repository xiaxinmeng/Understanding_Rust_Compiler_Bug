{"sha": "9259418d26f3b9197efedf9aa01bbc3967bb9628", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyNTk0MThkMjZmM2I5MTk3ZWZlZGY5YWEwMWJiYzM5NjdiYjk2Mjg=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2015-08-28T14:13:14Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2015-08-31T23:22:43Z"}, "message": "Add E0443 error explanation", "tree": {"sha": "7d0e33e18a69923302a991affaedda9ed2b13759", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d0e33e18a69923302a991affaedda9ed2b13759"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9259418d26f3b9197efedf9aa01bbc3967bb9628", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9259418d26f3b9197efedf9aa01bbc3967bb9628", "html_url": "https://github.com/rust-lang/rust/commit/9259418d26f3b9197efedf9aa01bbc3967bb9628", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9259418d26f3b9197efedf9aa01bbc3967bb9628/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "297b77d49b2961c682e11fafb975f27780ba5625", "url": "https://api.github.com/repos/rust-lang/rust/commits/297b77d49b2961c682e11fafb975f27780ba5625", "html_url": "https://github.com/rust-lang/rust/commit/297b77d49b2961c682e11fafb975f27780ba5625"}], "stats": {"total": 71, "additions": 49, "deletions": 22}, "files": [{"sha": "1ec32bd3b1ea13f20ba3b9601a3bcc2e2f356299", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 49, "deletions": 22, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/9259418d26f3b9197efedf9aa01bbc3967bb9628/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9259418d26f3b9197efedf9aa01bbc3967bb9628/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=9259418d26f3b9197efedf9aa01bbc3967bb9628", "patch": "@@ -3020,54 +3020,56 @@ parameters. You can read more about it in the API documentation:\n https://doc.rust-lang.org/std/marker/struct.PhantomData.html\n \"##,\n \n-E0444: r##\"\n-A platform-specific intrinsic function has wrong number of arguments.\n+E0442: r##\"\n+Intrinsic argument(s) and/or return value have the wrong length.\n Erroneous code example:\n \n ```\n #[repr(simd)]\n-struct f64x2(f64, f64);\n+struct i8x16(i8, i8, i8, i8, i8, i8, i8, i8,\n+             i8, i8, i8, i8, i8, i8, i8, i8);\n+#[repr(simd)]\n+struct i32x4(i32, i32, i32, i32);\n+#[repr(simd)]\n+struct i64x2(i64, i64);\n \n extern \"platform-intrinsic\" {\n-    fn x86_mm_movemask_pd(x: f64x2, y: f64x2, z: f64x2) -> i32;\n-    // error: platform-specific intrinsic has invalid number of arguments\n+    fn x86_mm_adds_epi16(x: i8x16, y: i32x4) -> i64x2;\n+    // error: intrinsic arguments/return value have wrong length\n }\n ```\n \n-Please refer to the function declaration to see if it corresponds\n-with yours. Example:\n+To fix this error, please refer to the function declaration to give\n+it the awaited types with the awaited length. Example:\n \n ```\n #[repr(simd)]\n-struct f64x2(f64, f64);\n+struct i16x8(i16, i16, i16, i16, i16, i16, i16, i16);\n \n extern \"platform-intrinsic\" {\n-    fn x86_mm_movemask_pd(x: f64x2) -> i32; // ok!\n+    fn x86_mm_adds_epi16(x: i16x8, y: i16x8) -> i16x8; // ok!\n }\n ```\n \"##,\n \n-E0442: r##\"\n-Intrinsic argument(s) and/or return value have the wrong length.\n+E0443: r##\"\n+Intrinsic argument(s) and/or return value have the wrong type.\n Erroneous code example:\n \n ```\n #[repr(simd)]\n-struct i8x16(i8, i8, i8, i8, i8, i8, i8, i8,\n-             i8, i8, i8, i8, i8, i8, i8, i8);\n-#[repr(simd)]\n-struct i32x4(i32, i32, i32, i32);\n+struct i16x8(i16, i16, i16, i16, i16, i16, i16, i16);\n #[repr(simd)]\n-struct i64x2(i64, i64);\n+struct i64x8(i64, i64, i64, i64, i64, i64, i64, i64);\n \n extern \"platform-intrinsic\" {\n-    fn x86_mm_adds_epi16(x: i8x16, y: i32x4) -> i64x2;\n-    // error: intrinsic arguments have wrong length\n+    fn x86_mm_adds_epi16(x: i16x8, y: i16x8) -> i64x8;\n+    // error: intrinsic argument/return value has wrong type\n }\n ```\n \n To fix this error, please refer to the function declaration to give\n-it the awaited types with the awaited length. Example:\n+it the awaited types. Example:\n \n ```\n #[repr(simd)]\n@@ -3077,7 +3079,34 @@ extern \"platform-intrinsic\" {\n     fn x86_mm_adds_epi16(x: i16x8, y: i16x8) -> i16x8; // ok!\n }\n ```\n-\"##\n+\"##,\n+\n+E0444: r##\"\n+A platform-specific intrinsic function has wrong number of arguments.\n+Erroneous code example:\n+\n+```\n+#[repr(simd)]\n+struct f64x2(f64, f64);\n+\n+extern \"platform-intrinsic\" {\n+    fn x86_mm_movemask_pd(x: f64x2, y: f64x2, z: f64x2) -> i32;\n+    // error: platform-specific intrinsic has invalid number of arguments\n+}\n+```\n+\n+Please refer to the function declaration to see if it corresponds\n+with yours. Example:\n+\n+```\n+#[repr(simd)]\n+struct f64x2(f64, f64);\n+\n+extern \"platform-intrinsic\" {\n+    fn x86_mm_movemask_pd(x: f64x2) -> i32; // ok!\n+}\n+```\n+\"##,\n \n }\n \n@@ -3163,6 +3192,4 @@ register_diagnostics! {\n     E0439, // invalid `simd_shuffle`, needs length: `{}`\n     E0440, // platform-specific intrinsic has wrong number of type parameters\n     E0441, // unrecognized platform-specific intrinsic function\n-    E0443, // intrinsic {} has wrong type: found `{}`, expected `{}` which\n-           // was used for this vector type previously in this signature\n }"}]}