{"sha": "892b50ba74c12c3fa397d283f16b9209b27aad8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MmI1MGJhNzRjMTJjM2ZhMzk3ZDI4M2YxNmI5MjA5YjI3YWFkOGY=", "commit": {"author": {"name": "arcnmx", "email": "arcnmx@users.noreply.github.com", "date": "2015-11-06T09:51:03Z"}, "committer": {"name": "arcnmx", "email": "arcnmx@users.noreply.github.com", "date": "2015-11-06T10:04:43Z"}, "message": "Preserve public static items across LTO", "tree": {"sha": "51561d4c29540b462a4e3ba8d5b1fbefcaa451c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51561d4c29540b462a4e3ba8d5b1fbefcaa451c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/892b50ba74c12c3fa397d283f16b9209b27aad8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/892b50ba74c12c3fa397d283f16b9209b27aad8f", "html_url": "https://github.com/rust-lang/rust/commit/892b50ba74c12c3fa397d283f16b9209b27aad8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/892b50ba74c12c3fa397d283f16b9209b27aad8f/comments", "author": {"login": "arcnmx", "id": 13426784, "node_id": "MDQ6VXNlcjEzNDI2Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/13426784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcnmx", "html_url": "https://github.com/arcnmx", "followers_url": "https://api.github.com/users/arcnmx/followers", "following_url": "https://api.github.com/users/arcnmx/following{/other_user}", "gists_url": "https://api.github.com/users/arcnmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcnmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcnmx/subscriptions", "organizations_url": "https://api.github.com/users/arcnmx/orgs", "repos_url": "https://api.github.com/users/arcnmx/repos", "events_url": "https://api.github.com/users/arcnmx/events{/privacy}", "received_events_url": "https://api.github.com/users/arcnmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arcnmx", "id": 13426784, "node_id": "MDQ6VXNlcjEzNDI2Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/13426784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcnmx", "html_url": "https://github.com/arcnmx", "followers_url": "https://api.github.com/users/arcnmx/followers", "following_url": "https://api.github.com/users/arcnmx/following{/other_user}", "gists_url": "https://api.github.com/users/arcnmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcnmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcnmx/subscriptions", "organizations_url": "https://api.github.com/users/arcnmx/orgs", "repos_url": "https://api.github.com/users/arcnmx/repos", "events_url": "https://api.github.com/users/arcnmx/events{/privacy}", "received_events_url": "https://api.github.com/users/arcnmx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02d9f294558da746e8c5707f13cd9153d3ac5f40", "url": "https://api.github.com/repos/rust-lang/rust/commits/02d9f294558da746e8c5707f13cd9153d3ac5f40", "html_url": "https://github.com/rust-lang/rust/commit/02d9f294558da746e8c5707f13cd9153d3ac5f40"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "09dec375a69a54ef639cf9e666d48cad7ca7abb5", "filename": "src/librustc/metadata/csearch.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/892b50ba74c12c3fa397d283f16b9209b27aad8f/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/892b50ba74c12c3fa397d283f16b9209b27aad8f/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcsearch.rs?ref=892b50ba74c12c3fa397d283f16b9209b27aad8f", "patch": "@@ -344,6 +344,11 @@ pub fn is_const_fn(cstore: &cstore::CStore, did: DefId) -> bool {\n     decoder::is_const_fn(&*cdata, did.index)\n }\n \n+pub fn is_static(cstore: &cstore::CStore, did: DefId) -> bool {\n+    let cdata = cstore.get_crate_data(did.krate);\n+    decoder::is_static(&*cdata, did.index)\n+}\n+\n pub fn is_impl(cstore: &cstore::CStore, did: DefId) -> bool {\n     let cdata = cstore.get_crate_data(did.krate);\n     decoder::is_impl(&*cdata, did.index)"}, {"sha": "b102213eff02153eb6c4575481705b41824c0265", "filename": "src/librustc/metadata/decoder.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/892b50ba74c12c3fa397d283f16b9209b27aad8f/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/892b50ba74c12c3fa397d283f16b9209b27aad8f/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fdecoder.rs?ref=892b50ba74c12c3fa397d283f16b9209b27aad8f", "patch": "@@ -1425,6 +1425,14 @@ pub fn is_const_fn(cdata: Cmd, id: DefIndex) -> bool {\n     }\n }\n \n+pub fn is_static(cdata: Cmd, id: DefIndex) -> bool {\n+    let item_doc = cdata.lookup_item(id);\n+    match item_family(item_doc) {\n+        ImmStatic | MutStatic => true,\n+        _ => false,\n+    }\n+}\n+\n pub fn is_impl(cdata: Cmd, id: DefIndex) -> bool {\n     let item_doc = cdata.lookup_item(id);\n     match item_family(item_doc) {"}, {"sha": "4a99f2142d790671b82091f101d6750963660a67", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/892b50ba74c12c3fa397d283f16b9209b27aad8f/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/892b50ba74c12c3fa397d283f16b9209b27aad8f/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=892b50ba74c12c3fa397d283f16b9209b27aad8f", "patch": "@@ -2875,7 +2875,8 @@ pub fn trans_crate<'tcx>(tcx: &ty::ctxt<'tcx>,\n         sess.cstore.iter_crate_data(|cnum, _| {\n             let syms = csearch::get_reachable_ids(&sess.cstore, cnum);\n             reachable_symbols.extend(syms.into_iter().filter(|did| {\n-                csearch::is_extern_fn(&sess.cstore, *did, shared_ccx.tcx())\n+                csearch::is_extern_fn(&sess.cstore, *did, shared_ccx.tcx()) ||\n+                csearch::is_static(&sess.cstore, *did)\n             }).map(|did| {\n                 csearch::get_symbol(&sess.cstore, did)\n             }));"}, {"sha": "e84b5509c50362d2a510d5ab4452d57325701882", "filename": "src/test/run-make/issue-14500/foo.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/892b50ba74c12c3fa397d283f16b9209b27aad8f/src%2Ftest%2Frun-make%2Fissue-14500%2Ffoo.c", "raw_url": "https://github.com/rust-lang/rust/raw/892b50ba74c12c3fa397d283f16b9209b27aad8f/src%2Ftest%2Frun-make%2Fissue-14500%2Ffoo.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-14500%2Ffoo.c?ref=892b50ba74c12c3fa397d283f16b9209b27aad8f", "patch": "@@ -9,8 +9,9 @@\n // except according to those terms.\n \n extern void foo();\n+extern char FOO_STATIC;\n \n int main() {\n     foo();\n-    return 0;\n+    return (int)FOO_STATIC;\n }"}, {"sha": "a91d8d6a21df47e5045b80e4280e4c5763ddabb7", "filename": "src/test/run-make/issue-14500/foo.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/892b50ba74c12c3fa397d283f16b9209b27aad8f/src%2Ftest%2Frun-make%2Fissue-14500%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/892b50ba74c12c3fa397d283f16b9209b27aad8f/src%2Ftest%2Frun-make%2Fissue-14500%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-14500%2Ffoo.rs?ref=892b50ba74c12c3fa397d283f16b9209b27aad8f", "patch": "@@ -10,3 +10,6 @@\n \n #[no_mangle]\n pub extern fn foo() {}\n+\n+#[no_mangle]\n+pub static FOO_STATIC: u8 = 0;"}]}