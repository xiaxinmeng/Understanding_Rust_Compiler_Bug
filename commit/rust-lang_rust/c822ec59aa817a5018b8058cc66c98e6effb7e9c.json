{"sha": "c822ec59aa817a5018b8058cc66c98e6effb7e9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4MjJlYzU5YWE4MTdhNTAxOGI4MDU4Y2M2NmM5OGU2ZWZmYjdlOWM=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-06-08T12:36:57Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-06-11T07:24:51Z"}, "message": "Implement cache for not found symbols", "tree": {"sha": "4d7e951ca358bcf3eb535de0a2c397295ee58a25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d7e951ca358bcf3eb535de0a2c397295ee58a25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c822ec59aa817a5018b8058cc66c98e6effb7e9c", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYMMPwxUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLgZOgD/XI+HF6iKIgCQmKsgU7mHFFau3FXz\njfRyHucJodrPfdcBANw36QPcJnj+/EmYvXqSlhYNaReRQp176q83HLo8UswJ\n=HIYV\n-----END PGP SIGNATURE-----", "payload": "tree 4d7e951ca358bcf3eb535de0a2c397295ee58a25\nparent ce7040075adea348beae45e9aa2af2a2f25dfc18\nauthor hyd-dev <yd-huang@outlook.com> 1623155817 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1623396291 +0800\n\nImplement cache for not found symbols\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c822ec59aa817a5018b8058cc66c98e6effb7e9c", "html_url": "https://github.com/rust-lang/rust/commit/c822ec59aa817a5018b8058cc66c98e6effb7e9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c822ec59aa817a5018b8058cc66c98e6effb7e9c/comments", "author": null, "committer": null, "parents": [{"sha": "ce7040075adea348beae45e9aa2af2a2f25dfc18", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce7040075adea348beae45e9aa2af2a2f25dfc18", "html_url": "https://github.com/rust-lang/rust/commit/ce7040075adea348beae45e9aa2af2a2f25dfc18"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "91a83a8acf4039aa8629c3ecd07b839c14330114", "filename": "src/machine.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c822ec59aa817a5018b8058cc66c98e6effb7e9c/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c822ec59aa817a5018b8058cc66c98e6effb7e9c/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=c822ec59aa817a5018b8058cc66c98e6effb7e9c", "patch": "@@ -297,7 +297,8 @@ pub struct Evaluator<'mir, 'tcx> {\n     string_cache: FxHashMap<String, measureme::StringId>,\n \n     /// Cache of `Instance` exported under the given `Symbol` name.\n-    pub(crate) exported_symbols_cache: FxHashMap<Symbol, Instance<'tcx>>,\n+    /// `None` means no `Instance` exported under the given name is found.\n+    pub(crate) exported_symbols_cache: FxHashMap<Symbol, Option<Instance<'tcx>>>,\n \n     /// Whether to raise a panic in the context of the evaluated process when unsupported\n     /// functionality is encountered. If `false`, an error is propagated in the Miri application context"}, {"sha": "380ddac6c86a62813ed090a3a21defae16525b25", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c822ec59aa817a5018b8058cc66c98e6effb7e9c/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c822ec59aa817a5018b8058cc66c98e6effb7e9c/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=c822ec59aa817a5018b8058cc66c98e6effb7e9c", "patch": "@@ -135,7 +135,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         // If the result was cached, just return it.\n         if let Some(instance) = this.machine.exported_symbols_cache.get(&link_name) {\n-            return Ok(Some(this.load_mir(instance.def, None)?));\n+            return instance.map(|instance| this.load_mir(instance.def, None)).transpose();\n         }\n \n         // Find it if it was not cached.\n@@ -187,13 +187,10 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             }\n         }\n \n+        let instance = instance_and_crate.map(|ic| ic.0);\n         // Cache it and load its MIR, if found.\n-        instance_and_crate\n-            .map(|(instance, _)| {\n-                this.machine.exported_symbols_cache.insert(link_name, instance);\n-                this.load_mir(instance.def, None)\n-            })\n-            .transpose()\n+        this.machine.exported_symbols_cache.insert(link_name, instance);\n+        instance.map(|instance| this.load_mir(instance.def, None)).transpose()\n     }\n \n     /// Emulates calling a foreign item, failing if the item is not supported."}, {"sha": "58115542332f205f6fcfc38a01d507c74aac2a5b", "filename": "tests/run-pass/function_calls/exported_symbol.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c822ec59aa817a5018b8058cc66c98e6effb7e9c/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c822ec59aa817a5018b8058cc66c98e6effb7e9c/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffunction_calls%2Fexported_symbol.rs?ref=c822ec59aa817a5018b8058cc66c98e6effb7e9c", "patch": "@@ -20,10 +20,15 @@ fn main() {\n     for _ in 0..3 {\n         extern \"C\" {\n             fn foo() -> i32;\n+            fn free(_: *mut std::ffi::c_void);\n         }\n \n         assert_eq!(unsafe { foo() }, -1);\n \n+        // `free()` is a built-in shim, so calling it will add (\"free\", None) to the cache.\n+        // Test that the cache is not broken with (\"free\", None).\n+        unsafe { free(std::ptr::null_mut()) }\n+\n         extern \"Rust\" {\n             fn bar() -> i32;\n             fn baz() -> i32;"}]}