{"sha": "4e5cfabd08aa906248aedea3ac61c0eb2a7cc727", "node_id": "C_kwDOAAsO6NoAKDRlNWNmYWJkMDhhYTkwNjI0OGFlZGVhM2FjNjFjMGViMmE3Y2M3Mjc", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-01-30T09:41:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-30T09:41:45Z"}, "message": "Rollup merge of #106106 - jyn514:remote-tracking-branch, r=Mark-Simulacrum\n\nPass `branch.{branch}.remote=origin` to `git submodule update`\n\nThis works around a bug in git itself.\nFixes https://github.com/rust-lang/rust/issues/101144.", "tree": {"sha": "82a86af2c6b5e1b1976bf81d685a7be44797ae4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82a86af2c6b5e1b1976bf81d685a7be44797ae4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e5cfabd08aa906248aedea3ac61c0eb2a7cc727", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj15DZCRBK7hj4Ov3rIwAAHr4IAJO1lUpixGaPIGt0prCmBPoV\nnh0G6M4Q6/j69mx2Uh2iUt0Z6mp55r6IBsBNimW3EsM1nRKkYeNe63171t0R33Ew\nUnJrfHT8CnGOiVhpYTPdbNIBixmPlWOpQqrNQT8t/rC/He3uf8MULFzpqH3Aorc7\njAUepoLY9VNUFAvHJI2/5mAbr2/QzUOVbRDvxwduwXlGW1tV4Cwa/y3+u/a8Bf3v\nkgG4+ZFONZYNo4v9xgit8QXlD/Z6CvmeZOA4BoBawKhc63V+XMmChyH8UxtxBcJw\nj3SF0VfCZyzx8i4md74Kl2v24ETbsU12SoXOFfI5VkSP3yVc6RykdXRr7v4pWFY=\n=nVVf\n-----END PGP SIGNATURE-----\n", "payload": "tree 82a86af2c6b5e1b1976bf81d685a7be44797ae4e\nparent 28340bab88507a80c326422933eb3e17558ab915\nparent 6a3ebe6adc58b60cf963b2dd314bc84afd59a0a2\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1675071705 +0530\ncommitter GitHub <noreply@github.com> 1675071705 +0530\n\nRollup merge of #106106 - jyn514:remote-tracking-branch, r=Mark-Simulacrum\n\nPass `branch.{branch}.remote=origin` to `git submodule update`\n\nThis works around a bug in git itself.\nFixes https://github.com/rust-lang/rust/issues/101144.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e5cfabd08aa906248aedea3ac61c0eb2a7cc727", "html_url": "https://github.com/rust-lang/rust/commit/4e5cfabd08aa906248aedea3ac61c0eb2a7cc727", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e5cfabd08aa906248aedea3ac61c0eb2a7cc727/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28340bab88507a80c326422933eb3e17558ab915", "url": "https://api.github.com/repos/rust-lang/rust/commits/28340bab88507a80c326422933eb3e17558ab915", "html_url": "https://github.com/rust-lang/rust/commit/28340bab88507a80c326422933eb3e17558ab915"}, {"sha": "6a3ebe6adc58b60cf963b2dd314bc84afd59a0a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a3ebe6adc58b60cf963b2dd314bc84afd59a0a2", "html_url": "https://github.com/rust-lang/rust/commit/6a3ebe6adc58b60cf963b2dd314bc84afd59a0a2"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "3a0be7a85356f9ab1f89e083a6d989ea5cbd25dd", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4e5cfabd08aa906248aedea3ac61c0eb2a7cc727/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5cfabd08aa906248aedea3ac61c0eb2a7cc727/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=4e5cfabd08aa906248aedea3ac61c0eb2a7cc727", "patch": "@@ -110,7 +110,7 @@ use std::fs::{self, File};\n use std::io;\n use std::io::ErrorKind;\n use std::path::{Path, PathBuf};\n-use std::process::Command;\n+use std::process::{Command, Stdio};\n use std::str;\n \n use build_helper::ci::CiEnv;\n@@ -662,12 +662,32 @@ impl Build {\n \n         // Try passing `--progress` to start, then run git again without if that fails.\n         let update = |progress: bool| {\n-            let mut git = Command::new(\"git\");\n+            // Git is buggy and will try to fetch submodules from the tracking branch for *this* repository,\n+            // even though that has no relation to the upstream for the submodule.\n+            let current_branch = {\n+                let output = self\n+                    .config\n+                    .git()\n+                    .args([\"symbolic-ref\", \"--short\", \"HEAD\"])\n+                    .stderr(Stdio::inherit())\n+                    .output();\n+                let output = t!(output);\n+                if output.status.success() {\n+                    Some(String::from_utf8(output.stdout).unwrap().trim().to_owned())\n+                } else {\n+                    None\n+                }\n+            };\n+\n+            let mut git = self.config.git();\n+            if let Some(branch) = current_branch {\n+                git.arg(\"-c\").arg(format!(\"branch.{branch}.remote=origin\"));\n+            }\n             git.args(&[\"submodule\", \"update\", \"--init\", \"--recursive\", \"--depth=1\"]);\n             if progress {\n                 git.arg(\"--progress\");\n             }\n-            git.arg(relative_path).current_dir(&self.config.src);\n+            git.arg(relative_path);\n             git\n         };\n         // NOTE: doesn't use `try_run` because this shouldn't print an error if it fails."}]}