{"sha": "c2b65ffe295bf98cb1140ddb5f82efdb0f6f33ce", "node_id": "C_kwDOAAsO6NoAKGMyYjY1ZmZlMjk1YmY5OGNiMTE0MGRkYjVmODJlZmRiMGY2ZjMzY2U", "commit": {"author": {"name": "Ame", "email": "104745335+ameknite@users.noreply.github.com", "date": "2023-02-03T10:54:27Z"}, "committer": {"name": "Ame", "email": "104745335+ameknite@users.noreply.github.com", "date": "2023-02-03T19:57:53Z"}, "message": "Clarifying that .map() returns None if None.", "tree": {"sha": "21a8a04c2817001a38ee4fd2b2c8817006e928db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21a8a04c2817001a38ee4fd2b2c8817006e928db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2b65ffe295bf98cb1140ddb5f82efdb0f6f33ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2b65ffe295bf98cb1140ddb5f82efdb0f6f33ce", "html_url": "https://github.com/rust-lang/rust/commit/c2b65ffe295bf98cb1140ddb5f82efdb0f6f33ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2b65ffe295bf98cb1140ddb5f82efdb0f6f33ce/comments", "author": {"login": "ameknite", "id": 104745335, "node_id": "U_kgDOBj5Jdw", "avatar_url": "https://avatars.githubusercontent.com/u/104745335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ameknite", "html_url": "https://github.com/ameknite", "followers_url": "https://api.github.com/users/ameknite/followers", "following_url": "https://api.github.com/users/ameknite/following{/other_user}", "gists_url": "https://api.github.com/users/ameknite/gists{/gist_id}", "starred_url": "https://api.github.com/users/ameknite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ameknite/subscriptions", "organizations_url": "https://api.github.com/users/ameknite/orgs", "repos_url": "https://api.github.com/users/ameknite/repos", "events_url": "https://api.github.com/users/ameknite/events{/privacy}", "received_events_url": "https://api.github.com/users/ameknite/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ameknite", "id": 104745335, "node_id": "U_kgDOBj5Jdw", "avatar_url": "https://avatars.githubusercontent.com/u/104745335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ameknite", "html_url": "https://github.com/ameknite", "followers_url": "https://api.github.com/users/ameknite/followers", "following_url": "https://api.github.com/users/ameknite/following{/other_user}", "gists_url": "https://api.github.com/users/ameknite/gists{/gist_id}", "starred_url": "https://api.github.com/users/ameknite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ameknite/subscriptions", "organizations_url": "https://api.github.com/users/ameknite/orgs", "repos_url": "https://api.github.com/users/ameknite/repos", "events_url": "https://api.github.com/users/ameknite/events{/privacy}", "received_events_url": "https://api.github.com/users/ameknite/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9545094994f1ab45cab5799d5b45980871a9e97b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9545094994f1ab45cab5799d5b45980871a9e97b", "html_url": "https://github.com/rust-lang/rust/commit/9545094994f1ab45cab5799d5b45980871a9e97b"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "f485763b234265c3915f6a04676fa7ab6d680a81", "filename": "library/core/src/option.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c2b65ffe295bf98cb1140ddb5f82efdb0f6f33ce/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2b65ffe295bf98cb1140ddb5f82efdb0f6f33ce/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=c2b65ffe295bf98cb1140ddb5f82efdb0f6f33ce", "patch": "@@ -943,7 +943,7 @@ impl<T> Option<T> {\n     // Transforming contained values\n     /////////////////////////////////////////////////////////////////////////\n \n-    /// Maps an `Option<T>` to `Option<U>` by applying a function to a contained value.\n+    /// Maps an `Option<T>` to `Option<U>` by applying a function to a contained value (if `Some`) or return `None` (if `None`).\n     ///\n     /// # Examples\n     ///\n@@ -955,8 +955,10 @@ impl<T> Option<T> {\n     /// let maybe_some_string = Some(String::from(\"Hello, World!\"));\n     /// // `Option::map` takes self *by value*, consuming `maybe_some_string`\n     /// let maybe_some_len = maybe_some_string.map(|s| s.len());\n-    ///\n     /// assert_eq!(maybe_some_len, Some(13));\n+    ///\n+    /// let x: Option<&str> = None;\n+    /// assert_eq!(x.map(|s| s.len()), None);\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}