{"sha": "fd69e6e910006b584ab359c8d085f9b19a3f53f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkNjllNmU5MTAwMDZiNTg0YWIzNTljOGQwODVmOWIxOWEzZjUzZjI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-26T12:18:24Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-26T12:18:24Z"}, "message": "make Alloc::check_bounds_ptr private; you should use Memory::check_bounds_ptr instead", "tree": {"sha": "5e675a9a9f745b9dd9d8a579abc06280a1650fe7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e675a9a9f745b9dd9d8a579abc06280a1650fe7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd69e6e910006b584ab359c8d085f9b19a3f53f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd69e6e910006b584ab359c8d085f9b19a3f53f2", "html_url": "https://github.com/rust-lang/rust/commit/fd69e6e910006b584ab359c8d085f9b19a3f53f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd69e6e910006b584ab359c8d085f9b19a3f53f2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73dcb52198d2e4949439a5f8d5e0233d6d05ccaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/73dcb52198d2e4949439a5f8d5e0233d6d05ccaf", "html_url": "https://github.com/rust-lang/rust/commit/73dcb52198d2e4949439a5f8d5e0233d6d05ccaf"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d2921619d2adde77b1df54c263eacc9bffaf5da9", "filename": "src/librustc/mir/interpret/allocation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd69e6e910006b584ab359c8d085f9b19a3f53f2/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd69e6e910006b584ab359c8d085f9b19a3f53f2/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs?ref=fd69e6e910006b584ab359c8d085f9b19a3f53f2", "patch": "@@ -147,7 +147,7 @@ impl<'tcx, Tag, Extra> Allocation<Tag, Extra> {\n     /// of an allocation (i.e., at the first *inaccessible* location) *is* considered\n     /// in-bounds!  This follows C's/LLVM's rules.\n     /// If you want to check bounds before doing a memory access, better use `check_bounds`.\n-    pub fn check_bounds_ptr(\n+    fn check_bounds_ptr(\n         &self,\n         ptr: Pointer<Tag>,\n     ) -> EvalResult<'tcx> {"}]}