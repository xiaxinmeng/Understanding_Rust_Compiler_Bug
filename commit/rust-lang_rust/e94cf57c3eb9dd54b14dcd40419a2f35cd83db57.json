{"sha": "e94cf57c3eb9dd54b14dcd40419a2f35cd83db57", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5NGNmNTdjM2ViOWRkNTRiMTRkY2Q0MDQxOWEyZjM1Y2Q4M2RiNTc=", "commit": {"author": {"name": "Dhruv Jauhar", "email": "dhruvjhr@gmail.com", "date": "2021-01-23T02:24:54Z"}, "committer": {"name": "Dhruv Jauhar", "email": "dhruvjhr@gmail.com", "date": "2021-01-23T04:10:24Z"}, "message": "Make functional record update/struct update syntax works inside closures when feature capture_disjoint_fields is enabled", "tree": {"sha": "90dd8b8d986f876c6448691ba501e456485792ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90dd8b8d986f876c6448691ba501e456485792ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e94cf57c3eb9dd54b14dcd40419a2f35cd83db57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e94cf57c3eb9dd54b14dcd40419a2f35cd83db57", "html_url": "https://github.com/rust-lang/rust/commit/e94cf57c3eb9dd54b14dcd40419a2f35cd83db57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e94cf57c3eb9dd54b14dcd40419a2f35cd83db57/comments", "author": {"login": "null-sleep", "id": 13277988, "node_id": "MDQ6VXNlcjEzMjc3OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/13277988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/null-sleep", "html_url": "https://github.com/null-sleep", "followers_url": "https://api.github.com/users/null-sleep/followers", "following_url": "https://api.github.com/users/null-sleep/following{/other_user}", "gists_url": "https://api.github.com/users/null-sleep/gists{/gist_id}", "starred_url": "https://api.github.com/users/null-sleep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/null-sleep/subscriptions", "organizations_url": "https://api.github.com/users/null-sleep/orgs", "repos_url": "https://api.github.com/users/null-sleep/repos", "events_url": "https://api.github.com/users/null-sleep/events{/privacy}", "received_events_url": "https://api.github.com/users/null-sleep/received_events", "type": "User", "site_admin": false}, "committer": {"login": "null-sleep", "id": 13277988, "node_id": "MDQ6VXNlcjEzMjc3OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/13277988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/null-sleep", "html_url": "https://github.com/null-sleep", "followers_url": "https://api.github.com/users/null-sleep/followers", "following_url": "https://api.github.com/users/null-sleep/following{/other_user}", "gists_url": "https://api.github.com/users/null-sleep/gists{/gist_id}", "starred_url": "https://api.github.com/users/null-sleep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/null-sleep/subscriptions", "organizations_url": "https://api.github.com/users/null-sleep/orgs", "repos_url": "https://api.github.com/users/null-sleep/repos", "events_url": "https://api.github.com/users/null-sleep/events{/privacy}", "received_events_url": "https://api.github.com/users/null-sleep/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "180fdffa17e5598d31eb1eaa2697bd57ef1b8a29", "url": "https://api.github.com/repos/rust-lang/rust/commits/180fdffa17e5598d31eb1eaa2697bd57ef1b8a29", "html_url": "https://github.com/rust-lang/rust/commit/180fdffa17e5598d31eb1eaa2697bd57ef1b8a29"}], "stats": {"total": 56, "additions": 51, "deletions": 5}, "files": [{"sha": "3e8d4631464f034d518cd63222f2c374b4f02b3d", "filename": "compiler/rustc_mir_build/src/build/expr/as_place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e94cf57c3eb9dd54b14dcd40419a2f35cd83db57/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e94cf57c3eb9dd54b14dcd40419a2f35cd83db57/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_place.rs?ref=e94cf57c3eb9dd54b14dcd40419a2f35cd83db57", "patch": "@@ -303,7 +303,7 @@ impl<'tcx> PlaceBuilder<'tcx> {\n         self.base\n     }\n \n-    fn field(self, f: Field, ty: Ty<'tcx>) -> Self {\n+    crate fn field(self, f: Field, ty: Ty<'tcx>) -> Self {\n         self.project(PlaceElem::Field(f, ty))\n     }\n "}, {"sha": "0f9d0db750cf8a04f1983eb808e31b5a6c35dd7e", "filename": "compiler/rustc_mir_build/src/build/expr/into.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e94cf57c3eb9dd54b14dcd40419a2f35cd83db57/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e94cf57c3eb9dd54b14dcd40419a2f35cd83db57/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Finto.rs?ref=e94cf57c3eb9dd54b14dcd40419a2f35cd83db57", "patch": "@@ -302,7 +302,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                 let field_names = this.hir.all_fields(adt_def, variant_index);\n \n                 let fields: Vec<_> = if let Some(FruInfo { base, field_types }) = base {\n-                    let base = unpack!(block = this.as_place(block, base));\n+                    let place_builder = unpack!(block = this.as_place_builder(block, base));\n \n                     // MIR does not natively support FRU, so for each\n                     // base-supplied field, generate an operand that\n@@ -312,9 +312,14 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                         .zip(field_types.into_iter())\n                         .map(|(n, ty)| match fields_map.get(&n) {\n                             Some(v) => v.clone(),\n-                            None => this.consume_by_copy_or_move(\n-                                this.hir.tcx().mk_place_field(base, n, ty),\n-                            ),\n+                            None => {\n+                                let place_builder = place_builder.clone();\n+                                this.consume_by_copy_or_move(\n+                                    place_builder\n+                                        .field(n, ty)\n+                                        .into_place(this.hir.tcx(), this.hir.typeck_results()),\n+                                )\n+                            },\n                         })\n                         .collect()\n                 } else {"}, {"sha": "426eddec6ff8fe68c994953e0ef03e2877f17642", "filename": "src/test/ui/closures/2229_closure_analysis/run_pass/fru_syntax.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e94cf57c3eb9dd54b14dcd40419a2f35cd83db57/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Frun_pass%2Ffru_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e94cf57c3eb9dd54b14dcd40419a2f35cd83db57/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Frun_pass%2Ffru_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Frun_pass%2Ffru_syntax.rs?ref=e94cf57c3eb9dd54b14dcd40419a2f35cd83db57", "patch": "@@ -0,0 +1,30 @@\n+// run-pass\n+\n+// Test that functional record update/struct update syntax works inside\n+// a closure when the feature `capture_disjoint_fields` is enabled.\n+\n+#![feature(capture_disjoint_fields)]\n+//~^ WARNING: the feature `capture_disjoint_fields` is incomplete\n+//~| NOTE: `#[warn(incomplete_features)]` on by default\n+//~| NOTE: see issue #53488 <https://github.com/rust-lang/rust/issues/53488>\n+\n+struct S {\n+    a: String,\n+    b: String,\n+}\n+\n+fn main() {\n+    let a = String::new();\n+    let b = String::new();\n+    let s = S {a, b};\n+\n+    let c = || {\n+        let s2 = S {\n+            a: format!(\"New a\"),\n+            ..s\n+        };\n+        println!(\"{} {}\", s2.a, s2.b);\n+    };\n+\n+    c();\n+}"}, {"sha": "7ed73abba8608ec1d01b91d4e8c53e39eaf094dd", "filename": "src/test/ui/closures/2229_closure_analysis/run_pass/fru_syntax.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e94cf57c3eb9dd54b14dcd40419a2f35cd83db57/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Frun_pass%2Ffru_syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e94cf57c3eb9dd54b14dcd40419a2f35cd83db57/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Frun_pass%2Ffru_syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Frun_pass%2Ffru_syntax.stderr?ref=e94cf57c3eb9dd54b14dcd40419a2f35cd83db57", "patch": "@@ -0,0 +1,11 @@\n+warning: the feature `capture_disjoint_fields` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/fru_syntax.rs:6:12\n+   |\n+LL | #![feature(capture_disjoint_fields)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #53488 <https://github.com/rust-lang/rust/issues/53488> for more information\n+\n+warning: 1 warning emitted\n+"}]}