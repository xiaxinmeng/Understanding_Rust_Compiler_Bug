{"sha": "ba72bc9b83cb74756d94046f864dc1ab183bbbb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhNzJiYzliODNjYjc0NzU2ZDk0MDQ2Zjg2NGRjMWFiMTgzYmJiYjg=", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-02-14T12:18:17Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-02-14T12:18:17Z"}, "message": "fix typo", "tree": {"sha": "80940e56a8f233f5593c89815aab9e2ff92865e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80940e56a8f233f5593c89815aab9e2ff92865e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba72bc9b83cb74756d94046f864dc1ab183bbbb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba72bc9b83cb74756d94046f864dc1ab183bbbb8", "html_url": "https://github.com/rust-lang/rust/commit/ba72bc9b83cb74756d94046f864dc1ab183bbbb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba72bc9b83cb74756d94046f864dc1ab183bbbb8/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b86674e7cc8ac9c846ed5aca84aaefc2d0d12e4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b86674e7cc8ac9c846ed5aca84aaefc2d0d12e4a", "html_url": "https://github.com/rust-lang/rust/commit/b86674e7cc8ac9c846ed5aca84aaefc2d0d12e4a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3decdd02b0012a6b97290b15c3112367e73869cb", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba72bc9b83cb74756d94046f864dc1ab183bbbb8/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba72bc9b83cb74756d94046f864dc1ab183bbbb8/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=ba72bc9b83cb74756d94046f864dc1ab183bbbb8", "patch": "@@ -1269,7 +1269,7 @@ impl Clean<Item> for ty::AssocItem {\n \n                     AssocTypeItem(bounds, ty.clean(cx))\n                 } else {\n-                    // FIXME: when could this happen? ASsociated items in inherent impls?\n+                    // FIXME: when could this happen? Associated items in inherent impls?\n                     let type_ = cx.tcx.type_of(self.def_id).clean(cx);\n                     TypedefItem(\n                         Typedef {"}]}