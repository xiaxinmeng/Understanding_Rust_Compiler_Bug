{"sha": "6fa68c9b44f5b5032be0388c8f4085842c584c15", "node_id": "C_kwDOAAsO6NoAKDZmYTY4YzliNDRmNWI1MDMyYmUwMzg4YzhmNDA4NTg0MmM1ODRjMTU", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-07-05T15:42:01Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-07-05T19:33:39Z"}, "message": "Fix link generation in the sidebar for impls", "tree": {"sha": "a0dcdf7e9d639b5d2482fe8d7c1f63a74d5ac80d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0dcdf7e9d639b5d2482fe8d7c1f63a74d5ac80d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fa68c9b44f5b5032be0388c8f4085842c584c15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fa68c9b44f5b5032be0388c8f4085842c584c15", "html_url": "https://github.com/rust-lang/rust/commit/6fa68c9b44f5b5032be0388c8f4085842c584c15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fa68c9b44f5b5032be0388c8f4085842c584c15/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05e69d8fc6c6e2ce720218fe4f6e34757c1aa05a", "url": "https://api.github.com/repos/rust-lang/rust/commits/05e69d8fc6c6e2ce720218fe4f6e34757c1aa05a", "html_url": "https://github.com/rust-lang/rust/commit/05e69d8fc6c6e2ce720218fe4f6e34757c1aa05a"}], "stats": {"total": 27, "additions": 12, "deletions": 15}, "files": [{"sha": "e62a8bcfba6670e0b2b4a7d837d4bac361630394", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6fa68c9b44f5b5032be0388c8f4085842c584c15/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fa68c9b44f5b5032be0388c8f4085842c584c15/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=6fa68c9b44f5b5032be0388c8f4085842c584c15", "patch": "@@ -1973,21 +1973,18 @@ fn sidebar_assoc_items(cx: &Context<'_>, out: &mut Buffer, it: &clean::Item) {\n                 let mut ret = impls\n                     .iter()\n                     .filter_map(|it| {\n-                        if let Some(ref i) = it.inner_impl().trait_ {\n-                            let i_display = format!(\"{:#}\", i.print(cx));\n-                            let out = Escape(&i_display);\n-                            let encoded =\n-                                id_map.derive(small_url_encode(format!(\"impl-{:#}\", i.print(cx))));\n-                            let prefix = match it.inner_impl().polarity {\n-                                ty::ImplPolarity::Positive | ty::ImplPolarity::Reservation => \"\",\n-                                ty::ImplPolarity::Negative => \"!\",\n-                            };\n-                            let generated =\n-                                format!(\"<a href=\\\"#{}\\\">{}{}</a>\", encoded, prefix, out);\n-                            if links.insert(generated.clone()) { Some(generated) } else { None }\n-                        } else {\n-                            None\n-                        }\n+                        let trait_ = it.inner_impl().trait_.as_ref()?;\n+                        let encoded =\n+                            id_map.derive(get_id_for_impl(&it.inner_impl().for_, Some(trait_), cx));\n+\n+                        let i_display = format!(\"{:#}\", trait_.print(cx));\n+                        let out = Escape(&i_display);\n+                        let prefix = match it.inner_impl().polarity {\n+                            ty::ImplPolarity::Positive | ty::ImplPolarity::Reservation => \"\",\n+                            ty::ImplPolarity::Negative => \"!\",\n+                        };\n+                        let generated = format!(\"<a href=\\\"#{}\\\">{}{}</a>\", encoded, prefix, out);\n+                        if links.insert(generated.clone()) { Some(generated) } else { None }\n                     })\n                     .collect::<Vec<String>>();\n                 ret.sort();"}]}