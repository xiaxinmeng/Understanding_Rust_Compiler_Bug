{"sha": "daccd1709ef1913e23d1b2f15dfeb16ac6e70ed8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhY2NkMTcwOWVmMTkxM2UyM2QxYjJmMTVkZmViMTZhYzZlNzBlZDg=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2020-09-17T15:20:22Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2020-09-18T02:49:02Z"}, "message": "Replace loop with drop_in_place call", "tree": {"sha": "45cb87906f4ee69d77d4aa42d856ad63e7559dcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45cb87906f4ee69d77d4aa42d856ad63e7559dcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/daccd1709ef1913e23d1b2f15dfeb16ac6e70ed8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/daccd1709ef1913e23d1b2f15dfeb16ac6e70ed8", "html_url": "https://github.com/rust-lang/rust/commit/daccd1709ef1913e23d1b2f15dfeb16ac6e70ed8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/daccd1709ef1913e23d1b2f15dfeb16ac6e70ed8/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5acfcceb47609862bba7035cf1cbfd807918dd36", "url": "https://api.github.com/repos/rust-lang/rust/commits/5acfcceb47609862bba7035cf1cbfd807918dd36", "html_url": "https://github.com/rust-lang/rust/commit/5acfcceb47609862bba7035cf1cbfd807918dd36"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "0d0b1efd2de18589b29fa10497006018ecc7d76d", "filename": "compiler/rustc_arena/src/lib.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/daccd1709ef1913e23d1b2f15dfeb16ac6e70ed8/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daccd1709ef1913e23d1b2f15dfeb16ac6e70ed8/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_arena%2Fsrc%2Flib.rs?ref=daccd1709ef1913e23d1b2f15dfeb16ac6e70ed8", "patch": "@@ -66,12 +66,7 @@ impl<T> TypedArenaChunk<T> {\n         // The branch on needs_drop() is an -O1 performance optimization.\n         // Without the branch, dropping TypedArena<u8> takes linear time.\n         if mem::needs_drop::<T>() {\n-            let mut start = self.start();\n-            // Destroy all allocated objects.\n-            for _ in 0..len {\n-                ptr::drop_in_place(start);\n-                start = start.offset(1);\n-            }\n+            ptr::drop_in_place(MaybeUninit::slice_assume_init_mut(&mut self.storage[..len]));\n         }\n     }\n "}]}