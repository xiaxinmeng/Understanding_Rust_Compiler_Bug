{"sha": "2f866974d9bfd7cd3be89f3806dbb623cf358bf3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmODY2OTc0ZDliZmQ3Y2QzYmU4OWYzODA2ZGJiNjIzY2YzNThiZjM=", "commit": {"author": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-08-10T13:07:13Z"}, "committer": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-08-10T13:07:13Z"}, "message": "gen clone for tuple enums", "tree": {"sha": "5f7ff284a8f79f21bf3a5209f24743327f5f0dbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f7ff284a8f79f21bf3a5209f24743327f5f0dbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f866974d9bfd7cd3be89f3806dbb623cf358bf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f866974d9bfd7cd3be89f3806dbb623cf358bf3", "html_url": "https://github.com/rust-lang/rust/commit/2f866974d9bfd7cd3be89f3806dbb623cf358bf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f866974d9bfd7cd3be89f3806dbb623cf358bf3/comments", "author": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0adb39de3ea58edf054d7344f4daf694a8910ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0adb39de3ea58edf054d7344f4daf694a8910ae", "html_url": "https://github.com/rust-lang/rust/commit/e0adb39de3ea58edf054d7344f4daf694a8910ae"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "f256bf035ba61f2d8fd40ecdc157fc1ff5accfc3", "filename": "crates/ide_assists/src/handlers/replace_derive_with_manual_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f866974d9bfd7cd3be89f3806dbb623cf358bf3/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f866974d9bfd7cd3be89f3806dbb623cf358bf3/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs?ref=2f866974d9bfd7cd3be89f3806dbb623cf358bf3", "patch": "@@ -567,7 +567,7 @@ enum Foo {\n impl Clone for Foo {\n     $0fn clone(&self) -> Self {\n         match self {\n-            Self::Bar(arg1) => Self::Bar(arg1.clone()),\n+            Self::Bar(arg0) => Self::Bar(arg0.clone()),\n             Self::Baz => Self::Baz,\n         }\n     }"}, {"sha": "04f396d46e20a24bf15fb3054ab02e3470f7c46f", "filename": "crates/ide_assists/src/utils/gen_trait_fn_body.rs", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2f866974d9bfd7cd3be89f3806dbb623cf358bf3/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f866974d9bfd7cd3be89f3806dbb623cf358bf3/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs?ref=2f866974d9bfd7cd3be89f3806dbb623cf358bf3", "patch": "@@ -58,16 +58,29 @@ fn gen_clone_impl(adt: &ast::Adt, func: &ast::Fn) -> Option<()> {\n                             let field = make::record_expr_field(name_ref, Some(method_call));\n                             fields.push(field);\n                         }\n-                        let pattern = make::record_pat(variant_name.clone(), pats.into_iter());\n-\n+                        let pat = make::record_pat(variant_name.clone(), pats.into_iter());\n                         let fields = make::record_expr_field_list(fields);\n                         let record_expr = make::record_expr(variant_name, fields).into();\n-\n-                        arms.push(make::match_arm(Some(pattern.into()), None, record_expr));\n+                        arms.push(make::match_arm(Some(pat.into()), None, record_expr));\n                     }\n \n                     // => match self { Self::Name(arg1) => Self::Name(arg1.clone()) }\n-                    Some(ast::FieldList::TupleFieldList(list)) => todo!(),\n+                    Some(ast::FieldList::TupleFieldList(list)) => {\n+                        let mut pats = vec![];\n+                        let mut fields = vec![];\n+                        for (i, _) in list.fields().enumerate() {\n+                            let field_name = format!(\"arg{}\", i);\n+                            let pat = make::ident_pat(false, false, make::name(&field_name));\n+                            pats.push(pat.into());\n+\n+                            let f_path = make::expr_path(make::ext::ident_path(&field_name));\n+                            fields.push(gen_clone_call(f_path));\n+                        }\n+                        let pat = make::tuple_struct_pat(variant_name.clone(), pats.into_iter());\n+                        let struct_name = make::expr_path(variant_name);\n+                        let tuple_expr = make::expr_call(struct_name, make::arg_list(fields));\n+                        arms.push(make::match_arm(Some(pat.into()), None, tuple_expr));\n+                    }\n \n                     // => match self { Self::Name => Self::Name }\n                     None => {"}]}