{"sha": "831fd783416d9f87ec9308ed56e891d0b1ffdbcd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMWZkNzgzNDE2ZDlmODdlYzkzMDhlZDU2ZTg5MWQwYjFmZmRiY2Q=", "commit": {"author": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2017-10-05T03:00:22Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-11-17T21:50:15Z"}, "message": "add doc_highlight feature flag and tests", "tree": {"sha": "fba456f839de14c0fc114beced70cf55a531f0e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fba456f839de14c0fc114beced70cf55a531f0e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/831fd783416d9f87ec9308ed56e891d0b1ffdbcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/831fd783416d9f87ec9308ed56e891d0b1ffdbcd", "html_url": "https://github.com/rust-lang/rust/commit/831fd783416d9f87ec9308ed56e891d0b1ffdbcd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/831fd783416d9f87ec9308ed56e891d0b1ffdbcd/comments", "author": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbe4ac30797f9e994b3ae275e3edf12b2d450800", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbe4ac30797f9e994b3ae275e3edf12b2d450800", "html_url": "https://github.com/rust-lang/rust/commit/cbe4ac30797f9e994b3ae275e3edf12b2d450800"}], "stats": {"total": 112, "additions": 112, "deletions": 0}, "files": [{"sha": "8aca01bb6384d6f8898980e786f9d1c2ab24ab35", "filename": "src/doc/unstable-book/src/language-features/doc-spotlight.md", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/831fd783416d9f87ec9308ed56e891d0b1ffdbcd/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fdoc-spotlight.md", "raw_url": "https://github.com/rust-lang/rust/raw/831fd783416d9f87ec9308ed56e891d0b1ffdbcd/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fdoc-spotlight.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fdoc-spotlight.md?ref=831fd783416d9f87ec9308ed56e891d0b1ffdbcd", "patch": "@@ -0,0 +1,27 @@\n+# `doc_spotlight`\n+\n+The tracking issue for this feature is: [TODO]\n+\n+The `doc_spotlight` feature allows the use of the `spotlight` parameter to the `#[doc]` attribute,\n+to \"spotlight\" a specific trait on the return values of functions. Adding a `#[doc(spotlight)]`\n+attribute to a trait definition will make rustdoc print extra information for functions which return\n+a type that implements that trait. This attribute is applied to the `Iterator`, `io::Read`, and\n+`io::Write` traits in the standard library.\n+\n+You can do this on your own traits, like this:\n+\n+```\n+#![feature(doc_spotlight)]\n+\n+#[doc(spotlight)]\n+pub trait MyTrait {}\n+\n+pub struct MyStruct;\n+impl MyTrait for MyStruct {}\n+\n+/// The docs for this function will have an extra line about `MyStruct` implementing `MyTrait`,\n+/// without having to write that yourself!\n+pub fn my_fn() -> MyStruct { MyStruct }\n+```\n+\n+This feature was originally implemented in PR [TODO]."}, {"sha": "631b9f98589f64e34fd2d7c944b6b750598482b7", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/831fd783416d9f87ec9308ed56e891d0b1ffdbcd/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/831fd783416d9f87ec9308ed56e891d0b1ffdbcd/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=831fd783416d9f87ec9308ed56e891d0b1ffdbcd", "patch": "@@ -107,6 +107,24 @@\n #![feature(const_unsafe_cell_new)]\n #![feature(const_cell_new)]\n #![feature(const_nonzero_new)]\n+#![cfg_attr(not(stage0), feature(doc_spotlight))]\n+\n+#![cfg_attr(not(stage0), feature(const_min_value))]\n+#![cfg_attr(not(stage0), feature(const_max_value))]\n+#![cfg_attr(not(stage0), feature(const_atomic_bool_new))]\n+#![cfg_attr(not(stage0), feature(const_atomic_isize_new))]\n+#![cfg_attr(not(stage0), feature(const_atomic_usize_new))]\n+#![cfg_attr(not(stage0), feature(const_atomic_i8_new))]\n+#![cfg_attr(not(stage0), feature(const_atomic_u8_new))]\n+#![cfg_attr(not(stage0), feature(const_atomic_i16_new))]\n+#![cfg_attr(not(stage0), feature(const_atomic_u16_new))]\n+#![cfg_attr(not(stage0), feature(const_atomic_i32_new))]\n+#![cfg_attr(not(stage0), feature(const_atomic_u32_new))]\n+#![cfg_attr(not(stage0), feature(const_atomic_i64_new))]\n+#![cfg_attr(not(stage0), feature(const_atomic_u64_new))]\n+#![cfg_attr(not(stage0), feature(const_unsafe_cell_new))]\n+#![cfg_attr(not(stage0), feature(const_cell_new))]\n+#![cfg_attr(not(stage0), feature(const_nonzero_new))]\n \n #[prelude_import]\n #[allow(unused)]"}, {"sha": "ccc89ccdcf4c3ff3d5d9a69bcb8faab583facc5c", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/831fd783416d9f87ec9308ed56e891d0b1ffdbcd/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/831fd783416d9f87ec9308ed56e891d0b1ffdbcd/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=831fd783416d9f87ec9308ed56e891d0b1ffdbcd", "patch": "@@ -329,6 +329,7 @@\n #![feature(vec_push_all)]\n #![feature(doc_cfg)]\n #![feature(doc_masked)]\n+#![feature(doc_spotlight)]\n #![cfg_attr(test, feature(update_panic_count))]\n #![cfg_attr(windows, feature(const_atomic_ptr_new))]\n "}, {"sha": "9bfb3bdbdb4de500570aed114148b7e3a919d465", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/831fd783416d9f87ec9308ed56e891d0b1ffdbcd/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/831fd783416d9f87ec9308ed56e891d0b1ffdbcd/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=831fd783416d9f87ec9308ed56e891d0b1ffdbcd", "patch": "@@ -381,6 +381,8 @@ declare_features! (\n     (active, doc_cfg, \"1.21.0\", Some(43781)),\n     // #[doc(masked)]\n     (active, doc_masked, \"1.21.0\", Some(44027)),\n+    // #[doc(spotlight)]\n+    (active, doc_spotlight, \"1.22.0\", None),\n \n     // allow `#[must_use]` on functions and comparison operators (RFC 1940)\n     (active, fn_must_use, \"1.21.0\", Some(43302)),\n@@ -1292,6 +1294,10 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                     gate_feature_post!(&self, doc_masked, attr.span,\n                         \"#[doc(masked)] is experimental\"\n                     );\n+                } else if content.iter().any(|c| c.check_name(\"spotlight\")) {\n+                    gate_feature_post!(&self, doc_spotlight, attr.span,\n+                        \"#[doc(spotlight)] is experimental\"\n+                    );\n                 }\n             }\n         }"}, {"sha": "6369358538d50417bac4f2e58da643eb6fddf16c", "filename": "src/test/compile-fail/feature-gate-doc_spotlight.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/831fd783416d9f87ec9308ed56e891d0b1ffdbcd/src%2Ftest%2Fcompile-fail%2Ffeature-gate-doc_spotlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/831fd783416d9f87ec9308ed56e891d0b1ffdbcd/src%2Ftest%2Fcompile-fail%2Ffeature-gate-doc_spotlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-doc_spotlight.rs?ref=831fd783416d9f87ec9308ed56e891d0b1ffdbcd", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[doc(spotlight)] //~ ERROR: #[doc(spotlight)] is experimental\n+trait SomeTrait {}\n+\n+fn main() {}"}, {"sha": "eb05b261fcc863e034e42fbcc1ff96512b42156d", "filename": "src/test/rustdoc/doc-spotlight.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/831fd783416d9f87ec9308ed56e891d0b1ffdbcd/src%2Ftest%2Frustdoc%2Fdoc-spotlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/831fd783416d9f87ec9308ed56e891d0b1ffdbcd/src%2Ftest%2Frustdoc%2Fdoc-spotlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdoc-spotlight.rs?ref=831fd783416d9f87ec9308ed56e891d0b1ffdbcd", "patch": "@@ -0,0 +1,46 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(doc_spotlight)]\n+\n+pub struct Wrapper<T> {\n+    inner: T,\n+}\n+\n+impl<T: SomeTrait> SomeTrait for Wrapper<T> {}\n+\n+#[doc(spotlight)]\n+pub trait SomeTrait {\n+    // @has doc_spotlight/trait.SomeTrait.html\n+    // @has - '//code[@class=\"spotlight\"]' 'impl<T: SomeTrait> SomeTrait for Wrapper<T>'\n+    fn wrap_me(self) -> Wrapper<Self> where Self: Sized {\n+        Wrapper {\n+            inner: self,\n+        }\n+    }\n+}\n+\n+pub struct SomeStruct;\n+impl SomeTrait for SomeStruct {}\n+\n+impl SomeStruct {\n+    // @has doc_spotlight/struct.SomeStruct.html\n+    // @has - '//code[@class=\"spotlight\"]' 'impl SomeTrait for SomeStruct'\n+    // @has - '//code[@class=\"spotlight\"]' 'impl<T: SomeTrait> SomeTrait for Wrapper<T>'\n+    pub fn new() -> SomeStruct {\n+        SomeStruct\n+    }\n+}\n+\n+// @has doc_spotlight/fn.bare_fn.html\n+// @has - '//code[@class=\"spotlight\"]' 'impl SomeTrait for SomeStruct'\n+pub fn bare_fn() -> SomeStruct {\n+    SomeStruct\n+}"}]}