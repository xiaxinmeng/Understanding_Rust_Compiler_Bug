{"sha": "ba46b6837367204e0ae4ba020a788df06dc2ebd8", "node_id": "C_kwDOAAsO6NoAKGJhNDZiNjgzNzM2NzIwNGUwYWU0YmEwMjBhNzg4ZGYwNmRjMmViZDg", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-11-11T20:03:33Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-11-11T20:03:33Z"}, "message": "Skip stable hashing without incremental.", "tree": {"sha": "0b7fe37941781bb400e633852316f04bd4c9195f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b7fe37941781bb400e633852316f04bd4c9195f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba46b6837367204e0ae4ba020a788df06dc2ebd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba46b6837367204e0ae4ba020a788df06dc2ebd8", "html_url": "https://github.com/rust-lang/rust/commit/ba46b6837367204e0ae4ba020a788df06dc2ebd8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba46b6837367204e0ae4ba020a788df06dc2ebd8/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d86e6abaf972bf3a31a8e5e3d948b7d5bf0d289", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d86e6abaf972bf3a31a8e5e3d948b7d5bf0d289", "html_url": "https://github.com/rust-lang/rust/commit/9d86e6abaf972bf3a31a8e5e3d948b7d5bf0d289"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "8f96f5a9eb3e99b3e8db919853a31c4c5aff0b0b", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba46b6837367204e0ae4ba020a788df06dc2ebd8/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba46b6837367204e0ae4ba020a788df06dc2ebd8/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=ba46b6837367204e0ae4ba020a788df06dc2ebd8", "patch": "@@ -192,7 +192,9 @@ impl<'tcx> CtxtInterners<'tcx> {\n \n                     // It's impossible to hash inference variables (and will ICE), so we don't need to try to cache them.\n                     // Without incremental, we rarely stable-hash types, so let's not do it proactively.\n-                    let stable_hash = if flags.flags.intersects(TypeFlags::NEEDS_INFER) {\n+                    let stable_hash = if flags.flags.intersects(TypeFlags::NEEDS_INFER)\n+                        || sess.opts.incremental.is_none()\n+                    {\n                         Fingerprint::ZERO\n                     } else {\n                         let mut hasher = StableHasher::new();"}]}