{"sha": "021bea15fc3e408d6db7bc7f7d999297e678ca01", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMWJlYTE1ZmMzZTQwOGQ2ZGI3YmM3ZjdkOTk5Mjk3ZTY3OGNhMDE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-12T21:22:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-12T21:22:01Z"}, "message": "auto merge of #14813 : cmr/rust/once-docs-unsafe, r=alexcrichton", "tree": {"sha": "8415f96c77c8a0ad5ac5597c1886b6a9cb1d6685", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8415f96c77c8a0ad5ac5597c1886b6a9cb1d6685"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/021bea15fc3e408d6db7bc7f7d999297e678ca01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/021bea15fc3e408d6db7bc7f7d999297e678ca01", "html_url": "https://github.com/rust-lang/rust/commit/021bea15fc3e408d6db7bc7f7d999297e678ca01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/021bea15fc3e408d6db7bc7f7d999297e678ca01/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a9228b7eaa08bfdd4748a7c7178a18d6d435caa", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a9228b7eaa08bfdd4748a7c7178a18d6d435caa", "html_url": "https://github.com/rust-lang/rust/commit/3a9228b7eaa08bfdd4748a7c7178a18d6d435caa"}, {"sha": "8472849529a9e5a809822d5f9dfc132d937064b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/8472849529a9e5a809822d5f9dfc132d937064b1", "html_url": "https://github.com/rust-lang/rust/commit/8472849529a9e5a809822d5f9dfc132d937064b1"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "5240d303ca45b27974ed3ce39b2cafafbab34de6", "filename": "src/libsync/one.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/021bea15fc3e408d6db7bc7f7d999297e678ca01/src%2Flibsync%2Fone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/021bea15fc3e408d6db7bc7f7d999297e678ca01/src%2Flibsync%2Fone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsync%2Fone.rs?ref=021bea15fc3e408d6db7bc7f7d999297e678ca01", "patch": "@@ -20,22 +20,18 @@ use core::atomics;\n \n use mutex::{StaticMutex, MUTEX_INIT};\n \n-/// A type which can be used to run a one-time global initialization. This type\n-/// is *unsafe* to use because it is built on top of the `Mutex` in this module.\n-/// It does not know whether the currently running task is in a green or native\n-/// context, and a blocking mutex should *not* be used under normal\n-/// circumstances on a green task.\n-///\n-/// Despite its unsafety, it is often useful to have a one-time initialization\n-/// routine run for FFI bindings or related external functionality. This type\n-/// can only be statically constructed with the `ONCE_INIT` value.\n+/// A synchronization primitive which can be used to run a one-time global\n+/// initialization. Useful for one-time initialization for FFI or related\n+/// functionality. This type can only be constructed with the `ONCE_INIT`\n+/// value.\n ///\n /// # Example\n ///\n /// ```rust\n /// use sync::one::{Once, ONCE_INIT};\n ///\n /// static mut START: Once = ONCE_INIT;\n+///\n /// unsafe {\n ///     START.doit(|| {\n ///         // run initialization here\n@@ -60,7 +56,7 @@ impl Once {\n     /// will be executed if this is the first time `doit` has been called, and\n     /// otherwise the routine will *not* be invoked.\n     ///\n-    /// This method will block the calling *os thread* if another initialization\n+    /// This method will block the calling task if another initialization\n     /// routine is currently running.\n     ///\n     /// When this function returns, it is guaranteed that some initialization"}]}