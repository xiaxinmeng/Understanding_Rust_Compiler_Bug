{"sha": "4504648090a9b8cae909424826dc4190f23df044", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MDQ2NDgwOTBhOWI4Y2FlOTA5NDI0ODI2ZGM0MTkwZjIzZGYwNDQ=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-06-21T19:30:41Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-06-24T11:09:39Z"}, "message": "improper_ctypes: only allow params in defns mode\n\nThis commit adjusts the behaviour introduced in a previous commit so\nthat generic parameters and projections are only allowed in the\ndefinitions mode - and are otherwise a bug. Generic parameters in\ndeclarations are prohibited earlier in the compiler, so if that branch\nwere reached, it would be a bug.\n\nSigned-off-by: David Wood <david@davidtw.co>", "tree": {"sha": "7c5394c9f19b892559f7eaa7f5fe3cad77143945", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c5394c9f19b892559f7eaa7f5fe3cad77143945"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4504648090a9b8cae909424826dc4190f23df044", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl7zNHMACgkQJZLnbIc4\nH9kwWxAArhHnaBgJ//HpYIYQlYrYT+g+mIe1f99QE9+jeBCSGxh0ZN3LlM8QxG71\naN/pF8d2AZCZbo1MB72Sz6KF2mwtlAyJek/hR95oE3wS9PBjMUjWYa5MehnVTimu\nxaFncSG7bCQs5bKsVo6MIG2mniATNTGSMu97Ersz1wY74EbgKNAuKoQzx7lEK7t1\nZdOazjmVVaUStfEyrVDb91xRLfLPkOK3kUceXrrmjGTe+O931KYp/pP/N9Y7Oqk+\n5y22+8bZjTWyjf6R4eF3Z3+793Y9b0Nk+OB4xpKAKKSZIRCznzOk4mntbohrcvjf\nnJ1LOvPGq63aeLG3W3QhoGBzAcbTtpwsqN+rNDJVIp2g3DUIa94QpJ7VdegFQbLu\nddMM1D2fnbpdUIzee/VJARmifnErDgamwwuWhx0qcCBI4U1MZ8DgtjnJQrmVhN+N\nN9XSeqnRRWPa4PwOXsoz6kT5sH3Mnwk8376EqErQJyEjTTi0UFPHqjBzdm5Ww8P/\nvxDEW3BamVlXzR3fXJIcfY/Li/TX4Fmf78Hohxt+ANaAlOpHg71io8v7npBG+QXF\nyhsXIM8CI/OXCAwXRVp+ZLgLHMcFdWVsriQY/WdE/AS2WabXvNd+fhzGpYaBk2mS\nh7xIPqM9xbihvLgtS522HurtSx57skQJ6J/gTMfFE6xbIsWsKC0=\n=HmyI\n-----END PGP SIGNATURE-----", "payload": "tree 7c5394c9f19b892559f7eaa7f5fe3cad77143945\nparent 5c8634805cbaed6010e15a15f15e840bd019079a\nauthor David Wood <david@davidtw.co> 1592767841 +0100\ncommitter David Wood <david@davidtw.co> 1592996979 +0100\n\nimproper_ctypes: only allow params in defns mode\n\nThis commit adjusts the behaviour introduced in a previous commit so\nthat generic parameters and projections are only allowed in the\ndefinitions mode - and are otherwise a bug. Generic parameters in\ndeclarations are prohibited earlier in the compiler, so if that branch\nwere reached, it would be a bug.\n\nSigned-off-by: David Wood <david@davidtw.co>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4504648090a9b8cae909424826dc4190f23df044", "html_url": "https://github.com/rust-lang/rust/commit/4504648090a9b8cae909424826dc4190f23df044", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4504648090a9b8cae909424826dc4190f23df044/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c8634805cbaed6010e15a15f15e840bd019079a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c8634805cbaed6010e15a15f15e840bd019079a", "html_url": "https://github.com/rust-lang/rust/commit/5c8634805cbaed6010e15a15f15e840bd019079a"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "cfafb86fbedb1e0574ecd80c83668b48a768133c", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4504648090a9b8cae909424826dc4190f23df044/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4504648090a9b8cae909424826dc4190f23df044/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=4504648090a9b8cae909424826dc4190f23df044", "patch": "@@ -878,9 +878,15 @@ impl<'a, 'tcx> ImproperCTypesVisitor<'a, 'tcx> {\n \n             // `extern \"C\" fn` functions can have type parameters, which may or may not be FFI-safe,\n             //  so they are currently ignored for the purposes of this lint.\n-            ty::Param(..) | ty::Projection(..) => FfiSafe,\n+            ty::Param(..) | ty::Projection(..)\n+                if matches!(self.mode, ImproperCTypesMode::Definitions) =>\n+            {\n+                FfiSafe\n+            }\n \n-            ty::Infer(..)\n+            ty::Param(..)\n+            | ty::Projection(..)\n+            | ty::Infer(..)\n             | ty::Bound(..)\n             | ty::Error(_)\n             | ty::Closure(..)"}]}