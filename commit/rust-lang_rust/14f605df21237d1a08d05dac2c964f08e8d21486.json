{"sha": "14f605df21237d1a08d05dac2c964f08e8d21486", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZjYwNWRmMjEyMzdkMWEwOGQwNWRhYzJjOTY0ZjA4ZThkMjE0ODY=", "commit": {"author": {"name": "Adrien T\u00e9tar", "email": "adri-from-59@hotmail.fr", "date": "2014-01-17T19:13:02Z"}, "committer": {"name": "Adrien T\u00e9tar", "email": "adri-from-59@hotmail.fr", "date": "2014-01-18T12:30:32Z"}, "message": "doc: fix dangling links in rust.md\n\nFixes #11559 (not that the manual couldn't use a review).", "tree": {"sha": "30f489b2be45d4d7b7cdbb8aec677c87520d77f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30f489b2be45d4d7b7cdbb8aec677c87520d77f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14f605df21237d1a08d05dac2c964f08e8d21486", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14f605df21237d1a08d05dac2c964f08e8d21486", "html_url": "https://github.com/rust-lang/rust/commit/14f605df21237d1a08d05dac2c964f08e8d21486", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14f605df21237d1a08d05dac2c964f08e8d21486/comments", "author": {"login": "adrientetar", "id": 1250894, "node_id": "MDQ6VXNlcjEyNTA4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1250894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrientetar", "html_url": "https://github.com/adrientetar", "followers_url": "https://api.github.com/users/adrientetar/followers", "following_url": "https://api.github.com/users/adrientetar/following{/other_user}", "gists_url": "https://api.github.com/users/adrientetar/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrientetar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrientetar/subscriptions", "organizations_url": "https://api.github.com/users/adrientetar/orgs", "repos_url": "https://api.github.com/users/adrientetar/repos", "events_url": "https://api.github.com/users/adrientetar/events{/privacy}", "received_events_url": "https://api.github.com/users/adrientetar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "adrientetar", "id": 1250894, "node_id": "MDQ6VXNlcjEyNTA4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1250894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrientetar", "html_url": "https://github.com/adrientetar", "followers_url": "https://api.github.com/users/adrientetar/followers", "following_url": "https://api.github.com/users/adrientetar/following{/other_user}", "gists_url": "https://api.github.com/users/adrientetar/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrientetar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrientetar/subscriptions", "organizations_url": "https://api.github.com/users/adrientetar/orgs", "repos_url": "https://api.github.com/users/adrientetar/repos", "events_url": "https://api.github.com/users/adrientetar/events{/privacy}", "received_events_url": "https://api.github.com/users/adrientetar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c19f51d52b596987d27f9c1b3fb8b79424296d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c19f51d52b596987d27f9c1b3fb8b79424296d0", "html_url": "https://github.com/rust-lang/rust/commit/2c19f51d52b596987d27f9c1b3fb8b79424296d0"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "bf0e9dd090ae432a1d236488ff9c67908d9d17ac", "filename": "doc/rust.md", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/14f605df21237d1a08d05dac2c964f08e8d21486/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/14f605df21237d1a08d05dac2c964f08e8d21486/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=14f605df21237d1a08d05dac2c964f08e8d21486", "patch": "@@ -2211,12 +2211,9 @@ dereferences (`*expr`), [indexing expressions](#index-expressions)\n (`expr[expr]`), and [field references](#field-expressions) (`expr.f`).\n All other expressions are rvalues.\n \n-The left operand of an [assignment](#assignment-expressions),\n-[binary move](#binary-move-expressions) or\n+The left operand of an [assignment](#assignment-expressions) or\n [compound-assignment](#compound-assignment-expressions) expression is an lvalue context,\n-as is the single operand of a unary [borrow](#unary-operator-expressions),\n-or [move](#unary-move-expressions) expression,\n-and _both_ operands of a [swap](#swap-expressions) expression.\n+as is the single operand of a unary [borrow](#unary-operator-expressions).\n All other expression contexts are rvalue contexts.\n \n When an lvalue is evaluated in an _lvalue context_, it denotes a memory location;\n@@ -2229,9 +2226,8 @@ A temporary's lifetime equals the largest lifetime of any reference that points\n \n When a [local variable](#memory-slots) is used\n as an [rvalue](#lvalues-rvalues-and-temporaries)\n-the variable will either be [moved](#move-expressions) or copied,\n-depending on its type.\n-For types that contain [owning pointers](#owning-pointers)\n+the variable will either be moved or copied, depending on its type.\n+For types that contain [owning pointers](#pointer-types)\n or values that implement the special trait `Drop`,\n the variable is moved.\n All other types are copied.\n@@ -3144,19 +3140,20 @@ A `struct` *type* is a heterogeneous product of other types, called the *fields*\n the *record* types of the ML family,\n or the *structure* types of the Lisp family.]\n \n-New instances of a `struct` can be constructed with a [struct expression](#struct-expressions).\n+New instances of a `struct` can be constructed with a [struct expression](#structure-expressions).\n \n The memory order of fields in a `struct` is given by the item defining it.\n Fields may be given in any order in a corresponding struct *expression*;\n the resulting `struct` value will always be laid out in memory in the order specified by the corresponding *item*.\n \n-The fields of a `struct` may be qualified by [visibility modifiers](#visibility-modifiers),\n+The fields of a `struct` may be qualified by [visibility modifiers](#re-exporting-and-visibility),\n to restrict access to implementation-private data in a structure.\n \n A _tuple struct_ type is just like a structure type, except that the fields are anonymous.\n \n A _unit-like struct_ type is like a structure type, except that it has no fields.\n-The one value constructed by the associated [structure expression](#structure-expression) is the only value that inhabits such a type.\n+The one value constructed by the associated [structure expression](#structure-expressions)\n+is the only value that inhabits such a type.\n \n ### Enumerated types\n \n@@ -3827,7 +3824,7 @@ over the output format of a Rust crate.\n ### Logging system\n \n The runtime contains a system for directing [logging\n-expressions](#log-expressions) to a logging console and/or internal logging\n+expressions](#logging-expressions) to a logging console and/or internal logging\n buffers. Logging can be enabled per module.\n \n Logging output is enabled by setting the `RUST_LOG` environment"}]}