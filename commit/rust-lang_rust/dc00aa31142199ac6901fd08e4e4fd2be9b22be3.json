{"sha": "dc00aa31142199ac6901fd08e4e4fd2be9b22be3", "node_id": "C_kwDOAAsO6NoAKGRjMDBhYTMxMTQyMTk5YWM2OTAxZmQwOGU0ZTRmZDJiZTliMjJiZTM", "commit": {"author": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2022-09-22T00:47:24Z"}, "committer": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2023-01-09T22:07:25Z"}, "message": "update: `lints.rs` for renamed traits\n\nupdate: `lints.rs` for renamed `SessionSubdiagnostic` and `AddSubdiagnostic`\n\nfix: NonSnakeCaseDiagSub\n\nfix: OverflowingBinHexSign", "tree": {"sha": "0c479f29fcc68ca423d6648f67cad02d469ad6a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c479f29fcc68ca423d6648f67cad02d469ad6a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc00aa31142199ac6901fd08e4e4fd2be9b22be3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc00aa31142199ac6901fd08e4e4fd2be9b22be3", "html_url": "https://github.com/rust-lang/rust/commit/dc00aa31142199ac6901fd08e4e4fd2be9b22be3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc00aa31142199ac6901fd08e4e4fd2be9b22be3/comments", "author": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3bb2ebfbfba0e928f27d2aea04cc070a1b8ebfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3bb2ebfbfba0e928f27d2aea04cc070a1b8ebfe", "html_url": "https://github.com/rust-lang/rust/commit/e3bb2ebfbfba0e928f27d2aea04cc070a1b8ebfe"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "431ded9cd5f2d976bc5c31ef98b1b1f030e5a2f5", "filename": "compiler/rustc_lint/src/lints.rs", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/dc00aa31142199ac6901fd08e4e4fd2be9b22be3/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc00aa31142199ac6901fd08e4e4fd2be9b22be3/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flints.rs?ref=dc00aa31142199ac6901fd08e4e4fd2be9b22be3", "patch": "@@ -1,6 +1,6 @@\n-use rustc_errors::{fluent, AddSubdiagnostic, Applicability, DecorateLint, EmissionGuarantee};\n+use rustc_errors::{fluent, AddToDiagnostic, Applicability, DecorateLint, EmissionGuarantee};\n use rustc_hir::def_id::DefId;\n-use rustc_macros::{LintDiagnostic, SessionSubdiagnostic};\n+use rustc_macros::{LintDiagnostic, Subdiagnostic};\n use rustc_middle::ty::{Predicate, Ty, TyCtxt};\n use rustc_span::{symbol::Ident, Span, Symbol};\n \n@@ -16,7 +16,7 @@ pub struct ArrayIntoIterDiag<'a> {\n     pub sub: Option<ArrayIntoIterDiagSub>,\n }\n \n-#[derive(SessionSubdiagnostic)]\n+#[derive(Subdiagnostic)]\n pub enum ArrayIntoIterDiagSub {\n     #[suggestion(remove_into_iter_suggestion, code = \"\", applicability = \"maybe-incorrect\")]\n     RemoveIntoIter {\n@@ -129,7 +129,7 @@ pub struct NonCamelCaseType<'a> {\n     pub sub: NonCamelCaseTypeSub,\n }\n \n-#[derive(SessionSubdiagnostic)]\n+#[derive(Subdiagnostic)]\n pub enum NonCamelCaseTypeSub {\n     #[label(label)]\n     Label {\n@@ -162,8 +162,14 @@ pub enum NonSnakeCaseDiagSub {\n     SuggestionAndNote { span: Span },\n }\n \n-impl AddSubdiagnostic for NonSnakeCaseDiagSub {\n-    fn add_to_diagnostic(self, diag: &mut rustc_errors::Diagnostic) {\n+impl AddToDiagnostic for NonSnakeCaseDiagSub {\n+    fn add_to_diagnostic_with<F>(self, diag: &mut rustc_errors::Diagnostic, _: F)\n+    where\n+        F: Fn(\n+            &mut rustc_errors::Diagnostic,\n+            rustc_errors::SubdiagnosticMessage,\n+        ) -> rustc_errors::SubdiagnosticMessage,\n+    {\n         match self {\n             NonSnakeCaseDiagSub::Label { span } => {\n                 diag.span_label(span, fluent::label);\n@@ -209,7 +215,7 @@ pub struct NonUpperCaseGlobal<'a> {\n     pub sub: NonUpperCaseGlobalSub,\n }\n \n-#[derive(SessionSubdiagnostic)]\n+#[derive(Subdiagnostic)]\n pub enum NonUpperCaseGlobalSub {\n     #[label(label)]\n     Label {\n@@ -307,8 +313,14 @@ pub enum OverflowingBinHexSign {\n     Negative,\n }\n \n-impl AddSubdiagnostic for OverflowingBinHexSign {\n-    fn add_to_diagnostic(self, diag: &mut rustc_errors::Diagnostic) {\n+impl AddToDiagnostic for OverflowingBinHexSign {\n+    fn add_to_diagnostic_with<F>(self, diag: &mut rustc_errors::Diagnostic, _: F)\n+    where\n+        F: Fn(\n+            &mut rustc_errors::Diagnostic,\n+            rustc_errors::SubdiagnosticMessage,\n+        ) -> rustc_errors::SubdiagnosticMessage,\n+    {\n         match self {\n             OverflowingBinHexSign::Positive => {\n                 diag.note(fluent::positive_note);\n@@ -321,7 +333,7 @@ impl AddSubdiagnostic for OverflowingBinHexSign {\n     }\n }\n \n-#[derive(SessionSubdiagnostic)]\n+#[derive(Subdiagnostic)]\n pub enum OverflowingBinHexSub<'a> {\n     #[suggestion(\n         suggestion,\n@@ -493,7 +505,7 @@ pub struct PathStatementDrop {\n     pub sub: PathStatementDropSub,\n }\n \n-#[derive(SessionSubdiagnostic)]\n+#[derive(Subdiagnostic)]\n pub enum PathStatementDropSub {\n     #[suggestion(suggestion, code = \"drop({snippet});\", applicability = \"machine-applicable\")]\n     Suggestion {"}]}