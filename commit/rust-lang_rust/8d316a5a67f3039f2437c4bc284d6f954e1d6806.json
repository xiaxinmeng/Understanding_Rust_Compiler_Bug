{"sha": "8d316a5a67f3039f2437c4bc284d6f954e1d6806", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkMzE2YTVhNjdmMzAzOWYyNDM3YzRiYzI4NGQ2Zjk1NGUxZDY4MDY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-13T16:22:58Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-25T06:17:29Z"}, "message": "Use structured suggestion for bad `Fn` traits", "tree": {"sha": "6bf5874584329ed7e057f528177892ff71aa5e37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bf5874584329ed7e057f528177892ff71aa5e37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d316a5a67f3039f2437c4bc284d6f954e1d6806", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d316a5a67f3039f2437c4bc284d6f954e1d6806", "html_url": "https://github.com/rust-lang/rust/commit/8d316a5a67f3039f2437c4bc284d6f954e1d6806", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d316a5a67f3039f2437c4bc284d6f954e1d6806/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66ea471f9d4a14e5af72e86ee7b12ed9d9fa3ca5", "url": "https://api.github.com/repos/rust-lang/rust/commits/66ea471f9d4a14e5af72e86ee7b12ed9d9fa3ca5", "html_url": "https://github.com/rust-lang/rust/commit/66ea471f9d4a14e5af72e86ee7b12ed9d9fa3ca5"}], "stats": {"total": 60, "additions": 40, "deletions": 20}, "files": [{"sha": "07b2f2c47a2a52f94f1a530d82cd5c7637ae1c25", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 33, "deletions": 6, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/8d316a5a67f3039f2437c4bc284d6f954e1d6806/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d316a5a67f3039f2437c4bc284d6f954e1d6806/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=8d316a5a67f3039f2437c4bc284d6f954e1d6806", "patch": "@@ -4,9 +4,9 @@\n \n use crate::hir::def::{CtorOf, DefKind, Res};\n use crate::hir::def_id::DefId;\n+use crate::hir::print;\n use crate::hir::ptr::P;\n-use crate::hir::HirVec;\n-use crate::hir::{self, ExprKind, GenericArg, GenericArgs};\n+use crate::hir::{self, ExprKind, GenericArg, GenericArgs, HirVec};\n use crate::lint;\n use crate::middle::lang_items::SizedTraitLangItem;\n use crate::middle::resolve_lifetime as rl;\n@@ -1025,19 +1025,46 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             && trait_segment.generic_args().parenthesized != trait_def.paren_sugar\n         {\n             // For now, require that parenthetical notation be used only with `Fn()` etc.\n-            let (msg, help) = if trait_def.paren_sugar {\n+            let (msg, sugg) = if trait_def.paren_sugar {\n                 (\n                     \"the precise format of `Fn`-family traits' type parameters is subject to \\\n                      change\",\n-                    Some(\"use parenthetical notation instead: `Fn(Foo, Bar) -> Baz`\"),\n+                    Some(format!(\n+                        \"{}{} -> {}\",\n+                        trait_segment.ident,\n+                        trait_segment\n+                            .args\n+                            .as_ref()\n+                            .and_then(|args| args.args.get(0))\n+                            .and_then(|arg| match arg {\n+                                hir::GenericArg::Type(ty) => {\n+                                    Some(print::to_string(print::NO_ANN, |s| s.print_type(ty)))\n+                                }\n+                                _ => None,\n+                            })\n+                            .unwrap_or_else(|| \"()\".to_string()),\n+                        trait_segment\n+                            .generic_args()\n+                            .bindings\n+                            .iter()\n+                            .filter_map(|b| match (b.ident.as_str() == \"Output\", &b.kind) {\n+                                (true, hir::TypeBindingKind::Equality { ty }) => {\n+                                    Some(print::to_string(print::NO_ANN, |s| s.print_type(ty)))\n+                                }\n+                                _ => None,\n+                            })\n+                            .next()\n+                            .unwrap_or_else(|| \"()\".to_string()),\n+                    )),\n                 )\n             } else {\n                 (\"parenthetical notation is only stable when used with `Fn`-family traits\", None)\n             };\n             let sess = &self.tcx().sess.parse_sess;\n             let mut err = feature_err(sess, sym::unboxed_closures, span, msg);\n-            if let Some(help) = help {\n-                err.help(help);\n+            if let Some(sugg) = sugg {\n+                let msg = \"use parenthetical notation instead\";\n+                err.span_suggestion(span, msg, sugg, Applicability::MaybeIncorrect);\n             }\n             err.emit();\n         }"}, {"sha": "4addd16649ea08b3efde09dbb16ceba00189cfeb", "filename": "src/test/ui/feature-gates/feature-gate-unboxed-closures-manual-impls.stderr", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8d316a5a67f3039f2437c4bc284d6f954e1d6806/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-manual-impls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d316a5a67f3039f2437c4bc284d6f954e1d6806/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-manual-impls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-manual-impls.stderr?ref=8d316a5a67f3039f2437c4bc284d6f954e1d6806", "patch": "@@ -38,11 +38,10 @@ error[E0658]: the precise format of `Fn`-family traits' type parameters is subje\n   --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:9:6\n    |\n LL | impl Fn<()> for Foo {\n-   |      ^^^^^^\n+   |      ^^^^^^ help: use parenthetical notation instead: `Fn() -> ()`\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n-   = help: use parenthetical notation instead: `Fn(Foo, Bar) -> Baz`\n \n error[E0229]: associated type bindings are not allowed here\n   --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:15:6\n@@ -54,21 +53,19 @@ error[E0658]: the precise format of `Fn`-family traits' type parameters is subje\n   --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:21:6\n    |\n LL | impl FnMut<()> for Bar {\n-   |      ^^^^^^^^^\n+   |      ^^^^^^^^^ help: use parenthetical notation instead: `FnMut() -> ()`\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n-   = help: use parenthetical notation instead: `Fn(Foo, Bar) -> Baz`\n \n error[E0658]: the precise format of `Fn`-family traits' type parameters is subject to change\n   --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:27:6\n    |\n LL | impl FnOnce<()> for Baz {\n-   |      ^^^^^^^^^^\n+   |      ^^^^^^^^^^ help: use parenthetical notation instead: `FnOnce() -> ()`\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n-   = help: use parenthetical notation instead: `Fn(Foo, Bar) -> Baz`\n \n error: aborting due to 8 previous errors\n "}, {"sha": "005ff06e6889897086ddb062635c92e5580bb1d2", "filename": "src/test/ui/feature-gates/feature-gate-unboxed-closures.stderr", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8d316a5a67f3039f2437c4bc284d6f954e1d6806/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d316a5a67f3039f2437c4bc284d6f954e1d6806/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures.stderr?ref=8d316a5a67f3039f2437c4bc284d6f954e1d6806", "patch": "@@ -11,11 +11,10 @@ error[E0658]: the precise format of `Fn`-family traits' type parameters is subje\n   --> $DIR/feature-gate-unboxed-closures.rs:5:6\n    |\n LL | impl FnOnce<(u32, u32)> for Test {\n-   |      ^^^^^^^^^^^^^^^^^^\n+   |      ^^^^^^^^^^^^^^^^^^ help: use parenthetical notation instead: `FnOnce(u32, u32) -> ()`\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n-   = help: use parenthetical notation instead: `Fn(Foo, Bar) -> Baz`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "1c6dd28ce539e69b9c33a75ff45b8e925cadc060", "filename": "src/test/ui/issues/issue-23024.stderr", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8d316a5a67f3039f2437c4bc284d6f954e1d6806/src%2Ftest%2Fui%2Fissues%2Fissue-23024.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d316a5a67f3039f2437c4bc284d6f954e1d6806/src%2Ftest%2Fui%2Fissues%2Fissue-23024.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23024.stderr?ref=8d316a5a67f3039f2437c4bc284d6f954e1d6806", "patch": "@@ -2,11 +2,10 @@ error[E0658]: the precise format of `Fn`-family traits' type parameters is subje\n   --> $DIR/issue-23024.rs:9:39\n    |\n LL |     println!(\"{:?}\",(vfnfer[0] as dyn Fn)(3));\n-   |                                       ^^\n+   |                                       ^^ help: use parenthetical notation instead: `Fn() -> ()`\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n-   = help: use parenthetical notation instead: `Fn(Foo, Bar) -> Baz`\n \n error[E0107]: wrong number of type arguments: expected 1, found 0\n   --> $DIR/issue-23024.rs:9:39"}, {"sha": "ba9d984e7036cac0e0bb28c248f694c5c5312320", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-not-used-on-fn.stderr", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8d316a5a67f3039f2437c4bc284d6f954e1d6806/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-not-used-on-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d316a5a67f3039f2437c4bc284d6f954e1d6806/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-not-used-on-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-not-used-on-fn.stderr?ref=8d316a5a67f3039f2437c4bc284d6f954e1d6806", "patch": "@@ -2,21 +2,19 @@ error[E0658]: the precise format of `Fn`-family traits' type parameters is subje\n   --> $DIR/unboxed-closure-sugar-not-used-on-fn.rs:3:17\n    |\n LL | fn bar1(x: &dyn Fn<(), Output=()>) {\n-   |                 ^^\n+   |                 ^^ help: use parenthetical notation instead: `Fn() -> ()`\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n-   = help: use parenthetical notation instead: `Fn(Foo, Bar) -> Baz`\n \n error[E0658]: the precise format of `Fn`-family traits' type parameters is subject to change\n   --> $DIR/unboxed-closure-sugar-not-used-on-fn.rs:7:28\n    |\n LL | fn bar2<T>(x: &T) where T: Fn<()> {\n-   |                            ^^\n+   |                            ^^ help: use parenthetical notation instead: `Fn() -> ()`\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n-   = help: use parenthetical notation instead: `Fn(Foo, Bar) -> Baz`\n \n error: aborting due to 2 previous errors\n "}]}