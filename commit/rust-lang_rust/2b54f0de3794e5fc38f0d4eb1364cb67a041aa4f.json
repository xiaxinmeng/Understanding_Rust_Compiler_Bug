{"sha": "2b54f0de3794e5fc38f0d4eb1364cb67a041aa4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiNTRmMGRlMzc5NGU1ZmMzOGYwZDRlYjEzNjRjYjY3YTA0MWFhNGY=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-11-27T17:07:58Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-12-23T18:35:22Z"}, "message": "bootstrap: convert rustfmt to use Tarball", "tree": {"sha": "64a054da3cf75f1fc29307682a09eafa2a14a191", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64a054da3cf75f1fc29307682a09eafa2a14a191"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b54f0de3794e5fc38f0d4eb1364cb67a041aa4f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl/jjfsACgkQPgar6Auq\n8ZyftxAAhFJ4fJ/jXGizsVarEVVjL4OFY3ChFWUVZVlXjsWWEpCr7oKs8CTjjzkY\ntb3ey0A2AG3POVgkxr4JJWNf/VUIqEDvV5lgrXQaAQXpfx1xmwEUVSpn3eFaH46j\nx89hVVLYPlpjwkaTEBesQTjwMGM3OTjuu1iWTL1BySzIjfPzBx5PZ98Bo1JIwE7D\nO0G1+XLw52t/jiB/dYoaxeZqi7GkAhxTS1NHX397FdShNOW9QxufEAXKb8AZdrrI\nlW6IDtZwMftNWnvbql8AWnYF0wkZc28oE5iGcypnwGe4nBLgYi1jlJ1IVrETyFYL\nTZ8o332j/txDpRp8Ayu5UZN0ShQ1CuHkCISvKWMJwCaiJaZSa+21wZ7VtRFgRuoj\nhmvvTU9JEl9+SBW3s6fJbaXGr65HdcPHE25B6LRd/q8gauZy1HOQinQtq1KIvasB\ncT2qs3eDYA75Ks+x5dTJEKhX4vK4XOCaZc6yJpHPr5C9RK+JLix66gnN6+RcNSkP\n7QSVkNruQDX/zX1QJ+u1L0nIJ6JYIKDkjaHJi19l1xKLCp3/mKDjtOfZTuPC5Ukb\nvfdMMXHM8HsWYXUcwnOq7354ZLaZfV0D2CVYk93XSc7CCe8tqODmC5yw/Xr9FpPw\nB26K4FhXbCljtA6m3uw9qqVUYpFBXtIza3n0yEIbryp0+iRAsPg=\n=Ea11\n-----END PGP SIGNATURE-----", "payload": "tree 64a054da3cf75f1fc29307682a09eafa2a14a191\nparent 2073ea5c07ea5a83d17fb7d08f67cc55e1010aaf\nauthor Pietro Albini <pietro@pietroalbini.org> 1606496878 +0100\ncommitter Pietro Albini <pietro@pietroalbini.org> 1608748522 +0100\n\nbootstrap: convert rustfmt to use Tarball\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b54f0de3794e5fc38f0d4eb1364cb67a041aa4f", "html_url": "https://github.com/rust-lang/rust/commit/2b54f0de3794e5fc38f0d4eb1364cb67a041aa4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b54f0de3794e5fc38f0d4eb1364cb67a041aa4f/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2073ea5c07ea5a83d17fb7d08f67cc55e1010aaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/2073ea5c07ea5a83d17fb7d08f67cc55e1010aaf", "html_url": "https://github.com/rust-lang/rust/commit/2073ea5c07ea5a83d17fb7d08f67cc55e1010aaf"}], "stats": {"total": 65, "additions": 16, "deletions": 49}, "files": [{"sha": "35e0aeba146529107e3f94bf33110379412f256a", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 7, "deletions": 49, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/2b54f0de3794e5fc38f0d4eb1364cb67a041aa4f/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b54f0de3794e5fc38f0d4eb1364cb67a041aa4f/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=2b54f0de3794e5fc38f0d4eb1364cb67a041aa4f", "patch": "@@ -1355,17 +1355,6 @@ impl Step for Rustfmt {\n         let compiler = self.compiler;\n         let target = self.target;\n \n-        let src = builder.src.join(\"src/tools/rustfmt\");\n-        let release_num = builder.release_num(\"rustfmt\");\n-        let name = pkgname(builder, \"rustfmt\");\n-        let version = builder.rustfmt_info.version(builder, &release_num);\n-\n-        let tmp = tmpdir(builder);\n-        let image = tmp.join(\"rustfmt-image\");\n-        drop(fs::remove_dir_all(&image));\n-        builder.create_dir(&image);\n-\n-        // Prepare the image directory\n         let rustfmt = builder\n             .ensure(tool::Rustfmt { compiler, target, extra_features: Vec::new() })\n             .or_else(|| {\n@@ -1379,44 +1368,13 @@ impl Step for Rustfmt {\n                 None\n             })?;\n \n-        builder.install(&rustfmt, &image.join(\"bin\"), 0o755);\n-        builder.install(&cargofmt, &image.join(\"bin\"), 0o755);\n-        let doc = image.join(\"share/doc/rustfmt\");\n-        builder.install(&src.join(\"README.md\"), &doc, 0o644);\n-        builder.install(&src.join(\"LICENSE-MIT\"), &doc, 0o644);\n-        builder.install(&src.join(\"LICENSE-APACHE\"), &doc, 0o644);\n-\n-        // Prepare the overlay\n-        let overlay = tmp.join(\"rustfmt-overlay\");\n-        drop(fs::remove_dir_all(&overlay));\n-        builder.create_dir(&overlay);\n-        builder.install(&src.join(\"README.md\"), &overlay, 0o644);\n-        builder.install(&src.join(\"LICENSE-MIT\"), &overlay, 0o644);\n-        builder.install(&src.join(\"LICENSE-APACHE\"), &overlay, 0o644);\n-        builder.create(&overlay.join(\"version\"), &version);\n-\n-        // Generate the installer tarball\n-        let mut cmd = rust_installer(builder);\n-        cmd.arg(\"generate\")\n-            .arg(\"--product-name=Rust\")\n-            .arg(\"--rel-manifest-dir=rustlib\")\n-            .arg(\"--success-message=rustfmt-ready-to-fmt.\")\n-            .arg(\"--image-dir\")\n-            .arg(&image)\n-            .arg(\"--work-dir\")\n-            .arg(&tmpdir(builder))\n-            .arg(\"--output-dir\")\n-            .arg(&distdir(builder))\n-            .arg(\"--non-installed-overlay\")\n-            .arg(&overlay)\n-            .arg(format!(\"--package-name={}-{}\", name, target.triple))\n-            .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n-            .arg(\"--component-name=rustfmt-preview\");\n-\n-        builder.info(&format!(\"Dist Rustfmt stage{} ({})\", compiler.stage, target));\n-        let _time = timeit(builder);\n-        builder.run(&mut cmd);\n-        Some(distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target.triple)))\n+        let mut tarball = Tarball::new(builder, \"rustfmt\", &target.triple);\n+        tarball.set_overlay(OverlayKind::Rustfmt);\n+        tarball.is_preview(true);\n+        tarball.add_file(rustfmt, \"bin\", 0o755);\n+        tarball.add_file(cargofmt, \"bin\", 0o755);\n+        tarball.add_legal_and_readme_to(\"share/doc/rustfmt\");\n+        Some(tarball.generate())\n     }\n }\n "}, {"sha": "8543f9d4a386d5bbcb3f98b53dddd143c258c1de", "filename": "src/bootstrap/tarball.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2b54f0de3794e5fc38f0d4eb1364cb67a041aa4f/src%2Fbootstrap%2Ftarball.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b54f0de3794e5fc38f0d4eb1364cb67a041aa4f/src%2Fbootstrap%2Ftarball.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftarball.rs?ref=2b54f0de3794e5fc38f0d4eb1364cb67a041aa4f", "patch": "@@ -11,6 +11,7 @@ pub(crate) enum OverlayKind {\n     Cargo,\n     Clippy,\n     Miri,\n+    Rustfmt,\n }\n \n impl OverlayKind {\n@@ -36,6 +37,11 @@ impl OverlayKind {\n                 \"src/tools/miri/LICENSE-APACHE\",\n                 \"src/tools/miri/LICENSE-MIT\",\n             ],\n+            OverlayKind::Rustfmt => &[\n+                \"src/tools/rustfmt/README.md\",\n+                \"src/tools/rustfmt/LICENSE-APACHE\",\n+                \"src/tools/rustfmt/LICENSE-MIT\",\n+            ],\n         }\n     }\n \n@@ -50,6 +56,9 @@ impl OverlayKind {\n                 builder.clippy_info.version(builder, &builder.release_num(\"clippy\"))\n             }\n             OverlayKind::Miri => builder.miri_info.version(builder, &builder.release_num(\"miri\")),\n+            OverlayKind::Rustfmt => {\n+                builder.rustfmt_info.version(builder, &builder.release_num(\"rustfmt\"))\n+            }\n         }\n     }\n }"}]}