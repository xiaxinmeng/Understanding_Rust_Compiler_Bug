{"sha": "f5aebad28fe69f53497ce0107103c6d5d37b25dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1YWViYWQyOGZlNjlmNTM0OTdjZTAxMDcxMDNjNmQ1ZDM3YjI1ZGM=", "commit": {"author": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2020-09-01T23:15:17Z"}, "committer": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2020-10-05T15:02:58Z"}, "message": "Updates to experimental coverage counter injection\n\nThis is a combination of 18 commits.\n\nCommit #2:\n\nAdditional examples and some small improvements.\n\nCommit #3:\n\nfixed mir-opt non-mir extensions and spanview title elements\n\nCorrected a fairly recent assumption in runtest.rs that all MIR dump\nfiles end in .mir. (It was appending .mir to the graphviz .dot and\nspanview .html file names when generating blessed output files. That\nalso left outdated files in the baseline alongside the files with the\nincorrect names, which I've now removed.)\n\nUpdated spanview HTML title elements to match their content, replacing a\nhardcoded and incorrect name that was left in accidentally when\noriginally submitted.\n\nCommit #4:\n\nadded more test examples\n\nalso improved Makefiles with support for non-zero exit status and to\nforce validation of tests unless a specific test overrides it with a\nspecific comment.\n\nCommit #5:\n\nFixed rare issues after testing on real-world crate\n\nCommit #6:\n\nAddressed PR feedback, and removed temporary -Zexperimental-coverage\n\n-Zinstrument-coverage once again supports the latest capabilities of\nLLVM instrprof coverage instrumentation.\n\nAlso fixed a bug in spanview.\n\nCommit #7:\n\nFix closure handling, add tests for closures and inner items\n\nAnd cleaned up other tests for consistency, and to make it more clear\nwhere spans start/end by breaking up lines.\n\nCommit #8:\n\nrenamed \"typical\" test results \"expected\"\n\nNow that the `llvm-cov show` tests are improved to normally expect\nmatching actuals, and to allow individual tests to override that\nexpectation.\n\nCommit #9:\n\ntest coverage of inline generic struct function\n\nCommit #10:\n\nAddressed review feedback\n\n* Removed unnecessary Unreachable filter.\n* Replaced a match wildcard with remining variants.\n* Added more comments to help clarify the role of successors() in the\nCFG traversal\n\nCommit #11:\n\nrefactoring based on feedback\n\n* refactored `fn coverage_spans()`.\n* changed the way I expand an empty coverage span to improve performance\n* fixed a typo that I had accidently left in, in visit.rs\n\nCommit #12:\n\nOptimized use of SourceMap and SourceFile\n\nCommit #13:\n\nFixed a regression, and synched with upstream\n\nSome generated test file names changed due to some new change upstream.\n\nCommit #14:\n\nStripping out crate disambiguators from demangled names\n\nThese can vary depending on the test platform.\n\nCommit #15:\n\nIgnore llvm-cov show diff on test with generics, expand IO error message\n\nTests with generics produce llvm-cov show results with demangled names\nthat can include an unstable \"crate disambiguator\" (hex value). The\nvalue changes when run in the Rust CI Windows environment. I added a sed\nfilter to strip them out (in a prior commit), but sed also appears to\nfail in the same environment. Until I can figure out a workaround, I'm\njust going to ignore this specific test result. I added a FIXME to\nfollow up later, but it's not that critical.\n\nI also saw an error with Windows GNU, but the IO error did not\nspecify a path for the directory or file that triggered the error. I\nupdated the error messages to provide more info for next, time but also\nnoticed some other tests with similar steps did not fail. Looks\nspurious.\n\nCommit #16:\n\nModify rust-demangler to strip disambiguators by default\n\nCommit #17:\n\nRemove std::process::exit from coverage tests\n\nDue to Issue #77553, programs that call std::process::exit() do not\ngenerate coverage results on Windows MSVC.\n\nCommit #18:\n\nfix: test file paths exceeding Windows max path len", "tree": {"sha": "517ad3121c7eb28b06ea9105cb9c50b92f03d6cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/517ad3121c7eb28b06ea9105cb9c50b92f03d6cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5aebad28fe69f53497ce0107103c6d5d37b25dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5aebad28fe69f53497ce0107103c6d5d37b25dc", "html_url": "https://github.com/rust-lang/rust/commit/f5aebad28fe69f53497ce0107103c6d5d37b25dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5aebad28fe69f53497ce0107103c6d5d37b25dc/comments", "author": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d890e64dff3fd2c28635c60cc9315648dd46c8f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d890e64dff3fd2c28635c60cc9315648dd46c8f7", "html_url": "https://github.com/rust-lang/rust/commit/d890e64dff3fd2c28635c60cc9315648dd46c8f7"}], "stats": {"total": 20857, "additions": 18993, "deletions": 1864}, "files": [{"sha": "d216b09c66a603899a0b4540ec539b01cf2454b0", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -2938,8 +2938,9 @@ dependencies = [\n \n [[package]]\n name = \"rust-demangler\"\n-version = \"0.0.0\"\n+version = \"0.0.1\"\n dependencies = [\n+ \"regex\",\n  \"rustc-demangle\",\n ]\n "}, {"sha": "0098555a3736b977aa175e572d1dda24c1a47fc5", "filename": "compiler/rustc_codegen_llvm/src/coverageinfo/mapgen.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -126,6 +126,7 @@ impl CoverageMapGenerator {\n                 let (filenames_index, _) = self.filenames.insert_full(c_filename);\n                 virtual_file_mapping.push(filenames_index as u32);\n             }\n+            debug!(\"Adding counter {:?} to map for {:?}\", counter, region,);\n             mapping_regions.push(CounterMappingRegion::code_region(\n                 counter,\n                 current_file_id,"}, {"sha": "d8bde8ee70533afc75e7abe745b48bf1de619357", "filename": "compiler/rustc_codegen_ssa/src/coverageinfo/map.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcoverageinfo%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcoverageinfo%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcoverageinfo%2Fmap.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -143,7 +143,9 @@ impl FunctionCoverage {\n         let id_to_counter =\n             |new_indexes: &IndexVec<InjectedExpressionIndex, MappedExpressionIndex>,\n              id: ExpressionOperandId| {\n-                if id.index() < self.counters.len() {\n+                if id == ExpressionOperandId::ZERO {\n+                    Some(Counter::zero())\n+                } else if id.index() < self.counters.len() {\n                     let index = CounterValueReference::from(id.index());\n                     self.counters\n                         .get(index)\n@@ -179,14 +181,19 @@ impl FunctionCoverage {\n                 // been assigned a `new_index`.\n                 let mapped_expression_index =\n                     MappedExpressionIndex::from(counter_expressions.len());\n-                counter_expressions.push(CounterExpression::new(\n+                let expression = CounterExpression::new(\n                     lhs_counter,\n                     match op {\n                         Op::Add => ExprKind::Add,\n                         Op::Subtract => ExprKind::Subtract,\n                     },\n                     rhs_counter,\n-                ));\n+                );\n+                debug!(\n+                    \"Adding expression {:?} = {:?} at {:?}\",\n+                    mapped_expression_index, expression, region\n+                );\n+                counter_expressions.push(expression);\n                 new_indexes[original_index] = mapped_expression_index;\n                 expression_regions.push((Counter::expression(mapped_expression_index), region));\n             }"}, {"sha": "1cfbce2355e3a7a2c567ffd454d5881a4b945297", "filename": "compiler/rustc_data_structures/src/graph/dominators/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fdominators%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fdominators%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fdominators%2Fmod.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -9,6 +9,7 @@ use super::iterate::reverse_post_order;\n use super::ControlFlowGraph;\n use rustc_index::vec::{Idx, IndexVec};\n use std::borrow::BorrowMut;\n+use std::cmp::Ordering;\n \n #[cfg(test)]\n mod tests;\n@@ -108,6 +109,14 @@ impl<Node: Idx> Dominators<Node> {\n         // FIXME -- could be optimized by using post-order-rank\n         self.dominators(node).any(|n| n == dom)\n     }\n+\n+    /// Provide deterministic ordering of nodes such that, if any two nodes have a dominator\n+    /// relationship, the dominator will always precede the dominated. (The relative ordering\n+    /// of two unrelated nodes will also be consistent, but otherwise the order has no\n+    /// meaning.) This method cannot be used to determine if either Node dominates the other.\n+    pub fn rank_partial_cmp(&self, lhs: Node, rhs: Node) -> Option<Ordering> {\n+        self.post_order_rank[lhs].partial_cmp(&self.post_order_rank[rhs])\n+    }\n }\n \n pub struct Iter<'dom, Node: Idx> {"}, {"sha": "0421eabc2dc0522e2aedb223b30a57b138da4e0c", "filename": "compiler/rustc_middle/src/mir/coverage/mod.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fcoverage%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fcoverage%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fcoverage%2Fmod.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -14,6 +14,20 @@ rustc_index::newtype_index! {\n     }\n }\n \n+impl ExpressionOperandId {\n+    /// An expression operand for a \"zero counter\", as described in the following references:\n+    ///\n+    /// * https://github.com/rust-lang/llvm-project/blob/llvmorg-8.0.0/llvm/docs/CoverageMappingFormat.rst#counter\n+    /// * https://github.com/rust-lang/llvm-project/blob/llvmorg-8.0.0/llvm/docs/CoverageMappingFormat.rst#tag\n+    /// * https://github.com/rust-lang/llvm-project/blob/llvmorg-8.0.0/llvm/docs/CoverageMappingFormat.rst#counter-expressions\n+    ///\n+    /// This operand can be used to count two or more separate code regions with a single counter,\n+    /// if they run sequentially with no branches, by injecting the `Counter` in a `BasicBlock` for\n+    /// one of the code regions, and inserting `CounterExpression`s (\"add ZERO to the counter\") in\n+    /// the coverage map for the other code regions.\n+    pub const ZERO: Self = Self::from_u32(0);\n+}\n+\n rustc_index::newtype_index! {\n     pub struct CounterValueReference {\n         derive [HashStable]\n@@ -22,6 +36,11 @@ rustc_index::newtype_index! {\n     }\n }\n \n+impl CounterValueReference {\n+    // Counters start at 1 to reserve 0 for ExpressionOperandId::ZERO.\n+    pub const START: Self = Self::from_u32(1);\n+}\n+\n rustc_index::newtype_index! {\n     pub struct InjectedExpressionIndex {\n         derive [HashStable]"}, {"sha": "c1f8d22c2c6701d76da80a2c477bdfcd548de748", "filename": "compiler/rustc_middle/src/mir/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -752,7 +752,7 @@ macro_rules! make_mir_visitor {\n             }\n \n             fn super_coverage(&mut self,\n-                              _kind: & $($mutability)? Coverage,\n+                              _coverage: & $($mutability)? Coverage,\n                               _location: Location) {\n             }\n "}, {"sha": "babe10a0f14daf93a480ff1edb457707af2a0a1c", "filename": "compiler/rustc_mir/src/transform/instrument_coverage.rs", "status": "modified", "additions": 1011, "deletions": 217, "changes": 1228, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finstrument_coverage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finstrument_coverage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finstrument_coverage.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -1,26 +1,34 @@\n use crate::transform::MirPass;\n use crate::util::pretty;\n-use crate::util::spanview::{\n-    source_range_no_file, statement_kind_name, terminator_kind_name, write_spanview_document,\n-    SpanViewable, TOOLTIP_INDENT,\n-};\n+use crate::util::spanview::{self, SpanViewable};\n \n use rustc_data_structures::fingerprint::Fingerprint;\n+use rustc_data_structures::graph::dominators::Dominators;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n+use rustc_data_structures::sync::Lrc;\n use rustc_index::bit_set::BitSet;\n+use rustc_index::vec::IndexVec;\n use rustc_middle::hir;\n+use rustc_middle::hir::map::blocks::FnLikeNode;\n use rustc_middle::ich::StableHashingContext;\n use rustc_middle::mir;\n use rustc_middle::mir::coverage::*;\n use rustc_middle::mir::visit::Visitor;\n use rustc_middle::mir::{\n-    BasicBlock, BasicBlockData, Coverage, CoverageInfo, Location, Statement, StatementKind,\n-    TerminatorKind,\n+    AggregateKind, BasicBlock, BasicBlockData, Coverage, CoverageInfo, FakeReadCause, Location,\n+    Rvalue, SourceInfo, Statement, StatementKind, Terminator, TerminatorKind,\n };\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::TyCtxt;\n use rustc_span::def_id::DefId;\n-use rustc_span::{FileName, Pos, RealFileName, Span, Symbol};\n+use rustc_span::source_map::original_sp;\n+use rustc_span::{\n+    BytePos, CharPos, FileName, Pos, RealFileName, SourceFile, Span, Symbol, SyntaxContext,\n+};\n+\n+use std::cmp::Ordering;\n+\n+const ID_SEPARATOR: &str = \",\";\n \n /// Inserts `StatementKind::Coverage` statements that either instrument the binary with injected\n /// counters, via intrinsic `llvm.instrprof.increment`, and/or inject metadata used during codegen\n@@ -33,6 +41,21 @@ pub(crate) fn provide(providers: &mut Providers) {\n     providers.coverageinfo = |tcx, def_id| coverageinfo_from_mir(tcx, def_id);\n }\n \n+/// The `num_counters` argument to `llvm.instrprof.increment` is the max counter_id + 1, or in\n+/// other words, the number of counter value references injected into the MIR (plus 1 for the\n+/// reserved `ZERO` counter, which uses counter ID `0` when included in an expression). Injected\n+/// counters have a counter ID from `1..num_counters-1`.\n+///\n+/// `num_expressions` is the number of counter expressions added to the MIR body.\n+///\n+/// Both `num_counters` and `num_expressions` are used to initialize new vectors, during backend\n+/// code generate, to lookup counters and expressions by simple u32 indexes.\n+///\n+/// MIR optimization may split and duplicate some BasicBlock sequences, or optimize out some code\n+/// including injected counters. (It is OK if some counters are optimized out, but those counters\n+/// are still included in the total `num_counters` or `num_expressions`.) Simply counting the\n+/// calls may not work; but computing the number of counters or expressions by adding `1` to the\n+/// highest ID (for a given instrumented function) is valid.\n struct CoverageVisitor {\n     info: CoverageInfo,\n }\n@@ -57,15 +80,6 @@ impl Visitor<'_> for CoverageVisitor {\n fn coverageinfo_from_mir<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> CoverageInfo {\n     let mir_body = tcx.optimized_mir(def_id);\n \n-    // The `num_counters` argument to `llvm.instrprof.increment` is the number of injected\n-    // counters, with each counter having a counter ID from `0..num_counters-1`. MIR optimization\n-    // may split and duplicate some BasicBlock sequences. Simply counting the calls may not\n-    // work; but computing the num_counters by adding `1` to the highest counter_id (for a given\n-    // instrumented function) is valid.\n-    //\n-    // `num_expressions` is the number of counter expressions added to the MIR body. Both\n-    // `num_counters` and `num_expressions` are used to initialize new vectors, during backend\n-    // code generate, to lookup counters and expressions by simple u32 indexes.\n     let mut coverage_visitor =\n         CoverageVisitor { info: CoverageInfo { num_counters: 0, num_expressions: 0 } };\n \n@@ -77,25 +91,399 @@ impl<'tcx> MirPass<'tcx> for InstrumentCoverage {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, mir_body: &mut mir::Body<'tcx>) {\n         // If the InstrumentCoverage pass is called on promoted MIRs, skip them.\n         // See: https://github.com/rust-lang/rust/pull/73011#discussion_r438317601\n-        if mir_body.source.promoted.is_none() {\n-            Instrumentor::new(&self.name(), tcx, mir_body).inject_counters();\n+        if mir_body.source.promoted.is_some() {\n+            trace!(\n+                \"InstrumentCoverage skipped for {:?} (already promoted for Miri evaluation)\",\n+                mir_body.source.def_id()\n+            );\n+            return;\n         }\n+\n+        let hir_id = tcx.hir().local_def_id_to_hir_id(mir_body.source.def_id().expect_local());\n+        let is_fn_like = FnLikeNode::from_node(tcx.hir().get(hir_id)).is_some();\n+\n+        // Only instrument functions, methods, and closures (not constants since they are evaluated\n+        // at compile time by Miri).\n+        // FIXME(#73156): Handle source code coverage in const eval\n+        if !is_fn_like {\n+            trace!(\n+                \"InstrumentCoverage skipped for {:?} (not an FnLikeNode)\",\n+                mir_body.source.def_id(),\n+            );\n+            return;\n+        }\n+        // FIXME(richkadel): By comparison, the MIR pass `ConstProp` includes associated constants,\n+        // with functions, methods, and closures. I assume Miri is used for associated constants as\n+        // well. If not, we may need to include them here too.\n+\n+        trace!(\"InstrumentCoverage starting for {:?}\", mir_body.source.def_id());\n+        Instrumentor::new(&self.name(), tcx, mir_body).inject_counters();\n+        trace!(\"InstrumentCoverage starting for {:?}\", mir_body.source.def_id());\n     }\n }\n \n-#[derive(Clone)]\n-struct CoverageRegion {\n-    pub span: Span,\n+/// A BasicCoverageBlock (BCB) represents the maximal-length sequence of CFG (MIR) BasicBlocks\n+/// without conditional branches.\n+///\n+/// The BCB allows coverage analysis to be performed on a simplified projection of the underlying\n+/// MIR CFG, without altering the original CFG. Note that running the MIR `SimplifyCfg` transform,\n+/// is not sufficient, and therefore not necessary, since the BCB-based CFG projection is a more\n+/// aggressive simplification. For example:\n+///\n+///   * The BCB CFG projection ignores (trims) branches not relevant to coverage, such as unwind-\n+///     related code that is injected by the Rust compiler but has no physical source code to\n+///     count. This also means a BasicBlock with a `Call` terminator can be merged into its\n+///     primary successor target block, in the same BCB.\n+///   * Some BasicBlock terminators support Rust-specific concerns--like borrow-checking--that are\n+///     not relevant to coverage analysis. `FalseUnwind`, for example, can be treated the same as\n+///     a `Goto`, and merged with its successor into the same BCB.\n+///\n+/// Each BCB with at least one computed `CoverageSpan` will have no more than one `Counter`.\n+/// In some cases, a BCB's execution count can be computed by `CounterExpression`. Additional\n+/// disjoint `CoverageSpan`s in a BCB can also be counted by `CounterExpression` (by adding `ZERO`\n+/// to the BCB's primary counter or expression).\n+///\n+/// Dominator/dominated relationships (which are fundamental to the coverage analysis algorithm)\n+/// between two BCBs can be computed using the `mir::Body` `dominators()` with any `BasicBlock`\n+/// member of each BCB. (For consistency, BCB's use the first `BasicBlock`, also referred to as the\n+/// `bcb_leader_bb`.)\n+///\n+/// The BCB CFG projection is critical to simplifying the coverage analysis by ensuring graph\n+/// path-based queries (`is_dominated_by()`, `predecessors`, `successors`, etc.) have branch\n+/// (control flow) significance.\n+#[derive(Debug, Clone)]\n+struct BasicCoverageBlock {\n     pub blocks: Vec<BasicBlock>,\n }\n \n+impl BasicCoverageBlock {\n+    pub fn leader_bb(&self) -> BasicBlock {\n+        self.blocks[0]\n+    }\n+\n+    pub fn id(&self) -> String {\n+        format!(\n+            \"@{}\",\n+            self.blocks\n+                .iter()\n+                .map(|bb| bb.index().to_string())\n+                .collect::<Vec<_>>()\n+                .join(ID_SEPARATOR)\n+        )\n+    }\n+}\n+\n+struct BasicCoverageBlocks {\n+    vec: IndexVec<BasicBlock, Option<BasicCoverageBlock>>,\n+}\n+\n+impl BasicCoverageBlocks {\n+    pub fn from_mir(mir_body: &mir::Body<'tcx>) -> Self {\n+        let mut basic_coverage_blocks =\n+            BasicCoverageBlocks { vec: IndexVec::from_elem_n(None, mir_body.basic_blocks().len()) };\n+        basic_coverage_blocks.extract_from_mir(mir_body);\n+        basic_coverage_blocks\n+    }\n+\n+    pub fn iter(&self) -> impl Iterator<Item = &BasicCoverageBlock> {\n+        self.vec.iter().filter_map(|option| option.as_ref())\n+    }\n+\n+    fn extract_from_mir(&mut self, mir_body: &mir::Body<'tcx>) {\n+        // Traverse the CFG but ignore anything following an `unwind`\n+        let cfg_without_unwind = ShortCircuitPreorder::new(mir_body, |term_kind| {\n+            let mut successors = term_kind.successors();\n+            match &term_kind {\n+                // SwitchInt successors are never unwind, and all of them should be traversed.\n+\n+                // NOTE: TerminatorKind::FalseEdge targets from SwitchInt don't appear to be\n+                // helpful in identifying unreachable code. I did test the theory, but the following\n+                // changes were not beneficial. (I assumed that replacing some constants with\n+                // non-deterministic variables might effect which blocks were targeted by a\n+                // `FalseEdge` `imaginary_target`. It did not.)\n+                //\n+                // Also note that, if there is a way to identify BasicBlocks that are part of the\n+                // MIR CFG, but not actually reachable, here are some other things to consider:\n+                //\n+                // Injecting unreachable code regions will probably require computing the set\n+                // difference between the basic blocks found without filtering out unreachable\n+                // blocks, and the basic blocks found with the filter; then computing the\n+                // `CoverageSpans` without the filter; and then injecting `Counter`s or\n+                // `CounterExpression`s for blocks that are not unreachable, or injecting\n+                // `Unreachable` code regions otherwise. This seems straightforward, but not\n+                // trivial.\n+                //\n+                // Alternatively, we might instead want to leave the unreachable blocks in\n+                // (bypass the filter here), and inject the counters. This will result in counter\n+                // values of zero (0) for unreachable code (and, notably, the code will be displayed\n+                // with a red background by `llvm-cov show`).\n+                //\n+                // TerminatorKind::SwitchInt { .. } => {\n+                //     let some_imaginary_target = successors.clone().find_map(|&successor| {\n+                //         let term = mir_body.basic_blocks()[successor].terminator();\n+                //         if let TerminatorKind::FalseEdge { imaginary_target, .. } = term.kind {\n+                //             if mir_body.predecessors()[imaginary_target].len() == 1 {\n+                //                 return Some(imaginary_target);\n+                //             }\n+                //         }\n+                //         None\n+                //     });\n+                //     if let Some(imaginary_target) = some_imaginary_target {\n+                //         box successors.filter(move |&&successor| successor != imaginary_target)\n+                //     } else {\n+                //         box successors\n+                //     }\n+                // }\n+                //\n+                // Note this also required changing the closure signature for the\n+                // `ShortCurcuitPreorder` to:\n+                //\n+                // F: Fn(&'tcx TerminatorKind<'tcx>) -> Box<dyn Iterator<Item = &BasicBlock> + 'a>,\n+                TerminatorKind::SwitchInt { .. } => successors,\n+\n+                // For all other kinds, return only the first successor, if any, and ignore unwinds\n+                _ => successors.next().into_iter().chain(&[]),\n+            }\n+        });\n+\n+        // Walk the CFG using a Preorder traversal, which starts from `START_BLOCK` and follows\n+        // each block terminator's `successors()`. Coverage spans must map to actual source code,\n+        // so compiler generated blocks and paths can be ignored. To that end the CFG traversal\n+        // intentionally omits unwind paths.\n+        let mut blocks = Vec::new();\n+        for (bb, data) in cfg_without_unwind {\n+            if let Some(last) = blocks.last() {\n+                let predecessors = &mir_body.predecessors()[bb];\n+                if predecessors.len() > 1 || !predecessors.contains(last) {\n+                    // The `bb` has more than one _incoming_ edge, and should start its own\n+                    // `BasicCoverageBlock`. (Note, the `blocks` vector does not yet include `bb`;\n+                    // it contains a sequence of one or more sequential blocks with no intermediate\n+                    // branches in or out. Save these as a new `BasicCoverageBlock` before starting\n+                    // the new one.)\n+                    self.add_basic_coverage_block(blocks.split_off(0));\n+                    debug!(\n+                        \"  because {}\",\n+                        if predecessors.len() > 1 {\n+                            \"predecessors.len() > 1\".to_owned()\n+                        } else {\n+                            format!(\"bb {} is not in precessors: {:?}\", bb.index(), predecessors)\n+                        }\n+                    );\n+                }\n+            }\n+            blocks.push(bb);\n+\n+            let term = data.terminator();\n+\n+            match term.kind {\n+                TerminatorKind::Return { .. }\n+                | TerminatorKind::Abort\n+                | TerminatorKind::Assert { .. }\n+                | TerminatorKind::Yield { .. }\n+                | TerminatorKind::SwitchInt { .. } => {\n+                    // The `bb` has more than one _outgoing_ edge, or exits the function. Save the\n+                    // current sequence of `blocks` gathered to this point, as a new\n+                    // `BasicCoverageBlock`.\n+                    self.add_basic_coverage_block(blocks.split_off(0));\n+                    debug!(\"  because term.kind = {:?}\", term.kind);\n+                    // Note that this condition is based on `TerminatorKind`, even though it\n+                    // theoretically boils down to `successors().len() != 1`; that is, either zero\n+                    // (e.g., `Return`, `Abort`) or multiple successors (e.g., `SwitchInt`), but\n+                    // since the Coverage graph (the BCB CFG projection) ignores things like unwind\n+                    // branches (which exist in the `Terminator`s `successors()` list) checking the\n+                    // number of successors won't work.\n+                }\n+                TerminatorKind::Goto { .. }\n+                | TerminatorKind::Resume\n+                | TerminatorKind::Unreachable\n+                | TerminatorKind::Drop { .. }\n+                | TerminatorKind::DropAndReplace { .. }\n+                | TerminatorKind::Call { .. }\n+                | TerminatorKind::GeneratorDrop\n+                | TerminatorKind::FalseEdge { .. }\n+                | TerminatorKind::FalseUnwind { .. }\n+                | TerminatorKind::InlineAsm { .. } => {}\n+            }\n+        }\n+\n+        if !blocks.is_empty() {\n+            // process any remaining blocks into a final `BasicCoverageBlock`\n+            self.add_basic_coverage_block(blocks.split_off(0));\n+            debug!(\"  because the end of the CFG was reached while traversing\");\n+        }\n+    }\n+\n+    fn add_basic_coverage_block(&mut self, blocks: Vec<BasicBlock>) {\n+        let leader_bb = blocks[0];\n+        let bcb = BasicCoverageBlock { blocks };\n+        debug!(\"adding BCB: {:?}\", bcb);\n+        self.vec[leader_bb] = Some(bcb);\n+    }\n+}\n+\n+impl std::ops::Index<BasicBlock> for BasicCoverageBlocks {\n+    type Output = BasicCoverageBlock;\n+\n+    fn index(&self, index: BasicBlock) -> &Self::Output {\n+        self.vec[index].as_ref().expect(\"is_some if BasicBlock is a BasicCoverageBlock leader\")\n+    }\n+}\n+\n+#[derive(Debug, Copy, Clone)]\n+enum CoverageStatement {\n+    Statement(BasicBlock, Span, usize),\n+    Terminator(BasicBlock, Span),\n+}\n+\n+impl CoverageStatement {\n+    pub fn format(&self, tcx: TyCtxt<'tcx>, mir_body: &'a mir::Body<'tcx>) -> String {\n+        match *self {\n+            Self::Statement(bb, span, stmt_index) => {\n+                let stmt = &mir_body.basic_blocks()[bb].statements[stmt_index];\n+                format!(\n+                    \"{}: @{}[{}]: {:?}\",\n+                    spanview::source_range_no_file(tcx, &span),\n+                    bb.index(),\n+                    stmt_index,\n+                    stmt\n+                )\n+            }\n+            Self::Terminator(bb, span) => {\n+                let term = mir_body.basic_blocks()[bb].terminator();\n+                format!(\n+                    \"{}: @{}.{}: {:?}\",\n+                    spanview::source_range_no_file(tcx, &span),\n+                    bb.index(),\n+                    term_type(&term.kind),\n+                    term.kind\n+                )\n+            }\n+        }\n+    }\n+\n+    pub fn span(&self) -> &Span {\n+        match self {\n+            Self::Statement(_, span, _) | Self::Terminator(_, span) => span,\n+        }\n+    }\n+}\n+\n+fn term_type(kind: &TerminatorKind<'tcx>) -> &'static str {\n+    match kind {\n+        TerminatorKind::Goto { .. } => \"Goto\",\n+        TerminatorKind::SwitchInt { .. } => \"SwitchInt\",\n+        TerminatorKind::Resume => \"Resume\",\n+        TerminatorKind::Abort => \"Abort\",\n+        TerminatorKind::Return => \"Return\",\n+        TerminatorKind::Unreachable => \"Unreachable\",\n+        TerminatorKind::Drop { .. } => \"Drop\",\n+        TerminatorKind::DropAndReplace { .. } => \"DropAndReplace\",\n+        TerminatorKind::Call { .. } => \"Call\",\n+        TerminatorKind::Assert { .. } => \"Assert\",\n+        TerminatorKind::Yield { .. } => \"Yield\",\n+        TerminatorKind::GeneratorDrop => \"GeneratorDrop\",\n+        TerminatorKind::FalseEdge { .. } => \"FalseEdge\",\n+        TerminatorKind::FalseUnwind { .. } => \"FalseUnwind\",\n+        TerminatorKind::InlineAsm { .. } => \"InlineAsm\",\n+    }\n+}\n+\n+/// A BCB is deconstructed into one or more `Span`s. Each `Span` maps to a `CoverageSpan` that\n+/// references the originating BCB and one or more MIR `Statement`s and/or `Terminator`s.\n+/// Initially, the `Span`s come from the `Statement`s and `Terminator`s, but subsequent\n+/// transforms can combine adjacent `Span`s and `CoverageSpan` from the same BCB, merging the\n+/// `CoverageStatement` vectors, and the `Span`s to cover the extent of the combined `Span`s.\n+///\n+/// Note: A `CoverageStatement` merged into another CoverageSpan may come from a `BasicBlock` that\n+/// is not part of the `CoverageSpan` bcb if the statement was included because it's `Span` matches\n+/// or is subsumed by the `Span` associated with this `CoverageSpan`, and it's `BasicBlock`\n+/// `is_dominated_by()` the `BasicBlock`s in this `CoverageSpan`.\n+#[derive(Debug, Clone)]\n+struct CoverageSpan {\n+    span: Span,\n+    bcb_leader_bb: BasicBlock,\n+    coverage_statements: Vec<CoverageStatement>,\n+    is_closure: bool,\n+}\n+\n+impl CoverageSpan {\n+    pub fn for_statement(\n+        statement: &Statement<'tcx>,\n+        span: Span,\n+        bcb: &BasicCoverageBlock,\n+        bb: BasicBlock,\n+        stmt_index: usize,\n+    ) -> Self {\n+        let is_closure = match statement.kind {\n+            StatementKind::Assign(box (\n+                _,\n+                Rvalue::Aggregate(box AggregateKind::Closure(_, _), _),\n+            )) => true,\n+            _ => false,\n+        };\n+\n+        Self {\n+            span,\n+            bcb_leader_bb: bcb.leader_bb(),\n+            coverage_statements: vec![CoverageStatement::Statement(bb, span, stmt_index)],\n+            is_closure,\n+        }\n+    }\n+\n+    pub fn for_terminator(span: Span, bcb: &'a BasicCoverageBlock, bb: BasicBlock) -> Self {\n+        Self {\n+            span,\n+            bcb_leader_bb: bcb.leader_bb(),\n+            coverage_statements: vec![CoverageStatement::Terminator(bb, span)],\n+            is_closure: false,\n+        }\n+    }\n+\n+    pub fn merge_from(&mut self, mut other: CoverageSpan) {\n+        debug_assert!(self.is_mergeable(&other));\n+        self.span = self.span.to(other.span);\n+        if other.is_closure {\n+            self.is_closure = true;\n+        }\n+        self.coverage_statements.append(&mut other.coverage_statements);\n+    }\n+\n+    pub fn cutoff_statements_at(&mut self, cutoff_pos: BytePos) {\n+        self.coverage_statements.retain(|covstmt| covstmt.span().hi() <= cutoff_pos);\n+        if let Some(highest_covstmt) =\n+            self.coverage_statements.iter().max_by_key(|covstmt| covstmt.span().hi())\n+        {\n+            self.span = self.span.with_hi(highest_covstmt.span().hi());\n+        }\n+    }\n+\n+    pub fn is_dominated_by(\n+        &self,\n+        other: &CoverageSpan,\n+        dominators: &Dominators<BasicBlock>,\n+    ) -> bool {\n+        debug_assert!(!self.is_in_same_bcb(other));\n+        dominators.is_dominated_by(self.bcb_leader_bb, other.bcb_leader_bb)\n+    }\n+\n+    pub fn is_mergeable(&self, other: &Self) -> bool {\n+        self.is_in_same_bcb(other) && !(self.is_closure || other.is_closure)\n+    }\n+\n+    pub fn is_in_same_bcb(&self, other: &Self) -> bool {\n+        self.bcb_leader_bb == other.bcb_leader_bb\n+    }\n+}\n+\n struct Instrumentor<'a, 'tcx> {\n     pass_name: &'a str,\n     tcx: TyCtxt<'tcx>,\n     mir_body: &'a mut mir::Body<'tcx>,\n     hir_body: &'tcx rustc_hir::Body<'tcx>,\n+    dominators: Option<Dominators<BasicBlock>>,\n+    basic_coverage_blocks: Option<BasicCoverageBlocks>,\n     function_source_hash: Option<u64>,\n-    num_counters: u32,\n+    next_counter_id: u32,\n     num_expressions: u32,\n }\n \n@@ -107,30 +495,42 @@ impl<'a, 'tcx> Instrumentor<'a, 'tcx> {\n             tcx,\n             mir_body,\n             hir_body,\n+            dominators: None,\n+            basic_coverage_blocks: None,\n             function_source_hash: None,\n-            num_counters: 0,\n+            next_counter_id: CounterValueReference::START.as_u32(),\n             num_expressions: 0,\n         }\n     }\n \n-    /// Counter IDs start from zero and go up.\n+    /// Counter IDs start from one and go up.\n     fn next_counter(&mut self) -> CounterValueReference {\n-        assert!(self.num_counters < u32::MAX - self.num_expressions);\n-        let next = self.num_counters;\n-        self.num_counters += 1;\n+        assert!(self.next_counter_id < u32::MAX - self.num_expressions);\n+        let next = self.next_counter_id;\n+        self.next_counter_id += 1;\n         CounterValueReference::from(next)\n     }\n \n     /// Expression IDs start from u32::MAX and go down because a CounterExpression can reference\n     /// (add or subtract counts) of both Counter regions and CounterExpression regions. The counter\n     /// expression operand IDs must be unique across both types.\n     fn next_expression(&mut self) -> InjectedExpressionIndex {\n-        assert!(self.num_counters < u32::MAX - self.num_expressions);\n+        assert!(self.next_counter_id < u32::MAX - self.num_expressions);\n         let next = u32::MAX - self.num_expressions;\n         self.num_expressions += 1;\n         InjectedExpressionIndex::from(next)\n     }\n \n+    fn dominators(&self) -> &Dominators<BasicBlock> {\n+        self.dominators.as_ref().expect(\"dominators must be initialized before calling\")\n+    }\n+\n+    fn basic_coverage_blocks(&self) -> &BasicCoverageBlocks {\n+        self.basic_coverage_blocks\n+            .as_ref()\n+            .expect(\"basic_coverage_blocks must be initialized before calling\")\n+    }\n+\n     fn function_source_hash(&mut self) -> u64 {\n         match self.function_source_hash {\n             Some(hash) => hash,\n@@ -144,86 +544,61 @@ impl<'a, 'tcx> Instrumentor<'a, 'tcx> {\n \n     fn inject_counters(&mut self) {\n         let tcx = self.tcx;\n+        let source_map = tcx.sess.source_map();\n         let def_id = self.mir_body.source.def_id();\n         let mir_body = &self.mir_body;\n-        let body_span = self.hir_body.value.span;\n-        debug!(\n-            \"instrumenting {:?}, span: {}\",\n-            def_id,\n-            tcx.sess.source_map().span_to_string(body_span)\n-        );\n-\n-        if !tcx.sess.opts.debugging_opts.experimental_coverage {\n-            // Coverage at the function level should be accurate. This is the default implementation\n-            // if `-Z experimental-coverage` is *NOT* enabled.\n-            let block = rustc_middle::mir::START_BLOCK;\n-            let counter = self.make_counter();\n-            self.inject_statement(counter, body_span, block);\n-            return;\n-        }\n-        // FIXME(richkadel): else if `-Z experimental-coverage` *IS* enabled: Efforts are still in\n-        // progress to identify the correct code region spans and associated counters to generate\n-        // accurate Rust coverage reports.\n-\n-        let block_span = |data: &BasicBlockData<'tcx>| {\n-            // The default span will be the `Terminator` span; but until we have a smarter solution,\n-            // the coverage region also incorporates at least the statements in this BasicBlock as\n-            // well. Extend the span to encompass all, if possible.\n-            // FIXME(richkadel): Assuming the terminator's span is already known to be contained in `body_span`.\n-            let mut span = data.terminator().source_info.span;\n-            // FIXME(richkadel): It's looking unlikely that we should compute a span from MIR\n-            // spans, but if we do keep something like this logic, we will need a smarter way\n-            // to combine `Statement`s and/or `Terminator`s with `Span`s from different\n-            // files.\n-            for statement_span in data.statements.iter().map(|statement| statement.source_info.span)\n-            {\n-                // Only combine Spans from the function's body_span.\n-                if body_span.contains(statement_span) {\n-                    span = span.to(statement_span);\n-                }\n-            }\n-            span\n+        let body_span = self.body_span();\n+        let source_file = source_map.lookup_source_file(body_span.lo());\n+        let file_name = match &source_file.name {\n+            FileName::Real(RealFileName::Named(path)) => Symbol::intern(&path.to_string_lossy()),\n+            _ => bug!(\n+                \"source_file.name should be a RealFileName, but it was: {:?}\",\n+                source_file.name\n+            ),\n         };\n \n-        // Traverse the CFG but ignore anything following an `unwind`\n-        let cfg_without_unwind = ShortCircuitPreorder::new(mir_body, |term_kind| {\n-            let mut successors = term_kind.successors();\n-            match &term_kind {\n-                // SwitchInt successors are never unwind, and all of them should be traversed\n-                TerminatorKind::SwitchInt { .. } => successors,\n-                // For all other kinds, return only the first successor, if any, and ignore unwinds\n-                _ => successors.next().into_iter().chain(&[]),\n-            }\n-        });\n+        debug!(\"instrumenting {:?}, span: {}\", def_id, source_map.span_to_string(body_span));\n \n-        let mut coverage_regions = Vec::with_capacity(cfg_without_unwind.size_hint().0);\n-        for (bb, data) in cfg_without_unwind {\n-            if !body_span.contains(data.terminator().source_info.span) {\n-                continue;\n-            }\n+        self.dominators.replace(mir_body.dominators());\n+        self.basic_coverage_blocks.replace(BasicCoverageBlocks::from_mir(mir_body));\n \n-            // FIXME(richkadel): Regions will soon contain multiple blocks.\n-            let mut blocks = Vec::new();\n-            blocks.push(bb);\n-            let span = block_span(data);\n-            coverage_regions.push(CoverageRegion { span, blocks });\n-        }\n+        let coverage_spans = self.coverage_spans();\n \n         let span_viewables = if pretty::dump_enabled(tcx, self.pass_name, def_id) {\n-            Some(self.span_viewables(&coverage_regions))\n+            Some(self.span_viewables(&coverage_spans))\n         } else {\n             None\n         };\n \n-        // Inject counters for the selected spans\n-        for CoverageRegion { span, blocks } in coverage_regions {\n-            debug!(\n-                \"Injecting counter at: {:?}:\\n{}\\n==========\",\n-                span,\n-                tcx.sess.source_map().span_to_snippet(span).expect(\"Error getting source for span\"),\n-            );\n-            let counter = self.make_counter();\n-            self.inject_statement(counter, span, blocks[0]);\n+        // Inject a counter for each `CoverageSpan`. There can be multiple `CoverageSpan`s for a\n+        // given BCB, but only one actual counter needs to be incremented per BCB. `bb_counters`\n+        // maps each `bcb_leader_bb` to its `Counter`, when injected. Subsequent `CoverageSpan`s\n+        // for a BCB that already has a `Counter` will inject a `CounterExpression` instead, and\n+        // compute its value by adding `ZERO` to the BCB `Counter` value.\n+        let mut bb_counters = IndexVec::from_elem_n(None, mir_body.basic_blocks().len());\n+        for CoverageSpan { span, bcb_leader_bb: bb, .. } in coverage_spans {\n+            if let Some(&counter_operand) = bb_counters[bb].as_ref() {\n+                let expression =\n+                    self.make_expression(counter_operand, Op::Add, ExpressionOperandId::ZERO);\n+                debug!(\n+                    \"Injecting counter expression {:?} at: {:?}:\\n{}\\n==========\",\n+                    expression,\n+                    span,\n+                    source_map.span_to_snippet(span).expect(\"Error getting source for span\"),\n+                );\n+                self.inject_statement(file_name, &source_file, expression, span, bb);\n+            } else {\n+                let counter = self.make_counter();\n+                debug!(\n+                    \"Injecting counter {:?} at: {:?}:\\n{}\\n==========\",\n+                    counter,\n+                    span,\n+                    source_map.span_to_snippet(span).expect(\"Error getting source for span\"),\n+                );\n+                let counter_operand = counter.as_operand_id();\n+                bb_counters[bb] = Some(counter_operand);\n+                self.inject_statement(file_name, &source_file, counter, span, bb);\n+            }\n         }\n \n         if let Some(span_viewables) = span_viewables {\n@@ -236,36 +611,12 @@ impl<'a, 'tcx> Instrumentor<'a, 'tcx> {\n                 self.mir_body.source,\n             )\n             .expect(\"Unexpected error creating MIR spanview HTML file\");\n-            write_spanview_document(tcx, def_id, span_viewables, &mut file)\n+            let crate_name = tcx.crate_name(def_id.krate);\n+            let item_name = tcx.def_path(def_id).to_filename_friendly_no_crate();\n+            let title = format!(\"{}.{} - Coverage Spans\", crate_name, item_name);\n+            spanview::write_document(tcx, def_id, span_viewables, &title, &mut file)\n                 .expect(\"Unexpected IO error dumping coverage spans as HTML\");\n         }\n-\n-        // FIXME(richkadel): Some regions will be counted by \"counter expression\". Counter\n-        // expressions are supported, but are not yet generated. When they are, remove this `fake_use`\n-        // block.\n-        let fake_use = false;\n-        if fake_use {\n-            let add = false;\n-            let fake_counter = CoverageKind::Counter {\n-                function_source_hash: self.function_source_hash(),\n-                id: CounterValueReference::from_u32(1),\n-            };\n-            let fake_expression = CoverageKind::Expression {\n-                id: InjectedExpressionIndex::from(u32::MAX - 1),\n-                lhs: ExpressionOperandId::from_u32(1),\n-                op: Op::Add,\n-                rhs: ExpressionOperandId::from_u32(2),\n-            };\n-\n-            let lhs = fake_counter.as_operand_id();\n-            let op = if add { Op::Add } else { Op::Subtract };\n-            let rhs = fake_expression.as_operand_id();\n-\n-            let block = rustc_middle::mir::START_BLOCK;\n-\n-            let expression = self.make_expression(lhs, op, rhs);\n-            self.inject_statement(expression, body_span, block);\n-        }\n     }\n \n     fn make_counter(&mut self) -> CoverageKind {\n@@ -284,8 +635,15 @@ impl<'a, 'tcx> Instrumentor<'a, 'tcx> {\n         CoverageKind::Expression { id: self.next_expression(), lhs, op, rhs }\n     }\n \n-    fn inject_statement(&mut self, coverage_kind: CoverageKind, span: Span, block: BasicBlock) {\n-        let code_region = make_code_region(self.tcx, &span);\n+    fn inject_statement(\n+        &mut self,\n+        file_name: Symbol,\n+        source_file: &Lrc<SourceFile>,\n+        coverage_kind: CoverageKind,\n+        span: Span,\n+        block: BasicBlock,\n+    ) {\n+        let code_region = make_code_region(file_name, source_file, span);\n         debug!(\"  injecting statement {:?} covering {:?}\", coverage_kind, code_region);\n \n         let data = &mut self.mir_body[block];\n@@ -297,112 +655,548 @@ impl<'a, 'tcx> Instrumentor<'a, 'tcx> {\n         data.statements.push(statement);\n     }\n \n-    /// Converts the computed `CoverageRegion`s into `SpanViewable`s.\n-    fn span_viewables(&self, coverage_regions: &Vec<CoverageRegion>) -> Vec<SpanViewable> {\n+    /// Converts the computed `BasicCoverageBlock`s into `SpanViewable`s.\n+    fn span_viewables(&self, coverage_spans: &Vec<CoverageSpan>) -> Vec<SpanViewable> {\n+        let tcx = self.tcx;\n+        let mir_body = &self.mir_body;\n         let mut span_viewables = Vec::new();\n-        for coverage_region in coverage_regions {\n-            span_viewables.push(SpanViewable {\n-                span: coverage_region.span,\n-                id: format!(\"{}\", coverage_region.blocks[0].index()),\n-                tooltip: self.make_tooltip_text(coverage_region),\n+        for coverage_span in coverage_spans {\n+            let bcb = self.bcb_from_coverage_span(coverage_span);\n+            let CoverageSpan { span, bcb_leader_bb: bb, coverage_statements, .. } = coverage_span;\n+            let id = bcb.id();\n+            let mut sorted_coverage_statements = coverage_statements.clone();\n+            sorted_coverage_statements.sort_unstable_by_key(|covstmt| match *covstmt {\n+                CoverageStatement::Statement(bb, _, index) => (bb, index),\n+                CoverageStatement::Terminator(bb, _) => (bb, usize::MAX),\n             });\n+            let tooltip = sorted_coverage_statements\n+                .iter()\n+                .map(|covstmt| covstmt.format(tcx, mir_body))\n+                .collect::<Vec<_>>()\n+                .join(\"\\n\");\n+            span_viewables.push(SpanViewable { bb: *bb, span: *span, id, tooltip });\n         }\n         span_viewables\n     }\n \n-    /// A custom tooltip renderer used in a spanview HTML+CSS document used for coverage analysis.\n-    fn make_tooltip_text(&self, coverage_region: &CoverageRegion) -> String {\n-        const INCLUDE_COVERAGE_STATEMENTS: bool = false;\n-        let tcx = self.tcx;\n-        let source_map = tcx.sess.source_map();\n-        let mut text = Vec::new();\n-        for (i, &bb) in coverage_region.blocks.iter().enumerate() {\n-            if i > 0 {\n-                text.push(\"\\n\".to_owned());\n+    #[inline(always)]\n+    fn bcb_from_coverage_span(&self, coverage_span: &CoverageSpan) -> &BasicCoverageBlock {\n+        &self.basic_coverage_blocks()[coverage_span.bcb_leader_bb]\n+    }\n+\n+    #[inline(always)]\n+    fn body_span(&self) -> Span {\n+        self.hir_body.value.span\n+    }\n+\n+    // Generate a set of `CoverageSpan`s from the filtered set of `Statement`s and `Terminator`s of\n+    // the `BasicBlock`(s) in the given `BasicCoverageBlock`. One `CoverageSpan` is generated for\n+    // each `Statement` and `Terminator`. (Note that subsequent stages of coverage analysis will\n+    // merge some `CoverageSpan`s, at which point a `CoverageSpan` may represent multiple\n+    // `Statement`s and/or `Terminator`s.)\n+    fn extract_spans(&self, bcb: &'a BasicCoverageBlock) -> Vec<CoverageSpan> {\n+        let body_span = self.body_span();\n+        let mir_basic_blocks = self.mir_body.basic_blocks();\n+        bcb.blocks\n+            .iter()\n+            .map(|bbref| {\n+                let bb = *bbref;\n+                let data = &mir_basic_blocks[bb];\n+                data.statements\n+                    .iter()\n+                    .enumerate()\n+                    .filter_map(move |(index, statement)| {\n+                        filtered_statement_span(statement, body_span).map(|span| {\n+                            CoverageSpan::for_statement(statement, span, bcb, bb, index)\n+                        })\n+                    })\n+                    .chain(\n+                        filtered_terminator_span(data.terminator(), body_span)\n+                            .map(|span| CoverageSpan::for_terminator(span, bcb, bb)),\n+                    )\n+            })\n+            .flatten()\n+            .collect()\n+    }\n+\n+    /// Generate a minimal set of `CoverageSpan`s, each representing a contiguous code region to be\n+    /// counted.\n+    ///\n+    /// The basic steps are:\n+    ///\n+    /// 1. Extract an initial set of spans from the `Statement`s and `Terminator`s of each\n+    ///    `BasicCoverageBlock`.\n+    /// 2. Sort the spans by span.lo() (starting position). Spans that start at the same position\n+    ///    are sorted with longer spans before shorter spans; and equal spans are sorted\n+    ///    (deterministically) based on \"dominator\" relationship (if any).\n+    /// 3. Traverse the spans in sorted order to identify spans that can be dropped (for instance,\n+    ///    if another span or spans are already counting the same code region), or should be merged\n+    ///    into a broader combined span (because it represents a contiguous, non-branching, and\n+    ///    uninterrupted region of source code).\n+    ///\n+    ///    Closures are exposed in their enclosing functions as `Assign` `Rvalue`s, and since\n+    ///    closures have their own MIR, their `Span` in their enclosing function should be left\n+    ///    \"uncovered\".\n+    ///\n+    /// Note the resulting vector of `CoverageSpan`s does may not be fully sorted (and does not need\n+    /// to be).\n+    fn coverage_spans(&self) -> Vec<CoverageSpan> {\n+        let mut initial_spans =\n+            Vec::<CoverageSpan>::with_capacity(self.mir_body.basic_blocks().len() * 2);\n+        for bcb in self.basic_coverage_blocks().iter() {\n+            for coverage_span in self.extract_spans(bcb) {\n+                initial_spans.push(coverage_span);\n             }\n-            text.push(format!(\"{:?}: {}:\", bb, &source_map.span_to_string(coverage_region.span)));\n-            let data = &self.mir_body.basic_blocks()[bb];\n-            for statement in &data.statements {\n-                let statement_string = match statement.kind {\n-                    StatementKind::Coverage(box ref coverage) => match coverage.kind {\n-                        CoverageKind::Counter { id, .. } => {\n-                            if !INCLUDE_COVERAGE_STATEMENTS {\n-                                continue;\n-                            }\n-                            format!(\"increment counter #{}\", id.index())\n-                        }\n-                        CoverageKind::Expression { id, lhs, op, rhs } => {\n-                            if !INCLUDE_COVERAGE_STATEMENTS {\n-                                continue;\n-                            }\n-                            format!(\n-                                \"expression #{} = {} {} {}\",\n-                                id.index(),\n-                                lhs.index(),\n-                                if op == Op::Add { \"+\" } else { \"-\" },\n-                                rhs.index()\n-                            )\n-                        }\n-                        CoverageKind::Unreachable => {\n-                            if !INCLUDE_COVERAGE_STATEMENTS {\n-                                continue;\n-                            }\n-                            String::from(\"unreachable\")\n-                        }\n-                    },\n-                    _ => format!(\"{:?}\", statement),\n-                };\n-                let source_range = source_range_no_file(tcx, &statement.source_info.span);\n-                text.push(format!(\n-                    \"\\n{}{}: {}: {}\",\n-                    TOOLTIP_INDENT,\n-                    source_range,\n-                    statement_kind_name(statement),\n-                    statement_string\n-                ));\n+        }\n+\n+        if initial_spans.is_empty() {\n+            // This can happen if, for example, the function is unreachable (contains only a\n+            // `BasicBlock`(s) with an `Unreachable` terminator).\n+            return initial_spans;\n+        }\n+\n+        initial_spans.sort_unstable_by(|a, b| {\n+            if a.span.lo() == b.span.lo() {\n+                if a.span.hi() == b.span.hi() {\n+                    if a.is_in_same_bcb(b) {\n+                        Some(Ordering::Equal)\n+                    } else {\n+                        // Sort equal spans by dominator relationship, in reverse order (so\n+                        // dominators always come after the dominated equal spans). When later\n+                        // comparing two spans in order, the first will either dominate the second,\n+                        // or they will have no dominator relationship.\n+                        self.dominators().rank_partial_cmp(b.bcb_leader_bb, a.bcb_leader_bb)\n+                    }\n+                } else {\n+                    // Sort hi() in reverse order so shorter spans are attempted after longer spans.\n+                    // This guarantees that, if a `prev` span overlaps, and is not equal to, a `curr`\n+                    // span, the prev span either extends further left of the curr span, or they\n+                    // start at the same position and the prev span extends further right of the end\n+                    // of the curr span.\n+                    b.span.hi().partial_cmp(&a.span.hi())\n+                }\n+            } else {\n+                a.span.lo().partial_cmp(&b.span.lo())\n             }\n-            let term = data.terminator();\n-            let source_range = source_range_no_file(tcx, &term.source_info.span);\n-            text.push(format!(\n-                \"\\n{}{}: {}: {:?}\",\n-                TOOLTIP_INDENT,\n-                source_range,\n-                terminator_kind_name(term),\n-                term.kind\n-            ));\n+            .unwrap()\n+        });\n+\n+        let refinery = CoverageSpanRefinery::from_sorted_spans(initial_spans, self.dominators());\n+        refinery.to_refined_spans()\n+    }\n+}\n+\n+struct CoverageSpanRefinery<'a> {\n+    sorted_spans_iter: std::vec::IntoIter<CoverageSpan>,\n+    dominators: &'a Dominators<BasicBlock>,\n+    some_curr: Option<CoverageSpan>,\n+    curr_original_span: Span,\n+    some_prev: Option<CoverageSpan>,\n+    prev_original_span: Span,\n+    pending_dups: Vec<CoverageSpan>,\n+    refined_spans: Vec<CoverageSpan>,\n+}\n+\n+impl<'a> CoverageSpanRefinery<'a> {\n+    fn from_sorted_spans(\n+        sorted_spans: Vec<CoverageSpan>,\n+        dominators: &'a Dominators<BasicBlock>,\n+    ) -> Self {\n+        let refined_spans = Vec::with_capacity(sorted_spans.len());\n+        let mut sorted_spans_iter = sorted_spans.into_iter();\n+        let prev = sorted_spans_iter.next().expect(\"at least one span\");\n+        let prev_original_span = prev.span;\n+        Self {\n+            sorted_spans_iter,\n+            dominators,\n+            refined_spans,\n+            some_curr: None,\n+            curr_original_span: Span::with_root_ctxt(BytePos(0), BytePos(0)),\n+            some_prev: Some(prev),\n+            prev_original_span,\n+            pending_dups: Vec::new(),\n+        }\n+    }\n+\n+    /// Iterate through the sorted `CoverageSpan`s, and return the refined list of merged and\n+    /// de-duplicated `CoverageSpan`s.\n+    fn to_refined_spans(mut self) -> Vec<CoverageSpan> {\n+        while self.next_coverage_span() {\n+            if self.curr().is_mergeable(self.prev()) {\n+                debug!(\"  same bcb (and neither is a closure), merge with prev={:?}\", self.prev());\n+                let prev = self.take_prev();\n+                self.curr_mut().merge_from(prev);\n+            // Note that curr.span may now differ from curr_original_span\n+            } else if self.prev_ends_before_curr() {\n+                debug!(\n+                    \"  different bcbs and disjoint spans, so keep curr for next iter, and add \\\n+                    prev={:?}\",\n+                    self.prev()\n+                );\n+                let prev = self.take_prev();\n+                self.add_refined_span(prev);\n+            } else if self.prev().is_closure {\n+                // drop any equal or overlapping span (`curr`) and keep `prev` to test again in the\n+                // next iter\n+                debug!(\n+                    \"  curr overlaps a closure (prev). Drop curr and keep prev for next iter. \\\n+                    prev={:?}\",\n+                    self.prev()\n+                );\n+                self.discard_curr();\n+            } else if self.curr().is_closure {\n+                self.carve_out_span_for_closure();\n+            } else if self.prev_original_span == self.curr().span {\n+                self.hold_pending_dups_unless_dominated();\n+            } else {\n+                self.cutoff_prev_at_overlapping_curr();\n+            }\n+        }\n+        debug!(\"    AT END, adding last prev={:?}\", self.prev());\n+        let pending_dups = self.pending_dups.split_off(0);\n+        for dup in pending_dups.into_iter() {\n+            debug!(\"    ...adding at least one pending dup={:?}\", dup);\n+            self.add_refined_span(dup);\n+        }\n+        let prev = self.take_prev();\n+        self.add_refined_span(prev);\n+\n+        // FIXME(richkadel): Replace some counters with expressions if they can be calculated based\n+        // on branching. (For example, one branch of a SwitchInt can be computed from the counter\n+        // for the CoverageSpan just prior to the SwitchInt minus the sum of the counters of all\n+        // other branches).\n+\n+        self.to_refined_spans_without_closures()\n+    }\n+\n+    fn add_refined_span(&mut self, coverage_span: CoverageSpan) {\n+        self.refined_spans.push(coverage_span);\n+    }\n+\n+    /// Remove `CoverageSpan`s derived from closures, originally added to ensure the coverage\n+    /// regions for the current function leave room for the closure's own coverage regions\n+    /// (injected separately, from the closure's own MIR).\n+    fn to_refined_spans_without_closures(mut self) -> Vec<CoverageSpan> {\n+        self.refined_spans.retain(|covspan| !covspan.is_closure);\n+        self.refined_spans\n+    }\n+\n+    fn curr(&self) -> &CoverageSpan {\n+        self.some_curr\n+            .as_ref()\n+            .unwrap_or_else(|| bug!(\"invalid attempt to unwrap a None some_curr\"))\n+    }\n+\n+    fn curr_mut(&mut self) -> &mut CoverageSpan {\n+        self.some_curr\n+            .as_mut()\n+            .unwrap_or_else(|| bug!(\"invalid attempt to unwrap a None some_curr\"))\n+    }\n+\n+    fn prev(&self) -> &CoverageSpan {\n+        self.some_prev\n+            .as_ref()\n+            .unwrap_or_else(|| bug!(\"invalid attempt to unwrap a None some_prev\"))\n+    }\n+\n+    fn prev_mut(&mut self) -> &mut CoverageSpan {\n+        self.some_prev\n+            .as_mut()\n+            .unwrap_or_else(|| bug!(\"invalid attempt to unwrap a None some_prev\"))\n+    }\n+\n+    fn take_prev(&mut self) -> CoverageSpan {\n+        self.some_prev.take().unwrap_or_else(|| bug!(\"invalid attempt to unwrap a None some_prev\"))\n+    }\n+\n+    /// If there are `pending_dups` but `prev` is not a matching dup (`prev.span` doesn't match the\n+    /// `pending_dups` spans), then one of the following two things happened during the previous\n+    /// iteration:\n+    ///   * the `span` of prev was modified (by `curr_mut().merge_from(prev)`); or\n+    ///   * the `span` of prev advanced past the end of the span of pending_dups\n+    ///     (`prev().span.hi() <= curr().span.lo()`)\n+    /// In either case, no more spans will match the span of `pending_dups`, so\n+    /// add the `pending_dups` if they don't overlap `curr`, and clear the list.\n+    fn check_pending_dups(&mut self) {\n+        if let Some(dup) = self.pending_dups.last() {\n+            if dup.span != self.prev().span {\n+                debug!(\n+                    \"    SAME spans, but pending_dups are NOT THE SAME, so BCBs matched on \\\n+                    previous iteration, or prev started a new disjoint span\"\n+                );\n+                if dup.span.hi() <= self.curr().span.lo() {\n+                    let pending_dups = self.pending_dups.split_off(0);\n+                    for dup in pending_dups.into_iter() {\n+                        debug!(\"    ...adding at least one pending={:?}\", dup);\n+                        self.add_refined_span(dup);\n+                    }\n+                } else {\n+                    self.pending_dups.clear();\n+                }\n+            }\n+        }\n+    }\n+\n+    /// Advance `prev` to `curr` (if any), and `curr` to the next `CoverageSpan` in sorted order.\n+    fn next_coverage_span(&mut self) -> bool {\n+        if let Some(curr) = self.some_curr.take() {\n+            self.some_prev = Some(curr);\n+            self.prev_original_span = self.curr_original_span;\n+        }\n+        while let Some(curr) = self.sorted_spans_iter.next() {\n+            debug!(\"FOR curr={:?}\", curr);\n+            if self.prev_starts_after_next(&curr) {\n+                debug!(\n+                    \"  prev.span starts after curr.span, so curr will be dropped (skipping past \\\n+                    closure?); prev={:?}\",\n+                    self.prev()\n+                );\n+            } else {\n+                // Save a copy of the original span for `curr` in case the `CoverageSpan` is changed\n+                // by `self.curr_mut().merge_from(prev)`.\n+                self.curr_original_span = curr.span;\n+                self.some_curr.replace(curr);\n+                self.check_pending_dups();\n+                return true;\n+            }\n+        }\n+        false\n+    }\n+\n+    /// If called, then the next call to `next_coverage_span()` will *not* update `prev` with the\n+    /// `curr` coverage span.\n+    fn discard_curr(&mut self) {\n+        self.some_curr = None;\n+    }\n+\n+    /// Returns true if the curr span should be skipped because prev has already advanced beyond the\n+    /// end of curr. This can only happen if a prior iteration updated `prev` to skip past a region\n+    /// of code, such as skipping past a closure.\n+    fn prev_starts_after_next(&self, next_curr: &CoverageSpan) -> bool {\n+        self.prev().span.lo() > next_curr.span.lo()\n+    }\n+\n+    /// Returns true if the curr span starts past the end of the prev span, which means they don't\n+    /// overlap, so we now know the prev can be added to the refined coverage spans.\n+    fn prev_ends_before_curr(&self) -> bool {\n+        self.prev().span.hi() <= self.curr().span.lo()\n+    }\n+\n+    /// If `prev`s span extends left of the closure (`curr`), carve out the closure's\n+    /// span from `prev`'s span. (The closure's coverage counters will be injected when\n+    /// processing the closure's own MIR.) Add the portion of the span to the left of the\n+    /// closure; and if the span extends to the right of the closure, update `prev` to\n+    /// that portion of the span. For any `pending_dups`, repeat the same process.\n+    fn carve_out_span_for_closure(&mut self) {\n+        let curr_span = self.curr().span;\n+        let left_cutoff = curr_span.lo();\n+        let right_cutoff = curr_span.hi();\n+        let has_pre_closure_span = self.prev().span.lo() < right_cutoff;\n+        let has_post_closure_span = self.prev().span.hi() > right_cutoff;\n+        let mut pending_dups = self.pending_dups.split_off(0);\n+        if has_pre_closure_span {\n+            let mut pre_closure = self.prev().clone();\n+            pre_closure.span = pre_closure.span.with_hi(left_cutoff);\n+            debug!(\"  prev overlaps a closure. Adding span for pre_closure={:?}\", pre_closure);\n+            if !pending_dups.is_empty() {\n+                for mut dup in pending_dups.iter().cloned() {\n+                    dup.span = dup.span.with_hi(left_cutoff);\n+                    debug!(\"    ...and at least one pre_closure dup={:?}\", dup);\n+                    self.add_refined_span(dup);\n+                }\n+            }\n+            self.add_refined_span(pre_closure);\n+        }\n+        if has_post_closure_span {\n+            // Update prev.span to start after the closure (and discard curr)\n+            self.prev_mut().span = self.prev().span.with_lo(right_cutoff);\n+            self.prev_original_span = self.prev().span;\n+            for dup in pending_dups.iter_mut() {\n+                dup.span = dup.span.with_lo(right_cutoff);\n+            }\n+            self.pending_dups.append(&mut pending_dups);\n+            self.discard_curr(); // since self.prev() was already updated\n+        } else {\n+            pending_dups.clear();\n+        }\n+    }\n+\n+    /// When two `CoverageSpan`s have the same `Span`, dominated spans can be discarded; but if\n+    /// neither `CoverageSpan` dominates the other, both (or possibly more than two) are held,\n+    /// until their disposition is determined. In this latter case, the `prev` dup is moved into\n+    /// `pending_dups` so the new `curr` dup can be moved to `prev` for the next iteration.\n+    fn hold_pending_dups_unless_dominated(&mut self) {\n+        // equal coverage spans are ordered by dominators before dominated (if any)\n+        debug_assert!(!self.prev().is_dominated_by(self.curr(), self.dominators));\n+\n+        if self.curr().is_dominated_by(&self.prev(), self.dominators) {\n+            // If one span dominates the other, assocate the span with the dominator only.\n+            //\n+            // For example:\n+            //     match somenum {\n+            //         x if x < 1 => { ... }\n+            //     }...\n+            // The span for the first `x` is referenced by both the pattern block (every\n+            // time it is evaluated) and the arm code (only when matched). The counter\n+            // will be applied only to the dominator block.\n+            //\n+            // The dominator's (`prev`) execution count may be higher than the dominated\n+            // block's execution count, so drop `curr`.\n+            debug!(\n+                \"  different bcbs but SAME spans, and prev dominates curr. Drop curr and \\\n+                keep prev for next iter. prev={:?}\",\n+                self.prev()\n+            );\n+            self.discard_curr();\n+        } else {\n+            // Save `prev` in `pending_dups`. (`curr` will become `prev` in the next iteration.)\n+            // If the `curr` CoverageSpan is later discarded, `pending_dups` can be discarded as\n+            // well; but if `curr` is added to refined_spans, the `pending_dups` will also be added.\n+            debug!(\n+                \"  different bcbs but SAME spans, and neither dominates, so keep curr for \\\n+                next iter, and, pending upcoming spans (unless overlapping) add prev={:?}\",\n+                self.prev()\n+            );\n+            let prev = self.take_prev();\n+            self.pending_dups.push(prev);\n+        }\n+    }\n+\n+    /// `curr` overlaps `prev`. If `prev`s span extends left of `curr`s span, keep _only_\n+    /// statements that end before `curr.lo()` (if any), and add the portion of the\n+    /// combined span for those statements. Any other statements have overlapping spans\n+    /// that can be ignored because `curr` and/or other upcoming statements/spans inside\n+    /// the overlap area will produce their own counters. This disambiguation process\n+    /// avoids injecting multiple counters for overlapping spans, and the potential for\n+    /// double-counting.\n+    fn cutoff_prev_at_overlapping_curr(&mut self) {\n+        debug!(\n+            \"  different bcbs, overlapping spans, so ignore/drop pending and only add prev \\\n+            if it has statements that end before curr={:?}\",\n+            self.prev()\n+        );\n+        if self.pending_dups.is_empty() {\n+            let curr_span = self.curr().span;\n+            self.prev_mut().cutoff_statements_at(curr_span.lo());\n+            if self.prev().coverage_statements.is_empty() {\n+                debug!(\"  ... no non-overlapping statements to add\");\n+            } else {\n+                debug!(\"  ... adding modified prev={:?}\", self.prev());\n+                let prev = self.take_prev();\n+                self.add_refined_span(prev);\n+            }\n+        } else {\n+            // with `pending_dups`, `prev` cannot have any statements that don't overlap\n+            self.pending_dups.clear();\n         }\n-        text.join(\"\")\n     }\n }\n \n+fn filtered_statement_span(statement: &'a Statement<'tcx>, body_span: Span) -> Option<Span> {\n+    match statement.kind {\n+        // These statements have spans that are often outside the scope of the executed source code\n+        // for their parent `BasicBlock`.\n+        StatementKind::StorageLive(_)\n+        | StatementKind::StorageDead(_)\n+        // Coverage should not be encountered, but don't inject coverage coverage\n+        | StatementKind::Coverage(_)\n+        // Ignore `Nop`s\n+        | StatementKind::Nop => None,\n+\n+        // FIXME(richkadel): Look into a possible issue assigning the span to a\n+        // FakeReadCause::ForGuardBinding, in this example:\n+        //     match somenum {\n+        //         x if x < 1 => { ... }\n+        //     }...\n+        // The BasicBlock within the match arm code included one of these statements, but the span\n+        // for it covered the `1` in this source. The actual statements have nothing to do with that\n+        // source span:\n+        //     FakeRead(ForGuardBinding, _4);\n+        // where `_4` is:\n+        //     _4 = &_1; (at the span for the first `x`)\n+        // and `_1` is the `Place` for `somenum`.\n+        //\n+        // The arm code BasicBlock already has its own assignment for `x` itself, `_3 = 1`, and I've\n+        // decided it's reasonable for that span (even though outside the arm code) to be part of\n+        // the counted coverage of the arm code execution, but I can't justify including the literal\n+        // `1` in the arm code. I'm pretty sure that, if the `FakeRead(ForGuardBinding)` has a\n+        // purpose in codegen, it's probably in the right BasicBlock, but if so, the `Statement`s\n+        // `source_info.span` can't be right.\n+        //\n+        // Consider correcting the span assignment, assuming there is a better solution, and see if\n+        // the following pattern can be removed here:\n+        StatementKind::FakeRead(cause, _) if cause == FakeReadCause::ForGuardBinding => None,\n+\n+        // Retain spans from all other statements\n+        StatementKind::FakeRead(_, _) // Not including `ForGuardBinding`\n+        | StatementKind::Assign(_)\n+        | StatementKind::SetDiscriminant { .. }\n+        | StatementKind::LlvmInlineAsm(_)\n+        | StatementKind::Retag(_, _)\n+        | StatementKind::AscribeUserType(_, _) => {\n+            Some(source_info_span(&statement.source_info, body_span))\n+        }\n+    }\n+}\n+\n+fn filtered_terminator_span(terminator: &'a Terminator<'tcx>, body_span: Span) -> Option<Span> {\n+    match terminator.kind {\n+        // These terminators have spans that don't positively contribute to computing a reasonable\n+        // span of actually executed source code. (For example, SwitchInt terminators extracted from\n+        // an `if condition { block }` has a span that includes the executed block, if true,\n+        // but for coverage, the code region executed, up to *and* through the SwitchInt,\n+        // actually stops before the if's block.)\n+        TerminatorKind::Unreachable // Unreachable blocks are not connected to the CFG\n+        | TerminatorKind::Assert { .. }\n+        | TerminatorKind::Drop { .. }\n+        | TerminatorKind::DropAndReplace { .. }\n+        | TerminatorKind::SwitchInt { .. }\n+        | TerminatorKind::Goto { .. }\n+        // For `FalseEdge`, only the `real` branch is taken, so it is similar to a `Goto`.\n+        | TerminatorKind::FalseEdge { .. } => None,\n+\n+        // Retain spans from all other terminators\n+        TerminatorKind::Resume\n+        | TerminatorKind::Abort\n+        | TerminatorKind::Return\n+        | TerminatorKind::Call { .. }\n+        | TerminatorKind::Yield { .. }\n+        | TerminatorKind::GeneratorDrop\n+        | TerminatorKind::FalseUnwind { .. }\n+        | TerminatorKind::InlineAsm { .. } => {\n+            Some(source_info_span(&terminator.source_info, body_span))\n+        }\n+    }\n+}\n+\n+#[inline(always)]\n+fn source_info_span(source_info: &SourceInfo, body_span: Span) -> Span {\n+    let span = original_sp(source_info.span, body_span).with_ctxt(SyntaxContext::root());\n+    if body_span.contains(span) { span } else { body_span }\n+}\n+\n /// Convert the Span into its file name, start line and column, and end line and column\n-fn make_code_region<'tcx>(tcx: TyCtxt<'tcx>, span: &Span) -> CodeRegion {\n-    let source_map = tcx.sess.source_map();\n-    let start = source_map.lookup_char_pos(span.lo());\n-    let end = if span.hi() == span.lo() {\n-        start.clone()\n+fn make_code_region(file_name: Symbol, source_file: &Lrc<SourceFile>, span: Span) -> CodeRegion {\n+    let (start_line, mut start_col) = source_file.lookup_file_pos(span.lo());\n+    let (end_line, end_col) = if span.hi() == span.lo() {\n+        let (end_line, mut end_col) = (start_line, start_col);\n+        // Extend an empty span by one character so the region will be counted.\n+        let CharPos(char_pos) = start_col;\n+        if char_pos > 0 {\n+            start_col = CharPos(char_pos - 1);\n+        } else {\n+            end_col = CharPos(char_pos + 1);\n+        }\n+        (end_line, end_col)\n     } else {\n-        let end = source_map.lookup_char_pos(span.hi());\n-        debug_assert_eq!(\n-            start.file.name,\n-            end.file.name,\n-            \"Region start ({:?} -> {:?}) and end ({:?} -> {:?}) don't come from the same source file!\",\n-            span.lo(),\n-            start,\n-            span.hi(),\n-            end\n-        );\n-        end\n+        source_file.lookup_file_pos(span.hi())\n     };\n-    match &start.file.name {\n-        FileName::Real(RealFileName::Named(path)) => CodeRegion {\n-            file_name: Symbol::intern(&path.to_string_lossy()),\n-            start_line: start.line as u32,\n-            start_col: start.col.to_u32() + 1,\n-            end_line: end.line as u32,\n-            end_col: end.col.to_u32() + 1,\n-        },\n-        _ => bug!(\"start.file.name should be a RealFileName, but it was: {:?}\", start.file.name),\n+    CodeRegion {\n+        file_name,\n+        start_line: start_line as u32,\n+        start_col: start_col.to_u32() + 1,\n+        end_line: end_line as u32,\n+        end_col: end_col.to_u32() + 1,\n     }\n }\n "}, {"sha": "3a83fe11d0a33cb8968f5c3e874569a177bdb957", "filename": "compiler/rustc_mir/src/util/pretty.rs", "status": "modified", "additions": 53, "deletions": 28, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -150,26 +150,31 @@ fn dump_matched_mir_node<'tcx, F>(\n \n     if let Some(spanview) = tcx.sess.opts.debugging_opts.dump_mir_spanview {\n         let _: io::Result<()> = try {\n-            let mut file =\n-                create_dump_file(tcx, \"html\", pass_num, pass_name, disambiguator, body.source)?;\n+            let file_basename =\n+                dump_file_basename(tcx, pass_num, pass_name, disambiguator, body.source);\n+            let mut file = create_dump_file_with_basename(tcx, &file_basename, \"html\")?;\n             if body.source.def_id().is_local() {\n-                write_mir_fn_spanview(tcx, body, spanview, &mut file)?;\n+                write_mir_fn_spanview(\n+                    tcx,\n+                    body,\n+                    spanview,\n+                    &file_basename,\n+                    &mut file,\n+                )?;\n             }\n         };\n     }\n }\n \n-/// Returns the path to the filename where we should dump a given MIR.\n-/// Also used by other bits of code (e.g., NLL inference) that dump\n-/// graphviz data or other things.\n-fn dump_path(\n+/// Returns the file basename portion (without extension) of a filename path\n+/// where we should dump a MIR representation output files.\n+fn dump_file_basename(\n     tcx: TyCtxt<'_>,\n-    extension: &str,\n     pass_num: Option<&dyn Display>,\n     pass_name: &str,\n     disambiguator: &dyn Display,\n     source: MirSource<'tcx>,\n-) -> PathBuf {\n+) -> String {\n     let promotion_id = match source.promoted {\n         Some(id) => format!(\"-{:?}\", id),\n         None => String::new(),\n@@ -184,9 +189,6 @@ fn dump_path(\n         }\n     };\n \n-    let mut file_path = PathBuf::new();\n-    file_path.push(Path::new(&tcx.sess.opts.debugging_opts.dump_mir_dir));\n-\n     let crate_name = tcx.crate_name(source.def_id().krate);\n     let item_name = tcx.def_path(source.def_id()).to_filename_friendly_no_crate();\n     // All drop shims have the same DefId, so we have to add the type\n@@ -206,23 +208,46 @@ fn dump_path(\n         _ => String::new(),\n     };\n \n-    let file_name = format!(\n-        \"{}.{}{}{}{}.{}.{}.{}\",\n-        crate_name,\n-        item_name,\n-        shim_disambiguator,\n-        promotion_id,\n-        pass_num,\n-        pass_name,\n-        disambiguator,\n-        extension,\n-    );\n+    format!(\n+        \"{}.{}{}{}{}.{}.{}\",\n+        crate_name, item_name, shim_disambiguator, promotion_id, pass_num, pass_name, disambiguator,\n+    )\n+}\n+\n+/// Returns the path to the filename where we should dump a given MIR.\n+/// Also used by other bits of code (e.g., NLL inference) that dump\n+/// graphviz data or other things.\n+fn dump_path(tcx: TyCtxt<'_>, basename: &str, extension: &str) -> PathBuf {\n+    let mut file_path = PathBuf::new();\n+    file_path.push(Path::new(&tcx.sess.opts.debugging_opts.dump_mir_dir));\n+\n+    let file_name = format!(\"{}.{}\", basename, extension,);\n \n     file_path.push(&file_name);\n \n     file_path\n }\n \n+/// Attempts to open the MIR dump file with the given name and extension.\n+fn create_dump_file_with_basename(\n+    tcx: TyCtxt<'_>,\n+    file_basename: &str,\n+    extension: &str,\n+) -> io::Result<io::BufWriter<fs::File>> {\n+    let file_path = dump_path(tcx, file_basename, extension);\n+    if let Some(parent) = file_path.parent() {\n+        fs::create_dir_all(parent).map_err(|e| {\n+            io::Error::new(\n+                e.kind(),\n+                format!(\"IO error creating MIR dump directory: {:?}; {}\", parent, e),\n+            )\n+        })?;\n+    }\n+    Ok(io::BufWriter::new(fs::File::create(&file_path).map_err(|e| {\n+        io::Error::new(e.kind(), format!(\"IO error creating MIR dump file: {:?}; {}\", file_path, e))\n+    })?))\n+}\n+\n /// Attempts to open a file where we should dump a given MIR or other\n /// bit of MIR-related data. Used by `mir-dump`, but also by other\n /// bits of code (e.g., NLL inference) that dump graphviz data or\n@@ -235,11 +260,11 @@ pub(crate) fn create_dump_file(\n     disambiguator: &dyn Display,\n     source: MirSource<'tcx>,\n ) -> io::Result<io::BufWriter<fs::File>> {\n-    let file_path = dump_path(tcx, extension, pass_num, pass_name, disambiguator, source);\n-    if let Some(parent) = file_path.parent() {\n-        fs::create_dir_all(parent)?;\n-    }\n-    Ok(io::BufWriter::new(fs::File::create(&file_path)?))\n+    create_dump_file_with_basename(\n+        tcx,\n+        &dump_file_basename(tcx, pass_num, pass_name, disambiguator, source),\n+        extension,\n+    )\n }\n \n /// Write out a human-readable textual representation for the given MIR."}, {"sha": "d3ef8c64565c693122896c15772ee276fcc8dd93", "filename": "compiler/rustc_mir/src/util/spanview.rs", "status": "modified", "additions": 39, "deletions": 20, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_mir%2Fsrc%2Futil%2Fspanview.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_mir%2Fsrc%2Futil%2Fspanview.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Futil%2Fspanview.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -16,9 +16,13 @@ const ANNOTATION_RIGHT_BRACKET: char = '\\u{2989}'; // Unicode `Z NOTATION LEFT B\n const NEW_LINE_SPAN: &str = \"</span>\\n<span class=\\\"line\\\">\";\n const HEADER: &str = r#\"<!DOCTYPE html>\n <html>\n-<head>\n-    <title>coverage_of_if_else - Code Regions</title>\n-    <style>\n+<head>\"#;\n+const START_BODY: &str = r#\"</head>\n+<body>\"#;\n+const FOOTER: &str = r#\"</body>\n+</html>\"#;\n+\n+const STYLE_SECTION: &str = r#\"<style>\n     .line {\n         counter-increment: line;\n     }\n@@ -72,16 +76,12 @@ const HEADER: &str = r#\"<!DOCTYPE html>\n         /* requires hover over a span ONLY on its first line */\n         display: inline-block;\n     }\n-    </style>\n-</head>\n-<body>\"#;\n-\n-const FOOTER: &str = r#\"\n-</body>\n-</html>\"#;\n+</style>\"#;\n \n /// Metadata to highlight the span of a MIR BasicBlock, Statement, or Terminator.\n+#[derive(Clone, Debug)]\n pub struct SpanViewable {\n+    pub bb: BasicBlock,\n     pub span: Span,\n     pub id: String,\n     pub tooltip: String,\n@@ -92,6 +92,7 @@ pub fn write_mir_fn_spanview<'tcx, W>(\n     tcx: TyCtxt<'tcx>,\n     body: &Body<'tcx>,\n     spanview: MirSpanview,\n+    title: &str,\n     w: &mut W,\n ) -> io::Result<()>\n where\n@@ -126,16 +127,17 @@ where\n             }\n         }\n     }\n-    write_spanview_document(tcx, def_id, span_viewables, w)?;\n+    write_document(tcx, def_id, span_viewables, title, w)?;\n     Ok(())\n }\n \n /// Generate a spanview HTML+CSS document for the given local function `def_id`, and a pre-generated\n /// list `SpanViewable`s.\n-pub fn write_spanview_document<'tcx, W>(\n+pub fn write_document<'tcx, W>(\n     tcx: TyCtxt<'tcx>,\n     def_id: DefId,\n     mut span_viewables: Vec<SpanViewable>,\n+    title: &str,\n     w: &mut W,\n ) -> io::Result<()>\n where\n@@ -153,6 +155,9 @@ where\n         source_map.span_to_snippet(fn_span).expect(\"function should have printable source\")\n     );\n     writeln!(w, \"{}\", HEADER)?;\n+    writeln!(w, \"<title>{}</title>\", title)?;\n+    writeln!(w, \"{}\", STYLE_SECTION)?;\n+    writeln!(w, \"{}\", START_BODY)?;\n     write!(\n         w,\n         r#\"<div class=\"code\" style=\"counter-reset: line {}\"><span class=\"line\">{}\"#,\n@@ -182,6 +187,7 @@ where\n             end_pos.to_usize(),\n             ordered_viewables.len()\n         );\n+        let curr_id = &ordered_viewables[0].id;\n         let (next_from_pos, next_ordered_viewables) = write_next_viewable_with_overlaps(\n             tcx,\n             from_pos,\n@@ -204,13 +210,17 @@ where\n         from_pos = next_from_pos;\n         if next_ordered_viewables.len() != ordered_viewables.len() {\n             ordered_viewables = next_ordered_viewables;\n-            alt = !alt;\n+            if let Some(next_ordered_viewable) = ordered_viewables.first() {\n+                if &next_ordered_viewable.id != curr_id {\n+                    alt = !alt;\n+                }\n+            }\n         }\n     }\n     if from_pos < end_pos {\n         write_coverage_gap(tcx, from_pos, end_pos, w)?;\n     }\n-    write!(w, r#\"</span></div>\"#)?;\n+    writeln!(w, r#\"</span></div>\"#)?;\n     writeln!(w, \"{}\", FOOTER)?;\n     Ok(())\n }\n@@ -273,7 +283,7 @@ fn statement_span_viewable<'tcx>(\n     }\n     let id = format!(\"{}[{}]\", bb.index(), i);\n     let tooltip = tooltip(tcx, &id, span, vec![statement.clone()], &None);\n-    Some(SpanViewable { span, id, tooltip })\n+    Some(SpanViewable { bb, span, id, tooltip })\n }\n \n fn terminator_span_viewable<'tcx>(\n@@ -289,7 +299,7 @@ fn terminator_span_viewable<'tcx>(\n     }\n     let id = format!(\"{}:{}\", bb.index(), terminator_kind_name(term));\n     let tooltip = tooltip(tcx, &id, span, vec![], &data.terminator);\n-    Some(SpanViewable { span, id, tooltip })\n+    Some(SpanViewable { bb, span, id, tooltip })\n }\n \n fn block_span_viewable<'tcx>(\n@@ -304,7 +314,7 @@ fn block_span_viewable<'tcx>(\n     }\n     let id = format!(\"{}\", bb.index());\n     let tooltip = tooltip(tcx, &id, span, data.statements.clone(), &data.terminator);\n-    Some(SpanViewable { span, id, tooltip })\n+    Some(SpanViewable { bb, span, id, tooltip })\n }\n \n fn compute_block_span<'tcx>(data: &BasicBlockData<'tcx>, body_span: Span) -> Span {\n@@ -456,6 +466,7 @@ where\n             remaining_viewables.len()\n         );\n         // Write the overlaps (and the overlaps' overlaps, if any) up to `to_pos`.\n+        let curr_id = &remaining_viewables[0].id;\n         let (next_from_pos, next_remaining_viewables) = write_next_viewable_with_overlaps(\n             tcx,\n             from_pos,\n@@ -480,7 +491,11 @@ where\n         from_pos = next_from_pos;\n         if next_remaining_viewables.len() != remaining_viewables.len() {\n             remaining_viewables = next_remaining_viewables;\n-            subalt = !subalt;\n+            if let Some(next_ordered_viewable) = remaining_viewables.first() {\n+                if &next_ordered_viewable.id != curr_id {\n+                    subalt = !subalt;\n+                }\n+            }\n         }\n     }\n     if from_pos <= viewable.span.hi() {\n@@ -649,8 +664,12 @@ fn fn_span<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> Span {\n         tcx.hir().local_def_id_to_hir_id(def_id.as_local().expect(\"expected DefId is local\"));\n     let fn_decl_span = tcx.hir().span(hir_id);\n     let body_span = hir_body(tcx, def_id).value.span;\n-    debug_assert_eq!(fn_decl_span.ctxt(), body_span.ctxt());\n-    fn_decl_span.to(body_span)\n+    if fn_decl_span.ctxt() == body_span.ctxt() {\n+        fn_decl_span.to(body_span)\n+    } else {\n+        // This probably occurs for functions defined via macros\n+        body_span\n+    }\n }\n \n fn hir_body<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId) -> &'tcx rustc_hir::Body<'tcx> {"}, {"sha": "231e315a22f88a4e1c990ca43327e12328ce3ab3", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -1756,10 +1756,6 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n         );\n     }\n \n-    if debugging_opts.experimental_coverage {\n-        debugging_opts.instrument_coverage = true;\n-    }\n-\n     if debugging_opts.instrument_coverage {\n         if cg.profile_generate.enabled() || cg.profile_use.is_some() {\n             early_error("}, {"sha": "a106007c274d3f4f3ea834a1ec45d55136a8fc91", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -895,11 +895,6 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         all statements).\"),\n     emit_stack_sizes: bool = (false, parse_bool, [UNTRACKED],\n         \"emit a section containing stack size metadata (default: no)\"),\n-    experimental_coverage: bool = (false, parse_bool, [TRACKED],\n-        \"enable and extend the `-Z instrument-coverage` function-level coverage \\\n-        feature, adding additional experimental (likely inaccurate) counters and \\\n-        code regions (used by `rustc` compiler developers to test new coverage \\\n-        counter placements) (default: no)\"),\n     fewer_names: bool = (false, parse_bool, [TRACKED],\n         \"reduce memory use by retaining fewer names within compilation artifacts (LLVM-IR) \\\n         (default: no)\"),"}, {"sha": "e7cb8cb6e8876f9660e666e10259f273bc823989", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -60,6 +60,8 @@ use md5::Md5;\n use sha1::Digest;\n use sha1::Sha1;\n \n+use tracing::debug;\n+\n #[cfg(test)]\n mod tests;\n \n@@ -1462,6 +1464,88 @@ impl SourceFile {\n \n         BytePos::from_u32(pos.0 - self.start_pos.0 + diff)\n     }\n+\n+    /// Converts an absolute `BytePos` to a `CharPos` relative to the `SourceFile`.\n+    pub fn bytepos_to_file_charpos(&self, bpos: BytePos) -> CharPos {\n+        // The number of extra bytes due to multibyte chars in the `SourceFile`.\n+        let mut total_extra_bytes = 0;\n+\n+        for mbc in self.multibyte_chars.iter() {\n+            debug!(\"{}-byte char at {:?}\", mbc.bytes, mbc.pos);\n+            if mbc.pos < bpos {\n+                // Every character is at least one byte, so we only\n+                // count the actual extra bytes.\n+                total_extra_bytes += mbc.bytes as u32 - 1;\n+                // We should never see a byte position in the middle of a\n+                // character.\n+                assert!(bpos.to_u32() >= mbc.pos.to_u32() + mbc.bytes as u32);\n+            } else {\n+                break;\n+            }\n+        }\n+\n+        assert!(self.start_pos.to_u32() + total_extra_bytes <= bpos.to_u32());\n+        CharPos(bpos.to_usize() - self.start_pos.to_usize() - total_extra_bytes as usize)\n+    }\n+\n+    /// Looks up the file's (1-based) line number and (0-based `CharPos`) column offset, for a\n+    /// given `BytePos`.\n+    pub fn lookup_file_pos(&self, pos: BytePos) -> (usize, CharPos) {\n+        let chpos = self.bytepos_to_file_charpos(pos);\n+        match self.lookup_line(pos) {\n+            Some(a) => {\n+                let line = a + 1; // Line numbers start at 1\n+                let linebpos = self.lines[a];\n+                let linechpos = self.bytepos_to_file_charpos(linebpos);\n+                let col = chpos - linechpos;\n+                debug!(\"byte pos {:?} is on the line at byte pos {:?}\", pos, linebpos);\n+                debug!(\"char pos {:?} is on the line at char pos {:?}\", chpos, linechpos);\n+                debug!(\"byte is on line: {}\", line);\n+                assert!(chpos >= linechpos);\n+                (line, col)\n+            }\n+            None => (0, chpos),\n+        }\n+    }\n+\n+    /// Looks up the file's (1-based) line number, (0-based `CharPos`) column offset, and (0-based)\n+    /// column offset when displayed, for a given `BytePos`.\n+    pub fn lookup_file_pos_with_col_display(&self, pos: BytePos) -> (usize, CharPos, usize) {\n+        let (line, col_or_chpos) = self.lookup_file_pos(pos);\n+        if line > 0 {\n+            let col = col_or_chpos;\n+            let linebpos = self.lines[line - 1];\n+            let col_display = {\n+                let start_width_idx = self\n+                    .non_narrow_chars\n+                    .binary_search_by_key(&linebpos, |x| x.pos())\n+                    .unwrap_or_else(|x| x);\n+                let end_width_idx = self\n+                    .non_narrow_chars\n+                    .binary_search_by_key(&pos, |x| x.pos())\n+                    .unwrap_or_else(|x| x);\n+                let special_chars = end_width_idx - start_width_idx;\n+                let non_narrow: usize = self.non_narrow_chars[start_width_idx..end_width_idx]\n+                    .iter()\n+                    .map(|x| x.width())\n+                    .sum();\n+                col.0 - special_chars + non_narrow\n+            };\n+            (line, col, col_display)\n+        } else {\n+            let chpos = col_or_chpos;\n+            let col_display = {\n+                let end_width_idx = self\n+                    .non_narrow_chars\n+                    .binary_search_by_key(&pos, |x| x.pos())\n+                    .unwrap_or_else(|x| x);\n+                let non_narrow: usize =\n+                    self.non_narrow_chars[0..end_width_idx].iter().map(|x| x.width()).sum();\n+                chpos.0 - end_width_idx + non_narrow\n+            };\n+            (0, chpos, col_display)\n+        }\n+    }\n }\n \n /// Normalizes the source code and records the normalizations."}, {"sha": "fdb031fd9b3d317fb97c4d1955b59a5372f0e346", "filename": "compiler/rustc_span/src/source_map.rs", "status": "modified", "additions": 12, "deletions": 67, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -428,58 +428,22 @@ impl SourceMap {\n         }\n     }\n \n+    /// Return the SourceFile that contains the given `BytePos`\n+    pub fn lookup_source_file(&self, pos: BytePos) -> Lrc<SourceFile> {\n+        let idx = self.lookup_source_file_idx(pos);\n+        (*self.files.borrow().source_files)[idx].clone()\n+    }\n+\n     /// Looks up source information about a `BytePos`.\n     pub fn lookup_char_pos(&self, pos: BytePos) -> Loc {\n-        let chpos = self.bytepos_to_file_charpos(pos);\n-        match self.lookup_line(pos) {\n-            Ok(SourceFileAndLine { sf: f, line: a }) => {\n-                let line = a + 1; // Line numbers start at 1\n-                let linebpos = f.lines[a];\n-                let linechpos = self.bytepos_to_file_charpos(linebpos);\n-                let col = chpos - linechpos;\n-\n-                let col_display = {\n-                    let start_width_idx = f\n-                        .non_narrow_chars\n-                        .binary_search_by_key(&linebpos, |x| x.pos())\n-                        .unwrap_or_else(|x| x);\n-                    let end_width_idx = f\n-                        .non_narrow_chars\n-                        .binary_search_by_key(&pos, |x| x.pos())\n-                        .unwrap_or_else(|x| x);\n-                    let special_chars = end_width_idx - start_width_idx;\n-                    let non_narrow: usize = f.non_narrow_chars[start_width_idx..end_width_idx]\n-                        .iter()\n-                        .map(|x| x.width())\n-                        .sum();\n-                    col.0 - special_chars + non_narrow\n-                };\n-                debug!(\"byte pos {:?} is on the line at byte pos {:?}\", pos, linebpos);\n-                debug!(\"char pos {:?} is on the line at char pos {:?}\", chpos, linechpos);\n-                debug!(\"byte is on line: {}\", line);\n-                assert!(chpos >= linechpos);\n-                Loc { file: f, line, col, col_display }\n-            }\n-            Err(f) => {\n-                let col_display = {\n-                    let end_width_idx = f\n-                        .non_narrow_chars\n-                        .binary_search_by_key(&pos, |x| x.pos())\n-                        .unwrap_or_else(|x| x);\n-                    let non_narrow: usize =\n-                        f.non_narrow_chars[0..end_width_idx].iter().map(|x| x.width()).sum();\n-                    chpos.0 - end_width_idx + non_narrow\n-                };\n-                Loc { file: f, line: 0, col: chpos, col_display }\n-            }\n-        }\n+        let sf = self.lookup_source_file(pos);\n+        let (line, col, col_display) = sf.lookup_file_pos_with_col_display(pos);\n+        Loc { file: sf, line, col, col_display }\n     }\n \n     // If the corresponding `SourceFile` is empty, does not return a line number.\n     pub fn lookup_line(&self, pos: BytePos) -> Result<SourceFileAndLine, Lrc<SourceFile>> {\n-        let idx = self.lookup_source_file_idx(pos);\n-\n-        let f = (*self.files.borrow().source_files)[idx].clone();\n+        let f = self.lookup_source_file(pos);\n \n         match f.lookup_line(pos) {\n             Some(line) => Ok(SourceFileAndLine { sf: f, line }),\n@@ -934,27 +898,8 @@ impl SourceMap {\n     /// Converts an absolute `BytePos` to a `CharPos` relative to the `SourceFile`.\n     pub fn bytepos_to_file_charpos(&self, bpos: BytePos) -> CharPos {\n         let idx = self.lookup_source_file_idx(bpos);\n-        let map = &(*self.files.borrow().source_files)[idx];\n-\n-        // The number of extra bytes due to multibyte chars in the `SourceFile`.\n-        let mut total_extra_bytes = 0;\n-\n-        for mbc in map.multibyte_chars.iter() {\n-            debug!(\"{}-byte char at {:?}\", mbc.bytes, mbc.pos);\n-            if mbc.pos < bpos {\n-                // Every character is at least one byte, so we only\n-                // count the actual extra bytes.\n-                total_extra_bytes += mbc.bytes as u32 - 1;\n-                // We should never see a byte position in the middle of a\n-                // character.\n-                assert!(bpos.to_u32() >= mbc.pos.to_u32() + mbc.bytes as u32);\n-            } else {\n-                break;\n-            }\n-        }\n-\n-        assert!(map.start_pos.to_u32() + total_extra_bytes <= bpos.to_u32());\n-        CharPos(bpos.to_usize() - map.start_pos.to_usize() - total_extra_bytes as usize)\n+        let sf = &(*self.files.borrow().source_files)[idx];\n+        sf.bytepos_to_file_charpos(bpos)\n     }\n \n     // Returns the index of the `SourceFile` (in `self.files`) that contains `pos`."}, {"sha": "8d1da7f1b9651c5224281abf544534966c29f886", "filename": "src/test/mir-opt/graphviz.main.mir_map.0.dot", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Fmir-opt%2Fgraphviz.main.mir_map.0.dot", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Fmir-opt%2Fgraphviz.main.mir_map.0.dot", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fgraphviz.main.mir_map.0.dot?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -3,8 +3,5 @@ digraph Mir_0_3 {\n     node [fontname=\"Courier, monospace\"];\n     edge [fontname=\"Courier, monospace\"];\n     label=<fn main() -&gt; ()<br align=\"left\"/>>;\n-    bb0__0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">0</td></tr><tr><td align=\"left\" balign=\"left\">_0 = const ()<br/></td></tr><tr><td align=\"left\">goto</td></tr></table>>];\n-    bb1__0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">1</td></tr><tr><td align=\"left\">resume</td></tr></table>>];\n-    bb2__0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">2</td></tr><tr><td align=\"left\">return</td></tr></table>>];\n-    bb0__0_3 -> bb2__0_3 [label=\"\"];\n+    bb0__0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">0</td></tr><tr><td align=\"left\" balign=\"left\">_0 = const ()<br/></td></tr><tr><td align=\"left\">return</td></tr></table>>];\n }"}, {"sha": "8d1da7f1b9651c5224281abf544534966c29f886", "filename": "src/test/mir-opt/graphviz.main.mir_map.0.dot.mir", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d890e64dff3fd2c28635c60cc9315648dd46c8f7/src%2Ftest%2Fmir-opt%2Fgraphviz.main.mir_map.0.dot.mir", "raw_url": "https://github.com/rust-lang/rust/raw/d890e64dff3fd2c28635c60cc9315648dd46c8f7/src%2Ftest%2Fmir-opt%2Fgraphviz.main.mir_map.0.dot.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fgraphviz.main.mir_map.0.dot.mir?ref=d890e64dff3fd2c28635c60cc9315648dd46c8f7", "patch": "@@ -1,7 +0,0 @@\n-digraph Mir_0_3 {\n-    graph [fontname=\"Courier, monospace\"];\n-    node [fontname=\"Courier, monospace\"];\n-    edge [fontname=\"Courier, monospace\"];\n-    label=<fn main() -&gt; ()<br align=\"left\"/>>;\n-    bb0__0_3 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">0</td></tr><tr><td align=\"left\" balign=\"left\">_0 = const ()<br/></td></tr><tr><td align=\"left\">return</td></tr></table>>];\n-}"}, {"sha": "5048359e5c6546249e75ec91720024d009c76d2f", "filename": "src/test/mir-opt/instrument_coverage.bar.InstrumentCoverage.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Fmir-opt%2Finstrument_coverage.bar.InstrumentCoverage.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Fmir-opt%2Finstrument_coverage.bar.InstrumentCoverage.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finstrument_coverage.bar.InstrumentCoverage.diff?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -6,7 +6,7 @@\n   \n       bb0: {\n           _0 = const true;                 // scope 0 at /the/src/instrument_coverage.rs:20:5: 20:9\n-+         Coverage::Counter(0) for /the/src/instrument_coverage.rs:19:18 - 21:2; // scope 0 at /the/src/instrument_coverage.rs:21:2: 21:2\n++         Coverage::Counter(1) for /the/src/instrument_coverage.rs:20:5 - 21:2; // scope 0 at /the/src/instrument_coverage.rs:21:2: 21:2\n           return;                          // scope 0 at /the/src/instrument_coverage.rs:21:2: 21:2\n       }\n   }"}, {"sha": "598727e677ca292c02b320e96d40613a472a7c96", "filename": "src/test/mir-opt/instrument_coverage.main.InstrumentCoverage.diff", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Fmir-opt%2Finstrument_coverage.main.InstrumentCoverage.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Fmir-opt%2Finstrument_coverage.main.InstrumentCoverage.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finstrument_coverage.main.InstrumentCoverage.diff?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -8,7 +8,7 @@\n       let mut _3: !;                       // in scope 0 at /the/src/instrument_coverage.rs:12:18: 14:10\n   \n       bb0: {\n-+         Coverage::Counter(0) for /the/src/instrument_coverage.rs:10:11 - 16:2; // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n++         Coverage::Counter(1) for /the/src/instrument_coverage.rs:12:12 - 12:17; // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n           falseUnwind -> [real: bb1, cleanup: bb6]; // scope 0 at /the/src/instrument_coverage.rs:11:5: 15:6\n       }\n   \n@@ -26,6 +26,7 @@\n       }\n   \n       bb3: {\n++         Coverage::Counter(2) for /the/src/instrument_coverage.rs:13:13 - 16:2; // scope 0 at /the/src/instrument_coverage.rs:12:9: 14:10\n           falseEdge -> [real: bb5, imaginary: bb4]; // scope 0 at /the/src/instrument_coverage.rs:12:9: 14:10\n       }\n   "}, {"sha": "8e5268043e70c839333c0a278ddfb98ab54b22bb", "filename": "src/test/mir-opt/spanview_block.main.mir_map.0.html", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Fmir-opt%2Fspanview_block.main.mir_map.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Fmir-opt%2Fspanview_block.main.mir_map.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fspanview_block.main.mir_map.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -1,8 +1,8 @@\n <!DOCTYPE html>\n <html>\n <head>\n-    <title>coverage_of_if_else - Code Regions</title>\n-    <style>\n+<title>spanview_block.main.mir_map.0</title>\n+<style>\n     .line {\n         counter-increment: line;\n     }\n@@ -56,12 +56,11 @@\n         /* requires hover over a span ONLY on its first line */\n         display: inline-block;\n     }\n-    </style>\n+</style>\n </head>\n <body>\n <div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"0: $DIR/spanview-block.rs:5:11: 5:13:\n     5:11-5:13: Assign: _0 = const ()\n-    5:13-5:13: Goto: goto -&gt; bb2\"><span class=\"annotation\">0\u298a</span>{}<span class=\"annotation\">\u29890</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"2: $DIR/spanview-block.rs:5:13: 5:13:\n-    5:13-5:13: Return: return\"><span class=\"annotation\">2\u298a</span>\u2038<span class=\"annotation\">\u29892</span></span></span></span></div>\n+    5:13-5:13: Return: return\"><span class=\"annotation\">0\u298a</span>{}<span class=\"annotation\">\u29890</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "abbff2270b7f8969501c347927e68c8a590e6a7d", "filename": "src/test/mir-opt/spanview_statement.main.mir_map.0.html", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Fmir-opt%2Fspanview_statement.main.mir_map.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Fmir-opt%2Fspanview_statement.main.mir_map.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fspanview_statement.main.mir_map.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -1,8 +1,8 @@\n <!DOCTYPE html>\n <html>\n <head>\n-    <title>coverage_of_if_else - Code Regions</title>\n-    <style>\n+<title>spanview_statement.main.mir_map.0</title>\n+<style>\n     .line {\n         counter-increment: line;\n     }\n@@ -56,12 +56,11 @@\n         /* requires hover over a span ONLY on its first line */\n         display: inline-block;\n     }\n-    </style>\n+</style>\n </head>\n <body>\n <div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"0[0]: $DIR/spanview-statement.rs:5:11: 5:13:\n-    5:11-5:13: Assign: _0 = const ()\"><span class=\"annotation\">0[0]\u298a</span>{}<span class=\"annotation\">\u29890[0]</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"0:Goto: $DIR/spanview-statement.rs:5:13: 5:13:\n-    5:13-5:13: Goto: goto -&gt; bb2\"><span class=\"annotation\">0:Goto\u298a</span>\u2038<span class=\"annotation\">\u29890:Goto</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:Return: $DIR/spanview-statement.rs:5:13: 5:13:\n-    5:13-5:13: Return: return\"><span class=\"annotation\">2:Return\u298a</span>\u2038<span class=\"annotation\">\u29892:Return</span></span></span></span></div>\n+    5:11-5:13: Assign: _0 = const ()\"><span class=\"annotation\">0[0]\u298a</span>{}<span class=\"annotation\">\u29890[0]</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"0:Return: $DIR/spanview-statement.rs:5:13: 5:13:\n+    5:13-5:13: Return: return\"><span class=\"annotation\">0:Return\u298a</span>\u2038<span class=\"annotation\">\u29890:Return</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "55fafd90b0aa28e18b19e1270bce8ce22d96d3af", "filename": "src/test/mir-opt/spanview_terminator.main.mir_map.0.html", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Fmir-opt%2Fspanview_terminator.main.mir_map.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Fmir-opt%2Fspanview_terminator.main.mir_map.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fspanview_terminator.main.mir_map.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -1,8 +1,8 @@\n <!DOCTYPE html>\n <html>\n <head>\n-    <title>coverage_of_if_else - Code Regions</title>\n-    <style>\n+<title>spanview_terminator.main.mir_map.0</title>\n+<style>\n     .line {\n         counter-increment: line;\n     }\n@@ -56,11 +56,10 @@\n         /* requires hover over a span ONLY on its first line */\n         display: inline-block;\n     }\n-    </style>\n+</style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"0:Goto: $DIR/spanview-terminator.rs:5:13: 5:13:\n-    5:13-5:13: Goto: goto -&gt; bb2\"><span class=\"annotation\">0:Goto\u298a</span>\u2038<span class=\"annotation\">\u29890:Goto</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"2:Return: $DIR/spanview-terminator.rs:5:13: 5:13:\n-    5:13-5:13: Return: return\"><span class=\"annotation\">2:Return\u298a</span>\u2038<span class=\"annotation\">\u29892:Return</span></span></span></span></div>\n+<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"0:Return: $DIR/spanview-terminator.rs:5:13: 5:13:\n+    5:13-5:13: Return: return\"><span class=\"annotation\">0:Return\u298a</span>\u2038<span class=\"annotation\">\u29890:Return</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "0e05df72c4cdfba60ed16db2cd5104f709cac68f", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/Makefile", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2FMakefile?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -20,25 +20,29 @@ all: $(patsubst $(SOURCEDIR)/%.rs,%,$(wildcard $(SOURCEDIR)/*.rs))\n clear_expected_if_blessed:\n ifdef RUSTC_BLESS_TEST\n \trm -f expected_export_coverage.*.json\n-\trm -f typical_show_coverage.*.txt\n+\trm -f expected_show_coverage.*.txt\n endif\n \n -include clear_expected_if_blessed\n \n %: $(SOURCEDIR)/%.rs\n-\t# Compile the test program with \"experimental\" coverage instrumentation and generate relevant MIR.\n-\t#\n-\t# FIXME(richkadel):  `-Zexperimental-coverage` to `-Zinstrument-coverage` once we are\n-\t# satisfied with the branch-level instrumentation.\n+\t# Compile the test program with coverage instrumentation and generate relevant MIR.\n \t$(RUSTC) $(SOURCEDIR)/$@.rs \\\n-\t\t\t-Zexperimental-coverage \\\n+\t\t\t-Zinstrument-coverage \\\n \t\t\t-Clink-dead-code=$(LINK_DEAD_CODE)\n \n \t# Run it in order to generate some profiling data,\n \t# with `LLVM_PROFILE_FILE=<profdata_file>` environment variable set to\n \t# output the coverage stats for this run.\n \tLLVM_PROFILE_FILE=\"$(TMPDIR)\"/$@.profraw \\\n-\t\t\t$(call RUN,$@)\n+\t\t\t$(call RUN,$@) || \\\n+\t\t\t( \\\n+\t\t\t\tstatus=$$?; \\\n+\t\t\t\tgrep -q \"^\\/\\/ expect-exit-status-$$status\" $(SOURCEDIR)/$@.rs || \\\n+\t\t\t\t( >&2 echo \"program exited with an unexpected exit status: $$status\"; \\\n+\t\t\t\t\tfalse \\\n+\t\t\t\t) \\\n+\t\t\t)\n \n \t# Postprocess the profiling data so it can be used by the llvm-cov tool\n \t\"$(LLVM_BIN_DIR)\"/llvm-profdata merge --sparse \\\n@@ -57,11 +61,20 @@ endif\n \t\t> \"$(TMPDIR)\"/actual_show_coverage.$@.txt\n \n ifdef RUSTC_BLESS_TEST\n-\tcp \"$(TMPDIR)\"/actual_show_coverage.$@.txt typical_show_coverage.$@.txt\n+\tcp \"$(TMPDIR)\"/actual_show_coverage.$@.txt expected_show_coverage.$@.txt\n else\n \t# Compare the show coverage output (`--bless` refreshes `typical` files)\n-\t$(DIFF) typical_show_coverage.$@.txt \"$(TMPDIR)\"/actual_show_coverage.$@.txt || \\\n-\t\t>&2 echo 'diff failed for `llvm-cov show` on $@ (might not be an error)'\n+\t# Note `llvm-cov show` output for some programs can vary, but can be ignored\n+\t# by inserting `// ignore-llvm-cov-show-diffs` at the top of the source file.\n+\n+\t$(DIFF) expected_show_coverage.$@.txt \"$(TMPDIR)\"/actual_show_coverage.$@.txt || \\\n+\t\t( grep -q '^\\/\\/ ignore-llvm-cov-show-diffs' $(SOURCEDIR)/$@.rs && \\\n+\t\t\t>&2 echo 'diff failed, but suppressed with `// ignore-llvm-cov-show-diffs` in $(SOURCEDIR)/$@.rs' \\\n+\t\t) || \\\n+\t\t( >&2 echo 'diff failed, and not suppressed without `// ignore-llvm-cov-show-diffs` in $(SOURCEDIR)/$@.rs'; \\\n+\t\t\tfalse \\\n+\t\t)\n+\n endif\n \n \t# Generate a coverage report in JSON, using `llvm-cov export`, and fail if"}, {"sha": "9dbd0c4e5d6ad7fed39fb5afc65cb505ad57cea7", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_export_coverage.closure.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.closure.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.closure.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.closure.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/closure.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 5,\n+              \"covered\": 3,\n+              \"percent\": 60\n+            },\n+            \"instantiations\": {\n+              \"count\": 5,\n+              \"covered\": 3,\n+              \"percent\": 60\n+            },\n+            \"lines\": {\n+              \"count\": 91,\n+              \"covered\": 75,\n+              \"percent\": 82.41758241758241\n+            },\n+            \"regions\": {\n+              \"count\": 21,\n+              \"covered\": 11,\n+              \"notcovered\": 10,\n+              \"percent\": 52.38095238095239\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 5,\n+          \"covered\": 3,\n+          \"percent\": 60\n+        },\n+        \"instantiations\": {\n+          \"count\": 5,\n+          \"covered\": 3,\n+          \"percent\": 60\n+        },\n+        \"lines\": {\n+          \"count\": 91,\n+          \"covered\": 75,\n+          \"percent\": 82.41758241758241\n+        },\n+        \"regions\": {\n+          \"count\": 21,\n+          \"covered\": 11,\n+          \"notcovered\": 10,\n+          \"percent\": 52.38095238095239\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "cdfdca990fa48a71022c76da4a13898807c04c3a", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_export_coverage.drop_trait.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.drop_trait.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.drop_trait.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.drop_trait.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/drop_trait.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 10,\n+              \"covered\": 10,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 5,\n+              \"covered\": 5,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 10,\n+          \"covered\": 10,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 5,\n+          \"covered\": 5,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "ae405afedc1592fd7cec462d85b7b6e758030af6", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_export_coverage.generics.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.generics.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.generics.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.generics.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/generics.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 3,\n+              \"covered\": 3,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 5,\n+              \"covered\": 5,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 16,\n+              \"covered\": 16,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 6,\n+              \"covered\": 6,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 3,\n+          \"covered\": 3,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 5,\n+          \"covered\": 5,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 16,\n+          \"covered\": 16,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 6,\n+          \"covered\": 6,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "5231593d8a0eb2eae9232079dc4a3561bc2ad749", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_export_coverage.if.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.if.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.if.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.if.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/if.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 19,\n+              \"covered\": 19,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 4,\n+              \"covered\": 4,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 19,\n+          \"covered\": 19,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 4,\n+          \"covered\": 4,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "abc1afc9ab5c753959b1e69afb6c3b1017bb93ee", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_export_coverage.if_else.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.if_else.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.if_else.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.if_else.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/if_else.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 28,\n+              \"covered\": 19,\n+              \"percent\": 67.85714285714286\n+            },\n+            \"regions\": {\n+              \"count\": 7,\n+              \"covered\": 5,\n+              \"notcovered\": 2,\n+              \"percent\": 71.42857142857143\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 28,\n+          \"covered\": 19,\n+          \"percent\": 67.85714285714286\n+        },\n+        \"regions\": {\n+          \"count\": 7,\n+          \"covered\": 5,\n+          \"notcovered\": 2,\n+          \"percent\": 71.42857142857143\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "366f2afc6d7aef2a95e6e2bb218428b1c447b900", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_export_coverage.inner_items.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.inner_items.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.inner_items.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.inner_items.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/inner_items.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 4,\n+              \"covered\": 4,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 4,\n+              \"covered\": 4,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 26,\n+              \"covered\": 26,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 13,\n+              \"covered\": 13,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 4,\n+          \"covered\": 4,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 4,\n+          \"covered\": 4,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 26,\n+          \"covered\": 26,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 13,\n+          \"covered\": 13,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "3b052ad9106561361622ccda589a5a4564a1156a", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_export_coverage.lazy_boolean.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.lazy_boolean.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.lazy_boolean.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.lazy_boolean.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/lazy_boolean.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 21,\n+              \"covered\": 19,\n+              \"percent\": 90.47619047619048\n+            },\n+            \"regions\": {\n+              \"count\": 16,\n+              \"covered\": 14,\n+              \"notcovered\": 2,\n+              \"percent\": 87.5\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 21,\n+          \"covered\": 19,\n+          \"percent\": 90.47619047619048\n+        },\n+        \"regions\": {\n+          \"count\": 16,\n+          \"covered\": 14,\n+          \"notcovered\": 2,\n+          \"percent\": 87.5\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "0b9344f86f481b7d2555b75c6c2e77dd0b96b180", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_export_coverage.loop_break_value.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.loop_break_value.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.loop_break_value.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.loop_break_value.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/loop_break_value.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 11,\n+              \"covered\": 11,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 11,\n+          \"covered\": 11,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "f2e95e4a836630b6964a50a3ecbaca99ac96f67a", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_export_coverage.question_mark_error_result.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.question_mark_error_result.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.question_mark_error_result.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.question_mark_error_result.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/question_mark_error_result.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 16,\n+              \"covered\": 15,\n+              \"percent\": 93.75\n+            },\n+            \"regions\": {\n+              \"count\": 13,\n+              \"covered\": 12,\n+              \"notcovered\": 1,\n+              \"percent\": 92.3076923076923\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 16,\n+          \"covered\": 15,\n+          \"percent\": 93.75\n+        },\n+        \"regions\": {\n+          \"count\": 13,\n+          \"covered\": 12,\n+          \"notcovered\": 1,\n+          \"percent\": 92.3076923076923\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "5701575189a8c43b5628a5eded20f68fb45dd93c", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_export_coverage.simple_loop.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.simple_loop.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.simple_loop.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.simple_loop.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/simple_loop.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 18,\n+              \"covered\": 18,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 7,\n+              \"covered\": 7,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 18,\n+          \"covered\": 18,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 7,\n+          \"covered\": 7,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "df43cb9640dc616acf0d9cf7cdab738299e1da94", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_export_coverage.simple_match.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.simple_match.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.simple_match.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.simple_match.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/simple_match.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 26,\n+              \"covered\": 26,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 9,\n+              \"covered\": 9,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 26,\n+          \"covered\": 26,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 9,\n+          \"covered\": 9,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "82c80024df6d571800b1fed71fd88047db483ea1", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_export_coverage.various_conditions.json", "status": "renamed", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.various_conditions.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.various_conditions.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.various_conditions.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -3,7 +3,7 @@\n     {\n       \"files\": [\n         {\n-          \"filename\": \"../instrument-coverage/coverage_of_if_else.rs\",\n+          \"filename\": \"../instrument-coverage/various_conditions.rs\",\n           \"summary\": {\n             \"functions\": {\n               \"count\": 1,\n@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 40,\n-              \"covered\": 19,\n-              \"percent\": 47.5\n+              \"count\": 49,\n+              \"covered\": 23,\n+              \"percent\": 46.93877551020408\n             },\n             \"regions\": {\n-              \"count\": 71,\n-              \"covered\": 23,\n-              \"notcovered\": 48,\n-              \"percent\": 32.3943661971831\n+              \"count\": 51,\n+              \"covered\": 19,\n+              \"notcovered\": 32,\n+              \"percent\": 37.254901960784316\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 40,\n-          \"covered\": 19,\n-          \"percent\": 47.5\n+          \"count\": 49,\n+          \"covered\": 23,\n+          \"percent\": 46.93877551020408\n         },\n         \"regions\": {\n-          \"count\": 71,\n-          \"covered\": 23,\n-          \"notcovered\": 48,\n-          \"percent\": 32.3943661971831\n+          \"count\": 51,\n+          \"covered\": 19,\n+          \"notcovered\": 32,\n+          \"percent\": 37.254901960784316\n         }\n       }\n     }", "previous_filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_export_coverage.coverage_of_if_else.json"}, {"sha": "aa4e9a3c5dda7bebbd55471c590a8656e0c5cbbd", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_export_coverage.while_early_return.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.while_early_return.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.while_early_return.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_export_coverage.while_early_return.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/while_early_return.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 18,\n+              \"covered\": 16,\n+              \"percent\": 88.88888888888889\n+            },\n+            \"regions\": {\n+              \"count\": 9,\n+              \"covered\": 7,\n+              \"notcovered\": 2,\n+              \"percent\": 77.77777777777779\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 18,\n+          \"covered\": 16,\n+          \"percent\": 88.88888888888889\n+        },\n+        \"regions\": {\n+          \"count\": 9,\n+          \"covered\": 7,\n+          \"notcovered\": 2,\n+          \"percent\": 77.77777777777779\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "17054490e9b3c10331d007ff4fdfd0478f6de8fc", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_show_coverage.closure.txt", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.closure.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.closure.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.closure.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,94 @@\n+    1|       |#![allow(unused_assignments, unused_variables)]\n+    2|       |\n+    3|      1|fn main() {\n+    4|      1|    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|      1|    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|      1|    // dependent conditions.\n+    7|      1|    let is_true = std::env::args().len() == 1;\n+    8|      1|    let is_false = ! is_true;\n+    9|      1|\n+   10|      1|    let mut some_string = Some(String::from(\"the string content\"));\n+   11|      1|    println!(\n+   12|      1|        \"The string or alt: {}\"\n+   13|      1|        ,\n+   14|      1|        some_string\n+   15|      1|            .\n+   16|      1|            unwrap_or_else\n+   17|      1|        (\n+   18|      1|            ||\n+   19|       |            {\n+   20|      0|                let mut countdown = 0;\n+   21|      0|                if is_false {\n+   22|      0|                    countdown = 10;\n+   23|      0|                }\n+   24|      0|                \"alt string 1\".to_owned()\n+   25|      1|            }\n+   26|      1|        )\n+   27|      1|    );\n+   28|      1|\n+   29|      1|    some_string = Some(String::from(\"the string content\"));\n+   30|      1|    let\n+   31|      1|        a\n+   32|      1|    =\n+   33|      1|        ||\n+   34|       |    {\n+   35|      0|        let mut countdown = 0;\n+   36|      0|        if is_false {\n+   37|      0|            countdown = 10;\n+   38|      0|        }\n+   39|      0|        \"alt string 2\".to_owned()\n+   40|      1|    };\n+   41|      1|    println!(\n+   42|      1|        \"The string or alt: {}\"\n+   43|      1|        ,\n+   44|      1|        some_string\n+   45|      1|            .\n+   46|      1|            unwrap_or_else\n+   47|      1|        (\n+   48|      1|            a\n+   49|      1|        )\n+   50|      1|    );\n+   51|      1|\n+   52|      1|    some_string = None;\n+   53|      1|    println!(\n+   54|      1|        \"The string or alt: {}\"\n+   55|      1|        ,\n+   56|      1|        some_string\n+   57|      1|            .\n+   58|      1|            unwrap_or_else\n+   59|      1|        (\n+   60|      1|            ||\n+   61|       |            {\n+   62|      1|                let mut countdown = 0;\n+   63|      1|                if is_false {\n+   64|      0|                    countdown = 10;\n+   65|      0|                }\n+   66|      1|                \"alt string 3\".to_owned()\n+   67|      1|            }\n+   68|      1|        )\n+   69|      1|    );\n+   70|      1|\n+   71|      1|    some_string = None;\n+   72|      1|    let\n+   73|      1|        a\n+   74|      1|    =\n+   75|      1|        ||\n+   76|       |    {\n+   77|      1|        let mut countdown = 0;\n+   78|      1|        if is_false {\n+   79|      0|            countdown = 10;\n+   80|      0|        }\n+   81|      1|        \"alt string 4\".to_owned()\n+   82|      1|    };\n+   83|      1|    println!(\n+   84|      1|        \"The string or alt: {}\"\n+   85|      1|        ,\n+   86|      1|        some_string\n+   87|      1|            .\n+   88|      1|            unwrap_or_else\n+   89|      1|        (\n+   90|      1|            a\n+   91|      1|        )\n+   92|      1|    );\n+   93|      1|}\n+"}, {"sha": "72aa020ca1691a1941397341855bd334e486c97c", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_show_coverage.drop_trait.txt", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.drop_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.drop_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.drop_trait.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,34 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |// expect-exit-status-1\n+    3|       |\n+    4|       |struct Firework {\n+    5|       |    strength: i32,\n+    6|       |}\n+    7|       |\n+    8|       |impl Drop for Firework {\n+    9|      2|    fn drop(&mut self) {\n+   10|      2|        println!(\"BOOM times {}!!!\", self.strength);\n+   11|      2|    }\n+   12|       |}\n+   13|       |\n+   14|       |fn main() -> Result<(),u8> {\n+   15|      1|    let _firecracker = Firework { strength: 1 };\n+   16|      1|\n+   17|      1|    let _tnt = Firework { strength: 100 };\n+   18|       |\n+   19|      1|    if true {\n+   20|      1|        println!(\"Exiting with error...\");\n+   21|      1|        return Err(1);\n+   22|       |    }\n+   23|       |\n+   24|       |    let _ = Firework { strength: 1000 };\n+   25|       |\n+   26|       |    Ok(())\n+   27|      1|}\n+   28|       |\n+   29|       |// Expected program output:\n+   30|       |//   Exiting with error...\n+   31|       |//   BOOM times 100!!!\n+   32|       |//   BOOM times 1!!!\n+   33|       |//   Error: 1\n+"}, {"sha": "86199d7476302c92f3a65fd5c36f84b2ce044226", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_show_coverage.generics.txt", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.generics.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.generics.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.generics.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,67 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |// expect-exit-status-1\n+    3|       |\n+    4|       |struct Firework<T> where T: Copy + std::fmt::Display {\n+    5|       |    strength: T,\n+    6|       |}\n+    7|       |\n+    8|       |impl<T> Firework<T> where T: Copy + std::fmt::Display {\n+    9|       |    #[inline(always)]\n+   10|      3|    fn set_strength(&mut self, new_strength: T) {\n+   11|      3|        self.strength = new_strength;\n+   12|      3|    }\n+  ------------------\n+  | <generics::Firework<f64>>::set_strength:\n+  |   10|      2|    fn set_strength(&mut self, new_strength: T) {\n+  |   11|      2|        self.strength = new_strength;\n+  |   12|      2|    }\n+  ------------------\n+  | <generics::Firework<i32>>::set_strength:\n+  |   10|      1|    fn set_strength(&mut self, new_strength: T) {\n+  |   11|      1|        self.strength = new_strength;\n+  |   12|      1|    }\n+  ------------------\n+   13|       |}\n+   14|       |\n+   15|       |impl<T> Drop for Firework<T> where T: Copy + std::fmt::Display {\n+   16|       |    #[inline(always)]\n+   17|      2|    fn drop(&mut self) {\n+   18|      2|        println!(\"BOOM times {}!!!\", self.strength);\n+   19|      2|    }\n+  ------------------\n+  | <generics::Firework<i32> as core::ops::drop::Drop>::drop:\n+  |   17|      1|    fn drop(&mut self) {\n+  |   18|      1|        println!(\"BOOM times {}!!!\", self.strength);\n+  |   19|      1|    }\n+  ------------------\n+  | <generics::Firework<f64> as core::ops::drop::Drop>::drop:\n+  |   17|      1|    fn drop(&mut self) {\n+  |   18|      1|        println!(\"BOOM times {}!!!\", self.strength);\n+  |   19|      1|    }\n+  ------------------\n+   20|       |}\n+   21|       |\n+   22|       |fn main() -> Result<(),u8> {\n+   23|      1|    let mut firecracker = Firework { strength: 1 };\n+   24|      1|    firecracker.set_strength(2);\n+   25|      1|\n+   26|      1|    let mut tnt = Firework { strength: 100.1 };\n+   27|      1|    tnt.set_strength(200.1);\n+   28|      1|    tnt.set_strength(300.3);\n+   29|       |\n+   30|      1|    if true {\n+   31|      1|        println!(\"Exiting with error...\");\n+   32|      1|        return Err(1);\n+   33|       |    }\n+   34|       |\n+   35|       |    let _ = Firework { strength: 1000 };\n+   36|       |\n+   37|       |    Ok(())\n+   38|      1|}\n+   39|       |\n+   40|       |// Expected program output:\n+   41|       |//   Exiting with error...\n+   42|       |//   BOOM times 100!!!\n+   43|       |//   BOOM times 1!!!\n+   44|       |//   Error: 1\n+"}, {"sha": "bc2f9b108b2f30e0e55535e2c299e7c69e51bc4c", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_show_coverage.if.txt", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.if.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.if.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.if.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,29 @@\n+    1|       |#![allow(unused_assignments, unused_variables)]\n+    2|       |\n+    3|       |fn main() {\n+    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|       |    // dependent conditions.\n+    7|       |    let\n+    8|      1|    is_true\n+    9|      1|    =\n+   10|      1|        std::env::args().len()\n+   11|      1|    ==\n+   12|      1|        1\n+   13|      1|    ;\n+   14|      1|    let\n+   15|      1|        mut\n+   16|      1|    countdown\n+   17|      1|    =\n+   18|      1|        0\n+   19|       |    ;\n+   20|       |    if\n+   21|      1|        is_true\n+   22|      1|    {\n+   23|      1|        countdown\n+   24|      1|        =\n+   25|      1|            10\n+   26|      1|        ;\n+   27|      1|    }\n+   28|      1|}\n+"}, {"sha": "5f899723e255467c407a637ee65789bda31058b2", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_show_coverage.if_else.txt", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.if_else.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.if_else.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.if_else.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,41 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |\n+    3|       |fn main() {\n+    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|       |    // dependent conditions.\n+    7|      1|    let is_true = std::env::args().len() == 1;\n+    8|      1|\n+    9|      1|    let mut countdown = 0;\n+   10|      1|    if\n+   11|      1|        is_true\n+   12|      1|    {\n+   13|      1|        countdown\n+   14|      1|        =\n+   15|      1|            10\n+   16|      1|        ;\n+   17|      1|    }\n+   18|       |    else // Note coverage region difference without semicolon\n+   19|       |    {\n+   20|      0|        countdown\n+   21|      0|        =\n+   22|      0|            100\n+   23|       |    }\n+   24|       |\n+   25|       |    if\n+   26|      1|        is_true\n+   27|      1|    {\n+   28|      1|        countdown\n+   29|      1|        =\n+   30|      1|            10\n+   31|      1|        ;\n+   32|      1|    }\n+   33|       |    else\n+   34|      0|    {\n+   35|      0|        countdown\n+   36|      0|        =\n+   37|      0|            100\n+   38|      0|        ;\n+   39|      0|    }\n+   40|      1|}\n+"}, {"sha": "364d25b1646f4ed1427db60947e1066e0493dd3d", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_show_coverage.inner_items.txt", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.inner_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.inner_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.inner_items.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,58 @@\n+    1|       |#![allow(unused_assignments, unused_variables)]\n+    2|       |\n+    3|       |fn main() {\n+    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|       |    // dependent conditions.\n+    7|      1|    let is_true = std::env::args().len() == 1;\n+    8|      1|\n+    9|      1|    let mut countdown = 0;\n+   10|      1|    if is_true {\n+   11|      1|        countdown = 10;\n+   12|      1|    }\n+   13|       |\n+   14|       |    mod inner_mod {\n+   15|       |        const INNER_MOD_CONST: u32 = 1000;\n+   16|       |    }\n+   17|       |\n+   18|       |    fn inner_function(a: u32) {\n+   19|      3|        let b = 1;\n+   20|      3|        let c = a + b;\n+   21|      3|        println!(\"c = {}\", c)\n+   22|      3|    }\n+   23|       |\n+   24|       |    struct InnerStruct {\n+   25|       |        inner_struct_field: u32,\n+   26|       |    }\n+   27|       |\n+   28|       |    const INNER_CONST: u32 = 1234;\n+   29|       |\n+   30|       |    trait InnerTrait {\n+   31|       |        fn inner_trait_func(&mut self, incr: u32);\n+   32|       |\n+   33|      1|        fn default_trait_func(&mut self) {\n+   34|      1|            inner_function(INNER_CONST);\n+   35|      1|            self.inner_trait_func(INNER_CONST);\n+   36|      1|        }\n+   37|       |    }\n+   38|       |\n+   39|       |    impl InnerTrait for InnerStruct {\n+   40|       |        fn inner_trait_func(&mut self, incr: u32) {\n+   41|      1|            self.inner_struct_field += incr;\n+   42|      1|            inner_function(self.inner_struct_field);\n+   43|      1|        }\n+   44|       |    }\n+   45|       |\n+   46|       |    type InnerType = String;\n+   47|       |\n+   48|      1|    if is_true {\n+   49|      1|        inner_function(countdown);\n+   50|      1|    }\n+   51|       |\n+   52|      1|    let mut val = InnerStruct {\n+   53|      1|        inner_struct_field: 101,\n+   54|      1|    };\n+   55|      1|\n+   56|      1|    val.default_trait_func();\n+   57|      1|}\n+"}, {"sha": "ded4369751587726f14ee03554febb6d1158fbcd", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_show_coverage.lazy_boolean.txt", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.lazy_boolean.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.lazy_boolean.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.lazy_boolean.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,44 @@\n+    1|       |#![allow(unused_assignments, unused_variables)]\n+    2|       |\n+    3|       |fn main() {\n+    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|       |    // dependent conditions.\n+    7|      1|    let is_true = std::env::args().len() == 1;\n+    8|      1|\n+    9|      1|    let (mut a, mut b, mut c) = (0, 0, 0);\n+   10|      1|    if is_true {\n+   11|      1|        a = 1;\n+   12|      1|        b = 10;\n+   13|      1|        c = 100;\n+   14|      1|    }\n+   15|       |    let\n+   16|      1|        somebool\n+   17|       |        =\n+   18|      1|            a < b\n+   19|       |        ||\n+   20|      0|            b < c\n+   21|       |    ;\n+   22|       |    let\n+   23|      1|        somebool\n+   24|       |        =\n+   25|      1|            b < a\n+   26|       |        ||\n+   27|      1|            b < c\n+   28|       |    ;\n+   29|       |    let\n+   30|      1|        somebool\n+   31|       |        =\n+   32|      1|            a < b\n+   33|       |        &&\n+   34|      1|            b < c\n+   35|       |    ;\n+   36|       |    let\n+   37|      1|        somebool\n+   38|       |        =\n+   39|      1|            b < a\n+   40|       |        &&\n+   41|      0|            b < c\n+   42|       |    ;\n+   43|      1|}\n+"}, {"sha": "b0d668c6d76da756a8910bc94c17c9276b01abdc", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_show_coverage.loop_break_value.txt", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.loop_break_value.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.loop_break_value.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.loop_break_value.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,14 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |\n+    3|      1|fn main() {\n+    4|      1|    let result\n+    5|      1|        =\n+    6|      1|            loop\n+    7|      1|        {\n+    8|      1|            break\n+    9|      1|            10\n+   10|      1|            ;\n+   11|      1|        }\n+   12|      1|    ;\n+   13|      1|}\n+"}, {"sha": "ae288d7d7a000cc8b83cb37c9900e1d4dc5894cc", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_show_coverage.question_mark_error_result.txt", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.question_mark_error_result.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.question_mark_error_result.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.question_mark_error_result.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,36 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |// expect-exit-status-1\n+    3|       |\n+    4|       |fn call(return_error: bool) -> Result<(),()> {\n+    5|      6|    if return_error {\n+    6|      1|        Err(())\n+    7|       |    } else {\n+    8|      5|        Ok(())\n+    9|       |    }\n+   10|      6|}\n+   11|       |\n+   12|       |fn main() -> Result<(),()> {\n+   13|      1|    let mut\n+   14|      1|        countdown = 10\n+   15|       |    ;\n+   16|      6|    for\n+   17|      6|        _\n+   18|       |    in\n+   19|      1|        0..10\n+   20|       |    {\n+   21|      6|        countdown\n+   22|      6|            -= 1\n+   23|       |        ;\n+   24|       |        if\n+   25|      6|            countdown < 5\n+   26|       |        {\n+   27|      1|            call(/*return_error=*/ true)?;\n+   28|       |        }\n+   29|       |        else\n+   30|       |        {\n+   31|      5|            call(/*return_error=*/ false)?;\n+   32|       |        }\n+   33|       |    }\n+   34|      0|    Ok(())\n+   35|      1|}\n+"}, {"sha": "f1acb7c545940e2a6ea9eb90d7e4f64a562372eb", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_show_coverage.simple_loop.txt", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.simple_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.simple_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.simple_loop.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,36 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |\n+    3|       |fn main() {\n+    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|       |    // dependent conditions.\n+    7|      1|    let is_true = std::env::args().len() == 1;\n+    8|      1|\n+    9|      1|    let mut countdown = 0;\n+   10|       |\n+   11|       |    if\n+   12|      1|        is_true\n+   13|      1|    {\n+   14|      1|        countdown\n+   15|      1|        =\n+   16|      1|            10\n+   17|      1|        ;\n+   18|      1|    }\n+   19|       |\n+   20|       |    loop\n+   21|       |    {\n+   22|       |        if\n+   23|     11|            countdown\n+   24|     11|                ==\n+   25|     11|            0\n+   26|       |        {\n+   27|      1|            break\n+   28|       |            ;\n+   29|       |        }\n+   30|     10|        countdown\n+   31|     10|        -=\n+   32|     10|        1\n+   33|       |        ;\n+   34|       |    }\n+   35|      1|}\n+"}, {"sha": "e42f22cd047fccbd61ec731d57c90a529d2df0eb", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_show_coverage.simple_match.txt", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.simple_match.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.simple_match.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.simple_match.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,44 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |\n+    3|       |fn main() {\n+    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|       |    // dependent conditions.\n+    7|      1|    let is_true = std::env::args().len() == 1;\n+    8|      1|\n+    9|      1|    let mut countdown = 1;\n+   10|      1|    if is_true {\n+   11|      1|        countdown = 0;\n+   12|      1|    }\n+   13|       |\n+   14|      3|    for\n+   15|      3|        _\n+   16|       |    in\n+   17|      1|        0..2\n+   18|       |    {\n+   19|       |        let z\n+   20|       |        ;\n+   21|       |        match\n+   22|      2|            countdown\n+   23|      2|        {\n+   24|      2|            x\n+   25|      2|            if\n+   26|      2|                x\n+   27|      2|                    <\n+   28|      2|                1\n+   29|       |            =>\n+   30|      1|            {\n+   31|      1|                z = countdown\n+   32|      1|                ;\n+   33|      1|                let y = countdown\n+   34|      1|                ;\n+   35|      1|                countdown = 10\n+   36|      1|                ;\n+   37|      1|            }\n+   38|       |            _\n+   39|       |            =>\n+   40|      1|            {}\n+   41|       |        }\n+   42|       |    }\n+   43|      1|}\n+"}, {"sha": "173ff4aa4c48154b7c32ca11ed922d6887b0caeb", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_show_coverage.various_conditions.txt", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.various_conditions.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.various_conditions.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.various_conditions.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,69 @@\n+    1|       |#![allow(unused_assignments, unused_variables)]\n+    2|       |\n+    3|       |fn main() {\n+    4|      1|    let mut countdown = 0;\n+    5|      1|    if true {\n+    6|      1|        countdown = 10;\n+    7|      1|    }\n+    8|       |\n+    9|       |    const B: u32 = 100;\n+   10|      1|    let x = if countdown > 7 {\n+   11|      1|        countdown -= 4;\n+   12|      1|        B\n+   13|      0|    } else if countdown > 2 {\n+   14|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n+   15|      0|            countdown = 0;\n+   16|      0|        }\n+   17|      0|        countdown -= 5;\n+   18|      0|        countdown\n+   19|       |    } else {\n+   20|      0|        return;\n+   21|       |    };\n+   22|       |\n+   23|      1|    let mut countdown = 0;\n+   24|      1|    if true {\n+   25|      1|        countdown = 10;\n+   26|      1|    }\n+   27|       |\n+   28|      1|    if countdown > 7 {\n+   29|      1|        countdown -= 4;\n+   30|      0|    } else if countdown > 2 {\n+   31|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n+   32|      0|            countdown = 0;\n+   33|      0|        }\n+   34|      0|        countdown -= 5;\n+   35|       |    } else {\n+   36|      0|        return;\n+   37|       |    }\n+   38|       |\n+   39|      1|    let mut countdown = 0;\n+   40|      1|    if true {\n+   41|      1|        countdown = 1;\n+   42|      1|    }\n+   43|       |\n+   44|      1|    let z = if countdown > 7 {\n+                      ^0\n+   45|      0|        countdown -= 4;\n+   46|      1|    } else if countdown > 2 {\n+   47|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n+   48|      0|            countdown = 0;\n+   49|      0|        }\n+   50|      0|        countdown -= 5;\n+   51|       |    } else {\n+   52|      1|        let should_be_reachable = countdown;\n+   53|      1|        println!(\"reached\");\n+   54|      1|        return;\n+   55|       |    };\n+   56|       |\n+   57|      0|    let w = if countdown > 7 {\n+   58|      0|        countdown -= 4;\n+   59|      0|    } else if countdown > 2 {\n+   60|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n+   61|      0|            countdown = 0;\n+   62|      0|        }\n+   63|      0|        countdown -= 5;\n+   64|       |    } else {\n+   65|      0|        return;\n+   66|       |    };\n+   67|      1|}\n+"}, {"sha": "7dce94f25f304ae24082cdbeb45dac1678a63a10", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/expected_show_coverage.while_early_return.txt", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.while_early_return.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.while_early_return.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Fexpected_show_coverage.while_early_return.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,48 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |// expect-exit-status-1\n+    3|       |\n+    4|       |fn main() -> Result<(),u8> {\n+    5|      1|    let mut countdown = 10;\n+    6|      7|    while\n+    7|      7|        countdown\n+    8|      7|            >\n+    9|      7|        0\n+   10|       |    {\n+   11|       |        if\n+   12|      7|            countdown\n+   13|      7|                <\n+   14|      7|            5\n+   15|       |        {\n+   16|       |            return\n+   17|       |                if\n+   18|      1|                    countdown\n+   19|      1|                        >\n+   20|      1|                    8\n+   21|       |                {\n+   22|      0|                    Ok(())\n+   23|       |                }\n+   24|       |                else\n+   25|       |                {\n+   26|      1|                    Err(1)\n+   27|       |                }\n+   28|       |                ;\n+   29|       |        }\n+   30|      6|        countdown\n+   31|      6|            -=\n+   32|      6|        1\n+   33|       |        ;\n+   34|       |    }\n+   35|      0|    Ok(())\n+   36|      1|}\n+   37|       |\n+   38|       |// ISSUE(77553): Originally, this test had `Err(1)` on line 22 (instead of `Ok(())`) and\n+   39|       |// `std::process::exit(2)` on line 26 (instead of `Err(1)`); and this worked as expected on Linux\n+   40|       |// and MacOS. But on Windows (MSVC, at least), the call to `std::process::exit()` exits the program\n+   41|       |// without saving the InstrProf coverage counters. The use of `std::process:exit()` is not critical\n+   42|       |// to the coverage test for early returns, but this is a limitation that should be fixed.\n+   43|       |//\n+   44|       |// FIXME(richkadel): Consider creating a new tests for coverage when calling `std::process::exit()`,\n+   45|       |// move the `ISSUE` comment to that test, and implement a new test directive that supports skipping\n+   46|       |// coverage tests when targeting specific platforms (at least skipping Windows, or MSVC if the\n+   47|       |// problem exists on MSVC only).\n+"}, {"sha": "87ce3b4048f2a426bb520ce1679c5dc53f4f9ae2", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-base/typical_show_coverage.coverage_of_if_else.txt", "status": "removed", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/d890e64dff3fd2c28635c60cc9315648dd46c8f7/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Ftypical_show_coverage.coverage_of_if_else.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d890e64dff3fd2c28635c60cc9315648dd46c8f7/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Ftypical_show_coverage.coverage_of_if_else.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-base%2Ftypical_show_coverage.coverage_of_if_else.txt?ref=d890e64dff3fd2c28635c60cc9315648dd46c8f7", "patch": "@@ -1,64 +0,0 @@\n-    1|       |#![allow(unused_assignments)]\n-    2|       |\n-    3|       |fn main() {\n-    4|       |    let mut countdown = 0;\n-    5|      2|    if true {\n-                     ^1\n-    6|      2|        countdown = 10;\n-    7|      2|    }\n-    8|       |\n-    9|      2|    if countdown > 7 {\n-                     ^1\n-   10|      2|        countdown -= 4;\n-                      ^1\n-   11|      2|    } else if countdown > 2 {\n-                         ^0 ^0\n-   12|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   13|      0|            countdown = 0;\n-   14|      0|        }\n-   15|      0|        countdown -= 5;\n-   16|      0|    } else {\n-   17|      0|        return;\n-   18|      0|    }\n-   19|       |\n-   20|       |    let mut countdown = 0;\n-   21|      2|    if true {\n-                     ^1\n-   22|      2|        countdown = 10;\n-   23|      2|    }\n-   24|       |\n-   25|      2|    if countdown > 7 {\n-                     ^1\n-   26|      2|        countdown -= 4;\n-                      ^1\n-   27|      2|    } else if countdown > 2 {\n-                         ^0 ^0\n-   28|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   29|      0|            countdown = 0;\n-   30|      0|        }\n-   31|      0|        countdown -= 5;\n-   32|      0|    } else {\n-   33|      0|        return;\n-   34|      0|    }\n-   35|       |\n-   36|       |    let mut countdown = 0;\n-   37|      2|    if true {\n-                     ^1\n-   38|      2|        countdown = 10;\n-   39|      2|    }\n-   40|       |\n-   41|      2|    if countdown > 7 {\n-                     ^1\n-   42|      2|        countdown -= 4;\n-                      ^1\n-   43|      2|    } else if countdown > 2 {\n-                         ^0 ^0\n-   44|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   45|      0|            countdown = 0;\n-   46|      0|        }\n-   47|      0|        countdown -= 5;\n-   48|      0|    } else {\n-   49|      0|        return;\n-   50|      0|    }\n-   51|      1|}\n-"}, {"sha": "9dbd0c4e5d6ad7fed39fb5afc65cb505ad57cea7", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_export_coverage.closure.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.closure.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.closure.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.closure.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/closure.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 5,\n+              \"covered\": 3,\n+              \"percent\": 60\n+            },\n+            \"instantiations\": {\n+              \"count\": 5,\n+              \"covered\": 3,\n+              \"percent\": 60\n+            },\n+            \"lines\": {\n+              \"count\": 91,\n+              \"covered\": 75,\n+              \"percent\": 82.41758241758241\n+            },\n+            \"regions\": {\n+              \"count\": 21,\n+              \"covered\": 11,\n+              \"notcovered\": 10,\n+              \"percent\": 52.38095238095239\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 5,\n+          \"covered\": 3,\n+          \"percent\": 60\n+        },\n+        \"instantiations\": {\n+          \"count\": 5,\n+          \"covered\": 3,\n+          \"percent\": 60\n+        },\n+        \"lines\": {\n+          \"count\": 91,\n+          \"covered\": 75,\n+          \"percent\": 82.41758241758241\n+        },\n+        \"regions\": {\n+          \"count\": 21,\n+          \"covered\": 11,\n+          \"notcovered\": 10,\n+          \"percent\": 52.38095238095239\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "cdfdca990fa48a71022c76da4a13898807c04c3a", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_export_coverage.drop_trait.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.drop_trait.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.drop_trait.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.drop_trait.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/drop_trait.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 10,\n+              \"covered\": 10,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 5,\n+              \"covered\": 5,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 10,\n+          \"covered\": 10,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 5,\n+          \"covered\": 5,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "ae405afedc1592fd7cec462d85b7b6e758030af6", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_export_coverage.generics.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.generics.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.generics.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.generics.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/generics.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 3,\n+              \"covered\": 3,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 5,\n+              \"covered\": 5,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 16,\n+              \"covered\": 16,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 6,\n+              \"covered\": 6,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 3,\n+          \"covered\": 3,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 5,\n+          \"covered\": 5,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 16,\n+          \"covered\": 16,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 6,\n+          \"covered\": 6,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "5231593d8a0eb2eae9232079dc4a3561bc2ad749", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_export_coverage.if.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.if.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.if.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.if.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/if.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 19,\n+              \"covered\": 19,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 4,\n+              \"covered\": 4,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 19,\n+          \"covered\": 19,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 4,\n+          \"covered\": 4,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "abc1afc9ab5c753959b1e69afb6c3b1017bb93ee", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_export_coverage.if_else.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.if_else.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.if_else.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.if_else.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/if_else.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 28,\n+              \"covered\": 19,\n+              \"percent\": 67.85714285714286\n+            },\n+            \"regions\": {\n+              \"count\": 7,\n+              \"covered\": 5,\n+              \"notcovered\": 2,\n+              \"percent\": 71.42857142857143\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 28,\n+          \"covered\": 19,\n+          \"percent\": 67.85714285714286\n+        },\n+        \"regions\": {\n+          \"count\": 7,\n+          \"covered\": 5,\n+          \"notcovered\": 2,\n+          \"percent\": 71.42857142857143\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "366f2afc6d7aef2a95e6e2bb218428b1c447b900", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_export_coverage.inner_items.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.inner_items.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.inner_items.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.inner_items.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/inner_items.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 4,\n+              \"covered\": 4,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 4,\n+              \"covered\": 4,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 26,\n+              \"covered\": 26,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 13,\n+              \"covered\": 13,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 4,\n+          \"covered\": 4,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 4,\n+          \"covered\": 4,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 26,\n+          \"covered\": 26,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 13,\n+          \"covered\": 13,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "3b052ad9106561361622ccda589a5a4564a1156a", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_export_coverage.lazy_boolean.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.lazy_boolean.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.lazy_boolean.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.lazy_boolean.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/lazy_boolean.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 21,\n+              \"covered\": 19,\n+              \"percent\": 90.47619047619048\n+            },\n+            \"regions\": {\n+              \"count\": 16,\n+              \"covered\": 14,\n+              \"notcovered\": 2,\n+              \"percent\": 87.5\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 21,\n+          \"covered\": 19,\n+          \"percent\": 90.47619047619048\n+        },\n+        \"regions\": {\n+          \"count\": 16,\n+          \"covered\": 14,\n+          \"notcovered\": 2,\n+          \"percent\": 87.5\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "0b9344f86f481b7d2555b75c6c2e77dd0b96b180", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_export_coverage.loop_break_value.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.loop_break_value.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.loop_break_value.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.loop_break_value.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/loop_break_value.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 11,\n+              \"covered\": 11,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 11,\n+          \"covered\": 11,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "f2e95e4a836630b6964a50a3ecbaca99ac96f67a", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_export_coverage.question_mark_error_result.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.question_mark_error_result.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.question_mark_error_result.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.question_mark_error_result.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/question_mark_error_result.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 16,\n+              \"covered\": 15,\n+              \"percent\": 93.75\n+            },\n+            \"regions\": {\n+              \"count\": 13,\n+              \"covered\": 12,\n+              \"notcovered\": 1,\n+              \"percent\": 92.3076923076923\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 16,\n+          \"covered\": 15,\n+          \"percent\": 93.75\n+        },\n+        \"regions\": {\n+          \"count\": 13,\n+          \"covered\": 12,\n+          \"notcovered\": 1,\n+          \"percent\": 92.3076923076923\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "5701575189a8c43b5628a5eded20f68fb45dd93c", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_export_coverage.simple_loop.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.simple_loop.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.simple_loop.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.simple_loop.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/simple_loop.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 18,\n+              \"covered\": 18,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 7,\n+              \"covered\": 7,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 18,\n+          \"covered\": 18,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 7,\n+          \"covered\": 7,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "df43cb9640dc616acf0d9cf7cdab738299e1da94", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_export_coverage.simple_match.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.simple_match.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.simple_match.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.simple_match.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/simple_match.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 26,\n+              \"covered\": 26,\n+              \"percent\": 100\n+            },\n+            \"regions\": {\n+              \"count\": 9,\n+              \"covered\": 9,\n+              \"notcovered\": 0,\n+              \"percent\": 100\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 26,\n+          \"covered\": 26,\n+          \"percent\": 100\n+        },\n+        \"regions\": {\n+          \"count\": 9,\n+          \"covered\": 9,\n+          \"notcovered\": 0,\n+          \"percent\": 100\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "82c80024df6d571800b1fed71fd88047db483ea1", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_export_coverage.various_conditions.json", "status": "renamed", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.various_conditions.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.various_conditions.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.various_conditions.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -3,7 +3,7 @@\n     {\n       \"files\": [\n         {\n-          \"filename\": \"../instrument-coverage/coverage_of_if_else.rs\",\n+          \"filename\": \"../instrument-coverage/various_conditions.rs\",\n           \"summary\": {\n             \"functions\": {\n               \"count\": 1,\n@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 40,\n-              \"covered\": 19,\n-              \"percent\": 47.5\n+              \"count\": 49,\n+              \"covered\": 23,\n+              \"percent\": 46.93877551020408\n             },\n             \"regions\": {\n-              \"count\": 71,\n-              \"covered\": 23,\n-              \"notcovered\": 48,\n-              \"percent\": 32.3943661971831\n+              \"count\": 51,\n+              \"covered\": 19,\n+              \"notcovered\": 32,\n+              \"percent\": 37.254901960784316\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 40,\n-          \"covered\": 19,\n-          \"percent\": 47.5\n+          \"count\": 49,\n+          \"covered\": 23,\n+          \"percent\": 46.93877551020408\n         },\n         \"regions\": {\n-          \"count\": 71,\n-          \"covered\": 23,\n-          \"notcovered\": 48,\n-          \"percent\": 32.3943661971831\n+          \"count\": 51,\n+          \"covered\": 19,\n+          \"notcovered\": 32,\n+          \"percent\": 37.254901960784316\n         }\n       }\n     }", "previous_filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_export_coverage.coverage_of_if_else.json"}, {"sha": "aa4e9a3c5dda7bebbd55471c590a8656e0c5cbbd", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_export_coverage.while_early_return.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.while_early_return.json", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.while_early_return.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_export_coverage.while_early_return.json?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../instrument-coverage/while_early_return.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 1,\n+              \"covered\": 1,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 18,\n+              \"covered\": 16,\n+              \"percent\": 88.88888888888889\n+            },\n+            \"regions\": {\n+              \"count\": 9,\n+              \"covered\": 7,\n+              \"notcovered\": 2,\n+              \"percent\": 77.77777777777779\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 1,\n+          \"covered\": 1,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 18,\n+          \"covered\": 16,\n+          \"percent\": 88.88888888888889\n+        },\n+        \"regions\": {\n+          \"count\": 9,\n+          \"covered\": 7,\n+          \"notcovered\": 2,\n+          \"percent\": 77.77777777777779\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "17054490e9b3c10331d007ff4fdfd0478f6de8fc", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_show_coverage.closure.txt", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.closure.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.closure.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.closure.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,94 @@\n+    1|       |#![allow(unused_assignments, unused_variables)]\n+    2|       |\n+    3|      1|fn main() {\n+    4|      1|    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|      1|    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|      1|    // dependent conditions.\n+    7|      1|    let is_true = std::env::args().len() == 1;\n+    8|      1|    let is_false = ! is_true;\n+    9|      1|\n+   10|      1|    let mut some_string = Some(String::from(\"the string content\"));\n+   11|      1|    println!(\n+   12|      1|        \"The string or alt: {}\"\n+   13|      1|        ,\n+   14|      1|        some_string\n+   15|      1|            .\n+   16|      1|            unwrap_or_else\n+   17|      1|        (\n+   18|      1|            ||\n+   19|       |            {\n+   20|      0|                let mut countdown = 0;\n+   21|      0|                if is_false {\n+   22|      0|                    countdown = 10;\n+   23|      0|                }\n+   24|      0|                \"alt string 1\".to_owned()\n+   25|      1|            }\n+   26|      1|        )\n+   27|      1|    );\n+   28|      1|\n+   29|      1|    some_string = Some(String::from(\"the string content\"));\n+   30|      1|    let\n+   31|      1|        a\n+   32|      1|    =\n+   33|      1|        ||\n+   34|       |    {\n+   35|      0|        let mut countdown = 0;\n+   36|      0|        if is_false {\n+   37|      0|            countdown = 10;\n+   38|      0|        }\n+   39|      0|        \"alt string 2\".to_owned()\n+   40|      1|    };\n+   41|      1|    println!(\n+   42|      1|        \"The string or alt: {}\"\n+   43|      1|        ,\n+   44|      1|        some_string\n+   45|      1|            .\n+   46|      1|            unwrap_or_else\n+   47|      1|        (\n+   48|      1|            a\n+   49|      1|        )\n+   50|      1|    );\n+   51|      1|\n+   52|      1|    some_string = None;\n+   53|      1|    println!(\n+   54|      1|        \"The string or alt: {}\"\n+   55|      1|        ,\n+   56|      1|        some_string\n+   57|      1|            .\n+   58|      1|            unwrap_or_else\n+   59|      1|        (\n+   60|      1|            ||\n+   61|       |            {\n+   62|      1|                let mut countdown = 0;\n+   63|      1|                if is_false {\n+   64|      0|                    countdown = 10;\n+   65|      0|                }\n+   66|      1|                \"alt string 3\".to_owned()\n+   67|      1|            }\n+   68|      1|        )\n+   69|      1|    );\n+   70|      1|\n+   71|      1|    some_string = None;\n+   72|      1|    let\n+   73|      1|        a\n+   74|      1|    =\n+   75|      1|        ||\n+   76|       |    {\n+   77|      1|        let mut countdown = 0;\n+   78|      1|        if is_false {\n+   79|      0|            countdown = 10;\n+   80|      0|        }\n+   81|      1|        \"alt string 4\".to_owned()\n+   82|      1|    };\n+   83|      1|    println!(\n+   84|      1|        \"The string or alt: {}\"\n+   85|      1|        ,\n+   86|      1|        some_string\n+   87|      1|            .\n+   88|      1|            unwrap_or_else\n+   89|      1|        (\n+   90|      1|            a\n+   91|      1|        )\n+   92|      1|    );\n+   93|      1|}\n+"}, {"sha": "72aa020ca1691a1941397341855bd334e486c97c", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_show_coverage.drop_trait.txt", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.drop_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.drop_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.drop_trait.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,34 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |// expect-exit-status-1\n+    3|       |\n+    4|       |struct Firework {\n+    5|       |    strength: i32,\n+    6|       |}\n+    7|       |\n+    8|       |impl Drop for Firework {\n+    9|      2|    fn drop(&mut self) {\n+   10|      2|        println!(\"BOOM times {}!!!\", self.strength);\n+   11|      2|    }\n+   12|       |}\n+   13|       |\n+   14|       |fn main() -> Result<(),u8> {\n+   15|      1|    let _firecracker = Firework { strength: 1 };\n+   16|      1|\n+   17|      1|    let _tnt = Firework { strength: 100 };\n+   18|       |\n+   19|      1|    if true {\n+   20|      1|        println!(\"Exiting with error...\");\n+   21|      1|        return Err(1);\n+   22|       |    }\n+   23|       |\n+   24|       |    let _ = Firework { strength: 1000 };\n+   25|       |\n+   26|       |    Ok(())\n+   27|      1|}\n+   28|       |\n+   29|       |// Expected program output:\n+   30|       |//   Exiting with error...\n+   31|       |//   BOOM times 100!!!\n+   32|       |//   BOOM times 1!!!\n+   33|       |//   Error: 1\n+"}, {"sha": "86199d7476302c92f3a65fd5c36f84b2ce044226", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_show_coverage.generics.txt", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.generics.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.generics.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.generics.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,67 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |// expect-exit-status-1\n+    3|       |\n+    4|       |struct Firework<T> where T: Copy + std::fmt::Display {\n+    5|       |    strength: T,\n+    6|       |}\n+    7|       |\n+    8|       |impl<T> Firework<T> where T: Copy + std::fmt::Display {\n+    9|       |    #[inline(always)]\n+   10|      3|    fn set_strength(&mut self, new_strength: T) {\n+   11|      3|        self.strength = new_strength;\n+   12|      3|    }\n+  ------------------\n+  | <generics::Firework<f64>>::set_strength:\n+  |   10|      2|    fn set_strength(&mut self, new_strength: T) {\n+  |   11|      2|        self.strength = new_strength;\n+  |   12|      2|    }\n+  ------------------\n+  | <generics::Firework<i32>>::set_strength:\n+  |   10|      1|    fn set_strength(&mut self, new_strength: T) {\n+  |   11|      1|        self.strength = new_strength;\n+  |   12|      1|    }\n+  ------------------\n+   13|       |}\n+   14|       |\n+   15|       |impl<T> Drop for Firework<T> where T: Copy + std::fmt::Display {\n+   16|       |    #[inline(always)]\n+   17|      2|    fn drop(&mut self) {\n+   18|      2|        println!(\"BOOM times {}!!!\", self.strength);\n+   19|      2|    }\n+  ------------------\n+  | <generics::Firework<i32> as core::ops::drop::Drop>::drop:\n+  |   17|      1|    fn drop(&mut self) {\n+  |   18|      1|        println!(\"BOOM times {}!!!\", self.strength);\n+  |   19|      1|    }\n+  ------------------\n+  | <generics::Firework<f64> as core::ops::drop::Drop>::drop:\n+  |   17|      1|    fn drop(&mut self) {\n+  |   18|      1|        println!(\"BOOM times {}!!!\", self.strength);\n+  |   19|      1|    }\n+  ------------------\n+   20|       |}\n+   21|       |\n+   22|       |fn main() -> Result<(),u8> {\n+   23|      1|    let mut firecracker = Firework { strength: 1 };\n+   24|      1|    firecracker.set_strength(2);\n+   25|      1|\n+   26|      1|    let mut tnt = Firework { strength: 100.1 };\n+   27|      1|    tnt.set_strength(200.1);\n+   28|      1|    tnt.set_strength(300.3);\n+   29|       |\n+   30|      1|    if true {\n+   31|      1|        println!(\"Exiting with error...\");\n+   32|      1|        return Err(1);\n+   33|       |    }\n+   34|       |\n+   35|       |    let _ = Firework { strength: 1000 };\n+   36|       |\n+   37|       |    Ok(())\n+   38|      1|}\n+   39|       |\n+   40|       |// Expected program output:\n+   41|       |//   Exiting with error...\n+   42|       |//   BOOM times 100!!!\n+   43|       |//   BOOM times 1!!!\n+   44|       |//   Error: 1\n+"}, {"sha": "bc2f9b108b2f30e0e55535e2c299e7c69e51bc4c", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_show_coverage.if.txt", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.if.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.if.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.if.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,29 @@\n+    1|       |#![allow(unused_assignments, unused_variables)]\n+    2|       |\n+    3|       |fn main() {\n+    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|       |    // dependent conditions.\n+    7|       |    let\n+    8|      1|    is_true\n+    9|      1|    =\n+   10|      1|        std::env::args().len()\n+   11|      1|    ==\n+   12|      1|        1\n+   13|      1|    ;\n+   14|      1|    let\n+   15|      1|        mut\n+   16|      1|    countdown\n+   17|      1|    =\n+   18|      1|        0\n+   19|       |    ;\n+   20|       |    if\n+   21|      1|        is_true\n+   22|      1|    {\n+   23|      1|        countdown\n+   24|      1|        =\n+   25|      1|            10\n+   26|      1|        ;\n+   27|      1|    }\n+   28|      1|}\n+"}, {"sha": "5f899723e255467c407a637ee65789bda31058b2", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_show_coverage.if_else.txt", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.if_else.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.if_else.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.if_else.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,41 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |\n+    3|       |fn main() {\n+    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|       |    // dependent conditions.\n+    7|      1|    let is_true = std::env::args().len() == 1;\n+    8|      1|\n+    9|      1|    let mut countdown = 0;\n+   10|      1|    if\n+   11|      1|        is_true\n+   12|      1|    {\n+   13|      1|        countdown\n+   14|      1|        =\n+   15|      1|            10\n+   16|      1|        ;\n+   17|      1|    }\n+   18|       |    else // Note coverage region difference without semicolon\n+   19|       |    {\n+   20|      0|        countdown\n+   21|      0|        =\n+   22|      0|            100\n+   23|       |    }\n+   24|       |\n+   25|       |    if\n+   26|      1|        is_true\n+   27|      1|    {\n+   28|      1|        countdown\n+   29|      1|        =\n+   30|      1|            10\n+   31|      1|        ;\n+   32|      1|    }\n+   33|       |    else\n+   34|      0|    {\n+   35|      0|        countdown\n+   36|      0|        =\n+   37|      0|            100\n+   38|      0|        ;\n+   39|      0|    }\n+   40|      1|}\n+"}, {"sha": "364d25b1646f4ed1427db60947e1066e0493dd3d", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_show_coverage.inner_items.txt", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.inner_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.inner_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.inner_items.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,58 @@\n+    1|       |#![allow(unused_assignments, unused_variables)]\n+    2|       |\n+    3|       |fn main() {\n+    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|       |    // dependent conditions.\n+    7|      1|    let is_true = std::env::args().len() == 1;\n+    8|      1|\n+    9|      1|    let mut countdown = 0;\n+   10|      1|    if is_true {\n+   11|      1|        countdown = 10;\n+   12|      1|    }\n+   13|       |\n+   14|       |    mod inner_mod {\n+   15|       |        const INNER_MOD_CONST: u32 = 1000;\n+   16|       |    }\n+   17|       |\n+   18|       |    fn inner_function(a: u32) {\n+   19|      3|        let b = 1;\n+   20|      3|        let c = a + b;\n+   21|      3|        println!(\"c = {}\", c)\n+   22|      3|    }\n+   23|       |\n+   24|       |    struct InnerStruct {\n+   25|       |        inner_struct_field: u32,\n+   26|       |    }\n+   27|       |\n+   28|       |    const INNER_CONST: u32 = 1234;\n+   29|       |\n+   30|       |    trait InnerTrait {\n+   31|       |        fn inner_trait_func(&mut self, incr: u32);\n+   32|       |\n+   33|      1|        fn default_trait_func(&mut self) {\n+   34|      1|            inner_function(INNER_CONST);\n+   35|      1|            self.inner_trait_func(INNER_CONST);\n+   36|      1|        }\n+   37|       |    }\n+   38|       |\n+   39|       |    impl InnerTrait for InnerStruct {\n+   40|       |        fn inner_trait_func(&mut self, incr: u32) {\n+   41|      1|            self.inner_struct_field += incr;\n+   42|      1|            inner_function(self.inner_struct_field);\n+   43|      1|        }\n+   44|       |    }\n+   45|       |\n+   46|       |    type InnerType = String;\n+   47|       |\n+   48|      1|    if is_true {\n+   49|      1|        inner_function(countdown);\n+   50|      1|    }\n+   51|       |\n+   52|      1|    let mut val = InnerStruct {\n+   53|      1|        inner_struct_field: 101,\n+   54|      1|    };\n+   55|      1|\n+   56|      1|    val.default_trait_func();\n+   57|      1|}\n+"}, {"sha": "ded4369751587726f14ee03554febb6d1158fbcd", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_show_coverage.lazy_boolean.txt", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.lazy_boolean.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.lazy_boolean.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.lazy_boolean.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,44 @@\n+    1|       |#![allow(unused_assignments, unused_variables)]\n+    2|       |\n+    3|       |fn main() {\n+    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|       |    // dependent conditions.\n+    7|      1|    let is_true = std::env::args().len() == 1;\n+    8|      1|\n+    9|      1|    let (mut a, mut b, mut c) = (0, 0, 0);\n+   10|      1|    if is_true {\n+   11|      1|        a = 1;\n+   12|      1|        b = 10;\n+   13|      1|        c = 100;\n+   14|      1|    }\n+   15|       |    let\n+   16|      1|        somebool\n+   17|       |        =\n+   18|      1|            a < b\n+   19|       |        ||\n+   20|      0|            b < c\n+   21|       |    ;\n+   22|       |    let\n+   23|      1|        somebool\n+   24|       |        =\n+   25|      1|            b < a\n+   26|       |        ||\n+   27|      1|            b < c\n+   28|       |    ;\n+   29|       |    let\n+   30|      1|        somebool\n+   31|       |        =\n+   32|      1|            a < b\n+   33|       |        &&\n+   34|      1|            b < c\n+   35|       |    ;\n+   36|       |    let\n+   37|      1|        somebool\n+   38|       |        =\n+   39|      1|            b < a\n+   40|       |        &&\n+   41|      0|            b < c\n+   42|       |    ;\n+   43|      1|}\n+"}, {"sha": "b0d668c6d76da756a8910bc94c17c9276b01abdc", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_show_coverage.loop_break_value.txt", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.loop_break_value.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.loop_break_value.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.loop_break_value.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,14 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |\n+    3|      1|fn main() {\n+    4|      1|    let result\n+    5|      1|        =\n+    6|      1|            loop\n+    7|      1|        {\n+    8|      1|            break\n+    9|      1|            10\n+   10|      1|            ;\n+   11|      1|        }\n+   12|      1|    ;\n+   13|      1|}\n+"}, {"sha": "ae288d7d7a000cc8b83cb37c9900e1d4dc5894cc", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_show_coverage.question_mark_error_result.txt", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.question_mark_error_result.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.question_mark_error_result.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.question_mark_error_result.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,36 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |// expect-exit-status-1\n+    3|       |\n+    4|       |fn call(return_error: bool) -> Result<(),()> {\n+    5|      6|    if return_error {\n+    6|      1|        Err(())\n+    7|       |    } else {\n+    8|      5|        Ok(())\n+    9|       |    }\n+   10|      6|}\n+   11|       |\n+   12|       |fn main() -> Result<(),()> {\n+   13|      1|    let mut\n+   14|      1|        countdown = 10\n+   15|       |    ;\n+   16|      6|    for\n+   17|      6|        _\n+   18|       |    in\n+   19|      1|        0..10\n+   20|       |    {\n+   21|      6|        countdown\n+   22|      6|            -= 1\n+   23|       |        ;\n+   24|       |        if\n+   25|      6|            countdown < 5\n+   26|       |        {\n+   27|      1|            call(/*return_error=*/ true)?;\n+   28|       |        }\n+   29|       |        else\n+   30|       |        {\n+   31|      5|            call(/*return_error=*/ false)?;\n+   32|       |        }\n+   33|       |    }\n+   34|      0|    Ok(())\n+   35|      1|}\n+"}, {"sha": "f1acb7c545940e2a6ea9eb90d7e4f64a562372eb", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_show_coverage.simple_loop.txt", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.simple_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.simple_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.simple_loop.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,36 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |\n+    3|       |fn main() {\n+    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|       |    // dependent conditions.\n+    7|      1|    let is_true = std::env::args().len() == 1;\n+    8|      1|\n+    9|      1|    let mut countdown = 0;\n+   10|       |\n+   11|       |    if\n+   12|      1|        is_true\n+   13|      1|    {\n+   14|      1|        countdown\n+   15|      1|        =\n+   16|      1|            10\n+   17|      1|        ;\n+   18|      1|    }\n+   19|       |\n+   20|       |    loop\n+   21|       |    {\n+   22|       |        if\n+   23|     11|            countdown\n+   24|     11|                ==\n+   25|     11|            0\n+   26|       |        {\n+   27|      1|            break\n+   28|       |            ;\n+   29|       |        }\n+   30|     10|        countdown\n+   31|     10|        -=\n+   32|     10|        1\n+   33|       |        ;\n+   34|       |    }\n+   35|      1|}\n+"}, {"sha": "e42f22cd047fccbd61ec731d57c90a529d2df0eb", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_show_coverage.simple_match.txt", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.simple_match.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.simple_match.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.simple_match.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,44 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |\n+    3|       |fn main() {\n+    4|       |    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    5|       |    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    6|       |    // dependent conditions.\n+    7|      1|    let is_true = std::env::args().len() == 1;\n+    8|      1|\n+    9|      1|    let mut countdown = 1;\n+   10|      1|    if is_true {\n+   11|      1|        countdown = 0;\n+   12|      1|    }\n+   13|       |\n+   14|      3|    for\n+   15|      3|        _\n+   16|       |    in\n+   17|      1|        0..2\n+   18|       |    {\n+   19|       |        let z\n+   20|       |        ;\n+   21|       |        match\n+   22|      2|            countdown\n+   23|      2|        {\n+   24|      2|            x\n+   25|      2|            if\n+   26|      2|                x\n+   27|      2|                    <\n+   28|      2|                1\n+   29|       |            =>\n+   30|      1|            {\n+   31|      1|                z = countdown\n+   32|      1|                ;\n+   33|      1|                let y = countdown\n+   34|      1|                ;\n+   35|      1|                countdown = 10\n+   36|      1|                ;\n+   37|      1|            }\n+   38|       |            _\n+   39|       |            =>\n+   40|      1|            {}\n+   41|       |        }\n+   42|       |    }\n+   43|      1|}\n+"}, {"sha": "173ff4aa4c48154b7c32ca11ed922d6887b0caeb", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_show_coverage.various_conditions.txt", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.various_conditions.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.various_conditions.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.various_conditions.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,69 @@\n+    1|       |#![allow(unused_assignments, unused_variables)]\n+    2|       |\n+    3|       |fn main() {\n+    4|      1|    let mut countdown = 0;\n+    5|      1|    if true {\n+    6|      1|        countdown = 10;\n+    7|      1|    }\n+    8|       |\n+    9|       |    const B: u32 = 100;\n+   10|      1|    let x = if countdown > 7 {\n+   11|      1|        countdown -= 4;\n+   12|      1|        B\n+   13|      0|    } else if countdown > 2 {\n+   14|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n+   15|      0|            countdown = 0;\n+   16|      0|        }\n+   17|      0|        countdown -= 5;\n+   18|      0|        countdown\n+   19|       |    } else {\n+   20|      0|        return;\n+   21|       |    };\n+   22|       |\n+   23|      1|    let mut countdown = 0;\n+   24|      1|    if true {\n+   25|      1|        countdown = 10;\n+   26|      1|    }\n+   27|       |\n+   28|      1|    if countdown > 7 {\n+   29|      1|        countdown -= 4;\n+   30|      0|    } else if countdown > 2 {\n+   31|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n+   32|      0|            countdown = 0;\n+   33|      0|        }\n+   34|      0|        countdown -= 5;\n+   35|       |    } else {\n+   36|      0|        return;\n+   37|       |    }\n+   38|       |\n+   39|      1|    let mut countdown = 0;\n+   40|      1|    if true {\n+   41|      1|        countdown = 1;\n+   42|      1|    }\n+   43|       |\n+   44|      1|    let z = if countdown > 7 {\n+                      ^0\n+   45|      0|        countdown -= 4;\n+   46|      1|    } else if countdown > 2 {\n+   47|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n+   48|      0|            countdown = 0;\n+   49|      0|        }\n+   50|      0|        countdown -= 5;\n+   51|       |    } else {\n+   52|      1|        let should_be_reachable = countdown;\n+   53|      1|        println!(\"reached\");\n+   54|      1|        return;\n+   55|       |    };\n+   56|       |\n+   57|      0|    let w = if countdown > 7 {\n+   58|      0|        countdown -= 4;\n+   59|      0|    } else if countdown > 2 {\n+   60|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n+   61|      0|            countdown = 0;\n+   62|      0|        }\n+   63|      0|        countdown -= 5;\n+   64|       |    } else {\n+   65|      0|        return;\n+   66|       |    };\n+   67|      1|}\n+"}, {"sha": "7dce94f25f304ae24082cdbeb45dac1678a63a10", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/expected_show_coverage.while_early_return.txt", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.while_early_return.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.while_early_return.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Fexpected_show_coverage.while_early_return.txt?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,48 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |// expect-exit-status-1\n+    3|       |\n+    4|       |fn main() -> Result<(),u8> {\n+    5|      1|    let mut countdown = 10;\n+    6|      7|    while\n+    7|      7|        countdown\n+    8|      7|            >\n+    9|      7|        0\n+   10|       |    {\n+   11|       |        if\n+   12|      7|            countdown\n+   13|      7|                <\n+   14|      7|            5\n+   15|       |        {\n+   16|       |            return\n+   17|       |                if\n+   18|      1|                    countdown\n+   19|      1|                        >\n+   20|      1|                    8\n+   21|       |                {\n+   22|      0|                    Ok(())\n+   23|       |                }\n+   24|       |                else\n+   25|       |                {\n+   26|      1|                    Err(1)\n+   27|       |                }\n+   28|       |                ;\n+   29|       |        }\n+   30|      6|        countdown\n+   31|      6|            -=\n+   32|      6|        1\n+   33|       |        ;\n+   34|       |    }\n+   35|      0|    Ok(())\n+   36|      1|}\n+   37|       |\n+   38|       |// ISSUE(77553): Originally, this test had `Err(1)` on line 22 (instead of `Ok(())`) and\n+   39|       |// `std::process::exit(2)` on line 26 (instead of `Err(1)`); and this worked as expected on Linux\n+   40|       |// and MacOS. But on Windows (MSVC, at least), the call to `std::process::exit()` exits the program\n+   41|       |// without saving the InstrProf coverage counters. The use of `std::process:exit()` is not critical\n+   42|       |// to the coverage test for early returns, but this is a limitation that should be fixed.\n+   43|       |//\n+   44|       |// FIXME(richkadel): Consider creating a new tests for coverage when calling `std::process::exit()`,\n+   45|       |// move the `ISSUE` comment to that test, and implement a new test directive that supports skipping\n+   46|       |// coverage tests when targeting specific platforms (at least skipping Windows, or MSVC if the\n+   47|       |// problem exists on MSVC only).\n+"}, {"sha": "87ce3b4048f2a426bb520ce1679c5dc53f4f9ae2", "filename": "src/test/run-make-fulldeps/instrument-coverage-cov-reports-link-dead-code/typical_show_coverage.coverage_of_if_else.txt", "status": "removed", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/d890e64dff3fd2c28635c60cc9315648dd46c8f7/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Ftypical_show_coverage.coverage_of_if_else.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d890e64dff3fd2c28635c60cc9315648dd46c8f7/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Ftypical_show_coverage.coverage_of_if_else.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-cov-reports-link-dead-code%2Ftypical_show_coverage.coverage_of_if_else.txt?ref=d890e64dff3fd2c28635c60cc9315648dd46c8f7", "patch": "@@ -1,64 +0,0 @@\n-    1|       |#![allow(unused_assignments)]\n-    2|       |\n-    3|       |fn main() {\n-    4|       |    let mut countdown = 0;\n-    5|      2|    if true {\n-                     ^1\n-    6|      2|        countdown = 10;\n-    7|      2|    }\n-    8|       |\n-    9|      2|    if countdown > 7 {\n-                     ^1\n-   10|      2|        countdown -= 4;\n-                      ^1\n-   11|      2|    } else if countdown > 2 {\n-                         ^0 ^0\n-   12|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   13|      0|            countdown = 0;\n-   14|      0|        }\n-   15|      0|        countdown -= 5;\n-   16|      0|    } else {\n-   17|      0|        return;\n-   18|      0|    }\n-   19|       |\n-   20|       |    let mut countdown = 0;\n-   21|      2|    if true {\n-                     ^1\n-   22|      2|        countdown = 10;\n-   23|      2|    }\n-   24|       |\n-   25|      2|    if countdown > 7 {\n-                     ^1\n-   26|      2|        countdown -= 4;\n-                      ^1\n-   27|      2|    } else if countdown > 2 {\n-                         ^0 ^0\n-   28|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   29|      0|            countdown = 0;\n-   30|      0|        }\n-   31|      0|        countdown -= 5;\n-   32|      0|    } else {\n-   33|      0|        return;\n-   34|      0|    }\n-   35|       |\n-   36|       |    let mut countdown = 0;\n-   37|      2|    if true {\n-                     ^1\n-   38|      2|        countdown = 10;\n-   39|      2|    }\n-   40|       |\n-   41|      2|    if countdown > 7 {\n-                     ^1\n-   42|      2|        countdown -= 4;\n-                      ^1\n-   43|      2|    } else if countdown > 2 {\n-                         ^0 ^0\n-   44|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   45|      0|            countdown = 0;\n-   46|      0|        }\n-   47|      0|        countdown -= 5;\n-   48|      0|    } else {\n-   49|      0|        return;\n-   50|      0|    }\n-   51|      1|}\n-"}, {"sha": "c42530e233e82236cbb50257a6a994d78e155bdd", "filename": "src/test/run-make-fulldeps/instrument-coverage-llvm-ir-link-dead-code/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-llvm-ir-link-dead-code%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-llvm-ir-link-dead-code%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-llvm-ir-link-dead-code%2FMakefile?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -8,4 +8,4 @@ LINK_DEAD_CODE=yes\n \n # ISSUE(76038): When targeting MSVC, Rust binaries built with both `-Z instrument-coverage` and\n # `-C link-dead-code` typically crash (with a seg-fault) or at best generate an empty `*.profraw`.\n-# See ../instrument-coverage/coverage_tools.mk for more information.\n\\ No newline at end of file\n+# See ../instrument-coverage/coverage_tools.mk for more information."}, {"sha": "f59c72dd399df2213353d0e5241ffd41180ead90", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/Makefile", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2FMakefile?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -20,12 +20,9 @@ endif\n -include clear_expected_if_blessed\n \n %: $(SOURCEDIR)/%.rs\n-\t# Compile the test program with \"experimental\" coverage instrumentation and generate relevant MIR.\n-\t#\n-\t# FIXME(richkadel): `-Zexperimental-coverage` to `-Zinstrument-coverage` once we are\n-\t# satisfied with the branch-level instrumentation.\n+\t# Compile the test program with coverage instrumentation and generate relevant MIR.\n \t$(RUSTC) $(SOURCEDIR)/$@.rs \\\n-\t\t\t-Zexperimental-coverage \\\n+\t\t\t-Zinstrument-coverage \\\n \t\t\t-Clink-dead-code=$(LINK_DEAD_CODE) \\\n \t\t\t-Zdump-mir=InstrumentCoverage \\\n \t\t\t-Zdump-mir-dir=\"$(TMPDIR)\"/mir_dump.$@"}, {"sha": "43f75c574d0ee1c07ae5e9f0b60852851a10eb2a", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.closure/closure.main-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>closure.main-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 32\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">||</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:29-35:30: @0[1]: _2 = const 0_i32\n+35:13-35:26: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n+36:12-36:20: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n+36:21-38:10: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n+36:21-38:10: @3[1]: _3 = const ()\">            countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n+36:21-38:10: @3[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"39:9-39:23: @4[4]: _6 = const &quot;alt string 2&quot;\n+39:9-39:23: @4[5]: _5 = &amp;(*_6)\n+39:9-39:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+40:6-40:6: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 2\".to_owned()</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"39:9-39:23: @4[4]: _6 = const &quot;alt string 2&quot;\n+39:9-39:23: @4[5]: _5 = &amp;(*_6)\n+39:9-39:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+40:6-40:6: @5.Return: return\">    }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "8f07ec5fcde6621db63896e6bf414372597601ae", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.closure/closure.main-{closure#1}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>closure.main-{closure#1} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 74\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">||</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:29-77:30: @0[1]: _2 = const 0_i32\n+77:13-77:26: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n+78:12-78:20: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n+78:21-80:10: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n+78:21-80:10: @3[1]: _3 = const ()\">            countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n+78:21-80:10: @3[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"81:9-81:23: @4[4]: _6 = const &quot;alt string 4&quot;\n+81:9-81:23: @4[5]: _5 = &amp;(*_6)\n+81:9-81:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+82:6-82:6: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 4\".to_owned()</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"81:9-81:23: @4[4]: _6 = const &quot;alt string 4&quot;\n+81:9-81:23: @4[5]: _5 = &amp;(*_6)\n+81:9-81:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+82:6-82:6: @5.Return: return\">    }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "ca9031a1094a40953783abd570fe741e67d306d2", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.closure/closure.main-{closure#2}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>closure.main-{closure#2} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 17\"><span class=\"line\">            <span class=\"code\" style=\"--layer: 0\">||</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:37-20:38: @0[1]: _2 = const 0_i32\n+20:21-20:34: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n+21:20-21:28: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n+21:29-23:18: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n+21:29-23:18: @3[1]: _3 = const ()\">                    countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n+21:29-23:18: @3[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:17-24:31: @4[4]: _6 = const &quot;alt string 1&quot;\n+24:17-24:31: @4[5]: _5 = &amp;(*_6)\n+24:17-24:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+25:14-25:14: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 1\".to_owned()</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"24:17-24:31: @4[4]: _6 = const &quot;alt string 1&quot;\n+24:17-24:31: @4[5]: _5 = &amp;(*_6)\n+24:17-24:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+25:14-25:14: @5.Return: return\">            }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "820f8d9c6cf8fb5d1d81a5c7a28c4a9894630356", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.closure/closure.main-{closure#3}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>closure.main-{closure#3} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 59\"><span class=\"line\">            <span class=\"code\" style=\"--layer: 0\">||</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"62:37-62:38: @0[1]: _2 = const 0_i32\n+62:21-62:34: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n+63:20-63:28: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n+63:29-65:18: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n+63:29-65:18: @3[1]: _3 = const ()\">                    countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n+63:29-65:18: @3[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"66:17-66:31: @4[4]: _6 = const &quot;alt string 3&quot;\n+66:17-66:31: @4[5]: _5 = &amp;(*_6)\n+66:17-66:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+67:14-67:14: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 3\".to_owned()</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"66:17-66:31: @4[4]: _6 = const &quot;alt string 3&quot;\n+66:17-66:31: @4[5]: _5 = &amp;(*_6)\n+66:17-66:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+67:14-67:14: @5.Return: return\">            }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "740db3658646f3e08b1e7483b2081cacc34ef96d", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.closure/closure.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 4505, "deletions": 0, "changes": 4505, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc"}, {"sha": "fcb6afb263684c25797ff9fb51234c4ae5190369", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.coverage_of_if_else/coverage_of_if_else.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 641, "changes": 641, "blob_url": "https://github.com/rust-lang/rust/blob/d890e64dff3fd2c28635c60cc9315648dd46c8f7/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.coverage_of_if_else%2Fcoverage_of_if_else.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/d890e64dff3fd2c28635c60cc9315648dd46c8f7/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.coverage_of_if_else%2Fcoverage_of_if_else.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.coverage_of_if_else%2Fcoverage_of_if_else.main.-------.InstrumentCoverage.0.html?ref=d890e64dff3fd2c28635c60cc9315648dd46c8f7", "patch": "@@ -1,641 +0,0 @@\n-<!DOCTYPE html>\n-<html>\n-<head>\n-    <title>coverage_of_if_else - Code Regions</title>\n-    <style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-    </style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"bb1: ../instrument-coverage/coverage_of_if_else.rs:5:5: 7:6:\n-    5:5-7:6: FalseEdge: falseEdge -&gt; [real: bb3, imaginary: bb2]\"><span class=\"annotation\">1\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb3: ../instrument-coverage/coverage_of_if_else.rs:5:5: 7:6:\n-    6:9-6:23: Assign: _1 = const 10_i32\n-    5:13-7:6: Assign: _2 = const ()\n-    5:5-7:6: Goto: goto -&gt; bb4\"><span class=\"annotation\">3\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb2: ../instrument-coverage/coverage_of_if_else.rs:5:5: 7:6:\n-    5:5-7:6: Assign: _2 = const ()\n-    5:5-7:6: Goto: goto -&gt; bb4\"><span class=\"annotation\">2\u298a</span>if </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb0: ../instrument-coverage/coverage_of_if_else.rs:5:8: 5:12:\n-    4:9-4:22: StorageLive: StorageLive(_1)\n-    4:25-4:26: Assign: _1 = const 0_i32\n-    4:9-4:22: FakeRead: FakeRead(ForLet, _1)\n-    5:5-7:6: StorageLive: StorageLive(_2)\n-    5:8-5:12: StorageLive: StorageLive(_3)\n-    5:8-5:12: Assign: _3 = const true\n-    5:8-5:12: FakeRead: FakeRead(ForMatchedPlace, _3)\n-    5:5-7:6: SwitchInt: switchInt(_3) -&gt; [false: bb2, otherwise: bb1]\"><span class=\"annotation\">0\u298a</span>true<span class=\"annotation\">\u29890</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb2: ../instrument-coverage/coverage_of_if_else.rs:5:5: 7:6:\n-    5:5-7:6: Assign: _2 = const ()\n-    5:5-7:6: Goto: goto -&gt; bb4\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb2: ../instrument-coverage/coverage_of_if_else.rs:5:5: 7:6:\n-    5:5-7:6: Assign: _2 = const ()\n-    5:5-7:6: Goto: goto -&gt; bb4\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb2: ../instrument-coverage/coverage_of_if_else.rs:5:5: 7:6:\n-    5:5-7:6: Assign: _2 = const ()\n-    5:5-7:6: Goto: goto -&gt; bb4\">    }<span class=\"annotation\">\u29892</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb3: ../instrument-coverage/coverage_of_if_else.rs:5:5: 7:6:\n-    6:9-6:23: Assign: _1 = const 10_i32\n-    5:13-7:6: Assign: _2 = const ()\n-    5:5-7:6: Goto: goto -&gt; bb4\"><span class=\"annotation\">\u29893</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"bb1: ../instrument-coverage/coverage_of_if_else.rs:5:5: 7:6:\n-    5:5-7:6: FalseEdge: falseEdge -&gt; [real: bb3, imaginary: bb2]\"><span class=\"annotation\">\u29891</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"bb5: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    9:5-18:6: FalseEdge: falseEdge -&gt; [real: bb7, imaginary: bb6]\"><span class=\"annotation\">5\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb8: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    10:9-10:23: Assign: _1 = move (_7.0: i32)\n-    9:22-11:6: Assign: _4 = const ()\n-    9:5-18:6: Goto: goto -&gt; bb25\"><span class=\"annotation\">8\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb24: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    15:9-15:23: Assign: _1 = move (_19.0: i32)\n-    11:29-16:6: Assign: _4 = const ()\n-    18:5-18:6: StorageDead: StorageDead(_8)\n-    9:5-18:6: Goto: goto -&gt; bb25\"><span class=\"annotation\">24\u298a</span>if </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb4: ../instrument-coverage/coverage_of_if_else.rs:9:8: 9:21:\n-    7:5-7:6: StorageDead: StorageDead(_3)\n-    7:5-7:6: StorageDead: StorageDead(_2)\n-    9:5-18:6: StorageLive: StorageLive(_4)\n-    9:8-9:21: StorageLive: StorageLive(_5)\n-    9:8-9:17: StorageLive: StorageLive(_6)\n-    9:8-9:17: Assign: _6 = _1\n-    9:8-9:21: Assign: _5 = Gt(move _6, const 7_i32)\n-    9:20-9:21: StorageDead: StorageDead(_6)\n-    9:8-9:21: FakeRead: FakeRead(ForMatchedPlace, _5)\n-    9:5-18:6: SwitchInt: switchInt(_5) -&gt; [false: bb6, otherwise: bb5]\"><span class=\"annotation\">4\u298a</span>countdown &gt; 7<span class=\"annotation\">\u29894</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb24: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    15:9-15:23: Assign: _1 = move (_19.0: i32)\n-    11:29-16:6: Assign: _4 = const ()\n-    18:5-18:6: StorageDead: StorageDead(_8)\n-    9:5-18:6: Goto: goto -&gt; bb25\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb24: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    15:9-15:23: Assign: _1 = move (_19.0: i32)\n-    11:29-16:6: Assign: _4 = const ()\n-    18:5-18:6: StorageDead: StorageDead(_8)\n-    9:5-18:6: Goto: goto -&gt; bb25\">        </span><span class=\"code odd\" style=\"--layer: 4\" title=\"bb7: ../instrument-coverage/coverage_of_if_else.rs:10:9: 10:23:\n-    10:9-10:23: Assign: _7 = CheckedSub(_1, const 4_i32)\n-    10:9-10:23: Assert: assert(!move (_7.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _1, const 4_i32) -&gt; [success: bb8, unwind: bb78]\"><span class=\"annotation\">7\u298a</span>countdown -= 4<span class=\"annotation\">\u29897</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb24: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    15:9-15:23: Assign: _1 = move (_19.0: i32)\n-    11:29-16:6: Assign: _4 = const ()\n-    18:5-18:6: StorageDead: StorageDead(_8)\n-    9:5-18:6: Goto: goto -&gt; bb25\">;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb24: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    15:9-15:23: Assign: _1 = move (_19.0: i32)\n-    11:29-16:6: Assign: _4 = const ()\n-    18:5-18:6: StorageDead: StorageDead(_8)\n-    9:5-18:6: Goto: goto -&gt; bb25\">    } else </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb9: ../instrument-coverage/coverage_of_if_else.rs:11:12: 18:6:\n-    11:12-18:6: FalseEdge: falseEdge -&gt; [real: bb11, imaginary: bb10]\"><span class=\"annotation\">9\u298a</span>if </span><span class=\"code even\" style=\"--layer: 5\" title=\"bb6: ../instrument-coverage/coverage_of_if_else.rs:11:15: 11:28:\n-    11:15-11:28: StorageLive: StorageLive(_8)\n-    11:15-11:24: StorageLive: StorageLive(_9)\n-    11:15-11:24: Assign: _9 = _1\n-    11:15-11:28: Assign: _8 = Gt(move _9, const 2_i32)\n-    11:27-11:28: StorageDead: StorageDead(_9)\n-    11:15-11:28: FakeRead: FakeRead(ForMatchedPlace, _8)\n-    11:12-18:6: SwitchInt: switchInt(_8) -&gt; [false: bb10, otherwise: bb9]\"><span class=\"annotation\">6\u298a</span>countdown &gt; 2<span class=\"annotation\">\u29896</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"bb9: ../instrument-coverage/coverage_of_if_else.rs:11:12: 18:6:\n-    11:12-18:6: FalseEdge: falseEdge -&gt; [real: bb11, imaginary: bb10]\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb9: ../instrument-coverage/coverage_of_if_else.rs:11:12: 18:6:\n-    11:12-18:6: FalseEdge: falseEdge -&gt; [real: bb11, imaginary: bb10]\">        </span><span class=\"code odd\" style=\"--layer: 5\" title=\"bb20: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    12:9-14:10: FalseEdge: falseEdge -&gt; [real: bb22, imaginary: bb21]\"><span class=\"annotation\">20\u298a</span></span><span class=\"code even\" style=\"--layer: 6\" title=\"bb22: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    13:13-13:26: Assign: _1 = const 0_i32\n-    12:61-14:10: Assign: _10 = const ()\n-    12:9-14:10: Goto: goto -&gt; bb23\"><span class=\"annotation\">22\u298a</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb21: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    12:9-14:10: Assign: _10 = const ()\n-    12:9-14:10: Goto: goto -&gt; bb23\"><span class=\"annotation\">21\u298a</span>if </span><span class=\"code even\" style=\"--layer: 8\" title=\"bb14: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:46-12:60: StorageLive: StorageLive(_17)\n-    12:46-12:55: StorageLive: StorageLive(_18)\n-    12:46-12:55: Assign: _18 = _1\n-    12:46-12:60: Assign: _17 = Ne(move _18, const 9_i32)\n-    12:59-12:60: StorageDead: StorageDead(_18)\n-    12:12-12:60: SwitchInt: switchInt(move _17) -&gt; [false: bb13, otherwise: bb12]\"><span class=\"annotation\">14\u298a</span></span><span class=\"code even\" style=\"--layer: 9\" title=\"bb11: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:9-14:10: StorageLive: StorageLive(_10)\n-    12:12-12:60: StorageLive: StorageLive(_11)\n-    12:12-12:42: StorageLive: StorageLive(_12)\n-    12:12-12:25: StorageLive: StorageLive(_13)\n-    12:12-12:21: StorageLive: StorageLive(_14)\n-    12:12-12:21: Assign: _14 = _1\n-    12:12-12:25: Assign: _13 = Lt(move _14, const 1_i32)\n-    12:24-12:25: StorageDead: StorageDead(_14)\n-    12:12-12:42: SwitchInt: switchInt(move _13) -&gt; [false: bb18, otherwise: bb16]\"><span class=\"annotation\">11\u298a</span></span><span class=\"code even\" style=\"--layer: 10\" title=\"bb13: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:12-12:60: Assign: _11 = const false\n-    12:12-12:60: Goto: goto -&gt; bb15\"><span class=\"annotation\">13\u298a</span></span><span class=\"code even\" style=\"--layer: 11\" title=\"bb19: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:41-12:42: StorageDead: StorageDead(_15)\n-    12:41-12:42: StorageDead: StorageDead(_13)\n-    12:12-12:60: SwitchInt: switchInt(move _12) -&gt; [false: bb14, otherwise: bb12]\"><span class=\"annotation\">19\u298a</span></span><span class=\"code even\" style=\"--layer: 12\" title=\"bb15: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:59-12:60: StorageDead: StorageDead(_17)\n-    12:59-12:60: StorageDead: StorageDead(_12)\n-    12:12-12:60: FakeRead: FakeRead(ForMatchedPlace, _11)\n-    12:9-14:10: SwitchInt: switchInt(_11) -&gt; [false: bb21, otherwise: bb20]\"><span class=\"annotation\">15\u298a</span></span><span class=\"code even\" style=\"--layer: 13\" title=\"bb12: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:12-12:60: Assign: _11 = const true\n-    12:12-12:60: Goto: goto -&gt; bb15\"><span class=\"annotation\">12\u298a</span></span><span class=\"code even\" style=\"--layer: 14\" title=\"bb16: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:42:\n-    12:12-12:42: Assign: _12 = const true\n-    12:12-12:42: Goto: goto -&gt; bb19\"><span class=\"annotation\">16\u298a</span></span><span class=\"code even\" style=\"--layer: 15\" title=\"bb17: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:42:\n-    12:12-12:42: Assign: _12 = const false\n-    12:12-12:42: Goto: goto -&gt; bb19\"><span class=\"annotation\">17\u298a</span></span><span class=\"code even\" style=\"--layer: 16\" title=\"bb18: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:42:\n-    12:29-12:42: StorageLive: StorageLive(_15)\n-    12:29-12:38: StorageLive: StorageLive(_16)\n-    12:29-12:38: Assign: _16 = _1\n-    12:29-12:42: Assign: _15 = Gt(move _16, const 5_i32)\n-    12:41-12:42: StorageDead: StorageDead(_16)\n-    12:12-12:42: SwitchInt: switchInt(move _15) -&gt; [false: bb17, otherwise: bb16]\"><span class=\"annotation\">18\u298a</span>countdown &lt; 1 || countdown &gt; 5<span class=\"annotation\">\u298918</span></span><span class=\"code even\" style=\"--layer: 15\" title=\"bb17: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:42:\n-    12:12-12:42: Assign: _12 = const false\n-    12:12-12:42: Goto: goto -&gt; bb19\"><span class=\"annotation\">\u298917</span></span><span class=\"code even\" style=\"--layer: 14\" title=\"bb16: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:42:\n-    12:12-12:42: Assign: _12 = const true\n-    12:12-12:42: Goto: goto -&gt; bb19\"><span class=\"annotation\">\u298916</span></span><span class=\"code even\" style=\"--layer: 13\" title=\"bb12: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:12-12:60: Assign: _11 = const true\n-    12:12-12:60: Goto: goto -&gt; bb15\"> || countdown != 9<span class=\"annotation\">\u298912</span></span><span class=\"code even\" style=\"--layer: 12\" title=\"bb15: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:59-12:60: StorageDead: StorageDead(_17)\n-    12:59-12:60: StorageDead: StorageDead(_12)\n-    12:12-12:60: FakeRead: FakeRead(ForMatchedPlace, _11)\n-    12:9-14:10: SwitchInt: switchInt(_11) -&gt; [false: bb21, otherwise: bb20]\"><span class=\"annotation\">\u298915</span></span><span class=\"code even\" style=\"--layer: 11\" title=\"bb19: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:41-12:42: StorageDead: StorageDead(_15)\n-    12:41-12:42: StorageDead: StorageDead(_13)\n-    12:12-12:60: SwitchInt: switchInt(move _12) -&gt; [false: bb14, otherwise: bb12]\"><span class=\"annotation\">\u298919</span></span><span class=\"code even\" style=\"--layer: 10\" title=\"bb13: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:12-12:60: Assign: _11 = const false\n-    12:12-12:60: Goto: goto -&gt; bb15\"><span class=\"annotation\">\u298913</span></span><span class=\"code even\" style=\"--layer: 9\" title=\"bb11: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:9-14:10: StorageLive: StorageLive(_10)\n-    12:12-12:60: StorageLive: StorageLive(_11)\n-    12:12-12:42: StorageLive: StorageLive(_12)\n-    12:12-12:25: StorageLive: StorageLive(_13)\n-    12:12-12:21: StorageLive: StorageLive(_14)\n-    12:12-12:21: Assign: _14 = _1\n-    12:12-12:25: Assign: _13 = Lt(move _14, const 1_i32)\n-    12:24-12:25: StorageDead: StorageDead(_14)\n-    12:12-12:42: SwitchInt: switchInt(move _13) -&gt; [false: bb18, otherwise: bb16]\"><span class=\"annotation\">\u298911</span></span><span class=\"code even\" style=\"--layer: 8\" title=\"bb14: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:46-12:60: StorageLive: StorageLive(_17)\n-    12:46-12:55: StorageLive: StorageLive(_18)\n-    12:46-12:55: Assign: _18 = _1\n-    12:46-12:60: Assign: _17 = Ne(move _18, const 9_i32)\n-    12:59-12:60: StorageDead: StorageDead(_18)\n-    12:12-12:60: SwitchInt: switchInt(move _17) -&gt; [false: bb13, otherwise: bb12]\"><span class=\"annotation\">\u298914</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb21: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    12:9-14:10: Assign: _10 = const ()\n-    12:9-14:10: Goto: goto -&gt; bb23\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 7\" title=\"bb21: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    12:9-14:10: Assign: _10 = const ()\n-    12:9-14:10: Goto: goto -&gt; bb23\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 7\" title=\"bb21: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    12:9-14:10: Assign: _10 = const ()\n-    12:9-14:10: Goto: goto -&gt; bb23\">        </span><span class=\"code odd\" style=\"--layer: 8\" title=\"bb23: ../instrument-coverage/coverage_of_if_else.rs:14:9: 15:23:\n-    14:9-14:10: StorageDead: StorageDead(_11)\n-    14:9-14:10: StorageDead: StorageDead(_10)\n-    15:9-15:23: Assign: _19 = CheckedSub(_1, const 5_i32)\n-    15:9-15:23: Assert: assert(!move (_19.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _1, const 5_i32) -&gt; [success: bb24, unwind: bb78]\"><span class=\"annotation\">23\u298a</span>}</span><span class=\"code odd\" style=\"--layer: 5\" title=\"bb20: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    12:9-14:10: FalseEdge: falseEdge -&gt; [real: bb22, imaginary: bb21]\"><span class=\"annotation\">\u298920</span></span><span class=\"code even\" style=\"--layer: 6\" title=\"bb22: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    13:13-13:26: Assign: _1 = const 0_i32\n-    12:61-14:10: Assign: _10 = const ()\n-    12:9-14:10: Goto: goto -&gt; bb23\"><span class=\"annotation\">\u298922</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb21: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    12:9-14:10: Assign: _10 = const ()\n-    12:9-14:10: Goto: goto -&gt; bb23\"><span class=\"annotation\">\u298921</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb21: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    12:9-14:10: Assign: _10 = const ()\n-    12:9-14:10: Goto: goto -&gt; bb23\"><span class=\"annotation\">\u298921</span></span><span class=\"code odd\" style=\"--layer: 8\" title=\"bb23: ../instrument-coverage/coverage_of_if_else.rs:14:9: 15:23:\n-    14:9-14:10: StorageDead: StorageDead(_11)\n-    14:9-14:10: StorageDead: StorageDead(_10)\n-    15:9-15:23: Assign: _19 = CheckedSub(_1, const 5_i32)\n-    15:9-15:23: Assert: assert(!move (_19.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _1, const 5_i32) -&gt; [success: bb24, unwind: bb78]\"></span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 8\" title=\"bb23: ../instrument-coverage/coverage_of_if_else.rs:14:9: 15:23:\n-    14:9-14:10: StorageDead: StorageDead(_11)\n-    14:9-14:10: StorageDead: StorageDead(_10)\n-    15:9-15:23: Assign: _19 = CheckedSub(_1, const 5_i32)\n-    15:9-15:23: Assert: assert(!move (_19.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _1, const 5_i32) -&gt; [success: bb24, unwind: bb78]\">        countdown -= 5<span class=\"annotation\">\u298923</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"bb9: ../instrument-coverage/coverage_of_if_else.rs:11:12: 18:6:\n-    11:12-18:6: FalseEdge: falseEdge -&gt; [real: bb11, imaginary: bb10]\">;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb9: ../instrument-coverage/coverage_of_if_else.rs:11:12: 18:6:\n-    11:12-18:6: FalseEdge: falseEdge -&gt; [real: bb11, imaginary: bb10]\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb9: ../instrument-coverage/coverage_of_if_else.rs:11:12: 18:6:\n-    11:12-18:6: FalseEdge: falseEdge -&gt; [real: bb11, imaginary: bb10]\">        return;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb9: ../instrument-coverage/coverage_of_if_else.rs:11:12: 18:6:\n-    11:12-18:6: FalseEdge: falseEdge -&gt; [real: bb11, imaginary: bb10]\">    }<span class=\"annotation\">\u29899</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb24: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    15:9-15:23: Assign: _1 = move (_19.0: i32)\n-    11:29-16:6: Assign: _4 = const ()\n-    18:5-18:6: StorageDead: StorageDead(_8)\n-    9:5-18:6: Goto: goto -&gt; bb25\"><span class=\"annotation\">\u298924</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb8: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    10:9-10:23: Assign: _1 = move (_7.0: i32)\n-    9:22-11:6: Assign: _4 = const ()\n-    9:5-18:6: Goto: goto -&gt; bb25\"><span class=\"annotation\">\u29898</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"bb5: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    9:5-18:6: FalseEdge: falseEdge -&gt; [real: bb7, imaginary: bb6]\"><span class=\"annotation\">\u29895</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"bb27: ../instrument-coverage/coverage_of_if_else.rs:21:5: 23:6:\n-    21:5-23:6: Assign: _22 = const ()\n-    21:5-23:6: Goto: goto -&gt; bb29\"><span class=\"annotation\">27\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb28: ../instrument-coverage/coverage_of_if_else.rs:21:5: 23:6:\n-    22:9-22:23: Assign: _21 = const 10_i32\n-    21:13-23:6: Assign: _22 = const ()\n-    21:5-23:6: Goto: goto -&gt; bb29\"><span class=\"annotation\">28\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb26: ../instrument-coverage/coverage_of_if_else.rs:21:5: 23:6:\n-    21:5-23:6: FalseEdge: falseEdge -&gt; [real: bb28, imaginary: bb27]\"><span class=\"annotation\">26\u298a</span>if </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb25: ../instrument-coverage/coverage_of_if_else.rs:21:8: 21:12:\n-    18:5-18:6: StorageDead: StorageDead(_5)\n-    18:5-18:6: StorageDead: StorageDead(_4)\n-    20:9-20:22: StorageLive: StorageLive(_21)\n-    20:25-20:26: Assign: _21 = const 0_i32\n-    20:9-20:22: FakeRead: FakeRead(ForLet, _21)\n-    21:5-23:6: StorageLive: StorageLive(_22)\n-    21:8-21:12: StorageLive: StorageLive(_23)\n-    21:8-21:12: Assign: _23 = const true\n-    21:8-21:12: FakeRead: FakeRead(ForMatchedPlace, _23)\n-    21:5-23:6: SwitchInt: switchInt(_23) -&gt; [false: bb27, otherwise: bb26]\"><span class=\"annotation\">25\u298a</span>true<span class=\"annotation\">\u298925</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb26: ../instrument-coverage/coverage_of_if_else.rs:21:5: 23:6:\n-    21:5-23:6: FalseEdge: falseEdge -&gt; [real: bb28, imaginary: bb27]\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb26: ../instrument-coverage/coverage_of_if_else.rs:21:5: 23:6:\n-    21:5-23:6: FalseEdge: falseEdge -&gt; [real: bb28, imaginary: bb27]\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb26: ../instrument-coverage/coverage_of_if_else.rs:21:5: 23:6:\n-    21:5-23:6: FalseEdge: falseEdge -&gt; [real: bb28, imaginary: bb27]\">    }<span class=\"annotation\">\u298926</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb28: ../instrument-coverage/coverage_of_if_else.rs:21:5: 23:6:\n-    22:9-22:23: Assign: _21 = const 10_i32\n-    21:13-23:6: Assign: _22 = const ()\n-    21:5-23:6: Goto: goto -&gt; bb29\"><span class=\"annotation\">\u298928</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"bb27: ../instrument-coverage/coverage_of_if_else.rs:21:5: 23:6:\n-    21:5-23:6: Assign: _22 = const ()\n-    21:5-23:6: Goto: goto -&gt; bb29\"><span class=\"annotation\">\u298927</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"bb49: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    31:9-31:23: Assign: _21 = move (_39.0: i32)\n-    27:29-32:6: Assign: _24 = const ()\n-    34:5-34:6: StorageDead: StorageDead(_28)\n-    25:5-34:6: Goto: goto -&gt; bb50\"><span class=\"annotation\">49\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb33: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    26:9-26:23: Assign: _21 = move (_27.0: i32)\n-    25:22-27:6: Assign: _24 = const ()\n-    25:5-34:6: Goto: goto -&gt; bb50\"><span class=\"annotation\">33\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb30: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    25:5-34:6: FalseEdge: falseEdge -&gt; [real: bb32, imaginary: bb31]\"><span class=\"annotation\">30\u298a</span>if </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb29: ../instrument-coverage/coverage_of_if_else.rs:25:8: 25:21:\n-    23:5-23:6: StorageDead: StorageDead(_23)\n-    23:5-23:6: StorageDead: StorageDead(_22)\n-    25:5-34:6: StorageLive: StorageLive(_24)\n-    25:8-25:21: StorageLive: StorageLive(_25)\n-    25:8-25:17: StorageLive: StorageLive(_26)\n-    25:8-25:17: Assign: _26 = _21\n-    25:8-25:21: Assign: _25 = Gt(move _26, const 7_i32)\n-    25:20-25:21: StorageDead: StorageDead(_26)\n-    25:8-25:21: FakeRead: FakeRead(ForMatchedPlace, _25)\n-    25:5-34:6: SwitchInt: switchInt(_25) -&gt; [false: bb31, otherwise: bb30]\"><span class=\"annotation\">29\u298a</span>countdown &gt; 7<span class=\"annotation\">\u298929</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb30: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    25:5-34:6: FalseEdge: falseEdge -&gt; [real: bb32, imaginary: bb31]\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb30: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    25:5-34:6: FalseEdge: falseEdge -&gt; [real: bb32, imaginary: bb31]\">        </span><span class=\"code odd\" style=\"--layer: 4\" title=\"bb32: ../instrument-coverage/coverage_of_if_else.rs:26:9: 26:23:\n-    26:9-26:23: Assign: _27 = CheckedSub(_21, const 4_i32)\n-    26:9-26:23: Assert: assert(!move (_27.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _21, const 4_i32) -&gt; [success: bb33, unwind: bb78]\"><span class=\"annotation\">32\u298a</span>countdown -= 4<span class=\"annotation\">\u298932</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb30: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    25:5-34:6: FalseEdge: falseEdge -&gt; [real: bb32, imaginary: bb31]\">;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb30: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    25:5-34:6: FalseEdge: falseEdge -&gt; [real: bb32, imaginary: bb31]\">    } else </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb34: ../instrument-coverage/coverage_of_if_else.rs:27:12: 34:6:\n-    27:12-34:6: FalseEdge: falseEdge -&gt; [real: bb36, imaginary: bb35]\"><span class=\"annotation\">34\u298a</span>if </span><span class=\"code even\" style=\"--layer: 5\" title=\"bb31: ../instrument-coverage/coverage_of_if_else.rs:27:15: 27:28:\n-    27:15-27:28: StorageLive: StorageLive(_28)\n-    27:15-27:24: StorageLive: StorageLive(_29)\n-    27:15-27:24: Assign: _29 = _21\n-    27:15-27:28: Assign: _28 = Gt(move _29, const 2_i32)\n-    27:27-27:28: StorageDead: StorageDead(_29)\n-    27:15-27:28: FakeRead: FakeRead(ForMatchedPlace, _28)\n-    27:12-34:6: SwitchInt: switchInt(_28) -&gt; [false: bb35, otherwise: bb34]\"><span class=\"annotation\">31\u298a</span>countdown &gt; 2<span class=\"annotation\">\u298931</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"bb34: ../instrument-coverage/coverage_of_if_else.rs:27:12: 34:6:\n-    27:12-34:6: FalseEdge: falseEdge -&gt; [real: bb36, imaginary: bb35]\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb34: ../instrument-coverage/coverage_of_if_else.rs:27:12: 34:6:\n-    27:12-34:6: FalseEdge: falseEdge -&gt; [real: bb36, imaginary: bb35]\">        </span><span class=\"code odd\" style=\"--layer: 5\" title=\"bb46: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    28:9-30:10: Assign: _30 = const ()\n-    28:9-30:10: Goto: goto -&gt; bb48\"><span class=\"annotation\">46\u298a</span></span><span class=\"code even\" style=\"--layer: 6\" title=\"bb47: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    29:13-29:26: Assign: _21 = const 0_i32\n-    28:61-30:10: Assign: _30 = const ()\n-    28:9-30:10: Goto: goto -&gt; bb48\"><span class=\"annotation\">47\u298a</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb45: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    28:9-30:10: FalseEdge: falseEdge -&gt; [real: bb47, imaginary: bb46]\"><span class=\"annotation\">45\u298a</span>if </span><span class=\"code even\" style=\"--layer: 8\" title=\"bb44: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:41-28:42: StorageDead: StorageDead(_35)\n-    28:41-28:42: StorageDead: StorageDead(_33)\n-    28:12-28:60: SwitchInt: switchInt(move _32) -&gt; [false: bb39, otherwise: bb37]\"><span class=\"annotation\">44\u298a</span></span><span class=\"code even\" style=\"--layer: 9\" title=\"bb38: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:12-28:60: Assign: _31 = const false\n-    28:12-28:60: Goto: goto -&gt; bb40\"><span class=\"annotation\">38\u298a</span></span><span class=\"code even\" style=\"--layer: 10\" title=\"bb39: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:46-28:60: StorageLive: StorageLive(_37)\n-    28:46-28:55: StorageLive: StorageLive(_38)\n-    28:46-28:55: Assign: _38 = _21\n-    28:46-28:60: Assign: _37 = Ne(move _38, const 9_i32)\n-    28:59-28:60: StorageDead: StorageDead(_38)\n-    28:12-28:60: SwitchInt: switchInt(move _37) -&gt; [false: bb38, otherwise: bb37]\"><span class=\"annotation\">39\u298a</span></span><span class=\"code even\" style=\"--layer: 11\" title=\"bb40: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:59-28:60: StorageDead: StorageDead(_37)\n-    28:59-28:60: StorageDead: StorageDead(_32)\n-    28:12-28:60: FakeRead: FakeRead(ForMatchedPlace, _31)\n-    28:9-30:10: SwitchInt: switchInt(_31) -&gt; [false: bb46, otherwise: bb45]\"><span class=\"annotation\">40\u298a</span></span><span class=\"code even\" style=\"--layer: 12\" title=\"bb36: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:9-30:10: StorageLive: StorageLive(_30)\n-    28:12-28:60: StorageLive: StorageLive(_31)\n-    28:12-28:42: StorageLive: StorageLive(_32)\n-    28:12-28:25: StorageLive: StorageLive(_33)\n-    28:12-28:21: StorageLive: StorageLive(_34)\n-    28:12-28:21: Assign: _34 = _21\n-    28:12-28:25: Assign: _33 = Lt(move _34, const 1_i32)\n-    28:24-28:25: StorageDead: StorageDead(_34)\n-    28:12-28:42: SwitchInt: switchInt(move _33) -&gt; [false: bb43, otherwise: bb41]\"><span class=\"annotation\">36\u298a</span></span><span class=\"code even\" style=\"--layer: 13\" title=\"bb37: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:12-28:60: Assign: _31 = const true\n-    28:12-28:60: Goto: goto -&gt; bb40\"><span class=\"annotation\">37\u298a</span></span><span class=\"code even\" style=\"--layer: 14\" title=\"bb41: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:42:\n-    28:12-28:42: Assign: _32 = const true\n-    28:12-28:42: Goto: goto -&gt; bb44\"><span class=\"annotation\">41\u298a</span></span><span class=\"code even\" style=\"--layer: 15\" title=\"bb42: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:42:\n-    28:12-28:42: Assign: _32 = const false\n-    28:12-28:42: Goto: goto -&gt; bb44\"><span class=\"annotation\">42\u298a</span></span><span class=\"code even\" style=\"--layer: 16\" title=\"bb43: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:42:\n-    28:29-28:42: StorageLive: StorageLive(_35)\n-    28:29-28:38: StorageLive: StorageLive(_36)\n-    28:29-28:38: Assign: _36 = _21\n-    28:29-28:42: Assign: _35 = Gt(move _36, const 5_i32)\n-    28:41-28:42: StorageDead: StorageDead(_36)\n-    28:12-28:42: SwitchInt: switchInt(move _35) -&gt; [false: bb42, otherwise: bb41]\"><span class=\"annotation\">43\u298a</span>countdown &lt; 1 || countdown &gt; 5<span class=\"annotation\">\u298943</span></span><span class=\"code even\" style=\"--layer: 15\" title=\"bb42: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:42:\n-    28:12-28:42: Assign: _32 = const false\n-    28:12-28:42: Goto: goto -&gt; bb44\"><span class=\"annotation\">\u298942</span></span><span class=\"code even\" style=\"--layer: 14\" title=\"bb41: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:42:\n-    28:12-28:42: Assign: _32 = const true\n-    28:12-28:42: Goto: goto -&gt; bb44\"><span class=\"annotation\">\u298941</span></span><span class=\"code even\" style=\"--layer: 13\" title=\"bb37: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:12-28:60: Assign: _31 = const true\n-    28:12-28:60: Goto: goto -&gt; bb40\"> || countdown != 9<span class=\"annotation\">\u298937</span></span><span class=\"code even\" style=\"--layer: 12\" title=\"bb36: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:9-30:10: StorageLive: StorageLive(_30)\n-    28:12-28:60: StorageLive: StorageLive(_31)\n-    28:12-28:42: StorageLive: StorageLive(_32)\n-    28:12-28:25: StorageLive: StorageLive(_33)\n-    28:12-28:21: StorageLive: StorageLive(_34)\n-    28:12-28:21: Assign: _34 = _21\n-    28:12-28:25: Assign: _33 = Lt(move _34, const 1_i32)\n-    28:24-28:25: StorageDead: StorageDead(_34)\n-    28:12-28:42: SwitchInt: switchInt(move _33) -&gt; [false: bb43, otherwise: bb41]\"><span class=\"annotation\">\u298936</span></span><span class=\"code even\" style=\"--layer: 11\" title=\"bb40: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:59-28:60: StorageDead: StorageDead(_37)\n-    28:59-28:60: StorageDead: StorageDead(_32)\n-    28:12-28:60: FakeRead: FakeRead(ForMatchedPlace, _31)\n-    28:9-30:10: SwitchInt: switchInt(_31) -&gt; [false: bb46, otherwise: bb45]\"><span class=\"annotation\">\u298940</span></span><span class=\"code even\" style=\"--layer: 10\" title=\"bb39: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:46-28:60: StorageLive: StorageLive(_37)\n-    28:46-28:55: StorageLive: StorageLive(_38)\n-    28:46-28:55: Assign: _38 = _21\n-    28:46-28:60: Assign: _37 = Ne(move _38, const 9_i32)\n-    28:59-28:60: StorageDead: StorageDead(_38)\n-    28:12-28:60: SwitchInt: switchInt(move _37) -&gt; [false: bb38, otherwise: bb37]\"><span class=\"annotation\">\u298939</span></span><span class=\"code even\" style=\"--layer: 9\" title=\"bb38: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:12-28:60: Assign: _31 = const false\n-    28:12-28:60: Goto: goto -&gt; bb40\"><span class=\"annotation\">\u298938</span></span><span class=\"code even\" style=\"--layer: 8\" title=\"bb44: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:41-28:42: StorageDead: StorageDead(_35)\n-    28:41-28:42: StorageDead: StorageDead(_33)\n-    28:12-28:60: SwitchInt: switchInt(move _32) -&gt; [false: bb39, otherwise: bb37]\"><span class=\"annotation\">\u298944</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb45: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    28:9-30:10: FalseEdge: falseEdge -&gt; [real: bb47, imaginary: bb46]\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 7\" title=\"bb45: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    28:9-30:10: FalseEdge: falseEdge -&gt; [real: bb47, imaginary: bb46]\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 7\" title=\"bb45: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    28:9-30:10: FalseEdge: falseEdge -&gt; [real: bb47, imaginary: bb46]\">        </span><span class=\"code odd\" style=\"--layer: 8\" title=\"bb48: ../instrument-coverage/coverage_of_if_else.rs:30:9: 31:23:\n-    30:9-30:10: StorageDead: StorageDead(_31)\n-    30:9-30:10: StorageDead: StorageDead(_30)\n-    31:9-31:23: Assign: _39 = CheckedSub(_21, const 5_i32)\n-    31:9-31:23: Assert: assert(!move (_39.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _21, const 5_i32) -&gt; [success: bb49, unwind: bb78]\"><span class=\"annotation\">48\u298a</span>}</span><span class=\"code odd\" style=\"--layer: 5\" title=\"bb46: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    28:9-30:10: Assign: _30 = const ()\n-    28:9-30:10: Goto: goto -&gt; bb48\"><span class=\"annotation\">\u298946</span></span><span class=\"code even\" style=\"--layer: 6\" title=\"bb47: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    29:13-29:26: Assign: _21 = const 0_i32\n-    28:61-30:10: Assign: _30 = const ()\n-    28:9-30:10: Goto: goto -&gt; bb48\"><span class=\"annotation\">\u298947</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb45: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    28:9-30:10: FalseEdge: falseEdge -&gt; [real: bb47, imaginary: bb46]\"><span class=\"annotation\">\u298945</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb45: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    28:9-30:10: FalseEdge: falseEdge -&gt; [real: bb47, imaginary: bb46]\"><span class=\"annotation\">\u298945</span></span><span class=\"code odd\" style=\"--layer: 8\" title=\"bb48: ../instrument-coverage/coverage_of_if_else.rs:30:9: 31:23:\n-    30:9-30:10: StorageDead: StorageDead(_31)\n-    30:9-30:10: StorageDead: StorageDead(_30)\n-    31:9-31:23: Assign: _39 = CheckedSub(_21, const 5_i32)\n-    31:9-31:23: Assert: assert(!move (_39.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _21, const 5_i32) -&gt; [success: bb49, unwind: bb78]\"></span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 8\" title=\"bb48: ../instrument-coverage/coverage_of_if_else.rs:30:9: 31:23:\n-    30:9-30:10: StorageDead: StorageDead(_31)\n-    30:9-30:10: StorageDead: StorageDead(_30)\n-    31:9-31:23: Assign: _39 = CheckedSub(_21, const 5_i32)\n-    31:9-31:23: Assert: assert(!move (_39.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _21, const 5_i32) -&gt; [success: bb49, unwind: bb78]\">        countdown -= 5<span class=\"annotation\">\u298948</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"bb34: ../instrument-coverage/coverage_of_if_else.rs:27:12: 34:6:\n-    27:12-34:6: FalseEdge: falseEdge -&gt; [real: bb36, imaginary: bb35]\">;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb34: ../instrument-coverage/coverage_of_if_else.rs:27:12: 34:6:\n-    27:12-34:6: FalseEdge: falseEdge -&gt; [real: bb36, imaginary: bb35]\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb34: ../instrument-coverage/coverage_of_if_else.rs:27:12: 34:6:\n-    27:12-34:6: FalseEdge: falseEdge -&gt; [real: bb36, imaginary: bb35]\">        return;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb34: ../instrument-coverage/coverage_of_if_else.rs:27:12: 34:6:\n-    27:12-34:6: FalseEdge: falseEdge -&gt; [real: bb36, imaginary: bb35]\">    }<span class=\"annotation\">\u298934</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb30: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    25:5-34:6: FalseEdge: falseEdge -&gt; [real: bb32, imaginary: bb31]\"><span class=\"annotation\">\u298930</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb33: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    26:9-26:23: Assign: _21 = move (_27.0: i32)\n-    25:22-27:6: Assign: _24 = const ()\n-    25:5-34:6: Goto: goto -&gt; bb50\"><span class=\"annotation\">\u298933</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"bb49: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    31:9-31:23: Assign: _21 = move (_39.0: i32)\n-    27:29-32:6: Assign: _24 = const ()\n-    34:5-34:6: StorageDead: StorageDead(_28)\n-    25:5-34:6: Goto: goto -&gt; bb50\"><span class=\"annotation\">\u298949</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"bb52: ../instrument-coverage/coverage_of_if_else.rs:37:5: 39:6:\n-    37:5-39:6: Assign: _42 = const ()\n-    37:5-39:6: Goto: goto -&gt; bb54\"><span class=\"annotation\">52\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb51: ../instrument-coverage/coverage_of_if_else.rs:37:5: 39:6:\n-    37:5-39:6: FalseEdge: falseEdge -&gt; [real: bb53, imaginary: bb52]\"><span class=\"annotation\">51\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb53: ../instrument-coverage/coverage_of_if_else.rs:37:5: 39:6:\n-    38:9-38:23: Assign: _41 = const 10_i32\n-    37:13-39:6: Assign: _42 = const ()\n-    37:5-39:6: Goto: goto -&gt; bb54\"><span class=\"annotation\">53\u298a</span>if </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb50: ../instrument-coverage/coverage_of_if_else.rs:37:8: 37:12:\n-    34:5-34:6: StorageDead: StorageDead(_25)\n-    34:5-34:6: StorageDead: StorageDead(_24)\n-    36:9-36:22: StorageLive: StorageLive(_41)\n-    36:25-36:26: Assign: _41 = const 0_i32\n-    36:9-36:22: FakeRead: FakeRead(ForLet, _41)\n-    37:5-39:6: StorageLive: StorageLive(_42)\n-    37:8-37:12: StorageLive: StorageLive(_43)\n-    37:8-37:12: Assign: _43 = const true\n-    37:8-37:12: FakeRead: FakeRead(ForMatchedPlace, _43)\n-    37:5-39:6: SwitchInt: switchInt(_43) -&gt; [false: bb52, otherwise: bb51]\"><span class=\"annotation\">50\u298a</span>true<span class=\"annotation\">\u298950</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb53: ../instrument-coverage/coverage_of_if_else.rs:37:5: 39:6:\n-    38:9-38:23: Assign: _41 = const 10_i32\n-    37:13-39:6: Assign: _42 = const ()\n-    37:5-39:6: Goto: goto -&gt; bb54\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb53: ../instrument-coverage/coverage_of_if_else.rs:37:5: 39:6:\n-    38:9-38:23: Assign: _41 = const 10_i32\n-    37:13-39:6: Assign: _42 = const ()\n-    37:5-39:6: Goto: goto -&gt; bb54\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb53: ../instrument-coverage/coverage_of_if_else.rs:37:5: 39:6:\n-    38:9-38:23: Assign: _41 = const 10_i32\n-    37:13-39:6: Assign: _42 = const ()\n-    37:5-39:6: Goto: goto -&gt; bb54\">    }<span class=\"annotation\">\u298953</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb51: ../instrument-coverage/coverage_of_if_else.rs:37:5: 39:6:\n-    37:5-39:6: FalseEdge: falseEdge -&gt; [real: bb53, imaginary: bb52]\"><span class=\"annotation\">\u298951</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"bb52: ../instrument-coverage/coverage_of_if_else.rs:37:5: 39:6:\n-    37:5-39:6: Assign: _42 = const ()\n-    37:5-39:6: Goto: goto -&gt; bb54\"><span class=\"annotation\">\u298952</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"bb74: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    47:9-47:23: Assign: _41 = move (_58.0: i32)\n-    43:29-48:6: Assign: _0 = const ()\n-    50:5-50:6: StorageDead: StorageDead(_47)\n-    41:5-50:6: Goto: goto -&gt; bb75\"><span class=\"annotation\">74\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb55: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    41:5-50:6: FalseEdge: falseEdge -&gt; [real: bb57, imaginary: bb56]\"><span class=\"annotation\">55\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb58: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    42:9-42:23: Assign: _41 = move (_46.0: i32)\n-    41:22-43:6: Assign: _0 = const ()\n-    41:5-50:6: Goto: goto -&gt; bb75\"><span class=\"annotation\">58\u298a</span>if </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb54: ../instrument-coverage/coverage_of_if_else.rs:41:8: 41:21:\n-    39:5-39:6: StorageDead: StorageDead(_43)\n-    39:5-39:6: StorageDead: StorageDead(_42)\n-    41:8-41:21: StorageLive: StorageLive(_44)\n-    41:8-41:17: StorageLive: StorageLive(_45)\n-    41:8-41:17: Assign: _45 = _41\n-    41:8-41:21: Assign: _44 = Gt(move _45, const 7_i32)\n-    41:20-41:21: StorageDead: StorageDead(_45)\n-    41:8-41:21: FakeRead: FakeRead(ForMatchedPlace, _44)\n-    41:5-50:6: SwitchInt: switchInt(_44) -&gt; [false: bb56, otherwise: bb55]\"><span class=\"annotation\">54\u298a</span>countdown &gt; 7<span class=\"annotation\">\u298954</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb58: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    42:9-42:23: Assign: _41 = move (_46.0: i32)\n-    41:22-43:6: Assign: _0 = const ()\n-    41:5-50:6: Goto: goto -&gt; bb75\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb58: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    42:9-42:23: Assign: _41 = move (_46.0: i32)\n-    41:22-43:6: Assign: _0 = const ()\n-    41:5-50:6: Goto: goto -&gt; bb75\">        </span><span class=\"code odd\" style=\"--layer: 4\" title=\"bb57: ../instrument-coverage/coverage_of_if_else.rs:42:9: 42:23:\n-    42:9-42:23: Assign: _46 = CheckedSub(_41, const 4_i32)\n-    42:9-42:23: Assert: assert(!move (_46.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _41, const 4_i32) -&gt; [success: bb58, unwind: bb78]\"><span class=\"annotation\">57\u298a</span>countdown -= 4<span class=\"annotation\">\u298957</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb58: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    42:9-42:23: Assign: _41 = move (_46.0: i32)\n-    41:22-43:6: Assign: _0 = const ()\n-    41:5-50:6: Goto: goto -&gt; bb75\">;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb58: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    42:9-42:23: Assign: _41 = move (_46.0: i32)\n-    41:22-43:6: Assign: _0 = const ()\n-    41:5-50:6: Goto: goto -&gt; bb75\">    } else </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb59: ../instrument-coverage/coverage_of_if_else.rs:43:12: 50:6:\n-    43:12-50:6: FalseEdge: falseEdge -&gt; [real: bb61, imaginary: bb60]\"><span class=\"annotation\">59\u298a</span>if </span><span class=\"code even\" style=\"--layer: 5\" title=\"bb56: ../instrument-coverage/coverage_of_if_else.rs:43:15: 43:28:\n-    43:15-43:28: StorageLive: StorageLive(_47)\n-    43:15-43:24: StorageLive: StorageLive(_48)\n-    43:15-43:24: Assign: _48 = _41\n-    43:15-43:28: Assign: _47 = Gt(move _48, const 2_i32)\n-    43:27-43:28: StorageDead: StorageDead(_48)\n-    43:15-43:28: FakeRead: FakeRead(ForMatchedPlace, _47)\n-    43:12-50:6: SwitchInt: switchInt(_47) -&gt; [false: bb60, otherwise: bb59]\"><span class=\"annotation\">56\u298a</span>countdown &gt; 2<span class=\"annotation\">\u298956</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"bb59: ../instrument-coverage/coverage_of_if_else.rs:43:12: 50:6:\n-    43:12-50:6: FalseEdge: falseEdge -&gt; [real: bb61, imaginary: bb60]\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb59: ../instrument-coverage/coverage_of_if_else.rs:43:12: 50:6:\n-    43:12-50:6: FalseEdge: falseEdge -&gt; [real: bb61, imaginary: bb60]\">        </span><span class=\"code odd\" style=\"--layer: 5\" title=\"bb71: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    44:9-46:10: Assign: _49 = const ()\n-    44:9-46:10: Goto: goto -&gt; bb73\"><span class=\"annotation\">71\u298a</span></span><span class=\"code even\" style=\"--layer: 6\" title=\"bb72: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    45:13-45:26: Assign: _41 = const 0_i32\n-    44:61-46:10: Assign: _49 = const ()\n-    44:9-46:10: Goto: goto -&gt; bb73\"><span class=\"annotation\">72\u298a</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb70: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    44:9-46:10: FalseEdge: falseEdge -&gt; [real: bb72, imaginary: bb71]\"><span class=\"annotation\">70\u298a</span>if </span><span class=\"code even\" style=\"--layer: 8\" title=\"bb63: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:12-44:60: Assign: _50 = const false\n-    44:12-44:60: Goto: goto -&gt; bb65\"><span class=\"annotation\">63\u298a</span></span><span class=\"code even\" style=\"--layer: 9\" title=\"bb64: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:46-44:60: StorageLive: StorageLive(_56)\n-    44:46-44:55: StorageLive: StorageLive(_57)\n-    44:46-44:55: Assign: _57 = _41\n-    44:46-44:60: Assign: _56 = Ne(move _57, const 9_i32)\n-    44:59-44:60: StorageDead: StorageDead(_57)\n-    44:12-44:60: SwitchInt: switchInt(move _56) -&gt; [false: bb63, otherwise: bb62]\"><span class=\"annotation\">64\u298a</span></span><span class=\"code even\" style=\"--layer: 10\" title=\"bb65: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:59-44:60: StorageDead: StorageDead(_56)\n-    44:59-44:60: StorageDead: StorageDead(_51)\n-    44:12-44:60: FakeRead: FakeRead(ForMatchedPlace, _50)\n-    44:9-46:10: SwitchInt: switchInt(_50) -&gt; [false: bb71, otherwise: bb70]\"><span class=\"annotation\">65\u298a</span></span><span class=\"code even\" style=\"--layer: 11\" title=\"bb62: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:12-44:60: Assign: _50 = const true\n-    44:12-44:60: Goto: goto -&gt; bb65\"><span class=\"annotation\">62\u298a</span></span><span class=\"code even\" style=\"--layer: 12\" title=\"bb69: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:41-44:42: StorageDead: StorageDead(_54)\n-    44:41-44:42: StorageDead: StorageDead(_52)\n-    44:12-44:60: SwitchInt: switchInt(move _51) -&gt; [false: bb64, otherwise: bb62]\"><span class=\"annotation\">69\u298a</span></span><span class=\"code even\" style=\"--layer: 13\" title=\"bb61: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:9-46:10: StorageLive: StorageLive(_49)\n-    44:12-44:60: StorageLive: StorageLive(_50)\n-    44:12-44:42: StorageLive: StorageLive(_51)\n-    44:12-44:25: StorageLive: StorageLive(_52)\n-    44:12-44:21: StorageLive: StorageLive(_53)\n-    44:12-44:21: Assign: _53 = _41\n-    44:12-44:25: Assign: _52 = Lt(move _53, const 1_i32)\n-    44:24-44:25: StorageDead: StorageDead(_53)\n-    44:12-44:42: SwitchInt: switchInt(move _52) -&gt; [false: bb68, otherwise: bb66]\"><span class=\"annotation\">61\u298a</span></span><span class=\"code even\" style=\"--layer: 14\" title=\"bb67: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:42:\n-    44:12-44:42: Assign: _51 = const false\n-    44:12-44:42: Goto: goto -&gt; bb69\"><span class=\"annotation\">67\u298a</span></span><span class=\"code even\" style=\"--layer: 15\" title=\"bb68: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:42:\n-    44:29-44:42: StorageLive: StorageLive(_54)\n-    44:29-44:38: StorageLive: StorageLive(_55)\n-    44:29-44:38: Assign: _55 = _41\n-    44:29-44:42: Assign: _54 = Gt(move _55, const 5_i32)\n-    44:41-44:42: StorageDead: StorageDead(_55)\n-    44:12-44:42: SwitchInt: switchInt(move _54) -&gt; [false: bb67, otherwise: bb66]\"><span class=\"annotation\">68\u298a</span></span><span class=\"code even\" style=\"--layer: 16\" title=\"bb66: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:42:\n-    44:12-44:42: Assign: _51 = const true\n-    44:12-44:42: Goto: goto -&gt; bb69\"><span class=\"annotation\">66\u298a</span>countdown &lt; 1 || countdown &gt; 5<span class=\"annotation\">\u298966</span></span><span class=\"code even\" style=\"--layer: 15\" title=\"bb68: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:42:\n-    44:29-44:42: StorageLive: StorageLive(_54)\n-    44:29-44:38: StorageLive: StorageLive(_55)\n-    44:29-44:38: Assign: _55 = _41\n-    44:29-44:42: Assign: _54 = Gt(move _55, const 5_i32)\n-    44:41-44:42: StorageDead: StorageDead(_55)\n-    44:12-44:42: SwitchInt: switchInt(move _54) -&gt; [false: bb67, otherwise: bb66]\"><span class=\"annotation\">\u298968</span></span><span class=\"code even\" style=\"--layer: 14\" title=\"bb67: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:42:\n-    44:12-44:42: Assign: _51 = const false\n-    44:12-44:42: Goto: goto -&gt; bb69\"><span class=\"annotation\">\u298967</span></span><span class=\"code even\" style=\"--layer: 13\" title=\"bb61: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:9-46:10: StorageLive: StorageLive(_49)\n-    44:12-44:60: StorageLive: StorageLive(_50)\n-    44:12-44:42: StorageLive: StorageLive(_51)\n-    44:12-44:25: StorageLive: StorageLive(_52)\n-    44:12-44:21: StorageLive: StorageLive(_53)\n-    44:12-44:21: Assign: _53 = _41\n-    44:12-44:25: Assign: _52 = Lt(move _53, const 1_i32)\n-    44:24-44:25: StorageDead: StorageDead(_53)\n-    44:12-44:42: SwitchInt: switchInt(move _52) -&gt; [false: bb68, otherwise: bb66]\"> || countdown != 9<span class=\"annotation\">\u298961</span></span><span class=\"code even\" style=\"--layer: 12\" title=\"bb69: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:41-44:42: StorageDead: StorageDead(_54)\n-    44:41-44:42: StorageDead: StorageDead(_52)\n-    44:12-44:60: SwitchInt: switchInt(move _51) -&gt; [false: bb64, otherwise: bb62]\"><span class=\"annotation\">\u298969</span></span><span class=\"code even\" style=\"--layer: 11\" title=\"bb62: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:12-44:60: Assign: _50 = const true\n-    44:12-44:60: Goto: goto -&gt; bb65\"><span class=\"annotation\">\u298962</span></span><span class=\"code even\" style=\"--layer: 10\" title=\"bb65: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:59-44:60: StorageDead: StorageDead(_56)\n-    44:59-44:60: StorageDead: StorageDead(_51)\n-    44:12-44:60: FakeRead: FakeRead(ForMatchedPlace, _50)\n-    44:9-46:10: SwitchInt: switchInt(_50) -&gt; [false: bb71, otherwise: bb70]\"><span class=\"annotation\">\u298965</span></span><span class=\"code even\" style=\"--layer: 9\" title=\"bb64: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:46-44:60: StorageLive: StorageLive(_56)\n-    44:46-44:55: StorageLive: StorageLive(_57)\n-    44:46-44:55: Assign: _57 = _41\n-    44:46-44:60: Assign: _56 = Ne(move _57, const 9_i32)\n-    44:59-44:60: StorageDead: StorageDead(_57)\n-    44:12-44:60: SwitchInt: switchInt(move _56) -&gt; [false: bb63, otherwise: bb62]\"><span class=\"annotation\">\u298964</span></span><span class=\"code even\" style=\"--layer: 8\" title=\"bb63: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:12-44:60: Assign: _50 = const false\n-    44:12-44:60: Goto: goto -&gt; bb65\"><span class=\"annotation\">\u298963</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb70: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    44:9-46:10: FalseEdge: falseEdge -&gt; [real: bb72, imaginary: bb71]\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 7\" title=\"bb70: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    44:9-46:10: FalseEdge: falseEdge -&gt; [real: bb72, imaginary: bb71]\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 7\" title=\"bb70: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    44:9-46:10: FalseEdge: falseEdge -&gt; [real: bb72, imaginary: bb71]\">        </span><span class=\"code odd\" style=\"--layer: 8\" title=\"bb73: ../instrument-coverage/coverage_of_if_else.rs:46:9: 47:23:\n-    46:9-46:10: StorageDead: StorageDead(_50)\n-    46:9-46:10: StorageDead: StorageDead(_49)\n-    47:9-47:23: Assign: _58 = CheckedSub(_41, const 5_i32)\n-    47:9-47:23: Assert: assert(!move (_58.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _41, const 5_i32) -&gt; [success: bb74, unwind: bb78]\"><span class=\"annotation\">73\u298a</span>}</span><span class=\"code odd\" style=\"--layer: 5\" title=\"bb71: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    44:9-46:10: Assign: _49 = const ()\n-    44:9-46:10: Goto: goto -&gt; bb73\"><span class=\"annotation\">\u298971</span></span><span class=\"code even\" style=\"--layer: 6\" title=\"bb72: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    45:13-45:26: Assign: _41 = const 0_i32\n-    44:61-46:10: Assign: _49 = const ()\n-    44:9-46:10: Goto: goto -&gt; bb73\"><span class=\"annotation\">\u298972</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb70: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    44:9-46:10: FalseEdge: falseEdge -&gt; [real: bb72, imaginary: bb71]\"><span class=\"annotation\">\u298970</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb70: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    44:9-46:10: FalseEdge: falseEdge -&gt; [real: bb72, imaginary: bb71]\"><span class=\"annotation\">\u298970</span></span><span class=\"code odd\" style=\"--layer: 8\" title=\"bb73: ../instrument-coverage/coverage_of_if_else.rs:46:9: 47:23:\n-    46:9-46:10: StorageDead: StorageDead(_50)\n-    46:9-46:10: StorageDead: StorageDead(_49)\n-    47:9-47:23: Assign: _58 = CheckedSub(_41, const 5_i32)\n-    47:9-47:23: Assert: assert(!move (_58.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _41, const 5_i32) -&gt; [success: bb74, unwind: bb78]\"></span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 8\" title=\"bb73: ../instrument-coverage/coverage_of_if_else.rs:46:9: 47:23:\n-    46:9-46:10: StorageDead: StorageDead(_50)\n-    46:9-46:10: StorageDead: StorageDead(_49)\n-    47:9-47:23: Assign: _58 = CheckedSub(_41, const 5_i32)\n-    47:9-47:23: Assert: assert(!move (_58.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _41, const 5_i32) -&gt; [success: bb74, unwind: bb78]\">        countdown -= 5<span class=\"annotation\">\u298973</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"bb59: ../instrument-coverage/coverage_of_if_else.rs:43:12: 50:6:\n-    43:12-50:6: FalseEdge: falseEdge -&gt; [real: bb61, imaginary: bb60]\">;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb59: ../instrument-coverage/coverage_of_if_else.rs:43:12: 50:6:\n-    43:12-50:6: FalseEdge: falseEdge -&gt; [real: bb61, imaginary: bb60]\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb59: ../instrument-coverage/coverage_of_if_else.rs:43:12: 50:6:\n-    43:12-50:6: FalseEdge: falseEdge -&gt; [real: bb61, imaginary: bb60]\">        return;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb59: ../instrument-coverage/coverage_of_if_else.rs:43:12: 50:6:\n-    43:12-50:6: FalseEdge: falseEdge -&gt; [real: bb61, imaginary: bb60]\">    }<span class=\"annotation\">\u298959</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb58: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    42:9-42:23: Assign: _41 = move (_46.0: i32)\n-    41:22-43:6: Assign: _0 = const ()\n-    41:5-50:6: Goto: goto -&gt; bb75\"><span class=\"annotation\">\u298958</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb55: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    41:5-50:6: FalseEdge: falseEdge -&gt; [real: bb57, imaginary: bb56]\"><span class=\"annotation\">\u298955</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"bb74: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    47:9-47:23: Assign: _41 = move (_58.0: i32)\n-    43:29-48:6: Assign: _0 = const ()\n-    50:5-50:6: StorageDead: StorageDead(_47)\n-    41:5-50:6: Goto: goto -&gt; bb75\"><span class=\"annotation\">\u298974</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"bb75: ../instrument-coverage/coverage_of_if_else.rs:51:1: 51:2:\n-    51:1-51:2: StorageDead: StorageDead(_41)\n-    51:1-51:2: StorageDead: StorageDead(_21)\n-    51:1-51:2: StorageDead: StorageDead(_1)\n-    51:1-51:2: StorageDead: StorageDead(_44)\n-    51:2-51:2: Goto: goto -&gt; bb77\"><span class=\"annotation\">75\u298a</span>}<span class=\"annotation\">\u298975</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"bb77: ../instrument-coverage/coverage_of_if_else.rs:51:2: 51:2:\n-    51:2-51:2: Return: return\"><span class=\"annotation\">77\u298a</span>\u2038<span class=\"annotation\">\u298977</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "494e6f20ea7635d083740659934cc87244889565", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.drop_trait/drop_trait.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,119 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>drop_trait.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 13\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n+15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n+17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n+17:9-17:13: @0[5]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>_firecracker = Firework { strength: 1 };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n+15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n+17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n+17:9-17:13: @0[5]: FakeRead(ForLet, _2)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n+15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n+17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n+17:9-17:13: @0[5]: FakeRead(ForLet, _2)\">    let _tnt = Firework { strength: 100 }<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:8-19:12: @0[8]: _4 = const true\n+19:8-19:12: @0[9]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:18-20:41: @3[6]: _21 = const main::promoted[1]\n+20:18-20:41: @3[7]: _11 = &amp;(*_21)\n+20:18-20:41: @3[8]: _10 = &amp;(*_11)\n+20:18-20:41: @3[9]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n+20:9-20:43: @3[15]: _17 = ()\n+20:9-20:43: @3[16]: FakeRead(ForMatchedPlace, _17)\n+20:9-20:43: @3[17]: _20 = const main::promoted[0]\n+20:9-20:43: @3[18]: _15 = &amp;(*_20)\n+20:9-20:43: @3[19]: _14 = &amp;(*_15)\n+20:9-20:43: @3[20]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:9-20:43: @3.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb4, unwind: bb12]\n+20:9-20:43: @4.Call: _7 = _print(move _8) -&gt; [return: bb5, unwind: bb12]\n+20:9-20:43: @5[5]: _6 = const ()\n+21:16-21:22: @5[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@1,3,4,5,9,10\u298a</span>println!(\"Exiting with error...\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"20:18-20:41: @3[6]: _21 = const main::promoted[1]\n+20:18-20:41: @3[7]: _11 = &amp;(*_21)\n+20:18-20:41: @3[8]: _10 = &amp;(*_11)\n+20:18-20:41: @3[9]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n+20:9-20:43: @3[15]: _17 = ()\n+20:9-20:43: @3[16]: FakeRead(ForMatchedPlace, _17)\n+20:9-20:43: @3[17]: _20 = const main::promoted[0]\n+20:9-20:43: @3[18]: _15 = &amp;(*_20)\n+20:9-20:43: @3[19]: _14 = &amp;(*_15)\n+20:9-20:43: @3[20]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:9-20:43: @3.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb4, unwind: bb12]\n+20:9-20:43: @4.Call: _7 = _print(move _8) -&gt; [return: bb5, unwind: bb12]\n+20:9-20:43: @5[5]: _6 = const ()\n+21:16-21:22: @5[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\">        return Err(1)<span class=\"annotation\">\u2989@1,3,4,5,9,10</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let _ = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n+26:8-26:10: @6[2]: _19 = ()\n+26:5-26:11: @6[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"><span class=\"annotation\">@2,6,7,8\u298a</span>Firework { strength: 1000 };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n+26:8-26:10: @6[2]: _19 = ()\n+26:5-26:11: @6[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n+26:8-26:10: @6[2]: _19 = ()\n+26:5-26:11: @6[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\">    Ok(())<span class=\"annotation\">\u2989@2,6,7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:2-27:2: @11.Return: return\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "9530d12fb493e0ad84fa287912471255874fd264", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.drop_trait/drop_trait.{impl#0}-drop.-------.InstrumentCoverage.0.html", "status": "added", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,123 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>drop_trait.{impl#0}-drop - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn drop(&amp;mut self) </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as Drop&gt;::drop::promoted[0]\n+10:18-10:36: @0[7]: _7 = &amp;(*_19)\n+10:18-10:36: @0[8]: _6 = &amp;(*_7)\n+10:18-10:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+10:38-10:51: @0[17]: _14 = &amp;((*_1).0: i32)\n+10:9-10:53: @0[18]: _13 = (move _14,)\n+10:9-10:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n+10:9-10:53: @0[22]: _15 = (_13.0: &amp;i32)\n+10:9-10:53: @0[25]: _17 = &amp;(*_15)\n+10:9-10:53: @0[27]: _18 = &lt;i32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+10:9-10:53: @0.Call: _16 = ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+10:9-10:53: @1[2]: _12 = [move _16]\n+10:9-10:53: @1[5]: _11 = &amp;_12\n+10:9-10:53: @1[6]: _10 = &amp;(*_11)\n+10:9-10:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+10:9-10:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+10:9-10:53: @3[6]: _2 = const ()\n+9:24-11:6: @3[8]: _0 = const ()\n+11:6-11:6: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as Drop&gt;::drop::promoted[0]\n+10:18-10:36: @0[7]: _7 = &amp;(*_19)\n+10:18-10:36: @0[8]: _6 = &amp;(*_7)\n+10:18-10:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+10:38-10:51: @0[17]: _14 = &amp;((*_1).0: i32)\n+10:9-10:53: @0[18]: _13 = (move _14,)\n+10:9-10:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n+10:9-10:53: @0[22]: _15 = (_13.0: &amp;i32)\n+10:9-10:53: @0[25]: _17 = &amp;(*_15)\n+10:9-10:53: @0[27]: _18 = &lt;i32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+10:9-10:53: @0.Call: _16 = ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+10:9-10:53: @1[2]: _12 = [move _16]\n+10:9-10:53: @1[5]: _11 = &amp;_12\n+10:9-10:53: @1[6]: _10 = &amp;(*_11)\n+10:9-10:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+10:9-10:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+10:9-10:53: @3[6]: _2 = const ()\n+9:24-11:6: @3[8]: _0 = const ()\n+11:6-11:6: @3.Return: return\">        println!(\"BOOM times {}!!!\", self.strength);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as Drop&gt;::drop::promoted[0]\n+10:18-10:36: @0[7]: _7 = &amp;(*_19)\n+10:18-10:36: @0[8]: _6 = &amp;(*_7)\n+10:18-10:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+10:38-10:51: @0[17]: _14 = &amp;((*_1).0: i32)\n+10:9-10:53: @0[18]: _13 = (move _14,)\n+10:9-10:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n+10:9-10:53: @0[22]: _15 = (_13.0: &amp;i32)\n+10:9-10:53: @0[25]: _17 = &amp;(*_15)\n+10:9-10:53: @0[27]: _18 = &lt;i32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+10:9-10:53: @0.Call: _16 = ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+10:9-10:53: @1[2]: _12 = [move _16]\n+10:9-10:53: @1[5]: _11 = &amp;_12\n+10:9-10:53: @1[6]: _10 = &amp;(*_11)\n+10:9-10:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+10:9-10:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+10:9-10:53: @3[6]: _2 = const ()\n+9:24-11:6: @3[8]: _0 = const ()\n+11:6-11:6: @3.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "6dc893d28ff524f756e7c41b824727d65aabbc92", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.generics/generics.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 167, "deletions": 0, "changes": 167, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,167 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>generics.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 21\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n+23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n+24:5-24:16: @0[5]: _3 = &amp;mut _1\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n+26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n+27:5-27:8: @1[7]: _6 = &amp;mut _4\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+28:5-28:8: @2[4]: _8 = &amp;mut _4\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\"><span class=\"annotation\">@0,1,2,3\u298a</span>mut firecracker = Firework { strength: 1 };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n+23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n+24:5-24:16: @0[5]: _3 = &amp;mut _1\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n+26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n+27:5-27:8: @1[7]: _6 = &amp;mut _4\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+28:5-28:8: @2[4]: _8 = &amp;mut _4\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\">    firecracker.set_strength(2);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n+23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n+24:5-24:16: @0[5]: _3 = &amp;mut _1\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n+26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n+27:5-27:8: @1[7]: _6 = &amp;mut _4\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+28:5-28:8: @2[4]: _8 = &amp;mut _4\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n+23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n+24:5-24:16: @0[5]: _3 = &amp;mut _1\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n+26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n+27:5-27:8: @1[7]: _6 = &amp;mut _4\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+28:5-28:8: @2[4]: _8 = &amp;mut _4\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\">    let mut tnt = Firework { strength: 100.1 };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n+23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n+24:5-24:16: @0[5]: _3 = &amp;mut _1\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n+26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n+27:5-27:8: @1[7]: _6 = &amp;mut _4\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+28:5-28:8: @2[4]: _8 = &amp;mut _4\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\">    tnt.set_strength(200.1);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n+23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n+24:5-24:16: @0[5]: _3 = &amp;mut _1\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n+26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n+27:5-27:8: @1[7]: _6 = &amp;mut _4\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+28:5-28:8: @2[4]: _8 = &amp;mut _4\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\">    tnt.set_strength(300.3)<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:8-30:12: @3[4]: _10 = const true\n+30:8-30:12: @3[5]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@0,1,2,3\u298a</span>true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:18-31:41: @6[6]: _27 = const main::promoted[1]\n+31:18-31:41: @6[7]: _17 = &amp;(*_27)\n+31:18-31:41: @6[8]: _16 = &amp;(*_17)\n+31:18-31:41: @6[9]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n+31:9-31:43: @6[15]: _23 = ()\n+31:9-31:43: @6[16]: FakeRead(ForMatchedPlace, _23)\n+31:9-31:43: @6[17]: _26 = const main::promoted[0]\n+31:9-31:43: @6[18]: _21 = &amp;(*_26)\n+31:9-31:43: @6[19]: _20 = &amp;(*_21)\n+31:9-31:43: @6[20]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+31:9-31:43: @6.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb7, unwind: bb15]\n+31:9-31:43: @7.Call: _13 = _print(move _14) -&gt; [return: bb8, unwind: bb15]\n+31:9-31:43: @8[5]: _12 = const ()\n+32:16-32:22: @8[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@4,6,7,8,12,13\u298a</span>println!(\"Exiting with error...\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:18-31:41: @6[6]: _27 = const main::promoted[1]\n+31:18-31:41: @6[7]: _17 = &amp;(*_27)\n+31:18-31:41: @6[8]: _16 = &amp;(*_17)\n+31:18-31:41: @6[9]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n+31:9-31:43: @6[15]: _23 = ()\n+31:9-31:43: @6[16]: FakeRead(ForMatchedPlace, _23)\n+31:9-31:43: @6[17]: _26 = const main::promoted[0]\n+31:9-31:43: @6[18]: _21 = &amp;(*_26)\n+31:9-31:43: @6[19]: _20 = &amp;(*_21)\n+31:9-31:43: @6[20]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+31:9-31:43: @6.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb7, unwind: bb15]\n+31:9-31:43: @7.Call: _13 = _print(move _14) -&gt; [return: bb8, unwind: bb15]\n+31:9-31:43: @8[5]: _12 = const ()\n+32:16-32:22: @8[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\">        return Err(1)<span class=\"annotation\">\u2989@4,6,7,8,12,13</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let _ = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:13-35:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n+37:8-37:10: @9[2]: _25 = ()\n+37:5-37:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"><span class=\"annotation\">@5,9,10,11\u298a</span>Firework { strength: 1000 };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:13-35:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n+37:8-37:10: @9[2]: _25 = ()\n+37:5-37:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:13-35:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n+37:8-37:10: @9[2]: _25 = ()\n+37:5-37:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">    Ok(())<span class=\"annotation\">\u2989@5,9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:2-38:2: @14.Return: return\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "e31e47b81d4fcc929d6d71cfc8953db88de3bfc3", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.generics/generics.{impl#0}-set_strength.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%230%7D-set_strength.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%230%7D-set_strength.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%230%7D-set_strength.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -1,8 +1,8 @@\n <!DOCTYPE html>\n <html>\n <head>\n-    <title>coverage_of_if_else - Code Regions</title>\n-    <style>\n+<title>generics.{impl#0}-set_strength - Coverage Spans</title>\n+<style>\n     .line {\n         counter-increment: line;\n     }\n@@ -56,11 +56,20 @@\n         /* requires hover over a span ONLY on its first line */\n         display: inline-block;\n     }\n-    </style>\n+</style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"0: $DIR/spanview-block.rs:5:11: 5:13:\n-    5:11-5:13: Assign: _0 = const ()\n-    5:13-5:13: Return: return\"><span class=\"annotation\">0\u298a</span>{}<span class=\"annotation\">\u29890</span></span></span></span></div>\n+<div class=\"code\" style=\"counter-reset: line 9\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn set_strength(&amp;mut self, new_strength: T) </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"11:25-11:37: @0[1]: _3 = _2\n+11:9-11:37: @0[2]: ((*_1).0: T) = move _3\n+10:49-12:6: @0[4]: _0 = const ()\n+12:6-12:6: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"11:25-11:37: @0[1]: _3 = _2\n+11:9-11:37: @0[2]: ((*_1).0: T) = move _3\n+10:49-12:6: @0[4]: _0 = const ()\n+12:6-12:6: @0.Return: return\">        self.strength = new_strength;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"11:25-11:37: @0[1]: _3 = _2\n+11:9-11:37: @0[2]: ((*_1).0: T) = move _3\n+10:49-12:6: @0[4]: _0 = const ()\n+12:6-12:6: @0.Return: return\">    }<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n </body>\n </html>", "previous_filename": "src/test/mir-opt/spanview_block.main.mir_map.0.html.mir"}, {"sha": "99a7df4a670536a4688347c1330afd73cf349473", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.generics/generics.{impl#1}-drop.-------.InstrumentCoverage.0.html", "status": "added", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,123 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>generics.{impl#1}-drop - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn drop(&amp;mut self) </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as Drop&gt;::drop::promoted[0]\n+18:18-18:36: @0[7]: _7 = &amp;(*_19)\n+18:18-18:36: @0[8]: _6 = &amp;(*_7)\n+18:18-18:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+18:38-18:51: @0[17]: _14 = &amp;((*_1).0: T)\n+18:9-18:53: @0[18]: _13 = (move _14,)\n+18:9-18:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n+18:9-18:53: @0[22]: _15 = (_13.0: &amp;T)\n+18:9-18:53: @0[25]: _17 = &amp;(*_15)\n+18:9-18:53: @0[27]: _18 = &lt;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+18:9-18:53: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+18:9-18:53: @1[2]: _12 = [move _16]\n+18:9-18:53: @1[5]: _11 = &amp;_12\n+18:9-18:53: @1[6]: _10 = &amp;(*_11)\n+18:9-18:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+18:9-18:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+18:9-18:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+18:9-18:53: @3[6]: _2 = const ()\n+17:24-19:6: @3[8]: _0 = const ()\n+19:6-19:6: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as Drop&gt;::drop::promoted[0]\n+18:18-18:36: @0[7]: _7 = &amp;(*_19)\n+18:18-18:36: @0[8]: _6 = &amp;(*_7)\n+18:18-18:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+18:38-18:51: @0[17]: _14 = &amp;((*_1).0: T)\n+18:9-18:53: @0[18]: _13 = (move _14,)\n+18:9-18:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n+18:9-18:53: @0[22]: _15 = (_13.0: &amp;T)\n+18:9-18:53: @0[25]: _17 = &amp;(*_15)\n+18:9-18:53: @0[27]: _18 = &lt;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+18:9-18:53: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+18:9-18:53: @1[2]: _12 = [move _16]\n+18:9-18:53: @1[5]: _11 = &amp;_12\n+18:9-18:53: @1[6]: _10 = &amp;(*_11)\n+18:9-18:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+18:9-18:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+18:9-18:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+18:9-18:53: @3[6]: _2 = const ()\n+17:24-19:6: @3[8]: _0 = const ()\n+19:6-19:6: @3.Return: return\">        println!(\"BOOM times {}!!!\", self.strength);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as Drop&gt;::drop::promoted[0]\n+18:18-18:36: @0[7]: _7 = &amp;(*_19)\n+18:18-18:36: @0[8]: _6 = &amp;(*_7)\n+18:18-18:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+18:38-18:51: @0[17]: _14 = &amp;((*_1).0: T)\n+18:9-18:53: @0[18]: _13 = (move _14,)\n+18:9-18:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n+18:9-18:53: @0[22]: _15 = (_13.0: &amp;T)\n+18:9-18:53: @0[25]: _17 = &amp;(*_15)\n+18:9-18:53: @0[27]: _18 = &lt;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+18:9-18:53: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+18:9-18:53: @1[2]: _12 = [move _16]\n+18:9-18:53: @1[5]: _11 = &amp;_12\n+18:9-18:53: @1[6]: _10 = &amp;(*_11)\n+18:9-18:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+18:9-18:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+18:9-18:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+18:9-18:53: @3[6]: _2 = const ()\n+17:24-19:6: @3[8]: _0 = const ()\n+19:6-19:6: @3.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "0379d900e9409c44e10b8520054e55aac4aba0cc", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.if/if.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 162, "deletions": 0, "changes": 162, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,162 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>if.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    =</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">        std::env::args().len()</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    ==</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">        1</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    let</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">        mut</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    =</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">        0<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:9-21:16: @3[5]: _6 = _1\n+21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n+22:5-27:6: @6[1]: _0 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n+22:5-27:6: @6[1]: _0 = const ()\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n+22:5-27:6: @6[1]: _0 = const ()\">        =</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n+22:5-27:6: @6[1]: _0 = const ()\">            10</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n+22:5-27:6: @6[1]: _0 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n+22:5-27:6: @6[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:2-28:2: @7.Return: return\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "b51c5c84c0d6e31580988f8af17b783910438b65", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.if_else/if_else.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 163, "deletions": 0, "changes": 163, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,163 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>if_else.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n+11:9-11:16: @3[6]: _7 = _1\n+11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n+11:9-11:16: @3[6]: _7 = _1\n+11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n+11:9-11:16: @3[6]: _7 = _1\n+11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    let mut countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n+11:9-11:16: @3[6]: _7 = _1\n+11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    if</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n+11:9-11:16: @3[6]: _7 = _1\n+11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">        is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n+12:5-17:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n+12:5-17:6: @6[1]: _6 = const ()\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n+12:5-17:6: @6[1]: _6 = const ()\">        =</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n+12:5-17:6: @6[1]: _6 = const ()\">            10</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n+12:5-17:6: @6[1]: _6 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n+12:5-17:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    else // Note coverage region difference without semicolon</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:9-22:16: @5[0]: _5 = const 100_i32\n+20:9-22:16: @5[1]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"20:9-22:16: @5[0]: _5 = const 100_i32\n+20:9-22:16: @5[1]: _6 = const ()\">        =</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"20:9-22:16: @5[0]: _5 = const 100_i32\n+20:9-22:16: @5[1]: _6 = const ()\">            100<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:9-26:16: @7[3]: _8 = _1\n+26:9-26:16: @7[4]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@7\u298a</span>is_true<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+27:5-32:6: @10[1]: _0 = const ()\"><span class=\"annotation\">@8,10\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+27:5-32:6: @10[1]: _0 = const ()\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+27:5-32:6: @10[1]: _0 = const ()\">        =</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+27:5-32:6: @10[1]: _0 = const ()\">            10</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+27:5-32:6: @10[1]: _0 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+27:5-32:6: @10[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@8,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    else</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+34:5-39:6: @9[1]: _0 = const ()\"><span class=\"annotation\">@9\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+34:5-39:6: @9[1]: _0 = const ()\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+34:5-39:6: @9[1]: _0 = const ()\">        =</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+34:5-39:6: @9[1]: _0 = const ()\">            100</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+34:5-39:6: @9[1]: _0 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+34:5-39:6: @9[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:2-40:2: @11.Return: return\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "6998bb32a3f56a69df7ac64a92e3d1d699c180f6", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.inner_items/inner_items.main-InnerTrait-default_trait_func.-------.InstrumentCoverage.0.html", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-InnerTrait-default_trait_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-InnerTrait-default_trait_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-InnerTrait-default_trait_func.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,83 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>inner_items.main-InnerTrait-default_trait_func - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 32\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">fn default_trait_func(&amp;mut self) </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:40: @0.Call: _2 = inner_function(const INNER_CONST) -&gt; [return: bb1, unwind: bb3]\n+35:13-35:17: @1[3]: _4 = &amp;mut (*_1)\n+35:13-35:47: @1.Call: _3 = &lt;Self as InnerTrait&gt;::inner_trait_func(move _4, const INNER_CONST) -&gt; [return: bb2, unwind: bb3]\n+33:42-36:10: @2[2]: _0 = const ()\n+36:10-36:10: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:40: @0.Call: _2 = inner_function(const INNER_CONST) -&gt; [return: bb1, unwind: bb3]\n+35:13-35:17: @1[3]: _4 = &amp;mut (*_1)\n+35:13-35:47: @1.Call: _3 = &lt;Self as InnerTrait&gt;::inner_trait_func(move _4, const INNER_CONST) -&gt; [return: bb2, unwind: bb3]\n+33:42-36:10: @2[2]: _0 = const ()\n+36:10-36:10: @2.Return: return\">            inner_function(INNER_CONST);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:40: @0.Call: _2 = inner_function(const INNER_CONST) -&gt; [return: bb1, unwind: bb3]\n+35:13-35:17: @1[3]: _4 = &amp;mut (*_1)\n+35:13-35:47: @1.Call: _3 = &lt;Self as InnerTrait&gt;::inner_trait_func(move _4, const INNER_CONST) -&gt; [return: bb2, unwind: bb3]\n+33:42-36:10: @2[2]: _0 = const ()\n+36:10-36:10: @2.Return: return\">            self.inner_trait_func(INNER_CONST);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:40: @0.Call: _2 = inner_function(const INNER_CONST) -&gt; [return: bb1, unwind: bb3]\n+35:13-35:17: @1[3]: _4 = &amp;mut (*_1)\n+35:13-35:47: @1.Call: _3 = &lt;Self as InnerTrait&gt;::inner_trait_func(move _4, const INNER_CONST) -&gt; [return: bb2, unwind: bb3]\n+33:42-36:10: @2[2]: _0 = const ()\n+36:10-36:10: @2.Return: return\">        }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "c87ff329f3fe8a87fb875419dac78802a725ea93", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.inner_items/inner_items.main-inner_function.-------.InstrumentCoverage.0.html", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-inner_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-inner_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-inner_function.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,107 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>inner_items.main-inner_function - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 17\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn inner_function(a: u32) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n+19:13-19:14: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>b = 1<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:13-20:14: @1[3]: FakeRead(ForLet, _3)\"><span class=\"annotation\">@1,2,3,4\u298a</span>c<span class=\"annotation\">\u2989@1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:17-20:18: @0[5]: _4 = _1\n+20:21-20:22: @0[7]: _5 = _2\n+20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\"><span class=\"annotation\">@0\u298a</span>a + b<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:26: @1[9]: _23 = const inner_function::promoted[0]\n+21:18-21:26: @1[10]: _11 = &amp;(*_23)\n+21:18-21:26: @1[11]: _10 = &amp;(*_11)\n+21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n+21:28-21:29: @1[20]: _18 = &amp;_3\n+21:9-21:30: @1[21]: _17 = (move _18,)\n+21:9-21:30: @1[23]: FakeRead(ForMatchedPlace, _17)\n+21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n+21:9-21:30: @1[28]: _21 = &amp;(*_19)\n+21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+21:9-21:30: @1.Call: _20 = ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n+21:9-21:30: @2[2]: _16 = [move _20]\n+21:9-21:30: @2[5]: _15 = &amp;_16\n+21:9-21:30: @2[6]: _14 = &amp;(*_15)\n+21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n+21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n+21:9-21:30: @4[6]: _0 = const ()\n+22:6-22:6: @4.Return: return\"><span class=\"annotation\">@1,2,3,4\u298a</span>println!(\"c = {}\", c)</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:26: @1[9]: _23 = const inner_function::promoted[0]\n+21:18-21:26: @1[10]: _11 = &amp;(*_23)\n+21:18-21:26: @1[11]: _10 = &amp;(*_11)\n+21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n+21:28-21:29: @1[20]: _18 = &amp;_3\n+21:9-21:30: @1[21]: _17 = (move _18,)\n+21:9-21:30: @1[23]: FakeRead(ForMatchedPlace, _17)\n+21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n+21:9-21:30: @1[28]: _21 = &amp;(*_19)\n+21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+21:9-21:30: @1.Call: _20 = ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n+21:9-21:30: @2[2]: _16 = [move _20]\n+21:9-21:30: @2[5]: _15 = &amp;_16\n+21:9-21:30: @2[6]: _14 = &amp;(*_15)\n+21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n+21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n+21:9-21:30: @4[6]: _0 = const ()\n+22:6-22:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@1,2,3,4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "1dc29d400d8e0532ceb69fc25e335a74fd3fc807", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.inner_items/inner_items.main-{impl#0}-inner_trait_func.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-inner_trait_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-inner_trait_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-inner_trait_func.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -1,8 +1,8 @@\n <!DOCTYPE html>\n <html>\n <head>\n-    <title>coverage_of_if_else - Code Regions</title>\n-    <style>\n+<title>inner_items.main-{impl#0}-inner_trait_func - Coverage Spans</title>\n+<style>\n     .line {\n         counter-increment: line;\n     }\n@@ -56,10 +56,17 @@\n         /* requires hover over a span ONLY on its first line */\n         display: inline-block;\n     }\n-    </style>\n+</style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"0:Return: $DIR/spanview-terminator.rs:5:13: 5:13:\n-    5:13-5:13: Return: return\"><span class=\"annotation\">0:Return\u298a</span>\u2038<span class=\"annotation\">\u29890:Return</span></span></span></span></div>\n+<div class=\"code\" style=\"counter-reset: line 39\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">fn inner_trait_func(&amp;mut self, incr: u32) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:40-41:44: @0[1]: _3 = _2\n+41:13-41:44: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\"><span class=\"annotation\">@0\u298a</span>self.inner_struct_field += incr<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:28-42:51: @1[4]: _6 = ((*_1).0: u32)\n+42:13-42:52: @1.Call: _5 = inner_function(move _6) -&gt; [return: bb2, unwind: bb3]\n+43:10-43:10: @2.Return: return\"><span class=\"annotation\">@1,2\u298a</span>inner_function(self.inner_struct_field);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"42:28-42:51: @1[4]: _6 = ((*_1).0: u32)\n+42:13-42:52: @1.Call: _5 = inner_function(move _6) -&gt; [return: bb2, unwind: bb3]\n+43:10-43:10: @2.Return: return\">        }<span class=\"annotation\">\u2989@1,2</span></span></span></span></div>\n </body>\n </html>", "previous_filename": "src/test/mir-opt/spanview_terminator.main.mir_map.0.html.mir"}, {"sha": "9a1256025d97184c2bc6086e7f6cd5c50fd4f751", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.inner_items/inner_items.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 171, "deletions": 0, "changes": 171, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,171 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>inner_items.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_u32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_u32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_u32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 0<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:8-10:15: @3[6]: _7 = _1\n+10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n+10:16-12:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n+10:16-12:6: @6[1]: _6 = const ()\">        countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n+10:16-12:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    mod inner_mod {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        const INNER_MOD_CONST: u32 = 1000;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    fn inner_function(a: u32) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let b = 1;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let c = a + b;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        println!(\"c = {}\", c)</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    struct InnerStruct {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        inner_struct_field: u32,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    const INNER_CONST: u32 = 1234;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    trait InnerTrait {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        fn inner_trait_func(&amp;mut self, incr: u32);</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        fn default_trait_func(&amp;mut self) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            inner_function(INNER_CONST);</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            self.inner_trait_func(INNER_CONST);</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    impl InnerTrait for InnerStruct {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        fn inner_trait_func(&amp;mut self, incr: u32) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            self.inner_struct_field += incr;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            inner_function(self.inner_struct_field);</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    type InnerType = String;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"48:8-48:15: @7[4]: _9 = _1\n+48:8-48:15: @7[5]: FakeRead(ForMatchedPlace, _9)\"><span class=\"annotation\">@7\u298a</span>is_true<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"49:24-49:33: @10[2]: _11 = _5\n+49:9-49:34: @10.Call: _10 = inner_function(move _11) -&gt; [return: bb11, unwind: bb15]\n+48:16-50:6: @11[2]: _8 = const ()\"><span class=\"annotation\">@8,10,11\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"49:24-49:33: @10[2]: _11 = _5\n+49:9-49:34: @10.Call: _10 = inner_function(move _11) -&gt; [return: bb11, unwind: bb15]\n+48:16-50:6: @11[2]: _8 = const ()\">        inner_function(countdown);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"49:24-49:33: @10[2]: _11 = _5\n+49:9-49:34: @10.Call: _10 = inner_function(move _11) -&gt; [return: bb11, unwind: bb15]\n+48:16-50:6: @11[2]: _8 = const ()\">    }<span class=\"annotation\">\u2989@8,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InnerStruct { inner_struct_field: const 101_u32 }\n+52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @12[7]: _14 = &amp;mut _12\n+56:5-56:29: @12.Call: _13 = &lt;InnerStruct as InnerTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n+57:2-57:2: @13.Return: return\"><span class=\"annotation\">@12,13\u298a</span>mut val = InnerStruct {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InnerStruct { inner_struct_field: const 101_u32 }\n+52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @12[7]: _14 = &amp;mut _12\n+56:5-56:29: @12.Call: _13 = &lt;InnerStruct as InnerTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n+57:2-57:2: @13.Return: return\">        inner_struct_field: 101,</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InnerStruct { inner_struct_field: const 101_u32 }\n+52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @12[7]: _14 = &amp;mut _12\n+56:5-56:29: @12.Call: _13 = &lt;InnerStruct as InnerTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n+57:2-57:2: @13.Return: return\">    };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InnerStruct { inner_struct_field: const 101_u32 }\n+52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @12[7]: _14 = &amp;mut _12\n+56:5-56:29: @12.Call: _13 = &lt;InnerStruct as InnerTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n+57:2-57:2: @13.Return: return\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InnerStruct { inner_struct_field: const 101_u32 }\n+52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @12[7]: _14 = &amp;mut _12\n+56:5-56:29: @12.Call: _13 = &lt;InnerStruct as InnerTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n+57:2-57:2: @13.Return: return\">    val.default_trait_func();</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InnerStruct { inner_struct_field: const 101_u32 }\n+52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @12[7]: _14 = &amp;mut _12\n+56:5-56:29: @12.Call: _13 = &lt;InnerStruct as InnerTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n+57:2-57:2: @13.Return: return\">}<span class=\"annotation\">\u2989@12,13</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "defe743df608fecb07dcce5f32a720df16b2e861", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.lazy_boolean/lazy_boolean.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,160 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>lazy_boolean.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb25]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb24]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n+9:10-9:15: @3[4]: _5 = (_8.0: i32)\n+9:17-9:22: @3[6]: _6 = (_8.1: i32)\n+9:24-9:29: @3[8]: _7 = (_8.2: i32)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb25]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb24]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n+9:10-9:15: @3[4]: _5 = (_8.0: i32)\n+9:17-9:22: @3[6]: _6 = (_8.1: i32)\n+9:24-9:29: @3[8]: _7 = (_8.2: i32)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb25]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb24]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n+9:10-9:15: @3[4]: _5 = (_8.0: i32)\n+9:17-9:22: @3[6]: _6 = (_8.1: i32)\n+9:24-9:29: @3[8]: _7 = (_8.2: i32)\">    let (mut a, mut b, mut c) = (0, 0, 0)<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:8-10:15: @3[12]: _10 = _1\n+10:8-10:15: @3[13]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n+12:9-12:15: @6[1]: _6 = const 10_i32\n+13:9-13:16: @6[2]: _7 = const 100_i32\n+10:16-14:6: @6[3]: _9 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n+12:9-12:15: @6[1]: _6 = const 10_i32\n+13:9-13:16: @6[2]: _7 = const 100_i32\n+10:16-14:6: @6[3]: _9 = const ()\">        a = 1;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n+12:9-12:15: @6[1]: _6 = const 10_i32\n+13:9-13:16: @6[2]: _7 = const 100_i32\n+10:16-14:6: @6[3]: _9 = const ()\">        b = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n+12:9-12:15: @6[1]: _6 = const 10_i32\n+13:9-13:16: @6[2]: _7 = const 100_i32\n+10:16-14:6: @6[3]: _9 = const ()\">        c = 100;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n+12:9-12:15: @6[1]: _6 = const 10_i32\n+13:9-13:16: @6[2]: _7 = const 100_i32\n+10:16-14:6: @6[3]: _9 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:9-16:17: @11[2]: FakeRead(ForLet, _11)\"><span class=\"annotation\">@11\u298a</span>somebool<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:14: @7[5]: _13 = _5\n+18:17-18:18: @7[7]: _14 = _6\n+18:13-18:18: @7[8]: _12 = Lt(move _13, move _14)\"><span class=\"annotation\">@7\u298a</span>a &lt; b<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ||</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:13-20:14: @10[2]: _16 = _6\n+20:17-20:18: @10[4]: _17 = _7\n+20:13-20:18: @10[5]: _15 = Lt(move _16, move _17)\"><span class=\"annotation\">@10\u298a</span>b &lt; c<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:17: @15[2]: FakeRead(ForLet, _18)\"><span class=\"annotation\">@15\u298a</span>somebool<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:13-25:14: @11[6]: _20 = _6\n+25:17-25:18: @11[8]: _21 = _5\n+25:13-25:18: @11[9]: _19 = Lt(move _20, move _21)\"><span class=\"annotation\">@11\u298a</span>b &lt; a<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ||</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:13-27:14: @14[2]: _23 = _6\n+27:17-27:18: @14[4]: _24 = _7\n+27:13-27:18: @14[5]: _22 = Lt(move _23, move _24)\"><span class=\"annotation\">@14\u298a</span>b &lt; c<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-30:17: @19[2]: FakeRead(ForLet, _25)\"><span class=\"annotation\">@19\u298a</span>somebool<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:14: @15[6]: _27 = _5\n+32:17-32:18: @15[8]: _28 = _6\n+32:13-32:18: @15[9]: _26 = Lt(move _27, move _28)\"><span class=\"annotation\">@15\u298a</span>a &lt; b<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        &amp;&amp;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:14: @18[2]: _30 = _6\n+34:17-34:18: @18[4]: _31 = _7\n+34:13-34:18: @18[5]: _29 = Lt(move _30, move _31)\"><span class=\"annotation\">@18\u298a</span>b &lt; c<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:9-37:17: @23[2]: FakeRead(ForLet, _32)\"><span class=\"annotation\">@23\u298a</span>somebool<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"39:13-39:14: @19[6]: _34 = _6\n+39:17-39:18: @19[8]: _35 = _5\n+39:13-39:18: @19[9]: _33 = Lt(move _34, move _35)\"><span class=\"annotation\">@19\u298a</span>b &lt; a<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        &amp;&amp;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"41:13-41:14: @22[2]: _37 = _6\n+41:17-41:18: @22[4]: _38 = _7\n+41:13-41:18: @22[5]: _36 = Lt(move _37, move _38)\"><span class=\"annotation\">@22\u298a</span>b &lt; c<span class=\"annotation\">\u2989@22</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"43:2-43:2: @23.Return: return\"><span class=\"annotation\">@23\u298a</span>\u2038<span class=\"annotation\">\u2989@23</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "dc26c796637ccedf3a6637cd754b0464e967d241", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.loop_break_value/loop_break_value.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.loop_break_value%2Floop_break_value.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.loop_break_value%2Floop_break_value.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.loop_break_value%2Floop_break_value.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,118 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>loop_break_value.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">    let result</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">        =</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">            loop</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">        {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">            break</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">            10</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">            ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">        }</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">    ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">}<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "0c253d5e5c25328b80f89b1bb61a79d1993df302", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.question_mark_error_result/question_mark_error_result.call.-------.InstrumentCoverage.0.html", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.question_mark_error_result%2Fquestion_mark_error_result.call.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.question_mark_error_result%2Fquestion_mark_error_result.call.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.question_mark_error_result%2Fquestion_mark_error_result.call.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,73 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>question_mark_error_result.call - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn call(return_error: bool) -&gt; Result&lt;(),()&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:20: @0[1]: _2 = _1\n+5:8-5:20: @0[2]: FakeRead(ForMatchedPlace, _2)\"><span class=\"annotation\">@0\u298a</span>return_error<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:13-6:15: @3[1]: _3 = ()\n+6:9-6:16: @3[2]: _0 = std::result::Result::&lt;(), ()&gt;::Err(move _3)\"><span class=\"annotation\">@1,3\u298a</span>Err(())<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:12-8:14: @2[1]: _4 = ()\n+8:9-8:15: @2[2]: _0 = std::result::Result::&lt;(), ()&gt;::Ok(move _4)\"><span class=\"annotation\">@2\u298a</span>Ok(())<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:2-10:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "2589b0454da2eab17a8e54198c78260e4120484a", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.question_mark_error_result/question_mark_error_result.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.question_mark_error_result%2Fquestion_mark_error_result.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.question_mark_error_result%2Fquestion_mark_error_result.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.question_mark_error_result%2Fquestion_mark_error_result.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,101 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>question_mark_error_result.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 11\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),()&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:21-14:23: @0[1]: _1 = const 10_i32\n+13:9-14:18: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0,1\u298a</span>mut</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:21-14:23: @0[1]: _1 = const 10_i32\n+13:9-14:18: @0[2]: FakeRead(ForLet, _1)\">        countdown = 10<span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:10: @4[2]: _12 = discriminant(_9)\"><span class=\"annotation\">@2,3,4\u298a</span>for</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:10: @4[2]: _12 = discriminant(_9)\">        _<span class=\"annotation\">\u2989@2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:9-19:14: @0[6]: _4 = std::ops::Range::&lt;i32&gt; { start: const 0_i32, end: const 10_i32 }\n+19:9-19:14: @0.Call: _3 = &lt;std::ops::Range&lt;i32&gt; as IntoIterator&gt;::into_iter(move _4) -&gt; [return: bb1, unwind: bb32]\n+19:9-19:14: @1[1]: FakeRead(ForMatchedPlace, _3)\n+19:9-19:14: @1[3]: _5 = move _3\"><span class=\"annotation\">@0,1\u298a</span>0..10<span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\"><span class=\"annotation\">@6,8\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\">            -= 1<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:13-25:22: @9[3]: _19 = _1\n+25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n+25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\"><span class=\"annotation\">@9\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:13-27:41: @12.Call: _22 = call(const true) -&gt; [return: bb13, unwind: bb32]\n+27:13-27:42: @13.Call: _21 = &lt;std::result::Result&lt;(), ()&gt; as Try&gt;::into_result(move _22) -&gt; [return: bb14, unwind: bb32]\n+27:13-27:42: @14[1]: FakeRead(ForMatchedPlace, _21)\n+27:41-27:42: @14[2]: _23 = discriminant(_21)\"><span class=\"annotation\">@10,12,13,14\u298a</span>call(/*return_error=*/ true)?<span class=\"annotation\">\u2989@10,12,13,14</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        else</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:13-31:42: @11.Call: _31 = call(const false) -&gt; [return: bb21, unwind: bb32]\n+31:13-31:43: @21.Call: _30 = &lt;std::result::Result&lt;(), ()&gt; as Try&gt;::into_result(move _31) -&gt; [return: bb22, unwind: bb32]\n+31:13-31:43: @22[1]: FakeRead(ForMatchedPlace, _30)\n+31:42-31:43: @22[2]: _32 = discriminant(_30)\"><span class=\"annotation\">@11,21,22\u298a</span>call(/*return_error=*/ false)?<span class=\"annotation\">\u2989@11,21,22</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:8-34:10: @5[9]: _38 = ()\n+34:5-34:11: @5[10]: _0 = std::result::Result::&lt;(), ()&gt;::Ok(move _38)\"><span class=\"annotation\">@5\u298a</span>Ok(())<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:2-35:2: @31.Return: return\"><span class=\"annotation\">@31\u298a</span>\u2038<span class=\"annotation\">\u2989@31</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "4b21d3fc263a3c8ecd5f41f73389d665f69a33a5", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.simple_loop/simple_loop.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 127, "deletions": 0, "changes": 127, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,127 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>simple_loop.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 0<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:9-12:16: @3[6]: _7 = _1\n+12:9-12:16: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n+13:5-18:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n+13:5-18:6: @6[1]: _6 = const ()\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n+13:5-18:6: @6[1]: _6 = const ()\">        =</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n+13:5-18:6: @6[1]: _6 = const ()\">            10</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n+13:5-18:6: @6[1]: _6 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n+13:5-18:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    loop</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n+23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n+23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@8,9\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n+23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n+23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\">                ==</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n+23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n+23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\">            0<span class=\"annotation\">\u2989@8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:13-27:18: @12[0]: _0 = const ()\"><span class=\"annotation\">@10,12\u298a</span>break<span class=\"annotation\">\u2989@10,12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\"><span class=\"annotation\">@11\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\">        -=</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\">        1<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:2-35:2: @12.Return: return\"><span class=\"annotation\">@10,12\u298a</span>\u2038<span class=\"annotation\">\u2989@10,12</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "5ba770ef6078e3f506a8a7cd1dade8f301cbcb59", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.simple_match/simple_match.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 190, "deletions": 0, "changes": 190, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,190 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>simple_match.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb22]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb21]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 1_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb22]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb21]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 1_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb22]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb21]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 1_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 1<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:8-10:15: @3[6]: _7 = _1\n+10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n+10:16-12:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n+10:16-12:6: @6[1]: _6 = const ()\">        countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n+10:16-12:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:9-15:10: @11[2]: _17 = discriminant(_14)\"><span class=\"annotation\">@9,10,11\u298a</span>for</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:9-15:10: @11[2]: _17 = discriminant(_14)\">        _<span class=\"annotation\">\u2989@9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:13: @7[4]: _9 = std::ops::Range::&lt;i32&gt; { start: const 0_i32, end: const 2_i32 }\n+17:9-17:13: @7.Call: _8 = &lt;std::ops::Range&lt;i32&gt; as IntoIterator&gt;::into_iter(move _9) -&gt; [return: bb8, unwind: bb22]\n+17:9-17:13: @8[1]: FakeRead(ForMatchedPlace, _8)\n+17:9-17:13: @8[3]: _10 = move _8\"><span class=\"annotation\">@7,8\u298a</span>0..2<span class=\"annotation\">\u2989@7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let z</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        match</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n+24:13-24:14: @17[1]: _24 = &amp;_5\n+26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\"><span class=\"annotation\">@13,15,17\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n+24:13-24:14: @17[1]: _24 = &amp;_5\n+26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">        {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n+24:13-24:14: @17[1]: _24 = &amp;_5\n+26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">            x</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n+24:13-24:14: @17[1]: _24 = &amp;_5\n+26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">            if</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n+24:13-24:14: @17[1]: _24 = &amp;_5\n+26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                x</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n+24:13-24:14: @17[1]: _24 = &amp;_5\n+26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                    &lt;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n+24:13-24:14: @17[1]: _24 = &amp;_5\n+26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                1<span class=\"annotation\">\u2989@13,15,17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            =&gt;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n+31:17-31:30: @18[6]: _22 = move _27\n+33:25-33:34: @18[9]: _28 = _5\n+33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @18[11]: _5 = const 10_i32\n+30:13-37:14: @18[12]: _21 = const ()\"><span class=\"annotation\">@18\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n+31:17-31:30: @18[6]: _22 = move _27\n+33:25-33:34: @18[9]: _28 = _5\n+33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @18[11]: _5 = const 10_i32\n+30:13-37:14: @18[12]: _21 = const ()\">                z = countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n+31:17-31:30: @18[6]: _22 = move _27\n+33:25-33:34: @18[9]: _28 = _5\n+33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @18[11]: _5 = const 10_i32\n+30:13-37:14: @18[12]: _21 = const ()\">                ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n+31:17-31:30: @18[6]: _22 = move _27\n+33:25-33:34: @18[9]: _28 = _5\n+33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @18[11]: _5 = const 10_i32\n+30:13-37:14: @18[12]: _21 = const ()\">                let y = countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n+31:17-31:30: @18[6]: _22 = move _27\n+33:25-33:34: @18[9]: _28 = _5\n+33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @18[11]: _5 = const 10_i32\n+30:13-37:14: @18[12]: _21 = const ()\">                ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n+31:17-31:30: @18[6]: _22 = move _27\n+33:25-33:34: @18[9]: _28 = _5\n+33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @18[11]: _5 = const 10_i32\n+30:13-37:14: @18[12]: _21 = const ()\">                countdown = 10</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n+31:17-31:30: @18[6]: _22 = move _27\n+33:25-33:34: @18[9]: _28 = _5\n+33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @18[11]: _5 = const 10_i32\n+30:13-37:14: @18[12]: _21 = const ()\">                ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n+31:17-31:30: @18[6]: _22 = move _27\n+33:25-33:34: @18[9]: _28 = _5\n+33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @18[11]: _5 = const 10_i32\n+30:13-37:14: @18[12]: _21 = const ()\">            }<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            _</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            =&gt;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:13-40:15: @16[0]: _21 = const ()\"><span class=\"annotation\">@16\u298a</span>{}<span class=\"annotation\">\u2989@16</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:2-43:2: @12.Return: return\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "28f1d013c835f2a59cd872d350109d751e8f3341", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.various_conditions/various_conditions.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 228, "deletions": 0, "changes": 228, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.various_conditions%2Fvarious_conditions.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.various_conditions%2Fvarious_conditions.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.various_conditions%2Fvarious_conditions.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,228 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>various_conditions.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:25-4:26: @0[1]: _1 = const 0_u32\n+4:9-4:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:12: @0[5]: _3 = const true\n+5:8-5:12: @0[6]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0\u298a</span>true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n+5:13-7:6: @3[1]: _2 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n+5:13-7:6: @3[1]: _2 = const ()\">        countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n+5:13-7:6: @3[1]: _2 = const ()\">    }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    const B: u32 = 100;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:10: @25[0]: FakeRead(ForLet, _4)\"><span class=\"annotation\">@25\u298a</span>x<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:16-10:25: @4[5]: _6 = _1\n+10:16-10:29: @4[6]: _5 = Gt(move _6, const 7_u32)\n+10:16-10:29: @4[8]: FakeRead(ForMatchedPlace, _5)\"><span class=\"annotation\">@4\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"11:9-11:23: @7[0]: _7 = CheckedSub(_1, const 4_u32)\"><span class=\"annotation\">@5,7\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@5,7</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:10: @8[1]: _4 = const B\"><span class=\"annotation\">@8\u298a</span>B<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:15-13:24: @6[2]: _9 = _1\n+13:15-13:28: @6[3]: _8 = Gt(move _9, const 2_u32)\n+13:15-13:28: @6[5]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@6\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:12-14:21: @11[5]: _14 = _1\n+14:12-14:25: @11[6]: _13 = Lt(move _14, const 1_u32)\"><span class=\"annotation\">@9,11\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@9,11</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:29-14:38: @18[2]: _16 = _1\n+14:29-14:42: @18[3]: _15 = Gt(move _16, const 5_u32)\"><span class=\"annotation\">@18\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:46-14:55: @14[2]: _18 = _1\n+14:46-14:60: @14[3]: _17 = Ne(move _18, const 9_u32)\"><span class=\"annotation\">@14\u298a</span>countdown != 9<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n+14:61-16:10: @22[1]: _10 = const ()\"><span class=\"annotation\">@20,22\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n+14:61-16:10: @22[1]: _10 = const ()\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n+14:61-16:10: @22[1]: _10 = const ()\">        }<span class=\"annotation\">\u2989@20,22</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:23: @23[2]: _19 = CheckedSub(_1, const 5_u32)\"><span class=\"annotation\">@23\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:9-18:18: @24[1]: _4 = _1\"><span class=\"annotation\">@24\u298a</span>countdown<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:9-20:15: @10[0]: _0 = const ()\"><span class=\"annotation\">@10\u298a</span>return<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:25-23:26: @25[3]: _21 = const 0_i32\n+23:9-23:22: @25[4]: FakeRead(ForLet, _21)\"><span class=\"annotation\">@25\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:8-24:12: @25[7]: _23 = const true\n+24:8-24:12: @25[8]: FakeRead(ForMatchedPlace, _23)\"><span class=\"annotation\">@25\u298a</span>true<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n+24:13-26:6: @28[1]: _22 = const ()\"><span class=\"annotation\">@26,28\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n+24:13-26:6: @28[1]: _22 = const ()\">        countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n+24:13-26:6: @28[1]: _22 = const ()\">    }<span class=\"annotation\">\u2989@26,28</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:8-28:17: @29[5]: _26 = _21\n+28:8-28:21: @29[6]: _25 = Gt(move _26, const 7_i32)\n+28:8-28:21: @29[8]: FakeRead(ForMatchedPlace, _25)\"><span class=\"annotation\">@29\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:9-29:23: @32[0]: _27 = CheckedSub(_21, const 4_i32)\"><span class=\"annotation\">@30,32\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@30,32</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:15-30:24: @31[2]: _29 = _21\n+30:15-30:28: @31[3]: _28 = Gt(move _29, const 2_i32)\n+30:15-30:28: @31[5]: FakeRead(ForMatchedPlace, _28)\"><span class=\"annotation\">@31\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@31</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:12-31:21: @36[5]: _34 = _21\n+31:12-31:25: @36[6]: _33 = Lt(move _34, const 1_i32)\"><span class=\"annotation\">@34,36\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@34,36</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:29-31:38: @43[2]: _36 = _21\n+31:29-31:42: @43[3]: _35 = Gt(move _36, const 5_i32)\"><span class=\"annotation\">@43\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@43</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:46-31:55: @39[2]: _38 = _21\n+31:46-31:60: @39[3]: _37 = Ne(move _38, const 9_i32)\"><span class=\"annotation\">@39\u298a</span>countdown != 9<span class=\"annotation\">\u2989@39</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n+31:61-33:10: @47[1]: _30 = const ()\"><span class=\"annotation\">@45,47\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n+31:61-33:10: @47[1]: _30 = const ()\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n+31:61-33:10: @47[1]: _30 = const ()\">        }<span class=\"annotation\">\u2989@45,47</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:23: @48[2]: _39 = CheckedSub(_21, const 5_i32)\"><span class=\"annotation\">@48\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@48</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:15: @35[0]: _0 = const ()\"><span class=\"annotation\">@35\u298a</span>return<span class=\"annotation\">\u2989@35</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:25-39:26: @50[3]: _41 = const 0_i32\n+39:9-39:22: @50[4]: FakeRead(ForLet, _41)\"><span class=\"annotation\">@50\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"40:8-40:12: @50[7]: _43 = const true\n+40:8-40:12: @50[8]: FakeRead(ForMatchedPlace, _43)\"><span class=\"annotation\">@50\u298a</span>true<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n+40:13-42:6: @53[1]: _42 = const ()\"><span class=\"annotation\">@51,53\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n+40:13-42:6: @53[1]: _42 = const ()\">        countdown = 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n+40:13-42:6: @53[1]: _42 = const ()\">    }<span class=\"annotation\">\u2989@51,53</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"44:9-44:10: @77[0]: FakeRead(ForLet, _44)\"><span class=\"annotation\">@77\u298a</span>z<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"44:16-44:25: @54[5]: _46 = _41\n+44:16-44:29: @54[6]: _45 = Gt(move _46, const 7_i32)\n+44:16-44:29: @54[8]: FakeRead(ForMatchedPlace, _45)\"><span class=\"annotation\">@54\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@54</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"45:9-45:23: @57[0]: _47 = CheckedSub(_41, const 4_i32)\"><span class=\"annotation\">@55,57\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@55,57</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"46:15-46:24: @56[2]: _49 = _41\n+46:15-46:28: @56[3]: _48 = Gt(move _49, const 2_i32)\n+46:15-46:28: @56[5]: FakeRead(ForMatchedPlace, _48)\"><span class=\"annotation\">@56\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@56</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:12-47:21: @61[5]: _54 = _41\n+47:12-47:25: @61[6]: _53 = Lt(move _54, const 1_i32)\"><span class=\"annotation\">@59,61\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@59,61</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:29-47:38: @68[2]: _56 = _41\n+47:29-47:42: @68[3]: _55 = Gt(move _56, const 5_i32)\"><span class=\"annotation\">@68\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@68</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:46-47:55: @64[2]: _58 = _41\n+47:46-47:60: @64[3]: _57 = Ne(move _58, const 9_i32)\"><span class=\"annotation\">@64\u298a</span>countdown != 9<span class=\"annotation\">\u2989@64</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n+47:61-49:10: @72[1]: _50 = const ()\"><span class=\"annotation\">@70,72\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n+47:61-49:10: @72[1]: _50 = const ()\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n+47:61-49:10: @72[1]: _50 = const ()\">        }<span class=\"annotation\">\u2989@70,72</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:9-50:23: @73[2]: _59 = CheckedSub(_41, const 5_i32)\"><span class=\"annotation\">@73\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@73</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n+52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n+53:18-53:27: @60[9]: _92 = const main::promoted[1]\n+53:18-53:27: @60[10]: _67 = &amp;(*_92)\n+53:18-53:27: @60[11]: _66 = &amp;(*_67)\n+53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n+53:9-53:29: @60[18]: _73 = ()\n+53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n+53:9-53:29: @60[20]: _91 = const main::promoted[0]\n+53:9-53:29: @60[21]: _71 = &amp;(*_91)\n+53:9-53:29: @60[22]: _70 = &amp;(*_71)\n+53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n+53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n+53:9-53:29: @76[5]: _62 = const ()\n+54:9-54:15: @76[7]: _0 = const ()\"><span class=\"annotation\">@60,75,76\u298a</span>should_be_reachable = countdown;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n+52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n+53:18-53:27: @60[9]: _92 = const main::promoted[1]\n+53:18-53:27: @60[10]: _67 = &amp;(*_92)\n+53:18-53:27: @60[11]: _66 = &amp;(*_67)\n+53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n+53:9-53:29: @60[18]: _73 = ()\n+53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n+53:9-53:29: @60[20]: _91 = const main::promoted[0]\n+53:9-53:29: @60[21]: _71 = &amp;(*_91)\n+53:9-53:29: @60[22]: _70 = &amp;(*_71)\n+53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n+53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n+53:9-53:29: @76[5]: _62 = const ()\n+54:9-54:15: @76[7]: _0 = const ()\">        println!(\"reached\");</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n+52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n+53:18-53:27: @60[9]: _92 = const main::promoted[1]\n+53:18-53:27: @60[10]: _67 = &amp;(*_92)\n+53:18-53:27: @60[11]: _66 = &amp;(*_67)\n+53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n+53:9-53:29: @60[18]: _73 = ()\n+53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n+53:9-53:29: @60[20]: _91 = const main::promoted[0]\n+53:9-53:29: @60[21]: _71 = &amp;(*_91)\n+53:9-53:29: @60[22]: _70 = &amp;(*_71)\n+53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n+53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n+53:9-53:29: @76[5]: _62 = const ()\n+54:9-54:15: @76[7]: _0 = const ()\">        return<span class=\"annotation\">\u2989@60,75,76</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:10: @98[0]: FakeRead(ForLet, _74)\"><span class=\"annotation\">@98\u298a</span>w<span class=\"annotation\">\u2989@98</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"57:16-57:25: @77[5]: _76 = _41\n+57:16-57:29: @77[6]: _75 = Gt(move _76, const 7_i32)\n+57:16-57:29: @77[8]: FakeRead(ForMatchedPlace, _75)\"><span class=\"annotation\">@77\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"58:9-58:23: @80[0]: _77 = CheckedSub(_41, const 4_i32)\"><span class=\"annotation\">@78,80\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@78,80</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"59:15-59:24: @79[2]: _79 = _41\n+59:15-59:28: @79[3]: _78 = Gt(move _79, const 2_i32)\n+59:15-59:28: @79[5]: FakeRead(ForMatchedPlace, _78)\"><span class=\"annotation\">@79\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@79</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:12-60:21: @84[5]: _84 = _41\n+60:12-60:25: @84[6]: _83 = Lt(move _84, const 1_i32)\"><span class=\"annotation\">@82,84\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@82,84</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:29-60:38: @91[2]: _86 = _41\n+60:29-60:42: @91[3]: _85 = Gt(move _86, const 5_i32)\"><span class=\"annotation\">@91\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@91</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:46-60:55: @87[2]: _88 = _41\n+60:46-60:60: @87[3]: _87 = Ne(move _88, const 9_i32)\"><span class=\"annotation\">@87\u298a</span>countdown != 9<span class=\"annotation\">\u2989@87</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n+60:61-62:10: @95[1]: _80 = const ()\"><span class=\"annotation\">@93,95\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n+60:61-62:10: @95[1]: _80 = const ()\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n+60:61-62:10: @95[1]: _80 = const ()\">        }<span class=\"annotation\">\u2989@93,95</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"63:9-63:23: @96[2]: _89 = CheckedSub(_41, const 5_i32)\"><span class=\"annotation\">@96\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@96</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"65:9-65:15: @83[0]: _0 = const ()\"><span class=\"annotation\">@83\u298a</span>return<span class=\"annotation\">\u2989@83</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:2-67:2: @102.Return: return\"><span class=\"annotation\">@102\u298a</span>\u2038<span class=\"annotation\">\u2989@102</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "b96789a92194d95f5c4baafc5133e9f0171117ad", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-base/expected_mir_dump.while_early_return/while_early_return.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.while_early_return%2Fwhile_early_return.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.while_early_return%2Fwhile_early_return.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-base%2Fexpected_mir_dump.while_early_return%2Fwhile_early_return.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,119 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>while_early_return.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:25-5:27: @0[1]: _1 = const 10_i32\n+5:9-5:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n+7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n+7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>while</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n+7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n+7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n+7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n+7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\">            &gt;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n+7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n+7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\">        0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:13-12:22: @5[3]: _8 = _1\n+12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\n+12:13-14:14: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"12:13-12:22: @5[3]: _8 = _1\n+12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\n+12:13-14:14: @5[6]: FakeRead(ForMatchedPlace, _7)\">                &lt;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"12:13-12:22: @5[3]: _8 = _1\n+12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\n+12:13-14:14: @5[6]: FakeRead(ForMatchedPlace, _7)\">            5<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            return</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @8[2]: _11 = _1\n+18:21-20:22: @8[3]: _10 = Gt(move _11, const 8_i32)\n+18:21-20:22: @8[5]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@6,8\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @8[2]: _11 = _1\n+18:21-20:22: @8[3]: _10 = Gt(move _11, const 8_i32)\n+18:21-20:22: @8[5]: FakeRead(ForMatchedPlace, _10)\">                        &gt;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @8[2]: _11 = _1\n+18:21-20:22: @8[3]: _10 = Gt(move _11, const 8_i32)\n+18:21-20:22: @8[5]: FakeRead(ForMatchedPlace, _10)\">                    8<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:24-22:26: @11[1]: _12 = ()\n+22:21-22:27: @11[2]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _12)\"><span class=\"annotation\">@9,11\u298a</span>Ok(())<span class=\"annotation\">\u2989@9,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                else</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:21-26:27: @10[0]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@10\u298a</span>Err(1)<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\"><span class=\"annotation\">@7\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\">            -=</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\">        1<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:8-35:10: @4[4]: _15 = ()\n+35:5-35:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\"><span class=\"annotation\">@4\u298a</span>Ok(())<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:2-36:2: @14.Return: return\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "2d82c3b345309682f33dbcaf7545f604df7b3a56", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2FMakefile?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -8,4 +8,4 @@ LINK_DEAD_CODE=yes\n \n # ISSUE(76038): When targeting MSVC, Rust binaries built with both `-Z instrument-coverage` and\n # `-C link-dead-code` typically crash (with a seg-fault) or at best generate an empty `*.profraw`.\n-# See ../instrument-coverage/coverage_tools.mk for more information.\n\\ No newline at end of file\n+# See ../instrument-coverage/coverage_tools.mk for more information."}, {"sha": "43f75c574d0ee1c07ae5e9f0b60852851a10eb2a", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.closure/closure.main-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>closure.main-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 32\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">||</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:29-35:30: @0[1]: _2 = const 0_i32\n+35:13-35:26: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n+36:12-36:20: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n+36:21-38:10: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n+36:21-38:10: @3[1]: _3 = const ()\">            countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @3[0]: _2 = const 10_i32\n+36:21-38:10: @3[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"39:9-39:23: @4[4]: _6 = const &quot;alt string 2&quot;\n+39:9-39:23: @4[5]: _5 = &amp;(*_6)\n+39:9-39:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+40:6-40:6: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 2\".to_owned()</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"39:9-39:23: @4[4]: _6 = const &quot;alt string 2&quot;\n+39:9-39:23: @4[5]: _5 = &amp;(*_6)\n+39:9-39:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+40:6-40:6: @5.Return: return\">    }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "8f07ec5fcde6621db63896e6bf414372597601ae", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.closure/closure.main-{closure#1}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>closure.main-{closure#1} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 74\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">||</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:29-77:30: @0[1]: _2 = const 0_i32\n+77:13-77:26: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\n+78:12-78:20: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n+78:21-80:10: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n+78:21-80:10: @3[1]: _3 = const ()\">            countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @3[0]: _2 = const 10_i32\n+78:21-80:10: @3[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"81:9-81:23: @4[4]: _6 = const &quot;alt string 4&quot;\n+81:9-81:23: @4[5]: _5 = &amp;(*_6)\n+81:9-81:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+82:6-82:6: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 4\".to_owned()</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"81:9-81:23: @4[4]: _6 = const &quot;alt string 4&quot;\n+81:9-81:23: @4[5]: _5 = &amp;(*_6)\n+81:9-81:34: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+82:6-82:6: @5.Return: return\">    }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "ca9031a1094a40953783abd570fe741e67d306d2", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.closure/closure.main-{closure#2}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>closure.main-{closure#2} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 17\"><span class=\"line\">            <span class=\"code\" style=\"--layer: 0\">||</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:37-20:38: @0[1]: _2 = const 0_i32\n+20:21-20:34: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n+21:20-21:28: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n+21:29-23:18: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n+21:29-23:18: @3[1]: _3 = const ()\">                    countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @3[0]: _2 = const 10_i32\n+21:29-23:18: @3[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:17-24:31: @4[4]: _6 = const &quot;alt string 1&quot;\n+24:17-24:31: @4[5]: _5 = &amp;(*_6)\n+24:17-24:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+25:14-25:14: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 1\".to_owned()</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"24:17-24:31: @4[4]: _6 = const &quot;alt string 1&quot;\n+24:17-24:31: @4[5]: _5 = &amp;(*_6)\n+24:17-24:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+25:14-25:14: @5.Return: return\">            }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "820f8d9c6cf8fb5d1d81a5c7a28c4a9894630356", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.closure/closure.main-{closure#3}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>closure.main-{closure#3} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 59\"><span class=\"line\">            <span class=\"code\" style=\"--layer: 0\">||</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"62:37-62:38: @0[1]: _2 = const 0_i32\n+62:21-62:34: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\n+63:20-63:28: @0[6]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n+63:29-65:18: @3[1]: _3 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n+63:29-65:18: @3[1]: _3 = const ()\">                    countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @3[0]: _2 = const 10_i32\n+63:29-65:18: @3[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"66:17-66:31: @4[4]: _6 = const &quot;alt string 3&quot;\n+66:17-66:31: @4[5]: _5 = &amp;(*_6)\n+66:17-66:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+67:14-67:14: @5.Return: return\"><span class=\"annotation\">@4,5\u298a</span>\"alt string 3\".to_owned()</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"66:17-66:31: @4[4]: _6 = const &quot;alt string 3&quot;\n+66:17-66:31: @4[5]: _5 = &amp;(*_6)\n+66:17-66:42: @4.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb5, unwind: bb6]\n+67:14-67:14: @5.Return: return\">            }<span class=\"annotation\">\u2989@4,5</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "740db3658646f3e08b1e7483b2081cacc34ef96d", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.closure/closure.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 4505, "deletions": 0, "changes": 4505, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc"}, {"sha": "fcb6afb263684c25797ff9fb51234c4ae5190369", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.coverage_of_if_else/coverage_of_if_else.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 641, "changes": 641, "blob_url": "https://github.com/rust-lang/rust/blob/d890e64dff3fd2c28635c60cc9315648dd46c8f7/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.coverage_of_if_else%2Fcoverage_of_if_else.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/d890e64dff3fd2c28635c60cc9315648dd46c8f7/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.coverage_of_if_else%2Fcoverage_of_if_else.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.coverage_of_if_else%2Fcoverage_of_if_else.main.-------.InstrumentCoverage.0.html?ref=d890e64dff3fd2c28635c60cc9315648dd46c8f7", "patch": "@@ -1,641 +0,0 @@\n-<!DOCTYPE html>\n-<html>\n-<head>\n-    <title>coverage_of_if_else - Code Regions</title>\n-    <style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-    </style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"bb1: ../instrument-coverage/coverage_of_if_else.rs:5:5: 7:6:\n-    5:5-7:6: FalseEdge: falseEdge -&gt; [real: bb3, imaginary: bb2]\"><span class=\"annotation\">1\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb3: ../instrument-coverage/coverage_of_if_else.rs:5:5: 7:6:\n-    6:9-6:23: Assign: _1 = const 10_i32\n-    5:13-7:6: Assign: _2 = const ()\n-    5:5-7:6: Goto: goto -&gt; bb4\"><span class=\"annotation\">3\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb2: ../instrument-coverage/coverage_of_if_else.rs:5:5: 7:6:\n-    5:5-7:6: Assign: _2 = const ()\n-    5:5-7:6: Goto: goto -&gt; bb4\"><span class=\"annotation\">2\u298a</span>if </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb0: ../instrument-coverage/coverage_of_if_else.rs:5:8: 5:12:\n-    4:9-4:22: StorageLive: StorageLive(_1)\n-    4:25-4:26: Assign: _1 = const 0_i32\n-    4:9-4:22: FakeRead: FakeRead(ForLet, _1)\n-    5:5-7:6: StorageLive: StorageLive(_2)\n-    5:8-5:12: StorageLive: StorageLive(_3)\n-    5:8-5:12: Assign: _3 = const true\n-    5:8-5:12: FakeRead: FakeRead(ForMatchedPlace, _3)\n-    5:5-7:6: SwitchInt: switchInt(_3) -&gt; [false: bb2, otherwise: bb1]\"><span class=\"annotation\">0\u298a</span>true<span class=\"annotation\">\u29890</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb2: ../instrument-coverage/coverage_of_if_else.rs:5:5: 7:6:\n-    5:5-7:6: Assign: _2 = const ()\n-    5:5-7:6: Goto: goto -&gt; bb4\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb2: ../instrument-coverage/coverage_of_if_else.rs:5:5: 7:6:\n-    5:5-7:6: Assign: _2 = const ()\n-    5:5-7:6: Goto: goto -&gt; bb4\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb2: ../instrument-coverage/coverage_of_if_else.rs:5:5: 7:6:\n-    5:5-7:6: Assign: _2 = const ()\n-    5:5-7:6: Goto: goto -&gt; bb4\">    }<span class=\"annotation\">\u29892</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb3: ../instrument-coverage/coverage_of_if_else.rs:5:5: 7:6:\n-    6:9-6:23: Assign: _1 = const 10_i32\n-    5:13-7:6: Assign: _2 = const ()\n-    5:5-7:6: Goto: goto -&gt; bb4\"><span class=\"annotation\">\u29893</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"bb1: ../instrument-coverage/coverage_of_if_else.rs:5:5: 7:6:\n-    5:5-7:6: FalseEdge: falseEdge -&gt; [real: bb3, imaginary: bb2]\"><span class=\"annotation\">\u29891</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"bb5: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    9:5-18:6: FalseEdge: falseEdge -&gt; [real: bb7, imaginary: bb6]\"><span class=\"annotation\">5\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb8: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    10:9-10:23: Assign: _1 = move (_7.0: i32)\n-    9:22-11:6: Assign: _4 = const ()\n-    9:5-18:6: Goto: goto -&gt; bb25\"><span class=\"annotation\">8\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb24: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    15:9-15:23: Assign: _1 = move (_19.0: i32)\n-    11:29-16:6: Assign: _4 = const ()\n-    18:5-18:6: StorageDead: StorageDead(_8)\n-    9:5-18:6: Goto: goto -&gt; bb25\"><span class=\"annotation\">24\u298a</span>if </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb4: ../instrument-coverage/coverage_of_if_else.rs:9:8: 9:21:\n-    7:5-7:6: StorageDead: StorageDead(_3)\n-    7:5-7:6: StorageDead: StorageDead(_2)\n-    9:5-18:6: StorageLive: StorageLive(_4)\n-    9:8-9:21: StorageLive: StorageLive(_5)\n-    9:8-9:17: StorageLive: StorageLive(_6)\n-    9:8-9:17: Assign: _6 = _1\n-    9:8-9:21: Assign: _5 = Gt(move _6, const 7_i32)\n-    9:20-9:21: StorageDead: StorageDead(_6)\n-    9:8-9:21: FakeRead: FakeRead(ForMatchedPlace, _5)\n-    9:5-18:6: SwitchInt: switchInt(_5) -&gt; [false: bb6, otherwise: bb5]\"><span class=\"annotation\">4\u298a</span>countdown &gt; 7<span class=\"annotation\">\u29894</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb24: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    15:9-15:23: Assign: _1 = move (_19.0: i32)\n-    11:29-16:6: Assign: _4 = const ()\n-    18:5-18:6: StorageDead: StorageDead(_8)\n-    9:5-18:6: Goto: goto -&gt; bb25\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb24: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    15:9-15:23: Assign: _1 = move (_19.0: i32)\n-    11:29-16:6: Assign: _4 = const ()\n-    18:5-18:6: StorageDead: StorageDead(_8)\n-    9:5-18:6: Goto: goto -&gt; bb25\">        </span><span class=\"code odd\" style=\"--layer: 4\" title=\"bb7: ../instrument-coverage/coverage_of_if_else.rs:10:9: 10:23:\n-    10:9-10:23: Assign: _7 = CheckedSub(_1, const 4_i32)\n-    10:9-10:23: Assert: assert(!move (_7.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _1, const 4_i32) -&gt; [success: bb8, unwind: bb78]\"><span class=\"annotation\">7\u298a</span>countdown -= 4<span class=\"annotation\">\u29897</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb24: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    15:9-15:23: Assign: _1 = move (_19.0: i32)\n-    11:29-16:6: Assign: _4 = const ()\n-    18:5-18:6: StorageDead: StorageDead(_8)\n-    9:5-18:6: Goto: goto -&gt; bb25\">;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb24: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    15:9-15:23: Assign: _1 = move (_19.0: i32)\n-    11:29-16:6: Assign: _4 = const ()\n-    18:5-18:6: StorageDead: StorageDead(_8)\n-    9:5-18:6: Goto: goto -&gt; bb25\">    } else </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb9: ../instrument-coverage/coverage_of_if_else.rs:11:12: 18:6:\n-    11:12-18:6: FalseEdge: falseEdge -&gt; [real: bb11, imaginary: bb10]\"><span class=\"annotation\">9\u298a</span>if </span><span class=\"code even\" style=\"--layer: 5\" title=\"bb6: ../instrument-coverage/coverage_of_if_else.rs:11:15: 11:28:\n-    11:15-11:28: StorageLive: StorageLive(_8)\n-    11:15-11:24: StorageLive: StorageLive(_9)\n-    11:15-11:24: Assign: _9 = _1\n-    11:15-11:28: Assign: _8 = Gt(move _9, const 2_i32)\n-    11:27-11:28: StorageDead: StorageDead(_9)\n-    11:15-11:28: FakeRead: FakeRead(ForMatchedPlace, _8)\n-    11:12-18:6: SwitchInt: switchInt(_8) -&gt; [false: bb10, otherwise: bb9]\"><span class=\"annotation\">6\u298a</span>countdown &gt; 2<span class=\"annotation\">\u29896</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"bb9: ../instrument-coverage/coverage_of_if_else.rs:11:12: 18:6:\n-    11:12-18:6: FalseEdge: falseEdge -&gt; [real: bb11, imaginary: bb10]\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb9: ../instrument-coverage/coverage_of_if_else.rs:11:12: 18:6:\n-    11:12-18:6: FalseEdge: falseEdge -&gt; [real: bb11, imaginary: bb10]\">        </span><span class=\"code odd\" style=\"--layer: 5\" title=\"bb20: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    12:9-14:10: FalseEdge: falseEdge -&gt; [real: bb22, imaginary: bb21]\"><span class=\"annotation\">20\u298a</span></span><span class=\"code even\" style=\"--layer: 6\" title=\"bb22: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    13:13-13:26: Assign: _1 = const 0_i32\n-    12:61-14:10: Assign: _10 = const ()\n-    12:9-14:10: Goto: goto -&gt; bb23\"><span class=\"annotation\">22\u298a</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb21: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    12:9-14:10: Assign: _10 = const ()\n-    12:9-14:10: Goto: goto -&gt; bb23\"><span class=\"annotation\">21\u298a</span>if </span><span class=\"code even\" style=\"--layer: 8\" title=\"bb14: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:46-12:60: StorageLive: StorageLive(_17)\n-    12:46-12:55: StorageLive: StorageLive(_18)\n-    12:46-12:55: Assign: _18 = _1\n-    12:46-12:60: Assign: _17 = Ne(move _18, const 9_i32)\n-    12:59-12:60: StorageDead: StorageDead(_18)\n-    12:12-12:60: SwitchInt: switchInt(move _17) -&gt; [false: bb13, otherwise: bb12]\"><span class=\"annotation\">14\u298a</span></span><span class=\"code even\" style=\"--layer: 9\" title=\"bb11: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:9-14:10: StorageLive: StorageLive(_10)\n-    12:12-12:60: StorageLive: StorageLive(_11)\n-    12:12-12:42: StorageLive: StorageLive(_12)\n-    12:12-12:25: StorageLive: StorageLive(_13)\n-    12:12-12:21: StorageLive: StorageLive(_14)\n-    12:12-12:21: Assign: _14 = _1\n-    12:12-12:25: Assign: _13 = Lt(move _14, const 1_i32)\n-    12:24-12:25: StorageDead: StorageDead(_14)\n-    12:12-12:42: SwitchInt: switchInt(move _13) -&gt; [false: bb18, otherwise: bb16]\"><span class=\"annotation\">11\u298a</span></span><span class=\"code even\" style=\"--layer: 10\" title=\"bb13: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:12-12:60: Assign: _11 = const false\n-    12:12-12:60: Goto: goto -&gt; bb15\"><span class=\"annotation\">13\u298a</span></span><span class=\"code even\" style=\"--layer: 11\" title=\"bb19: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:41-12:42: StorageDead: StorageDead(_15)\n-    12:41-12:42: StorageDead: StorageDead(_13)\n-    12:12-12:60: SwitchInt: switchInt(move _12) -&gt; [false: bb14, otherwise: bb12]\"><span class=\"annotation\">19\u298a</span></span><span class=\"code even\" style=\"--layer: 12\" title=\"bb15: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:59-12:60: StorageDead: StorageDead(_17)\n-    12:59-12:60: StorageDead: StorageDead(_12)\n-    12:12-12:60: FakeRead: FakeRead(ForMatchedPlace, _11)\n-    12:9-14:10: SwitchInt: switchInt(_11) -&gt; [false: bb21, otherwise: bb20]\"><span class=\"annotation\">15\u298a</span></span><span class=\"code even\" style=\"--layer: 13\" title=\"bb12: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:12-12:60: Assign: _11 = const true\n-    12:12-12:60: Goto: goto -&gt; bb15\"><span class=\"annotation\">12\u298a</span></span><span class=\"code even\" style=\"--layer: 14\" title=\"bb16: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:42:\n-    12:12-12:42: Assign: _12 = const true\n-    12:12-12:42: Goto: goto -&gt; bb19\"><span class=\"annotation\">16\u298a</span></span><span class=\"code even\" style=\"--layer: 15\" title=\"bb17: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:42:\n-    12:12-12:42: Assign: _12 = const false\n-    12:12-12:42: Goto: goto -&gt; bb19\"><span class=\"annotation\">17\u298a</span></span><span class=\"code even\" style=\"--layer: 16\" title=\"bb18: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:42:\n-    12:29-12:42: StorageLive: StorageLive(_15)\n-    12:29-12:38: StorageLive: StorageLive(_16)\n-    12:29-12:38: Assign: _16 = _1\n-    12:29-12:42: Assign: _15 = Gt(move _16, const 5_i32)\n-    12:41-12:42: StorageDead: StorageDead(_16)\n-    12:12-12:42: SwitchInt: switchInt(move _15) -&gt; [false: bb17, otherwise: bb16]\"><span class=\"annotation\">18\u298a</span>countdown &lt; 1 || countdown &gt; 5<span class=\"annotation\">\u298918</span></span><span class=\"code even\" style=\"--layer: 15\" title=\"bb17: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:42:\n-    12:12-12:42: Assign: _12 = const false\n-    12:12-12:42: Goto: goto -&gt; bb19\"><span class=\"annotation\">\u298917</span></span><span class=\"code even\" style=\"--layer: 14\" title=\"bb16: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:42:\n-    12:12-12:42: Assign: _12 = const true\n-    12:12-12:42: Goto: goto -&gt; bb19\"><span class=\"annotation\">\u298916</span></span><span class=\"code even\" style=\"--layer: 13\" title=\"bb12: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:12-12:60: Assign: _11 = const true\n-    12:12-12:60: Goto: goto -&gt; bb15\"> || countdown != 9<span class=\"annotation\">\u298912</span></span><span class=\"code even\" style=\"--layer: 12\" title=\"bb15: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:59-12:60: StorageDead: StorageDead(_17)\n-    12:59-12:60: StorageDead: StorageDead(_12)\n-    12:12-12:60: FakeRead: FakeRead(ForMatchedPlace, _11)\n-    12:9-14:10: SwitchInt: switchInt(_11) -&gt; [false: bb21, otherwise: bb20]\"><span class=\"annotation\">\u298915</span></span><span class=\"code even\" style=\"--layer: 11\" title=\"bb19: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:41-12:42: StorageDead: StorageDead(_15)\n-    12:41-12:42: StorageDead: StorageDead(_13)\n-    12:12-12:60: SwitchInt: switchInt(move _12) -&gt; [false: bb14, otherwise: bb12]\"><span class=\"annotation\">\u298919</span></span><span class=\"code even\" style=\"--layer: 10\" title=\"bb13: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:12-12:60: Assign: _11 = const false\n-    12:12-12:60: Goto: goto -&gt; bb15\"><span class=\"annotation\">\u298913</span></span><span class=\"code even\" style=\"--layer: 9\" title=\"bb11: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:9-14:10: StorageLive: StorageLive(_10)\n-    12:12-12:60: StorageLive: StorageLive(_11)\n-    12:12-12:42: StorageLive: StorageLive(_12)\n-    12:12-12:25: StorageLive: StorageLive(_13)\n-    12:12-12:21: StorageLive: StorageLive(_14)\n-    12:12-12:21: Assign: _14 = _1\n-    12:12-12:25: Assign: _13 = Lt(move _14, const 1_i32)\n-    12:24-12:25: StorageDead: StorageDead(_14)\n-    12:12-12:42: SwitchInt: switchInt(move _13) -&gt; [false: bb18, otherwise: bb16]\"><span class=\"annotation\">\u298911</span></span><span class=\"code even\" style=\"--layer: 8\" title=\"bb14: ../instrument-coverage/coverage_of_if_else.rs:12:12: 12:60:\n-    12:46-12:60: StorageLive: StorageLive(_17)\n-    12:46-12:55: StorageLive: StorageLive(_18)\n-    12:46-12:55: Assign: _18 = _1\n-    12:46-12:60: Assign: _17 = Ne(move _18, const 9_i32)\n-    12:59-12:60: StorageDead: StorageDead(_18)\n-    12:12-12:60: SwitchInt: switchInt(move _17) -&gt; [false: bb13, otherwise: bb12]\"><span class=\"annotation\">\u298914</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb21: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    12:9-14:10: Assign: _10 = const ()\n-    12:9-14:10: Goto: goto -&gt; bb23\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 7\" title=\"bb21: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    12:9-14:10: Assign: _10 = const ()\n-    12:9-14:10: Goto: goto -&gt; bb23\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 7\" title=\"bb21: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    12:9-14:10: Assign: _10 = const ()\n-    12:9-14:10: Goto: goto -&gt; bb23\">        </span><span class=\"code odd\" style=\"--layer: 8\" title=\"bb23: ../instrument-coverage/coverage_of_if_else.rs:14:9: 15:23:\n-    14:9-14:10: StorageDead: StorageDead(_11)\n-    14:9-14:10: StorageDead: StorageDead(_10)\n-    15:9-15:23: Assign: _19 = CheckedSub(_1, const 5_i32)\n-    15:9-15:23: Assert: assert(!move (_19.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _1, const 5_i32) -&gt; [success: bb24, unwind: bb78]\"><span class=\"annotation\">23\u298a</span>}</span><span class=\"code odd\" style=\"--layer: 5\" title=\"bb20: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    12:9-14:10: FalseEdge: falseEdge -&gt; [real: bb22, imaginary: bb21]\"><span class=\"annotation\">\u298920</span></span><span class=\"code even\" style=\"--layer: 6\" title=\"bb22: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    13:13-13:26: Assign: _1 = const 0_i32\n-    12:61-14:10: Assign: _10 = const ()\n-    12:9-14:10: Goto: goto -&gt; bb23\"><span class=\"annotation\">\u298922</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb21: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    12:9-14:10: Assign: _10 = const ()\n-    12:9-14:10: Goto: goto -&gt; bb23\"><span class=\"annotation\">\u298921</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb21: ../instrument-coverage/coverage_of_if_else.rs:12:9: 14:10:\n-    12:9-14:10: Assign: _10 = const ()\n-    12:9-14:10: Goto: goto -&gt; bb23\"><span class=\"annotation\">\u298921</span></span><span class=\"code odd\" style=\"--layer: 8\" title=\"bb23: ../instrument-coverage/coverage_of_if_else.rs:14:9: 15:23:\n-    14:9-14:10: StorageDead: StorageDead(_11)\n-    14:9-14:10: StorageDead: StorageDead(_10)\n-    15:9-15:23: Assign: _19 = CheckedSub(_1, const 5_i32)\n-    15:9-15:23: Assert: assert(!move (_19.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _1, const 5_i32) -&gt; [success: bb24, unwind: bb78]\"></span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 8\" title=\"bb23: ../instrument-coverage/coverage_of_if_else.rs:14:9: 15:23:\n-    14:9-14:10: StorageDead: StorageDead(_11)\n-    14:9-14:10: StorageDead: StorageDead(_10)\n-    15:9-15:23: Assign: _19 = CheckedSub(_1, const 5_i32)\n-    15:9-15:23: Assert: assert(!move (_19.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _1, const 5_i32) -&gt; [success: bb24, unwind: bb78]\">        countdown -= 5<span class=\"annotation\">\u298923</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"bb9: ../instrument-coverage/coverage_of_if_else.rs:11:12: 18:6:\n-    11:12-18:6: FalseEdge: falseEdge -&gt; [real: bb11, imaginary: bb10]\">;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb9: ../instrument-coverage/coverage_of_if_else.rs:11:12: 18:6:\n-    11:12-18:6: FalseEdge: falseEdge -&gt; [real: bb11, imaginary: bb10]\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb9: ../instrument-coverage/coverage_of_if_else.rs:11:12: 18:6:\n-    11:12-18:6: FalseEdge: falseEdge -&gt; [real: bb11, imaginary: bb10]\">        return;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb9: ../instrument-coverage/coverage_of_if_else.rs:11:12: 18:6:\n-    11:12-18:6: FalseEdge: falseEdge -&gt; [real: bb11, imaginary: bb10]\">    }<span class=\"annotation\">\u29899</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb24: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    15:9-15:23: Assign: _1 = move (_19.0: i32)\n-    11:29-16:6: Assign: _4 = const ()\n-    18:5-18:6: StorageDead: StorageDead(_8)\n-    9:5-18:6: Goto: goto -&gt; bb25\"><span class=\"annotation\">\u298924</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb8: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    10:9-10:23: Assign: _1 = move (_7.0: i32)\n-    9:22-11:6: Assign: _4 = const ()\n-    9:5-18:6: Goto: goto -&gt; bb25\"><span class=\"annotation\">\u29898</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"bb5: ../instrument-coverage/coverage_of_if_else.rs:9:5: 18:6:\n-    9:5-18:6: FalseEdge: falseEdge -&gt; [real: bb7, imaginary: bb6]\"><span class=\"annotation\">\u29895</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"bb27: ../instrument-coverage/coverage_of_if_else.rs:21:5: 23:6:\n-    21:5-23:6: Assign: _22 = const ()\n-    21:5-23:6: Goto: goto -&gt; bb29\"><span class=\"annotation\">27\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb28: ../instrument-coverage/coverage_of_if_else.rs:21:5: 23:6:\n-    22:9-22:23: Assign: _21 = const 10_i32\n-    21:13-23:6: Assign: _22 = const ()\n-    21:5-23:6: Goto: goto -&gt; bb29\"><span class=\"annotation\">28\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb26: ../instrument-coverage/coverage_of_if_else.rs:21:5: 23:6:\n-    21:5-23:6: FalseEdge: falseEdge -&gt; [real: bb28, imaginary: bb27]\"><span class=\"annotation\">26\u298a</span>if </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb25: ../instrument-coverage/coverage_of_if_else.rs:21:8: 21:12:\n-    18:5-18:6: StorageDead: StorageDead(_5)\n-    18:5-18:6: StorageDead: StorageDead(_4)\n-    20:9-20:22: StorageLive: StorageLive(_21)\n-    20:25-20:26: Assign: _21 = const 0_i32\n-    20:9-20:22: FakeRead: FakeRead(ForLet, _21)\n-    21:5-23:6: StorageLive: StorageLive(_22)\n-    21:8-21:12: StorageLive: StorageLive(_23)\n-    21:8-21:12: Assign: _23 = const true\n-    21:8-21:12: FakeRead: FakeRead(ForMatchedPlace, _23)\n-    21:5-23:6: SwitchInt: switchInt(_23) -&gt; [false: bb27, otherwise: bb26]\"><span class=\"annotation\">25\u298a</span>true<span class=\"annotation\">\u298925</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb26: ../instrument-coverage/coverage_of_if_else.rs:21:5: 23:6:\n-    21:5-23:6: FalseEdge: falseEdge -&gt; [real: bb28, imaginary: bb27]\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb26: ../instrument-coverage/coverage_of_if_else.rs:21:5: 23:6:\n-    21:5-23:6: FalseEdge: falseEdge -&gt; [real: bb28, imaginary: bb27]\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb26: ../instrument-coverage/coverage_of_if_else.rs:21:5: 23:6:\n-    21:5-23:6: FalseEdge: falseEdge -&gt; [real: bb28, imaginary: bb27]\">    }<span class=\"annotation\">\u298926</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb28: ../instrument-coverage/coverage_of_if_else.rs:21:5: 23:6:\n-    22:9-22:23: Assign: _21 = const 10_i32\n-    21:13-23:6: Assign: _22 = const ()\n-    21:5-23:6: Goto: goto -&gt; bb29\"><span class=\"annotation\">\u298928</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"bb27: ../instrument-coverage/coverage_of_if_else.rs:21:5: 23:6:\n-    21:5-23:6: Assign: _22 = const ()\n-    21:5-23:6: Goto: goto -&gt; bb29\"><span class=\"annotation\">\u298927</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"bb49: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    31:9-31:23: Assign: _21 = move (_39.0: i32)\n-    27:29-32:6: Assign: _24 = const ()\n-    34:5-34:6: StorageDead: StorageDead(_28)\n-    25:5-34:6: Goto: goto -&gt; bb50\"><span class=\"annotation\">49\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb33: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    26:9-26:23: Assign: _21 = move (_27.0: i32)\n-    25:22-27:6: Assign: _24 = const ()\n-    25:5-34:6: Goto: goto -&gt; bb50\"><span class=\"annotation\">33\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb30: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    25:5-34:6: FalseEdge: falseEdge -&gt; [real: bb32, imaginary: bb31]\"><span class=\"annotation\">30\u298a</span>if </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb29: ../instrument-coverage/coverage_of_if_else.rs:25:8: 25:21:\n-    23:5-23:6: StorageDead: StorageDead(_23)\n-    23:5-23:6: StorageDead: StorageDead(_22)\n-    25:5-34:6: StorageLive: StorageLive(_24)\n-    25:8-25:21: StorageLive: StorageLive(_25)\n-    25:8-25:17: StorageLive: StorageLive(_26)\n-    25:8-25:17: Assign: _26 = _21\n-    25:8-25:21: Assign: _25 = Gt(move _26, const 7_i32)\n-    25:20-25:21: StorageDead: StorageDead(_26)\n-    25:8-25:21: FakeRead: FakeRead(ForMatchedPlace, _25)\n-    25:5-34:6: SwitchInt: switchInt(_25) -&gt; [false: bb31, otherwise: bb30]\"><span class=\"annotation\">29\u298a</span>countdown &gt; 7<span class=\"annotation\">\u298929</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb30: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    25:5-34:6: FalseEdge: falseEdge -&gt; [real: bb32, imaginary: bb31]\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb30: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    25:5-34:6: FalseEdge: falseEdge -&gt; [real: bb32, imaginary: bb31]\">        </span><span class=\"code odd\" style=\"--layer: 4\" title=\"bb32: ../instrument-coverage/coverage_of_if_else.rs:26:9: 26:23:\n-    26:9-26:23: Assign: _27 = CheckedSub(_21, const 4_i32)\n-    26:9-26:23: Assert: assert(!move (_27.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _21, const 4_i32) -&gt; [success: bb33, unwind: bb78]\"><span class=\"annotation\">32\u298a</span>countdown -= 4<span class=\"annotation\">\u298932</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb30: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    25:5-34:6: FalseEdge: falseEdge -&gt; [real: bb32, imaginary: bb31]\">;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb30: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    25:5-34:6: FalseEdge: falseEdge -&gt; [real: bb32, imaginary: bb31]\">    } else </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb34: ../instrument-coverage/coverage_of_if_else.rs:27:12: 34:6:\n-    27:12-34:6: FalseEdge: falseEdge -&gt; [real: bb36, imaginary: bb35]\"><span class=\"annotation\">34\u298a</span>if </span><span class=\"code even\" style=\"--layer: 5\" title=\"bb31: ../instrument-coverage/coverage_of_if_else.rs:27:15: 27:28:\n-    27:15-27:28: StorageLive: StorageLive(_28)\n-    27:15-27:24: StorageLive: StorageLive(_29)\n-    27:15-27:24: Assign: _29 = _21\n-    27:15-27:28: Assign: _28 = Gt(move _29, const 2_i32)\n-    27:27-27:28: StorageDead: StorageDead(_29)\n-    27:15-27:28: FakeRead: FakeRead(ForMatchedPlace, _28)\n-    27:12-34:6: SwitchInt: switchInt(_28) -&gt; [false: bb35, otherwise: bb34]\"><span class=\"annotation\">31\u298a</span>countdown &gt; 2<span class=\"annotation\">\u298931</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"bb34: ../instrument-coverage/coverage_of_if_else.rs:27:12: 34:6:\n-    27:12-34:6: FalseEdge: falseEdge -&gt; [real: bb36, imaginary: bb35]\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb34: ../instrument-coverage/coverage_of_if_else.rs:27:12: 34:6:\n-    27:12-34:6: FalseEdge: falseEdge -&gt; [real: bb36, imaginary: bb35]\">        </span><span class=\"code odd\" style=\"--layer: 5\" title=\"bb46: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    28:9-30:10: Assign: _30 = const ()\n-    28:9-30:10: Goto: goto -&gt; bb48\"><span class=\"annotation\">46\u298a</span></span><span class=\"code even\" style=\"--layer: 6\" title=\"bb47: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    29:13-29:26: Assign: _21 = const 0_i32\n-    28:61-30:10: Assign: _30 = const ()\n-    28:9-30:10: Goto: goto -&gt; bb48\"><span class=\"annotation\">47\u298a</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb45: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    28:9-30:10: FalseEdge: falseEdge -&gt; [real: bb47, imaginary: bb46]\"><span class=\"annotation\">45\u298a</span>if </span><span class=\"code even\" style=\"--layer: 8\" title=\"bb44: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:41-28:42: StorageDead: StorageDead(_35)\n-    28:41-28:42: StorageDead: StorageDead(_33)\n-    28:12-28:60: SwitchInt: switchInt(move _32) -&gt; [false: bb39, otherwise: bb37]\"><span class=\"annotation\">44\u298a</span></span><span class=\"code even\" style=\"--layer: 9\" title=\"bb38: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:12-28:60: Assign: _31 = const false\n-    28:12-28:60: Goto: goto -&gt; bb40\"><span class=\"annotation\">38\u298a</span></span><span class=\"code even\" style=\"--layer: 10\" title=\"bb39: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:46-28:60: StorageLive: StorageLive(_37)\n-    28:46-28:55: StorageLive: StorageLive(_38)\n-    28:46-28:55: Assign: _38 = _21\n-    28:46-28:60: Assign: _37 = Ne(move _38, const 9_i32)\n-    28:59-28:60: StorageDead: StorageDead(_38)\n-    28:12-28:60: SwitchInt: switchInt(move _37) -&gt; [false: bb38, otherwise: bb37]\"><span class=\"annotation\">39\u298a</span></span><span class=\"code even\" style=\"--layer: 11\" title=\"bb40: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:59-28:60: StorageDead: StorageDead(_37)\n-    28:59-28:60: StorageDead: StorageDead(_32)\n-    28:12-28:60: FakeRead: FakeRead(ForMatchedPlace, _31)\n-    28:9-30:10: SwitchInt: switchInt(_31) -&gt; [false: bb46, otherwise: bb45]\"><span class=\"annotation\">40\u298a</span></span><span class=\"code even\" style=\"--layer: 12\" title=\"bb36: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:9-30:10: StorageLive: StorageLive(_30)\n-    28:12-28:60: StorageLive: StorageLive(_31)\n-    28:12-28:42: StorageLive: StorageLive(_32)\n-    28:12-28:25: StorageLive: StorageLive(_33)\n-    28:12-28:21: StorageLive: StorageLive(_34)\n-    28:12-28:21: Assign: _34 = _21\n-    28:12-28:25: Assign: _33 = Lt(move _34, const 1_i32)\n-    28:24-28:25: StorageDead: StorageDead(_34)\n-    28:12-28:42: SwitchInt: switchInt(move _33) -&gt; [false: bb43, otherwise: bb41]\"><span class=\"annotation\">36\u298a</span></span><span class=\"code even\" style=\"--layer: 13\" title=\"bb37: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:12-28:60: Assign: _31 = const true\n-    28:12-28:60: Goto: goto -&gt; bb40\"><span class=\"annotation\">37\u298a</span></span><span class=\"code even\" style=\"--layer: 14\" title=\"bb41: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:42:\n-    28:12-28:42: Assign: _32 = const true\n-    28:12-28:42: Goto: goto -&gt; bb44\"><span class=\"annotation\">41\u298a</span></span><span class=\"code even\" style=\"--layer: 15\" title=\"bb42: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:42:\n-    28:12-28:42: Assign: _32 = const false\n-    28:12-28:42: Goto: goto -&gt; bb44\"><span class=\"annotation\">42\u298a</span></span><span class=\"code even\" style=\"--layer: 16\" title=\"bb43: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:42:\n-    28:29-28:42: StorageLive: StorageLive(_35)\n-    28:29-28:38: StorageLive: StorageLive(_36)\n-    28:29-28:38: Assign: _36 = _21\n-    28:29-28:42: Assign: _35 = Gt(move _36, const 5_i32)\n-    28:41-28:42: StorageDead: StorageDead(_36)\n-    28:12-28:42: SwitchInt: switchInt(move _35) -&gt; [false: bb42, otherwise: bb41]\"><span class=\"annotation\">43\u298a</span>countdown &lt; 1 || countdown &gt; 5<span class=\"annotation\">\u298943</span></span><span class=\"code even\" style=\"--layer: 15\" title=\"bb42: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:42:\n-    28:12-28:42: Assign: _32 = const false\n-    28:12-28:42: Goto: goto -&gt; bb44\"><span class=\"annotation\">\u298942</span></span><span class=\"code even\" style=\"--layer: 14\" title=\"bb41: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:42:\n-    28:12-28:42: Assign: _32 = const true\n-    28:12-28:42: Goto: goto -&gt; bb44\"><span class=\"annotation\">\u298941</span></span><span class=\"code even\" style=\"--layer: 13\" title=\"bb37: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:12-28:60: Assign: _31 = const true\n-    28:12-28:60: Goto: goto -&gt; bb40\"> || countdown != 9<span class=\"annotation\">\u298937</span></span><span class=\"code even\" style=\"--layer: 12\" title=\"bb36: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:9-30:10: StorageLive: StorageLive(_30)\n-    28:12-28:60: StorageLive: StorageLive(_31)\n-    28:12-28:42: StorageLive: StorageLive(_32)\n-    28:12-28:25: StorageLive: StorageLive(_33)\n-    28:12-28:21: StorageLive: StorageLive(_34)\n-    28:12-28:21: Assign: _34 = _21\n-    28:12-28:25: Assign: _33 = Lt(move _34, const 1_i32)\n-    28:24-28:25: StorageDead: StorageDead(_34)\n-    28:12-28:42: SwitchInt: switchInt(move _33) -&gt; [false: bb43, otherwise: bb41]\"><span class=\"annotation\">\u298936</span></span><span class=\"code even\" style=\"--layer: 11\" title=\"bb40: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:59-28:60: StorageDead: StorageDead(_37)\n-    28:59-28:60: StorageDead: StorageDead(_32)\n-    28:12-28:60: FakeRead: FakeRead(ForMatchedPlace, _31)\n-    28:9-30:10: SwitchInt: switchInt(_31) -&gt; [false: bb46, otherwise: bb45]\"><span class=\"annotation\">\u298940</span></span><span class=\"code even\" style=\"--layer: 10\" title=\"bb39: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:46-28:60: StorageLive: StorageLive(_37)\n-    28:46-28:55: StorageLive: StorageLive(_38)\n-    28:46-28:55: Assign: _38 = _21\n-    28:46-28:60: Assign: _37 = Ne(move _38, const 9_i32)\n-    28:59-28:60: StorageDead: StorageDead(_38)\n-    28:12-28:60: SwitchInt: switchInt(move _37) -&gt; [false: bb38, otherwise: bb37]\"><span class=\"annotation\">\u298939</span></span><span class=\"code even\" style=\"--layer: 9\" title=\"bb38: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:12-28:60: Assign: _31 = const false\n-    28:12-28:60: Goto: goto -&gt; bb40\"><span class=\"annotation\">\u298938</span></span><span class=\"code even\" style=\"--layer: 8\" title=\"bb44: ../instrument-coverage/coverage_of_if_else.rs:28:12: 28:60:\n-    28:41-28:42: StorageDead: StorageDead(_35)\n-    28:41-28:42: StorageDead: StorageDead(_33)\n-    28:12-28:60: SwitchInt: switchInt(move _32) -&gt; [false: bb39, otherwise: bb37]\"><span class=\"annotation\">\u298944</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb45: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    28:9-30:10: FalseEdge: falseEdge -&gt; [real: bb47, imaginary: bb46]\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 7\" title=\"bb45: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    28:9-30:10: FalseEdge: falseEdge -&gt; [real: bb47, imaginary: bb46]\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 7\" title=\"bb45: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    28:9-30:10: FalseEdge: falseEdge -&gt; [real: bb47, imaginary: bb46]\">        </span><span class=\"code odd\" style=\"--layer: 8\" title=\"bb48: ../instrument-coverage/coverage_of_if_else.rs:30:9: 31:23:\n-    30:9-30:10: StorageDead: StorageDead(_31)\n-    30:9-30:10: StorageDead: StorageDead(_30)\n-    31:9-31:23: Assign: _39 = CheckedSub(_21, const 5_i32)\n-    31:9-31:23: Assert: assert(!move (_39.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _21, const 5_i32) -&gt; [success: bb49, unwind: bb78]\"><span class=\"annotation\">48\u298a</span>}</span><span class=\"code odd\" style=\"--layer: 5\" title=\"bb46: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    28:9-30:10: Assign: _30 = const ()\n-    28:9-30:10: Goto: goto -&gt; bb48\"><span class=\"annotation\">\u298946</span></span><span class=\"code even\" style=\"--layer: 6\" title=\"bb47: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    29:13-29:26: Assign: _21 = const 0_i32\n-    28:61-30:10: Assign: _30 = const ()\n-    28:9-30:10: Goto: goto -&gt; bb48\"><span class=\"annotation\">\u298947</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb45: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    28:9-30:10: FalseEdge: falseEdge -&gt; [real: bb47, imaginary: bb46]\"><span class=\"annotation\">\u298945</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb45: ../instrument-coverage/coverage_of_if_else.rs:28:9: 30:10:\n-    28:9-30:10: FalseEdge: falseEdge -&gt; [real: bb47, imaginary: bb46]\"><span class=\"annotation\">\u298945</span></span><span class=\"code odd\" style=\"--layer: 8\" title=\"bb48: ../instrument-coverage/coverage_of_if_else.rs:30:9: 31:23:\n-    30:9-30:10: StorageDead: StorageDead(_31)\n-    30:9-30:10: StorageDead: StorageDead(_30)\n-    31:9-31:23: Assign: _39 = CheckedSub(_21, const 5_i32)\n-    31:9-31:23: Assert: assert(!move (_39.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _21, const 5_i32) -&gt; [success: bb49, unwind: bb78]\"></span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 8\" title=\"bb48: ../instrument-coverage/coverage_of_if_else.rs:30:9: 31:23:\n-    30:9-30:10: StorageDead: StorageDead(_31)\n-    30:9-30:10: StorageDead: StorageDead(_30)\n-    31:9-31:23: Assign: _39 = CheckedSub(_21, const 5_i32)\n-    31:9-31:23: Assert: assert(!move (_39.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _21, const 5_i32) -&gt; [success: bb49, unwind: bb78]\">        countdown -= 5<span class=\"annotation\">\u298948</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"bb34: ../instrument-coverage/coverage_of_if_else.rs:27:12: 34:6:\n-    27:12-34:6: FalseEdge: falseEdge -&gt; [real: bb36, imaginary: bb35]\">;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb34: ../instrument-coverage/coverage_of_if_else.rs:27:12: 34:6:\n-    27:12-34:6: FalseEdge: falseEdge -&gt; [real: bb36, imaginary: bb35]\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb34: ../instrument-coverage/coverage_of_if_else.rs:27:12: 34:6:\n-    27:12-34:6: FalseEdge: falseEdge -&gt; [real: bb36, imaginary: bb35]\">        return;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb34: ../instrument-coverage/coverage_of_if_else.rs:27:12: 34:6:\n-    27:12-34:6: FalseEdge: falseEdge -&gt; [real: bb36, imaginary: bb35]\">    }<span class=\"annotation\">\u298934</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb30: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    25:5-34:6: FalseEdge: falseEdge -&gt; [real: bb32, imaginary: bb31]\"><span class=\"annotation\">\u298930</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb33: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    26:9-26:23: Assign: _21 = move (_27.0: i32)\n-    25:22-27:6: Assign: _24 = const ()\n-    25:5-34:6: Goto: goto -&gt; bb50\"><span class=\"annotation\">\u298933</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"bb49: ../instrument-coverage/coverage_of_if_else.rs:25:5: 34:6:\n-    31:9-31:23: Assign: _21 = move (_39.0: i32)\n-    27:29-32:6: Assign: _24 = const ()\n-    34:5-34:6: StorageDead: StorageDead(_28)\n-    25:5-34:6: Goto: goto -&gt; bb50\"><span class=\"annotation\">\u298949</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"bb52: ../instrument-coverage/coverage_of_if_else.rs:37:5: 39:6:\n-    37:5-39:6: Assign: _42 = const ()\n-    37:5-39:6: Goto: goto -&gt; bb54\"><span class=\"annotation\">52\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb51: ../instrument-coverage/coverage_of_if_else.rs:37:5: 39:6:\n-    37:5-39:6: FalseEdge: falseEdge -&gt; [real: bb53, imaginary: bb52]\"><span class=\"annotation\">51\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb53: ../instrument-coverage/coverage_of_if_else.rs:37:5: 39:6:\n-    38:9-38:23: Assign: _41 = const 10_i32\n-    37:13-39:6: Assign: _42 = const ()\n-    37:5-39:6: Goto: goto -&gt; bb54\"><span class=\"annotation\">53\u298a</span>if </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb50: ../instrument-coverage/coverage_of_if_else.rs:37:8: 37:12:\n-    34:5-34:6: StorageDead: StorageDead(_25)\n-    34:5-34:6: StorageDead: StorageDead(_24)\n-    36:9-36:22: StorageLive: StorageLive(_41)\n-    36:25-36:26: Assign: _41 = const 0_i32\n-    36:9-36:22: FakeRead: FakeRead(ForLet, _41)\n-    37:5-39:6: StorageLive: StorageLive(_42)\n-    37:8-37:12: StorageLive: StorageLive(_43)\n-    37:8-37:12: Assign: _43 = const true\n-    37:8-37:12: FakeRead: FakeRead(ForMatchedPlace, _43)\n-    37:5-39:6: SwitchInt: switchInt(_43) -&gt; [false: bb52, otherwise: bb51]\"><span class=\"annotation\">50\u298a</span>true<span class=\"annotation\">\u298950</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb53: ../instrument-coverage/coverage_of_if_else.rs:37:5: 39:6:\n-    38:9-38:23: Assign: _41 = const 10_i32\n-    37:13-39:6: Assign: _42 = const ()\n-    37:5-39:6: Goto: goto -&gt; bb54\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb53: ../instrument-coverage/coverage_of_if_else.rs:37:5: 39:6:\n-    38:9-38:23: Assign: _41 = const 10_i32\n-    37:13-39:6: Assign: _42 = const ()\n-    37:5-39:6: Goto: goto -&gt; bb54\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb53: ../instrument-coverage/coverage_of_if_else.rs:37:5: 39:6:\n-    38:9-38:23: Assign: _41 = const 10_i32\n-    37:13-39:6: Assign: _42 = const ()\n-    37:5-39:6: Goto: goto -&gt; bb54\">    }<span class=\"annotation\">\u298953</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb51: ../instrument-coverage/coverage_of_if_else.rs:37:5: 39:6:\n-    37:5-39:6: FalseEdge: falseEdge -&gt; [real: bb53, imaginary: bb52]\"><span class=\"annotation\">\u298951</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"bb52: ../instrument-coverage/coverage_of_if_else.rs:37:5: 39:6:\n-    37:5-39:6: Assign: _42 = const ()\n-    37:5-39:6: Goto: goto -&gt; bb54\"><span class=\"annotation\">\u298952</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"bb74: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    47:9-47:23: Assign: _41 = move (_58.0: i32)\n-    43:29-48:6: Assign: _0 = const ()\n-    50:5-50:6: StorageDead: StorageDead(_47)\n-    41:5-50:6: Goto: goto -&gt; bb75\"><span class=\"annotation\">74\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb55: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    41:5-50:6: FalseEdge: falseEdge -&gt; [real: bb57, imaginary: bb56]\"><span class=\"annotation\">55\u298a</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb58: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    42:9-42:23: Assign: _41 = move (_46.0: i32)\n-    41:22-43:6: Assign: _0 = const ()\n-    41:5-50:6: Goto: goto -&gt; bb75\"><span class=\"annotation\">58\u298a</span>if </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb54: ../instrument-coverage/coverage_of_if_else.rs:41:8: 41:21:\n-    39:5-39:6: StorageDead: StorageDead(_43)\n-    39:5-39:6: StorageDead: StorageDead(_42)\n-    41:8-41:21: StorageLive: StorageLive(_44)\n-    41:8-41:17: StorageLive: StorageLive(_45)\n-    41:8-41:17: Assign: _45 = _41\n-    41:8-41:21: Assign: _44 = Gt(move _45, const 7_i32)\n-    41:20-41:21: StorageDead: StorageDead(_45)\n-    41:8-41:21: FakeRead: FakeRead(ForMatchedPlace, _44)\n-    41:5-50:6: SwitchInt: switchInt(_44) -&gt; [false: bb56, otherwise: bb55]\"><span class=\"annotation\">54\u298a</span>countdown &gt; 7<span class=\"annotation\">\u298954</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb58: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    42:9-42:23: Assign: _41 = move (_46.0: i32)\n-    41:22-43:6: Assign: _0 = const ()\n-    41:5-50:6: Goto: goto -&gt; bb75\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb58: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    42:9-42:23: Assign: _41 = move (_46.0: i32)\n-    41:22-43:6: Assign: _0 = const ()\n-    41:5-50:6: Goto: goto -&gt; bb75\">        </span><span class=\"code odd\" style=\"--layer: 4\" title=\"bb57: ../instrument-coverage/coverage_of_if_else.rs:42:9: 42:23:\n-    42:9-42:23: Assign: _46 = CheckedSub(_41, const 4_i32)\n-    42:9-42:23: Assert: assert(!move (_46.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _41, const 4_i32) -&gt; [success: bb58, unwind: bb78]\"><span class=\"annotation\">57\u298a</span>countdown -= 4<span class=\"annotation\">\u298957</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb58: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    42:9-42:23: Assign: _41 = move (_46.0: i32)\n-    41:22-43:6: Assign: _0 = const ()\n-    41:5-50:6: Goto: goto -&gt; bb75\">;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 3\" title=\"bb58: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    42:9-42:23: Assign: _41 = move (_46.0: i32)\n-    41:22-43:6: Assign: _0 = const ()\n-    41:5-50:6: Goto: goto -&gt; bb75\">    } else </span><span class=\"code even\" style=\"--layer: 4\" title=\"bb59: ../instrument-coverage/coverage_of_if_else.rs:43:12: 50:6:\n-    43:12-50:6: FalseEdge: falseEdge -&gt; [real: bb61, imaginary: bb60]\"><span class=\"annotation\">59\u298a</span>if </span><span class=\"code even\" style=\"--layer: 5\" title=\"bb56: ../instrument-coverage/coverage_of_if_else.rs:43:15: 43:28:\n-    43:15-43:28: StorageLive: StorageLive(_47)\n-    43:15-43:24: StorageLive: StorageLive(_48)\n-    43:15-43:24: Assign: _48 = _41\n-    43:15-43:28: Assign: _47 = Gt(move _48, const 2_i32)\n-    43:27-43:28: StorageDead: StorageDead(_48)\n-    43:15-43:28: FakeRead: FakeRead(ForMatchedPlace, _47)\n-    43:12-50:6: SwitchInt: switchInt(_47) -&gt; [false: bb60, otherwise: bb59]\"><span class=\"annotation\">56\u298a</span>countdown &gt; 2<span class=\"annotation\">\u298956</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"bb59: ../instrument-coverage/coverage_of_if_else.rs:43:12: 50:6:\n-    43:12-50:6: FalseEdge: falseEdge -&gt; [real: bb61, imaginary: bb60]\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb59: ../instrument-coverage/coverage_of_if_else.rs:43:12: 50:6:\n-    43:12-50:6: FalseEdge: falseEdge -&gt; [real: bb61, imaginary: bb60]\">        </span><span class=\"code odd\" style=\"--layer: 5\" title=\"bb71: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    44:9-46:10: Assign: _49 = const ()\n-    44:9-46:10: Goto: goto -&gt; bb73\"><span class=\"annotation\">71\u298a</span></span><span class=\"code even\" style=\"--layer: 6\" title=\"bb72: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    45:13-45:26: Assign: _41 = const 0_i32\n-    44:61-46:10: Assign: _49 = const ()\n-    44:9-46:10: Goto: goto -&gt; bb73\"><span class=\"annotation\">72\u298a</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb70: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    44:9-46:10: FalseEdge: falseEdge -&gt; [real: bb72, imaginary: bb71]\"><span class=\"annotation\">70\u298a</span>if </span><span class=\"code even\" style=\"--layer: 8\" title=\"bb63: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:12-44:60: Assign: _50 = const false\n-    44:12-44:60: Goto: goto -&gt; bb65\"><span class=\"annotation\">63\u298a</span></span><span class=\"code even\" style=\"--layer: 9\" title=\"bb64: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:46-44:60: StorageLive: StorageLive(_56)\n-    44:46-44:55: StorageLive: StorageLive(_57)\n-    44:46-44:55: Assign: _57 = _41\n-    44:46-44:60: Assign: _56 = Ne(move _57, const 9_i32)\n-    44:59-44:60: StorageDead: StorageDead(_57)\n-    44:12-44:60: SwitchInt: switchInt(move _56) -&gt; [false: bb63, otherwise: bb62]\"><span class=\"annotation\">64\u298a</span></span><span class=\"code even\" style=\"--layer: 10\" title=\"bb65: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:59-44:60: StorageDead: StorageDead(_56)\n-    44:59-44:60: StorageDead: StorageDead(_51)\n-    44:12-44:60: FakeRead: FakeRead(ForMatchedPlace, _50)\n-    44:9-46:10: SwitchInt: switchInt(_50) -&gt; [false: bb71, otherwise: bb70]\"><span class=\"annotation\">65\u298a</span></span><span class=\"code even\" style=\"--layer: 11\" title=\"bb62: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:12-44:60: Assign: _50 = const true\n-    44:12-44:60: Goto: goto -&gt; bb65\"><span class=\"annotation\">62\u298a</span></span><span class=\"code even\" style=\"--layer: 12\" title=\"bb69: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:41-44:42: StorageDead: StorageDead(_54)\n-    44:41-44:42: StorageDead: StorageDead(_52)\n-    44:12-44:60: SwitchInt: switchInt(move _51) -&gt; [false: bb64, otherwise: bb62]\"><span class=\"annotation\">69\u298a</span></span><span class=\"code even\" style=\"--layer: 13\" title=\"bb61: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:9-46:10: StorageLive: StorageLive(_49)\n-    44:12-44:60: StorageLive: StorageLive(_50)\n-    44:12-44:42: StorageLive: StorageLive(_51)\n-    44:12-44:25: StorageLive: StorageLive(_52)\n-    44:12-44:21: StorageLive: StorageLive(_53)\n-    44:12-44:21: Assign: _53 = _41\n-    44:12-44:25: Assign: _52 = Lt(move _53, const 1_i32)\n-    44:24-44:25: StorageDead: StorageDead(_53)\n-    44:12-44:42: SwitchInt: switchInt(move _52) -&gt; [false: bb68, otherwise: bb66]\"><span class=\"annotation\">61\u298a</span></span><span class=\"code even\" style=\"--layer: 14\" title=\"bb67: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:42:\n-    44:12-44:42: Assign: _51 = const false\n-    44:12-44:42: Goto: goto -&gt; bb69\"><span class=\"annotation\">67\u298a</span></span><span class=\"code even\" style=\"--layer: 15\" title=\"bb68: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:42:\n-    44:29-44:42: StorageLive: StorageLive(_54)\n-    44:29-44:38: StorageLive: StorageLive(_55)\n-    44:29-44:38: Assign: _55 = _41\n-    44:29-44:42: Assign: _54 = Gt(move _55, const 5_i32)\n-    44:41-44:42: StorageDead: StorageDead(_55)\n-    44:12-44:42: SwitchInt: switchInt(move _54) -&gt; [false: bb67, otherwise: bb66]\"><span class=\"annotation\">68\u298a</span></span><span class=\"code even\" style=\"--layer: 16\" title=\"bb66: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:42:\n-    44:12-44:42: Assign: _51 = const true\n-    44:12-44:42: Goto: goto -&gt; bb69\"><span class=\"annotation\">66\u298a</span>countdown &lt; 1 || countdown &gt; 5<span class=\"annotation\">\u298966</span></span><span class=\"code even\" style=\"--layer: 15\" title=\"bb68: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:42:\n-    44:29-44:42: StorageLive: StorageLive(_54)\n-    44:29-44:38: StorageLive: StorageLive(_55)\n-    44:29-44:38: Assign: _55 = _41\n-    44:29-44:42: Assign: _54 = Gt(move _55, const 5_i32)\n-    44:41-44:42: StorageDead: StorageDead(_55)\n-    44:12-44:42: SwitchInt: switchInt(move _54) -&gt; [false: bb67, otherwise: bb66]\"><span class=\"annotation\">\u298968</span></span><span class=\"code even\" style=\"--layer: 14\" title=\"bb67: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:42:\n-    44:12-44:42: Assign: _51 = const false\n-    44:12-44:42: Goto: goto -&gt; bb69\"><span class=\"annotation\">\u298967</span></span><span class=\"code even\" style=\"--layer: 13\" title=\"bb61: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:9-46:10: StorageLive: StorageLive(_49)\n-    44:12-44:60: StorageLive: StorageLive(_50)\n-    44:12-44:42: StorageLive: StorageLive(_51)\n-    44:12-44:25: StorageLive: StorageLive(_52)\n-    44:12-44:21: StorageLive: StorageLive(_53)\n-    44:12-44:21: Assign: _53 = _41\n-    44:12-44:25: Assign: _52 = Lt(move _53, const 1_i32)\n-    44:24-44:25: StorageDead: StorageDead(_53)\n-    44:12-44:42: SwitchInt: switchInt(move _52) -&gt; [false: bb68, otherwise: bb66]\"> || countdown != 9<span class=\"annotation\">\u298961</span></span><span class=\"code even\" style=\"--layer: 12\" title=\"bb69: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:41-44:42: StorageDead: StorageDead(_54)\n-    44:41-44:42: StorageDead: StorageDead(_52)\n-    44:12-44:60: SwitchInt: switchInt(move _51) -&gt; [false: bb64, otherwise: bb62]\"><span class=\"annotation\">\u298969</span></span><span class=\"code even\" style=\"--layer: 11\" title=\"bb62: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:12-44:60: Assign: _50 = const true\n-    44:12-44:60: Goto: goto -&gt; bb65\"><span class=\"annotation\">\u298962</span></span><span class=\"code even\" style=\"--layer: 10\" title=\"bb65: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:59-44:60: StorageDead: StorageDead(_56)\n-    44:59-44:60: StorageDead: StorageDead(_51)\n-    44:12-44:60: FakeRead: FakeRead(ForMatchedPlace, _50)\n-    44:9-46:10: SwitchInt: switchInt(_50) -&gt; [false: bb71, otherwise: bb70]\"><span class=\"annotation\">\u298965</span></span><span class=\"code even\" style=\"--layer: 9\" title=\"bb64: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:46-44:60: StorageLive: StorageLive(_56)\n-    44:46-44:55: StorageLive: StorageLive(_57)\n-    44:46-44:55: Assign: _57 = _41\n-    44:46-44:60: Assign: _56 = Ne(move _57, const 9_i32)\n-    44:59-44:60: StorageDead: StorageDead(_57)\n-    44:12-44:60: SwitchInt: switchInt(move _56) -&gt; [false: bb63, otherwise: bb62]\"><span class=\"annotation\">\u298964</span></span><span class=\"code even\" style=\"--layer: 8\" title=\"bb63: ../instrument-coverage/coverage_of_if_else.rs:44:12: 44:60:\n-    44:12-44:60: Assign: _50 = const false\n-    44:12-44:60: Goto: goto -&gt; bb65\"><span class=\"annotation\">\u298963</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb70: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    44:9-46:10: FalseEdge: falseEdge -&gt; [real: bb72, imaginary: bb71]\"> {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 7\" title=\"bb70: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    44:9-46:10: FalseEdge: falseEdge -&gt; [real: bb72, imaginary: bb71]\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 7\" title=\"bb70: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    44:9-46:10: FalseEdge: falseEdge -&gt; [real: bb72, imaginary: bb71]\">        </span><span class=\"code odd\" style=\"--layer: 8\" title=\"bb73: ../instrument-coverage/coverage_of_if_else.rs:46:9: 47:23:\n-    46:9-46:10: StorageDead: StorageDead(_50)\n-    46:9-46:10: StorageDead: StorageDead(_49)\n-    47:9-47:23: Assign: _58 = CheckedSub(_41, const 5_i32)\n-    47:9-47:23: Assert: assert(!move (_58.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _41, const 5_i32) -&gt; [success: bb74, unwind: bb78]\"><span class=\"annotation\">73\u298a</span>}</span><span class=\"code odd\" style=\"--layer: 5\" title=\"bb71: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    44:9-46:10: Assign: _49 = const ()\n-    44:9-46:10: Goto: goto -&gt; bb73\"><span class=\"annotation\">\u298971</span></span><span class=\"code even\" style=\"--layer: 6\" title=\"bb72: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    45:13-45:26: Assign: _41 = const 0_i32\n-    44:61-46:10: Assign: _49 = const ()\n-    44:9-46:10: Goto: goto -&gt; bb73\"><span class=\"annotation\">\u298972</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb70: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    44:9-46:10: FalseEdge: falseEdge -&gt; [real: bb72, imaginary: bb71]\"><span class=\"annotation\">\u298970</span></span><span class=\"code even\" style=\"--layer: 7\" title=\"bb70: ../instrument-coverage/coverage_of_if_else.rs:44:9: 46:10:\n-    44:9-46:10: FalseEdge: falseEdge -&gt; [real: bb72, imaginary: bb71]\"><span class=\"annotation\">\u298970</span></span><span class=\"code odd\" style=\"--layer: 8\" title=\"bb73: ../instrument-coverage/coverage_of_if_else.rs:46:9: 47:23:\n-    46:9-46:10: StorageDead: StorageDead(_50)\n-    46:9-46:10: StorageDead: StorageDead(_49)\n-    47:9-47:23: Assign: _58 = CheckedSub(_41, const 5_i32)\n-    47:9-47:23: Assert: assert(!move (_58.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _41, const 5_i32) -&gt; [success: bb74, unwind: bb78]\"></span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 8\" title=\"bb73: ../instrument-coverage/coverage_of_if_else.rs:46:9: 47:23:\n-    46:9-46:10: StorageDead: StorageDead(_50)\n-    46:9-46:10: StorageDead: StorageDead(_49)\n-    47:9-47:23: Assign: _58 = CheckedSub(_41, const 5_i32)\n-    47:9-47:23: Assert: assert(!move (_58.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _41, const 5_i32) -&gt; [success: bb74, unwind: bb78]\">        countdown -= 5<span class=\"annotation\">\u298973</span></span><span class=\"code even\" style=\"--layer: 4\" title=\"bb59: ../instrument-coverage/coverage_of_if_else.rs:43:12: 50:6:\n-    43:12-50:6: FalseEdge: falseEdge -&gt; [real: bb61, imaginary: bb60]\">;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb59: ../instrument-coverage/coverage_of_if_else.rs:43:12: 50:6:\n-    43:12-50:6: FalseEdge: falseEdge -&gt; [real: bb61, imaginary: bb60]\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb59: ../instrument-coverage/coverage_of_if_else.rs:43:12: 50:6:\n-    43:12-50:6: FalseEdge: falseEdge -&gt; [real: bb61, imaginary: bb60]\">        return;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 4\" title=\"bb59: ../instrument-coverage/coverage_of_if_else.rs:43:12: 50:6:\n-    43:12-50:6: FalseEdge: falseEdge -&gt; [real: bb61, imaginary: bb60]\">    }<span class=\"annotation\">\u298959</span></span><span class=\"code even\" style=\"--layer: 3\" title=\"bb58: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    42:9-42:23: Assign: _41 = move (_46.0: i32)\n-    41:22-43:6: Assign: _0 = const ()\n-    41:5-50:6: Goto: goto -&gt; bb75\"><span class=\"annotation\">\u298958</span></span><span class=\"code even\" style=\"--layer: 2\" title=\"bb55: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    41:5-50:6: FalseEdge: falseEdge -&gt; [real: bb57, imaginary: bb56]\"><span class=\"annotation\">\u298955</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"bb74: ../instrument-coverage/coverage_of_if_else.rs:41:5: 50:6:\n-    47:9-47:23: Assign: _41 = move (_58.0: i32)\n-    43:29-48:6: Assign: _0 = const ()\n-    50:5-50:6: StorageDead: StorageDead(_47)\n-    41:5-50:6: Goto: goto -&gt; bb75\"><span class=\"annotation\">\u298974</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"bb75: ../instrument-coverage/coverage_of_if_else.rs:51:1: 51:2:\n-    51:1-51:2: StorageDead: StorageDead(_41)\n-    51:1-51:2: StorageDead: StorageDead(_21)\n-    51:1-51:2: StorageDead: StorageDead(_1)\n-    51:1-51:2: StorageDead: StorageDead(_44)\n-    51:2-51:2: Goto: goto -&gt; bb77\"><span class=\"annotation\">75\u298a</span>}<span class=\"annotation\">\u298975</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"bb77: ../instrument-coverage/coverage_of_if_else.rs:51:2: 51:2:\n-    51:2-51:2: Return: return\"><span class=\"annotation\">77\u298a</span>\u2038<span class=\"annotation\">\u298977</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "494e6f20ea7635d083740659934cc87244889565", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.drop_trait/drop_trait.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,119 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>drop_trait.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 13\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n+15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n+17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n+17:9-17:13: @0[5]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>_firecracker = Firework { strength: 1 };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n+15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n+17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n+17:9-17:13: @0[5]: FakeRead(ForLet, _2)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n+15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n+17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n+17:9-17:13: @0[5]: FakeRead(ForLet, _2)\">    let _tnt = Firework { strength: 100 }<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:8-19:12: @0[8]: _4 = const true\n+19:8-19:12: @0[9]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@0\u298a</span>true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:18-20:41: @3[6]: _21 = const main::promoted[1]\n+20:18-20:41: @3[7]: _11 = &amp;(*_21)\n+20:18-20:41: @3[8]: _10 = &amp;(*_11)\n+20:18-20:41: @3[9]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n+20:9-20:43: @3[15]: _17 = ()\n+20:9-20:43: @3[16]: FakeRead(ForMatchedPlace, _17)\n+20:9-20:43: @3[17]: _20 = const main::promoted[0]\n+20:9-20:43: @3[18]: _15 = &amp;(*_20)\n+20:9-20:43: @3[19]: _14 = &amp;(*_15)\n+20:9-20:43: @3[20]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:9-20:43: @3.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb4, unwind: bb12]\n+20:9-20:43: @4.Call: _7 = _print(move _8) -&gt; [return: bb5, unwind: bb12]\n+20:9-20:43: @5[5]: _6 = const ()\n+21:16-21:22: @5[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@1,3,4,5,9,10\u298a</span>println!(\"Exiting with error...\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"20:18-20:41: @3[6]: _21 = const main::promoted[1]\n+20:18-20:41: @3[7]: _11 = &amp;(*_21)\n+20:18-20:41: @3[8]: _10 = &amp;(*_11)\n+20:18-20:41: @3[9]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n+20:9-20:43: @3[15]: _17 = ()\n+20:9-20:43: @3[16]: FakeRead(ForMatchedPlace, _17)\n+20:9-20:43: @3[17]: _20 = const main::promoted[0]\n+20:9-20:43: @3[18]: _15 = &amp;(*_20)\n+20:9-20:43: @3[19]: _14 = &amp;(*_15)\n+20:9-20:43: @3[20]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:9-20:43: @3.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb4, unwind: bb12]\n+20:9-20:43: @4.Call: _7 = _print(move _8) -&gt; [return: bb5, unwind: bb12]\n+20:9-20:43: @5[5]: _6 = const ()\n+21:16-21:22: @5[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\">        return Err(1)<span class=\"annotation\">\u2989@1,3,4,5,9,10</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let _ = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n+26:8-26:10: @6[2]: _19 = ()\n+26:5-26:11: @6[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"><span class=\"annotation\">@2,6,7,8\u298a</span>Firework { strength: 1000 };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n+26:8-26:10: @6[2]: _19 = ()\n+26:5-26:11: @6[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n+26:8-26:10: @6[2]: _19 = ()\n+26:5-26:11: @6[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\">    Ok(())<span class=\"annotation\">\u2989@2,6,7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:2-27:2: @11.Return: return\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "9530d12fb493e0ad84fa287912471255874fd264", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.drop_trait/drop_trait.{impl#0}-drop.-------.InstrumentCoverage.0.html", "status": "added", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,123 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>drop_trait.{impl#0}-drop - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn drop(&amp;mut self) </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as Drop&gt;::drop::promoted[0]\n+10:18-10:36: @0[7]: _7 = &amp;(*_19)\n+10:18-10:36: @0[8]: _6 = &amp;(*_7)\n+10:18-10:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+10:38-10:51: @0[17]: _14 = &amp;((*_1).0: i32)\n+10:9-10:53: @0[18]: _13 = (move _14,)\n+10:9-10:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n+10:9-10:53: @0[22]: _15 = (_13.0: &amp;i32)\n+10:9-10:53: @0[25]: _17 = &amp;(*_15)\n+10:9-10:53: @0[27]: _18 = &lt;i32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+10:9-10:53: @0.Call: _16 = ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+10:9-10:53: @1[2]: _12 = [move _16]\n+10:9-10:53: @1[5]: _11 = &amp;_12\n+10:9-10:53: @1[6]: _10 = &amp;(*_11)\n+10:9-10:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+10:9-10:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+10:9-10:53: @3[6]: _2 = const ()\n+9:24-11:6: @3[8]: _0 = const ()\n+11:6-11:6: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as Drop&gt;::drop::promoted[0]\n+10:18-10:36: @0[7]: _7 = &amp;(*_19)\n+10:18-10:36: @0[8]: _6 = &amp;(*_7)\n+10:18-10:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+10:38-10:51: @0[17]: _14 = &amp;((*_1).0: i32)\n+10:9-10:53: @0[18]: _13 = (move _14,)\n+10:9-10:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n+10:9-10:53: @0[22]: _15 = (_13.0: &amp;i32)\n+10:9-10:53: @0[25]: _17 = &amp;(*_15)\n+10:9-10:53: @0[27]: _18 = &lt;i32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+10:9-10:53: @0.Call: _16 = ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+10:9-10:53: @1[2]: _12 = [move _16]\n+10:9-10:53: @1[5]: _11 = &amp;_12\n+10:9-10:53: @1[6]: _10 = &amp;(*_11)\n+10:9-10:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+10:9-10:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+10:9-10:53: @3[6]: _2 = const ()\n+9:24-11:6: @3[8]: _0 = const ()\n+11:6-11:6: @3.Return: return\">        println!(\"BOOM times {}!!!\", self.strength);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as Drop&gt;::drop::promoted[0]\n+10:18-10:36: @0[7]: _7 = &amp;(*_19)\n+10:18-10:36: @0[8]: _6 = &amp;(*_7)\n+10:18-10:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+10:38-10:51: @0[17]: _14 = &amp;((*_1).0: i32)\n+10:9-10:53: @0[18]: _13 = (move _14,)\n+10:9-10:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n+10:9-10:53: @0[22]: _15 = (_13.0: &amp;i32)\n+10:9-10:53: @0[25]: _17 = &amp;(*_15)\n+10:9-10:53: @0[27]: _18 = &lt;i32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+10:9-10:53: @0.Call: _16 = ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+10:9-10:53: @1[2]: _12 = [move _16]\n+10:9-10:53: @1[5]: _11 = &amp;_12\n+10:9-10:53: @1[6]: _10 = &amp;(*_11)\n+10:9-10:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+10:9-10:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+10:9-10:53: @3[6]: _2 = const ()\n+9:24-11:6: @3[8]: _0 = const ()\n+11:6-11:6: @3.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "6dc893d28ff524f756e7c41b824727d65aabbc92", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.generics/generics.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 167, "deletions": 0, "changes": 167, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,167 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>generics.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 21\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n+23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n+24:5-24:16: @0[5]: _3 = &amp;mut _1\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n+26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n+27:5-27:8: @1[7]: _6 = &amp;mut _4\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+28:5-28:8: @2[4]: _8 = &amp;mut _4\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\"><span class=\"annotation\">@0,1,2,3\u298a</span>mut firecracker = Firework { strength: 1 };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n+23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n+24:5-24:16: @0[5]: _3 = &amp;mut _1\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n+26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n+27:5-27:8: @1[7]: _6 = &amp;mut _4\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+28:5-28:8: @2[4]: _8 = &amp;mut _4\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\">    firecracker.set_strength(2);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n+23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n+24:5-24:16: @0[5]: _3 = &amp;mut _1\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n+26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n+27:5-27:8: @1[7]: _6 = &amp;mut _4\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+28:5-28:8: @2[4]: _8 = &amp;mut _4\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n+23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n+24:5-24:16: @0[5]: _3 = &amp;mut _1\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n+26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n+27:5-27:8: @1[7]: _6 = &amp;mut _4\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+28:5-28:8: @2[4]: _8 = &amp;mut _4\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\">    let mut tnt = Firework { strength: 100.1 };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n+23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n+24:5-24:16: @0[5]: _3 = &amp;mut _1\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n+26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n+27:5-27:8: @1[7]: _6 = &amp;mut _4\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+28:5-28:8: @2[4]: _8 = &amp;mut _4\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\">    tnt.set_strength(200.1);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n+23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n+24:5-24:16: @0[5]: _3 = &amp;mut _1\n+24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb16]\n+26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n+26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n+27:5-27:8: @1[7]: _6 = &amp;mut _4\n+27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb15]\n+28:5-28:8: @2[4]: _8 = &amp;mut _4\n+28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb15]\">    tnt.set_strength(300.3)<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:8-30:12: @3[4]: _10 = const true\n+30:8-30:12: @3[5]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@0,1,2,3\u298a</span>true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:18-31:41: @6[6]: _27 = const main::promoted[1]\n+31:18-31:41: @6[7]: _17 = &amp;(*_27)\n+31:18-31:41: @6[8]: _16 = &amp;(*_17)\n+31:18-31:41: @6[9]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n+31:9-31:43: @6[15]: _23 = ()\n+31:9-31:43: @6[16]: FakeRead(ForMatchedPlace, _23)\n+31:9-31:43: @6[17]: _26 = const main::promoted[0]\n+31:9-31:43: @6[18]: _21 = &amp;(*_26)\n+31:9-31:43: @6[19]: _20 = &amp;(*_21)\n+31:9-31:43: @6[20]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+31:9-31:43: @6.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb7, unwind: bb15]\n+31:9-31:43: @7.Call: _13 = _print(move _14) -&gt; [return: bb8, unwind: bb15]\n+31:9-31:43: @8[5]: _12 = const ()\n+32:16-32:22: @8[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@4,6,7,8,12,13\u298a</span>println!(\"Exiting with error...\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:18-31:41: @6[6]: _27 = const main::promoted[1]\n+31:18-31:41: @6[7]: _17 = &amp;(*_27)\n+31:18-31:41: @6[8]: _16 = &amp;(*_17)\n+31:18-31:41: @6[9]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n+31:9-31:43: @6[15]: _23 = ()\n+31:9-31:43: @6[16]: FakeRead(ForMatchedPlace, _23)\n+31:9-31:43: @6[17]: _26 = const main::promoted[0]\n+31:9-31:43: @6[18]: _21 = &amp;(*_26)\n+31:9-31:43: @6[19]: _20 = &amp;(*_21)\n+31:9-31:43: @6[20]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+31:9-31:43: @6.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb7, unwind: bb15]\n+31:9-31:43: @7.Call: _13 = _print(move _14) -&gt; [return: bb8, unwind: bb15]\n+31:9-31:43: @8[5]: _12 = const ()\n+32:16-32:22: @8[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\">        return Err(1)<span class=\"annotation\">\u2989@4,6,7,8,12,13</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let _ = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:13-35:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n+37:8-37:10: @9[2]: _25 = ()\n+37:5-37:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"><span class=\"annotation\">@5,9,10,11\u298a</span>Firework { strength: 1000 };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:13-35:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n+37:8-37:10: @9[2]: _25 = ()\n+37:5-37:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:13-35:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n+37:8-37:10: @9[2]: _25 = ()\n+37:5-37:11: @9[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">    Ok(())<span class=\"annotation\">\u2989@5,9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:2-38:2: @14.Return: return\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "e31e47b81d4fcc929d6d71cfc8953db88de3bfc3", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.generics/generics.{impl#0}-set_strength.-------.InstrumentCoverage.0.html", "status": "renamed", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%230%7D-set_strength.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%230%7D-set_strength.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%230%7D-set_strength.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -1,8 +1,8 @@\n <!DOCTYPE html>\n <html>\n <head>\n-    <title>coverage_of_if_else - Code Regions</title>\n-    <style>\n+<title>generics.{impl#0}-set_strength - Coverage Spans</title>\n+<style>\n     .line {\n         counter-increment: line;\n     }\n@@ -56,11 +56,20 @@\n         /* requires hover over a span ONLY on its first line */\n         display: inline-block;\n     }\n-    </style>\n+</style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"0[0]: $DIR/spanview-statement.rs:5:11: 5:13:\n-    5:11-5:13: Assign: _0 = const ()\"><span class=\"annotation\">0[0]\u298a</span>{}<span class=\"annotation\">\u29890[0]</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"0:Return: $DIR/spanview-statement.rs:5:13: 5:13:\n-    5:13-5:13: Return: return\"><span class=\"annotation\">0:Return\u298a</span>\u2038<span class=\"annotation\">\u29890:Return</span></span></span></span></div>\n+<div class=\"code\" style=\"counter-reset: line 9\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn set_strength(&amp;mut self, new_strength: T) </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"11:25-11:37: @0[1]: _3 = _2\n+11:9-11:37: @0[2]: ((*_1).0: T) = move _3\n+10:49-12:6: @0[4]: _0 = const ()\n+12:6-12:6: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"11:25-11:37: @0[1]: _3 = _2\n+11:9-11:37: @0[2]: ((*_1).0: T) = move _3\n+10:49-12:6: @0[4]: _0 = const ()\n+12:6-12:6: @0.Return: return\">        self.strength = new_strength;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"11:25-11:37: @0[1]: _3 = _2\n+11:9-11:37: @0[2]: ((*_1).0: T) = move _3\n+10:49-12:6: @0[4]: _0 = const ()\n+12:6-12:6: @0.Return: return\">    }<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n </body>\n </html>", "previous_filename": "src/test/mir-opt/spanview_statement.main.mir_map.0.html.mir"}, {"sha": "99a7df4a670536a4688347c1330afd73cf349473", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.generics/generics.{impl#1}-drop.-------.InstrumentCoverage.0.html", "status": "added", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,123 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>generics.{impl#1}-drop - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn drop(&amp;mut self) </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as Drop&gt;::drop::promoted[0]\n+18:18-18:36: @0[7]: _7 = &amp;(*_19)\n+18:18-18:36: @0[8]: _6 = &amp;(*_7)\n+18:18-18:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+18:38-18:51: @0[17]: _14 = &amp;((*_1).0: T)\n+18:9-18:53: @0[18]: _13 = (move _14,)\n+18:9-18:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n+18:9-18:53: @0[22]: _15 = (_13.0: &amp;T)\n+18:9-18:53: @0[25]: _17 = &amp;(*_15)\n+18:9-18:53: @0[27]: _18 = &lt;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+18:9-18:53: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+18:9-18:53: @1[2]: _12 = [move _16]\n+18:9-18:53: @1[5]: _11 = &amp;_12\n+18:9-18:53: @1[6]: _10 = &amp;(*_11)\n+18:9-18:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+18:9-18:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+18:9-18:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+18:9-18:53: @3[6]: _2 = const ()\n+17:24-19:6: @3[8]: _0 = const ()\n+19:6-19:6: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as Drop&gt;::drop::promoted[0]\n+18:18-18:36: @0[7]: _7 = &amp;(*_19)\n+18:18-18:36: @0[8]: _6 = &amp;(*_7)\n+18:18-18:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+18:38-18:51: @0[17]: _14 = &amp;((*_1).0: T)\n+18:9-18:53: @0[18]: _13 = (move _14,)\n+18:9-18:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n+18:9-18:53: @0[22]: _15 = (_13.0: &amp;T)\n+18:9-18:53: @0[25]: _17 = &amp;(*_15)\n+18:9-18:53: @0[27]: _18 = &lt;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+18:9-18:53: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+18:9-18:53: @1[2]: _12 = [move _16]\n+18:9-18:53: @1[5]: _11 = &amp;_12\n+18:9-18:53: @1[6]: _10 = &amp;(*_11)\n+18:9-18:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+18:9-18:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+18:9-18:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+18:9-18:53: @3[6]: _2 = const ()\n+17:24-19:6: @3[8]: _0 = const ()\n+19:6-19:6: @3.Return: return\">        println!(\"BOOM times {}!!!\", self.strength);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as Drop&gt;::drop::promoted[0]\n+18:18-18:36: @0[7]: _7 = &amp;(*_19)\n+18:18-18:36: @0[8]: _6 = &amp;(*_7)\n+18:18-18:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+18:38-18:51: @0[17]: _14 = &amp;((*_1).0: T)\n+18:9-18:53: @0[18]: _13 = (move _14,)\n+18:9-18:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n+18:9-18:53: @0[22]: _15 = (_13.0: &amp;T)\n+18:9-18:53: @0[25]: _17 = &amp;(*_15)\n+18:9-18:53: @0[27]: _18 = &lt;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+18:9-18:53: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+18:9-18:53: @1[2]: _12 = [move _16]\n+18:9-18:53: @1[5]: _11 = &amp;_12\n+18:9-18:53: @1[6]: _10 = &amp;(*_11)\n+18:9-18:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+18:9-18:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+18:9-18:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+18:9-18:53: @3[6]: _2 = const ()\n+17:24-19:6: @3[8]: _0 = const ()\n+19:6-19:6: @3.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "0379d900e9409c44e10b8520054e55aac4aba0cc", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.if/if.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 162, "deletions": 0, "changes": 162, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,162 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>if.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    =</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">        std::env::args().len()</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    ==</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">        1</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    let</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">        mut</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">    =</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+10:9-10:25: @1[0]: _3 = &amp;_4\n+10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n+8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n+18:9-18:10: @3[2]: _5 = const 0_i32\n+15:9-16:14: @3[3]: FakeRead(ForLet, _5)\">        0<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:9-21:16: @3[5]: _6 = _1\n+21:9-21:16: @3[6]: FakeRead(ForMatchedPlace, _6)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n+22:5-27:6: @6[1]: _0 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n+22:5-27:6: @6[1]: _0 = const ()\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n+22:5-27:6: @6[1]: _0 = const ()\">        =</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n+22:5-27:6: @6[1]: _0 = const ()\">            10</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n+22:5-27:6: @6[1]: _0 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @6[0]: _5 = const 10_i32\n+22:5-27:6: @6[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:2-28:2: @7.Return: return\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "b51c5c84c0d6e31580988f8af17b783910438b65", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.if_else/if_else.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 163, "deletions": 0, "changes": 163, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,163 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>if_else.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n+11:9-11:16: @3[6]: _7 = _1\n+11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n+11:9-11:16: @3[6]: _7 = _1\n+11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n+11:9-11:16: @3[6]: _7 = _1\n+11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    let mut countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n+11:9-11:16: @3[6]: _7 = _1\n+11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">    if</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n+11:9-11:16: @3[6]: _7 = _1\n+11:9-11:16: @3[7]: FakeRead(ForMatchedPlace, _7)\">        is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n+12:5-17:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n+12:5-17:6: @6[1]: _6 = const ()\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n+12:5-17:6: @6[1]: _6 = const ()\">        =</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n+12:5-17:6: @6[1]: _6 = const ()\">            10</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n+12:5-17:6: @6[1]: _6 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @6[0]: _5 = const 10_i32\n+12:5-17:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    else // Note coverage region difference without semicolon</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:9-22:16: @5[0]: _5 = const 100_i32\n+20:9-22:16: @5[1]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"20:9-22:16: @5[0]: _5 = const 100_i32\n+20:9-22:16: @5[1]: _6 = const ()\">        =</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"20:9-22:16: @5[0]: _5 = const 100_i32\n+20:9-22:16: @5[1]: _6 = const ()\">            100<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:9-26:16: @7[3]: _8 = _1\n+26:9-26:16: @7[4]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@7\u298a</span>is_true<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+27:5-32:6: @10[1]: _0 = const ()\"><span class=\"annotation\">@8,10\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+27:5-32:6: @10[1]: _0 = const ()\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+27:5-32:6: @10[1]: _0 = const ()\">        =</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+27:5-32:6: @10[1]: _0 = const ()\">            10</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+27:5-32:6: @10[1]: _0 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @10[0]: _5 = const 10_i32\n+27:5-32:6: @10[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@8,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    else</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+34:5-39:6: @9[1]: _0 = const ()\"><span class=\"annotation\">@9\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+34:5-39:6: @9[1]: _0 = const ()\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+34:5-39:6: @9[1]: _0 = const ()\">        =</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+34:5-39:6: @9[1]: _0 = const ()\">            100</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+34:5-39:6: @9[1]: _0 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @9[0]: _5 = const 100_i32\n+34:5-39:6: @9[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:2-40:2: @11.Return: return\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "6998bb32a3f56a69df7ac64a92e3d1d699c180f6", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.inner_items/inner_items.main-InnerTrait-default_trait_func.-------.InstrumentCoverage.0.html", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.inner_items%2Finner_items.main-InnerTrait-default_trait_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.inner_items%2Finner_items.main-InnerTrait-default_trait_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.inner_items%2Finner_items.main-InnerTrait-default_trait_func.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,83 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>inner_items.main-InnerTrait-default_trait_func - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 32\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">fn default_trait_func(&amp;mut self) </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:40: @0.Call: _2 = inner_function(const INNER_CONST) -&gt; [return: bb1, unwind: bb3]\n+35:13-35:17: @1[3]: _4 = &amp;mut (*_1)\n+35:13-35:47: @1.Call: _3 = &lt;Self as InnerTrait&gt;::inner_trait_func(move _4, const INNER_CONST) -&gt; [return: bb2, unwind: bb3]\n+33:42-36:10: @2[2]: _0 = const ()\n+36:10-36:10: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:40: @0.Call: _2 = inner_function(const INNER_CONST) -&gt; [return: bb1, unwind: bb3]\n+35:13-35:17: @1[3]: _4 = &amp;mut (*_1)\n+35:13-35:47: @1.Call: _3 = &lt;Self as InnerTrait&gt;::inner_trait_func(move _4, const INNER_CONST) -&gt; [return: bb2, unwind: bb3]\n+33:42-36:10: @2[2]: _0 = const ()\n+36:10-36:10: @2.Return: return\">            inner_function(INNER_CONST);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:40: @0.Call: _2 = inner_function(const INNER_CONST) -&gt; [return: bb1, unwind: bb3]\n+35:13-35:17: @1[3]: _4 = &amp;mut (*_1)\n+35:13-35:47: @1.Call: _3 = &lt;Self as InnerTrait&gt;::inner_trait_func(move _4, const INNER_CONST) -&gt; [return: bb2, unwind: bb3]\n+33:42-36:10: @2[2]: _0 = const ()\n+36:10-36:10: @2.Return: return\">            self.inner_trait_func(INNER_CONST);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:40: @0.Call: _2 = inner_function(const INNER_CONST) -&gt; [return: bb1, unwind: bb3]\n+35:13-35:17: @1[3]: _4 = &amp;mut (*_1)\n+35:13-35:47: @1.Call: _3 = &lt;Self as InnerTrait&gt;::inner_trait_func(move _4, const INNER_CONST) -&gt; [return: bb2, unwind: bb3]\n+33:42-36:10: @2[2]: _0 = const ()\n+36:10-36:10: @2.Return: return\">        }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "c87ff329f3fe8a87fb875419dac78802a725ea93", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.inner_items/inner_items.main-inner_function.-------.InstrumentCoverage.0.html", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.inner_items%2Finner_items.main-inner_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.inner_items%2Finner_items.main-inner_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.inner_items%2Finner_items.main-inner_function.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,107 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>inner_items.main-inner_function - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 17\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn inner_function(a: u32) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n+19:13-19:14: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>b = 1<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:13-20:14: @1[3]: FakeRead(ForLet, _3)\"><span class=\"annotation\">@1,2,3,4\u298a</span>c<span class=\"annotation\">\u2989@1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:17-20:18: @0[5]: _4 = _1\n+20:21-20:22: @0[7]: _5 = _2\n+20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\"><span class=\"annotation\">@0\u298a</span>a + b<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:26: @1[9]: _23 = const inner_function::promoted[0]\n+21:18-21:26: @1[10]: _11 = &amp;(*_23)\n+21:18-21:26: @1[11]: _10 = &amp;(*_11)\n+21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n+21:28-21:29: @1[20]: _18 = &amp;_3\n+21:9-21:30: @1[21]: _17 = (move _18,)\n+21:9-21:30: @1[23]: FakeRead(ForMatchedPlace, _17)\n+21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n+21:9-21:30: @1[28]: _21 = &amp;(*_19)\n+21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+21:9-21:30: @1.Call: _20 = ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n+21:9-21:30: @2[2]: _16 = [move _20]\n+21:9-21:30: @2[5]: _15 = &amp;_16\n+21:9-21:30: @2[6]: _14 = &amp;(*_15)\n+21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n+21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n+21:9-21:30: @4[6]: _0 = const ()\n+22:6-22:6: @4.Return: return\"><span class=\"annotation\">@1,2,3,4\u298a</span>println!(\"c = {}\", c)</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:26: @1[9]: _23 = const inner_function::promoted[0]\n+21:18-21:26: @1[10]: _11 = &amp;(*_23)\n+21:18-21:26: @1[11]: _10 = &amp;(*_11)\n+21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n+21:28-21:29: @1[20]: _18 = &amp;_3\n+21:9-21:30: @1[21]: _17 = (move _18,)\n+21:9-21:30: @1[23]: FakeRead(ForMatchedPlace, _17)\n+21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n+21:9-21:30: @1[28]: _21 = &amp;(*_19)\n+21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+21:9-21:30: @1.Call: _20 = ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n+21:9-21:30: @2[2]: _16 = [move _20]\n+21:9-21:30: @2[5]: _15 = &amp;_16\n+21:9-21:30: @2[6]: _14 = &amp;(*_15)\n+21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n+21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n+21:9-21:30: @4[6]: _0 = const ()\n+22:6-22:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@1,2,3,4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "1dc29d400d8e0532ceb69fc25e335a74fd3fc807", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.inner_items/inner_items.main-{impl#0}-inner_trait_func.-------.InstrumentCoverage.0.html", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-inner_trait_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-inner_trait_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-inner_trait_func.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,72 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>inner_items.main-{impl#0}-inner_trait_func - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 39\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">fn inner_trait_func(&amp;mut self, incr: u32) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:40-41:44: @0[1]: _3 = _2\n+41:13-41:44: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\"><span class=\"annotation\">@0\u298a</span>self.inner_struct_field += incr<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:28-42:51: @1[4]: _6 = ((*_1).0: u32)\n+42:13-42:52: @1.Call: _5 = inner_function(move _6) -&gt; [return: bb2, unwind: bb3]\n+43:10-43:10: @2.Return: return\"><span class=\"annotation\">@1,2\u298a</span>inner_function(self.inner_struct_field);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"42:28-42:51: @1[4]: _6 = ((*_1).0: u32)\n+42:13-42:52: @1.Call: _5 = inner_function(move _6) -&gt; [return: bb2, unwind: bb3]\n+43:10-43:10: @2.Return: return\">        }<span class=\"annotation\">\u2989@1,2</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "9a1256025d97184c2bc6086e7f6cd5c50fd4f751", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.inner_items/inner_items.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 171, "deletions": 0, "changes": 171, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,171 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>inner_items.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_u32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_u32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_u32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 0<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:8-10:15: @3[6]: _7 = _1\n+10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n+10:16-12:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n+10:16-12:6: @6[1]: _6 = const ()\">        countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @6[0]: _5 = const 10_u32\n+10:16-12:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    mod inner_mod {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        const INNER_MOD_CONST: u32 = 1000;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    fn inner_function(a: u32) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let b = 1;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let c = a + b;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        println!(\"c = {}\", c)</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    struct InnerStruct {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        inner_struct_field: u32,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    const INNER_CONST: u32 = 1234;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    trait InnerTrait {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        fn inner_trait_func(&amp;mut self, incr: u32);</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        fn default_trait_func(&amp;mut self) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            inner_function(INNER_CONST);</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            self.inner_trait_func(INNER_CONST);</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    impl InnerTrait for InnerStruct {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        fn inner_trait_func(&amp;mut self, incr: u32) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            self.inner_struct_field += incr;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            inner_function(self.inner_struct_field);</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    type InnerType = String;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"48:8-48:15: @7[4]: _9 = _1\n+48:8-48:15: @7[5]: FakeRead(ForMatchedPlace, _9)\"><span class=\"annotation\">@7\u298a</span>is_true<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"49:24-49:33: @10[2]: _11 = _5\n+49:9-49:34: @10.Call: _10 = inner_function(move _11) -&gt; [return: bb11, unwind: bb15]\n+48:16-50:6: @11[2]: _8 = const ()\"><span class=\"annotation\">@8,10,11\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"49:24-49:33: @10[2]: _11 = _5\n+49:9-49:34: @10.Call: _10 = inner_function(move _11) -&gt; [return: bb11, unwind: bb15]\n+48:16-50:6: @11[2]: _8 = const ()\">        inner_function(countdown);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"49:24-49:33: @10[2]: _11 = _5\n+49:9-49:34: @10.Call: _10 = inner_function(move _11) -&gt; [return: bb11, unwind: bb15]\n+48:16-50:6: @11[2]: _8 = const ()\">    }<span class=\"annotation\">\u2989@8,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InnerStruct { inner_struct_field: const 101_u32 }\n+52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @12[7]: _14 = &amp;mut _12\n+56:5-56:29: @12.Call: _13 = &lt;InnerStruct as InnerTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n+57:2-57:2: @13.Return: return\"><span class=\"annotation\">@12,13\u298a</span>mut val = InnerStruct {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InnerStruct { inner_struct_field: const 101_u32 }\n+52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @12[7]: _14 = &amp;mut _12\n+56:5-56:29: @12.Call: _13 = &lt;InnerStruct as InnerTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n+57:2-57:2: @13.Return: return\">        inner_struct_field: 101,</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InnerStruct { inner_struct_field: const 101_u32 }\n+52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @12[7]: _14 = &amp;mut _12\n+56:5-56:29: @12.Call: _13 = &lt;InnerStruct as InnerTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n+57:2-57:2: @13.Return: return\">    };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InnerStruct { inner_struct_field: const 101_u32 }\n+52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @12[7]: _14 = &amp;mut _12\n+56:5-56:29: @12.Call: _13 = &lt;InnerStruct as InnerTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n+57:2-57:2: @13.Return: return\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InnerStruct { inner_struct_field: const 101_u32 }\n+52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @12[7]: _14 = &amp;mut _12\n+56:5-56:29: @12.Call: _13 = &lt;InnerStruct as InnerTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n+57:2-57:2: @13.Return: return\">    val.default_trait_func();</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @12[3]: _12 = InnerStruct { inner_struct_field: const 101_u32 }\n+52:9-52:16: @12[4]: FakeRead(ForLet, _12)\n+56:5-56:8: @12[7]: _14 = &amp;mut _12\n+56:5-56:29: @12.Call: _13 = &lt;InnerStruct as InnerTrait&gt;::default_trait_func(move _14) -&gt; [return: bb13, unwind: bb15]\n+57:2-57:2: @13.Return: return\">}<span class=\"annotation\">\u2989@12,13</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "defe743df608fecb07dcce5f32a720df16b2e861", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.lazy_boolean/lazy_boolean.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,160 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>lazy_boolean.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb25]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb24]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n+9:10-9:15: @3[4]: _5 = (_8.0: i32)\n+9:17-9:22: @3[6]: _6 = (_8.1: i32)\n+9:24-9:29: @3[8]: _7 = (_8.2: i32)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb25]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb24]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n+9:10-9:15: @3[4]: _5 = (_8.0: i32)\n+9:17-9:22: @3[6]: _6 = (_8.1: i32)\n+9:24-9:29: @3[8]: _7 = (_8.2: i32)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb25]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb24]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n+9:10-9:15: @3[4]: _5 = (_8.0: i32)\n+9:17-9:22: @3[6]: _6 = (_8.1: i32)\n+9:24-9:29: @3[8]: _7 = (_8.2: i32)\">    let (mut a, mut b, mut c) = (0, 0, 0)<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:8-10:15: @3[12]: _10 = _1\n+10:8-10:15: @3[13]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n+12:9-12:15: @6[1]: _6 = const 10_i32\n+13:9-13:16: @6[2]: _7 = const 100_i32\n+10:16-14:6: @6[3]: _9 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n+12:9-12:15: @6[1]: _6 = const 10_i32\n+13:9-13:16: @6[2]: _7 = const 100_i32\n+10:16-14:6: @6[3]: _9 = const ()\">        a = 1;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n+12:9-12:15: @6[1]: _6 = const 10_i32\n+13:9-13:16: @6[2]: _7 = const 100_i32\n+10:16-14:6: @6[3]: _9 = const ()\">        b = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n+12:9-12:15: @6[1]: _6 = const 10_i32\n+13:9-13:16: @6[2]: _7 = const 100_i32\n+10:16-14:6: @6[3]: _9 = const ()\">        c = 100;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @6[0]: _5 = const 1_i32\n+12:9-12:15: @6[1]: _6 = const 10_i32\n+13:9-13:16: @6[2]: _7 = const 100_i32\n+10:16-14:6: @6[3]: _9 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:9-16:17: @11[2]: FakeRead(ForLet, _11)\"><span class=\"annotation\">@11\u298a</span>somebool<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:14: @7[5]: _13 = _5\n+18:17-18:18: @7[7]: _14 = _6\n+18:13-18:18: @7[8]: _12 = Lt(move _13, move _14)\"><span class=\"annotation\">@7\u298a</span>a &lt; b<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ||</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:13-20:14: @10[2]: _16 = _6\n+20:17-20:18: @10[4]: _17 = _7\n+20:13-20:18: @10[5]: _15 = Lt(move _16, move _17)\"><span class=\"annotation\">@10\u298a</span>b &lt; c<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:17: @15[2]: FakeRead(ForLet, _18)\"><span class=\"annotation\">@15\u298a</span>somebool<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:13-25:14: @11[6]: _20 = _6\n+25:17-25:18: @11[8]: _21 = _5\n+25:13-25:18: @11[9]: _19 = Lt(move _20, move _21)\"><span class=\"annotation\">@11\u298a</span>b &lt; a<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ||</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:13-27:14: @14[2]: _23 = _6\n+27:17-27:18: @14[4]: _24 = _7\n+27:13-27:18: @14[5]: _22 = Lt(move _23, move _24)\"><span class=\"annotation\">@14\u298a</span>b &lt; c<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-30:17: @19[2]: FakeRead(ForLet, _25)\"><span class=\"annotation\">@19\u298a</span>somebool<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:14: @15[6]: _27 = _5\n+32:17-32:18: @15[8]: _28 = _6\n+32:13-32:18: @15[9]: _26 = Lt(move _27, move _28)\"><span class=\"annotation\">@15\u298a</span>a &lt; b<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        &amp;&amp;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:14: @18[2]: _30 = _6\n+34:17-34:18: @18[4]: _31 = _7\n+34:13-34:18: @18[5]: _29 = Lt(move _30, move _31)\"><span class=\"annotation\">@18\u298a</span>b &lt; c<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:9-37:17: @23[2]: FakeRead(ForLet, _32)\"><span class=\"annotation\">@23\u298a</span>somebool<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"39:13-39:14: @19[6]: _34 = _6\n+39:17-39:18: @19[8]: _35 = _5\n+39:13-39:18: @19[9]: _33 = Lt(move _34, move _35)\"><span class=\"annotation\">@19\u298a</span>b &lt; a<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        &amp;&amp;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"41:13-41:14: @22[2]: _37 = _6\n+41:17-41:18: @22[4]: _38 = _7\n+41:13-41:18: @22[5]: _36 = Lt(move _37, move _38)\"><span class=\"annotation\">@22\u298a</span>b &lt; c<span class=\"annotation\">\u2989@22</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"43:2-43:2: @23.Return: return\"><span class=\"annotation\">@23\u298a</span>\u2038<span class=\"annotation\">\u2989@23</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "dc26c796637ccedf3a6637cd754b0464e967d241", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.loop_break_value/loop_break_value.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.loop_break_value%2Floop_break_value.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.loop_break_value%2Floop_break_value.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.loop_break_value%2Floop_break_value.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,118 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>loop_break_value.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">    let result</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">        =</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">            loop</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">        {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">            break</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">            10</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">            ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">        }</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">    ;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n+9:13-9:15: @1[0]: _1 = const 10_i32\n+4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n+3:11-13:2: @1[2]: _0 = const ()\n+13:2-13:2: @1.Return: return\">}<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "0c253d5e5c25328b80f89b1bb61a79d1993df302", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.question_mark_error_result/question_mark_error_result.call.-------.InstrumentCoverage.0.html", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.question_mark_error_result%2Fquestion_mark_error_result.call.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.question_mark_error_result%2Fquestion_mark_error_result.call.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.question_mark_error_result%2Fquestion_mark_error_result.call.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,73 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>question_mark_error_result.call - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn call(return_error: bool) -&gt; Result&lt;(),()&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:20: @0[1]: _2 = _1\n+5:8-5:20: @0[2]: FakeRead(ForMatchedPlace, _2)\"><span class=\"annotation\">@0\u298a</span>return_error<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:13-6:15: @3[1]: _3 = ()\n+6:9-6:16: @3[2]: _0 = std::result::Result::&lt;(), ()&gt;::Err(move _3)\"><span class=\"annotation\">@1,3\u298a</span>Err(())<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:12-8:14: @2[1]: _4 = ()\n+8:9-8:15: @2[2]: _0 = std::result::Result::&lt;(), ()&gt;::Ok(move _4)\"><span class=\"annotation\">@2\u298a</span>Ok(())<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:2-10:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "2589b0454da2eab17a8e54198c78260e4120484a", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.question_mark_error_result/question_mark_error_result.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.question_mark_error_result%2Fquestion_mark_error_result.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.question_mark_error_result%2Fquestion_mark_error_result.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.question_mark_error_result%2Fquestion_mark_error_result.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,101 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>question_mark_error_result.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 11\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),()&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:21-14:23: @0[1]: _1 = const 10_i32\n+13:9-14:18: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0,1\u298a</span>mut</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:21-14:23: @0[1]: _1 = const 10_i32\n+13:9-14:18: @0[2]: FakeRead(ForLet, _1)\">        countdown = 10<span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:10: @4[2]: _12 = discriminant(_9)\"><span class=\"annotation\">@2,3,4\u298a</span>for</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:10: @4[2]: _12 = discriminant(_9)\">        _<span class=\"annotation\">\u2989@2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:9-19:14: @0[6]: _4 = std::ops::Range::&lt;i32&gt; { start: const 0_i32, end: const 10_i32 }\n+19:9-19:14: @0.Call: _3 = &lt;std::ops::Range&lt;i32&gt; as IntoIterator&gt;::into_iter(move _4) -&gt; [return: bb1, unwind: bb32]\n+19:9-19:14: @1[1]: FakeRead(ForMatchedPlace, _3)\n+19:9-19:14: @1[3]: _5 = move _3\"><span class=\"annotation\">@0,1\u298a</span>0..10<span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\"><span class=\"annotation\">@6,8\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\">            -= 1<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:13-25:22: @9[3]: _19 = _1\n+25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n+25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\"><span class=\"annotation\">@9\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:13-27:41: @12.Call: _22 = call(const true) -&gt; [return: bb13, unwind: bb32]\n+27:13-27:42: @13.Call: _21 = &lt;std::result::Result&lt;(), ()&gt; as Try&gt;::into_result(move _22) -&gt; [return: bb14, unwind: bb32]\n+27:13-27:42: @14[1]: FakeRead(ForMatchedPlace, _21)\n+27:41-27:42: @14[2]: _23 = discriminant(_21)\"><span class=\"annotation\">@10,12,13,14\u298a</span>call(/*return_error=*/ true)?<span class=\"annotation\">\u2989@10,12,13,14</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        else</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:13-31:42: @11.Call: _31 = call(const false) -&gt; [return: bb21, unwind: bb32]\n+31:13-31:43: @21.Call: _30 = &lt;std::result::Result&lt;(), ()&gt; as Try&gt;::into_result(move _31) -&gt; [return: bb22, unwind: bb32]\n+31:13-31:43: @22[1]: FakeRead(ForMatchedPlace, _30)\n+31:42-31:43: @22[2]: _32 = discriminant(_30)\"><span class=\"annotation\">@11,21,22\u298a</span>call(/*return_error=*/ false)?<span class=\"annotation\">\u2989@11,21,22</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:8-34:10: @5[9]: _38 = ()\n+34:5-34:11: @5[10]: _0 = std::result::Result::&lt;(), ()&gt;::Ok(move _38)\"><span class=\"annotation\">@5\u298a</span>Ok(())<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:2-35:2: @31.Return: return\"><span class=\"annotation\">@31\u298a</span>\u2038<span class=\"annotation\">\u2989@31</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "4b21d3fc263a3c8ecd5f41f73389d665f69a33a5", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.simple_loop/simple_loop.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 127, "deletions": 0, "changes": 127, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,127 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>simple_loop.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb15]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb14]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 0_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 0<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:9-12:16: @3[6]: _7 = _1\n+12:9-12:16: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n+13:5-18:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n+13:5-18:6: @6[1]: _6 = const ()\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n+13:5-18:6: @6[1]: _6 = const ()\">        =</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n+13:5-18:6: @6[1]: _6 = const ()\">            10</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n+13:5-18:6: @6[1]: _6 = const ()\">        ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @6[0]: _5 = const 10_i32\n+13:5-18:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    loop</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n+23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n+23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@8,9\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n+23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n+23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\">                ==</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:13-23:22: @9[3]: _11 = _5\n+23:13-25:14: @9[4]: _10 = Eq(move _11, const 0_i32)\n+23:13-25:14: @9[6]: FakeRead(ForMatchedPlace, _10)\">            0<span class=\"annotation\">\u2989@8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:13-27:18: @12[0]: _0 = const ()\"><span class=\"annotation\">@10,12\u298a</span>break<span class=\"annotation\">\u2989@10,12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\"><span class=\"annotation\">@11\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\">        -=</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\">        1<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:2-35:2: @12.Return: return\"><span class=\"annotation\">@10,12\u298a</span>\u2038<span class=\"annotation\">\u2989@10,12</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "5ba770ef6078e3f506a8a7cd1dade8f301cbcb59", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.simple_match/simple_match.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 190, "deletions": 0, "changes": 190, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,190 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>simple_match.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb22]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb21]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 1_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb22]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb21]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 1_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb22]\n+7:19-7:35: @1[0]: _3 = &amp;_4\n+7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb21]\n+7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n+7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n+9:25-9:26: @3[2]: _5 = const 1_i32\n+9:9-9:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 1<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:8-10:15: @3[6]: _7 = _1\n+10:8-10:15: @3[7]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n+10:16-12:6: @6[1]: _6 = const ()\"><span class=\"annotation\">@4,6\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n+10:16-12:6: @6[1]: _6 = const ()\">        countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @6[0]: _5 = const 0_i32\n+10:16-12:6: @6[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:9-15:10: @11[2]: _17 = discriminant(_14)\"><span class=\"annotation\">@9,10,11\u298a</span>for</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:9-15:10: @11[2]: _17 = discriminant(_14)\">        _<span class=\"annotation\">\u2989@9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:13: @7[4]: _9 = std::ops::Range::&lt;i32&gt; { start: const 0_i32, end: const 2_i32 }\n+17:9-17:13: @7.Call: _8 = &lt;std::ops::Range&lt;i32&gt; as IntoIterator&gt;::into_iter(move _9) -&gt; [return: bb8, unwind: bb22]\n+17:9-17:13: @8[1]: FakeRead(ForMatchedPlace, _8)\n+17:9-17:13: @8[3]: _10 = move _8\"><span class=\"annotation\">@7,8\u298a</span>0..2<span class=\"annotation\">\u2989@7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let z</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        match</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n+24:13-24:14: @17[1]: _24 = &amp;_5\n+26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\"><span class=\"annotation\">@13,15,17\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n+24:13-24:14: @17[1]: _24 = &amp;_5\n+26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">        {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n+24:13-24:14: @17[1]: _24 = &amp;_5\n+26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">            x</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n+24:13-24:14: @17[1]: _24 = &amp;_5\n+26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">            if</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n+24:13-24:14: @17[1]: _24 = &amp;_5\n+26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                x</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n+24:13-24:14: @17[1]: _24 = &amp;_5\n+26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                    &lt;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:13-22:22: @15[13]: FakeRead(ForMatchedPlace, _5)\n+24:13-24:14: @17[1]: _24 = &amp;_5\n+26:17-26:18: @17[4]: _26 = (*_24)\n+26:17-28:18: @17[5]: _25 = Lt(move _26, const 1_i32)\">                1<span class=\"annotation\">\u2989@13,15,17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            =&gt;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n+31:17-31:30: @18[6]: _22 = move _27\n+33:25-33:34: @18[9]: _28 = _5\n+33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @18[11]: _5 = const 10_i32\n+30:13-37:14: @18[12]: _21 = const ()\"><span class=\"annotation\">@18\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n+31:17-31:30: @18[6]: _22 = move _27\n+33:25-33:34: @18[9]: _28 = _5\n+33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @18[11]: _5 = const 10_i32\n+30:13-37:14: @18[12]: _21 = const ()\">                z = countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n+31:17-31:30: @18[6]: _22 = move _27\n+33:25-33:34: @18[9]: _28 = _5\n+33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @18[11]: _5 = const 10_i32\n+30:13-37:14: @18[12]: _21 = const ()\">                ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n+31:17-31:30: @18[6]: _22 = move _27\n+33:25-33:34: @18[9]: _28 = _5\n+33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @18[11]: _5 = const 10_i32\n+30:13-37:14: @18[12]: _21 = const ()\">                let y = countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n+31:17-31:30: @18[6]: _22 = move _27\n+33:25-33:34: @18[9]: _28 = _5\n+33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @18[11]: _5 = const 10_i32\n+30:13-37:14: @18[12]: _21 = const ()\">                ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n+31:17-31:30: @18[6]: _22 = move _27\n+33:25-33:34: @18[9]: _28 = _5\n+33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @18[11]: _5 = const 10_i32\n+30:13-37:14: @18[12]: _21 = const ()\">                countdown = 10</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n+31:17-31:30: @18[6]: _22 = move _27\n+33:25-33:34: @18[9]: _28 = _5\n+33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @18[11]: _5 = const 10_i32\n+30:13-37:14: @18[12]: _21 = const ()\">                ;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:21-31:30: @18[5]: _27 = _5\n+31:17-31:30: @18[6]: _22 = move _27\n+33:25-33:34: @18[9]: _28 = _5\n+33:21-33:22: @18[10]: FakeRead(ForLet, _28)\n+35:17-35:31: @18[11]: _5 = const 10_i32\n+30:13-37:14: @18[12]: _21 = const ()\">            }<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            _</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            =&gt;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:13-40:15: @16[0]: _21 = const ()\"><span class=\"annotation\">@16\u298a</span>{}<span class=\"annotation\">\u2989@16</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:2-43:2: @12.Return: return\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "28f1d013c835f2a59cd872d350109d751e8f3341", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.various_conditions/various_conditions.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 228, "deletions": 0, "changes": 228, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.various_conditions%2Fvarious_conditions.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.various_conditions%2Fvarious_conditions.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.various_conditions%2Fvarious_conditions.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,228 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>various_conditions.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:25-4:26: @0[1]: _1 = const 0_u32\n+4:9-4:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:12: @0[5]: _3 = const true\n+5:8-5:12: @0[6]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0\u298a</span>true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n+5:13-7:6: @3[1]: _2 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n+5:13-7:6: @3[1]: _2 = const ()\">        countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @3[0]: _1 = const 10_u32\n+5:13-7:6: @3[1]: _2 = const ()\">    }<span class=\"annotation\">\u2989@1,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    const B: u32 = 100;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:10: @25[0]: FakeRead(ForLet, _4)\"><span class=\"annotation\">@25\u298a</span>x<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:16-10:25: @4[5]: _6 = _1\n+10:16-10:29: @4[6]: _5 = Gt(move _6, const 7_u32)\n+10:16-10:29: @4[8]: FakeRead(ForMatchedPlace, _5)\"><span class=\"annotation\">@4\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"11:9-11:23: @7[0]: _7 = CheckedSub(_1, const 4_u32)\"><span class=\"annotation\">@5,7\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@5,7</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:10: @8[1]: _4 = const B\"><span class=\"annotation\">@8\u298a</span>B<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:15-13:24: @6[2]: _9 = _1\n+13:15-13:28: @6[3]: _8 = Gt(move _9, const 2_u32)\n+13:15-13:28: @6[5]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@6\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:12-14:21: @11[5]: _14 = _1\n+14:12-14:25: @11[6]: _13 = Lt(move _14, const 1_u32)\"><span class=\"annotation\">@9,11\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@9,11</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:29-14:38: @18[2]: _16 = _1\n+14:29-14:42: @18[3]: _15 = Gt(move _16, const 5_u32)\"><span class=\"annotation\">@18\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:46-14:55: @14[2]: _18 = _1\n+14:46-14:60: @14[3]: _17 = Ne(move _18, const 9_u32)\"><span class=\"annotation\">@14\u298a</span>countdown != 9<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n+14:61-16:10: @22[1]: _10 = const ()\"><span class=\"annotation\">@20,22\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n+14:61-16:10: @22[1]: _10 = const ()\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n+14:61-16:10: @22[1]: _10 = const ()\">        }<span class=\"annotation\">\u2989@20,22</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:23: @23[2]: _19 = CheckedSub(_1, const 5_u32)\"><span class=\"annotation\">@23\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:9-18:18: @24[1]: _4 = _1\"><span class=\"annotation\">@24\u298a</span>countdown<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:9-20:15: @10[0]: _0 = const ()\"><span class=\"annotation\">@10\u298a</span>return<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:25-23:26: @25[3]: _21 = const 0_i32\n+23:9-23:22: @25[4]: FakeRead(ForLet, _21)\"><span class=\"annotation\">@25\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:8-24:12: @25[7]: _23 = const true\n+24:8-24:12: @25[8]: FakeRead(ForMatchedPlace, _23)\"><span class=\"annotation\">@25\u298a</span>true<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n+24:13-26:6: @28[1]: _22 = const ()\"><span class=\"annotation\">@26,28\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n+24:13-26:6: @28[1]: _22 = const ()\">        countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @28[0]: _21 = const 10_i32\n+24:13-26:6: @28[1]: _22 = const ()\">    }<span class=\"annotation\">\u2989@26,28</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:8-28:17: @29[5]: _26 = _21\n+28:8-28:21: @29[6]: _25 = Gt(move _26, const 7_i32)\n+28:8-28:21: @29[8]: FakeRead(ForMatchedPlace, _25)\"><span class=\"annotation\">@29\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:9-29:23: @32[0]: _27 = CheckedSub(_21, const 4_i32)\"><span class=\"annotation\">@30,32\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@30,32</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:15-30:24: @31[2]: _29 = _21\n+30:15-30:28: @31[3]: _28 = Gt(move _29, const 2_i32)\n+30:15-30:28: @31[5]: FakeRead(ForMatchedPlace, _28)\"><span class=\"annotation\">@31\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@31</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:12-31:21: @36[5]: _34 = _21\n+31:12-31:25: @36[6]: _33 = Lt(move _34, const 1_i32)\"><span class=\"annotation\">@34,36\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@34,36</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:29-31:38: @43[2]: _36 = _21\n+31:29-31:42: @43[3]: _35 = Gt(move _36, const 5_i32)\"><span class=\"annotation\">@43\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@43</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:46-31:55: @39[2]: _38 = _21\n+31:46-31:60: @39[3]: _37 = Ne(move _38, const 9_i32)\"><span class=\"annotation\">@39\u298a</span>countdown != 9<span class=\"annotation\">\u2989@39</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n+31:61-33:10: @47[1]: _30 = const ()\"><span class=\"annotation\">@45,47\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n+31:61-33:10: @47[1]: _30 = const ()\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n+31:61-33:10: @47[1]: _30 = const ()\">        }<span class=\"annotation\">\u2989@45,47</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:23: @48[2]: _39 = CheckedSub(_21, const 5_i32)\"><span class=\"annotation\">@48\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@48</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:15: @35[0]: _0 = const ()\"><span class=\"annotation\">@35\u298a</span>return<span class=\"annotation\">\u2989@35</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:25-39:26: @50[3]: _41 = const 0_i32\n+39:9-39:22: @50[4]: FakeRead(ForLet, _41)\"><span class=\"annotation\">@50\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"40:8-40:12: @50[7]: _43 = const true\n+40:8-40:12: @50[8]: FakeRead(ForMatchedPlace, _43)\"><span class=\"annotation\">@50\u298a</span>true<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n+40:13-42:6: @53[1]: _42 = const ()\"><span class=\"annotation\">@51,53\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n+40:13-42:6: @53[1]: _42 = const ()\">        countdown = 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n+40:13-42:6: @53[1]: _42 = const ()\">    }<span class=\"annotation\">\u2989@51,53</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"44:9-44:10: @77[0]: FakeRead(ForLet, _44)\"><span class=\"annotation\">@77\u298a</span>z<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"44:16-44:25: @54[5]: _46 = _41\n+44:16-44:29: @54[6]: _45 = Gt(move _46, const 7_i32)\n+44:16-44:29: @54[8]: FakeRead(ForMatchedPlace, _45)\"><span class=\"annotation\">@54\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@54</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"45:9-45:23: @57[0]: _47 = CheckedSub(_41, const 4_i32)\"><span class=\"annotation\">@55,57\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@55,57</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"46:15-46:24: @56[2]: _49 = _41\n+46:15-46:28: @56[3]: _48 = Gt(move _49, const 2_i32)\n+46:15-46:28: @56[5]: FakeRead(ForMatchedPlace, _48)\"><span class=\"annotation\">@56\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@56</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:12-47:21: @61[5]: _54 = _41\n+47:12-47:25: @61[6]: _53 = Lt(move _54, const 1_i32)\"><span class=\"annotation\">@59,61\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@59,61</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:29-47:38: @68[2]: _56 = _41\n+47:29-47:42: @68[3]: _55 = Gt(move _56, const 5_i32)\"><span class=\"annotation\">@68\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@68</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:46-47:55: @64[2]: _58 = _41\n+47:46-47:60: @64[3]: _57 = Ne(move _58, const 9_i32)\"><span class=\"annotation\">@64\u298a</span>countdown != 9<span class=\"annotation\">\u2989@64</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n+47:61-49:10: @72[1]: _50 = const ()\"><span class=\"annotation\">@70,72\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n+47:61-49:10: @72[1]: _50 = const ()\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n+47:61-49:10: @72[1]: _50 = const ()\">        }<span class=\"annotation\">\u2989@70,72</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:9-50:23: @73[2]: _59 = CheckedSub(_41, const 5_i32)\"><span class=\"annotation\">@73\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@73</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n+52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n+53:18-53:27: @60[9]: _92 = const main::promoted[1]\n+53:18-53:27: @60[10]: _67 = &amp;(*_92)\n+53:18-53:27: @60[11]: _66 = &amp;(*_67)\n+53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n+53:9-53:29: @60[18]: _73 = ()\n+53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n+53:9-53:29: @60[20]: _91 = const main::promoted[0]\n+53:9-53:29: @60[21]: _71 = &amp;(*_91)\n+53:9-53:29: @60[22]: _70 = &amp;(*_71)\n+53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n+53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n+53:9-53:29: @76[5]: _62 = const ()\n+54:9-54:15: @76[7]: _0 = const ()\"><span class=\"annotation\">@60,75,76\u298a</span>should_be_reachable = countdown;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n+52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n+53:18-53:27: @60[9]: _92 = const main::promoted[1]\n+53:18-53:27: @60[10]: _67 = &amp;(*_92)\n+53:18-53:27: @60[11]: _66 = &amp;(*_67)\n+53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n+53:9-53:29: @60[18]: _73 = ()\n+53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n+53:9-53:29: @60[20]: _91 = const main::promoted[0]\n+53:9-53:29: @60[21]: _71 = &amp;(*_91)\n+53:9-53:29: @60[22]: _70 = &amp;(*_71)\n+53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n+53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n+53:9-53:29: @76[5]: _62 = const ()\n+54:9-54:15: @76[7]: _0 = const ()\">        println!(\"reached\");</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n+52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n+53:18-53:27: @60[9]: _92 = const main::promoted[1]\n+53:18-53:27: @60[10]: _67 = &amp;(*_92)\n+53:18-53:27: @60[11]: _66 = &amp;(*_67)\n+53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n+53:9-53:29: @60[18]: _73 = ()\n+53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n+53:9-53:29: @60[20]: _91 = const main::promoted[0]\n+53:9-53:29: @60[21]: _71 = &amp;(*_91)\n+53:9-53:29: @60[22]: _70 = &amp;(*_71)\n+53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n+53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n+53:9-53:29: @76[5]: _62 = const ()\n+54:9-54:15: @76[7]: _0 = const ()\">        return<span class=\"annotation\">\u2989@60,75,76</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:10: @98[0]: FakeRead(ForLet, _74)\"><span class=\"annotation\">@98\u298a</span>w<span class=\"annotation\">\u2989@98</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"57:16-57:25: @77[5]: _76 = _41\n+57:16-57:29: @77[6]: _75 = Gt(move _76, const 7_i32)\n+57:16-57:29: @77[8]: FakeRead(ForMatchedPlace, _75)\"><span class=\"annotation\">@77\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"58:9-58:23: @80[0]: _77 = CheckedSub(_41, const 4_i32)\"><span class=\"annotation\">@78,80\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@78,80</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"59:15-59:24: @79[2]: _79 = _41\n+59:15-59:28: @79[3]: _78 = Gt(move _79, const 2_i32)\n+59:15-59:28: @79[5]: FakeRead(ForMatchedPlace, _78)\"><span class=\"annotation\">@79\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@79</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:12-60:21: @84[5]: _84 = _41\n+60:12-60:25: @84[6]: _83 = Lt(move _84, const 1_i32)\"><span class=\"annotation\">@82,84\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@82,84</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:29-60:38: @91[2]: _86 = _41\n+60:29-60:42: @91[3]: _85 = Gt(move _86, const 5_i32)\"><span class=\"annotation\">@91\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@91</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:46-60:55: @87[2]: _88 = _41\n+60:46-60:60: @87[3]: _87 = Ne(move _88, const 9_i32)\"><span class=\"annotation\">@87\u298a</span>countdown != 9<span class=\"annotation\">\u2989@87</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n+60:61-62:10: @95[1]: _80 = const ()\"><span class=\"annotation\">@93,95\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n+60:61-62:10: @95[1]: _80 = const ()\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n+60:61-62:10: @95[1]: _80 = const ()\">        }<span class=\"annotation\">\u2989@93,95</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"63:9-63:23: @96[2]: _89 = CheckedSub(_41, const 5_i32)\"><span class=\"annotation\">@96\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@96</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"65:9-65:15: @83[0]: _0 = const ()\"><span class=\"annotation\">@83\u298a</span>return<span class=\"annotation\">\u2989@83</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:2-67:2: @102.Return: return\"><span class=\"annotation\">@102\u298a</span>\u2038<span class=\"annotation\">\u2989@102</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "b96789a92194d95f5c4baafc5133e9f0171117ad", "filename": "src/test/run-make-fulldeps/instrument-coverage-mir-cov-html-link-dead-code/expected_mir_dump.while_early_return/while_early_return.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.while_early_return%2Fwhile_early_return.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.while_early_return%2Fwhile_early_return.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage-mir-cov-html-link-dead-code%2Fexpected_mir_dump.while_early_return%2Fwhile_early_return.main.-------.InstrumentCoverage.0.html?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,119 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<title>while_early_return.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:25-5:27: @0[1]: _1 = const 10_i32\n+5:9-5:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n+7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n+7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>while</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n+7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n+7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\">        countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n+7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n+7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\">            &gt;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n+7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n+7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\">        0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:13-12:22: @5[3]: _8 = _1\n+12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\n+12:13-14:14: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"12:13-12:22: @5[3]: _8 = _1\n+12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\n+12:13-14:14: @5[6]: FakeRead(ForMatchedPlace, _7)\">                &lt;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"12:13-12:22: @5[3]: _8 = _1\n+12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\n+12:13-14:14: @5[6]: FakeRead(ForMatchedPlace, _7)\">            5<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            return</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                if</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @8[2]: _11 = _1\n+18:21-20:22: @8[3]: _10 = Gt(move _11, const 8_i32)\n+18:21-20:22: @8[5]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@6,8\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @8[2]: _11 = _1\n+18:21-20:22: @8[3]: _10 = Gt(move _11, const 8_i32)\n+18:21-20:22: @8[5]: FakeRead(ForMatchedPlace, _10)\">                        &gt;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @8[2]: _11 = _1\n+18:21-20:22: @8[3]: _10 = Gt(move _11, const 8_i32)\n+18:21-20:22: @8[5]: FakeRead(ForMatchedPlace, _10)\">                    8<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:24-22:26: @11[1]: _12 = ()\n+22:21-22:27: @11[2]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _12)\"><span class=\"annotation\">@9,11\u298a</span>Ok(())<span class=\"annotation\">\u2989@9,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                else</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:21-26:27: @10[0]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@10\u298a</span>Err(1)<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\"><span class=\"annotation\">@7\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\">            -=</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\">        1<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:8-35:10: @4[4]: _15 = ()\n+35:5-35:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\"><span class=\"annotation\">@4\u298a</span>Ok(())<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:2-36:2: @14.Return: return\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "66bbbc55399fe328ea6821d3488bd035b98a09d2", "filename": "src/test/run-make-fulldeps/instrument-coverage/closure.rs", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fclosure.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,93 @@\n+#![allow(unused_assignments, unused_variables)]\n+\n+fn main() {\n+    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    // dependent conditions.\n+    let is_true = std::env::args().len() == 1;\n+    let is_false = ! is_true;\n+\n+    let mut some_string = Some(String::from(\"the string content\"));\n+    println!(\n+        \"The string or alt: {}\"\n+        ,\n+        some_string\n+            .\n+            unwrap_or_else\n+        (\n+            ||\n+            {\n+                let mut countdown = 0;\n+                if is_false {\n+                    countdown = 10;\n+                }\n+                \"alt string 1\".to_owned()\n+            }\n+        )\n+    );\n+\n+    some_string = Some(String::from(\"the string content\"));\n+    let\n+        a\n+    =\n+        ||\n+    {\n+        let mut countdown = 0;\n+        if is_false {\n+            countdown = 10;\n+        }\n+        \"alt string 2\".to_owned()\n+    };\n+    println!(\n+        \"The string or alt: {}\"\n+        ,\n+        some_string\n+            .\n+            unwrap_or_else\n+        (\n+            a\n+        )\n+    );\n+\n+    some_string = None;\n+    println!(\n+        \"The string or alt: {}\"\n+        ,\n+        some_string\n+            .\n+            unwrap_or_else\n+        (\n+            ||\n+            {\n+                let mut countdown = 0;\n+                if is_false {\n+                    countdown = 10;\n+                }\n+                \"alt string 3\".to_owned()\n+            }\n+        )\n+    );\n+\n+    some_string = None;\n+    let\n+        a\n+    =\n+        ||\n+    {\n+        let mut countdown = 0;\n+        if is_false {\n+            countdown = 10;\n+        }\n+        \"alt string 4\".to_owned()\n+    };\n+    println!(\n+        \"The string or alt: {}\"\n+        ,\n+        some_string\n+            .\n+            unwrap_or_else\n+        (\n+            a\n+        )\n+    );\n+}"}, {"sha": "abf8df8fdc9e621132970f7cbde7608ac1d42916", "filename": "src/test/run-make-fulldeps/instrument-coverage/compiletest-ignore-dir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fcompiletest-ignore-dir", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fcompiletest-ignore-dir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fcompiletest-ignore-dir?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -1,3 +1,3 @@\n # Directory \"instrument-coverage\" supports the tests at prefix ../instrument-coverage-*\n \n-# Use ./x.py [options] test src/test/run-make-fulldeps/instrument-coverage to run all related tests.\n\\ No newline at end of file\n+# Use ./x.py [options] test src/test/run-make-fulldeps/instrument-coverage to run all related tests."}, {"sha": "d15bfc0f87719b9dff5f025f7db6c485eda2aa82", "filename": "src/test/run-make-fulldeps/instrument-coverage/drop_trait.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fdrop_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fdrop_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fdrop_trait.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,33 @@\n+#![allow(unused_assignments)]\n+// expect-exit-status-1\n+\n+struct Firework {\n+    strength: i32,\n+}\n+\n+impl Drop for Firework {\n+    fn drop(&mut self) {\n+        println!(\"BOOM times {}!!!\", self.strength);\n+    }\n+}\n+\n+fn main() -> Result<(),u8> {\n+    let _firecracker = Firework { strength: 1 };\n+\n+    let _tnt = Firework { strength: 100 };\n+\n+    if true {\n+        println!(\"Exiting with error...\");\n+        return Err(1);\n+    }\n+\n+    let _ = Firework { strength: 1000 };\n+\n+    Ok(())\n+}\n+\n+// Expected program output:\n+//   Exiting with error...\n+//   BOOM times 100!!!\n+//   BOOM times 1!!!\n+//   Error: 1"}, {"sha": "f4e64026944805ce12046edb329d84df2d692d53", "filename": "src/test/run-make-fulldeps/instrument-coverage/generics.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fgenerics.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,44 @@\n+#![allow(unused_assignments)]\n+// expect-exit-status-1\n+\n+struct Firework<T> where T: Copy + std::fmt::Display {\n+    strength: T,\n+}\n+\n+impl<T> Firework<T> where T: Copy + std::fmt::Display {\n+    #[inline(always)]\n+    fn set_strength(&mut self, new_strength: T) {\n+        self.strength = new_strength;\n+    }\n+}\n+\n+impl<T> Drop for Firework<T> where T: Copy + std::fmt::Display {\n+    #[inline(always)]\n+    fn drop(&mut self) {\n+        println!(\"BOOM times {}!!!\", self.strength);\n+    }\n+}\n+\n+fn main() -> Result<(),u8> {\n+    let mut firecracker = Firework { strength: 1 };\n+    firecracker.set_strength(2);\n+\n+    let mut tnt = Firework { strength: 100.1 };\n+    tnt.set_strength(200.1);\n+    tnt.set_strength(300.3);\n+\n+    if true {\n+        println!(\"Exiting with error...\");\n+        return Err(1);\n+    }\n+\n+    let _ = Firework { strength: 1000 };\n+\n+    Ok(())\n+}\n+\n+// Expected program output:\n+//   Exiting with error...\n+//   BOOM times 100!!!\n+//   BOOM times 1!!!\n+//   Error: 1"}, {"sha": "8ad5042ff7baf217fc8210e4ee6acc7a688d7057", "filename": "src/test/run-make-fulldeps/instrument-coverage/if.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fif.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,28 @@\n+#![allow(unused_assignments, unused_variables)]\n+\n+fn main() {\n+    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    // dependent conditions.\n+    let\n+    is_true\n+    =\n+        std::env::args().len()\n+    ==\n+        1\n+    ;\n+    let\n+        mut\n+    countdown\n+    =\n+        0\n+    ;\n+    if\n+        is_true\n+    {\n+        countdown\n+        =\n+            10\n+        ;\n+    }\n+}"}, {"sha": "3ae4b7a7316bd33da70711cb396e9a98b0cd3b79", "filename": "src/test/run-make-fulldeps/instrument-coverage/if_else.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fif_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fif_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fif_else.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,40 @@\n+#![allow(unused_assignments)]\n+\n+fn main() {\n+    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    // dependent conditions.\n+    let is_true = std::env::args().len() == 1;\n+\n+    let mut countdown = 0;\n+    if\n+        is_true\n+    {\n+        countdown\n+        =\n+            10\n+        ;\n+    }\n+    else // Note coverage region difference without semicolon\n+    {\n+        countdown\n+        =\n+            100\n+    }\n+\n+    if\n+        is_true\n+    {\n+        countdown\n+        =\n+            10\n+        ;\n+    }\n+    else\n+    {\n+        countdown\n+        =\n+            100\n+        ;\n+    }\n+}"}, {"sha": "1e2fe5a9353a30d76d15a53793cbdcbda0edd866", "filename": "src/test/run-make-fulldeps/instrument-coverage/inner_items.rs", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Finner_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Finner_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Finner_items.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,57 @@\n+#![allow(unused_assignments, unused_variables)]\n+\n+fn main() {\n+    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    // dependent conditions.\n+    let is_true = std::env::args().len() == 1;\n+\n+    let mut countdown = 0;\n+    if is_true {\n+        countdown = 10;\n+    }\n+\n+    mod inner_mod {\n+        const INNER_MOD_CONST: u32 = 1000;\n+    }\n+\n+    fn inner_function(a: u32) {\n+        let b = 1;\n+        let c = a + b;\n+        println!(\"c = {}\", c)\n+    }\n+\n+    struct InnerStruct {\n+        inner_struct_field: u32,\n+    }\n+\n+    const INNER_CONST: u32 = 1234;\n+\n+    trait InnerTrait {\n+        fn inner_trait_func(&mut self, incr: u32);\n+\n+        fn default_trait_func(&mut self) {\n+            inner_function(INNER_CONST);\n+            self.inner_trait_func(INNER_CONST);\n+        }\n+    }\n+\n+    impl InnerTrait for InnerStruct {\n+        fn inner_trait_func(&mut self, incr: u32) {\n+            self.inner_struct_field += incr;\n+            inner_function(self.inner_struct_field);\n+        }\n+    }\n+\n+    type InnerType = String;\n+\n+    if is_true {\n+        inner_function(countdown);\n+    }\n+\n+    let mut val = InnerStruct {\n+        inner_struct_field: 101,\n+    };\n+\n+    val.default_trait_func();\n+}"}, {"sha": "1d83eb30dea24ccbf543b7aa419844b3550ee7e8", "filename": "src/test/run-make-fulldeps/instrument-coverage/lazy_boolean.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Flazy_boolean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Flazy_boolean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Flazy_boolean.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,43 @@\n+#![allow(unused_assignments, unused_variables)]\n+\n+fn main() {\n+    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    // dependent conditions.\n+    let is_true = std::env::args().len() == 1;\n+\n+    let (mut a, mut b, mut c) = (0, 0, 0);\n+    if is_true {\n+        a = 1;\n+        b = 10;\n+        c = 100;\n+    }\n+    let\n+        somebool\n+        =\n+            a < b\n+        ||\n+            b < c\n+    ;\n+    let\n+        somebool\n+        =\n+            b < a\n+        ||\n+            b < c\n+    ;\n+    let\n+        somebool\n+        =\n+            a < b\n+        &&\n+            b < c\n+    ;\n+    let\n+        somebool\n+        =\n+            b < a\n+        &&\n+            b < c\n+    ;\n+}"}, {"sha": "ba66d136de1e3e667b1ffb4bf9d5e86ee8e55796", "filename": "src/test/run-make-fulldeps/instrument-coverage/loop_break_value.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Floop_break_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Floop_break_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Floop_break_value.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,13 @@\n+#![allow(unused_assignments)]\n+\n+fn main() {\n+    let result\n+        =\n+            loop\n+        {\n+            break\n+            10\n+            ;\n+        }\n+    ;\n+}"}, {"sha": "3a8f30e0482281d757620ab796dfa55a079a07f4", "filename": "src/test/run-make-fulldeps/instrument-coverage/question_mark_error_result.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fquestion_mark_error_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fquestion_mark_error_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fquestion_mark_error_result.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,35 @@\n+#![allow(unused_assignments)]\n+// expect-exit-status-1\n+\n+fn call(return_error: bool) -> Result<(),()> {\n+    if return_error {\n+        Err(())\n+    } else {\n+        Ok(())\n+    }\n+}\n+\n+fn main() -> Result<(),()> {\n+    let mut\n+        countdown = 10\n+    ;\n+    for\n+        _\n+    in\n+        0..10\n+    {\n+        countdown\n+            -= 1\n+        ;\n+        if\n+            countdown < 5\n+        {\n+            call(/*return_error=*/ true)?;\n+        }\n+        else\n+        {\n+            call(/*return_error=*/ false)?;\n+        }\n+    }\n+    Ok(())\n+}"}, {"sha": "6f7f23475b8265259f29910aeec1d8bb7bff8f0b", "filename": "src/test/run-make-fulldeps/instrument-coverage/simple_loop.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fsimple_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fsimple_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fsimple_loop.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,35 @@\n+#![allow(unused_assignments)]\n+\n+fn main() {\n+    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    // dependent conditions.\n+    let is_true = std::env::args().len() == 1;\n+\n+    let mut countdown = 0;\n+\n+    if\n+        is_true\n+    {\n+        countdown\n+        =\n+            10\n+        ;\n+    }\n+\n+    loop\n+    {\n+        if\n+            countdown\n+                ==\n+            0\n+        {\n+            break\n+            ;\n+        }\n+        countdown\n+        -=\n+        1\n+        ;\n+    }\n+}"}, {"sha": "c9a24f7a9d35db1dc2687fdee4d8c6bc2ae2dd7f", "filename": "src/test/run-make-fulldeps/instrument-coverage/simple_match.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fsimple_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fsimple_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fsimple_match.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,43 @@\n+#![allow(unused_assignments)]\n+\n+fn main() {\n+    // Initialize test constants in a way that cannot be determined at compile time, to ensure\n+    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from\n+    // dependent conditions.\n+    let is_true = std::env::args().len() == 1;\n+\n+    let mut countdown = 1;\n+    if is_true {\n+        countdown = 0;\n+    }\n+\n+    for\n+        _\n+    in\n+        0..2\n+    {\n+        let z\n+        ;\n+        match\n+            countdown\n+        {\n+            x\n+            if\n+                x\n+                    <\n+                1\n+            =>\n+            {\n+                z = countdown\n+                ;\n+                let y = countdown\n+                ;\n+                countdown = 10\n+                ;\n+            }\n+            _\n+            =>\n+            {}\n+        }\n+    }\n+}"}, {"sha": "da206e28f31dad815fe4501da87f187a6af3fc39", "filename": "src/test/run-make-fulldeps/instrument-coverage/various_conditions.rs", "status": "renamed", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fvarious_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fvarious_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fvarious_conditions.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -1,21 +1,24 @@\n-#![allow(unused_assignments)]\n+#![allow(unused_assignments, unused_variables)]\n \n fn main() {\n     let mut countdown = 0;\n     if true {\n         countdown = 10;\n     }\n \n-    if countdown > 7 {\n+    const B: u32 = 100;\n+    let x = if countdown > 7 {\n         countdown -= 4;\n+        B\n     } else if countdown > 2 {\n         if countdown < 1 || countdown > 5 || countdown != 9 {\n             countdown = 0;\n         }\n         countdown -= 5;\n+        countdown\n     } else {\n         return;\n-    }\n+    };\n \n     let mut countdown = 0;\n     if true {\n@@ -35,17 +38,30 @@ fn main() {\n \n     let mut countdown = 0;\n     if true {\n-        countdown = 10;\n+        countdown = 1;\n     }\n \n-    if countdown > 7 {\n+    let z = if countdown > 7 {\n         countdown -= 4;\n     } else if countdown > 2 {\n         if countdown < 1 || countdown > 5 || countdown != 9 {\n             countdown = 0;\n         }\n         countdown -= 5;\n     } else {\n+        let should_be_reachable = countdown;\n+        println!(\"reached\");\n         return;\n-    }\n+    };\n+\n+    let w = if countdown > 7 {\n+        countdown -= 4;\n+    } else if countdown > 2 {\n+        if countdown < 1 || countdown > 5 || countdown != 9 {\n+            countdown = 0;\n+        }\n+        countdown -= 5;\n+    } else {\n+        return;\n+    };\n }", "previous_filename": "src/test/run-make-fulldeps/instrument-coverage/coverage_of_if_else.rs"}, {"sha": "14ba36238d62f522077aa97c7a03decbf3f6ec0d", "filename": "src/test/run-make-fulldeps/instrument-coverage/while_early_return.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fwhile_early_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fwhile_early_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finstrument-coverage%2Fwhile_early_return.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -0,0 +1,47 @@\n+#![allow(unused_assignments)]\n+// expect-exit-status-1\n+\n+fn main() -> Result<(),u8> {\n+    let mut countdown = 10;\n+    while\n+        countdown\n+            >\n+        0\n+    {\n+        if\n+            countdown\n+                <\n+            5\n+        {\n+            return\n+                if\n+                    countdown\n+                        >\n+                    8\n+                {\n+                    Ok(())\n+                }\n+                else\n+                {\n+                    Err(1)\n+                }\n+                ;\n+        }\n+        countdown\n+            -=\n+        1\n+        ;\n+    }\n+    Ok(())\n+}\n+\n+// ISSUE(77553): Originally, this test had `Err(1)` on line 22 (instead of `Ok(())`) and\n+// `std::process::exit(2)` on line 26 (instead of `Err(1)`); and this worked as expected on Linux\n+// and MacOS. But on Windows (MSVC, at least), the call to `std::process::exit()` exits the program\n+// without saving the InstrProf coverage counters. The use of `std::process:exit()` is not critical\n+// to the coverage test for early returns, but this is a limitation that should be fixed.\n+//\n+// FIXME(richkadel): Consider creating a new tests for coverage when calling `std::process::exit()`,\n+// move the `ISSUE` comment to that test, and implement a new test directive that supports skipping\n+// coverage tests when targeting specific platforms (at least skipping Windows, or MSVC if the\n+// problem exists on MSVC only)."}, {"sha": "d85558ea2f5f0cd6c36623f7ca2a802050368e0d", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -3199,8 +3199,18 @@ impl<'test> TestCx<'test> {\n                     from_file = format!(\"{}.{}.mir\", test_name, first_pass);\n                     to_file = Some(second_file);\n                 } else {\n-                    expected_file =\n-                        format!(\"{}{}.mir\", test_name.trim_end_matches(\".mir\"), bit_width);\n+                    let ext_re = Regex::new(r#\"(\\.(mir|dot|html))$\"#).unwrap();\n+                    let cap = ext_re\n+                        .captures_iter(test_name)\n+                        .next()\n+                        .expect(\"test_name has an invalid extension\");\n+                    let extension = cap.get(1).unwrap().as_str();\n+                    expected_file = format!(\n+                        \"{}{}{}\",\n+                        test_name.trim_end_matches(extension),\n+                        bit_width,\n+                        extension,\n+                    );\n                     from_file = test_name.to_string();\n                     assert!(\n                         test_names.next().is_none(),"}, {"sha": "c978bbe20e8c7fba0b85e7269b2c16098e81b096", "filename": "src/tools/rust-demangler/Cargo.toml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftools%2Frust-demangler%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftools%2Frust-demangler%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-demangler%2FCargo.toml?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -1,10 +1,11 @@\n [package]\n authors = [\"The Rust Project Developers\"]\n name = \"rust-demangler\"\n-version = \"0.0.0\"\n+version = \"0.0.1\"\n edition = \"2018\"\n \n [dependencies]\n+regex = \"1.0\"\n rustc-demangle = \"0.1\"\n \n [[bin]]"}, {"sha": "e1e49230ad14696d5093e349b09b62dd068b9861", "filename": "src/tools/rust-demangler/main.rs", "status": "modified", "additions": 37, "deletions": 4, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftools%2Frust-demangler%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5aebad28fe69f53497ce0107103c6d5d37b25dc/src%2Ftools%2Frust-demangler%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-demangler%2Fmain.rs?ref=f5aebad28fe69f53497ce0107103c6d5d37b25dc", "patch": "@@ -22,18 +22,51 @@\n //!   --instr-profile=main.profdata ./main --show-line-counts-or-regions\n //! ```\n \n+use regex::Regex;\n use rustc_demangle::demangle;\n use std::io::{self, Read, Write};\n \n+const REPLACE_COLONS: &str = \"::\";\n+\n fn main() -> io::Result<()> {\n+    let mut strip_crate_disambiguators = Some(Regex::new(r\"\\[[a-f0-9]{16}\\]::\").unwrap());\n+\n+    let mut args = std::env::args();\n+    let progname = args.next().unwrap();\n+    for arg in args {\n+        if arg == \"--disambiguators\" || arg == \"-d\" {\n+            strip_crate_disambiguators = None;\n+        } else {\n+            eprintln!();\n+            eprintln!(\"Usage: {} [-d|--disambiguators]\", progname);\n+            eprintln!();\n+            eprintln!(\n+                \"This tool converts a list of Rust mangled symbols (one per line) into a\\n\n+                corresponding list of demangled symbols.\"\n+            );\n+            eprintln!();\n+            eprintln!(\n+                \"With -d (--disambiguators), Rust symbols mangled with the v0 symbol mangler may\\n\\\n+                include crate disambiguators (a 16 character hex value in square brackets).\\n\\\n+                Crate disambiguators are removed by default.\"\n+            );\n+            eprintln!();\n+            std::process::exit(1)\n+        }\n+    }\n+\n     let mut buffer = String::new();\n     io::stdin().read_to_string(&mut buffer)?;\n     let lines = buffer.lines();\n-    let mut demangled = Vec::new();\n+    let mut demangled_lines = Vec::new();\n     for mangled in lines {\n-        demangled.push(demangle(mangled).to_string());\n+        let mut demangled = demangle(mangled).to_string();\n+        if let Some(re) = &strip_crate_disambiguators {\n+            demangled = re.replace_all(&demangled, REPLACE_COLONS).to_string();\n+        }\n+        demangled_lines.push(demangled);\n     }\n-    demangled.push(\"\".to_string());\n-    io::stdout().write_all(demangled.join(\"\\n\").as_bytes())?;\n+    demangled_lines.push(\"\".to_string());\n+    io::stdout().write_all(demangled_lines.join(\"\\n\").as_bytes())?;\n     Ok(())\n }"}]}