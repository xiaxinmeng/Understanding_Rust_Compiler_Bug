{"sha": "011aafea16428443076a01be98e53018706a7964", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxMWFhZmVhMTY0Mjg0NDMwNzZhMDFiZTk4ZTUzMDE4NzA2YTc5NjQ=", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2020-09-22T23:41:42Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2020-09-22T23:41:42Z"}, "message": "Add initial type implementations", "tree": {"sha": "d81929a578e1afd6ead4799c4eee3d77e1e81de7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d81929a578e1afd6ead4799c4eee3d77e1e81de7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/011aafea16428443076a01be98e53018706a7964", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/011aafea16428443076a01be98e53018706a7964", "html_url": "https://github.com/rust-lang/rust/commit/011aafea16428443076a01be98e53018706a7964", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/011aafea16428443076a01be98e53018706a7964/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ee9cbaf607f7077d7ccc6b7d288f75cf55cf9b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ee9cbaf607f7077d7ccc6b7d288f75cf55cf9b8", "html_url": "https://github.com/rust-lang/rust/commit/8ee9cbaf607f7077d7ccc6b7d288f75cf55cf9b8"}], "stats": {"total": 533, "additions": 533, "deletions": 0}, "files": [{"sha": "96ef6c0b944e24fc22f51f18136cd62ffd5b0b8f", "filename": ".gitignore", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,2 @@\n+/target\n+Cargo.lock"}, {"sha": "f3538db7559062d680ceec43436c85ca1e26eab1", "filename": "Cargo.toml", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,5 @@\n+[workspace]\n+\n+members = [\n+    \"crates/core_simd\",\n+]"}, {"sha": "d4aef6f059c5efdb14bb30a7066c776428ac9f11", "filename": "crates/core_simd/Cargo.toml", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2FCargo.toml?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,5 @@\n+[package]\n+name = \"core_simd\"\n+version = \"0.1.0\"\n+authors = [\"Caleb Zulawski <caleb.zulawski@gmail.com>\"]\n+edition = \"2018\""}, {"sha": "8db640157eed914d8613d17b17dc395f1ab63442", "filename": "crates/core_simd/src/lib.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Flib.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,36 @@\n+#![feature(repr_simd)]\n+\n+#[macro_use]\n+mod macros;\n+\n+macro_rules! import_types {\n+    { $($mod:ident,)* } => {\n+        $(\n+        mod $mod;\n+        pub use $mod::*;\n+        )*\n+    }\n+}\n+\n+import_types! {\n+    type_u8x2,   type_u8x4,   type_u8x8,   type_u8x16,   type_u8x32,   type_u8x64,\n+    type_i8x2,   type_i8x4,   type_i8x8,   type_i8x16,   type_i8x32,   type_i8x64,\n+    type_u16x2,  type_u16x4,  type_u16x8,  type_u16x16,  type_u16x32,\n+    type_i16x2,  type_i16x4,  type_i16x8,  type_i16x16,  type_i16x32,\n+    type_u32x2,  type_u32x4,  type_u32x8,  type_u32x16,\n+    type_i32x2,  type_i32x4,  type_i32x8,  type_i32x16,\n+    type_u64x2,  type_u64x4,  type_u64x8,\n+    type_i64x2,  type_i64x4,  type_i64x8,\n+    type_u128x2, type_u128x4,\n+    type_i128x2, type_i128x4,\n+}\n+\n+import_types! {\n+    type_usizex2, type_usizex4, type_usizex8,\n+    type_isizex2, type_isizex4, type_isizex8,\n+}\n+\n+import_types! {\n+    type_f32x2, type_f32x4, type_f32x8, type_f32x16,\n+    type_f64x2, type_f64x4, type_f64x8,\n+}"}, {"sha": "70b19e5f4dbca489357794cd689f1d0105ab9b14", "filename": "crates/core_simd/src/macros.rs", "status": "added", "additions": 140, "deletions": 0, "changes": 140, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fmacros.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,140 @@\n+macro_rules! from_aligned {\n+    { unsafe $from:ty => $to:ty } => {\n+        impl core::convert::From<$from> for $to {\n+            #[inline]\n+            fn from(value: $from) -> $to {\n+                assert_eq!(core::mem::size_of::<$from>(), core::mem::size_of::<$to>());\n+                assert!(core::mem::align_of::<$from>() >= core::mem::align_of::<$to>());\n+                unsafe { core::mem::transmute(value) }\n+            }\n+        }\n+    };\n+    { unsafe $a:ty |bidirectional| $b:ty } => {\n+        from_aligned!{ unsafe $a => $b }\n+        from_aligned!{ unsafe $b => $a }\n+    }\n+}\n+\n+macro_rules! from_unaligned {\n+    { unsafe $from:ty => $to:ty } => {\n+        impl core::convert::From<$from> for $to {\n+            #[inline]\n+            fn from(value: $from) -> $to {\n+                assert_eq!(core::mem::size_of::<$from>(), core::mem::size_of::<$to>());\n+                unsafe { (&value as *const $from as *const $to).read_unaligned() }\n+            }\n+        }\n+    }\n+}\n+\n+macro_rules! define_type {\n+    { struct $name:ident([$type:ty; $lanes:tt]); } => {\n+        define_type! { @impl $name [$type; $lanes] }\n+\n+        // array references\n+        impl AsRef<[$type; $lanes]> for $name {\n+            #[inline]\n+            fn as_ref(&self) -> &[$type; $lanes] {\n+                unsafe { &*(self as *const _ as *const _) }\n+            }\n+        }\n+\n+        impl AsMut<[$type; $lanes]> for $name {\n+            #[inline]\n+            fn as_mut(&mut self) -> &mut [$type; $lanes] {\n+                unsafe { &mut *(self as *mut _ as *mut _) }\n+            }\n+        }\n+\n+        // slice references\n+        impl AsRef<[$type]> for $name {\n+            #[inline]\n+            fn as_ref(&self) -> &[$type] {\n+                AsRef::<[$type; $lanes]>::as_ref(self)\n+            }\n+        }\n+\n+        impl AsMut<[$type]> for $name {\n+            #[inline]\n+            fn as_mut(&mut self) -> &mut [$type] {\n+                AsMut::<[$type; $lanes]>::as_mut(self)\n+            }\n+        }\n+\n+        // vector to array\n+        from_aligned! { unsafe $name => [$type; $lanes] }\n+\n+        // array to vector\n+        from_unaligned! { unsafe [$type; $lanes] => $name }\n+\n+        // splat\n+        impl From<$type> for $name {\n+            fn from(value: $type) -> Self {\n+                Self::splat(value)\n+            }\n+        }\n+    };\n+    { @impl $name:ident [$type:ty; 1] } => {\n+        define_type! { @impl $name | $type | $type, | v0, }\n+    };\n+    { @impl $name:ident [$type:ty; 2] } => {\n+        define_type! { @impl $name | $type | $type, $type, | v0, v1, }\n+    };\n+    { @impl $name:ident [$type:ty; 4] } => {\n+        define_type! { @impl $name | $type |\n+            $type, $type, $type, $type, |\n+            v0, v1, v2, v3,\n+        }\n+    };\n+    { @impl $name:ident [$type:ty; 8] } => {\n+        define_type! { @impl $name | $type |\n+            $type, $type, $type, $type, $type, $type, $type, $type, |\n+            v0, v1, v2, v3, v4, v5, v6, v7,\n+        }\n+    };\n+    { @impl $name:ident [$type:ty; 16] } => {\n+        define_type! { @impl $name | $type |\n+            $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, |\n+            v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15,\n+        }\n+    };\n+    { @impl $name:ident [$type:ty; 32] } => {\n+        define_type! { @impl $name | $type |\n+            $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type,\n+            $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, |\n+            v0,  v1,  v2,  v3,  v4,  v5,  v6,  v7,  v8,  v9,  v10, v11, v12, v13, v14, v15,\n+            v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31,\n+        }\n+    };\n+    { @impl $name:ident [$type:ty; 64] } => {\n+        define_type! { @impl $name | $type |\n+            $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type,\n+            $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type,\n+            $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type,\n+            $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, $type, |\n+            v0,  v1,  v2,  v3,  v4,  v5,  v6,  v7,  v8,  v9,  v10, v11, v12, v13, v14, v15,\n+            v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31,\n+            v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47,\n+            v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63,\n+        }\n+    };\n+    { @impl $name:ident | $type:ty | $($itype:ty,)* | $($ivar:ident,)* } => {\n+        #[allow(non_camel_case_types)]\n+        #[derive(Copy, Clone, Debug, Default, PartialEq, PartialOrd)]\n+        #[repr(simd)]\n+        pub struct $name($($itype),*);\n+\n+        impl $name {\n+            #[inline]\n+            pub fn splat(value: $type) -> Self {\n+                Self($(value as $itype),*)\n+            }\n+\n+            #[allow(clippy::too_many_arguments)]\n+            #[inline]\n+            pub fn new($($ivar: $itype),*) -> Self {\n+                Self($($ivar),*)\n+            }\n+        }\n+    }\n+}"}, {"sha": "f001b9c42df4073442826be689dbd11fbfd065af", "filename": "crates/core_simd/src/type_f32x16.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_f32x16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_f32x16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_f32x16.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,9 @@\n+define_type! { struct f32x16([f32; 16]); }\n+\n+/*\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe f32x16 |bidirectional| core::arch::x86::__m512 }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe f32x16 |bidirectional| core::arch::x86_64::__m512 }\n+*/"}, {"sha": "e6691523ea9fc84b8802336e205b704afd9c8f51", "filename": "crates/core_simd/src/type_f32x2.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_f32x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_f32x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_f32x2.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1 @@\n+define_type! { struct f32x2([f32; 2]); }"}, {"sha": "4fd937425c504fb19f73fe730d4713f0cc56b722", "filename": "crates/core_simd/src/type_f32x4.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_f32x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_f32x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_f32x4.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct f32x4([f32; 4]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe f32x4 |bidirectional| core::arch::x86::__m128 }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe f32x4 |bidirectional| core::arch::x86_64::__m128 }"}, {"sha": "a6754d490c1af27c2645ea086f67e5aabebae149", "filename": "crates/core_simd/src/type_f32x8.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_f32x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_f32x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_f32x8.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct f32x8([f32; 8]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe f32x8 |bidirectional| core::arch::x86::__m256 }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe f32x8 |bidirectional| core::arch::x86_64::__m256 }"}, {"sha": "227ef951434d636f09ae9c63eeb34f22b85a6cb2", "filename": "crates/core_simd/src/type_f64x2.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_f64x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_f64x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_f64x2.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct f64x2([f64; 2]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe f64x2 |bidirectional| core::arch::x86::__m128d }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe f64x2 |bidirectional| core::arch::x86_64::__m128d }"}, {"sha": "8e9debd8bfdeeba41cfd0741a1507cf2ce6466f4", "filename": "crates/core_simd/src/type_f64x4.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_f64x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_f64x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_f64x4.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct f64x4([f64; 4]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe f64x4 |bidirectional| core::arch::x86::__m256d }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe f64x4 |bidirectional| core::arch::x86_64::__m256d }"}, {"sha": "8aa3812b4f43555af6d86b045a6014ce63c3bd06", "filename": "crates/core_simd/src/type_f64x8.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_f64x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_f64x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_f64x8.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,9 @@\n+define_type! { struct f64x8([f64; 8]); }\n+\n+/*\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe f64x8 |bidirectional| core::arch::x86::__m512d }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe f64x8 |bidirectional| core::arch::x86_64::__m512d }\n+*/"}, {"sha": "cb1be5a9866ccab547431b27485278008889ee6f", "filename": "crates/core_simd/src/type_i128x2.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i128x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i128x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i128x2.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct i128x2([i128; 2]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe i128x2 |bidirectional| core::arch::x86::__m256i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe i128x2 |bidirectional| core::arch::x86_64::__m256i }"}, {"sha": "8888d4205f863a03354804aeb57f6831ee1c4817", "filename": "crates/core_simd/src/type_i128x4.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i128x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i128x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i128x4.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,9 @@\n+define_type! { struct i128x4([i128; 4]); }\n+\n+/*\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe i128x4 |bidirectional| core::arch::x86::__m512i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe i128x4 |bidirectional| core::arch::x86_64::__m512i }\n+*/"}, {"sha": "ec52c4857763c6123e95d97a70c38a452116c42a", "filename": "crates/core_simd/src/type_i16x16.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i16x16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i16x16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i16x16.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct i16x16([i16; 16]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe i16x16 |bidirectional| core::arch::x86::__m256i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe i16x16 |bidirectional| core::arch::x86_64::__m256i }"}, {"sha": "313ba334da19cf2d6a01744ab4c25af176affd6f", "filename": "crates/core_simd/src/type_i16x2.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i16x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i16x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i16x2.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1 @@\n+define_type! { struct i16x2([i16; 2]); }"}, {"sha": "53679e2ac5c4329127dcd1e6364b393abfde198a", "filename": "crates/core_simd/src/type_i16x32.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i16x32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i16x32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i16x32.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,9 @@\n+define_type! { struct i16x32([i16; 32]); }\n+\n+/*\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe u8x32 |bidirectional| core::arch::x86::__m512i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe u8x32 |bidirectional| core::arch::x86_64::__m512i }\n+*/"}, {"sha": "f69f5dc2acda282b1a58ca347ef3907d1923509e", "filename": "crates/core_simd/src/type_i16x4.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i16x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i16x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i16x4.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1 @@\n+define_type! { struct i16x4([i16; 4]); }"}, {"sha": "b1a3100dd6e2a7a6eb2cc8aa285bb0966178dbd7", "filename": "crates/core_simd/src/type_i16x8.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i16x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i16x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i16x8.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct i16x8([i16; 8]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe i16x8 |bidirectional| core::arch::x86::__m128i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe i16x8 |bidirectional| core::arch::x86_64::__m128i }"}, {"sha": "5b7edb0f51bbca71bf513655d09a0d0faadcad9c", "filename": "crates/core_simd/src/type_i32x16.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i32x16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i32x16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i32x16.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,9 @@\n+define_type! { struct i32x16([i32; 16]); }\n+\n+/*\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe u32x16 |bidirectional| core::arch::x86::__m512i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe u32x16 |bidirectional| core::arch::x86_64::__m512i }\n+*/"}, {"sha": "425b6fd3bca85afbb027c1e37a359d684b97dc40", "filename": "crates/core_simd/src/type_i32x2.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i32x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i32x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i32x2.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1 @@\n+define_type! { struct i32x2([i32; 2]); }"}, {"sha": "d62fc3856340a3035848761a1e4f3d73e0e49cc2", "filename": "crates/core_simd/src/type_i32x4.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i32x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i32x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i32x4.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct i32x4([i32; 4]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe i32x4 |bidirectional| core::arch::x86::__m128i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe i32x4 |bidirectional| core::arch::x86_64::__m128i }"}, {"sha": "ee83854cee4e81f59a974595bba2ea5c188a8ceb", "filename": "crates/core_simd/src/type_i32x8.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i32x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i32x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i32x8.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct i32x8([i32; 8]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe i32x8 |bidirectional| core::arch::x86::__m256i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe i32x8 |bidirectional| core::arch::x86_64::__m256i }"}, {"sha": "35af990ec649da9c05ec7e766fb940fe96cdebc5", "filename": "crates/core_simd/src/type_i64x2.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i64x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i64x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i64x2.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct i64x2([i64; 2]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe i64x2 |bidirectional| core::arch::x86::__m128i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe i64x2 |bidirectional| core::arch::x86_64::__m128i }"}, {"sha": "6f69a492ede923966220ff06540604517d7b83f1", "filename": "crates/core_simd/src/type_i64x4.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i64x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i64x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i64x4.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct i64x4([i64; 4]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe i64x4 |bidirectional| core::arch::x86::__m256i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe i64x4 |bidirectional| core::arch::x86_64::__m256i }"}, {"sha": "888c9b6612c08198b76866823c004f42c70f7f9c", "filename": "crates/core_simd/src/type_i64x8.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i64x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i64x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i64x8.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,9 @@\n+define_type! { struct i64x8([i64; 8]); }\n+\n+/*\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe i64x8 |bidirectional| core::arch::x86::__m512i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe i64x8 |bidirectional| core::arch::x86_64::__m512i }\n+*/"}, {"sha": "32ea4fa82934ec050bab92237d897e065f18cb09", "filename": "crates/core_simd/src/type_i8x16.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i8x16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i8x16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i8x16.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct i8x16([i8; 16]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe i8x16 |bidirectional| core::arch::x86::__m128i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe i8x16 |bidirectional| core::arch::x86_64::__m128i }"}, {"sha": "a36de2c5421dc447aea2c0a2ae5c48e8cac1a5f6", "filename": "crates/core_simd/src/type_i8x2.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i8x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i8x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i8x2.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1 @@\n+define_type! { struct i8x2([i8; 2]); }"}, {"sha": "874fcdd1e96a71ceaad838efd604b191a39e1d87", "filename": "crates/core_simd/src/type_i8x32.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i8x32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i8x32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i8x32.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct i8x32([i8; 32]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe i8x32 |bidirectional| core::arch::x86::__m256i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe i8x32 |bidirectional| core::arch::x86_64::__m256i }"}, {"sha": "5be83d5e03772fbc04732e29a10257f34123bb76", "filename": "crates/core_simd/src/type_i8x4.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i8x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i8x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i8x4.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1 @@\n+define_type! { struct i8x4([i8; 4]); }"}, {"sha": "d21baf12640acb67289e437d4dd88c9ff1b84179", "filename": "crates/core_simd/src/type_i8x64.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i8x64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i8x64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i8x64.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,9 @@\n+define_type! { struct i8x64([i8; 64]); }\n+\n+/*\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe u8x64 |bidirectional| core::arch::x86::__m512i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe u8x64 |bidirectional| core::arch::x86_64::__m512i }\n+*/"}, {"sha": "f09a70f6cb9db4d9b42225092c73a7e09621f05d", "filename": "crates/core_simd/src/type_i8x8.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i8x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_i8x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_i8x8.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1 @@\n+define_type! { struct i8x8([i8; 8]); }"}, {"sha": "aa3abaa8c4e7371421bd7da89d0b3cb2bd76a110", "filename": "crates/core_simd/src/type_isizex2.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_isizex2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_isizex2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_isizex2.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct isizex2([isize; 2]); }\n+\n+#[cfg(all(target_arch = \"x86\", target_pointer_width = \"64\"))]\n+from_aligned! { unsafe isizex2 |bidirectional| core::arch::x86::__m128i }\n+\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n+from_aligned! { unsafe isizex2 |bidirectional| core::arch::x86_64::__m128i }"}, {"sha": "2c0d7d33ba532fefe6388c9fe9e06452efdb3e12", "filename": "crates/core_simd/src/type_isizex4.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_isizex4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_isizex4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_isizex4.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,13 @@\n+define_type! { struct isizex4([isize; 4]); }\n+\n+#[cfg(all(target_arch = \"x86\", target_pointer_width = \"32\"))]\n+from_aligned! { unsafe isizex4 |bidirectional| core::arch::x86::__m128i }\n+\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"32\"))]\n+from_aligned! { unsafe isizex4 |bidirectional| core::arch::x86_64::__m128i }\n+\n+#[cfg(all(target_arch = \"x86\", target_pointer_width = \"64\"))]\n+from_aligned! { unsafe isizex4 |bidirectional| core::arch::x86::__m256i }\n+\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n+from_aligned! { unsafe isizex4 |bidirectional| core::arch::x86_64::__m256i }"}, {"sha": "cc2f9ad550f1bb5556c8be9c0fbcde6367074b99", "filename": "crates/core_simd/src/type_isizex8.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_isizex8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_isizex8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_isizex8.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,15 @@\n+define_type! { struct isizex8([isize; 8]); }\n+\n+#[cfg(all(target_arch = \"x86\", target_pointer_width = \"32\"))]\n+from_aligned! { unsafe isizex8 |bidirectional| core::arch::x86::__m256i }\n+\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"32\"))]\n+from_aligned! { unsafe isizex8 |bidirectional| core::arch::x86_64::__m256i }\n+\n+/*\n+#[cfg(all(target_arch = \"x86\", target_pointer_width = \"64\"))]\n+from_aligned! { unsafe isizex8 |bidirectional| core::arch::x86::__m512i }\n+\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n+from_aligned! { unsafe isizex8 |bidirectional| core::arch::x86_64::__m512i }\n+*/"}, {"sha": "cbed75896160a245359d45562246caba3a798d5b", "filename": "crates/core_simd/src/type_u128x2.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u128x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u128x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u128x2.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct u128x2([u128; 2]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe u128x2 |bidirectional| core::arch::x86::__m256i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe u128x2 |bidirectional| core::arch::x86_64::__m256i }"}, {"sha": "563689621eec95a69fa1dadf69bcd2eebf32288a", "filename": "crates/core_simd/src/type_u128x4.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u128x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u128x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u128x4.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,9 @@\n+define_type! { struct u128x4([u128; 4]); }\n+\n+/*\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe u128x4 |bidirectional| core::arch::x86::__m512i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe u128x4 |bidirectional| core::arch::x86_64::__m512i }\n+*/"}, {"sha": "50f39983b3854794858f4720342d0482d3d808a0", "filename": "crates/core_simd/src/type_u16x16.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u16x16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u16x16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u16x16.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct u16x16([u16; 16]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe u16x16 |bidirectional| core::arch::x86::__m256i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe u16x16 |bidirectional| core::arch::x86_64::__m256i }"}, {"sha": "d0384e40f94a932fcc84ea9d9cd3baaaba6fe568", "filename": "crates/core_simd/src/type_u16x2.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u16x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u16x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u16x2.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1 @@\n+define_type! { struct u16x2([u16; 2]); }"}, {"sha": "29cf58581a92e87d24c4872fcb1cd80fd74399ac", "filename": "crates/core_simd/src/type_u16x32.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u16x32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u16x32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u16x32.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,9 @@\n+define_type! { struct u16x32([u16; 32]); }\n+\n+/*\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe u16x32 |bidirectional| core::arch::x86::__m512i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe u16x32 |bidirectional| core::arch::x86_64::__m512i }\n+*/"}, {"sha": "0c4e3ed9b7de3da96dedf81fcc05d1b4e1d0b405", "filename": "crates/core_simd/src/type_u16x4.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u16x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u16x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u16x4.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1 @@\n+define_type! { struct u16x4([u16; 4]); }"}, {"sha": "69127996f7f969b3fc01b6f718ef2c056d08248b", "filename": "crates/core_simd/src/type_u16x8.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u16x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u16x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u16x8.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct u16x8([u16; 8]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe u16x8 |bidirectional| core::arch::x86::__m128i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe u16x8 |bidirectional| core::arch::x86_64::__m128i }"}, {"sha": "1b8965685b8df7c900711a856daad05d8d252e23", "filename": "crates/core_simd/src/type_u32x16.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u32x16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u32x16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u32x16.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,9 @@\n+define_type! { struct u32x16([u32; 16]); }\n+\n+/*\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe u32x16 |bidirectional| core::arch::x86::__m512i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe u32x16 |bidirectional| core::arch::x86_64::__m512i }\n+*/"}, {"sha": "8d9d535952533cec3944b6a63f87ddacccd0fa93", "filename": "crates/core_simd/src/type_u32x2.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u32x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u32x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u32x2.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1 @@\n+define_type! { struct u32x2([u32; 2]); }"}, {"sha": "fc79dff0e5b7b84d74325968c02c6a344dcbc8d0", "filename": "crates/core_simd/src/type_u32x4.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u32x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u32x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u32x4.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct u32x4([u32; 4]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe u32x4 |bidirectional| core::arch::x86::__m128i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe u32x4 |bidirectional| core::arch::x86_64::__m128i }"}, {"sha": "727b87860c96d213c69997595712dbc119ca4d84", "filename": "crates/core_simd/src/type_u32x8.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u32x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u32x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u32x8.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct u32x8([u32; 8]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe u32x8 |bidirectional| core::arch::x86::__m256i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe u32x8 |bidirectional| core::arch::x86_64::__m256i }"}, {"sha": "729982f77356042aa09ec2927de32e9fe487a0df", "filename": "crates/core_simd/src/type_u64x2.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u64x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u64x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u64x2.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct u64x2([u64; 2]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe u64x2 |bidirectional| core::arch::x86::__m128i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe u64x2 |bidirectional| core::arch::x86_64::__m128i }"}, {"sha": "7e1aa9733819c1e2afeed065b54ef008c1f5900e", "filename": "crates/core_simd/src/type_u64x4.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u64x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u64x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u64x4.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct u64x4([u64; 4]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe u64x4 |bidirectional| core::arch::x86::__m256i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe u64x4 |bidirectional| core::arch::x86_64::__m256i }"}, {"sha": "ed0769d13117e95d4a49f3cbbcf3c556a48b8aec", "filename": "crates/core_simd/src/type_u64x8.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u64x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u64x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u64x8.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,9 @@\n+define_type! { struct u64x8([u64; 8]); }\n+\n+/*\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe u64x8 |bidirectional| core::arch::x86::__m512i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe u64x8 |bidirectional| core::arch::x86_64::__m512i }\n+*/"}, {"sha": "69d788ef2b64d8fb19b02798bfcb224a25c88a57", "filename": "crates/core_simd/src/type_u8x16.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u8x16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u8x16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u8x16.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct u8x16([u8; 16]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe u8x16 |bidirectional| core::arch::x86::__m128i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe u8x16 |bidirectional| core::arch::x86_64::__m128i }"}, {"sha": "5ab66878b82e829c97854e3d29400b83bdda3569", "filename": "crates/core_simd/src/type_u8x2.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u8x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u8x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u8x2.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1 @@\n+define_type! { struct u8x2([u8; 2]); }"}, {"sha": "102724684cb8bedec59ac2b0f4b1a505d9184742", "filename": "crates/core_simd/src/type_u8x32.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u8x32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u8x32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u8x32.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct u8x32([u8; 32]); }\n+\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe u8x32 |bidirectional| core::arch::x86::__m256i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe u8x32 |bidirectional| core::arch::x86_64::__m256i }"}, {"sha": "648d12b9e2d03f2b4ca202672139f2925b27b9a9", "filename": "crates/core_simd/src/type_u8x4.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u8x4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u8x4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u8x4.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1 @@\n+define_type! { struct u8x4([u8; 4]); }"}, {"sha": "1e2967d485ae7a81b46bd407c24a42721b65dd2d", "filename": "crates/core_simd/src/type_u8x64.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u8x64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u8x64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u8x64.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,9 @@\n+define_type! { struct u8x64([u8; 64]); }\n+\n+/*\n+#[cfg(target_arch = \"x86\")]\n+from_aligned! { unsafe u8x64 |bidirectional| core::arch::x86::__m512i }\n+\n+#[cfg(target_arch = \"x86_64\")]\n+from_aligned! { unsafe u8x64 |bidirectional| core::arch::x86_64::__m512i }\n+*/"}, {"sha": "aa62e04ddf231c7270e935ca9321083981b648fb", "filename": "crates/core_simd/src/type_u8x8.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u8x8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_u8x8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_u8x8.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1 @@\n+define_type! { struct u8x8([u8; 8]); }"}, {"sha": "083cd499a0748c52139a7404ddb863f70f3a7585", "filename": "crates/core_simd/src/type_usizex2.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_usizex2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_usizex2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_usizex2.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,7 @@\n+define_type! { struct usizex2([usize; 2]); }\n+\n+#[cfg(all(target_arch = \"x86\", target_pointer_width = \"64\"))]\n+from_aligned! { unsafe usizex2 |bidirectional| core::arch::x86::__m128i }\n+\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n+from_aligned! { unsafe usizex2 |bidirectional| core::arch::x86_64::__m128i }"}, {"sha": "3301039a05a18a8e21acabe887d48104fd6fdba9", "filename": "crates/core_simd/src/type_usizex4.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_usizex4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_usizex4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_usizex4.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,13 @@\n+define_type! { struct usizex4([usize; 4]); }\n+\n+#[cfg(all(target_arch = \"x86\", target_pointer_width = \"32\"))]\n+from_aligned! { unsafe usizex4 |bidirectional| core::arch::x86::__m128i }\n+\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"32\"))]\n+from_aligned! { unsafe usizex4 |bidirectional| core::arch::x86_64::__m128i }\n+\n+#[cfg(all(target_arch = \"x86\", target_pointer_width = \"64\"))]\n+from_aligned! { unsafe usizex4 |bidirectional| core::arch::x86::__m256i }\n+\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n+from_aligned! { unsafe usizex4 |bidirectional| core::arch::x86_64::__m256i }"}, {"sha": "e21b1ea6b7a0ebbb23aeab62ba76fa003bb41c80", "filename": "crates/core_simd/src/type_usizex8.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_usizex8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/011aafea16428443076a01be98e53018706a7964/crates%2Fcore_simd%2Fsrc%2Ftype_usizex8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Ftype_usizex8.rs?ref=011aafea16428443076a01be98e53018706a7964", "patch": "@@ -0,0 +1,15 @@\n+define_type! { struct usizex8([usize; 8]); }\n+\n+#[cfg(all(target_arch = \"x86\", target_pointer_width = \"32\"))]\n+from_aligned! { unsafe usizex8 |bidirectional| core::arch::x86::__m256i }\n+\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"32\"))]\n+from_aligned! { unsafe usizex8 |bidirectional| core::arch::x86_64::__m256i }\n+\n+/*\n+#[cfg(all(target_arch = \"x86\", target_pointer_width = \"64\"))]\n+from_aligned! { unsafe usizex8 |bidirectional| core::arch::x86::__m512i }\n+\n+#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n+from_aligned! { unsafe usizex8 |bidirectional| core::arch::x86_64::__m512i }\n+*/"}]}