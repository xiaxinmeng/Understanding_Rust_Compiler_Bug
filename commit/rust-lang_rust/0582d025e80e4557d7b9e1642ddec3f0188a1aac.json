{"sha": "0582d025e80e4557d7b9e1642ddec3f0188a1aac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1ODJkMDI1ZTgwZTQ1NTdkN2I5ZTE2NDJkZGVjM2YwMTg4YTFhYWM=", "commit": {"author": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2018-05-15T18:42:41Z"}, "committer": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2018-05-15T18:42:41Z"}, "message": "Rename ret_ty to declared_ret_ty", "tree": {"sha": "83f59137d3b4f2f52f646fc4f05ecf3a11597a8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83f59137d3b4f2f52f646fc4f05ecf3a11597a8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0582d025e80e4557d7b9e1642ddec3f0188a1aac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0582d025e80e4557d7b9e1642ddec3f0188a1aac", "html_url": "https://github.com/rust-lang/rust/commit/0582d025e80e4557d7b9e1642ddec3f0188a1aac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0582d025e80e4557d7b9e1642ddec3f0188a1aac/comments", "author": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "committer": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "587566eda71847b5cd57bfb91b677f7dac653528", "url": "https://api.github.com/repos/rust-lang/rust/commits/587566eda71847b5cd57bfb91b677f7dac653528", "html_url": "https://github.com/rust-lang/rust/commit/587566eda71847b5cd57bfb91b677f7dac653528"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "67ee79bc001183d36ddd73ba6deda41b3ad24d36", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0582d025e80e4557d7b9e1642ddec3f0188a1aac/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0582d025e80e4557d7b9e1642ddec3f0188a1aac/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=0582d025e80e4557d7b9e1642ddec3f0188a1aac", "patch": "@@ -1036,9 +1036,9 @@ fn check_fn<'a, 'gcx, 'tcx>(inherited: &'a Inherited<'a, 'gcx, 'tcx>,\n     let mut fcx = FnCtxt::new(inherited, param_env, body.value.id);\n     *fcx.ps.borrow_mut() = UnsafetyState::function(fn_sig.unsafety, fn_id);\n \n-    let ret_ty = fn_sig.output();\n-    fcx.require_type_is_sized(ret_ty, decl.output.span(), traits::SizedReturnType);\n-    let revealed_ret_ty = fcx.instantiate_anon_types_from_return_value(fn_id, &ret_ty);\n+    let declared_ret_ty = fn_sig.output();\n+    fcx.require_type_is_sized(declared_ret_ty, decl.output.span(), traits::SizedReturnType);\n+    let revealed_ret_ty = fcx.instantiate_anon_types_from_return_value(fn_id, &declared_ret_ty);\n     fcx.ret_coercion = Some(RefCell::new(CoerceMany::new(revealed_ret_ty)));\n     fn_sig = fcx.tcx.mk_fn_sig(\n         fn_sig.inputs().iter().cloned(),\n@@ -1132,7 +1132,7 @@ fn check_fn<'a, 'gcx, 'tcx>(inherited: &'a Inherited<'a, 'gcx, 'tcx>,\n             if id == fn_id {\n                 match entry_type {\n                     config::EntryMain => {\n-                        let substs = fcx.tcx.mk_substs(iter::once(Kind::from(ret_ty)));\n+                        let substs = fcx.tcx.mk_substs(iter::once(Kind::from(declared_ret_ty)));\n                         let trait_ref = ty::TraitRef::new(term_id, substs);\n                         let return_ty_span = decl.output.span();\n                         let cause = traits::ObligationCause::new("}]}