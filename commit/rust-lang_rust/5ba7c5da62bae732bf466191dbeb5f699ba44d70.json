{"sha": "5ba7c5da62bae732bf466191dbeb5f699ba44d70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViYTdjNWRhNjJiYWU3MzJiZjQ2NjE5MWRiZWI1ZjY5OWJhNDRkNzA=", "commit": {"author": {"name": "bluss", "email": "bluss", "date": "2014-12-07T20:32:00Z"}, "committer": {"name": "bluss", "email": "bluss", "date": "2014-12-07T21:45:27Z"}, "message": "string: Implement FromIterator<&str> and Extend<&str> for String\n\n&str is a \"particle\" of a string already, see the graphemes iterator,\nso it seems natural that we should be able to use it with Extend.", "tree": {"sha": "4a9761541e8970c309b4ed4865827da525b40122", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a9761541e8970c309b4ed4865827da525b40122"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ba7c5da62bae732bf466191dbeb5f699ba44d70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ba7c5da62bae732bf466191dbeb5f699ba44d70", "html_url": "https://github.com/rust-lang/rust/commit/5ba7c5da62bae732bf466191dbeb5f699ba44d70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ba7c5da62bae732bf466191dbeb5f699ba44d70/comments", "author": null, "committer": null, "parents": [{"sha": "d7d5ccf9bb3bc63f347d8d5441092f20a3fe7088", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7d5ccf9bb3bc63f347d8d5441092f20a3fe7088", "html_url": "https://github.com/rust-lang/rust/commit/d7d5ccf9bb3bc63f347d8d5441092f20a3fe7088"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "ed578f3f515b65603c1e46f2b0832ad159fbfb19", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5ba7c5da62bae732bf466191dbeb5f699ba44d70/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ba7c5da62bae732bf466191dbeb5f699ba44d70/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=5ba7c5da62bae732bf466191dbeb5f699ba44d70", "patch": "@@ -729,6 +729,15 @@ impl FromIterator<char> for String {\n     }\n }\n \n+#[experimental = \"waiting on FromIterator stabilization\"]\n+impl<'a> FromIterator<&'a str> for String {\n+    fn from_iter<I:Iterator<&'a str>>(iterator: I) -> String {\n+        let mut buf = String::new();\n+        buf.extend(iterator);\n+        buf\n+    }\n+}\n+\n #[experimental = \"waiting on Extend stabilization\"]\n impl Extend<char> for String {\n     fn extend<I:Iterator<char>>(&mut self, mut iterator: I) {\n@@ -740,6 +749,18 @@ impl Extend<char> for String {\n     }\n }\n \n+#[experimental = \"waiting on Extend stabilization\"]\n+impl<'a> Extend<&'a str> for String {\n+    fn extend<I: Iterator<&'a str>>(&mut self, mut iterator: I) {\n+        // A guess that at least one byte per iterator element will be needed.\n+        let (lower_bound, _) = iterator.size_hint();\n+        self.reserve(lower_bound);\n+        for s in iterator {\n+            self.push_str(s)\n+        }\n+    }\n+}\n+\n impl PartialEq for String {\n     #[inline]\n     fn eq(&self, other: &String) -> bool { PartialEq::eq(&**self, &**other) }"}]}