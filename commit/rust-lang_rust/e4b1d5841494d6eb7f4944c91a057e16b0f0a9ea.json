{"sha": "e4b1d5841494d6eb7f4944c91a057e16b0f0a9ea", "node_id": "C_kwDOAAsO6NoAKGU0YjFkNTg0MTQ5NGQ2ZWI3ZjQ5NDRjOTFhMDU3ZTE2YjBmMGE5ZWE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-11T08:09:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-11T08:09:00Z"}, "message": "Auto merge of #92012 - llogiq:repr-c-def-id, r=michaelwoerister\n\nMake `DefId` `repr(C)`, optimize big-endian field order\n\nr? `@michaelwoerister`", "tree": {"sha": "aa63bc52d66a7d20dda32903704d328bd96fbd63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa63bc52d66a7d20dda32903704d328bd96fbd63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4b1d5841494d6eb7f4944c91a057e16b0f0a9ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4b1d5841494d6eb7f4944c91a057e16b0f0a9ea", "html_url": "https://github.com/rust-lang/rust/commit/e4b1d5841494d6eb7f4944c91a057e16b0f0a9ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4b1d5841494d6eb7f4944c91a057e16b0f0a9ea/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f213d983ddf44df10eb52627d3c24213d102e39", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f213d983ddf44df10eb52627d3c24213d102e39", "html_url": "https://github.com/rust-lang/rust/commit/1f213d983ddf44df10eb52627d3c24213d102e39"}, {"sha": "7f7b5514a424a49c16a2c2b2833f3f959c2b077c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f7b5514a424a49c16a2c2b2833f3f959c2b077c", "html_url": "https://github.com/rust-lang/rust/commit/7f7b5514a424a49c16a2c2b2833f3f959c2b077c"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "0bba918994c51d46f605e130aaa523d7434e74e7", "filename": "compiler/rustc_span/src/def_id.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e4b1d5841494d6eb7f4944c91a057e16b0f0a9ea/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4b1d5841494d6eb7f4944c91a057e16b0f0a9ea/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs?ref=e4b1d5841494d6eb7f4944c91a057e16b0f0a9ea", "patch": "@@ -221,10 +221,17 @@ impl<D: Decoder> Decodable<D> for DefIndex {\n #[derive(Clone, PartialEq, Eq, PartialOrd, Ord, Copy)]\n // On below-64 bit systems we can simply use the derived `Hash` impl\n #[cfg_attr(not(target_pointer_width = \"64\"), derive(Hash))]\n-// Note that the order is essential here, see below why\n+#[repr(C)]\n+// We guarantee field order. Note that the order is essential here, see below why.\n pub struct DefId {\n+    // cfg-ing the order of fields so that the `DefIndex` which is high entropy always ends up in\n+    // the lower bits no matter the endianness. This allows the compiler to turn that `Hash` impl\n+    // into a direct call to 'u64::hash(_)`.\n+    #[cfg(not(all(target_pointer_width = \"64\", target_endian = \"big\")))]\n     pub index: DefIndex,\n     pub krate: CrateNum,\n+    #[cfg(all(target_pointer_width = \"64\", target_endian = \"big\"))]\n+    pub index: DefIndex,\n }\n \n // On 64-bit systems, we can hash the whole `DefId` as one `u64` instead of two `u32`s. This"}]}