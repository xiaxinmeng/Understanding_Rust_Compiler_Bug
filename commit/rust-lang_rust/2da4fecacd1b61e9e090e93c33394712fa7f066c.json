{"sha": "2da4fecacd1b61e9e090e93c33394712fa7f066c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkYTRmZWNhY2QxYjYxZTllMDkwZTkzYzMzMzk0NzEyZmE3ZjA2NmM=", "commit": {"author": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-08-20T19:57:38Z"}, "committer": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-08-20T19:57:38Z"}, "message": "Test the buffered reader and writer in _io.", "tree": {"sha": "a8cfa1e04cd0c39d91441a71d3a4bcba0ef8cba7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8cfa1e04cd0c39d91441a71d3a4bcba0ef8cba7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2da4fecacd1b61e9e090e93c33394712fa7f066c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2da4fecacd1b61e9e090e93c33394712fa7f066c", "html_url": "https://github.com/rust-lang/rust/commit/2da4fecacd1b61e9e090e93c33394712fa7f066c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2da4fecacd1b61e9e090e93c33394712fa7f066c/comments", "author": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af64e4f30536e55c6fc11a19eaad99cd06b0f4b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/af64e4f30536e55c6fc11a19eaad99cd06b0f4b6", "html_url": "https://github.com/rust-lang/rust/commit/af64e4f30536e55c6fc11a19eaad99cd06b0f4b6"}], "stats": {"total": 65, "additions": 61, "deletions": 4}, "files": [{"sha": "0d968c5c3587bea4d9bc56236c21f84a1de87e5e", "filename": "src/lib/_io.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2da4fecacd1b61e9e090e93c33394712fa7f066c/src%2Flib%2F_io.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2da4fecacd1b61e9e090e93c33394712fa7f066c/src%2Flib%2F_io.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_io.rs?ref=2da4fecacd1b61e9e090e93c33394712fa7f066c", "patch": "@@ -84,7 +84,18 @@ fn new_buf_reader(str path) -> buf_reader {\n     ret fd_buf_reader(fd, new_buf());\n }\n \n-type fileflag = tag(append(), create(), truncate());\n+/**\n+ * FIXME (issue #150):  This should be\n+ *\n+ *   type fileflag = tag(append(), create(), truncate());\n+ *\n+ * but then the tag value ctors are not found from crate-importers of std, so\n+ * we manually simulate the enum below.\n+ */\n+type fileflag = uint;\n+fn append() -> uint { ret 0u; }\n+fn create() -> uint { ret 1u; }\n+fn truncate() -> uint { ret 2u; }\n \n fn new_buf_writer(str path, vec[fileflag] flags) -> buf_writer {\n \n@@ -117,9 +128,13 @@ fn new_buf_writer(str path, vec[fileflag] flags) -> buf_writer {\n \n     for (fileflag f in flags) {\n         alt (f) {\n-            case (append())   { fflags |= os.libc_constants.O_APPEND(); }\n-            case (create())   { fflags |= os.libc_constants.O_CREAT(); }\n-            case (truncate()) { fflags |= os.libc_constants.O_TRUNC(); }\n+            // FIXME (issue #150): cf comment above defn of fileflag type\n+            //case (append())   { fflags |= os.libc_constants.O_APPEND(); }\n+            //case (create())   { fflags |= os.libc_constants.O_CREAT(); }\n+            //case (truncate()) { fflags |= os.libc_constants.O_TRUNC(); }\n+            case (0u)   { fflags |= os.libc_constants.O_APPEND(); }\n+            case (1u)   { fflags |= os.libc_constants.O_CREAT(); }\n+            case (2u) { fflags |= os.libc_constants.O_TRUNC(); }\n         }\n     }\n "}, {"sha": "a29e1daac6bc83b4fbf8533d1a2da857e4567331", "filename": "src/lib/_str.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2da4fecacd1b61e9e090e93c33394712fa7f066c/src%2Flib%2F_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2da4fecacd1b61e9e090e93c33394712fa7f066c/src%2Flib%2F_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_str.rs?ref=2da4fecacd1b61e9e090e93c33394712fa7f066c", "patch": "@@ -11,6 +11,22 @@ native \"rust\" mod rustrt {\n   fn refcount[T](str s) -> uint;\n }\n \n+fn eq(str a, str b) -> bool {\n+  let uint i = byte_len(a);\n+  if (byte_len(b) != i) {\n+    ret false;\n+  }\n+  while (i > 0u) {\n+    i -= 1u;\n+    auto cha = a.(i);\n+    auto chb = b.(i);\n+    if (cha != chb) {\n+      ret false;\n+    }\n+  }\n+  ret true;\n+}\n+\n fn is_utf8(vec[u8] v) -> bool {\n   fail; // FIXME\n }"}, {"sha": "663944356c5320f90d0e666ff814303343b6a037", "filename": "src/test/run-pass/lib-io.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2da4fecacd1b61e9e090e93c33394712fa7f066c/src%2Ftest%2Frun-pass%2Flib-io.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2da4fecacd1b61e9e090e93c33394712fa7f066c/src%2Ftest%2Frun-pass%2Flib-io.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-io.rs?ref=2da4fecacd1b61e9e090e93c33394712fa7f066c", "patch": "@@ -0,0 +1,26 @@\n+// -*- rust -*-\n+\n+use std;\n+import std._io;\n+import std._str;\n+\n+fn test_simple(str tmpfilebase) {\n+  let str tmpfile = tmpfilebase + \".tmp\";\n+  log tmpfile;\n+  let str frood = \"A hoopy frood who really knows where his towel is.\";\n+  log frood;\n+\n+  {\n+    let _io.buf_writer out = _io.new_buf_writer(tmpfile, vec(_io.create()));\n+    out.write(_str.bytes(frood));\n+  }\n+\n+  let _io.buf_reader inp = _io.new_buf_reader(tmpfile);\n+  let str frood2 = _str.from_bytes(inp.read());\n+  log frood2;\n+  check (_str.eq(frood, frood2));\n+}\n+\n+fn main(vec[str] argv) {\n+  test_simple(argv.(0));\n+}"}]}