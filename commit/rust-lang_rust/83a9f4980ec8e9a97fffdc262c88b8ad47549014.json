{"sha": "83a9f4980ec8e9a97fffdc262c88b8ad47549014", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzYTlmNDk4MGVjOGU5YTk3ZmZmZGMyNjJjODhiOGFkNDc1NDkwMTQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-02-04T20:30:37Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-02-06T19:46:42Z"}, "message": "Fill in long diagnostic", "tree": {"sha": "09b3806ba463a4552b01a8729ff9598d0faf844e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09b3806ba463a4552b01a8729ff9598d0faf844e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83a9f4980ec8e9a97fffdc262c88b8ad47549014", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83a9f4980ec8e9a97fffdc262c88b8ad47549014", "html_url": "https://github.com/rust-lang/rust/commit/83a9f4980ec8e9a97fffdc262c88b8ad47549014", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83a9f4980ec8e9a97fffdc262c88b8ad47549014/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0ab8f03bbc0e0694b6b8c411c5b39b89c2fe821", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0ab8f03bbc0e0694b6b8c411c5b39b89c2fe821", "html_url": "https://github.com/rust-lang/rust/commit/d0ab8f03bbc0e0694b6b8c411c5b39b89c2fe821"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "f59948e9fc42f5a7fd69a0852a102acc09c516bf", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 49, "deletions": 1, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/83a9f4980ec8e9a97fffdc262c88b8ad47549014/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83a9f4980ec8e9a97fffdc262c88b8ad47549014/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=83a9f4980ec8e9a97fffdc262c88b8ad47549014", "patch": "@@ -4698,6 +4698,55 @@ element type `T`. Also note that the error is conservatively reported even when\n the alignment of the zero-sized type is less than or equal to the data field's\n alignment.\n \"##,\n+\n+\n+E0908: r##\"\n+A method was called on a raw pointer whose inner type wasn't completely known.\n+\n+For example, you may have done something like:\n+\n+```compile_fail\n+# #![deny(warnings)]\n+let foo = &1;\n+let bar = foo as *const _;\n+if bar.is_null() {\n+    // ...\n+}\n+```\n+\n+Here, the type of `bar` isn't known; it could be a pointer to anything. Instead,\n+specify a type for the pointer (preferably something that makes sense for the\n+thing you're pointing to):\n+\n+```\n+let foo = &1;\n+let bar = foo as *const i32;\n+if bar.is_null() {\n+    // ...\n+}\n+```\n+\n+Even though `is_null()` exists as a method on any raw pointer, Rust shows this\n+error because  Rust allows for `self` to have arbitrary types (behind the\n+arbitrary_self_types feature flag).\n+\n+This means that someone can specify such a function:\n+\n+```ignore (cannot-doctest-feature-doesnt-exist-yet)\n+impl Foo {\n+    fn is_null(self: *const Self) -> bool {\n+        // do something else\n+    }\n+}\n+```\n+\n+and now when you call `.is_null()` on a raw pointer to `Foo`, there's ambiguity.\n+\n+Given that we don't know what type the pointer is, and there's potential\n+ambiguity for some types, we disallow calling methods on raw pointers when\n+the type is unknown.\n+\"##,\n+\n }\n \n register_diagnostics! {\n@@ -4777,5 +4826,4 @@ register_diagnostics! {\n     E0641, // cannot cast to/from a pointer with an unknown kind\n     E0645, // trait aliases not finished\n     E0907, // type inside generator must be known in this context\n-    E0908, // methods on raw pointers can only be called if the pointer type is fully known\n }"}]}