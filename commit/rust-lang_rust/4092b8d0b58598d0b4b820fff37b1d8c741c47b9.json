{"sha": "4092b8d0b58598d0b4b820fff37b1d8c741c47b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwOTJiOGQwYjU4NTk4ZDBiNGI4MjBmZmYzN2IxZDhjNzQxYzQ3Yjk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T12:19:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T12:19:46Z"}, "message": "make compleion item details private", "tree": {"sha": "44312d5b3dfb66706aeaab8703e3ceaabb4ecf5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44312d5b3dfb66706aeaab8703e3ceaabb4ecf5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4092b8d0b58598d0b4b820fff37b1d8c741c47b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4092b8d0b58598d0b4b820fff37b1d8c741c47b9", "html_url": "https://github.com/rust-lang/rust/commit/4092b8d0b58598d0b4b820fff37b1d8c741c47b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4092b8d0b58598d0b4b820fff37b1d8c741c47b9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5c5995bf13da31bb97113a7eea5c138555c2b1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5c5995bf13da31bb97113a7eea5c138555c2b1b", "html_url": "https://github.com/rust-lang/rust/commit/b5c5995bf13da31bb97113a7eea5c138555c2b1b"}], "stats": {"total": 101, "additions": 65, "deletions": 36}, "files": [{"sha": "222b6854c863e4038d8784027d9eddad8565aabd", "filename": "crates/ra_analysis/src/completion.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4092b8d0b58598d0b4b820fff37b1d8c741c47b9/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4092b8d0b58598d0b4b820fff37b1d8c741c47b9/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs?ref=4092b8d0b58598d0b4b820fff37b1d8c741c47b9", "patch": "@@ -18,7 +18,7 @@ use crate::{\n     Cancelable, FilePosition\n };\n \n-pub use crate::completion::completion_item::CompletionItem;\n+pub use crate::completion::completion_item::{CompletionItem, InsertText};\n \n pub(crate) fn completions(\n     db: &db::RootDatabase,\n@@ -109,13 +109,20 @@ mod tests {\n \n     use super::*;\n \n+    fn is_snippet(completion_item: &CompletionItem) -> bool {\n+        match completion_item.insert_text() {\n+            InsertText::Snippet { .. } => true,\n+            _ => false,\n+        }\n+    }\n+\n     fn check_scope_completion(code: &str, expected_completions: &str) {\n         let (analysis, position) = single_file_with_position(code);\n         let completions = completions(&analysis.imp.db, position)\n             .unwrap()\n             .unwrap()\n             .into_iter()\n-            .filter(|c| c.snippet.is_none())\n+            .filter(|c| !is_snippet(c))\n             .collect::<Vec<_>>();\n         assert_eq_dbg(expected_completions, &completions);\n     }\n@@ -126,7 +133,7 @@ mod tests {\n             .unwrap()\n             .unwrap()\n             .into_iter()\n-            .filter(|c| c.snippet.is_some())\n+            .filter(is_snippet)\n             .collect::<Vec<_>>();\n         assert_eq_dbg(expected_completions, &completions);\n     }"}, {"sha": "4280976e7f86e37c5d21d92ea541761d2f1226af", "filename": "crates/ra_analysis/src/completion/completion_item.rs", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/4092b8d0b58598d0b4b820fff37b1d8c741c47b9/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4092b8d0b58598d0b4b820fff37b1d8c741c47b9/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=4092b8d0b58598d0b4b820fff37b1d8c741c47b9", "patch": "@@ -1,11 +1,13 @@\n #[derive(Debug)]\n pub struct CompletionItem {\n-    /// What user sees in pop-up in the UI.\n-    pub label: String,\n-    /// What string is used for filtering, defaults to label.\n-    pub lookup: Option<String>,\n-    /// What is inserted, defaults to label.\n-    pub snippet: Option<String>,\n+    label: String,\n+    lookup: Option<String>,\n+    snippet: Option<String>,\n+}\n+\n+pub enum InsertText {\n+    PlainText { text: String },\n+    Snippet { text: String },\n }\n \n impl CompletionItem {\n@@ -17,6 +19,26 @@ impl CompletionItem {\n             snippet: None,\n         }\n     }\n+    /// What user sees in pop-up in the UI.\n+    pub fn label(&self) -> &str {\n+        &self.label\n+    }\n+    /// What string is used for filtering.\n+    pub fn lookup(&self) -> &str {\n+        self.lookup\n+            .as_ref()\n+            .map(|it| it.as_str())\n+            .unwrap_or(self.label())\n+    }\n+    /// What is inserted.\n+    pub fn insert_text(&self) -> InsertText {\n+        match &self.snippet {\n+            None => InsertText::PlainText {\n+                text: self.label.clone(),\n+            },\n+            Some(it) => InsertText::Snippet { text: it.clone() },\n+        }\n+    }\n }\n \n #[must_use]"}, {"sha": "f9f01a6427cf5104d2597daaf498c5c57973d6c2", "filename": "crates/ra_analysis/src/completion/reference_completion.rs", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/4092b8d0b58598d0b4b820fff37b1d8c741c47b9/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Freference_completion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4092b8d0b58598d0b4b820fff37b1d8c741c47b9/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Freference_completion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Freference_completion.rs?ref=4092b8d0b58598d0b4b820fff37b1d8c741c47b9", "patch": "@@ -39,25 +39,19 @@ pub(super) fn completions(\n             }\n \n             let module_scope = module.scope(db)?;\n-            acc.extend(\n-                module_scope\n-                    .entries()\n-                    .filter(|(_name, res)| {\n-                        // Don't expose this item\n-                        match res.import {\n-                            None => true,\n-                            Some(import) => {\n-                                let range = import.range(db, module.source().file_id());\n-                                !range.is_subrange(&name_ref.syntax().range())\n-                            }\n+            module_scope\n+                .entries()\n+                .filter(|(_name, res)| {\n+                    // Don't expose this item\n+                    match res.import {\n+                        None => true,\n+                        Some(import) => {\n+                            let range = import.range(db, module.source().file_id());\n+                            !range.is_subrange(&name_ref.syntax().range())\n                         }\n-                    })\n-                    .map(|(name, _res)| CompletionItem {\n-                        label: name.to_string(),\n-                        lookup: None,\n-                        snippet: None,\n-                    }),\n-            );\n+                    }\n+                })\n+                .for_each(|(name, _res)| CompletionItem::new(name.to_string()).add_to(acc));\n         }\n         NameRefKind::Path(path) => complete_path(acc, db, module, path)?,\n         NameRefKind::BareIdentInMod => {"}, {"sha": "1c8aa308b6b6de76213e2a6248decb61830c9fe7", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4092b8d0b58598d0b4b820fff37b1d8c741c47b9/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4092b8d0b58598d0b4b820fff37b1d8c741c47b9/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=4092b8d0b58598d0b4b820fff37b1d8c741c47b9", "patch": "@@ -30,7 +30,7 @@ use crate::{\n };\n \n pub use crate::{\n-    completion::CompletionItem,\n+    completion::{CompletionItem, InsertText},\n };\n pub use ra_editor::{\n     FileSymbol, Fold, FoldKind, HighlightedRange, LineIndex, Runnable, RunnableKind, StructureNode,"}, {"sha": "2dfeb061a1486099cf7bb003d3d32a0436d7ef38", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/4092b8d0b58598d0b4b820fff37b1d8c741c47b9/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4092b8d0b58598d0b4b820fff37b1d8c741c47b9/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=4092b8d0b58598d0b4b820fff37b1d8c741c47b9", "patch": "@@ -8,7 +8,7 @@ use languageserver_types::{\n     PrepareRenameResponse, RenameParams, SymbolInformation, TextDocumentIdentifier, TextEdit,\n     WorkspaceEdit, ParameterInformation, ParameterLabel, SignatureInformation, Hover, HoverContents,\n };\n-use ra_analysis::{FileId, FoldKind, Query, RunnableKind, FilePosition};\n+use ra_analysis::{FileId, FoldKind, Query, RunnableKind, FilePosition, InsertText};\n use ra_syntax::{TextUnit, text_utils::intersect};\n use ra_text_edit::text_utils::contains_offset_nonstrict;\n use rustc_hash::FxHashMap;\n@@ -423,15 +423,21 @@ pub fn handle_completion(\n         .into_iter()\n         .map(|item| {\n             let mut res = CompletionItem {\n-                label: item.label,\n-                filter_text: item.lookup,\n+                label: item.label().to_string(),\n+                filter_text: Some(item.lookup().to_string()),\n                 ..Default::default()\n             };\n-            if let Some(snip) = item.snippet {\n-                res.insert_text = Some(snip);\n-                res.insert_text_format = Some(InsertTextFormat::Snippet);\n-                res.kind = Some(CompletionItemKind::Keyword);\n-            };\n+            match item.insert_text() {\n+                InsertText::PlainText { text } => {\n+                    res.insert_text = Some(text);\n+                    res.insert_text_format = Some(InsertTextFormat::PlainText);\n+                }\n+                InsertText::Snippet { text } => {\n+                    res.insert_text = Some(text);\n+                    res.insert_text_format = Some(InsertTextFormat::Snippet);\n+                    res.kind = Some(CompletionItemKind::Keyword);\n+                }\n+            }\n             res\n         })\n         .collect();"}]}