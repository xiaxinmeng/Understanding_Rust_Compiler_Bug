{"sha": "22097e6827b726f517e94c31df0728b481f57245", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMDk3ZTY4MjdiNzI2ZjUxN2U5NGMzMWRmMDcyOGI0ODFmNTcyNDU=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2017-02-05T01:10:29Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2017-02-08T23:51:43Z"}, "message": "use helper function in the rebuild logic of the rustc_*san crates", "tree": {"sha": "a4ba3c5776813f2e961a04cb2ea67858829624bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4ba3c5776813f2e961a04cb2ea67858829624bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22097e6827b726f517e94c31df0728b481f57245", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22097e6827b726f517e94c31df0728b481f57245", "html_url": "https://github.com/rust-lang/rust/commit/22097e6827b726f517e94c31df0728b481f57245", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22097e6827b726f517e94c31df0728b481f57245/comments", "author": null, "committer": null, "parents": [{"sha": "775a93646cb6db5affff24f2260fb60a7723deba", "url": "https://api.github.com/repos/rust-lang/rust/commits/775a93646cb6db5affff24f2260fb60a7723deba", "html_url": "https://github.com/rust-lang/rust/commit/775a93646cb6db5affff24f2260fb60a7723deba"}], "stats": {"total": 84, "additions": 24, "deletions": 60}, "files": [{"sha": "c1222dc444a22bfabe6a9fdfc146a33e73184743", "filename": "src/Cargo.lock", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22097e6827b726f517e94c31df0728b481f57245/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/22097e6827b726f517e94c31df0728b481f57245/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=22097e6827b726f517e94c31df0728b481f57245", "patch": "@@ -273,6 +273,7 @@ name = \"rustc_asan\"\n version = \"0.0.0\"\n dependencies = [\n  \"alloc_system 0.0.0\",\n+ \"build_helper 0.1.0\",\n  \"cmake 0.1.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n ]\n@@ -415,6 +416,7 @@ name = \"rustc_lsan\"\n version = \"0.0.0\"\n dependencies = [\n  \"alloc_system 0.0.0\",\n+ \"build_helper 0.1.0\",\n  \"cmake 0.1.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n ]\n@@ -458,6 +460,7 @@ name = \"rustc_msan\"\n version = \"0.0.0\"\n dependencies = [\n  \"alloc_system 0.0.0\",\n+ \"build_helper 0.1.0\",\n  \"cmake 0.1.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n ]\n@@ -548,6 +551,7 @@ name = \"rustc_tsan\"\n version = \"0.0.0\"\n dependencies = [\n  \"alloc_system 0.0.0\",\n+ \"build_helper 0.1.0\",\n  \"cmake 0.1.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"core 0.0.0\",\n ]"}, {"sha": "2d4872b1fc942513f03712b1b870a14ef80c1188", "filename": "src/librustc_asan/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22097e6827b726f517e94c31df0728b481f57245/src%2Flibrustc_asan%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/22097e6827b726f517e94c31df0728b481f57245/src%2Flibrustc_asan%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_asan%2FCargo.toml?ref=22097e6827b726f517e94c31df0728b481f57245", "patch": "@@ -9,6 +9,7 @@ name = \"rustc_asan\"\n path = \"lib.rs\"\n \n [build-dependencies]\n+build_helper = { path = \"../build_helper\" }\n cmake = \"0.1.18\"\n \n [dependencies]"}, {"sha": "015be14bd495a7213a62e3268b06e8bfca006156", "filename": "src/librustc_asan/build.rs", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/22097e6827b726f517e94c31df0728b481f57245/src%2Flibrustc_asan%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22097e6827b726f517e94c31df0728b481f57245/src%2Flibrustc_asan%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_asan%2Fbuild.rs?ref=22097e6827b726f517e94c31df0728b481f57245", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+extern crate build_helper;\n extern crate cmake;\n \n use std::path::PathBuf;\n@@ -29,21 +30,9 @@ fn main() {\n                  dst.join(\"build/lib/linux\").display());\n         println!(\"cargo:rustc-link-lib=static=clang_rt.asan-x86_64\");\n \n-        let src_dir = PathBuf::from(env::var_os(\"CARGO_MANIFEST_DIR\").unwrap());\n-        let mut stack = src_dir.join(\"../compiler-rt\")\n-            .read_dir()\n-            .unwrap()\n-            .map(|e| e.unwrap())\n-            .filter(|e| &*e.file_name() != \".git\")\n-            .collect::<Vec<_>>();\n-        while let Some(entry) = stack.pop() {\n-            let path = entry.path();\n-            if entry.file_type().unwrap().is_dir() {\n-                stack.extend(path.read_dir().unwrap().map(|e| e.unwrap()));\n-            } else {\n-                println!(\"cargo:rerun-if-changed={}\", path.display());\n-            }\n-        }\n+        build_helper::rerun_if_changed_anything_in_dir(&PathBuf::from(env::var(\"CARGO_MANIFEST_DIR\")\n+                .unwrap())\n+            .join(\"../compiler-rt\"));\n     }\n \n     println!(\"cargo:rerun-if-changed=build.rs\");"}, {"sha": "bc1f2ead76884927592a01b283303000bdebf4f2", "filename": "src/librustc_lsan/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22097e6827b726f517e94c31df0728b481f57245/src%2Flibrustc_lsan%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/22097e6827b726f517e94c31df0728b481f57245/src%2Flibrustc_lsan%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lsan%2FCargo.toml?ref=22097e6827b726f517e94c31df0728b481f57245", "patch": "@@ -9,6 +9,7 @@ name = \"rustc_lsan\"\n path = \"lib.rs\"\n \n [build-dependencies]\n+build_helper = { path = \"../build_helper\" }\n cmake = \"0.1.18\"\n \n [dependencies]"}, {"sha": "5773777d1f81b4bf600061dde806da2d0b85b869", "filename": "src/librustc_lsan/build.rs", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/22097e6827b726f517e94c31df0728b481f57245/src%2Flibrustc_lsan%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22097e6827b726f517e94c31df0728b481f57245/src%2Flibrustc_lsan%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lsan%2Fbuild.rs?ref=22097e6827b726f517e94c31df0728b481f57245", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+extern crate build_helper;\n extern crate cmake;\n \n use std::path::PathBuf;\n@@ -29,21 +30,9 @@ fn main() {\n                  dst.join(\"build/lib/linux\").display());\n         println!(\"cargo:rustc-link-lib=static=clang_rt.lsan-x86_64\");\n \n-        let src_dir = PathBuf::from(env::var_os(\"CARGO_MANIFEST_DIR\").unwrap());\n-        let mut stack = src_dir.join(\"../compiler-rt\")\n-            .read_dir()\n-            .unwrap()\n-            .map(|e| e.unwrap())\n-            .filter(|e| &*e.file_name() != \".git\")\n-            .collect::<Vec<_>>();\n-        while let Some(entry) = stack.pop() {\n-            let path = entry.path();\n-            if entry.file_type().unwrap().is_dir() {\n-                stack.extend(path.read_dir().unwrap().map(|e| e.unwrap()));\n-            } else {\n-                println!(\"cargo:rerun-if-changed={}\", path.display());\n-            }\n-        }\n+        build_helper::rerun_if_changed_anything_in_dir(&PathBuf::from(env::var(\"CARGO_MANIFEST_DIR\")\n+                .unwrap())\n+            .join(\"../compiler-rt\"));\n     }\n \n     println!(\"cargo:rerun-if-changed=build.rs\");"}, {"sha": "45cc6b9839fb81a321e876b2c834744755ac5c56", "filename": "src/librustc_msan/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22097e6827b726f517e94c31df0728b481f57245/src%2Flibrustc_msan%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/22097e6827b726f517e94c31df0728b481f57245/src%2Flibrustc_msan%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_msan%2FCargo.toml?ref=22097e6827b726f517e94c31df0728b481f57245", "patch": "@@ -9,6 +9,7 @@ name = \"rustc_msan\"\n path = \"lib.rs\"\n \n [build-dependencies]\n+build_helper = { path = \"../build_helper\" }\n cmake = \"0.1.18\"\n \n [dependencies]"}, {"sha": "7a4c8f7073933f7d597991cf776cfa8e7662461f", "filename": "src/librustc_msan/build.rs", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/22097e6827b726f517e94c31df0728b481f57245/src%2Flibrustc_msan%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22097e6827b726f517e94c31df0728b481f57245/src%2Flibrustc_msan%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_msan%2Fbuild.rs?ref=22097e6827b726f517e94c31df0728b481f57245", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+extern crate build_helper;\n extern crate cmake;\n \n use std::path::PathBuf;\n@@ -29,21 +30,9 @@ fn main() {\n                  dst.join(\"build/lib/linux\").display());\n         println!(\"cargo:rustc-link-lib=static=clang_rt.msan-x86_64\");\n \n-        let src_dir = PathBuf::from(env::var_os(\"CARGO_MANIFEST_DIR\").unwrap());\n-        let mut stack = src_dir.join(\"../compiler-rt\")\n-            .read_dir()\n-            .unwrap()\n-            .map(|e| e.unwrap())\n-            .filter(|e| &*e.file_name() != \".git\")\n-            .collect::<Vec<_>>();\n-        while let Some(entry) = stack.pop() {\n-            let path = entry.path();\n-            if entry.file_type().unwrap().is_dir() {\n-                stack.extend(path.read_dir().unwrap().map(|e| e.unwrap()));\n-            } else {\n-                println!(\"cargo:rerun-if-changed={}\", path.display());\n-            }\n-        }\n+        build_helper::rerun_if_changed_anything_in_dir(&PathBuf::from(env::var(\"CARGO_MANIFEST_DIR\")\n+                .unwrap())\n+            .join(\"../compiler-rt\"));\n     }\n \n     println!(\"cargo:rerun-if-changed=build.rs\");"}, {"sha": "66d6236361ea233e5f13380e106d6cf181a71912", "filename": "src/librustc_tsan/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22097e6827b726f517e94c31df0728b481f57245/src%2Flibrustc_tsan%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/22097e6827b726f517e94c31df0728b481f57245/src%2Flibrustc_tsan%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_tsan%2FCargo.toml?ref=22097e6827b726f517e94c31df0728b481f57245", "patch": "@@ -9,6 +9,7 @@ name = \"rustc_tsan\"\n path = \"lib.rs\"\n \n [build-dependencies]\n+build_helper = { path = \"../build_helper\" }\n cmake = \"0.1.18\"\n \n [dependencies]"}, {"sha": "84326ae8a71060440e436838afbf2080ca889e8e", "filename": "src/librustc_tsan/build.rs", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/22097e6827b726f517e94c31df0728b481f57245/src%2Flibrustc_tsan%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22097e6827b726f517e94c31df0728b481f57245/src%2Flibrustc_tsan%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_tsan%2Fbuild.rs?ref=22097e6827b726f517e94c31df0728b481f57245", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+extern crate build_helper;\n extern crate cmake;\n \n use std::path::PathBuf;\n@@ -29,21 +30,9 @@ fn main() {\n                  dst.join(\"build/lib/linux\").display());\n         println!(\"cargo:rustc-link-lib=static=clang_rt.tsan-x86_64\");\n \n-        let src_dir = PathBuf::from(env::var_os(\"CARGO_MANIFEST_DIR\").unwrap());\n-        let mut stack = src_dir.join(\"../compiler-rt\")\n-            .read_dir()\n-            .unwrap()\n-            .map(|e| e.unwrap())\n-            .filter(|e| &*e.file_name() != \".git\")\n-            .collect::<Vec<_>>();\n-        while let Some(entry) = stack.pop() {\n-            let path = entry.path();\n-            if entry.file_type().unwrap().is_dir() {\n-                stack.extend(path.read_dir().unwrap().map(|e| e.unwrap()));\n-            } else {\n-                println!(\"cargo:rerun-if-changed={}\", path.display());\n-            }\n-        }\n+        build_helper::rerun_if_changed_anything_in_dir(&PathBuf::from(env::var(\"CARGO_MANIFEST_DIR\")\n+                .unwrap())\n+            .join(\"../compiler-rt\"));\n     }\n \n     println!(\"cargo:rerun-if-changed=build.rs\");"}]}