{"sha": "191fac68266b73158ff048c83556ea91cbf977fd", "node_id": "C_kwDOAAsO6NoAKDE5MWZhYzY4MjY2YjczMTU4ZmYwNDhjODM1NTZlYTkxY2JmOTc3ZmQ", "commit": {"author": {"name": "Jhonny Bill Mena", "email": "jhonnybillm@gmail.com", "date": "2022-09-18T15:46:16Z"}, "committer": {"name": "Jhonny Bill Mena", "email": "jhonnybillm@gmail.com", "date": "2022-09-21T15:39:53Z"}, "message": "UPDATE - rename AddSubdiagnostic trait to AddToDiagnostic", "tree": {"sha": "5e744529ae1f878b19d5991e43e44a6bc6098ed9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e744529ae1f878b19d5991e43e44a6bc6098ed9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/191fac68266b73158ff048c83556ea91cbf977fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/191fac68266b73158ff048c83556ea91cbf977fd", "html_url": "https://github.com/rust-lang/rust/commit/191fac68266b73158ff048c83556ea91cbf977fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/191fac68266b73158ff048c83556ea91cbf977fd/comments", "author": {"login": "JhonnyBillM", "id": 18747072, "node_id": "MDQ6VXNlcjE4NzQ3MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/18747072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JhonnyBillM", "html_url": "https://github.com/JhonnyBillM", "followers_url": "https://api.github.com/users/JhonnyBillM/followers", "following_url": "https://api.github.com/users/JhonnyBillM/following{/other_user}", "gists_url": "https://api.github.com/users/JhonnyBillM/gists{/gist_id}", "starred_url": "https://api.github.com/users/JhonnyBillM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JhonnyBillM/subscriptions", "organizations_url": "https://api.github.com/users/JhonnyBillM/orgs", "repos_url": "https://api.github.com/users/JhonnyBillM/repos", "events_url": "https://api.github.com/users/JhonnyBillM/events{/privacy}", "received_events_url": "https://api.github.com/users/JhonnyBillM/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JhonnyBillM", "id": 18747072, "node_id": "MDQ6VXNlcjE4NzQ3MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/18747072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JhonnyBillM", "html_url": "https://github.com/JhonnyBillM", "followers_url": "https://api.github.com/users/JhonnyBillM/followers", "following_url": "https://api.github.com/users/JhonnyBillM/following{/other_user}", "gists_url": "https://api.github.com/users/JhonnyBillM/gists{/gist_id}", "starred_url": "https://api.github.com/users/JhonnyBillM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JhonnyBillM/subscriptions", "organizations_url": "https://api.github.com/users/JhonnyBillM/orgs", "repos_url": "https://api.github.com/users/JhonnyBillM/repos", "events_url": "https://api.github.com/users/JhonnyBillM/events{/privacy}", "received_events_url": "https://api.github.com/users/JhonnyBillM/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19b348fed44342d8addbbb5e8f67cda5dc8d9b95", "url": "https://api.github.com/repos/rust-lang/rust/commits/19b348fed44342d8addbbb5e8f67cda5dc8d9b95", "html_url": "https://github.com/rust-lang/rust/commit/19b348fed44342d8addbbb5e8f67cda5dc8d9b95"}], "stats": {"total": 46, "additions": 23, "deletions": 23}, "files": [{"sha": "75f20b0727781e31b916c1c617301ed81e064e7b", "filename": "compiler/rustc_ast_lowering/src/errors.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_ast_lowering%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_ast_lowering%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Ferrors.rs?ref=191fac68266b73158ff048c83556ea91cbf977fd", "patch": "@@ -1,4 +1,4 @@\n-use rustc_errors::{fluent, AddSubdiagnostic, Applicability, Diagnostic, DiagnosticArgFromDisplay};\n+use rustc_errors::{fluent, AddToDiagnostic, Applicability, Diagnostic, DiagnosticArgFromDisplay};\n use rustc_macros::{DiagnosticHandler, SessionSubdiagnostic};\n use rustc_span::{symbol::Ident, Span, Symbol};\n \n@@ -18,7 +18,7 @@ pub struct UseAngleBrackets {\n     pub close_param: Span,\n }\n \n-impl AddSubdiagnostic for UseAngleBrackets {\n+impl AddToDiagnostic for UseAngleBrackets {\n     fn add_to_diagnostic(self, diag: &mut Diagnostic) {\n         diag.multipart_suggestion(\n             fluent::ast_lowering::use_angle_brackets,\n@@ -54,7 +54,7 @@ pub enum AssocTyParenthesesSub {\n     NotEmpty { open_param: Span, close_param: Span },\n }\n \n-impl AddSubdiagnostic for AssocTyParenthesesSub {\n+impl AddToDiagnostic for AssocTyParenthesesSub {\n     fn add_to_diagnostic(self, diag: &mut Diagnostic) {\n         match self {\n             Self::Empty { parentheses_span } => diag.multipart_suggestion("}, {"sha": "80b0b1a8904a1d003ab04315ee305f36358ff543", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=191fac68266b73158ff048c83556ea91cbf977fd", "patch": "@@ -51,7 +51,7 @@ lint_non_existant_doc_keyword = found non-existing keyword `{$keyword}` used in\n     .help = only existing keywords are allowed in core/std\n \n lint_diag_out_of_impl =\n-    diagnostics should only be created in `IntoDiagnostic`/`AddSubdiagnostic` impls\n+    diagnostics should only be created in `IntoDiagnostic`/`AddToDiagnostic` impls\n \n lint_untranslatable_diag = diagnostics should be created using translatable messages\n "}, {"sha": "d3a263ac56d3217e33b3477247e27ca29053afb9", "filename": "compiler/rustc_errors/src/diagnostic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs?ref=191fac68266b73158ff048c83556ea91cbf977fd", "patch": "@@ -178,7 +178,7 @@ impl IntoDiagnosticArg for hir::ConstContext {\n /// Trait implemented by error types. This should not be implemented manually. Instead, use\n /// `#[derive(SessionSubdiagnostic)]` -- see [rustc_macros::SessionSubdiagnostic].\n #[rustc_diagnostic_item = \"AddSubdiagnostic\"]\n-pub trait AddSubdiagnostic {\n+pub trait AddToDiagnostic {\n     /// Add a subdiagnostic to an existing diagnostic.\n     fn add_to_diagnostic(self, diag: &mut Diagnostic);\n }\n@@ -893,7 +893,7 @@ impl Diagnostic {\n \n     /// Add a subdiagnostic from a type that implements `SessionSubdiagnostic` - see\n     /// [rustc_macros::SessionSubdiagnostic].\n-    pub fn subdiagnostic(&mut self, subdiagnostic: impl AddSubdiagnostic) -> &mut Self {\n+    pub fn subdiagnostic(&mut self, subdiagnostic: impl AddToDiagnostic) -> &mut Self {\n         subdiagnostic.add_to_diagnostic(self);\n         self\n     }"}, {"sha": "209a50fd3061aa96ec81ffef133470de1335b6de", "filename": "compiler/rustc_errors/src/diagnostic_builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs?ref=191fac68266b73158ff048c83556ea91cbf977fd", "patch": "@@ -580,7 +580,7 @@ impl<'a, G: EmissionGuarantee> DiagnosticBuilder<'a, G> {\n \n     forward!(pub fn subdiagnostic(\n         &mut self,\n-        subdiagnostic: impl crate::AddSubdiagnostic\n+        subdiagnostic: impl crate::AddToDiagnostic\n     ) -> &mut Self);\n }\n "}, {"sha": "19cae2c9077552d02224fa433636d4e8d8b74151", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=191fac68266b73158ff048c83556ea91cbf977fd", "patch": "@@ -371,7 +371,7 @@ impl fmt::Display for ExplicitBug {\n impl error::Error for ExplicitBug {}\n \n pub use diagnostic::{\n-    AddSubdiagnostic, DecorateLint, Diagnostic, DiagnosticArg, DiagnosticArgFromDisplay,\n+    AddToDiagnostic, DecorateLint, Diagnostic, DiagnosticArg, DiagnosticArgFromDisplay,\n     DiagnosticArgValue, DiagnosticId, DiagnosticStyledString, IntoDiagnosticArg, SubDiagnostic,\n };\n pub use diagnostic_builder::{DiagnosticBuilder, EmissionGuarantee, LintDiagnosticBuilder};"}, {"sha": "286cfb64a1ecd2d781e06954324e640f31ffda44", "filename": "compiler/rustc_infer/src/infer/error_reporting/note.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnote.rs?ref=191fac68266b73158ff048c83556ea91cbf977fd", "patch": "@@ -2,7 +2,7 @@ use crate::errors::RegionOriginNote;\n use crate::infer::error_reporting::note_and_explain_region;\n use crate::infer::{self, InferCtxt, SubregionOrigin};\n use rustc_errors::{\n-    fluent, struct_span_err, AddSubdiagnostic, Diagnostic, DiagnosticBuilder, ErrorGuaranteed,\n+    fluent, struct_span_err, AddToDiagnostic, Diagnostic, DiagnosticBuilder, ErrorGuaranteed,\n };\n use rustc_middle::traits::ObligationCauseCode;\n use rustc_middle::ty::error::TypeError;"}, {"sha": "e56708338983b12c98a805ab31f20086a66d9e22", "filename": "compiler/rustc_lint/src/errors.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs?ref=191fac68266b73158ff048c83556ea91cbf977fd", "patch": "@@ -1,4 +1,4 @@\n-use rustc_errors::{fluent, AddSubdiagnostic, IntoDiagnostic, ErrorGuaranteed, Handler};\n+use rustc_errors::{fluent, AddToDiagnostic, IntoDiagnostic, ErrorGuaranteed, Handler};\n use rustc_macros::{DiagnosticHandler, SessionSubdiagnostic};\n use rustc_session::lint::Level;\n use rustc_span::{Span, Symbol};\n@@ -22,7 +22,7 @@ pub enum OverruledAttributeSub {\n     CommandLineSource,\n }\n \n-impl AddSubdiagnostic for OverruledAttributeSub {\n+impl AddToDiagnostic for OverruledAttributeSub {\n     fn add_to_diagnostic(self, diag: &mut rustc_errors::Diagnostic) {\n         match self {\n             OverruledAttributeSub::DefaultSource { id } => {\n@@ -87,7 +87,7 @@ pub struct RequestedLevel {\n     pub lint_name: String,\n }\n \n-impl AddSubdiagnostic for RequestedLevel {\n+impl AddToDiagnostic for RequestedLevel {\n     fn add_to_diagnostic(self, diag: &mut rustc_errors::Diagnostic) {\n         diag.note(fluent::lint::requested_level);\n         diag.set_arg("}, {"sha": "47da8ec5da11e140088fe39f520cab799477c87d", "filename": "compiler/rustc_lint/src/internal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_lint%2Fsrc%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_lint%2Fsrc%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Finternal.rs?ref=191fac68266b73158ff048c83556ea91cbf977fd", "patch": "@@ -372,7 +372,7 @@ declare_tool_lint! {\n declare_tool_lint! {\n     pub rustc::DIAGNOSTIC_OUTSIDE_OF_IMPL,\n     Allow,\n-    \"prevent creation of diagnostics outside of `DiagnosticHandler`/`AddSubdiagnostic` impls\",\n+    \"prevent creation of diagnostics outside of `DiagnosticHandler`/`AddToDiagnostic` impls\",\n     report_in_external_macro: true\n }\n "}, {"sha": "f1bb7feb062c90b2c9661eda0c290ed8a94cbea2", "filename": "compiler/rustc_macros/src/diagnostics/subdiagnostic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fsubdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/191fac68266b73158ff048c83556ea91cbf977fd/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fsubdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fsubdiagnostic.rs?ref=191fac68266b73158ff048c83556ea91cbf977fd", "patch": "@@ -166,7 +166,7 @@ impl<'a> SessionSubdiagnosticDerive<'a> {\n         };\n \n         let ret = structure.gen_impl(quote! {\n-            gen impl rustc_errors::AddSubdiagnostic for @Self {\n+            gen impl rustc_errors::AddToDiagnostic for @Self {\n                 fn add_to_diagnostic(self, #diag: &mut rustc_errors::Diagnostic) {\n                     use rustc_errors::{Applicability, IntoDiagnosticArg};\n                     #implementation"}, {"sha": "e95ab048db366feb3befb3a9c0dfc906a0a308b9", "filename": "src/test/ui-fulldeps/internal-lints/diagnostics.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/191fac68266b73158ff048c83556ea91cbf977fd/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/191fac68266b73158ff048c83556ea91cbf977fd/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.rs?ref=191fac68266b73158ff048c83556ea91cbf977fd", "patch": "@@ -12,7 +12,7 @@ extern crate rustc_session;\n extern crate rustc_span;\n \n use rustc_errors::{\n-    AddSubdiagnostic, IntoDiagnostic, Diagnostic, DiagnosticBuilder,\n+    AddToDiagnostic, IntoDiagnostic, Diagnostic, DiagnosticBuilder,\n     ErrorGuaranteed, Handler, fluent\n };\n use rustc_macros::{DiagnosticHandler, SessionSubdiagnostic};\n@@ -49,29 +49,29 @@ impl<'a> IntoDiagnostic<'a, ErrorGuaranteed> for TranslatableInSessionDiagnostic\n     }\n }\n \n-pub struct UntranslatableInAddSubdiagnostic;\n+pub struct UntranslatableInAddToDiagnostic;\n \n-impl AddSubdiagnostic for UntranslatableInAddSubdiagnostic {\n+impl AddToDiagnostic for UntranslatableInAddToDiagnostic {\n     fn add_to_diagnostic(self, diag: &mut Diagnostic) {\n         diag.note(\"untranslatable diagnostic\");\n         //~^ ERROR diagnostics should be created using translatable messages\n     }\n }\n \n-pub struct TranslatableInAddSubdiagnostic;\n+pub struct TranslatableInAddToDiagnostic;\n \n-impl AddSubdiagnostic for TranslatableInAddSubdiagnostic {\n+impl AddToDiagnostic for TranslatableInAddToDiagnostic {\n     fn add_to_diagnostic(self, diag: &mut Diagnostic) {\n         diag.note(fluent::typeck::note);\n     }\n }\n \n pub fn make_diagnostics<'a>(handler: &'a Handler) {\n     let _diag = handler.struct_err(fluent::parser::expect_path);\n-    //~^ ERROR diagnostics should only be created in `IntoDiagnostic`/`AddSubdiagnostic` impls\n+    //~^ ERROR diagnostics should only be created in `IntoDiagnostic`/`AddToDiagnostic` impls\n \n     let _diag = handler.struct_err(\"untranslatable diagnostic\");\n-    //~^ ERROR diagnostics should only be created in `IntoDiagnostic`/`AddSubdiagnostic` impls\n+    //~^ ERROR diagnostics should only be created in `IntoDiagnostic`/`AddToDiagnostic` impls\n     //~^^ ERROR diagnostics should be created using translatable messages\n }\n "}, {"sha": "9219d09e9b401b2e7340ba79c1f08b5c5e52a5d0", "filename": "src/test/ui-fulldeps/internal-lints/diagnostics.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/191fac68266b73158ff048c83556ea91cbf977fd/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/191fac68266b73158ff048c83556ea91cbf977fd/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.stderr?ref=191fac68266b73158ff048c83556ea91cbf977fd", "patch": "@@ -16,7 +16,7 @@ error: diagnostics should be created using translatable messages\n LL |         diag.note(\"untranslatable diagnostic\");\n    |              ^^^^\n \n-error: diagnostics should only be created in `IntoDiagnostic`/`AddSubdiagnostic` impls\n+error: diagnostics should only be created in `IntoDiagnostic`/`AddToDiagnostic` impls\n   --> $DIR/diagnostics.rs:70:25\n    |\n LL |     let _diag = handler.struct_err(fluent::parser::expect_path);\n@@ -28,7 +28,7 @@ note: the lint level is defined here\n LL | #![deny(rustc::diagnostic_outside_of_impl)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: diagnostics should only be created in `IntoDiagnostic`/`AddSubdiagnostic` impls\n+error: diagnostics should only be created in `IntoDiagnostic`/`AddToDiagnostic` impls\n   --> $DIR/diagnostics.rs:73:25\n    |\n LL |     let _diag = handler.struct_err(\"untranslatable diagnostic\");"}]}