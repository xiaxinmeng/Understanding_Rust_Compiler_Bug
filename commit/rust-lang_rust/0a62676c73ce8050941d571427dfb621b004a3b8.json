{"sha": "0a62676c73ce8050941d571427dfb621b004a3b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNjI2NzZjNzNjZTgwNTA5NDFkNTcxNDI3ZGZiNjIxYjAwNGEzYjg=", "commit": {"author": {"name": "Alex Burka", "email": "durka42+github@gmail.com", "date": "2016-09-12T21:47:59Z"}, "committer": {"name": "Alex Burka", "email": "durka42@gmail.com", "date": "2016-09-13T03:13:13Z"}, "message": "fix \"X is not a member of trait Y\" span labels\n\nThe span labels for associated types and consts were hardcoded to `Foo`\nrather than substituting the name of the trait.\n\nThis also normalizes the wording for associated methods', traits', and\nconsts' span labels.\n\nFixes #36428.", "tree": {"sha": "b8c4ed20f0283bc0fed6840cbd661f24ee2e74b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8c4ed20f0283bc0fed6840cbd661f24ee2e74b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a62676c73ce8050941d571427dfb621b004a3b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a62676c73ce8050941d571427dfb621b004a3b8", "html_url": "https://github.com/rust-lang/rust/commit/0a62676c73ce8050941d571427dfb621b004a3b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a62676c73ce8050941d571427dfb621b004a3b8/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5531c314a2855aec368e811da6fcd9e98365af51", "url": "https://api.github.com/repos/rust-lang/rust/commits/5531c314a2855aec368e811da6fcd9e98365af51", "html_url": "https://github.com/rust-lang/rust/commit/5531c314a2855aec368e811da6fcd9e98365af51"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "a11ef6e221dc23efe5f52e203ee621fae1c97587", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0a62676c73ce8050941d571427dfb621b004a3b8/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a62676c73ce8050941d571427dfb621b004a3b8/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=0a62676c73ce8050941d571427dfb621b004a3b8", "patch": "@@ -247,7 +247,7 @@ fn resolve_struct_error<'b, 'a: 'b, 'c>(resolver: &'b Resolver<'a>,\n                                            \"method `{}` is not a member of trait `{}`\",\n                                            method,\n                                            trait_);\n-            err.span_label(span, &format!(\"not a member of `{}`\", trait_));\n+            err.span_label(span, &format!(\"not a member of trait `{}`\", trait_));\n             err\n         }\n         ResolutionError::TypeNotMemberOfTrait(type_, trait_) => {\n@@ -257,7 +257,7 @@ fn resolve_struct_error<'b, 'a: 'b, 'c>(resolver: &'b Resolver<'a>,\n                              \"type `{}` is not a member of trait `{}`\",\n                              type_,\n                              trait_);\n-            err.span_label(span, &format!(\"not a member of trait `Foo`\"));\n+            err.span_label(span, &format!(\"not a member of trait `{}`\", trait_));\n             err\n         }\n         ResolutionError::ConstNotMemberOfTrait(const_, trait_) => {\n@@ -267,7 +267,7 @@ fn resolve_struct_error<'b, 'a: 'b, 'c>(resolver: &'b Resolver<'a>,\n                              \"const `{}` is not a member of trait `{}`\",\n                              const_,\n                              trait_);\n-            err.span_label(span, &format!(\"not a member of trait `Foo`\"));\n+            err.span_label(span, &format!(\"not a member of trait `{}`\", trait_));\n             err\n         }\n         ResolutionError::VariableNotBoundInPattern(variable_name, from, to) => {"}, {"sha": "c207dbfca5565753f8f79b8a705af0e5b6e4a404", "filename": "src/test/compile-fail/E0407.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a62676c73ce8050941d571427dfb621b004a3b8/src%2Ftest%2Fcompile-fail%2FE0407.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a62676c73ce8050941d571427dfb621b004a3b8/src%2Ftest%2Fcompile-fail%2FE0407.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0407.rs?ref=0a62676c73ce8050941d571427dfb621b004a3b8", "patch": "@@ -18,7 +18,7 @@ impl Foo for Bar {\n     fn a() {}\n     fn b() {}\n     //~^ ERROR E0407\n-    //~| NOTE not a member of `Foo`\n+    //~| NOTE not a member of trait `Foo`\n }\n \n fn main() {"}, {"sha": "2e2df4bee5a35242caa2451d02dac642e9a9d436", "filename": "src/test/compile-fail/E0438.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0a62676c73ce8050941d571427dfb621b004a3b8/src%2Ftest%2Fcompile-fail%2FE0438.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a62676c73ce8050941d571427dfb621b004a3b8/src%2Ftest%2Fcompile-fail%2FE0438.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0438.rs?ref=0a62676c73ce8050941d571427dfb621b004a3b8", "patch": "@@ -10,11 +10,11 @@\n \n #![feature(associated_consts)]\n \n-trait Foo {}\n+trait Bar {}\n \n-impl Foo for i32 {\n+impl Bar for i32 {\n     const BAR: bool = true; //~ ERROR E0438\n-        //~| NOTE not a member of trait `Foo`\n+        //~| NOTE not a member of trait `Bar`\n }\n \n fn main () {"}]}