{"sha": "2b9952625bd1a5d56c0955fa7887e0296b30ae76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiOTk1MjYyNWJkMWE1ZDU2YzA5NTVmYTc4ODdlMDI5NmIzMGFlNzY=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-02-05T09:53:54Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-02-05T09:53:54Z"}, "message": "Normalize dashes in crate names", "tree": {"sha": "d1671ff1b5b7a32f6d29889554a6b8d19138c337", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1671ff1b5b7a32f6d29889554a6b8d19138c337"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b9952625bd1a5d56c0955fa7887e0296b30ae76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b9952625bd1a5d56c0955fa7887e0296b30ae76", "html_url": "https://github.com/rust-lang/rust/commit/2b9952625bd1a5d56c0955fa7887e0296b30ae76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b9952625bd1a5d56c0955fa7887e0296b30ae76/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9e1aab8803264a40023aa09600b0a8fab8e00ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9e1aab8803264a40023aa09600b0a8fab8e00ff", "html_url": "https://github.com/rust-lang/rust/commit/c9e1aab8803264a40023aa09600b0a8fab8e00ff"}], "stats": {"total": 41, "additions": 33, "deletions": 8}, "files": [{"sha": "e65761c009f451aa1c71f004bf9c55b7df3d1b86", "filename": "crates/ra_db/src/input.rs", "status": "modified", "additions": 33, "deletions": 8, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/2b9952625bd1a5d56c0955fa7887e0296b30ae76/crates%2Fra_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b9952625bd1a5d56c0955fa7887e0296b30ae76/crates%2Fra_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Finput.rs?ref=2b9952625bd1a5d56c0955fa7887e0296b30ae76", "patch": "@@ -83,6 +83,17 @@ pub struct CrateGraph {\n #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct CrateId(pub u32);\n \n+pub struct CrateName(SmolStr);\n+\n+impl<T: AsRef<str>> From<T> for CrateName {\n+    fn from(name: T) -> Self {\n+        // For root projects with dashes in their name,\n+        // cargo metadata does not do any normalization\n+        // so we do it ourselves\n+        Self(SmolStr::new(name.as_ref().replace('-', \"_\")))\n+    }\n+}\n+\n #[derive(Debug, Clone, PartialEq, Eq)]\n struct CrateData {\n     file_id: FileId,\n@@ -131,13 +142,13 @@ impl CrateGraph {\n     pub fn add_dep(\n         &mut self,\n         from: CrateId,\n-        name: SmolStr,\n+        name: CrateName,\n         to: CrateId,\n     ) -> Result<(), CyclicDependenciesError> {\n         if self.dfs_find(from, to, &mut FxHashSet::default()) {\n             return Err(CyclicDependenciesError);\n         }\n-        self.arena.get_mut(&from).unwrap().add_dep(name, to);\n+        self.arena.get_mut(&from).unwrap().add_dep(name.0, to);\n         Ok(())\n     }\n \n@@ -268,7 +279,7 @@ pub struct CyclicDependenciesError;\n \n #[cfg(test)]\n mod tests {\n-    use super::{CfgOptions, CrateGraph, Edition::Edition2018, Env, FileId, SmolStr};\n+    use super::{CfgOptions, CrateGraph, Dependency, Edition::Edition2018, Env, FileId};\n \n     #[test]\n     fn it_should_panic_because_of_cycle_dependencies() {\n@@ -279,9 +290,9 @@ mod tests {\n             graph.add_crate_root(FileId(2u32), Edition2018, CfgOptions::default(), Env::default());\n         let crate3 =\n             graph.add_crate_root(FileId(3u32), Edition2018, CfgOptions::default(), Env::default());\n-        assert!(graph.add_dep(crate1, SmolStr::new(\"crate2\"), crate2).is_ok());\n-        assert!(graph.add_dep(crate2, SmolStr::new(\"crate3\"), crate3).is_ok());\n-        assert!(graph.add_dep(crate3, SmolStr::new(\"crate1\"), crate1).is_err());\n+        assert!(graph.add_dep(crate1, \"crate2\".into(), crate2).is_ok());\n+        assert!(graph.add_dep(crate2, \"crate3\".into(), crate3).is_ok());\n+        assert!(graph.add_dep(crate3, \"crate1\".into(), crate1).is_err());\n     }\n \n     #[test]\n@@ -293,7 +304,21 @@ mod tests {\n             graph.add_crate_root(FileId(2u32), Edition2018, CfgOptions::default(), Env::default());\n         let crate3 =\n             graph.add_crate_root(FileId(3u32), Edition2018, CfgOptions::default(), Env::default());\n-        assert!(graph.add_dep(crate1, SmolStr::new(\"crate2\"), crate2).is_ok());\n-        assert!(graph.add_dep(crate2, SmolStr::new(\"crate3\"), crate3).is_ok());\n+        assert!(graph.add_dep(crate1, \"crate2\".into(), crate2).is_ok());\n+        assert!(graph.add_dep(crate2, \"crate3\".into(), crate3).is_ok());\n+    }\n+\n+    #[test]\n+    fn dashes_are_normalized() {\n+        let mut graph = CrateGraph::default();\n+        let crate1 =\n+            graph.add_crate_root(FileId(1u32), Edition2018, CfgOptions::default(), Env::default());\n+        let crate2 =\n+            graph.add_crate_root(FileId(2u32), Edition2018, CfgOptions::default(), Env::default());\n+        assert!(graph.add_dep(crate1, \"crate-name-with-dashes\".into(), crate2).is_ok());\n+        assert_eq!(\n+            graph.dependencies(crate1).collect::<Vec<_>>(),\n+            vec![&Dependency { crate_id: crate2, name: \"crate_name_with_dashes\".into() }]\n+        );\n     }\n }"}]}