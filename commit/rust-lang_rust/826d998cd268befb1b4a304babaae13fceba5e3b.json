{"sha": "826d998cd268befb1b4a304babaae13fceba5e3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyNmQ5OThjZDI2OGJlZmIxYjRhMzA0YmFiYWFlMTNmY2ViYTVlM2I=", "commit": {"author": {"name": "Philipp Krones", "email": "uwdkn@student.kit.edu", "date": "2018-08-14T10:53:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-14T10:53:01Z"}, "message": "Merge pull request #3036 from matthiaskrgr/clippy_self\n\nfix 2 clippy warnings", "tree": {"sha": "e5e73b72d7085c24197ac3926f949b5314881025", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5e73b72d7085c24197ac3926f949b5314881025"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/826d998cd268befb1b4a304babaae13fceba5e3b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbcrSNCRBK7hj4Ov3rIwAAdHIIACS36CSUucKEOr4krYGSRFd/\nHNYgmpWjLeEqqmVCIyg+hamAxcP2tq/fxhSdATTFsbUH0RyS5GtdAi+TImSFYuwb\nfF6b+iP6Z7B8ksOW7p4ZGdoRHMesfm3P8+2QPonXjP5R4LsNZGFC56ZpNjTYMyHi\n75bmZ2ifidC/8ZJ4rU3LWBbjiZahEr5ML96/szjsSBlc0Kemfml/9+ZQITK6I+wg\nQrEn3T3OzDagbMKyMRM/sbDmnK5TmWNqPzzRjM0YXMJXYNp1Bx/3T9SZq05Ebqy0\nokJ7kmA68XJoAlIuf7seiQI0yuGhh1iUXdb6Zh7HayFU5Y6QPa2EFYFhG15l8Ik=\n=esP4\n-----END PGP SIGNATURE-----\n", "payload": "tree e5e73b72d7085c24197ac3926f949b5314881025\nparent 7392f6c3ba79b8b1924efdc319f54e3dd15debc6\nparent 66ca3954ec25e201826556ddec94bfd103332fea\nauthor Philipp Krones <uwdkn@student.kit.edu> 1534243981 +0200\ncommitter GitHub <noreply@github.com> 1534243981 +0200\n\nMerge pull request #3036 from matthiaskrgr/clippy_self\n\nfix 2 clippy warnings"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/826d998cd268befb1b4a304babaae13fceba5e3b", "html_url": "https://github.com/rust-lang/rust/commit/826d998cd268befb1b4a304babaae13fceba5e3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/826d998cd268befb1b4a304babaae13fceba5e3b/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7392f6c3ba79b8b1924efdc319f54e3dd15debc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7392f6c3ba79b8b1924efdc319f54e3dd15debc6", "html_url": "https://github.com/rust-lang/rust/commit/7392f6c3ba79b8b1924efdc319f54e3dd15debc6"}, {"sha": "66ca3954ec25e201826556ddec94bfd103332fea", "url": "https://api.github.com/repos/rust-lang/rust/commits/66ca3954ec25e201826556ddec94bfd103332fea", "html_url": "https://github.com/rust-lang/rust/commit/66ca3954ec25e201826556ddec94bfd103332fea"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "8a58f2681d6ef91da60893410fb07a3ffdd7053c", "filename": "clippy_lints/src/identity_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/826d998cd268befb1b4a304babaae13fceba5e3b/clippy_lints%2Fsrc%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/826d998cd268befb1b4a304babaae13fceba5e3b/clippy_lints%2Fsrc%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_op.rs?ref=826d998cd268befb1b4a304babaae13fceba5e3b", "patch": "@@ -63,7 +63,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for IdentityOp {\n fn check(cx: &LateContext<'_, '_>, e: &Expr, m: i8, span: Span, arg: Span) {\n     if let Some(Constant::Int(v)) = constant_simple(cx, cx.tables, e) {\n         let check = match cx.tables.expr_ty(e).sty {\n-            ty::TyInt(ity) => unsext(cx.tcx, -1i128, ity),\n+            ty::TyInt(ity) => unsext(cx.tcx, -1_i128, ity),\n             ty::TyUint(uty) => clip(cx.tcx, !0, uty),\n             _ => return,\n         };"}, {"sha": "119b4c2d861511aa705ec61252e00cff70893ce8", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/826d998cd268befb1b4a304babaae13fceba5e3b/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/826d998cd268befb1b4a304babaae13fceba5e3b/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=826d998cd268befb1b4a304babaae13fceba5e3b", "patch": "@@ -244,9 +244,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NonCopyConst {\n                 }\n             }\n \n-            let ty = if !needs_check_adjustment {\n-                cx.tables.expr_ty(dereferenced_expr)\n-            } else {\n+            let ty = if needs_check_adjustment {\n                 let adjustments = cx.tables.expr_adjustments(dereferenced_expr);\n                 if let Some(i) = adjustments.iter().position(|adj| match adj.kind {\n                     Adjust::Borrow(_) | Adjust::Deref(_) => true,\n@@ -261,6 +259,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NonCopyConst {\n                     // No borrow adjustments = the entire const is moved.\n                     return;\n                 }\n+            } else {\n+                cx.tables.expr_ty(dereferenced_expr)\n             };\n \n             verify_ty_bound(cx, ty, Source::Expr { expr: expr.span });"}]}