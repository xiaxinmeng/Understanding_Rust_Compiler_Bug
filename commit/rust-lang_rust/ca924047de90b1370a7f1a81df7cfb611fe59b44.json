{"sha": "ca924047de90b1370a7f1a81df7cfb611fe59b44", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhOTI0MDQ3ZGU5MGIxMzcwYTdmMWE4MWRmN2NmYjYxMWZlNTliNDQ=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-06-22T02:49:31Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-07-14T01:30:22Z"}, "message": "Remove `IllegalCtxt`", "tree": {"sha": "3cbbe771a3dd9e45fd73eb2ae59a2b852cb00faa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cbbe771a3dd9e45fd73eb2ae59a2b852cb00faa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca924047de90b1370a7f1a81df7cfb611fe59b44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca924047de90b1370a7f1a81df7cfb611fe59b44", "html_url": "https://github.com/rust-lang/rust/commit/ca924047de90b1370a7f1a81df7cfb611fe59b44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca924047de90b1370a7f1a81df7cfb611fe59b44/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "195a27faab593c8cbfd6ac5389f578100074df13", "url": "https://api.github.com/repos/rust-lang/rust/commits/195a27faab593c8cbfd6ac5389f578100074df13", "html_url": "https://github.com/rust-lang/rust/commit/195a27faab593c8cbfd6ac5389f578100074df13"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "0f569575d58f68e5967292528a9b3ca196f9822c", "filename": "src/libsyntax/ext/mtwt.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ca924047de90b1370a7f1a81df7cfb611fe59b44/src%2Flibsyntax%2Fext%2Fmtwt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca924047de90b1370a7f1a81df7cfb611fe59b44/src%2Flibsyntax%2Fext%2Fmtwt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fmtwt.rs?ref=ca924047de90b1370a7f1a81df7cfb611fe59b44", "patch": "@@ -41,8 +41,6 @@ pub enum SyntaxContext_ {\n     EmptyCtxt,\n     Mark (Mrk,SyntaxContext),\n     Rename (Name),\n-    /// actually, IllegalCtxt may not be necessary.\n-    IllegalCtxt\n }\n \n /// A list of ident->name renamings\n@@ -99,11 +97,10 @@ pub fn with_sctable<T, F>(op: F) -> T where\n     SCTABLE_KEY.with(move |slot| op(slot))\n }\n \n-// Make a fresh syntax context table with EmptyCtxt in slot zero\n-// and IllegalCtxt in slot one.\n+// Make a fresh syntax context table with EmptyCtxt in slot zero.\n fn new_sctable_internal() -> SCTable {\n     SCTable {\n-        table: RefCell::new(vec!(EmptyCtxt, IllegalCtxt)),\n+        table: RefCell::new(vec![EmptyCtxt]),\n         marks: RefCell::new(HashMap::new()),\n         renames: RefCell::new(HashMap::new()),\n     }\n@@ -129,7 +126,7 @@ pub fn clear_tables() {\n /// Reset the tables to their initial state\n pub fn reset_tables() {\n     with_sctable(|table| {\n-        *table.table.borrow_mut() = vec!(EmptyCtxt, IllegalCtxt);\n+        *table.table.borrow_mut() = vec![EmptyCtxt];\n         *table.marks.borrow_mut() = HashMap::new();\n         *table.renames.borrow_mut() = HashMap::new();\n     });\n@@ -156,7 +153,6 @@ fn resolve_internal(id: Ident, table: &SCTable) -> Name {\n         // ignore marks here:\n         Mark(_, subctxt) => resolve_internal(Ident::new(id.name, subctxt), table),\n         Rename(name) => name,\n-        IllegalCtxt => panic!(\"expected resolvable context, got IllegalCtxt\")\n     }\n }\n \n@@ -192,11 +188,11 @@ mod tests {\n     #[test] fn unfold_marks_test() {\n         let mut t = new_sctable_internal();\n \n-        assert_eq!(unfold_marks(vec!(3,7),EMPTY_CTXT,&mut t),SyntaxContext(3));\n+        assert_eq!(unfold_marks(vec!(3,7),EMPTY_CTXT,&mut t),SyntaxContext(2));\n         {\n             let table = t.table.borrow();\n-            assert!((*table)[2] == Mark(7,EMPTY_CTXT));\n-            assert!((*table)[3] == Mark(3,SyntaxContext(2)));\n+            assert!((*table)[1] == Mark(7,EMPTY_CTXT));\n+            assert!((*table)[2] == Mark(3,SyntaxContext(1)));\n         }\n     }\n \n@@ -209,10 +205,10 @@ mod tests {\n     #[test]\n     fn hashing_tests () {\n         let mut t = new_sctable_internal();\n-        assert_eq!(apply_mark_internal(12,EMPTY_CTXT,&mut t),SyntaxContext(2));\n-        assert_eq!(apply_mark_internal(13,EMPTY_CTXT,&mut t),SyntaxContext(3));\n+        assert_eq!(apply_mark_internal(12,EMPTY_CTXT,&mut t),SyntaxContext(1));\n+        assert_eq!(apply_mark_internal(13,EMPTY_CTXT,&mut t),SyntaxContext(2));\n         // using the same one again should result in the same index:\n-        assert_eq!(apply_mark_internal(12,EMPTY_CTXT,&mut t),SyntaxContext(2));\n+        assert_eq!(apply_mark_internal(12,EMPTY_CTXT,&mut t),SyntaxContext(1));\n         // I'm assuming that the rename table will behave the same....\n     }\n }"}]}