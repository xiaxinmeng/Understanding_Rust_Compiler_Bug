{"sha": "fdc625e18a38c3853218c096a632a6841b0d579f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkYzYyNWUxOGEzOGMzODUzMjE4YzA5NmE2MzJhNjg0MWIwZDU3OWY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-07-18T12:21:13Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-07-18T12:21:13Z"}, "message": "Implement casting between TyRef and TyRawPtr", "tree": {"sha": "610a243aa04089e755e96cb311d2348ecdaa0ce5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/610a243aa04089e755e96cb311d2348ecdaa0ce5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdc625e18a38c3853218c096a632a6841b0d579f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdc625e18a38c3853218c096a632a6841b0d579f", "html_url": "https://github.com/rust-lang/rust/commit/fdc625e18a38c3853218c096a632a6841b0d579f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdc625e18a38c3853218c096a632a6841b0d579f/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e45cc490f70ef64f90d46aa40442b8f43fd28a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e45cc490f70ef64f90d46aa40442b8f43fd28a0", "html_url": "https://github.com/rust-lang/rust/commit/9e45cc490f70ef64f90d46aa40442b8f43fd28a0"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "d7ef02244507770cb0825d82dfbfd35357649a99", "filename": "example.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdc625e18a38c3853218c096a632a6841b0d579f/example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdc625e18a38c3853218c096a632a6841b0d579f/example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example.rs?ref=fdc625e18a38c3853218c096a632a6841b0d579f", "patch": "@@ -85,3 +85,7 @@ fn return_str() -> &'static str {\n fn promoted_val() -> &'static u8 {\n     &(1 * 2)\n }\n+\n+fn cast_ref_to_raw_ptr(abc: &u8) -> *const u8 {\n+    abc as *const u8\n+}"}, {"sha": "c17e9d02409373ae6e365dde00b7fea591de0985", "filename": "src/base.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fdc625e18a38c3853218c096a632a6841b0d579f/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdc625e18a38c3853218c096a632a6841b0d579f/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=fdc625e18a38c3853218c096a632a6841b0d579f", "patch": "@@ -371,7 +371,19 @@ fn trans_stmt<'a, 'tcx: 'a>(fx: &mut FunctionCx<'a, 'tcx>, stmt: &Statement<'tcx\n                     let layout = fx.layout_of(ty);\n                     lval.write_cvalue(fx, operand.unchecked_cast_to(layout));\n                 }\n-                Rvalue::Cast(CastKind::Misc, operand, ty) => unimplemented!(\"rval misc {:?} {:?}\", operand, ty),\n+                Rvalue::Cast(CastKind::Misc, operand, ty) => {\n+                    let operand = trans_operand(fx, operand);\n+                    match (&operand.layout().ty.sty, &ty.sty) {\n+                        (TypeVariants::TyRef(..), TypeVariants::TyRef(..)) |\n+                        (TypeVariants::TyRef(..), TypeVariants::TyRawPtr(..)) |\n+                        (TypeVariants::TyRawPtr(..), TypeVariants::TyRef(..)) |\n+                        (TypeVariants::TyRawPtr(..), TypeVariants::TyRawPtr(..)) => {\n+                            let layout = fx.layout_of(ty);\n+                            lval.write_cvalue(fx, operand.unchecked_cast_to(layout));\n+                        }\n+                        _ => unimplemented!(\"rval misc {:?} {:?}\", operand, ty),\n+                    }\n+                },\n                 Rvalue::Cast(CastKind::ClosureFnPointer, operand, ty) => unimplemented!(\"rval closure_fn_ptr {:?} {:?}\", operand, ty),\n                 Rvalue::Cast(CastKind::Unsize, operand, ty) => unimplemented!(\"rval unsize {:?} {:?}\", operand, ty),\n                 Rvalue::Discriminant(place) => {\n@@ -436,7 +448,7 @@ fn trans_stmt<'a, 'tcx: 'a>(fx: &mut FunctionCx<'a, 'tcx>, stmt: &Statement<'tcx\n                     }\n                 }\n                 Rvalue::Repeat(operand, times) => unimplemented!(\"rval repeat {:?} {:?}\", operand, times),\n-                Rvalue::Len(lval) => unimplemented!(\"rval len {:?}\", lval),\n+                Rvalue::Len(lval) => return Err(format!(\"rval len {:?}\", lval)),\n                 Rvalue::NullaryOp(NullOp::Box, ty) => unimplemented!(\"rval box {:?}\", ty),\n                 Rvalue::NullaryOp(NullOp::SizeOf, ty) => unimplemented!(\"rval size_of {:?}\", ty),\n                 Rvalue::Aggregate(_, _) => bug!(\"shouldn't exist at trans {:?}\", rval),"}]}