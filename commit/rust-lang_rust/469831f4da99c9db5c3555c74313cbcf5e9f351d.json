{"sha": "469831f4da99c9db5c3555c74313cbcf5e9f351d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2OTgzMWY0ZGE5OWM5ZGI1YzM1NTVjNzQzMTNjYmNmNWU5ZjM1MWQ=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-12-01T16:14:40Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-05-23T16:51:51Z"}, "message": "Update foreign_modules and dllimport_foreign_items", "tree": {"sha": "a5ac4551a3fdfdcf61262c1c87dfd3580b6c0dd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5ac4551a3fdfdcf61262c1c87dfd3580b6c0dd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/469831f4da99c9db5c3555c74313cbcf5e9f351d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/469831f4da99c9db5c3555c74313cbcf5e9f351d", "html_url": "https://github.com/rust-lang/rust/commit/469831f4da99c9db5c3555c74313cbcf5e9f351d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/469831f4da99c9db5c3555c74313cbcf5e9f351d/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f74d90ef3e4f6d38d4ae331a8f277fe92b3dbce", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f74d90ef3e4f6d38d4ae331a8f277fe92b3dbce", "html_url": "https://github.com/rust-lang/rust/commit/2f74d90ef3e4f6d38d4ae331a8f277fe92b3dbce"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "98678b1f28c3628643305ee6f301585fc250eb1d", "filename": "src/librustc/arena.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/469831f4da99c9db5c3555c74313cbcf5e9f351d/src%2Flibrustc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/469831f4da99c9db5c3555c74313cbcf5e9f351d/src%2Flibrustc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Farena.rs?ref=469831f4da99c9db5c3555c74313cbcf5e9f351d", "patch": "@@ -94,6 +94,8 @@ macro_rules! arena_types {\n             [few] get_lib_features: rustc::middle::lib_features::LibFeatures,\n             [few] defined_lib_features: rustc::middle::lang_items::LanguageItems,\n             [few] visible_parent_map: rustc::util::nodemap::DefIdMap<rustc::hir::def_id::DefId>,\n+            [few] foreign_module: rustc::middle::cstore::ForeignModule,\n+            [few] foreign_modules: Vec<rustc::middle::cstore::ForeignModule>,\n         ], $tcx);\n     )\n }"}, {"sha": "ff8acf5126e9e2655cb15a94666894b73aec121c", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/469831f4da99c9db5c3555c74313cbcf5e9f351d/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/469831f4da99c9db5c3555c74313cbcf5e9f351d/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=469831f4da99c9db5c3555c74313cbcf5e9f351d", "patch": "@@ -689,7 +689,7 @@ rustc_queries! {\n     }\n \n     Other {\n-        query foreign_modules(_: CrateNum) -> Lrc<Vec<ForeignModule>> {\n+        query foreign_modules(_: CrateNum) -> &'tcx [ForeignModule] {\n             desc { \"looking up the foreign modules of a linked crate\" }\n         }\n \n@@ -736,7 +736,7 @@ rustc_queries! {\n \n     Other {\n         query dllimport_foreign_items(_: CrateNum)\n-            -> Lrc<FxHashSet<DefId>> {\n+            -> &'tcx FxHashSet<DefId> {\n             desc { \"dllimport_foreign_items\" }\n         }\n         query is_dllimport_foreign_item(_: DefId) -> bool {}"}, {"sha": "0b037f872475decc13b8adb23623f665d4c9b25f", "filename": "src/librustc_codegen_ssa/base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/469831f4da99c9db5c3555c74313cbcf5e9f351d/src%2Flibrustc_codegen_ssa%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/469831f4da99c9db5c3555c74313cbcf5e9f351d/src%2Flibrustc_codegen_ssa%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fbase.rs?ref=469831f4da99c9db5c3555c74313cbcf5e9f351d", "patch": "@@ -33,7 +33,6 @@ use rustc_mir::monomorphize::Instance;\n use rustc_mir::monomorphize::partitioning::{CodegenUnit, CodegenUnitExt};\n use rustc::util::nodemap::FxHashMap;\n use rustc_data_structures::indexed_vec::Idx;\n-use rustc_data_structures::sync::Lrc;\n use rustc_codegen_utils::{symbol_names_test, check_for_rustc_errors_attr};\n use rustc::ty::layout::{FAT_PTR_ADDR, FAT_PTR_EXTRA};\n use crate::mir::place::PlaceRef;\n@@ -916,7 +915,7 @@ pub fn provide_both(providers: &mut Providers<'_>) {\n             .map(|id| &module_map[&id])\n             .flat_map(|module| module.foreign_items.iter().cloned())\n             .collect();\n-        Lrc::new(dllimports)\n+        tcx.arena.alloc(dllimports)\n     };\n \n     providers.is_dllimport_foreign_item = |tcx, def_id| {"}, {"sha": "f0dde17beeeb13ad8ac446830e1e5684de45bf33", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/469831f4da99c9db5c3555c74313cbcf5e9f351d/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/469831f4da99c9db5c3555c74313cbcf5e9f351d/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=469831f4da99c9db5c3555c74313cbcf5e9f351d", "patch": "@@ -193,7 +193,7 @@ provide! { <'tcx> tcx, def_id, other, cdata,\n         Lrc::new(reachable_non_generics)\n     }\n     native_libraries => { Lrc::new(cdata.get_native_libraries(tcx.sess)) }\n-    foreign_modules => { Lrc::new(cdata.get_foreign_modules(tcx.sess)) }\n+    foreign_modules => { cdata.get_foreign_modules(tcx) }\n     plugin_registrar_fn => {\n         cdata.root.plugin_registrar_fn.map(|index| {\n             DefId { krate: def_id.krate, index }\n@@ -285,7 +285,7 @@ pub fn provide<'tcx>(providers: &mut Providers<'tcx>) {\n         },\n         foreign_modules: |tcx, cnum| {\n             assert_eq!(cnum, LOCAL_CRATE);\n-            Lrc::new(foreign_modules::collect(tcx))\n+            &tcx.arena.alloc(foreign_modules::collect(tcx))[..]\n         },\n         link_args: |tcx, cnum| {\n             assert_eq!(cnum, LOCAL_CRATE);"}, {"sha": "b287db498fcac67e174bb526a33d03f8f4c861f5", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/469831f4da99c9db5c3555c74313cbcf5e9f351d/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/469831f4da99c9db5c3555c74313cbcf5e9f351d/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=469831f4da99c9db5c3555c74313cbcf5e9f351d", "patch": "@@ -1085,12 +1085,15 @@ impl<'a, 'tcx> CrateMetadata {\n         }\n     }\n \n-    pub fn get_foreign_modules(&self, sess: &Session) -> Vec<ForeignModule> {\n+    pub fn get_foreign_modules(\n+        &self,\n+        tcx: TyCtxt<'_, 'tcx, '_>,\n+    ) -> &'tcx [ForeignModule] {\n         if self.proc_macros.is_some() {\n             // Proc macro crates do not have any *target* foreign modules.\n-            vec![]\n+            &[]\n         } else {\n-            self.root.foreign_modules.decode((self, sess)).collect()\n+            tcx.arena.alloc_from_iter(self.root.foreign_modules.decode((self, tcx.sess)))\n         }\n     }\n "}]}