{"sha": "3a4a1e5f386137514b91c76ad06d909789bcd549", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhNGExZTVmMzg2MTM3NTE0YjkxYzc2YWQwNmQ5MDk3ODliY2Q1NDk=", "commit": {"author": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2015-05-03T00:25:44Z"}, "committer": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2015-05-03T19:02:59Z"}, "message": "Implement Debug for std::net::{UdpSocket,TcpStream,TcpListener,Shutdown}\n\nFixes #23134.", "tree": {"sha": "5064e8687698ccec21f0a65e99099aa6e3de28da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5064e8687698ccec21f0a65e99099aa6e3de28da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a4a1e5f386137514b91c76ad06d909789bcd549", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a4a1e5f386137514b91c76ad06d909789bcd549", "html_url": "https://github.com/rust-lang/rust/commit/3a4a1e5f386137514b91c76ad06d909789bcd549", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a4a1e5f386137514b91c76ad06d909789bcd549/comments", "author": null, "committer": null, "parents": [{"sha": "84f8c257b44964d289d3b22f78babf72f67724dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/84f8c257b44964d289d3b22f78babf72f67724dc", "html_url": "https://github.com/rust-lang/rust/commit/84f8c257b44964d289d3b22f78babf72f67724dc"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "bf444ce671dfc38c69a4d0d91be626ce601b5fa2", "filename": "src/libstd/net/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a4a1e5f386137514b91c76ad06d909789bcd549/src%2Flibstd%2Fnet%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a4a1e5f386137514b91c76ad06d909789bcd549/src%2Flibstd%2Fnet%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fmod.rs?ref=3a4a1e5f386137514b91c76ad06d909789bcd549", "patch": "@@ -32,7 +32,7 @@ mod parser;\n \n /// Possible values which can be passed to the `shutdown` method of `TcpStream`\n /// and `UdpSocket`.\n-#[derive(Copy, Clone, PartialEq)]\n+#[derive(Copy, Clone, PartialEq, Debug)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub enum Shutdown {\n     /// Indicates that the reading portion of this stream/socket should be shut"}, {"sha": "73bc00b4554af21cde8b8ab04e7dd87cb2490306", "filename": "src/libstd/net/tcp.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3a4a1e5f386137514b91c76ad06d909789bcd549/src%2Flibstd%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a4a1e5f386137514b91c76ad06d909789bcd549/src%2Flibstd%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Ftcp.rs?ref=3a4a1e5f386137514b91c76ad06d909789bcd549", "patch": "@@ -14,6 +14,7 @@\n use prelude::v1::*;\n use io::prelude::*;\n \n+use fmt;\n use io;\n use net::{ToSocketAddrs, SocketAddr, Shutdown};\n use sys_common::net2 as net_imp;\n@@ -167,6 +168,12 @@ impl FromInner<net_imp::TcpStream> for TcpStream {\n     fn from_inner(inner: net_imp::TcpStream) -> TcpStream { TcpStream(inner) }\n }\n \n+impl fmt::Debug for TcpStream {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        self.0.fmt(f)\n+    }\n+}\n+\n impl TcpListener {\n     /// Creates a new `TcpListener` which will be bound to the specified\n     /// address.\n@@ -239,6 +246,12 @@ impl FromInner<net_imp::TcpListener> for TcpListener {\n     }\n }\n \n+impl fmt::Debug for TcpListener {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        self.0.fmt(f)\n+    }\n+}\n+\n #[cfg(test)]\n mod tests {\n     use prelude::v1::*;"}, {"sha": "96d6e95f03aa6b0c988b646fd0b7f57ffe62ac75", "filename": "src/libstd/net/udp.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3a4a1e5f386137514b91c76ad06d909789bcd549/src%2Flibstd%2Fnet%2Fudp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a4a1e5f386137514b91c76ad06d909789bcd549/src%2Flibstd%2Fnet%2Fudp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fudp.rs?ref=3a4a1e5f386137514b91c76ad06d909789bcd549", "patch": "@@ -13,6 +13,7 @@\n \n use prelude::v1::*;\n \n+use fmt;\n use io::{self, Error, ErrorKind};\n use net::{ToSocketAddrs, SocketAddr, IpAddr};\n use sys_common::net2 as net_imp;\n@@ -136,6 +137,12 @@ impl FromInner<net_imp::UdpSocket> for UdpSocket {\n     fn from_inner(inner: net_imp::UdpSocket) -> UdpSocket { UdpSocket(inner) }\n }\n \n+impl fmt::Debug for UdpSocket {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        self.0.fmt(f)\n+    }\n+}\n+\n #[cfg(test)]\n mod tests {\n     use prelude::v1::*;"}, {"sha": "08242f6bab8b498e4303fd54bf1c880c5d294ba5", "filename": "src/libstd/sys/common/net2.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/3a4a1e5f386137514b91c76ad06d909789bcd549/src%2Flibstd%2Fsys%2Fcommon%2Fnet2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a4a1e5f386137514b91c76ad06d909789bcd549/src%2Flibstd%2Fsys%2Fcommon%2Fnet2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fnet2.rs?ref=3a4a1e5f386137514b91c76ad06d909789bcd549", "patch": "@@ -11,6 +11,7 @@\n use prelude::v1::*;\n \n use ffi::{CStr, CString};\n+use fmt;\n use io::{self, Error, ErrorKind};\n use libc::{self, c_int, c_char, c_void, socklen_t};\n use mem;\n@@ -268,6 +269,16 @@ impl FromInner<Socket> for TcpStream {\n     }\n }\n \n+impl fmt::Debug for TcpStream {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        f.debug_struct(\"TcpStream\")\n+        .field(\"addr\", &self.socket_addr())\n+        .field(\"peer\", &self.peer_addr())\n+        .field(\"inner\", &self.inner.as_inner())\n+        .finish()\n+    }\n+}\n+\n ////////////////////////////////////////////////////////////////////////////////\n // TCP listeners\n ////////////////////////////////////////////////////////////////////////////////\n@@ -327,6 +338,15 @@ impl FromInner<Socket> for TcpListener {\n     }\n }\n \n+impl fmt::Debug for TcpListener {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        f.debug_struct(\"TcpListener\")\n+        .field(\"addr\", &self.socket_addr())\n+        .field(\"inner\", &self.inner.as_inner())\n+        .finish()\n+    }\n+}\n+\n ////////////////////////////////////////////////////////////////////////////////\n // UDP\n ////////////////////////////////////////////////////////////////////////////////\n@@ -445,3 +465,12 @@ impl FromInner<Socket> for UdpSocket {\n         UdpSocket { inner: socket }\n     }\n }\n+\n+impl fmt::Debug for UdpSocket {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        f.debug_struct(\"UdpSocket\")\n+        .field(\"addr\", &self.socket_addr())\n+        .field(\"inner\", &self.inner.as_inner())\n+        .finish()\n+    }\n+}"}]}