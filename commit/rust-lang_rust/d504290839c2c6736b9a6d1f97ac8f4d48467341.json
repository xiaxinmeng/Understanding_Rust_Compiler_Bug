{"sha": "d504290839c2c6736b9a6d1f97ac8f4d48467341", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1MDQyOTA4MzljMmM2NzM2YjlhNmQxZjk3YWM4ZjRkNDg0NjczNDE=", "commit": {"author": {"name": "Michael Recachinas", "email": "mgr3yp@virginia.edu", "date": "2018-04-02T19:32:46Z"}, "committer": {"name": "Michael Recachinas", "email": "mgr3yp@virginia.edu", "date": "2018-04-02T20:14:29Z"}, "message": "Add edge case with env! arg to test and known problems", "tree": {"sha": "b8cb98cf07d2aff99b26288e6c97aabfa8fb9f27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8cb98cf07d2aff99b26288e6c97aabfa8fb9f27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d504290839c2c6736b9a6d1f97ac8f4d48467341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d504290839c2c6736b9a6d1f97ac8f4d48467341", "html_url": "https://github.com/rust-lang/rust/commit/d504290839c2c6736b9a6d1f97ac8f4d48467341", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d504290839c2c6736b9a6d1f97ac8f4d48467341/comments", "author": null, "committer": null, "parents": [{"sha": "511aa654d70c2a04cc50d21be8c25bd120e3b027", "url": "https://api.github.com/repos/rust-lang/rust/commits/511aa654d70c2a04cc50d21be8c25bd120e3b027", "html_url": "https://github.com/rust-lang/rust/commit/511aa654d70c2a04cc50d21be8c25bd120e3b027"}], "stats": {"total": 83, "additions": 49, "deletions": 34}, "files": [{"sha": "ddfe6d68f4a0591180f627d9edc4536226566278", "filename": "clippy_lints/src/print.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d504290839c2c6736b9a6d1f97ac8f4d48467341/clippy_lints%2Fsrc%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d504290839c2c6736b9a6d1f97ac8f4d48467341/clippy_lints%2Fsrc%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fprint.rs?ref=d504290839c2c6736b9a6d1f97ac8f4d48467341", "patch": "@@ -84,6 +84,9 @@ declare_clippy_lint! {\n /// (c.f., https://github.com/matthiaskrgr/rust-str-bench) and unnecessary\n /// (i.e., just put the literal in the format string)\n ///\n+/// **Known problems:** Will also warn with macro calls as arguments that expand to literals\n+/// -- e.g., `println!(\"{}\", env!(\"FOO\"))`.\n+///\n /// **Example:**\n /// ```rust\n /// println!(\"{}\", \"foo\");"}, {"sha": "d920e6fa3d269ae19454d293419ef1466edc61ca", "filename": "tests/ui/print_literal.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d504290839c2c6736b9a6d1f97ac8f4d48467341/tests%2Fui%2Fprint_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d504290839c2c6736b9a6d1f97ac8f4d48467341/tests%2Fui%2Fprint_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_literal.rs?ref=d504290839c2c6736b9a6d1f97ac8f4d48467341", "patch": "@@ -10,6 +10,12 @@ fn main() {\n     println!(\"Hello {}\", world);\n     println!(\"3 in hex is {:X}\", 3);\n \n+    // this in theory shouldn't yield a warning,\n+    // but at present time, it's a known edge case\n+    // that isn't handled (because we can't expand\n+    // `println!` and not `env!`)\n+    println!(\"foo: {}\", env!(\"BAR\"));\n+\n     // these should throw warnings\n     print!(\"Hello {}\", \"world\");\n     println!(\"Hello {} {}\", world, \"world\");"}, {"sha": "8adeedfc8bd87c12398edda9926df20eee3bebeb", "filename": "tests/ui/print_literal.stderr", "status": "modified", "additions": 40, "deletions": 34, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/d504290839c2c6736b9a6d1f97ac8f4d48467341/tests%2Fui%2Fprint_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d504290839c2c6736b9a6d1f97ac8f4d48467341/tests%2Fui%2Fprint_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_literal.stderr?ref=d504290839c2c6736b9a6d1f97ac8f4d48467341", "patch": "@@ -1,100 +1,106 @@\n error: printing a literal with an empty format string\n-  --> $DIR/print_literal.rs:14:24\n+  --> $DIR/print_literal.rs:17:25\n    |\n-14 |     print!(\"Hello {}\", \"world\");\n-   |                        ^^^^^^^\n+17 |     println!(\"foo: {}\", env!(\"BAR\"));\n+   |                         ^^^^^^^^^^^\n    |\n    = note: `-D print-literal` implied by `-D warnings`\n \n error: printing a literal with an empty format string\n-  --> $DIR/print_literal.rs:15:36\n+  --> $DIR/print_literal.rs:20:24\n+   |\n+20 |     print!(\"Hello {}\", \"world\");\n+   |                        ^^^^^^^\n+\n+error: printing a literal with an empty format string\n+  --> $DIR/print_literal.rs:21:36\n    |\n-15 |     println!(\"Hello {} {}\", world, \"world\");\n+21 |     println!(\"Hello {} {}\", world, \"world\");\n    |                                    ^^^^^^^\n \n error: printing a literal with an empty format string\n-  --> $DIR/print_literal.rs:16:26\n+  --> $DIR/print_literal.rs:22:26\n    |\n-16 |     println!(\"Hello {}\", \"world\");\n+22 |     println!(\"Hello {}\", \"world\");\n    |                          ^^^^^^^\n \n error: printing a literal with an empty format string\n-  --> $DIR/print_literal.rs:17:30\n+  --> $DIR/print_literal.rs:23:30\n    |\n-17 |     println!(\"10 / 4 is {}\", 2.5);\n+23 |     println!(\"10 / 4 is {}\", 2.5);\n    |                              ^^^\n \n error: printing a literal with an empty format string\n-  --> $DIR/print_literal.rs:18:28\n+  --> $DIR/print_literal.rs:24:28\n    |\n-18 |     println!(\"2 + 1 = {}\", 3);\n+24 |     println!(\"2 + 1 = {}\", 3);\n    |                            ^\n \n error: printing a literal with an empty format string\n-  --> $DIR/print_literal.rs:19:31\n+  --> $DIR/print_literal.rs:25:31\n    |\n-19 |     println!(\"2 + 1 = {:.4}\", 3);\n+25 |     println!(\"2 + 1 = {:.4}\", 3);\n    |                               ^\n \n error: printing a literal with an empty format string\n-  --> $DIR/print_literal.rs:20:32\n+  --> $DIR/print_literal.rs:26:32\n    |\n-20 |     println!(\"2 + 1 = {:5.4}\", 3);\n+26 |     println!(\"2 + 1 = {:5.4}\", 3);\n    |                                ^\n \n error: printing a literal with an empty format string\n-  --> $DIR/print_literal.rs:21:33\n+  --> $DIR/print_literal.rs:27:33\n    |\n-21 |     println!(\"Debug test {:?}\", \"hello, world\");\n+27 |     println!(\"Debug test {:?}\", \"hello, world\");\n    |                                 ^^^^^^^^^^^^^^\n \n error: printing a literal with an empty format string\n-  --> $DIR/print_literal.rs:26:25\n+  --> $DIR/print_literal.rs:32:25\n    |\n-26 |     println!(\"{0} {1}\", \"hello\", \"world\");\n+32 |     println!(\"{0} {1}\", \"hello\", \"world\");\n    |                         ^^^^^^^\n \n error: printing a literal with an empty format string\n-  --> $DIR/print_literal.rs:26:34\n+  --> $DIR/print_literal.rs:32:34\n    |\n-26 |     println!(\"{0} {1}\", \"hello\", \"world\");\n+32 |     println!(\"{0} {1}\", \"hello\", \"world\");\n    |                                  ^^^^^^^\n \n error: printing a literal with an empty format string\n-  --> $DIR/print_literal.rs:27:25\n+  --> $DIR/print_literal.rs:33:25\n    |\n-27 |     println!(\"{1} {0}\", \"hello\", \"world\");\n+33 |     println!(\"{1} {0}\", \"hello\", \"world\");\n    |                         ^^^^^^^\n \n error: printing a literal with an empty format string\n-  --> $DIR/print_literal.rs:27:34\n+  --> $DIR/print_literal.rs:33:34\n    |\n-27 |     println!(\"{1} {0}\", \"hello\", \"world\");\n+33 |     println!(\"{1} {0}\", \"hello\", \"world\");\n    |                                  ^^^^^^^\n \n error: printing a literal with an empty format string\n-  --> $DIR/print_literal.rs:30:33\n+  --> $DIR/print_literal.rs:36:33\n    |\n-30 |     println!(\"{foo} {bar}\", foo=\"hello\", bar=\"world\");\n+36 |     println!(\"{foo} {bar}\", foo=\"hello\", bar=\"world\");\n    |                                 ^^^^^^^\n \n error: printing a literal with an empty format string\n-  --> $DIR/print_literal.rs:30:46\n+  --> $DIR/print_literal.rs:36:46\n    |\n-30 |     println!(\"{foo} {bar}\", foo=\"hello\", bar=\"world\");\n+36 |     println!(\"{foo} {bar}\", foo=\"hello\", bar=\"world\");\n    |                                              ^^^^^^^\n \n error: printing a literal with an empty format string\n-  --> $DIR/print_literal.rs:31:33\n+  --> $DIR/print_literal.rs:37:33\n    |\n-31 |     println!(\"{bar} {foo}\", foo=\"hello\", bar=\"world\");\n+37 |     println!(\"{bar} {foo}\", foo=\"hello\", bar=\"world\");\n    |                                 ^^^^^^^\n \n error: printing a literal with an empty format string\n-  --> $DIR/print_literal.rs:31:46\n+  --> $DIR/print_literal.rs:37:46\n    |\n-31 |     println!(\"{bar} {foo}\", foo=\"hello\", bar=\"world\");\n+37 |     println!(\"{bar} {foo}\", foo=\"hello\", bar=\"world\");\n    |                                              ^^^^^^^\n \n-error: aborting due to 16 previous errors\n+error: aborting due to 17 previous errors\n "}]}