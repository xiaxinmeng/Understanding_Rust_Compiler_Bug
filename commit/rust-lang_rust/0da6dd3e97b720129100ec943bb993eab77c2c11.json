{"sha": "0da6dd3e97b720129100ec943bb993eab77c2c11", "node_id": "C_kwDOAAsO6NoAKDBkYTZkZDNlOTdiNzIwMTI5MTAwZWM5NDNiYjk5M2VhYjc3YzJjMTE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-25T23:49:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-25T23:49:21Z"}, "message": "Rollup merge of #93870 - tmiasko:const-precise-live-drops-with-coverage, r=ecstatic-morse\n\nFix switch on discriminant detection in a presence of coverage counters\n\nFixes #93848.\n\nr? ``@ecstatic-morse``", "tree": {"sha": "df95f6ad99dd5d6269b4ca7bbde6fbfad3fc7bcc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df95f6ad99dd5d6269b4ca7bbde6fbfad3fc7bcc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0da6dd3e97b720129100ec943bb993eab77c2c11", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiGWsBCRBK7hj4Ov3rIwAAjGsIAC+ye0d7HBhtMd2d4kAUnXKO\nieYM67FIWG6SujkUH9uWkUTtXZCzauZMqUb/JrPh9mPLefphujZqRoC4z1frB57p\nMDHVzxxh3+9JBP2IWVizXgzfAdrTb/9jZ4Ne6gyoD/lNeULZ43I351I/9IjO6sij\nCZkA+eE8DjU0h0IVbr2IozhR9lGLT7gDkUrg1dNWY9FNquoPMUbaYLdptha9mEIA\n+sWxNx+PEbRVom4zrx4mTNibz93alxDYiSH2fpaVRs5Dre/A9lANyyYjXNidZA8E\naXMcwq3uY8qUa0OB7hB20fVgBpgINWXF1GvHkPW9ZxtmpsgznlRhjtCI3iORyGM=\n=ZriC\n-----END PGP SIGNATURE-----\n", "payload": "tree df95f6ad99dd5d6269b4ca7bbde6fbfad3fc7bcc\nparent 3b276cbe044a528e5966a4dc729fdfd662724f8c\nparent 63bf601537588858a65565b0463d66814b3401c0\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1645832961 +0100\ncommitter GitHub <noreply@github.com> 1645832961 +0100\n\nRollup merge of #93870 - tmiasko:const-precise-live-drops-with-coverage, r=ecstatic-morse\n\nFix switch on discriminant detection in a presence of coverage counters\n\nFixes #93848.\n\nr? ``@ecstatic-morse``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0da6dd3e97b720129100ec943bb993eab77c2c11", "html_url": "https://github.com/rust-lang/rust/commit/0da6dd3e97b720129100ec943bb993eab77c2c11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0da6dd3e97b720129100ec943bb993eab77c2c11/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b276cbe044a528e5966a4dc729fdfd662724f8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b276cbe044a528e5966a4dc729fdfd662724f8c", "html_url": "https://github.com/rust-lang/rust/commit/3b276cbe044a528e5966a4dc729fdfd662724f8c"}, {"sha": "63bf601537588858a65565b0463d66814b3401c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/63bf601537588858a65565b0463d66814b3401c0", "html_url": "https://github.com/rust-lang/rust/commit/63bf601537588858a65565b0463d66814b3401c0"}], "stats": {"total": 49, "additions": 34, "deletions": 15}, "files": [{"sha": "7d6a08d47dae1bb7eb84e24e3be5c2d28f848d16", "filename": "compiler/rustc_mir_dataflow/src/impls/mod.rs", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/0da6dd3e97b720129100ec943bb993eab77c2c11/compiler%2Frustc_mir_dataflow%2Fsrc%2Fimpls%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0da6dd3e97b720129100ec943bb993eab77c2c11/compiler%2Frustc_mir_dataflow%2Fsrc%2Fimpls%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fimpls%2Fmod.rs?ref=0da6dd3e97b720129100ec943bb993eab77c2c11", "patch": "@@ -706,24 +706,27 @@ fn switch_on_enum_discriminant<'mir, 'tcx>(\n     block: &'mir mir::BasicBlockData<'tcx>,\n     switch_on: mir::Place<'tcx>,\n ) -> Option<(mir::Place<'tcx>, &'tcx ty::AdtDef)> {\n-    match block.statements.last().map(|stmt| &stmt.kind) {\n-        Some(mir::StatementKind::Assign(box (lhs, mir::Rvalue::Discriminant(discriminated))))\n-            if *lhs == switch_on =>\n-        {\n-            match &discriminated.ty(body, tcx).ty.kind() {\n-                ty::Adt(def, _) => Some((*discriminated, def)),\n-\n-                // `Rvalue::Discriminant` is also used to get the active yield point for a\n-                // generator, but we do not need edge-specific effects in that case. This may\n-                // change in the future.\n-                ty::Generator(..) => None,\n-\n-                t => bug!(\"`discriminant` called on unexpected type {:?}\", t),\n+    for statement in block.statements.iter().rev() {\n+        match &statement.kind {\n+            mir::StatementKind::Assign(box (lhs, mir::Rvalue::Discriminant(discriminated)))\n+                if *lhs == switch_on =>\n+            {\n+                match &discriminated.ty(body, tcx).ty.kind() {\n+                    ty::Adt(def, _) => return Some((*discriminated, def)),\n+\n+                    // `Rvalue::Discriminant` is also used to get the active yield point for a\n+                    // generator, but we do not need edge-specific effects in that case. This may\n+                    // change in the future.\n+                    ty::Generator(..) => return None,\n+\n+                    t => bug!(\"`discriminant` called on unexpected type {:?}\", t),\n+                }\n             }\n+            mir::StatementKind::Coverage(_) => continue,\n+            _ => return None,\n         }\n-\n-        _ => None,\n     }\n+    None\n }\n \n struct OnMutBorrow<F>(F);"}, {"sha": "275cb38693f0e463eeefe0a764bb44fceb33b1b4", "filename": "src/test/ui/consts/precise-drop-with-coverage.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0da6dd3e97b720129100ec943bb993eab77c2c11/src%2Ftest%2Fui%2Fconsts%2Fprecise-drop-with-coverage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0da6dd3e97b720129100ec943bb993eab77c2c11/src%2Ftest%2Fui%2Fconsts%2Fprecise-drop-with-coverage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fprecise-drop-with-coverage.rs?ref=0da6dd3e97b720129100ec943bb993eab77c2c11", "patch": "@@ -0,0 +1,16 @@\n+// Checks that code coverage doesn't interfere with const_precise_live_drops.\n+// Regression test for issue #93848.\n+//\n+// check-pass\n+// compile-flags: --crate-type=lib -Cinstrument-coverage  -Zno-profiler-runtime\n+\n+#![feature(const_precise_live_drops)]\n+\n+#[inline]\n+pub const fn transpose<T, E>(this: Option<Result<T, E>>) -> Result<Option<T>, E> {\n+    match this {\n+        Some(Ok(x)) => Ok(Some(x)),\n+        Some(Err(e)) => Err(e),\n+        None => Ok(None),\n+    }\n+}"}]}