{"sha": "07bba397c5b46c96cfb8de23c34b9bae47e07947", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3YmJhMzk3YzViNDZjOTZjZmI4ZGUyM2MzNGI5YmFlNDdlMDc5NDc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-12T05:44:55Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-12T05:44:55Z"}, "message": "core: More stack walking", "tree": {"sha": "1badf71f2fed70f1080d41cf156ee7cb2111e7e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1badf71f2fed70f1080d41cf156ee7cb2111e7e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07bba397c5b46c96cfb8de23c34b9bae47e07947", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07bba397c5b46c96cfb8de23c34b9bae47e07947", "html_url": "https://github.com/rust-lang/rust/commit/07bba397c5b46c96cfb8de23c34b9bae47e07947", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07bba397c5b46c96cfb8de23c34b9bae47e07947/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41df9cbb448ab7b4fd352d64776cdfd02ed83a56", "url": "https://api.github.com/repos/rust-lang/rust/commits/41df9cbb448ab7b4fd352d64776cdfd02ed83a56", "html_url": "https://github.com/rust-lang/rust/commit/41df9cbb448ab7b4fd352d64776cdfd02ed83a56"}], "stats": {"total": 57, "additions": 48, "deletions": 9}, "files": [{"sha": "321fa605f48beeedca1468e7d6196c5e320b12f1", "filename": "src/libcore/stackwalk.rs", "status": "modified", "additions": 48, "deletions": 9, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/07bba397c5b46c96cfb8de23c34b9bae47e07947/src%2Flibcore%2Fstackwalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07bba397c5b46c96cfb8de23c34b9bae47e07947/src%2Flibcore%2Fstackwalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstackwalk.rs?ref=07bba397c5b46c96cfb8de23c34b9bae47e07947", "patch": "@@ -1,30 +1,69 @@\n-import libc::uintptr_t;\n+// NB: Don't rely on other core mods here as this has to move into the rt\n+\n+import unsafe::reinterpret_cast;\n+import ptr::offset;\n+import sys::size_of;\n+\n+type word = uint;\n \n class frame {\n-    let fp: uintptr_t;\n+    let fp: *word;\n \n-    new(fp: uintptr_t) {\n+    new(fp: *word) {\n         self.fp = fp;\n     }\n }\n \n fn walk_stack(visit: fn(frame) -> bool) {\n+\n+    #debug(\"beginning stack walk\");\n+\n     frame_address { |frame_pointer|\n-        let frame_address = unsafe {\n-            unsafe::reinterpret_cast(frame_pointer)\n+        let mut frame_address: *word = unsafe {\n+            reinterpret_cast(frame_pointer)\n         };\n-        visit(frame(frame_address));\n+        loop {\n+            let frame = frame(frame_address);\n+\n+            #debug(\"frame: %x\", unsafe { reinterpret_cast(frame.fp) });\n+            visit(frame);\n+\n+            unsafe {\n+                let next_fp: **word = reinterpret_cast(frame_address);\n+                frame_address = *next_fp;\n+                if *frame_address == 0u {\n+                    #debug(\"encountered task_start_wrapper. ending walk\");\n+                    // This is the task_start_wrapper_frame. There is\n+                    // no stack beneath it and it is a native frame.\n+                    break;\n+                }\n+            }\n+        }\n     }\n }\n \n #[test]\n-fn test() {\n+fn test_simple() {\n     for walk_stack { |frame|\n-        #debug(\"frame: %x\", frame.fp);\n-        // breakpoint();\n     }\n }\n \n+#[test]\n+fn test_simple_deep() {\n+    fn run(i: int) {\n+        if i == 0 { ret }\n+\n+        for walk_stack { |frame|\n+            unsafe {\n+                breakpoint();\n+            }\n+        }\n+        run(i - 1);\n+    }\n+\n+    run(10);\n+}\n+\n fn breakpoint() {\n     rustrt::rust_dbg_breakpoint()\n }"}]}