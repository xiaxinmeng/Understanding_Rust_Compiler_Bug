{"sha": "337e1565d3b6b8ccb37d270331696da59f793c69", "node_id": "C_kwDOAAsO6NoAKDMzN2UxNTY1ZDNiNmI4Y2NiMzdkMjcwMzMxNjk2ZGE1OWY3OTNjNjk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-27T12:27:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-27T12:27:47Z"}, "message": "Auto merge of #90186 - jsha:fix-header-sizes, r=GuillaumeGomez\n\nFix documentation header sizes\n\nAnd add a rustdoc-gui test confirming various header sizes.\n\nSplit off from #90156. This fixes a regression in #89506 where the heading level of titles within Markdown was too high (h2) for docblocks under structs, unions, and enum impls.\n\nr? `@camelid`\n\nDemo: https://jacob.hoffman-andrews.com/rust/fix-header-sizes/std/string/struct.String.html#impl-Add%3C%26%27_%20str%3E\nStable: https://doc.rust-lang.org/stable/std/string/struct.String.html#impl-Add%3C%26%27_%20str%3E\nBeta: https://doc.rust-lang.org/beta/std/string/struct.String.html#impl-Add%3C%26%27_%20str%3E", "tree": {"sha": "4c9f18e28eb0167faaf5707223f381b72acb0739", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c9f18e28eb0167faaf5707223f381b72acb0739"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/337e1565d3b6b8ccb37d270331696da59f793c69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/337e1565d3b6b8ccb37d270331696da59f793c69", "html_url": "https://github.com/rust-lang/rust/commit/337e1565d3b6b8ccb37d270331696da59f793c69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/337e1565d3b6b8ccb37d270331696da59f793c69/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8f6e614f86be429b5862f30e023063f619aeed2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8f6e614f86be429b5862f30e023063f619aeed2", "html_url": "https://github.com/rust-lang/rust/commit/a8f6e614f86be429b5862f30e023063f619aeed2"}, {"sha": "89276ff7ede22f82ca3dd88305a41028e4ee62a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/89276ff7ede22f82ca3dd88305a41028e4ee62a2", "html_url": "https://github.com/rust-lang/rust/commit/89276ff7ede22f82ca3dd88305a41028e4ee62a2"}], "stats": {"total": 238, "additions": 232, "deletions": 6}, "files": [{"sha": "07dea624d7c52dbd3fc486e2a665d62dba3808d6", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/337e1565d3b6b8ccb37d270331696da59f793c69/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/337e1565d3b6b8ccb37d270331696da59f793c69/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=337e1565d3b6b8ccb37d270331696da59f793c69", "patch": "@@ -1612,7 +1612,7 @@ fn render_impl(\n                     error_codes: cx.shared.codes,\n                     edition: cx.shared.edition(),\n                     playground: &cx.shared.playground,\n-                    heading_offset: HeadingOffset::H2\n+                    heading_offset: HeadingOffset::H4\n                 }\n                 .into_string()\n             );"}, {"sha": "d07ef6db4c6b0127e230d267e2d9e2f06be85bcd", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/337e1565d3b6b8ccb37d270331696da59f793c69/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/337e1565d3b6b8ccb37d270331696da59f793c69/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=337e1565d3b6b8ccb37d270331696da59f793c69", "patch": "@@ -983,7 +983,7 @@ fn item_union(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, s: &clean::Uni\n             if let Some(stability_class) = field.stability_class(cx.tcx()) {\n                 write!(w, \"<span class=\\\"stab {stab}\\\"></span>\", stab = stability_class);\n             }\n-            document(w, cx, field, Some(it), HeadingOffset::H2);\n+            document(w, cx, field, Some(it), HeadingOffset::H3);\n         }\n     }\n     let def_id = it.def_id.expect_def_id();\n@@ -1094,7 +1094,7 @@ fn item_enum(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, e: &clean::Enum\n             w.write_str(\"</code>\");\n             render_stability_since(w, variant, it, cx.tcx());\n             w.write_str(\"</div>\");\n-            document(w, cx, variant, Some(it), HeadingOffset::H2);\n+            document(w, cx, variant, Some(it), HeadingOffset::H3);\n             document_non_exhaustive(w, variant);\n \n             use crate::clean::Variant;\n@@ -1134,7 +1134,7 @@ fn item_enum(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, e: &clean::Enum\n                                 f = field.name.as_ref().unwrap(),\n                                 t = ty.print(cx)\n                             );\n-                            document(w, cx, field, Some(variant), HeadingOffset::H2);\n+                            document(w, cx, field, Some(variant), HeadingOffset::H4);\n                         }\n                         _ => unreachable!(),\n                     }\n@@ -1286,7 +1286,7 @@ fn item_struct(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, s: &clean::St\n                     name = field_name,\n                     ty = ty.print(cx)\n                 );\n-                document(w, cx, field, Some(it), HeadingOffset::H2);\n+                document(w, cx, field, Some(it), HeadingOffset::H3);\n             }\n         }\n     }"}, {"sha": "fa5d9c92916280000dea09a2bf30a2873de34a11", "filename": "src/test/rustdoc-gui/header-size.goml", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/337e1565d3b6b8ccb37d270331696da59f793c69/src%2Ftest%2Frustdoc-gui%2Fheader-size.goml", "raw_url": "https://github.com/rust-lang/rust/raw/337e1565d3b6b8ccb37d270331696da59f793c69/src%2Ftest%2Frustdoc-gui%2Fheader-size.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fheader-size.goml?ref=337e1565d3b6b8ccb37d270331696da59f793c69", "patch": "@@ -0,0 +1,99 @@\n+// This test check that headers (a) have the correct heading level, and (b) are the right size.\n+// The sizes may change as design changes, but try to make sure a lower header is never bigger than\n+// its parent headers.\n+// Most of these sizes are set in CSS in `em` units, so here's a conversion chart based on our\n+// default 16px font size:\n+// 24px    1.5em\n+// 22.4px  1.4em\n+// 20.8px  1.3em\n+// 18.4px  1.15em\n+// 17.6px  1.1em\n+// 16px    1em\n+// 15.2px  0.95em  \n+goto: file://|DOC_PATH|/test_docs/struct.HeavilyDocumentedStruct.html\n+\n+assert-css: (\"h1.fqn\", {\"font-size\": \"24px\"})\n+\n+assert-css: (\"h2#top-doc-prose-title\", {\"font-size\": \"20.8px\"})\n+assert-css: (\"h3#top-doc-prose-sub-heading\", {\"font-size\": \"18.4px\"})\n+assert-css: (\"h4#top-doc-prose-sub-sub-heading\", {\"font-size\": \"17.6px\"})\n+\n+assert-css: (\"h2#fields\", {\"font-size\": \"22.4px\"})\n+assert-css: (\"h3#title-for-field\", {\"font-size\": \"20.8px\"})\n+assert-css: (\"h4#sub-heading-for-field\", {\"font-size\": \"16px\"})\n+\n+assert-css: (\"h2#implementations\", {\"font-size\": \"22.4px\"})\n+\n+assert-css: (\"#impl > h3.code-header\", {\"font-size\": \"17.6px\"})\n+assert-css: (\"#method\\.do_nothing > h4.code-header\", {\"font-size\": \"16px\"})\n+\n+assert-css: (\"h4#title-for-struct-impl-doc\", {\"font-size\": \"16px\"})\n+assert-css: (\"h5#sub-heading-for-struct-impl-doc\", {\"font-size\": \"16px\"})\n+assert-css: (\"h6#sub-sub-heading-for-struct-impl-doc\", {\"font-size\": \"15.2px\"})\n+\n+assert-css: (\"h5#title-for-struct-impl-item-doc\", {\"font-size\": \"16px\"})\n+assert-css: (\"h6#sub-heading-for-struct-impl-item-doc\", {\"font-size\": \"15.2px\"})\n+assert-css: (\"h6#sub-sub-heading-for-struct-impl-item-doc\", {\"font-size\": \"15.2px\"})\n+\n+goto: file://|DOC_PATH|/test_docs/enum.HeavilyDocumentedEnum.html\n+\n+assert-css: (\"h1.fqn\", {\"font-size\": \"24px\"})\n+\n+assert-css: (\"h2#top-doc-prose-title\", {\"font-size\": \"20.8px\"})\n+assert-css: (\"h3#top-doc-prose-sub-heading\", {\"font-size\": \"18.4px\"})\n+assert-css: (\"h4#top-doc-prose-sub-sub-heading\", {\"font-size\": \"17.6px\"})\n+\n+assert-css: (\"h2#variants\", {\"font-size\": \"22.4px\"})\n+\n+assert-css: (\"h3#none-prose-title\", {\"font-size\": \"20.8px\"})\n+assert-css: (\"h4#none-prose-sub-heading\", {\"font-size\": \"16px\"})\n+\n+assert-css: (\"h3#wrapped-prose-title\", {\"font-size\": \"20.8px\"})\n+assert-css: (\"h4#wrapped-prose-sub-heading\", {\"font-size\": \"16px\"})\n+\n+assert-css: (\"h4#wrapped0-prose-title\", {\"font-size\": \"16px\"})\n+assert-css: (\"h5#wrapped0-prose-sub-heading\", {\"font-size\": \"16px\"})\n+\n+assert-css: (\"h4#structy-prose-title\", {\"font-size\": \"16px\"})\n+assert-css: (\"h5#structy-prose-sub-heading\", {\"font-size\": \"16px\"})\n+\n+assert-css: (\"h2#implementations\", {\"font-size\": \"22.4px\"})\n+\n+assert-css: (\"#impl > h3.code-header\", {\"font-size\": \"17.6px\"})\n+assert-css: (\"#method\\.do_nothing > h4.code-header\", {\"font-size\": \"16px\"})\n+\n+assert-css: (\"h4#title-for-enum-impl-doc\", {\"font-size\": \"16px\"})\n+assert-css: (\"h5#sub-heading-for-enum-impl-doc\", {\"font-size\": \"16px\"})\n+assert-css: (\"h6#sub-sub-heading-for-enum-impl-doc\", {\"font-size\": \"15.2px\"})\n+\n+assert-css: (\"h5#title-for-enum-impl-item-doc\", {\"font-size\": \"16px\"})\n+assert-css: (\"h6#sub-heading-for-enum-impl-item-doc\", {\"font-size\": \"15.2px\"})\n+assert-css: (\"h6#sub-sub-heading-for-enum-impl-item-doc\", {\"font-size\": \"15.2px\"})\n+\n+goto: file://|DOC_PATH|/test_docs/union.HeavilyDocumentedUnion.html\n+\n+assert-css: (\"h1.fqn\", {\"font-size\": \"24px\"})\n+\n+assert-css: (\"h2#top-doc-prose-title\", {\"font-size\": \"20.8px\"})\n+assert-css: (\"h3#top-doc-prose-sub-heading\", {\"font-size\": \"18.4px\"})\n+\n+assert-css: (\"h2#fields\", {\"font-size\": \"22.4px\"})\n+\n+assert-css: (\"h3#title-for-union-variant\", {\"font-size\": \"20.8px\"})\n+assert-css: (\"h4#sub-heading-for-union-variant\", {\"font-size\": \"16px\"})\n+\n+assert-css: (\"h2#implementations\", {\"font-size\": \"22.4px\"})\n+\n+assert-css: (\"#impl > h3.code-header\", {\"font-size\": \"17.6px\"})\n+assert-css: (\"h4#title-for-union-impl-doc\", {\"font-size\": \"16px\"})\n+assert-css: (\"h5#sub-heading-for-union-impl-doc\", {\"font-size\": \"16px\"})\n+\n+assert-css: (\"h5#title-for-union-impl-item-doc\", {\"font-size\": \"16px\"})\n+assert-css: (\"h6#sub-heading-for-union-impl-item-doc\", {\"font-size\": \"15.2px\"})\n+\n+goto: file://|DOC_PATH|/test_docs/macro.heavily_documented_macro.html\n+\n+assert-css: (\"h1.fqn\", {\"font-size\": \"24px\"})\n+\n+assert-css: (\"h2#top-doc-prose-title\", {\"font-size\": \"20.8px\"})\n+assert-css: (\"h3#top-doc-prose-sub-heading\", {\"font-size\": \"18.4px\"})"}, {"sha": "eacc9f6c15fe1eb8c42abcff9424c0934668fce2", "filename": "src/test/rustdoc-gui/sidebar.goml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/337e1565d3b6b8ccb37d270331696da59f793c69/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml", "raw_url": "https://github.com/rust-lang/rust/raw/337e1565d3b6b8ccb37d270331696da59f793c69/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml?ref=337e1565d3b6b8ccb37d270331696da59f793c69", "patch": "@@ -13,7 +13,8 @@ assert-text: (\".sidebar-elems > .items > ul > li:nth-child(4)\", \"Enums\")\n assert-text: (\".sidebar-elems > .items > ul > li:nth-child(5)\", \"Traits\")\n assert-text: (\".sidebar-elems > .items > ul > li:nth-child(6)\", \"Functions\")\n assert-text: (\".sidebar-elems > .items > ul > li:nth-child(7)\", \"Type Definitions\")\n-assert-text: (\".sidebar-elems > .items > ul > li:nth-child(8)\", \"Keywords\")\n+assert-text: (\".sidebar-elems > .items > ul > li:nth-child(8)\", \"Unions\")\n+assert-text: (\".sidebar-elems > .items > ul > li:nth-child(9)\", \"Keywords\")\n assert-text: (\"#structs + .item-table .item-left > a\", \"Foo\")\n click: \"#structs + .item-table .item-left > a\"\n "}, {"sha": "14d8b18613087caf1d8c311cc7e4648f17ca109a", "filename": "src/test/rustdoc-gui/src/test_docs/lib.rs", "status": "modified", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/rust-lang/rust/blob/337e1565d3b6b8ccb37d270331696da59f793c69/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/337e1565d3b6b8ccb37d270331696da59f793c69/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs?ref=337e1565d3b6b8ccb37d270331696da59f793c69", "patch": "@@ -131,3 +131,129 @@ macro_rules! repro {\n }\n \n pub use crate::repro as repro2;\n+\n+/// # Top-doc Prose title\n+///\n+/// Text below title.\n+///\n+/// ## Top-doc Prose sub-heading\n+///\n+/// Text below sub-heading.\n+///\n+/// ### Top-doc Prose sub-sub-heading\n+///\n+/// Text below sub-sub-heading\n+pub struct HeavilyDocumentedStruct {\n+    /// # Title for field\n+    /// ## Sub-heading for field\n+    pub nothing: (),\n+}\n+\n+/// # Title for struct impl doc\n+///\n+/// Text below heading.\n+///\n+/// ## Sub-heading for struct impl doc\n+///\n+/// Text below sub-heading.\n+///\n+/// ### Sub-sub-heading for struct impl doc\n+///\n+/// Text below sub-sub-heading.\n+///\n+impl HeavilyDocumentedStruct {\n+    /// # Title for struct impl-item doc\n+    /// Text below title.\n+    /// ## Sub-heading for struct impl-item doc\n+    /// Text below sub-heading.\n+    /// ### Sub-sub-heading for struct impl-item doc\n+    /// Text below sub-sub-heading.\n+    pub fn do_nothing() {}\n+}\n+\n+/// # Top-doc Prose title\n+///\n+/// Text below title.\n+///\n+/// ## Top-doc Prose sub-heading\n+///\n+/// Text below sub-heading.\n+///\n+/// ### Top-doc Prose sub-sub-heading\n+///\n+/// Text below sub-sub-heading\n+pub enum HeavilyDocumentedEnum {\n+    /// # None prose title\n+    /// ## None prose sub-heading\n+    None,\n+    /// # Wrapped prose title\n+    /// ## Wrapped prose sub-heading\n+    Wrapped(\n+        /// # Wrapped.0 prose title\n+        /// ## Wrapped.0 prose sub-heading\n+        String,\n+        String,\n+    ),\n+    Structy {\n+        /// # Structy prose title\n+        /// ## Structy prose sub-heading\n+        alpha: String,\n+        beta: String,\n+    },\n+}\n+\n+/// # Title for enum impl doc\n+///\n+/// Text below heading.\n+///\n+/// ## Sub-heading for enum impl doc\n+///\n+/// Text below sub-heading.\n+///\n+/// ### Sub-sub-heading for enum impl doc\n+///\n+/// Text below sub-sub-heading.\n+///\n+impl HeavilyDocumentedEnum {\n+    /// # Title for enum impl-item doc\n+    /// Text below title.\n+    /// ## Sub-heading for enum impl-item doc\n+    /// Text below sub-heading.\n+    /// ### Sub-sub-heading for enum impl-item doc\n+    /// Text below sub-sub-heading.\n+    pub fn do_nothing() {}\n+}\n+\n+/// # Top-doc prose title\n+///\n+/// Text below heading.\n+///\n+/// ## Top-doc prose sub-heading\n+///\n+/// Text below heading.\n+pub union HeavilyDocumentedUnion {\n+    /// # Title for union variant\n+    /// ## Sub-heading for union variant\n+    pub nothing: (),\n+    pub something: f32,\n+}\n+\n+/// # Title for union impl doc\n+/// ## Sub-heading for union impl doc\n+impl HeavilyDocumentedUnion {\n+    /// # Title for union impl-item doc\n+    /// ## Sub-heading for union impl-item doc\n+    pub fn do_nothing() {}\n+}\n+\n+/// # Top-doc prose title\n+///\n+/// Text below heading.\n+///\n+/// ## Top-doc prose sub-heading\n+///\n+/// Text below heading.\n+#[macro_export]\n+macro_rules! heavily_documented_macro {\n+    () => {};\n+}"}]}