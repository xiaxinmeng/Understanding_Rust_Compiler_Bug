{"sha": "3f091baba4fa656adb4c1a57b64aa831002d801d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmMDkxYmFiYTRmYTY1NmFkYjRjMWE1N2I2NGFhODMxMDAyZDgwMWQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-08T15:57:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-08T15:57:12Z"}, "message": "Auto merge of #75260 - davidtwco:polymorphization-promoted-substs, r=lcnr\n\npolymorphize: unevaluated constants\n\nThis PR makes polymorphization visit the promoted MIR of unevaluated constants with available promoted MIR instead of visiting the substitutions of that constant - which will mark all of the generic parameters as used; in addition polymorphization will now visit non-promoted unevaluated constants rather than visit their substs.\n\nr? @lcnr", "tree": {"sha": "c2ada61f21cdbd927ef33d71d7608e40074e7e2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2ada61f21cdbd927ef33d71d7608e40074e7e2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f091baba4fa656adb4c1a57b64aa831002d801d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f091baba4fa656adb4c1a57b64aa831002d801d", "html_url": "https://github.com/rust-lang/rust/commit/3f091baba4fa656adb4c1a57b64aa831002d801d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f091baba4fa656adb4c1a57b64aa831002d801d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bac92bba14f3b260b337d2a51c77c0780456e65", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bac92bba14f3b260b337d2a51c77c0780456e65", "html_url": "https://github.com/rust-lang/rust/commit/2bac92bba14f3b260b337d2a51c77c0780456e65"}, {"sha": "d97f89b1a6add41b6ac3c0d69cbe82d15483a0d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d97f89b1a6add41b6ac3c0d69cbe82d15483a0d6", "html_url": "https://github.com/rust-lang/rust/commit/d97f89b1a6add41b6ac3c0d69cbe82d15483a0d6"}], "stats": {"total": 119, "additions": 104, "deletions": 15}, "files": [{"sha": "a996b6fb9d924bf2e7dfde606ce485b22765a94d", "filename": "src/librustc_mir/monomorphize/polymorphize.rs", "status": "modified", "additions": 32, "deletions": 13, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/3f091baba4fa656adb4c1a57b64aa831002d801d/src%2Flibrustc_mir%2Fmonomorphize%2Fpolymorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f091baba4fa656adb4c1a57b64aa831002d801d/src%2Flibrustc_mir%2Fmonomorphize%2Fpolymorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpolymorphize.rs?ref=3f091baba4fa656adb4c1a57b64aa831002d801d", "patch": "@@ -15,6 +15,7 @@ use rustc_middle::ty::{\n     self,\n     fold::{TypeFoldable, TypeVisitor},\n     query::Providers,\n+    subst::SubstsRef,\n     Const, Ty, TyCtxt,\n };\n use rustc_span::symbol::sym;\n@@ -209,6 +210,25 @@ struct UsedGenericParametersVisitor<'a, 'tcx> {\n     unused_parameters: &'a mut FiniteBitSet<u32>,\n }\n \n+impl<'a, 'tcx> UsedGenericParametersVisitor<'a, 'tcx> {\n+    /// Invoke `unused_generic_params` on a body contained within the current item (e.g.\n+    /// a closure, generator or constant).\n+    fn visit_child_body(&mut self, def_id: DefId, substs: SubstsRef<'tcx>) {\n+        let unused = self.tcx.unused_generic_params(def_id);\n+        debug!(\n+            \"visit_child_body: unused_parameters={:?} unused={:?}\",\n+            self.unused_parameters, unused\n+        );\n+        for (i, arg) in substs.iter().enumerate() {\n+            let i = i.try_into().unwrap();\n+            if !unused.contains(i).unwrap_or(false) {\n+                arg.visit_with(self);\n+            }\n+        }\n+        debug!(\"visit_child_body: unused_parameters={:?}\", self.unused_parameters);\n+    }\n+}\n+\n impl<'a, 'tcx> Visitor<'tcx> for UsedGenericParametersVisitor<'a, 'tcx> {\n     fn visit_local_decl(&mut self, local: Local, local_decl: &LocalDecl<'tcx>) {\n         debug!(\"visit_local_decl: local_decl={:?}\", local_decl);\n@@ -249,6 +269,17 @@ impl<'a, 'tcx> TypeVisitor<'tcx> for UsedGenericParametersVisitor<'a, 'tcx> {\n                 self.unused_parameters.clear(param.index);\n                 false\n             }\n+            ty::ConstKind::Unevaluated(_, _, Some(p)) => {\n+                // If there is a promoted, don't look at the substs - since it will always contain\n+                // the generic parameters, instead, traverse the promoted MIR.\n+                let promoted = self.tcx.promoted_mir(self.def_id);\n+                self.visit_body(&promoted[p]);\n+                false\n+            }\n+            ty::ConstKind::Unevaluated(def_id, unevaluated_substs, None) => {\n+                self.visit_child_body(def_id.did, unevaluated_substs);\n+                false\n+            }\n             _ => c.super_visit_with(self),\n         }\n     }\n@@ -269,19 +300,7 @@ impl<'a, 'tcx> TypeVisitor<'tcx> for UsedGenericParametersVisitor<'a, 'tcx> {\n \n                 // Consider any generic parameters used by any closures/generators as used in the\n                 // parent.\n-                let unused = self.tcx.unused_generic_params(def_id);\n-                debug!(\n-                    \"visit_ty: unused_parameters={:?} unused={:?}\",\n-                    self.unused_parameters, unused\n-                );\n-                for (i, arg) in substs.iter().enumerate() {\n-                    let i = i.try_into().unwrap();\n-                    if !unused.contains(i).unwrap_or(false) {\n-                        arg.visit_with(self);\n-                    }\n-                }\n-                debug!(\"visit_ty: unused_parameters={:?}\", self.unused_parameters);\n-\n+                self.visit_child_body(def_id, substs);\n                 false\n             }\n             ty::Param(param) => {"}, {"sha": "2cd02673442fed83abbb2a0da807235005f2236c", "filename": "src/test/ui/polymorphization/promoted-function-1.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3f091baba4fa656adb4c1a57b64aa831002d801d/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f091baba4fa656adb4c1a57b64aa831002d801d/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function-1.rs?ref=3f091baba4fa656adb4c1a57b64aa831002d801d", "patch": "@@ -0,0 +1,12 @@\n+// build-fail\n+// compile-flags: -Zpolymorphize=on\n+#![crate_type = \"lib\"]\n+#![feature(rustc_attrs)]\n+\n+fn foo<'a>(_: &'a ()) {}\n+\n+#[rustc_polymorphize_error]\n+pub fn test<T>() {\n+    //~^ ERROR item has unused generic parameters\n+    foo(&());\n+}"}, {"sha": "fcbb86949232b225598f4396701bb37c95570dc3", "filename": "src/test/ui/polymorphization/promoted-function-1.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3f091baba4fa656adb4c1a57b64aa831002d801d/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3f091baba4fa656adb4c1a57b64aa831002d801d/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function-1.stderr?ref=3f091baba4fa656adb4c1a57b64aa831002d801d", "patch": "@@ -0,0 +1,8 @@\n+error: item has unused generic parameters\n+  --> $DIR/promoted-function-1.rs:9:8\n+   |\n+LL | pub fn test<T>() {\n+   |        ^^^^ - generic parameter `T` is unused\n+\n+error: aborting due to previous error\n+"}, {"sha": "2831f861f556167dd2e0a782596305908875793b", "filename": "src/test/ui/polymorphization/promoted-function-2.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3f091baba4fa656adb4c1a57b64aa831002d801d/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f091baba4fa656adb4c1a57b64aa831002d801d/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function-2.rs?ref=3f091baba4fa656adb4c1a57b64aa831002d801d", "patch": "@@ -0,0 +1,16 @@\n+// build-fail\n+// compile-flags:-Zpolymorphize=on\n+#![crate_type = \"lib\"]\n+#![feature(lazy_normalization_consts, rustc_attrs)]\n+//~^ WARN the feature `lazy_normalization_consts` is incomplete\n+\n+#[rustc_polymorphize_error]\n+fn test<T>() {\n+    //~^ ERROR item has unused generic parameters\n+    let x = [0; 3 + 4];\n+}\n+\n+pub fn caller() {\n+    test::<String>();\n+    test::<Vec<String>>();\n+}"}, {"sha": "38d4808c48c03f63f814ae7e7c1883ed40d6bca2", "filename": "src/test/ui/polymorphization/promoted-function-2.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3f091baba4fa656adb4c1a57b64aa831002d801d/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3f091baba4fa656adb4c1a57b64aa831002d801d/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function-2.stderr?ref=3f091baba4fa656adb4c1a57b64aa831002d801d", "patch": "@@ -0,0 +1,17 @@\n+warning: the feature `lazy_normalization_consts` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/promoted-function-2.rs:4:12\n+   |\n+LL | #![feature(lazy_normalization_consts, rustc_attrs)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #72219 <https://github.com/rust-lang/rust/issues/72219> for more information\n+\n+error: item has unused generic parameters\n+  --> $DIR/promoted-function-2.rs:8:4\n+   |\n+LL | fn test<T>() {\n+   |    ^^^^ - generic parameter `T` is unused\n+\n+error: aborting due to previous error; 1 warning emitted\n+"}, {"sha": "a56a8e70e4c50153cdb2cc2fa13c6a2390893940", "filename": "src/test/ui/polymorphization/promoted-function.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3f091baba4fa656adb4c1a57b64aa831002d801d/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f091baba4fa656adb4c1a57b64aa831002d801d/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function.rs?ref=3f091baba4fa656adb4c1a57b64aa831002d801d", "patch": "@@ -1,4 +1,6 @@\n // run-pass\n+// compile-flags:-Zpolymorphize=on\n+\n fn fop<T>() {}\n \n fn bar<T>() -> &'static fn() {"}, {"sha": "b803fec2ccfdb17e4dcb9fee0b5592a0152c6e57", "filename": "src/test/ui/polymorphization/unsized_cast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3f091baba4fa656adb4c1a57b64aa831002d801d/src%2Ftest%2Fui%2Fpolymorphization%2Funsized_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f091baba4fa656adb4c1a57b64aa831002d801d/src%2Ftest%2Fui%2Fpolymorphization%2Funsized_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Funsized_cast.rs?ref=3f091baba4fa656adb4c1a57b64aa831002d801d", "patch": "@@ -17,6 +17,7 @@ fn foo<T: Default>() {\n fn foo2<T: Default>() {\n     let _: T = Default::default();\n     (|| {\n+        //~^ ERROR item has unused generic parameters\n         let call: extern \"rust-call\" fn(_, _) = Fn::call;\n         call(&|| {}, ());\n         //~^ ERROR item has unused generic parameters"}, {"sha": "b51cc5c719f0b271d61ff68316243c4299809e40", "filename": "src/test/ui/polymorphization/unsized_cast.stderr", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3f091baba4fa656adb4c1a57b64aa831002d801d/src%2Ftest%2Fui%2Fpolymorphization%2Funsized_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3f091baba4fa656adb4c1a57b64aa831002d801d/src%2Ftest%2Fui%2Fpolymorphization%2Funsized_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Funsized_cast.stderr?ref=3f091baba4fa656adb4c1a57b64aa831002d801d", "patch": "@@ -17,13 +17,27 @@ LL |     (|| Box::new(|| {}) as Box<dyn Fn()>)();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: item has unused generic parameters\n-  --> $DIR/unsized_cast.rs:21:15\n+  --> $DIR/unsized_cast.rs:22:15\n    |\n LL | fn foo2<T: Default>() {\n    |         - generic parameter `T` is unused\n ...\n LL |         call(&|| {}, ());\n    |               ^^^^^\n \n-error: aborting due to 3 previous errors\n+error: item has unused generic parameters\n+  --> $DIR/unsized_cast.rs:19:5\n+   |\n+LL |   fn foo2<T: Default>() {\n+   |           - generic parameter `T` is unused\n+LL |       let _: T = Default::default();\n+LL | /     (|| {\n+LL | |\n+LL | |         let call: extern \"rust-call\" fn(_, _) = Fn::call;\n+LL | |         call(&|| {}, ());\n+LL | |\n+LL | |     })();\n+   | |______^\n+\n+error: aborting due to 4 previous errors\n "}]}