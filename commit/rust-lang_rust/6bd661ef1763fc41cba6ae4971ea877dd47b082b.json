{"sha": "6bd661ef1763fc41cba6ae4971ea877dd47b082b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiZDY2MWVmMTc2M2ZjNDFjYmE2YWU0OTcxZWE4NzdkZDQ3YjA4MmI=", "commit": {"author": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-01-11T21:22:04Z"}, "committer": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-01-12T00:49:36Z"}, "message": "Replace a simple `if let` with the `matches` macro", "tree": {"sha": "7ef500796a5d286238b6b6fc525472103280b9bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ef500796a5d286238b6b6fc525472103280b9bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bd661ef1763fc41cba6ae4971ea877dd47b082b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bd661ef1763fc41cba6ae4971ea877dd47b082b", "html_url": "https://github.com/rust-lang/rust/commit/6bd661ef1763fc41cba6ae4971ea877dd47b082b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bd661ef1763fc41cba6ae4971ea877dd47b082b/comments", "author": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5eae562935922f712edec56a45591bc2f8ded1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5eae562935922f712edec56a45591bc2f8ded1c", "html_url": "https://github.com/rust-lang/rust/commit/c5eae562935922f712edec56a45591bc2f8ded1c"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "6219d1b08eb6807219a54e6eb7ff20dc67f616cc", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6bd661ef1763fc41cba6ae4971ea877dd47b082b/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bd661ef1763fc41cba6ae4971ea877dd47b082b/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=6bd661ef1763fc41cba6ae4971ea877dd47b082b", "patch": "@@ -1947,8 +1947,7 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n             _ => report_errors(self, None),\n         };\n \n-        if let PathSource::TraitItem(..) = source {\n-        } else {\n+        if !matches!(source, PathSource::TraitItem(..)) {\n             // Avoid recording definition of `A::B` in `<T as A>::B::C`.\n             self.r.record_partial_res(id, partial_res);\n         }"}]}