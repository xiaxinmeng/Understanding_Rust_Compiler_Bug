{"sha": "e0712c898e8e180a1a3e1d3497a33078197a64d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwNzEyYzg5OGU4ZTE4MGExYTNlMWQzNDk3YTMzMDc4MTk3YTY0ZDQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-07-12T10:31:42Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2019-08-05T14:16:27Z"}, "message": "useful debug", "tree": {"sha": "2ea17e2898bdd367e9a8d9c19d3baeb50edba80c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ea17e2898bdd367e9a8d9c19d3baeb50edba80c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0712c898e8e180a1a3e1d3497a33078197a64d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0712c898e8e180a1a3e1d3497a33078197a64d4", "html_url": "https://github.com/rust-lang/rust/commit/e0712c898e8e180a1a3e1d3497a33078197a64d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0712c898e8e180a1a3e1d3497a33078197a64d4/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63a67a076f134347d9941bb46bdac9bacebe2431", "url": "https://api.github.com/repos/rust-lang/rust/commits/63a67a076f134347d9941bb46bdac9bacebe2431", "html_url": "https://github.com/rust-lang/rust/commit/63a67a076f134347d9941bb46bdac9bacebe2431"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "25e9355161bcf325883233b706caf85d3c073543", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e0712c898e8e180a1a3e1d3497a33078197a64d4/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0712c898e8e180a1a3e1d3497a33078197a64d4/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=e0712c898e8e180a1a3e1d3497a33078197a64d4", "patch": "@@ -1496,7 +1496,17 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n     {\n         let tcx = self.tcx();\n \n+        debug!(\n+            \"find_bound_for_assoc_item(ty_param_def_id={:?}, assoc_name={:?}, span={:?})\",\n+            ty_param_def_id,\n+            assoc_name,\n+            span,\n+        );\n+\n         let predicates = &self.get_type_parameter_bounds(span, ty_param_def_id).predicates;\n+\n+        debug!(\"find_bound_for_assoc_item: predicates={:#?}\", predicates);\n+\n         let bounds = predicates.iter().filter_map(|(p, _)| p.to_opt_poly_trait_ref());\n \n         // Check that there is exactly one way to find an associated type with the\n@@ -1535,7 +1545,11 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             }\n         };\n \n+        debug!(\"one_bound_for_assoc_type: bound = {:?}\", bound);\n+\n         if let Some(bound2) = bounds.next() {\n+            debug!(\"one_bound_for_assoc_type: bound2 = {:?}\", bound2);\n+\n             let bounds = iter::once(bound).chain(iter::once(bound2)).chain(bounds);\n             let mut err = struct_span_err!(\n                 self.tcx().sess, span, E0221,"}]}