{"sha": "ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "node_id": "C_kwDOAAsO6NoAKGZmMGZmZGE2YjNjM2VhMzkyYzZjZjg4YzY3NjEzMzY2NmY0OTFlNWM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-18T23:20:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-18T23:20:53Z"}, "message": "Auto merge of #104591 - Manishearth:rollup-b3ser4e, r=Manishearth\n\nRollup of 8 pull requests\n\nSuccessful merges:\n\n - #102977 (remove HRTB from `[T]::is_sorted_by{,_key}`)\n - #103378 (Fix mod_inv termination for the last iteration)\n - #103456 (`unchecked_{shl|shr}` should use `u32` as the RHS)\n - #103701 (Simplify some pointer method implementations)\n - #104047 (Diagnostics `icu4x` based list formatting.)\n - #104338 (Enforce that `dyn*` coercions are actually pointer-sized)\n - #104498 (Edit docs for `rustc_errors::Handler::stash_diagnostic`)\n - #104556 (rustdoc: use `code-header` class to format enum variants)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "ca54e81ea3ebfde16f1e0b224d63ccd5636faff8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca54e81ea3ebfde16f1e0b224d63ccd5636faff8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "html_url": "https://github.com/rust-lang/rust/commit/ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b833ad56f46a0bbe0e8729512812a161e7dae28a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b833ad56f46a0bbe0e8729512812a161e7dae28a", "html_url": "https://github.com/rust-lang/rust/commit/b833ad56f46a0bbe0e8729512812a161e7dae28a"}, {"sha": "9db23f8d30e8d00e2e5e18b51f7bb8e582520600", "url": "https://api.github.com/repos/rust-lang/rust/commits/9db23f8d30e8d00e2e5e18b51f7bb8e582520600", "html_url": "https://github.com/rust-lang/rust/commit/9db23f8d30e8d00e2e5e18b51f7bb8e582520600"}], "stats": {"total": 3180, "additions": 3030, "deletions": 150}, "files": [{"sha": "acffaaff4d3b36718e68494875facafe7301372f", "filename": "Cargo.lock", "status": "modified", "additions": 177, "deletions": 3, "changes": 180, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -211,7 +211,7 @@ checksum = \"ba3569f383e8f1598449f1a423e72e99569137b47740b1da11ef19af3d5c3223\"\n dependencies = [\n  \"lazy_static\",\n  \"memchr\",\n- \"regex-automata\",\n+ \"regex-automata 0.1.10\",\n ]\n \n [[package]]\n@@ -222,7 +222,7 @@ checksum = \"fca0852af221f458706eb0725c03e4ed6c46af9ac98e6a689d5e634215d594dd\"\n dependencies = [\n  \"memchr\",\n  \"once_cell\",\n- \"regex-automata\",\n+ \"regex-automata 0.1.10\",\n  \"serde\",\n ]\n \n@@ -1707,6 +1707,73 @@ version = \"2.0.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"3c1ad908cc71012b7bea4d0c53ba96a8cba9962f048fa68d143376143d863b7a\"\n \n+[[package]]\n+name = \"icu_list\"\n+version = \"1.0.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"c40218275f081c4493f190357c5395647b06734c2dc3dcb41cc099a0f60168b1\"\n+dependencies = [\n+ \"displaydoc\",\n+ \"icu_locid\",\n+ \"icu_provider\",\n+ \"regex-automata 0.2.0\",\n+ \"writeable\",\n+ \"zerovec\",\n+]\n+\n+[[package]]\n+name = \"icu_locid\"\n+version = \"1.0.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"34b3de5d99a0e275fe6193b9586dbf37364daebc0d39c89b5cf8376a53b789e8\"\n+dependencies = [\n+ \"displaydoc\",\n+ \"litemap\",\n+ \"tinystr\",\n+ \"writeable\",\n+ \"zerovec\",\n+]\n+\n+[[package]]\n+name = \"icu_provider\"\n+version = \"1.0.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"2f911086e3c521a8a824d4f8bfd87769645ced2f07ff913b521c0d793be07100\"\n+dependencies = [\n+ \"displaydoc\",\n+ \"icu_locid\",\n+ \"icu_provider_macros\",\n+ \"stable_deref_trait\",\n+ \"writeable\",\n+ \"yoke\",\n+ \"zerofrom\",\n+ \"zerovec\",\n+]\n+\n+[[package]]\n+name = \"icu_provider_adapters\"\n+version = \"1.0.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"980c71d8a91b246ebbb97847178a4b816eea39d1d550c70ee566384555bb6545\"\n+dependencies = [\n+ \"icu_locid\",\n+ \"icu_provider\",\n+ \"tinystr\",\n+ \"yoke\",\n+ \"zerovec\",\n+]\n+\n+[[package]]\n+name = \"icu_provider_macros\"\n+version = \"1.0.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"38cf6f5b65cf81f0b4298da647101acbfe6ae0e25263f92bd7a22597e9d6d606\"\n+dependencies = [\n+ \"proc-macro2\",\n+ \"quote\",\n+ \"syn\",\n+]\n+\n [[package]]\n name = \"idna\"\n version = \"0.2.0\"\n@@ -2034,6 +2101,12 @@ dependencies = [\n  \"walkdir\",\n ]\n \n+[[package]]\n+name = \"litemap\"\n+version = \"0.6.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"f34a3f4798fac63fb48cf277eefa38f94d3443baff555bb98e4f56bc9092368e\"\n+\n [[package]]\n name = \"lld-wrapper\"\n version = \"0.1.0\"\n@@ -2100,7 +2173,7 @@ version = \"0.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558\"\n dependencies = [\n- \"regex-automata\",\n+ \"regex-automata 0.1.10\",\n ]\n \n [[package]]\n@@ -2927,6 +3000,15 @@ dependencies = [\n  \"regex-syntax\",\n ]\n \n+[[package]]\n+name = \"regex-automata\"\n+version = \"0.2.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"e9368763f5a9b804326f3af749e16f9abf378d227bcdee7634b13d8f17793782\"\n+dependencies = [\n+ \"memchr\",\n+]\n+\n [[package]]\n name = \"regex-syntax\"\n version = \"0.6.26\"\n@@ -3202,6 +3284,18 @@ dependencies = [\n  \"rustc_span\",\n ]\n \n+[[package]]\n+name = \"rustc_baked_icu_data\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"icu_list\",\n+ \"icu_locid\",\n+ \"icu_provider\",\n+ \"icu_provider_adapters\",\n+ \"litemap\",\n+ \"zerovec\",\n+]\n+\n [[package]]\n name = \"rustc_borrowck\"\n version = \"0.0.0\"\n@@ -3422,13 +3516,18 @@ version = \"0.0.0\"\n dependencies = [\n  \"fluent-bundle\",\n  \"fluent-syntax\",\n+ \"icu_list\",\n+ \"icu_locid\",\n+ \"icu_provider_adapters\",\n  \"intl-memoizer\",\n+ \"rustc_baked_icu_data\",\n  \"rustc_data_structures\",\n  \"rustc_macros\",\n  \"rustc_serialize\",\n  \"rustc_span\",\n  \"tracing\",\n  \"unic-langid\",\n+ \"writeable\",\n ]\n \n [[package]]\n@@ -4935,6 +5034,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"f8aeafdfd935e4a7fe16a91ab711fa52d54df84f9c8f7ca5837a9d1d902ef4c2\"\n dependencies = [\n  \"displaydoc\",\n+ \"zerovec\",\n ]\n \n [[package]]\n@@ -5547,6 +5647,12 @@ version = \"0.42.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"f40009d85759725a34da6d89a94e63d7bdc50a862acf0dbc7c8e488f1edcb6f5\"\n \n+[[package]]\n+name = \"writeable\"\n+version = \"0.5.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"f8e6ab4f5da1b24daf2c590cfac801bacb27b15b4f050e84eb60149ea726f06b\"\n+\n [[package]]\n name = \"xattr\"\n version = \"0.2.2\"\n@@ -5599,3 +5705,71 @@ checksum = \"fe5c30ade05e61656247b2e334a031dfd0cc466fadef865bdcdea8d537951bf1\"\n dependencies = [\n  \"winapi\",\n ]\n+\n+[[package]]\n+name = \"yoke\"\n+version = \"0.6.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"1fe1d55ca72c32d573bfbd5cb2f0ca65a497854c44762957a6d3da96041a5184\"\n+dependencies = [\n+ \"serde\",\n+ \"stable_deref_trait\",\n+ \"yoke-derive\",\n+ \"zerofrom\",\n+]\n+\n+[[package]]\n+name = \"yoke-derive\"\n+version = \"0.6.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"1346e4cd025ae818b88566eac7eb65ab33a994ea55f355c86889af2e7e56b14e\"\n+dependencies = [\n+ \"proc-macro2\",\n+ \"quote\",\n+ \"syn\",\n+ \"synstructure\",\n+]\n+\n+[[package]]\n+name = \"zerofrom\"\n+version = \"0.1.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"79e9355fccf72b04b7deaa99ce7a0f6630530acf34045391b74460fcd714de54\"\n+dependencies = [\n+ \"zerofrom-derive\",\n+]\n+\n+[[package]]\n+name = \"zerofrom-derive\"\n+version = \"0.1.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"2e8aa86add9ddbd2409c1ed01e033cd457d79b1b1229b64922c25095c595e829\"\n+dependencies = [\n+ \"proc-macro2\",\n+ \"quote\",\n+ \"syn\",\n+ \"synstructure\",\n+]\n+\n+[[package]]\n+name = \"zerovec\"\n+version = \"0.9.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"b9d919a74c17749ccb17beaf6405562e413cd94e98ba52ca1e64bbe7eefbd8b8\"\n+dependencies = [\n+ \"yoke\",\n+ \"zerofrom\",\n+ \"zerovec-derive\",\n+]\n+\n+[[package]]\n+name = \"zerovec-derive\"\n+version = \"0.9.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"490e5f878c2856225e884c35927e7ea6db3c24cdb7229b72542c7526ad7ed49e\"\n+dependencies = [\n+ \"proc-macro2\",\n+ \"quote\",\n+ \"syn\",\n+ \"synstructure\",\n+]"}, {"sha": "3477306dbfc95f2ea9a9857a60933d0040d36191", "filename": "compiler/rustc_baked_icu_data/Cargo.toml", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_baked_icu_data%2FCargo.toml?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,15 @@\n+[package]\n+name = \"rustc_baked_icu_data\"\n+version = \"0.0.0\"\n+edition = \"2021\"\n+\n+[dependencies]\n+icu_list = \"1.0.0\"\n+icu_locid = \"1.0.0\"\n+icu_provider = \"1.0.1\"\n+icu_provider_adapters = \"1.0.0\"\n+litemap = \"0.6.0\"\n+zerovec = \"0.9.0\"\n+\n+[features]\n+rustc_use_parallel_compiler = ['icu_provider/sync']"}, {"sha": "e8e99be93f2c5f6ceb2a5e5059c77c3f82da5214", "filename": "compiler/rustc_baked_icu_data/src/data/any.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Fany.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,42 @@\n+// @generated\n+impl AnyProvider for BakedDataProvider {\n+    fn load_any(&self, key: DataKey, req: DataRequest) -> Result<AnyResponse, DataError> {\n+        const ANDLISTV1MARKER: ::icu_provider::DataKeyHash =\n+            ::icu_list::provider::AndListV1Marker::KEY.hashed();\n+        const COLLATIONFALLBACKSUPPLEMENTV1MARKER: ::icu_provider::DataKeyHash =\n+            ::icu_provider_adapters::fallback::provider::CollationFallbackSupplementV1Marker::KEY\n+                .hashed();\n+        const LOCALEFALLBACKLIKELYSUBTAGSV1MARKER: ::icu_provider::DataKeyHash =\n+            ::icu_provider_adapters::fallback::provider::LocaleFallbackLikelySubtagsV1Marker::KEY\n+                .hashed();\n+        const LOCALEFALLBACKPARENTSV1MARKER: ::icu_provider::DataKeyHash =\n+            ::icu_provider_adapters::fallback::provider::LocaleFallbackParentsV1Marker::KEY\n+                .hashed();\n+        #[allow(clippy::match_single_binding)]\n+        match key.hashed() {\n+            ANDLISTV1MARKER => list::and_v1::DATA\n+                .get_by(|k| req.locale.strict_cmp(k.as_bytes()).reverse())\n+                .copied()\n+                .map(AnyPayload::from_static_ref)\n+                .ok_or(DataErrorKind::MissingLocale),\n+            COLLATIONFALLBACKSUPPLEMENTV1MARKER => fallback::supplement::co_v1::DATA\n+                .get_by(|k| req.locale.strict_cmp(k.as_bytes()).reverse())\n+                .copied()\n+                .map(AnyPayload::from_static_ref)\n+                .ok_or(DataErrorKind::MissingLocale),\n+            LOCALEFALLBACKLIKELYSUBTAGSV1MARKER => fallback::likelysubtags_v1::DATA\n+                .get_by(|k| req.locale.strict_cmp(k.as_bytes()).reverse())\n+                .copied()\n+                .map(AnyPayload::from_static_ref)\n+                .ok_or(DataErrorKind::MissingLocale),\n+            LOCALEFALLBACKPARENTSV1MARKER => fallback::parents_v1::DATA\n+                .get_by(|k| req.locale.strict_cmp(k.as_bytes()).reverse())\n+                .copied()\n+                .map(AnyPayload::from_static_ref)\n+                .ok_or(DataErrorKind::MissingLocale),\n+            _ => Err(DataErrorKind::MissingDataKey),\n+        }\n+        .map_err(|e| e.with_req(key, req))\n+        .map(|payload| AnyResponse { payload: Some(payload), metadata: Default::default() })\n+    }\n+}"}, {"sha": "0a90c832e8c79b9ae018dd71c5cb15bc29bf01c9", "filename": "compiler/rustc_baked_icu_data/src/data/fallback/likelysubtags_v1.rs", "status": "added", "additions": 733, "deletions": 0, "changes": 733, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Ffallback%2Flikelysubtags_v1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Ffallback%2Flikelysubtags_v1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Ffallback%2Flikelysubtags_v1.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,733 @@\n+// @generated\n+type DataStruct = < :: icu_provider_adapters :: fallback :: provider :: LocaleFallbackLikelySubtagsV1Marker as :: icu_provider :: DataMarker > :: Yokeable ;\n+pub static DATA: litemap::LiteMap<&str, &DataStruct, &[(&str, &DataStruct)]> =\n+    litemap::LiteMap::from_sorted_store_unchecked(&[(\"und\", UND)]);\n+static UND: &DataStruct =\n+    &::icu_provider_adapters::fallback::provider::LocaleFallbackLikelySubtagsV1 {\n+        l2s: unsafe {\n+            #[allow(unused_unsafe)]\n+            ::zerovec::ZeroMap::from_parts_unchecked(\n+                unsafe {\n+                    ::zerovec::ZeroVec::from_bytes_unchecked(&[\n+                        97u8, 98u8, 0u8, 97u8, 98u8, 113u8, 97u8, 100u8, 112u8, 97u8, 100u8, 121u8,\n+                        97u8, 101u8, 0u8, 97u8, 101u8, 98u8, 97u8, 104u8, 111u8, 97u8, 106u8,\n+                        116u8, 97u8, 107u8, 107u8, 97u8, 108u8, 116u8, 97u8, 109u8, 0u8, 97u8,\n+                        112u8, 99u8, 97u8, 112u8, 100u8, 97u8, 114u8, 0u8, 97u8, 114u8, 99u8, 97u8,\n+                        114u8, 113u8, 97u8, 114u8, 115u8, 97u8, 114u8, 121u8, 97u8, 114u8, 122u8,\n+                        97u8, 115u8, 0u8, 97u8, 115u8, 101u8, 97u8, 118u8, 0u8, 97u8, 118u8, 108u8,\n+                        97u8, 119u8, 97u8, 98u8, 97u8, 0u8, 98u8, 97u8, 108u8, 98u8, 97u8, 112u8,\n+                        98u8, 97u8, 120u8, 98u8, 99u8, 113u8, 98u8, 101u8, 0u8, 98u8, 101u8, 106u8,\n+                        98u8, 102u8, 113u8, 98u8, 102u8, 116u8, 98u8, 102u8, 121u8, 98u8, 103u8,\n+                        0u8, 98u8, 103u8, 99u8, 98u8, 103u8, 110u8, 98u8, 103u8, 120u8, 98u8,\n+                        104u8, 98u8, 98u8, 104u8, 105u8, 98u8, 104u8, 111u8, 98u8, 106u8, 105u8,\n+                        98u8, 106u8, 106u8, 98u8, 108u8, 116u8, 98u8, 110u8, 0u8, 98u8, 111u8, 0u8,\n+                        98u8, 112u8, 121u8, 98u8, 113u8, 105u8, 98u8, 114u8, 97u8, 98u8, 114u8,\n+                        104u8, 98u8, 114u8, 120u8, 98u8, 115u8, 113u8, 98u8, 115u8, 116u8, 98u8,\n+                        116u8, 118u8, 98u8, 117u8, 97u8, 98u8, 121u8, 110u8, 99u8, 99u8, 112u8,\n+                        99u8, 101u8, 0u8, 99u8, 104u8, 109u8, 99u8, 104u8, 114u8, 99u8, 106u8,\n+                        97u8, 99u8, 106u8, 109u8, 99u8, 107u8, 98u8, 99u8, 109u8, 103u8, 99u8,\n+                        111u8, 112u8, 99u8, 114u8, 0u8, 99u8, 114u8, 104u8, 99u8, 114u8, 107u8,\n+                        99u8, 114u8, 108u8, 99u8, 115u8, 119u8, 99u8, 116u8, 100u8, 99u8, 117u8,\n+                        0u8, 99u8, 118u8, 0u8, 100u8, 97u8, 114u8, 100u8, 99u8, 99u8, 100u8, 103u8,\n+                        108u8, 100u8, 109u8, 102u8, 100u8, 111u8, 105u8, 100u8, 114u8, 104u8,\n+                        100u8, 114u8, 115u8, 100u8, 116u8, 121u8, 100u8, 118u8, 0u8, 100u8, 122u8,\n+                        0u8, 101u8, 103u8, 121u8, 101u8, 107u8, 121u8, 101u8, 108u8, 0u8, 101u8,\n+                        115u8, 103u8, 101u8, 116u8, 116u8, 102u8, 97u8, 0u8, 102u8, 105u8, 97u8,\n+                        102u8, 117u8, 98u8, 103u8, 97u8, 110u8, 103u8, 98u8, 109u8, 103u8, 98u8,\n+                        122u8, 103u8, 101u8, 122u8, 103u8, 103u8, 110u8, 103u8, 106u8, 107u8,\n+                        103u8, 106u8, 117u8, 103u8, 108u8, 107u8, 103u8, 109u8, 118u8, 103u8,\n+                        111u8, 102u8, 103u8, 111u8, 109u8, 103u8, 111u8, 110u8, 103u8, 111u8,\n+                        116u8, 103u8, 114u8, 99u8, 103u8, 114u8, 116u8, 103u8, 117u8, 0u8, 103u8,\n+                        118u8, 114u8, 103u8, 119u8, 99u8, 103u8, 119u8, 116u8, 104u8, 97u8, 107u8,\n+                        104u8, 97u8, 122u8, 104u8, 100u8, 121u8, 104u8, 101u8, 0u8, 104u8, 105u8,\n+                        0u8, 104u8, 108u8, 117u8, 104u8, 109u8, 100u8, 104u8, 110u8, 100u8, 104u8,\n+                        110u8, 101u8, 104u8, 110u8, 106u8, 104u8, 110u8, 111u8, 104u8, 111u8, 99u8,\n+                        104u8, 111u8, 106u8, 104u8, 115u8, 110u8, 104u8, 121u8, 0u8, 105u8, 105u8,\n+                        0u8, 105u8, 110u8, 104u8, 105u8, 117u8, 0u8, 105u8, 119u8, 0u8, 106u8,\n+                        97u8, 0u8, 106u8, 105u8, 0u8, 106u8, 109u8, 108u8, 107u8, 97u8, 0u8, 107u8,\n+                        97u8, 97u8, 107u8, 97u8, 119u8, 107u8, 98u8, 100u8, 107u8, 98u8, 121u8,\n+                        107u8, 100u8, 116u8, 107u8, 102u8, 114u8, 107u8, 102u8, 121u8, 107u8,\n+                        104u8, 98u8, 107u8, 104u8, 110u8, 107u8, 104u8, 116u8, 107u8, 104u8, 119u8,\n+                        107u8, 106u8, 103u8, 107u8, 107u8, 0u8, 107u8, 109u8, 0u8, 107u8, 110u8,\n+                        0u8, 107u8, 111u8, 0u8, 107u8, 111u8, 105u8, 107u8, 111u8, 107u8, 107u8,\n+                        113u8, 121u8, 107u8, 114u8, 99u8, 107u8, 114u8, 117u8, 107u8, 115u8, 0u8,\n+                        107u8, 116u8, 98u8, 107u8, 117u8, 109u8, 107u8, 118u8, 0u8, 107u8, 118u8,\n+                        120u8, 107u8, 120u8, 99u8, 107u8, 120u8, 108u8, 107u8, 120u8, 109u8, 107u8,\n+                        120u8, 112u8, 107u8, 121u8, 0u8, 107u8, 122u8, 104u8, 108u8, 97u8, 98u8,\n+                        108u8, 97u8, 100u8, 108u8, 97u8, 104u8, 108u8, 98u8, 101u8, 108u8, 99u8,\n+                        112u8, 108u8, 101u8, 112u8, 108u8, 101u8, 122u8, 108u8, 105u8, 102u8,\n+                        108u8, 105u8, 115u8, 108u8, 107u8, 105u8, 108u8, 109u8, 110u8, 108u8,\n+                        111u8, 0u8, 108u8, 114u8, 99u8, 108u8, 117u8, 122u8, 108u8, 119u8, 108u8,\n+                        108u8, 122u8, 104u8, 109u8, 97u8, 103u8, 109u8, 97u8, 105u8, 109u8, 100u8,\n+                        101u8, 109u8, 100u8, 102u8, 109u8, 100u8, 120u8, 109u8, 102u8, 97u8, 109u8,\n+                        103u8, 112u8, 109u8, 107u8, 0u8, 109u8, 107u8, 105u8, 109u8, 108u8, 0u8,\n+                        109u8, 110u8, 0u8, 109u8, 110u8, 105u8, 109u8, 110u8, 119u8, 109u8, 114u8,\n+                        0u8, 109u8, 114u8, 100u8, 109u8, 114u8, 106u8, 109u8, 114u8, 111u8, 109u8,\n+                        116u8, 114u8, 109u8, 118u8, 121u8, 109u8, 119u8, 114u8, 109u8, 119u8,\n+                        119u8, 109u8, 121u8, 0u8, 109u8, 121u8, 109u8, 109u8, 121u8, 118u8, 109u8,\n+                        121u8, 122u8, 109u8, 122u8, 110u8, 110u8, 97u8, 110u8, 110u8, 101u8, 0u8,\n+                        110u8, 101u8, 119u8, 110u8, 110u8, 112u8, 110u8, 111u8, 100u8, 110u8,\n+                        111u8, 101u8, 110u8, 111u8, 110u8, 110u8, 113u8, 111u8, 110u8, 115u8,\n+                        107u8, 110u8, 115u8, 116u8, 111u8, 106u8, 0u8, 111u8, 106u8, 115u8, 111u8,\n+                        114u8, 0u8, 111u8, 114u8, 117u8, 111u8, 115u8, 0u8, 111u8, 115u8, 97u8,\n+                        111u8, 116u8, 97u8, 111u8, 116u8, 107u8, 111u8, 117u8, 105u8, 112u8, 97u8,\n+                        0u8, 112u8, 97u8, 108u8, 112u8, 101u8, 111u8, 112u8, 104u8, 108u8, 112u8,\n+                        104u8, 110u8, 112u8, 107u8, 97u8, 112u8, 110u8, 116u8, 112u8, 112u8, 97u8,\n+                        112u8, 114u8, 97u8, 112u8, 114u8, 100u8, 112u8, 115u8, 0u8, 114u8, 97u8,\n+                        106u8, 114u8, 104u8, 103u8, 114u8, 105u8, 102u8, 114u8, 106u8, 115u8,\n+                        114u8, 107u8, 116u8, 114u8, 109u8, 116u8, 114u8, 117u8, 0u8, 114u8, 117u8,\n+                        101u8, 114u8, 121u8, 117u8, 115u8, 97u8, 0u8, 115u8, 97u8, 104u8, 115u8,\n+                        97u8, 116u8, 115u8, 97u8, 122u8, 115u8, 99u8, 107u8, 115u8, 99u8, 108u8,\n+                        115u8, 100u8, 0u8, 115u8, 100u8, 104u8, 115u8, 103u8, 97u8, 115u8, 103u8,\n+                        119u8, 115u8, 104u8, 105u8, 115u8, 104u8, 110u8, 115u8, 104u8, 117u8,\n+                        115u8, 105u8, 0u8, 115u8, 107u8, 114u8, 115u8, 109u8, 112u8, 115u8, 111u8,\n+                        103u8, 115u8, 111u8, 117u8, 115u8, 114u8, 0u8, 115u8, 114u8, 98u8, 115u8,\n+                        114u8, 120u8, 115u8, 119u8, 98u8, 115u8, 119u8, 118u8, 115u8, 121u8, 108u8,\n+                        115u8, 121u8, 114u8, 116u8, 97u8, 0u8, 116u8, 97u8, 106u8, 116u8, 99u8,\n+                        121u8, 116u8, 100u8, 100u8, 116u8, 100u8, 103u8, 116u8, 100u8, 104u8,\n+                        116u8, 101u8, 0u8, 116u8, 103u8, 0u8, 116u8, 104u8, 0u8, 116u8, 104u8,\n+                        108u8, 116u8, 104u8, 113u8, 116u8, 104u8, 114u8, 116u8, 105u8, 0u8, 116u8,\n+                        105u8, 103u8, 116u8, 107u8, 116u8, 116u8, 114u8, 119u8, 116u8, 115u8,\n+                        100u8, 116u8, 115u8, 102u8, 116u8, 115u8, 106u8, 116u8, 116u8, 0u8, 116u8,\n+                        116u8, 115u8, 116u8, 120u8, 103u8, 116u8, 120u8, 111u8, 116u8, 121u8,\n+                        118u8, 117u8, 100u8, 105u8, 117u8, 100u8, 109u8, 117u8, 103u8, 0u8, 117u8,\n+                        103u8, 97u8, 117u8, 107u8, 0u8, 117u8, 110u8, 114u8, 117u8, 110u8, 120u8,\n+                        117u8, 114u8, 0u8, 118u8, 97u8, 105u8, 119u8, 97u8, 108u8, 119u8, 98u8,\n+                        113u8, 119u8, 98u8, 114u8, 119u8, 110u8, 105u8, 119u8, 115u8, 103u8, 119u8,\n+                        116u8, 109u8, 119u8, 117u8, 117u8, 120u8, 99u8, 111u8, 120u8, 99u8, 114u8,\n+                        120u8, 108u8, 99u8, 120u8, 108u8, 100u8, 120u8, 109u8, 102u8, 120u8, 109u8,\n+                        110u8, 120u8, 109u8, 114u8, 120u8, 110u8, 97u8, 120u8, 110u8, 114u8, 120u8,\n+                        112u8, 114u8, 120u8, 115u8, 97u8, 120u8, 115u8, 114u8, 121u8, 105u8, 0u8,\n+                        121u8, 117u8, 101u8, 122u8, 100u8, 106u8, 122u8, 103u8, 104u8, 122u8,\n+                        104u8, 0u8, 122u8, 104u8, 120u8, 122u8, 107u8, 116u8,\n+                    ])\n+                },\n+                unsafe {\n+                    ::zerovec::ZeroVec::from_bytes_unchecked(&[\n+                        67u8, 121u8, 114u8, 108u8, 67u8, 121u8, 114u8, 108u8, 84u8, 105u8, 98u8,\n+                        116u8, 67u8, 121u8, 114u8, 108u8, 65u8, 118u8, 115u8, 116u8, 65u8, 114u8,\n+                        97u8, 98u8, 65u8, 104u8, 111u8, 109u8, 65u8, 114u8, 97u8, 98u8, 88u8,\n+                        115u8, 117u8, 120u8, 67u8, 121u8, 114u8, 108u8, 69u8, 116u8, 104u8, 105u8,\n+                        65u8, 114u8, 97u8, 98u8, 65u8, 114u8, 97u8, 98u8, 65u8, 114u8, 97u8, 98u8,\n+                        65u8, 114u8, 109u8, 105u8, 65u8, 114u8, 97u8, 98u8, 65u8, 114u8, 97u8,\n+                        98u8, 65u8, 114u8, 97u8, 98u8, 65u8, 114u8, 97u8, 98u8, 66u8, 101u8, 110u8,\n+                        103u8, 83u8, 103u8, 110u8, 119u8, 67u8, 121u8, 114u8, 108u8, 65u8, 114u8,\n+                        97u8, 98u8, 68u8, 101u8, 118u8, 97u8, 67u8, 121u8, 114u8, 108u8, 65u8,\n+                        114u8, 97u8, 98u8, 68u8, 101u8, 118u8, 97u8, 66u8, 97u8, 109u8, 117u8,\n+                        69u8, 116u8, 104u8, 105u8, 67u8, 121u8, 114u8, 108u8, 65u8, 114u8, 97u8,\n+                        98u8, 84u8, 97u8, 109u8, 108u8, 65u8, 114u8, 97u8, 98u8, 68u8, 101u8,\n+                        118u8, 97u8, 67u8, 121u8, 114u8, 108u8, 68u8, 101u8, 118u8, 97u8, 65u8,\n+                        114u8, 97u8, 98u8, 71u8, 114u8, 101u8, 107u8, 68u8, 101u8, 118u8, 97u8,\n+                        68u8, 101u8, 118u8, 97u8, 68u8, 101u8, 118u8, 97u8, 69u8, 116u8, 104u8,\n+                        105u8, 68u8, 101u8, 118u8, 97u8, 84u8, 97u8, 118u8, 116u8, 66u8, 101u8,\n+                        110u8, 103u8, 84u8, 105u8, 98u8, 116u8, 66u8, 101u8, 110u8, 103u8, 65u8,\n+                        114u8, 97u8, 98u8, 68u8, 101u8, 118u8, 97u8, 65u8, 114u8, 97u8, 98u8, 68u8,\n+                        101u8, 118u8, 97u8, 66u8, 97u8, 115u8, 115u8, 69u8, 116u8, 104u8, 105u8,\n+                        68u8, 101u8, 118u8, 97u8, 67u8, 121u8, 114u8, 108u8, 69u8, 116u8, 104u8,\n+                        105u8, 67u8, 97u8, 107u8, 109u8, 67u8, 121u8, 114u8, 108u8, 67u8, 121u8,\n+                        114u8, 108u8, 67u8, 104u8, 101u8, 114u8, 65u8, 114u8, 97u8, 98u8, 67u8,\n+                        104u8, 97u8, 109u8, 65u8, 114u8, 97u8, 98u8, 83u8, 111u8, 121u8, 111u8,\n+                        67u8, 111u8, 112u8, 116u8, 67u8, 97u8, 110u8, 115u8, 67u8, 121u8, 114u8,\n+                        108u8, 67u8, 97u8, 110u8, 115u8, 67u8, 97u8, 110u8, 115u8, 67u8, 97u8,\n+                        110u8, 115u8, 80u8, 97u8, 117u8, 99u8, 67u8, 121u8, 114u8, 108u8, 67u8,\n+                        121u8, 114u8, 108u8, 67u8, 121u8, 114u8, 108u8, 65u8, 114u8, 97u8, 98u8,\n+                        65u8, 114u8, 97u8, 98u8, 77u8, 101u8, 100u8, 102u8, 68u8, 101u8, 118u8,\n+                        97u8, 77u8, 111u8, 110u8, 103u8, 69u8, 116u8, 104u8, 105u8, 68u8, 101u8,\n+                        118u8, 97u8, 84u8, 104u8, 97u8, 97u8, 84u8, 105u8, 98u8, 116u8, 69u8,\n+                        103u8, 121u8, 112u8, 75u8, 97u8, 108u8, 105u8, 71u8, 114u8, 101u8, 107u8,\n+                        71u8, 111u8, 110u8, 109u8, 73u8, 116u8, 97u8, 108u8, 65u8, 114u8, 97u8,\n+                        98u8, 65u8, 114u8, 97u8, 98u8, 65u8, 114u8, 97u8, 98u8, 72u8, 97u8, 110u8,\n+                        115u8, 68u8, 101u8, 118u8, 97u8, 65u8, 114u8, 97u8, 98u8, 69u8, 116u8,\n+                        104u8, 105u8, 68u8, 101u8, 118u8, 97u8, 65u8, 114u8, 97u8, 98u8, 65u8,\n+                        114u8, 97u8, 98u8, 65u8, 114u8, 97u8, 98u8, 69u8, 116u8, 104u8, 105u8,\n+                        69u8, 116u8, 104u8, 105u8, 68u8, 101u8, 118u8, 97u8, 84u8, 101u8, 108u8,\n+                        117u8, 71u8, 111u8, 116u8, 104u8, 67u8, 112u8, 114u8, 116u8, 66u8, 101u8,\n+                        110u8, 103u8, 71u8, 117u8, 106u8, 114u8, 68u8, 101u8, 118u8, 97u8, 65u8,\n+                        114u8, 97u8, 98u8, 65u8, 114u8, 97u8, 98u8, 72u8, 97u8, 110u8, 115u8, 65u8,\n+                        114u8, 97u8, 98u8, 69u8, 116u8, 104u8, 105u8, 72u8, 101u8, 98u8, 114u8,\n+                        68u8, 101u8, 118u8, 97u8, 72u8, 108u8, 117u8, 119u8, 80u8, 108u8, 114u8,\n+                        100u8, 65u8, 114u8, 97u8, 98u8, 68u8, 101u8, 118u8, 97u8, 72u8, 109u8,\n+                        110u8, 112u8, 65u8, 114u8, 97u8, 98u8, 68u8, 101u8, 118u8, 97u8, 68u8,\n+                        101u8, 118u8, 97u8, 72u8, 97u8, 110u8, 115u8, 65u8, 114u8, 109u8, 110u8,\n+                        89u8, 105u8, 105u8, 105u8, 67u8, 121u8, 114u8, 108u8, 67u8, 97u8, 110u8,\n+                        115u8, 72u8, 101u8, 98u8, 114u8, 74u8, 112u8, 97u8, 110u8, 72u8, 101u8,\n+                        98u8, 114u8, 68u8, 101u8, 118u8, 97u8, 71u8, 101u8, 111u8, 114u8, 67u8,\n+                        121u8, 114u8, 108u8, 75u8, 97u8, 119u8, 105u8, 67u8, 121u8, 114u8, 108u8,\n+                        65u8, 114u8, 97u8, 98u8, 84u8, 104u8, 97u8, 105u8, 68u8, 101u8, 118u8,\n+                        97u8, 68u8, 101u8, 118u8, 97u8, 84u8, 97u8, 108u8, 117u8, 68u8, 101u8,\n+                        118u8, 97u8, 77u8, 121u8, 109u8, 114u8, 65u8, 114u8, 97u8, 98u8, 76u8,\n+                        97u8, 111u8, 111u8, 67u8, 121u8, 114u8, 108u8, 75u8, 104u8, 109u8, 114u8,\n+                        75u8, 110u8, 100u8, 97u8, 75u8, 111u8, 114u8, 101u8, 67u8, 121u8, 114u8,\n+                        108u8, 68u8, 101u8, 118u8, 97u8, 69u8, 116u8, 104u8, 105u8, 67u8, 121u8,\n+                        114u8, 108u8, 68u8, 101u8, 118u8, 97u8, 65u8, 114u8, 97u8, 98u8, 69u8,\n+                        116u8, 104u8, 105u8, 67u8, 121u8, 114u8, 108u8, 67u8, 121u8, 114u8, 108u8,\n+                        65u8, 114u8, 97u8, 98u8, 69u8, 116u8, 104u8, 105u8, 68u8, 101u8, 118u8,\n+                        97u8, 84u8, 104u8, 97u8, 105u8, 65u8, 114u8, 97u8, 98u8, 67u8, 121u8,\n+                        114u8, 108u8, 65u8, 114u8, 97u8, 98u8, 76u8, 105u8, 110u8, 97u8, 72u8,\n+                        101u8, 98u8, 114u8, 65u8, 114u8, 97u8, 98u8, 67u8, 121u8, 114u8, 108u8,\n+                        84u8, 104u8, 97u8, 105u8, 76u8, 101u8, 112u8, 99u8, 67u8, 121u8, 114u8,\n+                        108u8, 68u8, 101u8, 118u8, 97u8, 76u8, 105u8, 115u8, 117u8, 65u8, 114u8,\n+                        97u8, 98u8, 84u8, 101u8, 108u8, 117u8, 76u8, 97u8, 111u8, 111u8, 65u8,\n+                        114u8, 97u8, 98u8, 65u8, 114u8, 97u8, 98u8, 84u8, 104u8, 97u8, 105u8, 72u8,\n+                        97u8, 110u8, 115u8, 68u8, 101u8, 118u8, 97u8, 68u8, 101u8, 118u8, 97u8,\n+                        65u8, 114u8, 97u8, 98u8, 67u8, 121u8, 114u8, 108u8, 69u8, 116u8, 104u8,\n+                        105u8, 65u8, 114u8, 97u8, 98u8, 68u8, 101u8, 118u8, 97u8, 67u8, 121u8,\n+                        114u8, 108u8, 65u8, 114u8, 97u8, 98u8, 77u8, 108u8, 121u8, 109u8, 67u8,\n+                        121u8, 114u8, 108u8, 66u8, 101u8, 110u8, 103u8, 77u8, 121u8, 109u8, 114u8,\n+                        68u8, 101u8, 118u8, 97u8, 68u8, 101u8, 118u8, 97u8, 67u8, 121u8, 114u8,\n+                        108u8, 77u8, 114u8, 111u8, 111u8, 68u8, 101u8, 118u8, 97u8, 65u8, 114u8,\n+                        97u8, 98u8, 68u8, 101u8, 118u8, 97u8, 72u8, 109u8, 110u8, 112u8, 77u8,\n+                        121u8, 109u8, 114u8, 69u8, 116u8, 104u8, 105u8, 67u8, 121u8, 114u8, 108u8,\n+                        77u8, 97u8, 110u8, 100u8, 65u8, 114u8, 97u8, 98u8, 72u8, 97u8, 110u8,\n+                        115u8, 68u8, 101u8, 118u8, 97u8, 68u8, 101u8, 118u8, 97u8, 87u8, 99u8,\n+                        104u8, 111u8, 76u8, 97u8, 110u8, 97u8, 68u8, 101u8, 118u8, 97u8, 82u8,\n+                        117u8, 110u8, 114u8, 78u8, 107u8, 111u8, 111u8, 67u8, 97u8, 110u8, 115u8,\n+                        84u8, 110u8, 115u8, 97u8, 67u8, 97u8, 110u8, 115u8, 67u8, 97u8, 110u8,\n+                        115u8, 79u8, 114u8, 121u8, 97u8, 65u8, 114u8, 97u8, 98u8, 67u8, 121u8,\n+                        114u8, 108u8, 79u8, 115u8, 103u8, 101u8, 65u8, 114u8, 97u8, 98u8, 79u8,\n+                        114u8, 107u8, 104u8, 79u8, 117u8, 103u8, 114u8, 71u8, 117u8, 114u8, 117u8,\n+                        80u8, 104u8, 108u8, 105u8, 88u8, 112u8, 101u8, 111u8, 65u8, 114u8, 97u8,\n+                        98u8, 80u8, 104u8, 110u8, 120u8, 66u8, 114u8, 97u8, 104u8, 71u8, 114u8,\n+                        101u8, 107u8, 68u8, 101u8, 118u8, 97u8, 75u8, 104u8, 97u8, 114u8, 65u8,\n+                        114u8, 97u8, 98u8, 65u8, 114u8, 97u8, 98u8, 68u8, 101u8, 118u8, 97u8, 82u8,\n+                        111u8, 104u8, 103u8, 84u8, 102u8, 110u8, 103u8, 68u8, 101u8, 118u8, 97u8,\n+                        66u8, 101u8, 110u8, 103u8, 65u8, 114u8, 97u8, 98u8, 67u8, 121u8, 114u8,\n+                        108u8, 67u8, 121u8, 114u8, 108u8, 75u8, 97u8, 110u8, 97u8, 68u8, 101u8,\n+                        118u8, 97u8, 67u8, 121u8, 114u8, 108u8, 79u8, 108u8, 99u8, 107u8, 83u8,\n+                        97u8, 117u8, 114u8, 68u8, 101u8, 118u8, 97u8, 65u8, 114u8, 97u8, 98u8,\n+                        65u8, 114u8, 97u8, 98u8, 65u8, 114u8, 97u8, 98u8, 79u8, 103u8, 97u8, 109u8,\n+                        69u8, 116u8, 104u8, 105u8, 84u8, 102u8, 110u8, 103u8, 77u8, 121u8, 109u8,\n+                        114u8, 65u8, 114u8, 97u8, 98u8, 83u8, 105u8, 110u8, 104u8, 65u8, 114u8,\n+                        97u8, 98u8, 83u8, 97u8, 109u8, 114u8, 83u8, 111u8, 103u8, 100u8, 84u8,\n+                        104u8, 97u8, 105u8, 67u8, 121u8, 114u8, 108u8, 83u8, 111u8, 114u8, 97u8,\n+                        68u8, 101u8, 118u8, 97u8, 65u8, 114u8, 97u8, 98u8, 68u8, 101u8, 118u8,\n+                        97u8, 66u8, 101u8, 110u8, 103u8, 83u8, 121u8, 114u8, 99u8, 84u8, 97u8,\n+                        109u8, 108u8, 68u8, 101u8, 118u8, 97u8, 75u8, 110u8, 100u8, 97u8, 84u8,\n+                        97u8, 108u8, 101u8, 68u8, 101u8, 118u8, 97u8, 68u8, 101u8, 118u8, 97u8,\n+                        84u8, 101u8, 108u8, 117u8, 67u8, 121u8, 114u8, 108u8, 84u8, 104u8, 97u8,\n+                        105u8, 68u8, 101u8, 118u8, 97u8, 68u8, 101u8, 118u8, 97u8, 68u8, 101u8,\n+                        118u8, 97u8, 69u8, 116u8, 104u8, 105u8, 69u8, 116u8, 104u8, 105u8, 68u8,\n+                        101u8, 118u8, 97u8, 65u8, 114u8, 97u8, 98u8, 71u8, 114u8, 101u8, 107u8,\n+                        68u8, 101u8, 118u8, 97u8, 84u8, 105u8, 98u8, 116u8, 67u8, 121u8, 114u8,\n+                        108u8, 84u8, 104u8, 97u8, 105u8, 84u8, 97u8, 110u8, 103u8, 84u8, 111u8,\n+                        116u8, 111u8, 67u8, 121u8, 114u8, 108u8, 65u8, 103u8, 104u8, 98u8, 67u8,\n+                        121u8, 114u8, 108u8, 65u8, 114u8, 97u8, 98u8, 85u8, 103u8, 97u8, 114u8,\n+                        67u8, 121u8, 114u8, 108u8, 66u8, 101u8, 110u8, 103u8, 66u8, 101u8, 110u8,\n+                        103u8, 65u8, 114u8, 97u8, 98u8, 86u8, 97u8, 105u8, 105u8, 69u8, 116u8,\n+                        104u8, 105u8, 84u8, 101u8, 108u8, 117u8, 68u8, 101u8, 118u8, 97u8, 65u8,\n+                        114u8, 97u8, 98u8, 71u8, 111u8, 110u8, 103u8, 68u8, 101u8, 118u8, 97u8,\n+                        72u8, 97u8, 110u8, 115u8, 67u8, 104u8, 114u8, 115u8, 67u8, 97u8, 114u8,\n+                        105u8, 76u8, 121u8, 99u8, 105u8, 76u8, 121u8, 100u8, 105u8, 71u8, 101u8,\n+                        111u8, 114u8, 77u8, 97u8, 110u8, 105u8, 77u8, 101u8, 114u8, 99u8, 78u8,\n+                        97u8, 114u8, 98u8, 68u8, 101u8, 118u8, 97u8, 80u8, 114u8, 116u8, 105u8,\n+                        83u8, 97u8, 114u8, 98u8, 68u8, 101u8, 118u8, 97u8, 72u8, 101u8, 98u8,\n+                        114u8, 72u8, 97u8, 110u8, 116u8, 65u8, 114u8, 97u8, 98u8, 84u8, 102u8,\n+                        110u8, 103u8, 72u8, 97u8, 110u8, 115u8, 78u8, 115u8, 104u8, 117u8, 75u8,\n+                        105u8, 116u8, 115u8,\n+                    ])\n+                },\n+            )\n+        },\n+        lr2s: unsafe {\n+            #[allow(unused_unsafe)]\n+            ::zerovec::ZeroMap2d::from_parts_unchecked(\n+                unsafe {\n+                    ::zerovec::ZeroVec::from_bytes_unchecked(&[\n+                        97u8, 122u8, 0u8, 104u8, 97u8, 0u8, 107u8, 107u8, 0u8, 107u8, 117u8, 0u8,\n+                        107u8, 121u8, 0u8, 109u8, 97u8, 110u8, 109u8, 110u8, 0u8, 109u8, 115u8,\n+                        0u8, 112u8, 97u8, 0u8, 114u8, 105u8, 102u8, 115u8, 100u8, 0u8, 115u8,\n+                        114u8, 0u8, 116u8, 103u8, 0u8, 117u8, 103u8, 0u8, 117u8, 110u8, 114u8,\n+                        117u8, 122u8, 0u8, 121u8, 117u8, 101u8, 122u8, 104u8, 0u8,\n+                    ])\n+                },\n+                unsafe {\n+                    ::zerovec::ZeroVec::from_bytes_unchecked(&[\n+                        3u8, 0u8, 0u8, 0u8, 5u8, 0u8, 0u8, 0u8, 9u8, 0u8, 0u8, 0u8, 10u8, 0u8, 0u8,\n+                        0u8, 12u8, 0u8, 0u8, 0u8, 13u8, 0u8, 0u8, 0u8, 14u8, 0u8, 0u8, 0u8, 15u8,\n+                        0u8, 0u8, 0u8, 16u8, 0u8, 0u8, 0u8, 17u8, 0u8, 0u8, 0u8, 18u8, 0u8, 0u8,\n+                        0u8, 22u8, 0u8, 0u8, 0u8, 23u8, 0u8, 0u8, 0u8, 25u8, 0u8, 0u8, 0u8, 26u8,\n+                        0u8, 0u8, 0u8, 28u8, 0u8, 0u8, 0u8, 29u8, 0u8, 0u8, 0u8, 44u8, 0u8, 0u8,\n+                        0u8,\n+                    ])\n+                },\n+                unsafe {\n+                    ::zerovec::ZeroVec::from_bytes_unchecked(&[\n+                        73u8, 81u8, 0u8, 73u8, 82u8, 0u8, 82u8, 85u8, 0u8, 67u8, 77u8, 0u8, 83u8,\n+                        68u8, 0u8, 65u8, 70u8, 0u8, 67u8, 78u8, 0u8, 73u8, 82u8, 0u8, 77u8, 78u8,\n+                        0u8, 76u8, 66u8, 0u8, 67u8, 78u8, 0u8, 84u8, 82u8, 0u8, 71u8, 78u8, 0u8,\n+                        67u8, 78u8, 0u8, 67u8, 67u8, 0u8, 80u8, 75u8, 0u8, 78u8, 76u8, 0u8, 73u8,\n+                        78u8, 0u8, 77u8, 69u8, 0u8, 82u8, 79u8, 0u8, 82u8, 85u8, 0u8, 84u8, 82u8,\n+                        0u8, 80u8, 75u8, 0u8, 75u8, 90u8, 0u8, 77u8, 78u8, 0u8, 78u8, 80u8, 0u8,\n+                        65u8, 70u8, 0u8, 67u8, 78u8, 0u8, 67u8, 78u8, 0u8, 65u8, 85u8, 0u8, 66u8,\n+                        78u8, 0u8, 71u8, 66u8, 0u8, 71u8, 70u8, 0u8, 72u8, 75u8, 0u8, 73u8, 68u8,\n+                        0u8, 77u8, 79u8, 0u8, 80u8, 65u8, 0u8, 80u8, 70u8, 0u8, 80u8, 72u8, 0u8,\n+                        83u8, 82u8, 0u8, 84u8, 72u8, 0u8, 84u8, 87u8, 0u8, 85u8, 83u8, 0u8, 86u8,\n+                        78u8, 0u8,\n+                    ])\n+                },\n+                unsafe {\n+                    ::zerovec::ZeroVec::from_bytes_unchecked(&[\n+                        65u8, 114u8, 97u8, 98u8, 65u8, 114u8, 97u8, 98u8, 67u8, 121u8, 114u8,\n+                        108u8, 65u8, 114u8, 97u8, 98u8, 65u8, 114u8, 97u8, 98u8, 65u8, 114u8, 97u8,\n+                        98u8, 65u8, 114u8, 97u8, 98u8, 65u8, 114u8, 97u8, 98u8, 65u8, 114u8, 97u8,\n+                        98u8, 65u8, 114u8, 97u8, 98u8, 65u8, 114u8, 97u8, 98u8, 76u8, 97u8, 116u8,\n+                        110u8, 78u8, 107u8, 111u8, 111u8, 77u8, 111u8, 110u8, 103u8, 65u8, 114u8,\n+                        97u8, 98u8, 65u8, 114u8, 97u8, 98u8, 76u8, 97u8, 116u8, 110u8, 68u8, 101u8,\n+                        118u8, 97u8, 76u8, 97u8, 116u8, 110u8, 76u8, 97u8, 116u8, 110u8, 76u8,\n+                        97u8, 116u8, 110u8, 76u8, 97u8, 116u8, 110u8, 65u8, 114u8, 97u8, 98u8,\n+                        67u8, 121u8, 114u8, 108u8, 67u8, 121u8, 114u8, 108u8, 68u8, 101u8, 118u8,\n+                        97u8, 65u8, 114u8, 97u8, 98u8, 67u8, 121u8, 114u8, 108u8, 72u8, 97u8,\n+                        110u8, 115u8, 72u8, 97u8, 110u8, 116u8, 72u8, 97u8, 110u8, 116u8, 72u8,\n+                        97u8, 110u8, 116u8, 72u8, 97u8, 110u8, 116u8, 72u8, 97u8, 110u8, 116u8,\n+                        72u8, 97u8, 110u8, 116u8, 72u8, 97u8, 110u8, 116u8, 72u8, 97u8, 110u8,\n+                        116u8, 72u8, 97u8, 110u8, 116u8, 72u8, 97u8, 110u8, 116u8, 72u8, 97u8,\n+                        110u8, 116u8, 72u8, 97u8, 110u8, 116u8, 72u8, 97u8, 110u8, 116u8, 72u8,\n+                        97u8, 110u8, 116u8, 72u8, 97u8, 110u8, 116u8,\n+                    ])\n+                },\n+            )\n+        },\n+        l2r: unsafe {\n+            #[allow(unused_unsafe)]\n+            ::zerovec::ZeroMap::from_parts_unchecked(\n+                unsafe {\n+                    ::zerovec::ZeroVec::from_bytes_unchecked(&[\n+                        97u8, 97u8, 0u8, 97u8, 98u8, 0u8, 97u8, 98u8, 114u8, 97u8, 99u8, 101u8,\n+                        97u8, 99u8, 104u8, 97u8, 100u8, 97u8, 97u8, 100u8, 112u8, 97u8, 100u8,\n+                        121u8, 97u8, 101u8, 0u8, 97u8, 101u8, 98u8, 97u8, 102u8, 0u8, 97u8, 103u8,\n+                        113u8, 97u8, 104u8, 111u8, 97u8, 106u8, 116u8, 97u8, 107u8, 0u8, 97u8,\n+                        107u8, 107u8, 97u8, 108u8, 110u8, 97u8, 108u8, 116u8, 97u8, 109u8, 0u8,\n+                        97u8, 109u8, 111u8, 97u8, 110u8, 0u8, 97u8, 110u8, 110u8, 97u8, 111u8,\n+                        122u8, 97u8, 112u8, 100u8, 97u8, 114u8, 0u8, 97u8, 114u8, 99u8, 97u8,\n+                        114u8, 110u8, 97u8, 114u8, 111u8, 97u8, 114u8, 113u8, 97u8, 114u8, 115u8,\n+                        97u8, 114u8, 121u8, 97u8, 114u8, 122u8, 97u8, 115u8, 0u8, 97u8, 115u8,\n+                        97u8, 97u8, 115u8, 101u8, 97u8, 115u8, 116u8, 97u8, 116u8, 106u8, 97u8,\n+                        118u8, 0u8, 97u8, 119u8, 97u8, 97u8, 121u8, 0u8, 97u8, 122u8, 0u8, 98u8,\n+                        97u8, 0u8, 98u8, 97u8, 108u8, 98u8, 97u8, 110u8, 98u8, 97u8, 112u8, 98u8,\n+                        97u8, 114u8, 98u8, 97u8, 115u8, 98u8, 97u8, 120u8, 98u8, 98u8, 99u8, 98u8,\n+                        98u8, 106u8, 98u8, 99u8, 105u8, 98u8, 101u8, 0u8, 98u8, 101u8, 106u8, 98u8,\n+                        101u8, 109u8, 98u8, 101u8, 119u8, 98u8, 101u8, 122u8, 98u8, 102u8, 100u8,\n+                        98u8, 102u8, 113u8, 98u8, 102u8, 116u8, 98u8, 102u8, 121u8, 98u8, 103u8,\n+                        0u8, 98u8, 103u8, 99u8, 98u8, 103u8, 110u8, 98u8, 103u8, 120u8, 98u8,\n+                        104u8, 98u8, 98u8, 104u8, 105u8, 98u8, 104u8, 111u8, 98u8, 105u8, 0u8,\n+                        98u8, 105u8, 107u8, 98u8, 105u8, 110u8, 98u8, 106u8, 106u8, 98u8, 106u8,\n+                        110u8, 98u8, 106u8, 116u8, 98u8, 107u8, 109u8, 98u8, 107u8, 117u8, 98u8,\n+                        108u8, 97u8, 98u8, 108u8, 103u8, 98u8, 108u8, 116u8, 98u8, 109u8, 0u8,\n+                        98u8, 109u8, 113u8, 98u8, 110u8, 0u8, 98u8, 111u8, 0u8, 98u8, 112u8, 121u8,\n+                        98u8, 113u8, 105u8, 98u8, 113u8, 118u8, 98u8, 114u8, 0u8, 98u8, 114u8,\n+                        97u8, 98u8, 114u8, 104u8, 98u8, 114u8, 120u8, 98u8, 115u8, 0u8, 98u8,\n+                        115u8, 113u8, 98u8, 115u8, 115u8, 98u8, 116u8, 111u8, 98u8, 116u8, 118u8,\n+                        98u8, 117u8, 97u8, 98u8, 117u8, 99u8, 98u8, 117u8, 103u8, 98u8, 117u8,\n+                        109u8, 98u8, 118u8, 98u8, 98u8, 121u8, 110u8, 98u8, 121u8, 118u8, 98u8,\n+                        122u8, 101u8, 99u8, 97u8, 0u8, 99u8, 97u8, 100u8, 99u8, 99u8, 104u8, 99u8,\n+                        99u8, 112u8, 99u8, 101u8, 0u8, 99u8, 101u8, 98u8, 99u8, 103u8, 103u8, 99u8,\n+                        104u8, 0u8, 99u8, 104u8, 107u8, 99u8, 104u8, 109u8, 99u8, 104u8, 111u8,\n+                        99u8, 104u8, 112u8, 99u8, 104u8, 114u8, 99u8, 105u8, 99u8, 99u8, 106u8,\n+                        97u8, 99u8, 106u8, 109u8, 99u8, 107u8, 98u8, 99u8, 108u8, 99u8, 99u8,\n+                        109u8, 103u8, 99u8, 111u8, 0u8, 99u8, 111u8, 112u8, 99u8, 112u8, 115u8,\n+                        99u8, 114u8, 0u8, 99u8, 114u8, 103u8, 99u8, 114u8, 104u8, 99u8, 114u8,\n+                        107u8, 99u8, 114u8, 108u8, 99u8, 114u8, 115u8, 99u8, 115u8, 0u8, 99u8,\n+                        115u8, 98u8, 99u8, 115u8, 119u8, 99u8, 116u8, 100u8, 99u8, 117u8, 0u8,\n+                        99u8, 118u8, 0u8, 99u8, 121u8, 0u8, 100u8, 97u8, 0u8, 100u8, 97u8, 102u8,\n+                        100u8, 97u8, 107u8, 100u8, 97u8, 114u8, 100u8, 97u8, 118u8, 100u8, 99u8,\n+                        99u8, 100u8, 101u8, 0u8, 100u8, 101u8, 110u8, 100u8, 103u8, 114u8, 100u8,\n+                        106u8, 101u8, 100u8, 109u8, 102u8, 100u8, 110u8, 106u8, 100u8, 111u8,\n+                        105u8, 100u8, 114u8, 104u8, 100u8, 115u8, 98u8, 100u8, 116u8, 109u8, 100u8,\n+                        116u8, 112u8, 100u8, 116u8, 121u8, 100u8, 117u8, 97u8, 100u8, 118u8, 0u8,\n+                        100u8, 121u8, 111u8, 100u8, 121u8, 117u8, 100u8, 122u8, 0u8, 101u8, 98u8,\n+                        117u8, 101u8, 101u8, 0u8, 101u8, 102u8, 105u8, 101u8, 103u8, 108u8, 101u8,\n+                        103u8, 121u8, 101u8, 107u8, 121u8, 101u8, 108u8, 0u8, 101u8, 110u8, 0u8,\n+                        101u8, 111u8, 0u8, 101u8, 115u8, 0u8, 101u8, 115u8, 103u8, 101u8, 115u8,\n+                        117u8, 101u8, 116u8, 0u8, 101u8, 116u8, 116u8, 101u8, 117u8, 0u8, 101u8,\n+                        119u8, 111u8, 101u8, 120u8, 116u8, 102u8, 97u8, 0u8, 102u8, 97u8, 110u8,\n+                        102u8, 102u8, 0u8, 102u8, 102u8, 109u8, 102u8, 105u8, 0u8, 102u8, 105u8,\n+                        97u8, 102u8, 105u8, 108u8, 102u8, 105u8, 116u8, 102u8, 106u8, 0u8, 102u8,\n+                        111u8, 0u8, 102u8, 111u8, 110u8, 102u8, 114u8, 0u8, 102u8, 114u8, 99u8,\n+                        102u8, 114u8, 112u8, 102u8, 114u8, 114u8, 102u8, 114u8, 115u8, 102u8,\n+                        117u8, 98u8, 102u8, 117u8, 100u8, 102u8, 117u8, 102u8, 102u8, 117u8, 113u8,\n+                        102u8, 117u8, 114u8, 102u8, 117u8, 118u8, 102u8, 118u8, 114u8, 102u8,\n+                        121u8, 0u8, 103u8, 97u8, 0u8, 103u8, 97u8, 97u8, 103u8, 97u8, 103u8, 103u8,\n+                        97u8, 110u8, 103u8, 97u8, 121u8, 103u8, 98u8, 109u8, 103u8, 98u8, 122u8,\n+                        103u8, 99u8, 114u8, 103u8, 100u8, 0u8, 103u8, 101u8, 122u8, 103u8, 103u8,\n+                        110u8, 103u8, 105u8, 108u8, 103u8, 106u8, 107u8, 103u8, 106u8, 117u8,\n+                        103u8, 108u8, 0u8, 103u8, 108u8, 107u8, 103u8, 110u8, 0u8, 103u8, 111u8,\n+                        109u8, 103u8, 111u8, 110u8, 103u8, 111u8, 114u8, 103u8, 111u8, 115u8,\n+                        103u8, 111u8, 116u8, 103u8, 114u8, 99u8, 103u8, 114u8, 116u8, 103u8, 115u8,\n+                        119u8, 103u8, 117u8, 0u8, 103u8, 117u8, 98u8, 103u8, 117u8, 99u8, 103u8,\n+                        117u8, 114u8, 103u8, 117u8, 122u8, 103u8, 118u8, 0u8, 103u8, 118u8, 114u8,\n+                        103u8, 119u8, 105u8, 104u8, 97u8, 0u8, 104u8, 97u8, 107u8, 104u8, 97u8,\n+                        119u8, 104u8, 97u8, 122u8, 104u8, 101u8, 0u8, 104u8, 105u8, 0u8, 104u8,\n+                        105u8, 102u8, 104u8, 105u8, 108u8, 104u8, 108u8, 117u8, 104u8, 109u8,\n+                        100u8, 104u8, 110u8, 100u8, 104u8, 110u8, 101u8, 104u8, 110u8, 106u8,\n+                        104u8, 110u8, 110u8, 104u8, 110u8, 111u8, 104u8, 111u8, 0u8, 104u8, 111u8,\n+                        99u8, 104u8, 111u8, 106u8, 104u8, 114u8, 0u8, 104u8, 115u8, 98u8, 104u8,\n+                        115u8, 110u8, 104u8, 116u8, 0u8, 104u8, 117u8, 0u8, 104u8, 117u8, 114u8,\n+                        104u8, 121u8, 0u8, 104u8, 122u8, 0u8, 105u8, 97u8, 0u8, 105u8, 98u8, 97u8,\n+                        105u8, 98u8, 98u8, 105u8, 100u8, 0u8, 105u8, 102u8, 101u8, 105u8, 103u8,\n+                        0u8, 105u8, 105u8, 0u8, 105u8, 107u8, 0u8, 105u8, 108u8, 111u8, 105u8,\n+                        110u8, 0u8, 105u8, 110u8, 104u8, 105u8, 111u8, 0u8, 105u8, 115u8, 0u8,\n+                        105u8, 116u8, 0u8, 105u8, 117u8, 0u8, 105u8, 119u8, 0u8, 105u8, 122u8,\n+                        104u8, 106u8, 97u8, 0u8, 106u8, 97u8, 109u8, 106u8, 98u8, 111u8, 106u8,\n+                        103u8, 111u8, 106u8, 105u8, 0u8, 106u8, 109u8, 99u8, 106u8, 109u8, 108u8,\n+                        106u8, 117u8, 116u8, 106u8, 118u8, 0u8, 106u8, 119u8, 0u8, 107u8, 97u8,\n+                        0u8, 107u8, 97u8, 97u8, 107u8, 97u8, 98u8, 107u8, 97u8, 99u8, 107u8, 97u8,\n+                        106u8, 107u8, 97u8, 109u8, 107u8, 97u8, 111u8, 107u8, 97u8, 119u8, 107u8,\n+                        98u8, 100u8, 107u8, 98u8, 121u8, 107u8, 99u8, 103u8, 107u8, 99u8, 107u8,\n+                        107u8, 100u8, 101u8, 107u8, 100u8, 104u8, 107u8, 100u8, 116u8, 107u8,\n+                        101u8, 97u8, 107u8, 101u8, 110u8, 107u8, 102u8, 111u8, 107u8, 102u8, 114u8,\n+                        107u8, 102u8, 121u8, 107u8, 103u8, 0u8, 107u8, 103u8, 101u8, 107u8, 103u8,\n+                        112u8, 107u8, 104u8, 97u8, 107u8, 104u8, 98u8, 107u8, 104u8, 110u8, 107u8,\n+                        104u8, 113u8, 107u8, 104u8, 116u8, 107u8, 104u8, 119u8, 107u8, 105u8, 0u8,\n+                        107u8, 105u8, 117u8, 107u8, 106u8, 0u8, 107u8, 106u8, 103u8, 107u8, 107u8,\n+                        0u8, 107u8, 107u8, 106u8, 107u8, 108u8, 0u8, 107u8, 108u8, 110u8, 107u8,\n+                        109u8, 0u8, 107u8, 109u8, 98u8, 107u8, 110u8, 0u8, 107u8, 110u8, 102u8,\n+                        107u8, 111u8, 0u8, 107u8, 111u8, 105u8, 107u8, 111u8, 107u8, 107u8, 111u8,\n+                        115u8, 107u8, 112u8, 101u8, 107u8, 114u8, 99u8, 107u8, 114u8, 105u8, 107u8,\n+                        114u8, 106u8, 107u8, 114u8, 108u8, 107u8, 114u8, 117u8, 107u8, 115u8, 0u8,\n+                        107u8, 115u8, 98u8, 107u8, 115u8, 102u8, 107u8, 115u8, 104u8, 107u8, 116u8,\n+                        114u8, 107u8, 117u8, 0u8, 107u8, 117u8, 109u8, 107u8, 118u8, 0u8, 107u8,\n+                        118u8, 114u8, 107u8, 118u8, 120u8, 107u8, 119u8, 0u8, 107u8, 119u8, 107u8,\n+                        107u8, 120u8, 108u8, 107u8, 120u8, 109u8, 107u8, 120u8, 112u8, 107u8,\n+                        121u8, 0u8, 107u8, 122u8, 106u8, 107u8, 122u8, 116u8, 108u8, 97u8, 0u8,\n+                        108u8, 97u8, 98u8, 108u8, 97u8, 100u8, 108u8, 97u8, 103u8, 108u8, 97u8,\n+                        104u8, 108u8, 97u8, 106u8, 108u8, 98u8, 0u8, 108u8, 98u8, 101u8, 108u8,\n+                        98u8, 119u8, 108u8, 99u8, 112u8, 108u8, 101u8, 112u8, 108u8, 101u8, 122u8,\n+                        108u8, 103u8, 0u8, 108u8, 105u8, 0u8, 108u8, 105u8, 102u8, 108u8, 105u8,\n+                        106u8, 108u8, 105u8, 108u8, 108u8, 105u8, 115u8, 108u8, 106u8, 112u8,\n+                        108u8, 107u8, 105u8, 108u8, 107u8, 116u8, 108u8, 109u8, 110u8, 108u8,\n+                        109u8, 111u8, 108u8, 110u8, 0u8, 108u8, 111u8, 0u8, 108u8, 111u8, 108u8,\n+                        108u8, 111u8, 122u8, 108u8, 114u8, 99u8, 108u8, 116u8, 0u8, 108u8, 116u8,\n+                        103u8, 108u8, 117u8, 0u8, 108u8, 117u8, 97u8, 108u8, 117u8, 111u8, 108u8,\n+                        117u8, 121u8, 108u8, 117u8, 122u8, 108u8, 118u8, 0u8, 108u8, 119u8, 108u8,\n+                        108u8, 122u8, 104u8, 108u8, 122u8, 122u8, 109u8, 97u8, 100u8, 109u8, 97u8,\n+                        102u8, 109u8, 97u8, 103u8, 109u8, 97u8, 105u8, 109u8, 97u8, 107u8, 109u8,\n+                        97u8, 110u8, 109u8, 97u8, 115u8, 109u8, 97u8, 122u8, 109u8, 100u8, 102u8,\n+                        109u8, 100u8, 104u8, 109u8, 100u8, 114u8, 109u8, 101u8, 110u8, 109u8,\n+                        101u8, 114u8, 109u8, 102u8, 97u8, 109u8, 102u8, 101u8, 109u8, 103u8, 0u8,\n+                        109u8, 103u8, 104u8, 109u8, 103u8, 111u8, 109u8, 103u8, 112u8, 109u8,\n+                        103u8, 121u8, 109u8, 104u8, 0u8, 109u8, 105u8, 0u8, 109u8, 105u8, 99u8,\n+                        109u8, 105u8, 110u8, 109u8, 107u8, 0u8, 109u8, 108u8, 0u8, 109u8, 108u8,\n+                        115u8, 109u8, 110u8, 0u8, 109u8, 110u8, 105u8, 109u8, 110u8, 119u8, 109u8,\n+                        111u8, 0u8, 109u8, 111u8, 101u8, 109u8, 111u8, 104u8, 109u8, 111u8, 115u8,\n+                        109u8, 114u8, 0u8, 109u8, 114u8, 100u8, 109u8, 114u8, 106u8, 109u8, 114u8,\n+                        111u8, 109u8, 115u8, 0u8, 109u8, 116u8, 0u8, 109u8, 116u8, 114u8, 109u8,\n+                        117u8, 97u8, 109u8, 117u8, 115u8, 109u8, 118u8, 121u8, 109u8, 119u8, 107u8,\n+                        109u8, 119u8, 114u8, 109u8, 119u8, 118u8, 109u8, 119u8, 119u8, 109u8,\n+                        120u8, 99u8, 109u8, 121u8, 0u8, 109u8, 121u8, 118u8, 109u8, 121u8, 120u8,\n+                        109u8, 121u8, 122u8, 109u8, 122u8, 110u8, 110u8, 97u8, 0u8, 110u8, 97u8,\n+                        110u8, 110u8, 97u8, 112u8, 110u8, 97u8, 113u8, 110u8, 98u8, 0u8, 110u8,\n+                        99u8, 104u8, 110u8, 100u8, 0u8, 110u8, 100u8, 99u8, 110u8, 100u8, 115u8,\n+                        110u8, 101u8, 0u8, 110u8, 101u8, 119u8, 110u8, 103u8, 0u8, 110u8, 103u8,\n+                        108u8, 110u8, 104u8, 101u8, 110u8, 104u8, 119u8, 110u8, 105u8, 106u8,\n+                        110u8, 105u8, 117u8, 110u8, 106u8, 111u8, 110u8, 108u8, 0u8, 110u8, 109u8,\n+                        103u8, 110u8, 110u8, 0u8, 110u8, 110u8, 104u8, 110u8, 110u8, 112u8, 110u8,\n+                        111u8, 0u8, 110u8, 111u8, 100u8, 110u8, 111u8, 101u8, 110u8, 111u8, 110u8,\n+                        110u8, 113u8, 111u8, 110u8, 114u8, 0u8, 110u8, 115u8, 107u8, 110u8, 115u8,\n+                        111u8, 110u8, 115u8, 116u8, 110u8, 117u8, 115u8, 110u8, 118u8, 0u8, 110u8,\n+                        120u8, 113u8, 110u8, 121u8, 0u8, 110u8, 121u8, 109u8, 110u8, 121u8, 110u8,\n+                        110u8, 122u8, 105u8, 111u8, 99u8, 0u8, 111u8, 106u8, 0u8, 111u8, 106u8,\n+                        115u8, 111u8, 107u8, 97u8, 111u8, 109u8, 0u8, 111u8, 114u8, 0u8, 111u8,\n+                        115u8, 0u8, 111u8, 115u8, 97u8, 111u8, 116u8, 107u8, 111u8, 117u8, 105u8,\n+                        112u8, 97u8, 0u8, 112u8, 97u8, 103u8, 112u8, 97u8, 108u8, 112u8, 97u8,\n+                        109u8, 112u8, 97u8, 112u8, 112u8, 97u8, 117u8, 112u8, 99u8, 100u8, 112u8,\n+                        99u8, 109u8, 112u8, 100u8, 99u8, 112u8, 100u8, 116u8, 112u8, 101u8, 111u8,\n+                        112u8, 102u8, 108u8, 112u8, 104u8, 110u8, 112u8, 105u8, 115u8, 112u8,\n+                        107u8, 97u8, 112u8, 107u8, 111u8, 112u8, 108u8, 0u8, 112u8, 109u8, 115u8,\n+                        112u8, 110u8, 116u8, 112u8, 111u8, 110u8, 112u8, 112u8, 97u8, 112u8, 113u8,\n+                        109u8, 112u8, 114u8, 97u8, 112u8, 114u8, 100u8, 112u8, 114u8, 103u8, 112u8,\n+                        115u8, 0u8, 112u8, 116u8, 0u8, 112u8, 117u8, 117u8, 113u8, 117u8, 0u8,\n+                        113u8, 117u8, 99u8, 113u8, 117u8, 103u8, 114u8, 97u8, 106u8, 114u8, 99u8,\n+                        102u8, 114u8, 101u8, 106u8, 114u8, 103u8, 110u8, 114u8, 104u8, 103u8,\n+                        114u8, 105u8, 97u8, 114u8, 105u8, 102u8, 114u8, 106u8, 115u8, 114u8, 107u8,\n+                        116u8, 114u8, 109u8, 0u8, 114u8, 109u8, 102u8, 114u8, 109u8, 111u8, 114u8,\n+                        109u8, 116u8, 114u8, 109u8, 117u8, 114u8, 110u8, 0u8, 114u8, 110u8, 103u8,\n+                        114u8, 111u8, 0u8, 114u8, 111u8, 98u8, 114u8, 111u8, 102u8, 114u8, 116u8,\n+                        109u8, 114u8, 117u8, 0u8, 114u8, 117u8, 101u8, 114u8, 117u8, 103u8, 114u8,\n+                        119u8, 0u8, 114u8, 119u8, 107u8, 114u8, 121u8, 117u8, 115u8, 97u8, 0u8,\n+                        115u8, 97u8, 102u8, 115u8, 97u8, 104u8, 115u8, 97u8, 113u8, 115u8, 97u8,\n+                        115u8, 115u8, 97u8, 116u8, 115u8, 97u8, 118u8, 115u8, 97u8, 122u8, 115u8,\n+                        98u8, 112u8, 115u8, 99u8, 0u8, 115u8, 99u8, 107u8, 115u8, 99u8, 110u8,\n+                        115u8, 99u8, 111u8, 115u8, 100u8, 0u8, 115u8, 100u8, 99u8, 115u8, 100u8,\n+                        104u8, 115u8, 101u8, 0u8, 115u8, 101u8, 102u8, 115u8, 101u8, 104u8, 115u8,\n+                        101u8, 105u8, 115u8, 101u8, 115u8, 115u8, 103u8, 0u8, 115u8, 103u8, 97u8,\n+                        115u8, 103u8, 115u8, 115u8, 104u8, 105u8, 115u8, 104u8, 110u8, 115u8,\n+                        105u8, 0u8, 115u8, 105u8, 100u8, 115u8, 107u8, 0u8, 115u8, 107u8, 114u8,\n+                        115u8, 108u8, 0u8, 115u8, 108u8, 105u8, 115u8, 108u8, 121u8, 115u8, 109u8,\n+                        0u8, 115u8, 109u8, 97u8, 115u8, 109u8, 100u8, 115u8, 109u8, 106u8, 115u8,\n+                        109u8, 110u8, 115u8, 109u8, 112u8, 115u8, 109u8, 115u8, 115u8, 110u8, 0u8,\n+                        115u8, 110u8, 98u8, 115u8, 110u8, 107u8, 115u8, 111u8, 0u8, 115u8, 111u8,\n+                        103u8, 115u8, 111u8, 117u8, 115u8, 113u8, 0u8, 115u8, 114u8, 0u8, 115u8,\n+                        114u8, 98u8, 115u8, 114u8, 110u8, 115u8, 114u8, 114u8, 115u8, 114u8, 120u8,\n+                        115u8, 115u8, 0u8, 115u8, 115u8, 121u8, 115u8, 116u8, 0u8, 115u8, 116u8,\n+                        113u8, 115u8, 117u8, 0u8, 115u8, 117u8, 107u8, 115u8, 117u8, 115u8, 115u8,\n+                        118u8, 0u8, 115u8, 119u8, 0u8, 115u8, 119u8, 98u8, 115u8, 119u8, 99u8,\n+                        115u8, 119u8, 103u8, 115u8, 119u8, 118u8, 115u8, 120u8, 110u8, 115u8,\n+                        121u8, 108u8, 115u8, 121u8, 114u8, 115u8, 122u8, 108u8, 116u8, 97u8, 0u8,\n+                        116u8, 97u8, 106u8, 116u8, 98u8, 119u8, 116u8, 99u8, 121u8, 116u8, 100u8,\n+                        100u8, 116u8, 100u8, 103u8, 116u8, 100u8, 104u8, 116u8, 100u8, 117u8,\n+                        116u8, 101u8, 0u8, 116u8, 101u8, 109u8, 116u8, 101u8, 111u8, 116u8, 101u8,\n+                        116u8, 116u8, 103u8, 0u8, 116u8, 104u8, 0u8, 116u8, 104u8, 108u8, 116u8,\n+                        104u8, 113u8, 116u8, 104u8, 114u8, 116u8, 105u8, 0u8, 116u8, 105u8, 103u8,\n+                        116u8, 105u8, 118u8, 116u8, 107u8, 0u8, 116u8, 107u8, 108u8, 116u8, 107u8,\n+                        114u8, 116u8, 107u8, 116u8, 116u8, 108u8, 0u8, 116u8, 108u8, 121u8, 116u8,\n+                        109u8, 104u8, 116u8, 110u8, 0u8, 116u8, 111u8, 0u8, 116u8, 111u8, 103u8,\n+                        116u8, 111u8, 107u8, 116u8, 112u8, 105u8, 116u8, 114u8, 0u8, 116u8, 114u8,\n+                        117u8, 116u8, 114u8, 118u8, 116u8, 114u8, 119u8, 116u8, 115u8, 0u8, 116u8,\n+                        115u8, 100u8, 116u8, 115u8, 102u8, 116u8, 115u8, 103u8, 116u8, 115u8,\n+                        106u8, 116u8, 116u8, 0u8, 116u8, 116u8, 106u8, 116u8, 116u8, 115u8, 116u8,\n+                        116u8, 116u8, 116u8, 117u8, 109u8, 116u8, 118u8, 108u8, 116u8, 119u8,\n+                        113u8, 116u8, 120u8, 103u8, 116u8, 120u8, 111u8, 116u8, 121u8, 0u8, 116u8,\n+                        121u8, 118u8, 116u8, 122u8, 109u8, 117u8, 100u8, 105u8, 117u8, 100u8,\n+                        109u8, 117u8, 103u8, 0u8, 117u8, 103u8, 97u8, 117u8, 107u8, 0u8, 117u8,\n+                        108u8, 105u8, 117u8, 109u8, 98u8, 117u8, 110u8, 114u8, 117u8, 110u8, 120u8,\n+                        117u8, 114u8, 0u8, 117u8, 122u8, 0u8, 118u8, 97u8, 105u8, 118u8, 101u8,\n+                        0u8, 118u8, 101u8, 99u8, 118u8, 101u8, 112u8, 118u8, 105u8, 0u8, 118u8,\n+                        105u8, 99u8, 118u8, 108u8, 115u8, 118u8, 109u8, 102u8, 118u8, 109u8, 119u8,\n+                        118u8, 111u8, 0u8, 118u8, 111u8, 116u8, 118u8, 114u8, 111u8, 118u8, 117u8,\n+                        110u8, 119u8, 97u8, 0u8, 119u8, 97u8, 101u8, 119u8, 97u8, 108u8, 119u8,\n+                        97u8, 114u8, 119u8, 98u8, 112u8, 119u8, 98u8, 113u8, 119u8, 98u8, 114u8,\n+                        119u8, 108u8, 115u8, 119u8, 110u8, 105u8, 119u8, 111u8, 0u8, 119u8, 115u8,\n+                        103u8, 119u8, 116u8, 109u8, 119u8, 117u8, 117u8, 120u8, 97u8, 118u8, 120u8,\n+                        99u8, 111u8, 120u8, 99u8, 114u8, 120u8, 104u8, 0u8, 120u8, 108u8, 99u8,\n+                        120u8, 108u8, 100u8, 120u8, 109u8, 102u8, 120u8, 109u8, 110u8, 120u8,\n+                        109u8, 114u8, 120u8, 110u8, 97u8, 120u8, 110u8, 114u8, 120u8, 111u8, 103u8,\n+                        120u8, 112u8, 114u8, 120u8, 115u8, 97u8, 120u8, 115u8, 114u8, 121u8, 97u8,\n+                        111u8, 121u8, 97u8, 112u8, 121u8, 97u8, 118u8, 121u8, 98u8, 98u8, 121u8,\n+                        105u8, 0u8, 121u8, 111u8, 0u8, 121u8, 114u8, 108u8, 121u8, 117u8, 97u8,\n+                        121u8, 117u8, 101u8, 122u8, 97u8, 0u8, 122u8, 97u8, 103u8, 122u8, 100u8,\n+                        106u8, 122u8, 101u8, 97u8, 122u8, 103u8, 104u8, 122u8, 104u8, 0u8, 122u8,\n+                        104u8, 120u8, 122u8, 107u8, 116u8, 122u8, 108u8, 109u8, 122u8, 109u8,\n+                        105u8, 122u8, 117u8, 0u8, 122u8, 122u8, 97u8,\n+                    ])\n+                },\n+                unsafe {\n+                    ::zerovec::ZeroVec::from_bytes_unchecked(&[\n+                        69u8, 84u8, 0u8, 71u8, 69u8, 0u8, 71u8, 72u8, 0u8, 73u8, 68u8, 0u8, 85u8,\n+                        71u8, 0u8, 71u8, 72u8, 0u8, 66u8, 84u8, 0u8, 82u8, 85u8, 0u8, 73u8, 82u8,\n+                        0u8, 84u8, 78u8, 0u8, 90u8, 65u8, 0u8, 67u8, 77u8, 0u8, 73u8, 78u8, 0u8,\n+                        84u8, 78u8, 0u8, 71u8, 72u8, 0u8, 73u8, 81u8, 0u8, 88u8, 75u8, 0u8, 82u8,\n+                        85u8, 0u8, 69u8, 84u8, 0u8, 78u8, 71u8, 0u8, 69u8, 83u8, 0u8, 78u8, 71u8,\n+                        0u8, 73u8, 68u8, 0u8, 84u8, 71u8, 0u8, 69u8, 71u8, 0u8, 73u8, 82u8, 0u8,\n+                        67u8, 76u8, 0u8, 66u8, 79u8, 0u8, 68u8, 90u8, 0u8, 83u8, 65u8, 0u8, 77u8,\n+                        65u8, 0u8, 69u8, 71u8, 0u8, 73u8, 78u8, 0u8, 84u8, 90u8, 0u8, 85u8, 83u8,\n+                        0u8, 69u8, 83u8, 0u8, 67u8, 65u8, 0u8, 82u8, 85u8, 0u8, 73u8, 78u8, 0u8,\n+                        66u8, 79u8, 0u8, 65u8, 90u8, 0u8, 82u8, 85u8, 0u8, 80u8, 75u8, 0u8, 73u8,\n+                        68u8, 0u8, 78u8, 80u8, 0u8, 65u8, 84u8, 0u8, 67u8, 77u8, 0u8, 67u8, 77u8,\n+                        0u8, 73u8, 68u8, 0u8, 67u8, 77u8, 0u8, 67u8, 73u8, 0u8, 66u8, 89u8, 0u8,\n+                        83u8, 68u8, 0u8, 90u8, 77u8, 0u8, 73u8, 68u8, 0u8, 84u8, 90u8, 0u8, 67u8,\n+                        77u8, 0u8, 73u8, 78u8, 0u8, 80u8, 75u8, 0u8, 73u8, 78u8, 0u8, 66u8, 71u8,\n+                        0u8, 73u8, 78u8, 0u8, 80u8, 75u8, 0u8, 84u8, 82u8, 0u8, 73u8, 78u8, 0u8,\n+                        73u8, 78u8, 0u8, 73u8, 78u8, 0u8, 86u8, 85u8, 0u8, 80u8, 72u8, 0u8, 78u8,\n+                        71u8, 0u8, 73u8, 78u8, 0u8, 73u8, 68u8, 0u8, 83u8, 78u8, 0u8, 67u8, 77u8,\n+                        0u8, 80u8, 72u8, 0u8, 67u8, 65u8, 0u8, 77u8, 89u8, 0u8, 86u8, 78u8, 0u8,\n+                        77u8, 76u8, 0u8, 77u8, 76u8, 0u8, 66u8, 68u8, 0u8, 67u8, 78u8, 0u8, 73u8,\n+                        78u8, 0u8, 73u8, 82u8, 0u8, 67u8, 73u8, 0u8, 70u8, 82u8, 0u8, 73u8, 78u8,\n+                        0u8, 80u8, 75u8, 0u8, 73u8, 78u8, 0u8, 66u8, 65u8, 0u8, 76u8, 82u8, 0u8,\n+                        67u8, 77u8, 0u8, 80u8, 72u8, 0u8, 80u8, 75u8, 0u8, 82u8, 85u8, 0u8, 89u8,\n+                        84u8, 0u8, 73u8, 68u8, 0u8, 67u8, 77u8, 0u8, 71u8, 81u8, 0u8, 69u8, 82u8,\n+                        0u8, 67u8, 77u8, 0u8, 77u8, 76u8, 0u8, 69u8, 83u8, 0u8, 85u8, 83u8, 0u8,\n+                        78u8, 71u8, 0u8, 66u8, 68u8, 0u8, 82u8, 85u8, 0u8, 80u8, 72u8, 0u8, 85u8,\n+                        71u8, 0u8, 71u8, 85u8, 0u8, 70u8, 77u8, 0u8, 82u8, 85u8, 0u8, 85u8, 83u8,\n+                        0u8, 67u8, 65u8, 0u8, 85u8, 83u8, 0u8, 85u8, 83u8, 0u8, 75u8, 72u8, 0u8,\n+                        86u8, 78u8, 0u8, 73u8, 81u8, 0u8, 67u8, 65u8, 0u8, 77u8, 78u8, 0u8, 70u8,\n+                        82u8, 0u8, 69u8, 71u8, 0u8, 80u8, 72u8, 0u8, 67u8, 65u8, 0u8, 67u8, 65u8,\n+                        0u8, 85u8, 65u8, 0u8, 67u8, 65u8, 0u8, 67u8, 65u8, 0u8, 83u8, 67u8, 0u8,\n+                        67u8, 90u8, 0u8, 80u8, 76u8, 0u8, 67u8, 65u8, 0u8, 77u8, 77u8, 0u8, 82u8,\n+                        85u8, 0u8, 82u8, 85u8, 0u8, 71u8, 66u8, 0u8, 68u8, 75u8, 0u8, 67u8, 73u8,\n+                        0u8, 85u8, 83u8, 0u8, 82u8, 85u8, 0u8, 75u8, 69u8, 0u8, 73u8, 78u8, 0u8,\n+                        68u8, 69u8, 0u8, 67u8, 65u8, 0u8, 67u8, 65u8, 0u8, 78u8, 69u8, 0u8, 78u8,\n+                        71u8, 0u8, 67u8, 73u8, 0u8, 73u8, 78u8, 0u8, 67u8, 78u8, 0u8, 68u8, 69u8,\n+                        0u8, 77u8, 76u8, 0u8, 77u8, 89u8, 0u8, 78u8, 80u8, 0u8, 67u8, 77u8, 0u8,\n+                        77u8, 86u8, 0u8, 83u8, 78u8, 0u8, 66u8, 70u8, 0u8, 66u8, 84u8, 0u8, 75u8,\n+                        69u8, 0u8, 71u8, 72u8, 0u8, 78u8, 71u8, 0u8, 73u8, 84u8, 0u8, 69u8, 71u8,\n+                        0u8, 77u8, 77u8, 0u8, 71u8, 82u8, 0u8, 85u8, 83u8, 0u8, 48u8, 48u8, 49u8,\n+                        69u8, 83u8, 0u8, 73u8, 78u8, 0u8, 85u8, 83u8, 0u8, 69u8, 69u8, 0u8, 73u8,\n+                        84u8, 0u8, 69u8, 83u8, 0u8, 67u8, 77u8, 0u8, 69u8, 83u8, 0u8, 73u8, 82u8,\n+                        0u8, 71u8, 81u8, 0u8, 83u8, 78u8, 0u8, 77u8, 76u8, 0u8, 70u8, 73u8, 0u8,\n+                        83u8, 68u8, 0u8, 80u8, 72u8, 0u8, 83u8, 69u8, 0u8, 70u8, 74u8, 0u8, 70u8,\n+                        79u8, 0u8, 66u8, 74u8, 0u8, 70u8, 82u8, 0u8, 85u8, 83u8, 0u8, 70u8, 82u8,\n+                        0u8, 68u8, 69u8, 0u8, 68u8, 69u8, 0u8, 67u8, 77u8, 0u8, 87u8, 70u8, 0u8,\n+                        71u8, 78u8, 0u8, 78u8, 69u8, 0u8, 73u8, 84u8, 0u8, 78u8, 71u8, 0u8, 83u8,\n+                        68u8, 0u8, 78u8, 76u8, 0u8, 73u8, 69u8, 0u8, 71u8, 72u8, 0u8, 77u8, 68u8,\n+                        0u8, 67u8, 78u8, 0u8, 73u8, 68u8, 0u8, 73u8, 78u8, 0u8, 73u8, 82u8, 0u8,\n+                        71u8, 70u8, 0u8, 71u8, 66u8, 0u8, 69u8, 84u8, 0u8, 78u8, 80u8, 0u8, 75u8,\n+                        73u8, 0u8, 80u8, 75u8, 0u8, 80u8, 75u8, 0u8, 69u8, 83u8, 0u8, 73u8, 82u8,\n+                        0u8, 80u8, 89u8, 0u8, 73u8, 78u8, 0u8, 73u8, 78u8, 0u8, 73u8, 68u8, 0u8,\n+                        78u8, 76u8, 0u8, 85u8, 65u8, 0u8, 67u8, 89u8, 0u8, 73u8, 78u8, 0u8, 67u8,\n+                        72u8, 0u8, 73u8, 78u8, 0u8, 66u8, 82u8, 0u8, 67u8, 79u8, 0u8, 71u8, 72u8,\n+                        0u8, 75u8, 69u8, 0u8, 73u8, 77u8, 0u8, 78u8, 80u8, 0u8, 67u8, 65u8, 0u8,\n+                        78u8, 71u8, 0u8, 67u8, 78u8, 0u8, 85u8, 83u8, 0u8, 65u8, 70u8, 0u8, 73u8,\n+                        76u8, 0u8, 73u8, 78u8, 0u8, 70u8, 74u8, 0u8, 80u8, 72u8, 0u8, 84u8, 82u8,\n+                        0u8, 67u8, 78u8, 0u8, 80u8, 75u8, 0u8, 73u8, 78u8, 0u8, 85u8, 83u8, 0u8,\n+                        80u8, 72u8, 0u8, 80u8, 75u8, 0u8, 80u8, 71u8, 0u8, 73u8, 78u8, 0u8, 73u8,\n+                        78u8, 0u8, 72u8, 82u8, 0u8, 68u8, 69u8, 0u8, 67u8, 78u8, 0u8, 72u8, 84u8,\n+                        0u8, 72u8, 85u8, 0u8, 67u8, 65u8, 0u8, 65u8, 77u8, 0u8, 78u8, 65u8, 0u8,\n+                        48u8, 48u8, 49u8, 77u8, 89u8, 0u8, 78u8, 71u8, 0u8, 73u8, 68u8, 0u8, 84u8,\n+                        71u8, 0u8, 78u8, 71u8, 0u8, 67u8, 78u8, 0u8, 85u8, 83u8, 0u8, 80u8, 72u8,\n+                        0u8, 73u8, 68u8, 0u8, 82u8, 85u8, 0u8, 48u8, 48u8, 49u8, 73u8, 83u8, 0u8,\n+                        73u8, 84u8, 0u8, 67u8, 65u8, 0u8, 73u8, 76u8, 0u8, 82u8, 85u8, 0u8, 74u8,\n+                        80u8, 0u8, 74u8, 77u8, 0u8, 48u8, 48u8, 49u8, 67u8, 77u8, 0u8, 85u8, 65u8,\n+                        0u8, 84u8, 90u8, 0u8, 78u8, 80u8, 0u8, 68u8, 75u8, 0u8, 73u8, 68u8, 0u8,\n+                        73u8, 68u8, 0u8, 71u8, 69u8, 0u8, 85u8, 90u8, 0u8, 68u8, 90u8, 0u8, 77u8,\n+                        77u8, 0u8, 78u8, 71u8, 0u8, 75u8, 69u8, 0u8, 77u8, 76u8, 0u8, 73u8, 68u8,\n+                        0u8, 82u8, 85u8, 0u8, 78u8, 69u8, 0u8, 78u8, 71u8, 0u8, 90u8, 87u8, 0u8,\n+                        84u8, 90u8, 0u8, 84u8, 71u8, 0u8, 84u8, 72u8, 0u8, 67u8, 86u8, 0u8, 67u8,\n+                        77u8, 0u8, 67u8, 73u8, 0u8, 73u8, 78u8, 0u8, 73u8, 78u8, 0u8, 67u8, 68u8,\n+                        0u8, 73u8, 68u8, 0u8, 66u8, 82u8, 0u8, 73u8, 78u8, 0u8, 67u8, 78u8, 0u8,\n+                        73u8, 78u8, 0u8, 77u8, 76u8, 0u8, 73u8, 78u8, 0u8, 80u8, 75u8, 0u8, 75u8,\n+                        69u8, 0u8, 84u8, 82u8, 0u8, 78u8, 65u8, 0u8, 76u8, 65u8, 0u8, 75u8, 90u8,\n+                        0u8, 67u8, 77u8, 0u8, 71u8, 76u8, 0u8, 75u8, 69u8, 0u8, 75u8, 72u8, 0u8,\n+                        65u8, 79u8, 0u8, 73u8, 78u8, 0u8, 71u8, 87u8, 0u8, 75u8, 82u8, 0u8, 82u8,\n+                        85u8, 0u8, 73u8, 78u8, 0u8, 70u8, 77u8, 0u8, 76u8, 82u8, 0u8, 82u8, 85u8,\n+                        0u8, 83u8, 76u8, 0u8, 80u8, 72u8, 0u8, 82u8, 85u8, 0u8, 73u8, 78u8, 0u8,\n+                        73u8, 78u8, 0u8, 84u8, 90u8, 0u8, 67u8, 77u8, 0u8, 68u8, 69u8, 0u8, 77u8,\n+                        89u8, 0u8, 84u8, 82u8, 0u8, 82u8, 85u8, 0u8, 82u8, 85u8, 0u8, 73u8, 68u8,\n+                        0u8, 80u8, 75u8, 0u8, 71u8, 66u8, 0u8, 67u8, 65u8, 0u8, 73u8, 78u8, 0u8,\n+                        84u8, 72u8, 0u8, 80u8, 75u8, 0u8, 75u8, 71u8, 0u8, 77u8, 89u8, 0u8, 77u8,\n+                        89u8, 0u8, 86u8, 65u8, 0u8, 71u8, 82u8, 0u8, 73u8, 76u8, 0u8, 84u8, 90u8,\n+                        0u8, 80u8, 75u8, 0u8, 85u8, 71u8, 0u8, 76u8, 85u8, 0u8, 82u8, 85u8, 0u8,\n+                        73u8, 68u8, 0u8, 67u8, 78u8, 0u8, 73u8, 78u8, 0u8, 82u8, 85u8, 0u8, 85u8,\n+                        71u8, 0u8, 78u8, 76u8, 0u8, 78u8, 80u8, 0u8, 73u8, 84u8, 0u8, 67u8, 65u8,\n+                        0u8, 67u8, 78u8, 0u8, 73u8, 68u8, 0u8, 73u8, 82u8, 0u8, 85u8, 83u8, 0u8,\n+                        73u8, 78u8, 0u8, 73u8, 84u8, 0u8, 67u8, 68u8, 0u8, 76u8, 65u8, 0u8, 67u8,\n+                        68u8, 0u8, 90u8, 77u8, 0u8, 73u8, 82u8, 0u8, 76u8, 84u8, 0u8, 76u8, 86u8,\n+                        0u8, 67u8, 68u8, 0u8, 67u8, 68u8, 0u8, 75u8, 69u8, 0u8, 75u8, 69u8, 0u8,\n+                        73u8, 82u8, 0u8, 76u8, 86u8, 0u8, 84u8, 72u8, 0u8, 67u8, 78u8, 0u8, 84u8,\n+                        82u8, 0u8, 73u8, 68u8, 0u8, 67u8, 77u8, 0u8, 73u8, 78u8, 0u8, 73u8, 78u8,\n+                        0u8, 73u8, 68u8, 0u8, 71u8, 77u8, 0u8, 75u8, 69u8, 0u8, 77u8, 88u8, 0u8,\n+                        82u8, 85u8, 0u8, 80u8, 72u8, 0u8, 73u8, 68u8, 0u8, 83u8, 76u8, 0u8, 75u8,\n+                        69u8, 0u8, 84u8, 72u8, 0u8, 77u8, 85u8, 0u8, 77u8, 71u8, 0u8, 77u8, 90u8,\n+                        0u8, 67u8, 77u8, 0u8, 78u8, 80u8, 0u8, 84u8, 90u8, 0u8, 77u8, 72u8, 0u8,\n+                        78u8, 90u8, 0u8, 67u8, 65u8, 0u8, 73u8, 68u8, 0u8, 77u8, 75u8, 0u8, 73u8,\n+                        78u8, 0u8, 83u8, 68u8, 0u8, 77u8, 78u8, 0u8, 73u8, 78u8, 0u8, 77u8, 77u8,\n+                        0u8, 82u8, 79u8, 0u8, 67u8, 65u8, 0u8, 67u8, 65u8, 0u8, 66u8, 70u8, 0u8,\n+                        73u8, 78u8, 0u8, 78u8, 80u8, 0u8, 82u8, 85u8, 0u8, 66u8, 68u8, 0u8, 77u8,\n+                        89u8, 0u8, 77u8, 84u8, 0u8, 73u8, 78u8, 0u8, 67u8, 77u8, 0u8, 85u8, 83u8,\n+                        0u8, 80u8, 75u8, 0u8, 77u8, 76u8, 0u8, 73u8, 78u8, 0u8, 73u8, 68u8, 0u8,\n+                        85u8, 83u8, 0u8, 90u8, 87u8, 0u8, 77u8, 77u8, 0u8, 82u8, 85u8, 0u8, 85u8,\n+                        71u8, 0u8, 73u8, 82u8, 0u8, 73u8, 82u8, 0u8, 78u8, 82u8, 0u8, 67u8, 78u8,\n+                        0u8, 73u8, 84u8, 0u8, 78u8, 65u8, 0u8, 78u8, 79u8, 0u8, 77u8, 88u8, 0u8,\n+                        90u8, 87u8, 0u8, 77u8, 90u8, 0u8, 68u8, 69u8, 0u8, 78u8, 80u8, 0u8, 78u8,\n+                        80u8, 0u8, 78u8, 65u8, 0u8, 77u8, 90u8, 0u8, 77u8, 88u8, 0u8, 77u8, 88u8,\n+                        0u8, 73u8, 68u8, 0u8, 78u8, 85u8, 0u8, 73u8, 78u8, 0u8, 78u8, 76u8, 0u8,\n+                        67u8, 77u8, 0u8, 78u8, 79u8, 0u8, 67u8, 77u8, 0u8, 73u8, 78u8, 0u8, 78u8,\n+                        79u8, 0u8, 84u8, 72u8, 0u8, 73u8, 78u8, 0u8, 83u8, 69u8, 0u8, 71u8, 78u8,\n+                        0u8, 90u8, 65u8, 0u8, 67u8, 65u8, 0u8, 90u8, 65u8, 0u8, 73u8, 78u8, 0u8,\n+                        83u8, 83u8, 0u8, 85u8, 83u8, 0u8, 67u8, 78u8, 0u8, 77u8, 87u8, 0u8, 84u8,\n+                        90u8, 0u8, 85u8, 71u8, 0u8, 71u8, 72u8, 0u8, 70u8, 82u8, 0u8, 67u8, 65u8,\n+                        0u8, 67u8, 65u8, 0u8, 67u8, 65u8, 0u8, 69u8, 84u8, 0u8, 73u8, 78u8, 0u8,\n+                        71u8, 69u8, 0u8, 85u8, 83u8, 0u8, 77u8, 78u8, 0u8, 49u8, 52u8, 51u8, 73u8,\n+                        78u8, 0u8, 80u8, 72u8, 0u8, 73u8, 82u8, 0u8, 80u8, 72u8, 0u8, 65u8, 87u8,\n+                        0u8, 80u8, 87u8, 0u8, 70u8, 82u8, 0u8, 78u8, 71u8, 0u8, 85u8, 83u8, 0u8,\n+                        67u8, 65u8, 0u8, 73u8, 82u8, 0u8, 68u8, 69u8, 0u8, 76u8, 66u8, 0u8, 83u8,\n+                        66u8, 0u8, 73u8, 78u8, 0u8, 75u8, 69u8, 0u8, 80u8, 76u8, 0u8, 73u8, 84u8,\n+                        0u8, 71u8, 82u8, 0u8, 70u8, 77u8, 0u8, 73u8, 78u8, 0u8, 67u8, 65u8, 0u8,\n+                        80u8, 75u8, 0u8, 73u8, 82u8, 0u8, 48u8, 48u8, 49u8, 65u8, 70u8, 0u8, 66u8,\n+                        82u8, 0u8, 71u8, 65u8, 0u8, 80u8, 69u8, 0u8, 71u8, 84u8, 0u8, 69u8, 67u8,\n+                        0u8, 73u8, 78u8, 0u8, 82u8, 69u8, 0u8, 73u8, 68u8, 0u8, 73u8, 84u8, 0u8,\n+                        77u8, 77u8, 0u8, 73u8, 78u8, 0u8, 77u8, 65u8, 0u8, 78u8, 80u8, 0u8, 66u8,\n+                        68u8, 0u8, 67u8, 72u8, 0u8, 70u8, 73u8, 0u8, 67u8, 72u8, 0u8, 73u8, 82u8,\n+                        0u8, 83u8, 69u8, 0u8, 66u8, 73u8, 0u8, 77u8, 90u8, 0u8, 82u8, 79u8, 0u8,\n+                        73u8, 68u8, 0u8, 84u8, 90u8, 0u8, 70u8, 74u8, 0u8, 82u8, 85u8, 0u8, 85u8,\n+                        65u8, 0u8, 83u8, 66u8, 0u8, 82u8, 87u8, 0u8, 84u8, 90u8, 0u8, 74u8, 80u8,\n+                        0u8, 73u8, 78u8, 0u8, 71u8, 72u8, 0u8, 82u8, 85u8, 0u8, 75u8, 69u8, 0u8,\n+                        73u8, 68u8, 0u8, 73u8, 78u8, 0u8, 83u8, 78u8, 0u8, 73u8, 78u8, 0u8, 84u8,\n+                        90u8, 0u8, 73u8, 84u8, 0u8, 73u8, 78u8, 0u8, 73u8, 84u8, 0u8, 71u8, 66u8,\n+                        0u8, 80u8, 75u8, 0u8, 73u8, 84u8, 0u8, 73u8, 82u8, 0u8, 78u8, 79u8, 0u8,\n+                        67u8, 73u8, 0u8, 77u8, 90u8, 0u8, 77u8, 88u8, 0u8, 77u8, 76u8, 0u8, 67u8,\n+                        70u8, 0u8, 73u8, 69u8, 0u8, 76u8, 84u8, 0u8, 77u8, 65u8, 0u8, 77u8, 77u8,\n+                        0u8, 76u8, 75u8, 0u8, 69u8, 84u8, 0u8, 83u8, 75u8, 0u8, 80u8, 75u8, 0u8,\n+                        83u8, 73u8, 0u8, 80u8, 76u8, 0u8, 73u8, 68u8, 0u8, 87u8, 83u8, 0u8, 83u8,\n+                        69u8, 0u8, 65u8, 79u8, 0u8, 83u8, 69u8, 0u8, 70u8, 73u8, 0u8, 73u8, 76u8,\n+                        0u8, 70u8, 73u8, 0u8, 90u8, 87u8, 0u8, 77u8, 89u8, 0u8, 77u8, 76u8, 0u8,\n+                        83u8, 79u8, 0u8, 85u8, 90u8, 0u8, 84u8, 72u8, 0u8, 65u8, 76u8, 0u8, 82u8,\n+                        83u8, 0u8, 73u8, 78u8, 0u8, 83u8, 82u8, 0u8, 83u8, 78u8, 0u8, 73u8, 78u8,\n+                        0u8, 90u8, 65u8, 0u8, 69u8, 82u8, 0u8, 90u8, 65u8, 0u8, 68u8, 69u8, 0u8,\n+                        73u8, 68u8, 0u8, 84u8, 90u8, 0u8, 71u8, 78u8, 0u8, 83u8, 69u8, 0u8, 84u8,\n+                        90u8, 0u8, 89u8, 84u8, 0u8, 67u8, 68u8, 0u8, 68u8, 69u8, 0u8, 73u8, 78u8,\n+                        0u8, 73u8, 68u8, 0u8, 66u8, 68u8, 0u8, 73u8, 81u8, 0u8, 80u8, 76u8, 0u8,\n+                        73u8, 78u8, 0u8, 78u8, 80u8, 0u8, 80u8, 72u8, 0u8, 73u8, 78u8, 0u8, 67u8,\n+                        78u8, 0u8, 78u8, 80u8, 0u8, 78u8, 80u8, 0u8, 77u8, 89u8, 0u8, 73u8, 78u8,\n+                        0u8, 83u8, 76u8, 0u8, 85u8, 71u8, 0u8, 84u8, 76u8, 0u8, 84u8, 74u8, 0u8,\n+                        84u8, 72u8, 0u8, 78u8, 80u8, 0u8, 78u8, 80u8, 0u8, 78u8, 80u8, 0u8, 69u8,\n+                        84u8, 0u8, 69u8, 82u8, 0u8, 78u8, 71u8, 0u8, 84u8, 77u8, 0u8, 84u8, 75u8,\n+                        0u8, 65u8, 90u8, 0u8, 78u8, 80u8, 0u8, 80u8, 72u8, 0u8, 65u8, 90u8, 0u8,\n+                        78u8, 69u8, 0u8, 90u8, 65u8, 0u8, 84u8, 79u8, 0u8, 77u8, 87u8, 0u8, 48u8,\n+                        48u8, 49u8, 80u8, 71u8, 0u8, 84u8, 82u8, 0u8, 84u8, 82u8, 0u8, 84u8, 87u8,\n+                        0u8, 80u8, 75u8, 0u8, 90u8, 65u8, 0u8, 71u8, 82u8, 0u8, 78u8, 80u8, 0u8,\n+                        80u8, 72u8, 0u8, 66u8, 84u8, 0u8, 82u8, 85u8, 0u8, 85u8, 71u8, 0u8, 84u8,\n+                        72u8, 0u8, 65u8, 90u8, 0u8, 77u8, 87u8, 0u8, 84u8, 86u8, 0u8, 78u8, 69u8,\n+                        0u8, 67u8, 78u8, 0u8, 73u8, 78u8, 0u8, 80u8, 70u8, 0u8, 82u8, 85u8, 0u8,\n+                        77u8, 65u8, 0u8, 82u8, 85u8, 0u8, 82u8, 85u8, 0u8, 67u8, 78u8, 0u8, 83u8,\n+                        89u8, 0u8, 85u8, 65u8, 0u8, 70u8, 77u8, 0u8, 65u8, 79u8, 0u8, 73u8, 78u8,\n+                        0u8, 73u8, 78u8, 0u8, 80u8, 75u8, 0u8, 85u8, 90u8, 0u8, 76u8, 82u8, 0u8,\n+                        90u8, 65u8, 0u8, 73u8, 84u8, 0u8, 82u8, 85u8, 0u8, 86u8, 78u8, 0u8, 83u8,\n+                        88u8, 0u8, 66u8, 69u8, 0u8, 68u8, 69u8, 0u8, 77u8, 90u8, 0u8, 48u8, 48u8,\n+                        49u8, 82u8, 85u8, 0u8, 69u8, 69u8, 0u8, 84u8, 90u8, 0u8, 66u8, 69u8, 0u8,\n+                        67u8, 72u8, 0u8, 69u8, 84u8, 0u8, 80u8, 72u8, 0u8, 65u8, 85u8, 0u8, 73u8,\n+                        78u8, 0u8, 73u8, 78u8, 0u8, 87u8, 70u8, 0u8, 75u8, 77u8, 0u8, 83u8, 78u8,\n+                        0u8, 73u8, 78u8, 0u8, 73u8, 78u8, 0u8, 67u8, 78u8, 0u8, 66u8, 82u8, 0u8,\n+                        85u8, 90u8, 0u8, 84u8, 82u8, 0u8, 90u8, 65u8, 0u8, 84u8, 82u8, 0u8, 84u8,\n+                        82u8, 0u8, 71u8, 69u8, 0u8, 67u8, 78u8, 0u8, 83u8, 68u8, 0u8, 83u8, 65u8,\n+                        0u8, 73u8, 78u8, 0u8, 85u8, 71u8, 0u8, 73u8, 82u8, 0u8, 89u8, 69u8, 0u8,\n+                        78u8, 80u8, 0u8, 77u8, 90u8, 0u8, 70u8, 77u8, 0u8, 67u8, 77u8, 0u8, 67u8,\n+                        77u8, 0u8, 48u8, 48u8, 49u8, 78u8, 71u8, 0u8, 66u8, 82u8, 0u8, 77u8, 88u8,\n+                        0u8, 72u8, 75u8, 0u8, 67u8, 78u8, 0u8, 83u8, 68u8, 0u8, 75u8, 77u8, 0u8,\n+                        78u8, 76u8, 0u8, 77u8, 65u8, 0u8, 67u8, 78u8, 0u8, 67u8, 78u8, 0u8, 67u8,\n+                        78u8, 0u8, 84u8, 71u8, 0u8, 77u8, 89u8, 0u8, 90u8, 65u8, 0u8, 84u8, 82u8,\n+                        0u8,\n+                    ])\n+                },\n+            )\n+        },\n+        ls2r: unsafe {\n+            #[allow(unused_unsafe)]\n+            ::zerovec::ZeroMap2d::from_parts_unchecked(\n+                unsafe {\n+                    ::zerovec::ZeroVec::from_bytes_unchecked(&[\n+                        97u8, 114u8, 99u8, 97u8, 122u8, 0u8, 99u8, 117u8, 0u8, 101u8, 110u8, 0u8,\n+                        102u8, 102u8, 0u8, 103u8, 114u8, 99u8, 107u8, 107u8, 0u8, 107u8, 117u8,\n+                        0u8, 107u8, 121u8, 0u8, 108u8, 105u8, 102u8, 109u8, 97u8, 110u8, 109u8,\n+                        110u8, 0u8, 112u8, 97u8, 0u8, 112u8, 97u8, 108u8, 115u8, 100u8, 0u8, 116u8,\n+                        103u8, 0u8, 117u8, 103u8, 0u8, 117u8, 110u8, 114u8, 117u8, 122u8, 0u8,\n+                        121u8, 117u8, 101u8, 122u8, 104u8, 0u8,\n+                    ])\n+                },\n+                unsafe {\n+                    ::zerovec::ZeroVec::from_bytes_unchecked(&[\n+                        2u8, 0u8, 0u8, 0u8, 3u8, 0u8, 0u8, 0u8, 4u8, 0u8, 0u8, 0u8, 5u8, 0u8, 0u8,\n+                        0u8, 6u8, 0u8, 0u8, 0u8, 7u8, 0u8, 0u8, 0u8, 8u8, 0u8, 0u8, 0u8, 10u8, 0u8,\n+                        0u8, 0u8, 12u8, 0u8, 0u8, 0u8, 13u8, 0u8, 0u8, 0u8, 14u8, 0u8, 0u8, 0u8,\n+                        15u8, 0u8, 0u8, 0u8, 16u8, 0u8, 0u8, 0u8, 17u8, 0u8, 0u8, 0u8, 20u8, 0u8,\n+                        0u8, 0u8, 21u8, 0u8, 0u8, 0u8, 22u8, 0u8, 0u8, 0u8, 23u8, 0u8, 0u8, 0u8,\n+                        24u8, 0u8, 0u8, 0u8, 25u8, 0u8, 0u8, 0u8, 28u8, 0u8, 0u8, 0u8,\n+                    ])\n+                },\n+                unsafe {\n+                    ::zerovec::ZeroVec::from_bytes_unchecked(&[\n+                        78u8, 98u8, 97u8, 116u8, 80u8, 97u8, 108u8, 109u8, 65u8, 114u8, 97u8, 98u8,\n+                        71u8, 108u8, 97u8, 103u8, 83u8, 104u8, 97u8, 119u8, 65u8, 100u8, 108u8,\n+                        109u8, 76u8, 105u8, 110u8, 98u8, 65u8, 114u8, 97u8, 98u8, 65u8, 114u8,\n+                        97u8, 98u8, 89u8, 101u8, 122u8, 105u8, 65u8, 114u8, 97u8, 98u8, 76u8, 97u8,\n+                        116u8, 110u8, 76u8, 105u8, 109u8, 98u8, 78u8, 107u8, 111u8, 111u8, 77u8,\n+                        111u8, 110u8, 103u8, 65u8, 114u8, 97u8, 98u8, 80u8, 104u8, 108u8, 112u8,\n+                        68u8, 101u8, 118u8, 97u8, 75u8, 104u8, 111u8, 106u8, 83u8, 105u8, 110u8,\n+                        100u8, 65u8, 114u8, 97u8, 98u8, 67u8, 121u8, 114u8, 108u8, 68u8, 101u8,\n+                        118u8, 97u8, 65u8, 114u8, 97u8, 98u8, 72u8, 97u8, 110u8, 115u8, 66u8,\n+                        111u8, 112u8, 111u8, 72u8, 97u8, 110u8, 98u8, 72u8, 97u8, 110u8, 116u8,\n+                    ])\n+                },\n+                unsafe {\n+                    ::zerovec::ZeroVec::from_bytes_unchecked(&[\n+                        74u8, 79u8, 0u8, 83u8, 89u8, 0u8, 73u8, 82u8, 0u8, 66u8, 71u8, 0u8, 71u8,\n+                        66u8, 0u8, 71u8, 78u8, 0u8, 71u8, 82u8, 0u8, 67u8, 78u8, 0u8, 73u8, 81u8,\n+                        0u8, 71u8, 69u8, 0u8, 67u8, 78u8, 0u8, 84u8, 82u8, 0u8, 73u8, 78u8, 0u8,\n+                        71u8, 78u8, 0u8, 67u8, 78u8, 0u8, 80u8, 75u8, 0u8, 67u8, 78u8, 0u8, 73u8,\n+                        78u8, 0u8, 73u8, 78u8, 0u8, 73u8, 78u8, 0u8, 80u8, 75u8, 0u8, 75u8, 90u8,\n+                        0u8, 78u8, 80u8, 0u8, 65u8, 70u8, 0u8, 67u8, 78u8, 0u8, 84u8, 87u8, 0u8,\n+                        84u8, 87u8, 0u8, 84u8, 87u8, 0u8,\n+                    ])\n+                },\n+            )\n+        },\n+    };"}, {"sha": "a485a5af64ca56e15f8e1a3fb5485c4388966105", "filename": "compiler/rustc_baked_icu_data/src/data/fallback/mod.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Ffallback%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Ffallback%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Ffallback%2Fmod.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,4 @@\n+// @generated\n+pub mod likelysubtags_v1;\n+pub mod parents_v1;\n+pub mod supplement;"}, {"sha": "f07b4b80649efa273bdb807a71f5d31b0de40632", "filename": "compiler/rustc_baked_icu_data/src/data/fallback/parents_v1.rs", "status": "added", "additions": 207, "deletions": 0, "changes": 207, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Ffallback%2Fparents_v1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Ffallback%2Fparents_v1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Ffallback%2Fparents_v1.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,207 @@\n+// @generated\n+type DataStruct = < :: icu_provider_adapters :: fallback :: provider :: LocaleFallbackParentsV1Marker as :: icu_provider :: DataMarker > :: Yokeable ;\n+pub static DATA: litemap::LiteMap<&str, &DataStruct, &[(&str, &DataStruct)]> =\n+    litemap::LiteMap::from_sorted_store_unchecked(&[(\"und\", UND)]);\n+static UND: &DataStruct = &::icu_provider_adapters::fallback::provider::LocaleFallbackParentsV1 {\n+    parents: unsafe {\n+        #[allow(unused_unsafe)]\n+        ::zerovec::ZeroMap::from_parts_unchecked(\n+            unsafe {\n+                ::zerovec::VarZeroVec::from_bytes_unchecked(&[\n+                    131u8, 0u8, 0u8, 0u8, 0u8, 0u8, 6u8, 0u8, 11u8, 0u8, 16u8, 0u8, 21u8, 0u8,\n+                    26u8, 0u8, 31u8, 0u8, 36u8, 0u8, 41u8, 0u8, 46u8, 0u8, 51u8, 0u8, 56u8, 0u8,\n+                    61u8, 0u8, 66u8, 0u8, 71u8, 0u8, 76u8, 0u8, 81u8, 0u8, 86u8, 0u8, 91u8, 0u8,\n+                    96u8, 0u8, 101u8, 0u8, 106u8, 0u8, 111u8, 0u8, 116u8, 0u8, 121u8, 0u8, 126u8,\n+                    0u8, 131u8, 0u8, 136u8, 0u8, 141u8, 0u8, 146u8, 0u8, 151u8, 0u8, 156u8, 0u8,\n+                    161u8, 0u8, 166u8, 0u8, 171u8, 0u8, 176u8, 0u8, 181u8, 0u8, 186u8, 0u8, 191u8,\n+                    0u8, 196u8, 0u8, 201u8, 0u8, 206u8, 0u8, 211u8, 0u8, 216u8, 0u8, 221u8, 0u8,\n+                    226u8, 0u8, 231u8, 0u8, 236u8, 0u8, 241u8, 0u8, 246u8, 0u8, 251u8, 0u8, 0u8,\n+                    1u8, 5u8, 1u8, 10u8, 1u8, 15u8, 1u8, 20u8, 1u8, 25u8, 1u8, 30u8, 1u8, 35u8,\n+                    1u8, 40u8, 1u8, 45u8, 1u8, 50u8, 1u8, 55u8, 1u8, 60u8, 1u8, 65u8, 1u8, 70u8,\n+                    1u8, 75u8, 1u8, 80u8, 1u8, 85u8, 1u8, 90u8, 1u8, 95u8, 1u8, 100u8, 1u8, 105u8,\n+                    1u8, 110u8, 1u8, 115u8, 1u8, 120u8, 1u8, 125u8, 1u8, 130u8, 1u8, 135u8, 1u8,\n+                    140u8, 1u8, 145u8, 1u8, 150u8, 1u8, 155u8, 1u8, 160u8, 1u8, 165u8, 1u8, 170u8,\n+                    1u8, 175u8, 1u8, 180u8, 1u8, 185u8, 1u8, 190u8, 1u8, 195u8, 1u8, 200u8, 1u8,\n+                    205u8, 1u8, 210u8, 1u8, 215u8, 1u8, 220u8, 1u8, 225u8, 1u8, 230u8, 1u8, 235u8,\n+                    1u8, 240u8, 1u8, 245u8, 1u8, 250u8, 1u8, 255u8, 1u8, 4u8, 2u8, 9u8, 2u8, 14u8,\n+                    2u8, 19u8, 2u8, 24u8, 2u8, 29u8, 2u8, 34u8, 2u8, 39u8, 2u8, 44u8, 2u8, 49u8,\n+                    2u8, 54u8, 2u8, 59u8, 2u8, 64u8, 2u8, 71u8, 2u8, 73u8, 2u8, 75u8, 2u8, 77u8,\n+                    2u8, 82u8, 2u8, 87u8, 2u8, 92u8, 2u8, 97u8, 2u8, 102u8, 2u8, 107u8, 2u8, 112u8,\n+                    2u8, 117u8, 2u8, 122u8, 2u8, 127u8, 2u8, 132u8, 2u8, 101u8, 110u8, 45u8, 49u8,\n+                    53u8, 48u8, 101u8, 110u8, 45u8, 65u8, 71u8, 101u8, 110u8, 45u8, 65u8, 73u8,\n+                    101u8, 110u8, 45u8, 65u8, 84u8, 101u8, 110u8, 45u8, 65u8, 85u8, 101u8, 110u8,\n+                    45u8, 66u8, 66u8, 101u8, 110u8, 45u8, 66u8, 69u8, 101u8, 110u8, 45u8, 66u8,\n+                    77u8, 101u8, 110u8, 45u8, 66u8, 83u8, 101u8, 110u8, 45u8, 66u8, 87u8, 101u8,\n+                    110u8, 45u8, 66u8, 90u8, 101u8, 110u8, 45u8, 67u8, 67u8, 101u8, 110u8, 45u8,\n+                    67u8, 72u8, 101u8, 110u8, 45u8, 67u8, 75u8, 101u8, 110u8, 45u8, 67u8, 77u8,\n+                    101u8, 110u8, 45u8, 67u8, 88u8, 101u8, 110u8, 45u8, 67u8, 89u8, 101u8, 110u8,\n+                    45u8, 68u8, 69u8, 101u8, 110u8, 45u8, 68u8, 71u8, 101u8, 110u8, 45u8, 68u8,\n+                    75u8, 101u8, 110u8, 45u8, 68u8, 77u8, 101u8, 110u8, 45u8, 69u8, 82u8, 101u8,\n+                    110u8, 45u8, 70u8, 73u8, 101u8, 110u8, 45u8, 70u8, 74u8, 101u8, 110u8, 45u8,\n+                    70u8, 75u8, 101u8, 110u8, 45u8, 70u8, 77u8, 101u8, 110u8, 45u8, 71u8, 66u8,\n+                    101u8, 110u8, 45u8, 71u8, 68u8, 101u8, 110u8, 45u8, 71u8, 71u8, 101u8, 110u8,\n+                    45u8, 71u8, 72u8, 101u8, 110u8, 45u8, 71u8, 73u8, 101u8, 110u8, 45u8, 71u8,\n+                    77u8, 101u8, 110u8, 45u8, 71u8, 89u8, 101u8, 110u8, 45u8, 72u8, 75u8, 101u8,\n+                    110u8, 45u8, 73u8, 69u8, 101u8, 110u8, 45u8, 73u8, 76u8, 101u8, 110u8, 45u8,\n+                    73u8, 77u8, 101u8, 110u8, 45u8, 73u8, 78u8, 101u8, 110u8, 45u8, 73u8, 79u8,\n+                    101u8, 110u8, 45u8, 74u8, 69u8, 101u8, 110u8, 45u8, 74u8, 77u8, 101u8, 110u8,\n+                    45u8, 75u8, 69u8, 101u8, 110u8, 45u8, 75u8, 73u8, 101u8, 110u8, 45u8, 75u8,\n+                    78u8, 101u8, 110u8, 45u8, 75u8, 89u8, 101u8, 110u8, 45u8, 76u8, 67u8, 101u8,\n+                    110u8, 45u8, 76u8, 82u8, 101u8, 110u8, 45u8, 76u8, 83u8, 101u8, 110u8, 45u8,\n+                    77u8, 71u8, 101u8, 110u8, 45u8, 77u8, 79u8, 101u8, 110u8, 45u8, 77u8, 83u8,\n+                    101u8, 110u8, 45u8, 77u8, 84u8, 101u8, 110u8, 45u8, 77u8, 85u8, 101u8, 110u8,\n+                    45u8, 77u8, 86u8, 101u8, 110u8, 45u8, 77u8, 87u8, 101u8, 110u8, 45u8, 77u8,\n+                    89u8, 101u8, 110u8, 45u8, 78u8, 65u8, 101u8, 110u8, 45u8, 78u8, 70u8, 101u8,\n+                    110u8, 45u8, 78u8, 71u8, 101u8, 110u8, 45u8, 78u8, 76u8, 101u8, 110u8, 45u8,\n+                    78u8, 82u8, 101u8, 110u8, 45u8, 78u8, 85u8, 101u8, 110u8, 45u8, 78u8, 90u8,\n+                    101u8, 110u8, 45u8, 80u8, 71u8, 101u8, 110u8, 45u8, 80u8, 75u8, 101u8, 110u8,\n+                    45u8, 80u8, 78u8, 101u8, 110u8, 45u8, 80u8, 87u8, 101u8, 110u8, 45u8, 82u8,\n+                    87u8, 101u8, 110u8, 45u8, 83u8, 66u8, 101u8, 110u8, 45u8, 83u8, 67u8, 101u8,\n+                    110u8, 45u8, 83u8, 68u8, 101u8, 110u8, 45u8, 83u8, 69u8, 101u8, 110u8, 45u8,\n+                    83u8, 71u8, 101u8, 110u8, 45u8, 83u8, 72u8, 101u8, 110u8, 45u8, 83u8, 73u8,\n+                    101u8, 110u8, 45u8, 83u8, 76u8, 101u8, 110u8, 45u8, 83u8, 83u8, 101u8, 110u8,\n+                    45u8, 83u8, 88u8, 101u8, 110u8, 45u8, 83u8, 90u8, 101u8, 110u8, 45u8, 84u8,\n+                    67u8, 101u8, 110u8, 45u8, 84u8, 75u8, 101u8, 110u8, 45u8, 84u8, 79u8, 101u8,\n+                    110u8, 45u8, 84u8, 84u8, 101u8, 110u8, 45u8, 84u8, 86u8, 101u8, 110u8, 45u8,\n+                    84u8, 90u8, 101u8, 110u8, 45u8, 85u8, 71u8, 101u8, 110u8, 45u8, 86u8, 67u8,\n+                    101u8, 110u8, 45u8, 86u8, 71u8, 101u8, 110u8, 45u8, 86u8, 85u8, 101u8, 110u8,\n+                    45u8, 87u8, 83u8, 101u8, 110u8, 45u8, 90u8, 65u8, 101u8, 110u8, 45u8, 90u8,\n+                    77u8, 101u8, 110u8, 45u8, 90u8, 87u8, 101u8, 115u8, 45u8, 65u8, 82u8, 101u8,\n+                    115u8, 45u8, 66u8, 79u8, 101u8, 115u8, 45u8, 66u8, 82u8, 101u8, 115u8, 45u8,\n+                    66u8, 90u8, 101u8, 115u8, 45u8, 67u8, 76u8, 101u8, 115u8, 45u8, 67u8, 79u8,\n+                    101u8, 115u8, 45u8, 67u8, 82u8, 101u8, 115u8, 45u8, 67u8, 85u8, 101u8, 115u8,\n+                    45u8, 68u8, 79u8, 101u8, 115u8, 45u8, 69u8, 67u8, 101u8, 115u8, 45u8, 71u8,\n+                    84u8, 101u8, 115u8, 45u8, 72u8, 78u8, 101u8, 115u8, 45u8, 77u8, 88u8, 101u8,\n+                    115u8, 45u8, 78u8, 73u8, 101u8, 115u8, 45u8, 80u8, 65u8, 101u8, 115u8, 45u8,\n+                    80u8, 69u8, 101u8, 115u8, 45u8, 80u8, 82u8, 101u8, 115u8, 45u8, 80u8, 89u8,\n+                    101u8, 115u8, 45u8, 83u8, 86u8, 101u8, 115u8, 45u8, 85u8, 83u8, 101u8, 115u8,\n+                    45u8, 85u8, 89u8, 101u8, 115u8, 45u8, 86u8, 69u8, 104u8, 105u8, 45u8, 76u8,\n+                    97u8, 116u8, 110u8, 104u8, 116u8, 110u8, 98u8, 110u8, 110u8, 112u8, 116u8,\n+                    45u8, 65u8, 79u8, 112u8, 116u8, 45u8, 67u8, 72u8, 112u8, 116u8, 45u8, 67u8,\n+                    86u8, 112u8, 116u8, 45u8, 70u8, 82u8, 112u8, 116u8, 45u8, 71u8, 81u8, 112u8,\n+                    116u8, 45u8, 71u8, 87u8, 112u8, 116u8, 45u8, 76u8, 85u8, 112u8, 116u8, 45u8,\n+                    77u8, 79u8, 112u8, 116u8, 45u8, 77u8, 90u8, 112u8, 116u8, 45u8, 83u8, 84u8,\n+                    112u8, 116u8, 45u8, 84u8, 76u8, 122u8, 104u8, 45u8, 72u8, 97u8, 110u8, 116u8,\n+                    45u8, 77u8, 79u8,\n+                ])\n+            },\n+            unsafe {\n+                ::zerovec::ZeroVec::from_bytes_unchecked(&[\n+                    101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8,\n+                    110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 49u8, 53u8, 48u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8,\n+                    48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 49u8, 53u8,\n+                    48u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8,\n+                    110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8,\n+                    49u8, 53u8, 48u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8,\n+                    49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8,\n+                    110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 49u8, 53u8, 48u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8,\n+                    49u8, 53u8, 48u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8,\n+                    49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8,\n+                    110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 49u8, 53u8, 48u8, 101u8, 110u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8,\n+                    48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8,\n+                    49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8,\n+                    110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8,\n+                    48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8,\n+                    49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8,\n+                    110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8,\n+                    48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8,\n+                    49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8,\n+                    110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8,\n+                    48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8,\n+                    49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8,\n+                    110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8,\n+                    48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8,\n+                    49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8,\n+                    110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 49u8, 53u8, 48u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8,\n+                    48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8,\n+                    49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8,\n+                    110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8,\n+                    48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8,\n+                    49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8,\n+                    110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 49u8, 53u8, 48u8, 101u8, 110u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 1u8, 49u8, 53u8, 48u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8,\n+                    48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8,\n+                    49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8,\n+                    110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8,\n+                    48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8,\n+                    49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8,\n+                    110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8,\n+                    48u8, 48u8, 49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8,\n+                    49u8, 101u8, 110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8,\n+                    110u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 48u8, 48u8, 49u8, 101u8, 115u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 52u8, 49u8, 57u8, 101u8, 115u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 52u8, 49u8, 57u8, 101u8, 115u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 1u8, 52u8, 49u8, 57u8, 101u8, 115u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8,\n+                    52u8, 49u8, 57u8, 101u8, 115u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 52u8, 49u8,\n+                    57u8, 101u8, 115u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 52u8, 49u8, 57u8, 101u8,\n+                    115u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 52u8, 49u8, 57u8, 101u8, 115u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 52u8, 49u8, 57u8, 101u8, 115u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 52u8, 49u8, 57u8, 101u8, 115u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 1u8, 52u8, 49u8, 57u8, 101u8, 115u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8,\n+                    52u8, 49u8, 57u8, 101u8, 115u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 52u8, 49u8,\n+                    57u8, 101u8, 115u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 52u8, 49u8, 57u8, 101u8,\n+                    115u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 52u8, 49u8, 57u8, 101u8, 115u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 52u8, 49u8, 57u8, 101u8, 115u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 52u8, 49u8, 57u8, 101u8, 115u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 1u8, 52u8, 49u8, 57u8, 101u8, 115u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8,\n+                    52u8, 49u8, 57u8, 101u8, 115u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 52u8, 49u8,\n+                    57u8, 101u8, 115u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 52u8, 49u8, 57u8, 101u8,\n+                    115u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 52u8, 49u8, 57u8, 101u8, 115u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 52u8, 49u8, 57u8, 101u8, 110u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 73u8, 78u8, 0u8, 102u8, 114u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 1u8, 72u8, 84u8, 0u8, 110u8, 111u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 110u8, 111u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    112u8, 116u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 80u8, 84u8, 0u8, 112u8, 116u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 80u8, 84u8, 0u8, 112u8, 116u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 1u8, 80u8, 84u8, 0u8, 112u8, 116u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 1u8, 80u8, 84u8, 0u8, 112u8, 116u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    1u8, 80u8, 84u8, 0u8, 112u8, 116u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 80u8,\n+                    84u8, 0u8, 112u8, 116u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 80u8, 84u8, 0u8,\n+                    112u8, 116u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 80u8, 84u8, 0u8, 112u8, 116u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 80u8, 84u8, 0u8, 112u8, 116u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 1u8, 80u8, 84u8, 0u8, 112u8, 116u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 1u8, 80u8, 84u8, 0u8, 122u8, 104u8, 0u8, 1u8, 72u8, 97u8, 110u8,\n+                    116u8, 1u8, 72u8, 75u8, 0u8,\n+                ])\n+            },\n+        )\n+    },\n+};"}, {"sha": "7df33c12e3d5a6c28a06547c4af3f31b325aa268", "filename": "compiler/rustc_baked_icu_data/src/data/fallback/supplement/co_v1.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Ffallback%2Fsupplement%2Fco_v1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Ffallback%2Fsupplement%2Fco_v1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Ffallback%2Fsupplement%2Fco_v1.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,41 @@\n+// @generated\n+type DataStruct = < :: icu_provider_adapters :: fallback :: provider :: CollationFallbackSupplementV1Marker as :: icu_provider :: DataMarker > :: Yokeable ;\n+pub static DATA: litemap::LiteMap<&str, &DataStruct, &[(&str, &DataStruct)]> =\n+    litemap::LiteMap::from_sorted_store_unchecked(&[(\"und\", UND)]);\n+static UND: &DataStruct =\n+    &::icu_provider_adapters::fallback::provider::LocaleFallbackSupplementV1 {\n+        parents: unsafe {\n+            #[allow(unused_unsafe)]\n+            ::zerovec::ZeroMap::from_parts_unchecked(\n+                unsafe {\n+                    ::zerovec::VarZeroVec::from_bytes_unchecked(&[\n+                        1u8, 0u8, 0u8, 0u8, 0u8, 0u8, 121u8, 117u8, 101u8,\n+                    ])\n+                },\n+                unsafe {\n+                    ::zerovec::ZeroVec::from_bytes_unchecked(&[\n+                        122u8, 104u8, 0u8, 1u8, 72u8, 97u8, 110u8, 116u8, 0u8, 0u8, 0u8, 0u8,\n+                    ])\n+                },\n+            )\n+        },\n+        unicode_extension_defaults: unsafe {\n+            #[allow(unused_unsafe)]\n+            ::zerovec::ZeroMap2d::from_parts_unchecked(\n+                unsafe { ::zerovec::ZeroVec::from_bytes_unchecked(&[99u8, 111u8]) },\n+                unsafe { ::zerovec::ZeroVec::from_bytes_unchecked(&[2u8, 0u8, 0u8, 0u8]) },\n+                unsafe {\n+                    ::zerovec::VarZeroVec::from_bytes_unchecked(&[\n+                        2u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 122u8, 104u8, 122u8, 104u8, 45u8,\n+                        72u8, 97u8, 110u8, 116u8,\n+                    ])\n+                },\n+                unsafe {\n+                    ::zerovec::VarZeroVec::from_bytes_unchecked(&[\n+                        2u8, 0u8, 0u8, 0u8, 0u8, 0u8, 6u8, 0u8, 112u8, 105u8, 110u8, 121u8, 105u8,\n+                        110u8, 115u8, 116u8, 114u8, 111u8, 107u8, 101u8,\n+                    ])\n+                },\n+            )\n+        },\n+    };"}, {"sha": "62957134f0755fd40905fdf63d9de5afa3cc1e5c", "filename": "compiler/rustc_baked_icu_data/src/data/fallback/supplement/mod.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Ffallback%2Fsupplement%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Ffallback%2Fsupplement%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Ffallback%2Fsupplement%2Fmod.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,2 @@\n+// @generated\n+pub mod co_v1;"}, {"sha": "9cae549e118d55dc9300e0c1d284cf56489724a9", "filename": "compiler/rustc_baked_icu_data/src/data/list/and_v1.rs", "status": "added", "additions": 1161, "deletions": 0, "changes": 1161, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Flist%2Fand_v1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Flist%2Fand_v1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Flist%2Fand_v1.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,1161 @@\n+// @generated\n+type DataStruct = <::icu_list::provider::AndListV1Marker as ::icu_provider::DataMarker>::Yokeable;\n+pub static DATA: litemap::LiteMap<&str, &DataStruct, &[(&str, &DataStruct)]> =\n+    litemap::LiteMap::from_sorted_store_unchecked(&[\n+        (\"en\", EN),\n+        (\"es\", ES),\n+        (\"fr\", FR),\n+        (\"it\", IT),\n+        (\"ja\", JA),\n+        (\"pt\", PT),\n+        (\"ru\", RU),\n+        (\"tr\", TR),\n+        (\"und\", UND),\n+        (\"zh\", ZH_ZH_HANS),\n+        (\"zh-Hans\", ZH_ZH_HANS),\n+        (\"zh-Hant\", ZH_HANT),\n+    ]);\n+static EN: &DataStruct = &::icu_list::provider::ListFormatterPatternsV1([\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", and \", 6u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" and \", 5u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", & \", 4u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" & \", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+]);\n+static ES: &DataStruct = &::icu_list::provider::ListFormatterPatternsV1([\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" y \", 3u8)\n+        },\n+        special_case: Some(::icu_list::provider::SpecialCasePattern {\n+            condition: unsafe {\n+                ::icu_list::provider::StringMatcher::from_dfa_bytes_unchecked(&[\n+                    114u8, 117u8, 115u8, 116u8, 45u8, 114u8, 101u8, 103u8, 101u8, 120u8, 45u8,\n+                    97u8, 117u8, 116u8, 111u8, 109u8, 97u8, 116u8, 97u8, 45u8, 100u8, 102u8, 97u8,\n+                    45u8, 115u8, 112u8, 97u8, 114u8, 115u8, 101u8, 0u8, 0u8, 255u8, 254u8, 0u8,\n+                    0u8, 2u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 14u8, 0u8, 0u8, 0u8, 1u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 2u8, 2u8, 2u8, 3u8, 4u8, 4u8, 5u8, 6u8, 7u8, 7u8, 7u8, 7u8,\n+                    7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8,\n+                    7u8, 7u8, 7u8, 8u8, 9u8, 9u8, 9u8, 10u8, 11u8, 11u8, 12u8, 13u8, 14u8, 14u8,\n+                    14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8,\n+                    14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8,\n+                    15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 16u8, 16u8, 16u8,\n+                    16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 18u8, 18u8, 19u8, 19u8, 19u8, 19u8, 19u8,\n+                    19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8,\n+                    19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 20u8,\n+                    21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 22u8,\n+                    23u8, 23u8, 24u8, 25u8, 25u8, 25u8, 26u8, 27u8, 27u8, 27u8, 27u8, 27u8, 27u8,\n+                    27u8, 27u8, 27u8, 27u8, 27u8, 40u8, 1u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 128u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 5u8,\n+                    0u8, 5u8, 5u8, 6u8, 6u8, 12u8, 12u8, 13u8, 13u8, 0u8, 0u8, 83u8, 0u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 83u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 2u8, 0u8, 0u8, 27u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8, 18u8, 0u8, 0u8,\n+                    0u8, 0u8, 3u8, 0u8, 6u8, 6u8, 13u8, 13u8, 0u8, 0u8, 104u8, 0u8, 0u8, 0u8,\n+                    104u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 14u8, 0u8, 0u8, 0u8, 2u8, 2u8,\n+                    4u8, 7u8, 9u8, 9u8, 11u8, 14u8, 19u8, 19u8, 20u8, 20u8, 21u8, 21u8, 22u8, 22u8,\n+                    23u8, 23u8, 24u8, 24u8, 25u8, 25u8, 26u8, 26u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8,\n+                    0u8, 191u8, 0u8, 0u8, 0u8, 206u8, 0u8, 0u8, 0u8, 221u8, 0u8, 0u8, 0u8, 236u8,\n+                    0u8, 0u8, 0u8, 221u8, 0u8, 0u8, 0u8, 251u8, 0u8, 0u8, 0u8, 10u8, 1u8, 0u8, 0u8,\n+                    25u8, 1u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 17u8, 17u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 16u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 16u8, 17u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 15u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 4u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8,\n+                    0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 9u8, 0u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8,\n+                    18u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8,\n+                    0u8, 35u8, 0u8, 0u8, 0u8,\n+                ])\n+            },\n+            pattern: unsafe {\n+                ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" e \", 3u8)\n+            },\n+        }),\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" y \", 3u8)\n+        },\n+        special_case: Some(::icu_list::provider::SpecialCasePattern {\n+            condition: unsafe {\n+                ::icu_list::provider::StringMatcher::from_dfa_bytes_unchecked(&[\n+                    114u8, 117u8, 115u8, 116u8, 45u8, 114u8, 101u8, 103u8, 101u8, 120u8, 45u8,\n+                    97u8, 117u8, 116u8, 111u8, 109u8, 97u8, 116u8, 97u8, 45u8, 100u8, 102u8, 97u8,\n+                    45u8, 115u8, 112u8, 97u8, 114u8, 115u8, 101u8, 0u8, 0u8, 255u8, 254u8, 0u8,\n+                    0u8, 2u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 14u8, 0u8, 0u8, 0u8, 1u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 2u8, 2u8, 2u8, 3u8, 4u8, 4u8, 5u8, 6u8, 7u8, 7u8, 7u8, 7u8,\n+                    7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8,\n+                    7u8, 7u8, 7u8, 8u8, 9u8, 9u8, 9u8, 10u8, 11u8, 11u8, 12u8, 13u8, 14u8, 14u8,\n+                    14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8,\n+                    14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8,\n+                    15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 16u8, 16u8, 16u8,\n+                    16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 18u8, 18u8, 19u8, 19u8, 19u8, 19u8, 19u8,\n+                    19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8,\n+                    19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 20u8,\n+                    21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 22u8,\n+                    23u8, 23u8, 24u8, 25u8, 25u8, 25u8, 26u8, 27u8, 27u8, 27u8, 27u8, 27u8, 27u8,\n+                    27u8, 27u8, 27u8, 27u8, 27u8, 40u8, 1u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 128u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 5u8,\n+                    0u8, 5u8, 5u8, 6u8, 6u8, 12u8, 12u8, 13u8, 13u8, 0u8, 0u8, 83u8, 0u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 83u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 2u8, 0u8, 0u8, 27u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8, 18u8, 0u8, 0u8,\n+                    0u8, 0u8, 3u8, 0u8, 6u8, 6u8, 13u8, 13u8, 0u8, 0u8, 104u8, 0u8, 0u8, 0u8,\n+                    104u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 14u8, 0u8, 0u8, 0u8, 2u8, 2u8,\n+                    4u8, 7u8, 9u8, 9u8, 11u8, 14u8, 19u8, 19u8, 20u8, 20u8, 21u8, 21u8, 22u8, 22u8,\n+                    23u8, 23u8, 24u8, 24u8, 25u8, 25u8, 26u8, 26u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8,\n+                    0u8, 191u8, 0u8, 0u8, 0u8, 206u8, 0u8, 0u8, 0u8, 221u8, 0u8, 0u8, 0u8, 236u8,\n+                    0u8, 0u8, 0u8, 221u8, 0u8, 0u8, 0u8, 251u8, 0u8, 0u8, 0u8, 10u8, 1u8, 0u8, 0u8,\n+                    25u8, 1u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 17u8, 17u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 16u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 16u8, 17u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 15u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 4u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8,\n+                    0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 9u8, 0u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8,\n+                    18u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8,\n+                    0u8, 35u8, 0u8, 0u8, 0u8,\n+                ])\n+            },\n+            pattern: unsafe {\n+                ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" e \", 3u8)\n+            },\n+        }),\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" y \", 3u8)\n+        },\n+        special_case: Some(::icu_list::provider::SpecialCasePattern {\n+            condition: unsafe {\n+                ::icu_list::provider::StringMatcher::from_dfa_bytes_unchecked(&[\n+                    114u8, 117u8, 115u8, 116u8, 45u8, 114u8, 101u8, 103u8, 101u8, 120u8, 45u8,\n+                    97u8, 117u8, 116u8, 111u8, 109u8, 97u8, 116u8, 97u8, 45u8, 100u8, 102u8, 97u8,\n+                    45u8, 115u8, 112u8, 97u8, 114u8, 115u8, 101u8, 0u8, 0u8, 255u8, 254u8, 0u8,\n+                    0u8, 2u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 14u8, 0u8, 0u8, 0u8, 1u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 2u8, 2u8, 2u8, 3u8, 4u8, 4u8, 5u8, 6u8, 7u8, 7u8, 7u8, 7u8,\n+                    7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8,\n+                    7u8, 7u8, 7u8, 8u8, 9u8, 9u8, 9u8, 10u8, 11u8, 11u8, 12u8, 13u8, 14u8, 14u8,\n+                    14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8,\n+                    14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8,\n+                    15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 16u8, 16u8, 16u8,\n+                    16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 18u8, 18u8, 19u8, 19u8, 19u8, 19u8, 19u8,\n+                    19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8,\n+                    19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 20u8,\n+                    21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 22u8,\n+                    23u8, 23u8, 24u8, 25u8, 25u8, 25u8, 26u8, 27u8, 27u8, 27u8, 27u8, 27u8, 27u8,\n+                    27u8, 27u8, 27u8, 27u8, 27u8, 40u8, 1u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 128u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 5u8,\n+                    0u8, 5u8, 5u8, 6u8, 6u8, 12u8, 12u8, 13u8, 13u8, 0u8, 0u8, 83u8, 0u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 83u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 2u8, 0u8, 0u8, 27u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8, 18u8, 0u8, 0u8,\n+                    0u8, 0u8, 3u8, 0u8, 6u8, 6u8, 13u8, 13u8, 0u8, 0u8, 104u8, 0u8, 0u8, 0u8,\n+                    104u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 14u8, 0u8, 0u8, 0u8, 2u8, 2u8,\n+                    4u8, 7u8, 9u8, 9u8, 11u8, 14u8, 19u8, 19u8, 20u8, 20u8, 21u8, 21u8, 22u8, 22u8,\n+                    23u8, 23u8, 24u8, 24u8, 25u8, 25u8, 26u8, 26u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8,\n+                    0u8, 191u8, 0u8, 0u8, 0u8, 206u8, 0u8, 0u8, 0u8, 221u8, 0u8, 0u8, 0u8, 236u8,\n+                    0u8, 0u8, 0u8, 221u8, 0u8, 0u8, 0u8, 251u8, 0u8, 0u8, 0u8, 10u8, 1u8, 0u8, 0u8,\n+                    25u8, 1u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 17u8, 17u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 16u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 16u8, 17u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 15u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 4u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8,\n+                    0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 9u8, 0u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8,\n+                    18u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8,\n+                    0u8, 35u8, 0u8, 0u8, 0u8,\n+                ])\n+            },\n+            pattern: unsafe {\n+                ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" e \", 3u8)\n+            },\n+        }),\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" y \", 3u8)\n+        },\n+        special_case: Some(::icu_list::provider::SpecialCasePattern {\n+            condition: unsafe {\n+                ::icu_list::provider::StringMatcher::from_dfa_bytes_unchecked(&[\n+                    114u8, 117u8, 115u8, 116u8, 45u8, 114u8, 101u8, 103u8, 101u8, 120u8, 45u8,\n+                    97u8, 117u8, 116u8, 111u8, 109u8, 97u8, 116u8, 97u8, 45u8, 100u8, 102u8, 97u8,\n+                    45u8, 115u8, 112u8, 97u8, 114u8, 115u8, 101u8, 0u8, 0u8, 255u8, 254u8, 0u8,\n+                    0u8, 2u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 14u8, 0u8, 0u8, 0u8, 1u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 2u8, 2u8, 2u8, 3u8, 4u8, 4u8, 5u8, 6u8, 7u8, 7u8, 7u8, 7u8,\n+                    7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8,\n+                    7u8, 7u8, 7u8, 8u8, 9u8, 9u8, 9u8, 10u8, 11u8, 11u8, 12u8, 13u8, 14u8, 14u8,\n+                    14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8,\n+                    14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8,\n+                    15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 16u8, 16u8, 16u8,\n+                    16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 18u8, 18u8, 19u8, 19u8, 19u8, 19u8, 19u8,\n+                    19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8,\n+                    19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 20u8,\n+                    21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 22u8,\n+                    23u8, 23u8, 24u8, 25u8, 25u8, 25u8, 26u8, 27u8, 27u8, 27u8, 27u8, 27u8, 27u8,\n+                    27u8, 27u8, 27u8, 27u8, 27u8, 40u8, 1u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 128u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 5u8,\n+                    0u8, 5u8, 5u8, 6u8, 6u8, 12u8, 12u8, 13u8, 13u8, 0u8, 0u8, 83u8, 0u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 83u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 2u8, 0u8, 0u8, 27u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8, 18u8, 0u8, 0u8,\n+                    0u8, 0u8, 3u8, 0u8, 6u8, 6u8, 13u8, 13u8, 0u8, 0u8, 104u8, 0u8, 0u8, 0u8,\n+                    104u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 14u8, 0u8, 0u8, 0u8, 2u8, 2u8,\n+                    4u8, 7u8, 9u8, 9u8, 11u8, 14u8, 19u8, 19u8, 20u8, 20u8, 21u8, 21u8, 22u8, 22u8,\n+                    23u8, 23u8, 24u8, 24u8, 25u8, 25u8, 26u8, 26u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8,\n+                    0u8, 191u8, 0u8, 0u8, 0u8, 206u8, 0u8, 0u8, 0u8, 221u8, 0u8, 0u8, 0u8, 236u8,\n+                    0u8, 0u8, 0u8, 221u8, 0u8, 0u8, 0u8, 251u8, 0u8, 0u8, 0u8, 10u8, 1u8, 0u8, 0u8,\n+                    25u8, 1u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 17u8, 17u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 16u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 16u8, 17u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 15u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 4u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8,\n+                    0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 9u8, 0u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8,\n+                    18u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8,\n+                    0u8, 35u8, 0u8, 0u8, 0u8,\n+                ])\n+            },\n+            pattern: unsafe {\n+                ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" e \", 3u8)\n+            },\n+        }),\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" y \", 3u8)\n+        },\n+        special_case: Some(::icu_list::provider::SpecialCasePattern {\n+            condition: unsafe {\n+                ::icu_list::provider::StringMatcher::from_dfa_bytes_unchecked(&[\n+                    114u8, 117u8, 115u8, 116u8, 45u8, 114u8, 101u8, 103u8, 101u8, 120u8, 45u8,\n+                    97u8, 117u8, 116u8, 111u8, 109u8, 97u8, 116u8, 97u8, 45u8, 100u8, 102u8, 97u8,\n+                    45u8, 115u8, 112u8, 97u8, 114u8, 115u8, 101u8, 0u8, 0u8, 255u8, 254u8, 0u8,\n+                    0u8, 2u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 14u8, 0u8, 0u8, 0u8, 1u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 2u8, 2u8, 2u8, 3u8, 4u8, 4u8, 5u8, 6u8, 7u8, 7u8, 7u8, 7u8,\n+                    7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8,\n+                    7u8, 7u8, 7u8, 8u8, 9u8, 9u8, 9u8, 10u8, 11u8, 11u8, 12u8, 13u8, 14u8, 14u8,\n+                    14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8,\n+                    14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8,\n+                    15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 16u8, 16u8, 16u8,\n+                    16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 18u8, 18u8, 19u8, 19u8, 19u8, 19u8, 19u8,\n+                    19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8,\n+                    19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 20u8,\n+                    21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 22u8,\n+                    23u8, 23u8, 24u8, 25u8, 25u8, 25u8, 26u8, 27u8, 27u8, 27u8, 27u8, 27u8, 27u8,\n+                    27u8, 27u8, 27u8, 27u8, 27u8, 40u8, 1u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 128u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 5u8,\n+                    0u8, 5u8, 5u8, 6u8, 6u8, 12u8, 12u8, 13u8, 13u8, 0u8, 0u8, 83u8, 0u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 83u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 2u8, 0u8, 0u8, 27u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8, 18u8, 0u8, 0u8,\n+                    0u8, 0u8, 3u8, 0u8, 6u8, 6u8, 13u8, 13u8, 0u8, 0u8, 104u8, 0u8, 0u8, 0u8,\n+                    104u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 14u8, 0u8, 0u8, 0u8, 2u8, 2u8,\n+                    4u8, 7u8, 9u8, 9u8, 11u8, 14u8, 19u8, 19u8, 20u8, 20u8, 21u8, 21u8, 22u8, 22u8,\n+                    23u8, 23u8, 24u8, 24u8, 25u8, 25u8, 26u8, 26u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8,\n+                    0u8, 191u8, 0u8, 0u8, 0u8, 206u8, 0u8, 0u8, 0u8, 221u8, 0u8, 0u8, 0u8, 236u8,\n+                    0u8, 0u8, 0u8, 221u8, 0u8, 0u8, 0u8, 251u8, 0u8, 0u8, 0u8, 10u8, 1u8, 0u8, 0u8,\n+                    25u8, 1u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 17u8, 17u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 16u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 16u8, 17u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 15u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 4u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8,\n+                    0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 9u8, 0u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8,\n+                    18u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8,\n+                    0u8, 35u8, 0u8, 0u8, 0u8,\n+                ])\n+            },\n+            pattern: unsafe {\n+                ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" e \", 3u8)\n+            },\n+        }),\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" y \", 3u8)\n+        },\n+        special_case: Some(::icu_list::provider::SpecialCasePattern {\n+            condition: unsafe {\n+                ::icu_list::provider::StringMatcher::from_dfa_bytes_unchecked(&[\n+                    114u8, 117u8, 115u8, 116u8, 45u8, 114u8, 101u8, 103u8, 101u8, 120u8, 45u8,\n+                    97u8, 117u8, 116u8, 111u8, 109u8, 97u8, 116u8, 97u8, 45u8, 100u8, 102u8, 97u8,\n+                    45u8, 115u8, 112u8, 97u8, 114u8, 115u8, 101u8, 0u8, 0u8, 255u8, 254u8, 0u8,\n+                    0u8, 2u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 14u8, 0u8, 0u8, 0u8, 1u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 1u8, 2u8, 2u8, 2u8, 3u8, 4u8, 4u8, 5u8, 6u8, 7u8, 7u8, 7u8, 7u8,\n+                    7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8, 7u8,\n+                    7u8, 7u8, 7u8, 8u8, 9u8, 9u8, 9u8, 10u8, 11u8, 11u8, 12u8, 13u8, 14u8, 14u8,\n+                    14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8,\n+                    14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 14u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8,\n+                    15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 15u8, 16u8, 16u8, 16u8,\n+                    16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8, 16u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 17u8,\n+                    17u8, 17u8, 17u8, 17u8, 17u8, 17u8, 18u8, 18u8, 19u8, 19u8, 19u8, 19u8, 19u8,\n+                    19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8,\n+                    19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 19u8, 20u8,\n+                    21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 21u8, 22u8,\n+                    23u8, 23u8, 24u8, 25u8, 25u8, 25u8, 26u8, 27u8, 27u8, 27u8, 27u8, 27u8, 27u8,\n+                    27u8, 27u8, 27u8, 27u8, 27u8, 40u8, 1u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 128u8,\n+                    0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 5u8,\n+                    0u8, 5u8, 5u8, 6u8, 6u8, 12u8, 12u8, 13u8, 13u8, 0u8, 0u8, 83u8, 0u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 83u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 2u8, 0u8, 0u8, 27u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8, 18u8, 0u8, 0u8,\n+                    0u8, 0u8, 3u8, 0u8, 6u8, 6u8, 13u8, 13u8, 0u8, 0u8, 104u8, 0u8, 0u8, 0u8,\n+                    104u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 14u8, 0u8, 0u8, 0u8, 2u8, 2u8,\n+                    4u8, 7u8, 9u8, 9u8, 11u8, 14u8, 19u8, 19u8, 20u8, 20u8, 21u8, 21u8, 22u8, 22u8,\n+                    23u8, 23u8, 24u8, 24u8, 25u8, 25u8, 26u8, 26u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8, 0u8, 68u8, 0u8, 0u8,\n+                    0u8, 191u8, 0u8, 0u8, 0u8, 206u8, 0u8, 0u8, 0u8, 221u8, 0u8, 0u8, 0u8, 236u8,\n+                    0u8, 0u8, 0u8, 221u8, 0u8, 0u8, 0u8, 251u8, 0u8, 0u8, 0u8, 10u8, 1u8, 0u8, 0u8,\n+                    25u8, 1u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    68u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 17u8, 17u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 16u8, 0u8, 0u8,\n+                    191u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 16u8, 17u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 17u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 2u8, 0u8, 15u8, 15u8, 0u8, 0u8,\n+                    221u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 4u8, 0u8, 0u8, 0u8, 0u8, 0u8,\n+                    0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 35u8,\n+                    0u8, 0u8, 0u8, 35u8, 0u8, 0u8, 0u8, 9u8, 0u8, 0u8, 0u8, 18u8, 0u8, 0u8, 0u8,\n+                    18u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 35u8, 0u8, 0u8,\n+                    0u8, 35u8, 0u8, 0u8, 0u8,\n+                ])\n+            },\n+            pattern: unsafe {\n+                ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" e \", 3u8)\n+            },\n+        }),\n+    },\n+]);\n+static FR: &DataStruct = &::icu_list::provider::ListFormatterPatternsV1([\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" et \", 4u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" et \", 4u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" et \", 4u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" et \", 4u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+]);\n+static IT: &DataStruct = &::icu_list::provider::ListFormatterPatternsV1([\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" e \", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" e \", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" e \", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" e \", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" e \", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" e \", 3u8)\n+        },\n+        special_case: None,\n+    },\n+]);\n+static JA: &DataStruct = &::icu_list::provider::ListFormatterPatternsV1([\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+]);\n+static PT: &DataStruct = &::icu_list::provider::ListFormatterPatternsV1([\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" e \", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" e \", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" e \", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" e \", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+]);\n+static RU: &DataStruct = &::icu_list::provider::ListFormatterPatternsV1([\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" \u0438 \", 4u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" \u0438 \", 4u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" \u0438 \", 4u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" \u0438 \", 4u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+]);\n+static TR: &DataStruct = &::icu_list::provider::ListFormatterPatternsV1([\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" ve \", 4u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" ve \", 4u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" ve \", 4u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\" ve \", 4u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+]);\n+static UND: &DataStruct = &::icu_list::provider::ListFormatterPatternsV1([\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\", \", 2u8)\n+        },\n+        special_case: None,\n+    },\n+]);\n+static ZH_HANT: &DataStruct = &::icu_list::provider::ListFormatterPatternsV1([\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u548c\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u548c\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u548c\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u548c\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u548c\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u548c\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+]);\n+static ZH_ZH_HANS: &DataStruct = &::icu_list::provider::ListFormatterPatternsV1([\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u548c\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u548c\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u548c\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u548c\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+    ::icu_list::provider::ConditionalListJoinerPattern {\n+        default: unsafe {\n+            ::icu_list::provider::ListJoinerPattern::from_parts_unchecked(\"\u3001\", 3u8)\n+        },\n+        special_case: None,\n+    },\n+]);"}, {"sha": "931822513cc06fe771488385e4da26ef1dea6e80", "filename": "compiler/rustc_baked_icu_data/src/data/list/mod.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Flist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Flist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Flist%2Fmod.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,2 @@\n+// @generated\n+pub mod and_v1;"}, {"sha": "a6a71c79cd1ba547a5d8a662bb49a2a85940866b", "filename": "compiler/rustc_baked_icu_data/src/data/mod.rs", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_baked_icu_data%2Fsrc%2Fdata%2Fmod.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,90 @@\n+// @generated\n+mod fallback;\n+mod list;\n+/// This data provider was programmatically generated by [`icu_datagen`](\n+/// https://unicode-org.github.io/icu4x-docs/doc/icu_datagen/enum.Out.html#variant.Module).\n+#[non_exhaustive]\n+pub struct BakedDataProvider;\n+use ::icu_provider::prelude::*;\n+impl DataProvider<::icu_list::provider::AndListV1Marker> for BakedDataProvider {\n+    fn load(\n+        &self,\n+        req: DataRequest,\n+    ) -> Result<DataResponse<::icu_list::provider::AndListV1Marker>, DataError> {\n+        Ok(DataResponse {\n+            metadata: Default::default(),\n+            payload: Some(DataPayload::from_owned(zerofrom::ZeroFrom::zero_from(\n+                *list::and_v1::DATA\n+                    .get_by(|k| req.locale.strict_cmp(k.as_bytes()).reverse())\n+                    .ok_or_else(|| {\n+                        DataErrorKind::MissingLocale\n+                            .with_req(::icu_list::provider::AndListV1Marker::KEY, req)\n+                    })?,\n+            ))),\n+        })\n+    }\n+}\n+impl DataProvider<::icu_provider_adapters::fallback::provider::CollationFallbackSupplementV1Marker>\n+    for BakedDataProvider\n+{\n+    fn load(\n+        &self,\n+        req: DataRequest,\n+    ) -> Result<\n+        DataResponse<\n+            ::icu_provider_adapters::fallback::provider::CollationFallbackSupplementV1Marker,\n+        >,\n+        DataError,\n+    > {\n+        Ok(DataResponse {\n+            metadata: Default::default(),\n+            payload: Some(DataPayload::from_owned(zerofrom::ZeroFrom::zero_from(\n+                *fallback::supplement::co_v1::DATA.get_by(|k| req.locale.strict_cmp(k.as_bytes()).reverse()).ok_or_else(|| {\n+                    DataErrorKind::MissingLocale.with_req(::icu_provider_adapters::fallback::provider::CollationFallbackSupplementV1Marker::KEY, req)\n+                })?,\n+            ))),\n+        })\n+    }\n+}\n+impl DataProvider<::icu_provider_adapters::fallback::provider::LocaleFallbackLikelySubtagsV1Marker>\n+    for BakedDataProvider\n+{\n+    fn load(\n+        &self,\n+        req: DataRequest,\n+    ) -> Result<\n+        DataResponse<\n+            ::icu_provider_adapters::fallback::provider::LocaleFallbackLikelySubtagsV1Marker,\n+        >,\n+        DataError,\n+    > {\n+        Ok(DataResponse {\n+            metadata: Default::default(),\n+            payload: Some(DataPayload::from_owned(zerofrom::ZeroFrom::zero_from(\n+                *fallback::likelysubtags_v1::DATA.get_by(|k| req.locale.strict_cmp(k.as_bytes()).reverse()).ok_or_else(|| {\n+                    DataErrorKind::MissingLocale.with_req(::icu_provider_adapters::fallback::provider::LocaleFallbackLikelySubtagsV1Marker::KEY, req)\n+                })?,\n+            ))),\n+        })\n+    }\n+}\n+impl DataProvider<::icu_provider_adapters::fallback::provider::LocaleFallbackParentsV1Marker>\n+    for BakedDataProvider\n+{\n+    fn load(\n+        &self,\n+        req: DataRequest,\n+    ) -> Result<\n+        DataResponse<::icu_provider_adapters::fallback::provider::LocaleFallbackParentsV1Marker>,\n+        DataError,\n+    > {\n+        Ok(DataResponse {\n+            metadata: Default::default(),\n+            payload: Some(DataPayload::from_owned(zerofrom::ZeroFrom::zero_from(\n+                *fallback::parents_v1::DATA.get_by(|k| req.locale.strict_cmp(k.as_bytes()).reverse()).ok_or_else(|| {\n+                    DataErrorKind::MissingLocale.with_req(::icu_provider_adapters::fallback::provider::LocaleFallbackParentsV1Marker::KEY, req)\n+                })?,\n+            ))),\n+        })\n+    }\n+}"}, {"sha": "4651e03f77166857e3d193c190789c89e6b9f24f", "filename": "compiler/rustc_baked_icu_data/src/lib.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_baked_icu_data%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_baked_icu_data%2Fsrc%2Flib.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,46 @@\n+//! This crate contains pre-baked ICU4X data, generated by `icu4x-datagen`. The tool\n+//! fetches locale data from CLDR and transforms them into const code in statics that\n+//! ICU4X can load, via databake. `lib.rs` in this crate is manually written, but all\n+//! other code is generated.\n+//!\n+//! This crate can be regenerated when there's a new CLDR version, though that is unlikely\n+//! to result in changes in most cases (currently this only covers list formatting data, which\n+//! is rather stable). It may need to be regenerated when updating ICU4X versions, especially\n+//! across major versions, in case it fails to compile after an update.\n+//!\n+//! It must be regenerated when adding new locales to Rust, or if Rust's usage of ICU4X\n+//! grows to need more kinds of data.\n+//!\n+//! To regenerate the data, run this command:\n+//!\n+//! ```text\n+//! icu4x-datagen -W --pretty --fingerprint --use-separate-crates \\\n+//! --format mod -l en es fr it ja pt ru tr zh zh-Hans zh-Hant \\\n+//! -k list/and@1 fallback/likelysubtags@1 fallback/parents@1 fallback/supplement/co@1 \\\n+//! --cldr-tag latest --icuexport-tag latest -o src/data\n+//! ```\n+#![allow(elided_lifetimes_in_paths)]\n+\n+mod data {\n+    include!(\"data/mod.rs\");\n+    include!(\"data/any.rs\");\n+}\n+\n+pub use data::BakedDataProvider;\n+\n+pub const fn baked_data_provider() -> BakedDataProvider {\n+    data::BakedDataProvider\n+}\n+\n+pub mod supported_locales {\n+    pub const EN: icu_locid::Locale = icu_locid::locale!(\"en\");\n+    pub const ES: icu_locid::Locale = icu_locid::locale!(\"es\");\n+    pub const FR: icu_locid::Locale = icu_locid::locale!(\"fr\");\n+    pub const IT: icu_locid::Locale = icu_locid::locale!(\"it\");\n+    pub const JA: icu_locid::Locale = icu_locid::locale!(\"ja\");\n+    pub const PT: icu_locid::Locale = icu_locid::locale!(\"pt\");\n+    pub const RU: icu_locid::Locale = icu_locid::locale!(\"ru\");\n+    pub const TR: icu_locid::Locale = icu_locid::locale!(\"tr\");\n+    pub const ZH_HANS: icu_locid::Locale = icu_locid::locale!(\"zh-Hans\");\n+    pub const ZH_HANT: icu_locid::Locale = icu_locid::locale!(\"zh-Hant\");\n+}"}, {"sha": "0c705d2ecf5fface2271ea6b76540eaee71b1d9d", "filename": "compiler/rustc_error_messages/Cargo.toml", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_error_messages%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_error_messages%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2FCargo.toml?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -9,9 +9,17 @@ edition = \"2021\"\n fluent-bundle = \"0.15.2\"\n fluent-syntax = \"0.11\"\n intl-memoizer = \"0.5.1\"\n+rustc_baked_icu_data = { path = \"../rustc_baked_icu_data\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_span = { path = \"../rustc_span\" }\n rustc_macros = { path = \"../rustc_macros\" }\n tracing = \"0.1\"\n unic-langid = { version = \"0.9.0\", features = [\"macros\"] }\n+icu_list = \"1.0.0\"\n+writeable = \"0.5.0\"\n+icu_locid = \"1.0.0\"\n+icu_provider_adapters = \"1.0.0\"\n+\n+[features]\n+rustc_use_parallel_compiler = ['rustc_baked_icu_data/rustc_use_parallel_compiler']"}, {"sha": "d7f9148091ce438d459f98c2837f7614304d52e5", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 91, "deletions": 2, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -10,6 +10,7 @@ extern crate tracing;\n \n use fluent_bundle::FluentResource;\n use fluent_syntax::parser::ParserError;\n+use icu_provider_adapters::fallback::{LocaleFallbackProvider, LocaleFallbacker};\n use rustc_data_structures::sync::Lrc;\n use rustc_macros::{fluent_messages, Decodable, Encodable};\n use rustc_span::Span;\n@@ -30,8 +31,7 @@ use intl_memoizer::concurrent::IntlLangMemoizer;\n #[cfg(not(parallel_compiler))]\n use intl_memoizer::IntlLangMemoizer;\n \n-pub use fluent_bundle::{self, FluentArgs, FluentError, FluentValue};\n-\n+pub use fluent_bundle::{self, types::FluentType, FluentArgs, FluentError, FluentValue};\n pub use unic_langid::{langid, LanguageIdentifier};\n \n // Generates `DEFAULT_LOCALE_RESOURCES` static and `fluent_generated` module.\n@@ -542,3 +542,92 @@ impl From<Vec<Span>> for MultiSpan {\n         MultiSpan::from_spans(spans)\n     }\n }\n+\n+fn icu_locale_from_unic_langid(lang: LanguageIdentifier) -> Option<icu_locid::Locale> {\n+    icu_locid::Locale::try_from_bytes(lang.to_string().as_bytes()).ok()\n+}\n+\n+pub fn fluent_value_from_str_list_sep_by_and<'source>(\n+    l: Vec<Cow<'source, str>>,\n+) -> FluentValue<'source> {\n+    // Fluent requires 'static value here for its AnyEq usages.\n+    #[derive(Clone, PartialEq, Debug)]\n+    struct FluentStrListSepByAnd(Vec<String>);\n+\n+    impl FluentType for FluentStrListSepByAnd {\n+        fn duplicate(&self) -> Box<dyn FluentType + Send> {\n+            Box::new(self.clone())\n+        }\n+\n+        fn as_string(&self, intls: &intl_memoizer::IntlLangMemoizer) -> Cow<'static, str> {\n+            let result = intls\n+                .with_try_get::<MemoizableListFormatter, _, _>((), |list_formatter| {\n+                    list_formatter.format_to_string(self.0.iter())\n+                })\n+                .unwrap();\n+            Cow::Owned(result)\n+        }\n+\n+        #[cfg(not(parallel_compiler))]\n+        fn as_string_threadsafe(\n+            &self,\n+            _intls: &intl_memoizer::concurrent::IntlLangMemoizer,\n+        ) -> Cow<'static, str> {\n+            unreachable!(\"`as_string_threadsafe` is not used in non-parallel rustc\")\n+        }\n+\n+        #[cfg(parallel_compiler)]\n+        fn as_string_threadsafe(\n+            &self,\n+            intls: &intl_memoizer::concurrent::IntlLangMemoizer,\n+        ) -> Cow<'static, str> {\n+            let result = intls\n+                .with_try_get::<MemoizableListFormatter, _, _>((), |list_formatter| {\n+                    list_formatter.format_to_string(self.0.iter())\n+                })\n+                .unwrap();\n+            Cow::Owned(result)\n+        }\n+    }\n+\n+    struct MemoizableListFormatter(icu_list::ListFormatter);\n+\n+    impl std::ops::Deref for MemoizableListFormatter {\n+        type Target = icu_list::ListFormatter;\n+        fn deref(&self) -> &Self::Target {\n+            &self.0\n+        }\n+    }\n+\n+    impl intl_memoizer::Memoizable for MemoizableListFormatter {\n+        type Args = ();\n+        type Error = ();\n+\n+        fn construct(lang: LanguageIdentifier, _args: Self::Args) -> Result<Self, Self::Error>\n+        where\n+            Self: Sized,\n+        {\n+            let baked_data_provider = rustc_baked_icu_data::baked_data_provider();\n+            let locale_fallbacker =\n+                LocaleFallbacker::try_new_with_any_provider(&baked_data_provider)\n+                    .expect(\"Failed to create fallback provider\");\n+            let data_provider =\n+                LocaleFallbackProvider::new_with_fallbacker(baked_data_provider, locale_fallbacker);\n+            let locale = icu_locale_from_unic_langid(lang)\n+                .unwrap_or_else(|| rustc_baked_icu_data::supported_locales::EN);\n+            let list_formatter =\n+                icu_list::ListFormatter::try_new_and_with_length_with_any_provider(\n+                    &data_provider,\n+                    &locale.into(),\n+                    icu_list::ListLength::Wide,\n+                )\n+                .expect(\"Failed to create list formatter\");\n+\n+            Ok(MemoizableListFormatter(list_formatter))\n+        }\n+    }\n+\n+    let l = l.into_iter().map(|x| x.into_owned()).collect();\n+\n+    FluentValue::Custom(Box::new(FluentStrListSepByAnd(l)))\n+}"}, {"sha": "c21d5d9d74e67c51d263febcfceebbafe5999750", "filename": "compiler/rustc_errors/Cargo.toml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_errors%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_errors%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2FCargo.toml?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -27,3 +27,6 @@ serde_json = \"1.0.59\"\n \n [target.'cfg(windows)'.dependencies]\n winapi = { version = \"0.3\", features = [ \"handleapi\", \"synchapi\", \"winbase\" ] }\n+\n+[features]\n+rustc_use_parallel_compiler = ['rustc_error_messages/rustc_use_parallel_compiler']"}, {"sha": "7d5e4723a6d883b6b22bf24c19259c93f210c3fa", "filename": "compiler/rustc_errors/src/diagnostic.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -4,6 +4,7 @@ use crate::{\n     SubdiagnosticMessage, Substitution, SubstitutionPart, SuggestionStyle,\n };\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_error_messages::fluent_value_from_str_list_sep_by_and;\n use rustc_error_messages::FluentValue;\n use rustc_lint_defs::{Applicability, LintExpectationId};\n use rustc_span::edition::LATEST_STABLE_EDITION;\n@@ -34,6 +35,7 @@ pub type DiagnosticArgName<'source> = Cow<'source, str>;\n pub enum DiagnosticArgValue<'source> {\n     Str(Cow<'source, str>),\n     Number(usize),\n+    StrListSepByAnd(Vec<Cow<'source, str>>),\n }\n \n /// Converts a value of a type into a `DiagnosticArg` (typically a field of an `IntoDiagnostic`\n@@ -49,6 +51,9 @@ impl<'source> IntoDiagnosticArg for DiagnosticArgValue<'source> {\n         match self {\n             DiagnosticArgValue::Str(s) => DiagnosticArgValue::Str(Cow::Owned(s.into_owned())),\n             DiagnosticArgValue::Number(n) => DiagnosticArgValue::Number(n),\n+            DiagnosticArgValue::StrListSepByAnd(l) => DiagnosticArgValue::StrListSepByAnd(\n+                l.into_iter().map(|s| Cow::Owned(s.into_owned())).collect(),\n+            ),\n         }\n     }\n }\n@@ -58,6 +63,7 @@ impl<'source> Into<FluentValue<'source>> for DiagnosticArgValue<'source> {\n         match self {\n             DiagnosticArgValue::Str(s) => From::from(s),\n             DiagnosticArgValue::Number(n) => From::from(n),\n+            DiagnosticArgValue::StrListSepByAnd(l) => fluent_value_from_str_list_sep_by_and(l),\n         }\n     }\n }"}, {"sha": "7155db32e53b7f75e71c4e592c70aa58a4278362", "filename": "compiler/rustc_errors/src/diagnostic_impls.rs", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_impls.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -11,7 +11,6 @@ use rustc_target::abi::TargetDataLayoutErrors;\n use rustc_target::spec::{PanicStrategy, SplitDebuginfo, StackProtector, TargetTriple};\n use std::borrow::Cow;\n use std::fmt;\n-use std::fmt::Write;\n use std::num::ParseIntError;\n use std::path::{Path, PathBuf};\n use std::process::ExitStatus;\n@@ -191,23 +190,9 @@ impl From<Vec<Symbol>> for DiagnosticSymbolList {\n \n impl IntoDiagnosticArg for DiagnosticSymbolList {\n     fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n-        // FIXME: replace the logic here with a real list formatter\n-        let symbols = match &self.0[..] {\n-            [symbol] => format!(\"`{symbol}`\"),\n-            [symbol, last] => {\n-                format!(\"`{symbol}` and `{last}`\",)\n-            }\n-            [symbols @ .., last] => {\n-                let mut result = String::new();\n-                for symbol in symbols {\n-                    write!(result, \"`{symbol}`, \").unwrap();\n-                }\n-                write!(result, \"and `{last}`\").unwrap();\n-                result\n-            }\n-            [] => unreachable!(),\n-        };\n-        DiagnosticArgValue::Str(Cow::Owned(symbols))\n+        DiagnosticArgValue::StrListSepByAnd(\n+            self.0.into_iter().map(|sym| Cow::Owned(format!(\"`{sym}`\"))).collect(),\n+        )\n     }\n }\n "}, {"sha": "ae88fcade6314f98c0797b530ed336c496857917", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -644,13 +644,14 @@ impl Handler {\n         inner.stashed_diagnostics = Default::default();\n     }\n \n-    /// Stash a given diagnostic with the given `Span` and `StashKey` as the key for later stealing.\n+    /// Stash a given diagnostic with the given `Span` and [`StashKey`] as the key.\n+    /// Retrieve a stashed diagnostic with `steal_diagnostic`.\n     pub fn stash_diagnostic(&self, span: Span, key: StashKey, diag: Diagnostic) {\n         let mut inner = self.inner.borrow_mut();\n         inner.stash((span, key), diag);\n     }\n \n-    /// Steal a previously stashed diagnostic with the given `Span` and `StashKey` as the key.\n+    /// Steal a previously stashed diagnostic with the given `Span` and [`StashKey`] as the key.\n     pub fn steal_diagnostic(&self, span: Span, key: StashKey) -> Option<DiagnosticBuilder<'_, ()>> {\n         let mut inner = self.inner.borrow_mut();\n         inner.steal((span, key)).map(|diag| DiagnosticBuilder::new_diagnostic(self, diag))"}, {"sha": "010373ba547d07869ffb2461f3154f6e90bc5401", "filename": "compiler/rustc_hir/src/lang_items.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -278,6 +278,8 @@ language_item_table! {\n     TryTraitBranch,          sym::branch,              branch_fn,                  Target::Method(MethodKind::Trait { body: false }), GenericRequirement::None;\n     TryTraitFromYeet,        sym::from_yeet,           from_yeet_fn,               Target::Fn,             GenericRequirement::None;\n \n+    PointerSized,            sym::pointer_sized,       pointer_sized,              Target::Trait,          GenericRequirement::Exact(0);\n+\n     PollReady,               sym::Ready,               poll_ready_variant,         Target::Variant,        GenericRequirement::None;\n     PollPending,             sym::Pending,             poll_pending_variant,       Target::Variant,        GenericRequirement::None;\n "}, {"sha": "c1e4ab600f34f204242165cba1ed560b1fd580cb", "filename": "compiler/rustc_hir_typeck/src/coercion.rs", "status": "modified", "additions": 25, "deletions": 8, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_hir_typeck%2Fsrc%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_hir_typeck%2Fsrc%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fcoercion.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -775,7 +775,7 @@ impl<'f, 'tcx> Coerce<'f, 'tcx> {\n \n         // Check the obligations of the cast -- for example, when casting\n         // `usize` to `dyn* Clone + 'static`:\n-        let obligations = predicates\n+        let mut obligations: Vec<_> = predicates\n             .iter()\n             .map(|predicate| {\n                 // For each existential predicate (e.g., `?Self: Clone`) substitute\n@@ -785,16 +785,33 @@ impl<'f, 'tcx> Coerce<'f, 'tcx> {\n                 let predicate = predicate.with_self_ty(self.tcx, a);\n                 Obligation::new(self.tcx, self.cause.clone(), self.param_env, predicate)\n             })\n-            // Enforce the region bound (e.g., `usize: 'static`, in our example).\n-            .chain([Obligation::new(\n+            .chain([\n+                // Enforce the region bound (e.g., `usize: 'static`, in our example).\n+                Obligation::new(\n+                    self.tcx,\n+                    self.cause.clone(),\n+                    self.param_env,\n+                    ty::Binder::dummy(ty::PredicateKind::TypeOutlives(ty::OutlivesPredicate(\n+                        a, b_region,\n+                    ))),\n+                ),\n+            ])\n+            .collect();\n+\n+        // Enforce that the type is `usize`/pointer-sized. For now, only those\n+        // can be coerced to `dyn*`, except for `dyn* -> dyn*` upcasts.\n+        if !a.is_dyn_star() {\n+            obligations.push(Obligation::new(\n                 self.tcx,\n                 self.cause.clone(),\n                 self.param_env,\n-                self.tcx.mk_predicate(ty::Binder::dummy(ty::PredicateKind::TypeOutlives(\n-                    ty::OutlivesPredicate(a, b_region),\n-                ))),\n-            )])\n-            .collect();\n+                ty::Binder::dummy(ty::TraitRef::new(\n+                    self.tcx.require_lang_item(hir::LangItem::PointerSized, Some(self.cause.span)),\n+                    self.tcx.mk_substs_trait(a, &[]),\n+                ))\n+                .to_poly_trait_predicate(),\n+            ));\n+        }\n \n         Ok(InferOk {\n             value: (vec![Adjustment { kind: Adjust::DynStar, target: b }], b),"}, {"sha": "e67dec31dcee377d3387929efe32c87cbcc44bdd", "filename": "compiler/rustc_interface/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_interface%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_interface%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2FCargo.toml?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -53,4 +53,4 @@ rustc_target = { path = \"../rustc_target\" }\n \n [features]\n llvm = ['rustc_codegen_llvm']\n-rustc_use_parallel_compiler = ['rayon', 'rustc-rayon-core', 'rustc_query_impl/rustc_use_parallel_compiler']\n+rustc_use_parallel_compiler = ['rayon', 'rustc-rayon-core', 'rustc_query_impl/rustc_use_parallel_compiler', 'rustc_errors/rustc_use_parallel_compiler']"}, {"sha": "199b2d32b9d4c1e6b01492321a982f7052713f93", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -1067,6 +1067,7 @@ symbols! {\n         plugins,\n         pointee_trait,\n         pointer,\n+        pointer_sized,\n         poll,\n         position,\n         post_dash_lto: \"post-lto\","}, {"sha": "8183f34bb3c933e5274d9f8cd3858b15c3ea7dd2", "filename": "compiler/rustc_trait_selection/src/traits/select/candidate_assembly.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -304,6 +304,8 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 self.assemble_candidates_for_transmutability(obligation, &mut candidates);\n             } else if lang_items.tuple_trait() == Some(def_id) {\n                 self.assemble_candidate_for_tuple(obligation, &mut candidates);\n+            } else if lang_items.pointer_sized() == Some(def_id) {\n+                self.assemble_candidate_for_ptr_sized(obligation, &mut candidates);\n             } else {\n                 if lang_items.clone_trait() == Some(def_id) {\n                     // Same builtin conditions as `Copy`, i.e., every type which has builtin support\n@@ -1049,4 +1051,30 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             | ty::Placeholder(_) => {}\n         }\n     }\n+\n+    fn assemble_candidate_for_ptr_sized(\n+        &mut self,\n+        obligation: &TraitObligation<'tcx>,\n+        candidates: &mut SelectionCandidateSet<'tcx>,\n+    ) {\n+        // The regions of a type don't affect the size of the type\n+        let self_ty = self\n+            .tcx()\n+            .erase_regions(self.tcx().erase_late_bound_regions(obligation.predicate.self_ty()));\n+\n+        // But if there are inference variables, we have to wait until it's resolved.\n+        if self_ty.has_non_region_infer() {\n+            candidates.ambiguous = true;\n+            return;\n+        }\n+\n+        let usize_layout =\n+            self.tcx().layout_of(ty::ParamEnv::empty().and(self.tcx().types.usize)).unwrap().layout;\n+        if let Ok(layout) = self.tcx().layout_of(obligation.param_env.and(self_ty))\n+            && layout.layout.size() == usize_layout.size()\n+            && layout.layout.align().abi == usize_layout.align().abi\n+        {\n+            candidates.vec.push(BuiltinCandidate { has_nested: false });\n+        }\n+    }\n }"}, {"sha": "7191bbb93447c53e101e8e3bb2348ead8c9b747b", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -131,6 +131,7 @@\n #![feature(const_pin)]\n #![feature(const_ptr_sub_ptr)]\n #![feature(const_replace)]\n+#![feature(const_result_drop)]\n #![feature(const_ptr_as_ref)]\n #![feature(const_ptr_is_null)]\n #![feature(const_ptr_read)]\n@@ -155,6 +156,7 @@\n #![feature(maybe_uninit_uninit_array)]\n #![feature(ptr_alignment_type)]\n #![feature(ptr_metadata)]\n+#![feature(set_ptr_value)]\n #![feature(slice_ptr_get)]\n #![feature(slice_split_at_unchecked)]\n #![feature(str_internals)]"}, {"sha": "42c342801976957a9696b25b92511653d313b918", "filename": "library/core/src/marker.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmarker.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -809,6 +809,15 @@ pub trait Destruct {}\n #[cfg_attr(not(bootstrap), rustc_deny_explicit_impl)]\n pub trait Tuple {}\n \n+/// A marker for things\n+#[unstable(feature = \"pointer_sized_trait\", issue = \"none\")]\n+#[cfg_attr(not(bootstrap), lang = \"pointer_sized\")]\n+#[rustc_on_unimplemented(\n+    message = \"`{Self}` needs to be a pointer-sized type\",\n+    label = \"`{Self}` needs to be a pointer-sized type\"\n+)]\n+pub trait PointerSized {}\n+\n /// Implementations of `Copy` for primitive types.\n ///\n /// Implementations that cannot be described in Rust"}, {"sha": "e1ab7ac5ff045e056a2ba2c26a295867e7137042", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -761,10 +761,11 @@ macro_rules! int_impl {\n         #[rustc_const_unstable(feature = \"const_inherent_unchecked_arith\", issue = \"85122\")]\n         #[inline(always)]\n         #[cfg_attr(miri, track_caller)] // even without panics, this helps for Miri backtraces\n-        pub const unsafe fn unchecked_shl(self, rhs: Self) -> Self {\n+        pub const unsafe fn unchecked_shl(self, rhs: u32) -> Self {\n             // SAFETY: the caller must uphold the safety contract for\n             // `unchecked_shl`.\n-            unsafe { intrinsics::unchecked_shl(self, rhs) }\n+            // Any legal shift amount is losslessly representable in the self type.\n+            unsafe { intrinsics::unchecked_shl(self, rhs.try_into().ok().unwrap_unchecked()) }\n         }\n \n         /// Checked shift right. Computes `self >> rhs`, returning `None` if `rhs` is\n@@ -808,10 +809,11 @@ macro_rules! int_impl {\n         #[rustc_const_unstable(feature = \"const_inherent_unchecked_arith\", issue = \"85122\")]\n         #[inline(always)]\n         #[cfg_attr(miri, track_caller)] // even without panics, this helps for Miri backtraces\n-        pub const unsafe fn unchecked_shr(self, rhs: Self) -> Self {\n+        pub const unsafe fn unchecked_shr(self, rhs: u32) -> Self {\n             // SAFETY: the caller must uphold the safety contract for\n             // `unchecked_shr`.\n-            unsafe { intrinsics::unchecked_shr(self, rhs) }\n+            // Any legal shift amount is losslessly representable in the self type.\n+            unsafe { intrinsics::unchecked_shr(self, rhs.try_into().ok().unwrap_unchecked()) }\n         }\n \n         /// Checked absolute value. Computes `self.abs()`, returning `None` if\n@@ -1358,11 +1360,12 @@ macro_rules! int_impl {\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline(always)]\n+        #[rustc_allow_const_fn_unstable(const_inherent_unchecked_arith)]\n         pub const fn wrapping_shl(self, rhs: u32) -> Self {\n             // SAFETY: the masking by the bitsize of the type ensures that we do not shift\n             // out of bounds\n             unsafe {\n-                intrinsics::unchecked_shl(self, (rhs & ($BITS - 1)) as $SelfT)\n+                self.unchecked_shl(rhs & ($BITS - 1))\n             }\n         }\n \n@@ -1387,11 +1390,12 @@ macro_rules! int_impl {\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline(always)]\n+        #[rustc_allow_const_fn_unstable(const_inherent_unchecked_arith)]\n         pub const fn wrapping_shr(self, rhs: u32) -> Self {\n             // SAFETY: the masking by the bitsize of the type ensures that we do not shift\n             // out of bounds\n             unsafe {\n-                intrinsics::unchecked_shr(self, (rhs & ($BITS - 1)) as $SelfT)\n+                self.unchecked_shr(rhs & ($BITS - 1))\n             }\n         }\n "}, {"sha": "b2328b001de904368ad0adb8ef7ee8a98a080d67", "filename": "library/core/src/num/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -3,6 +3,7 @@\n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n use crate::ascii;\n+use crate::convert::TryInto;\n use crate::error::Error;\n use crate::intrinsics;\n use crate::mem;"}, {"sha": "af74faa90b11031c954536972b8ab5e9170a0e25", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -908,10 +908,11 @@ macro_rules! uint_impl {\n         #[rustc_const_unstable(feature = \"const_inherent_unchecked_arith\", issue = \"85122\")]\n         #[inline(always)]\n         #[cfg_attr(miri, track_caller)] // even without panics, this helps for Miri backtraces\n-        pub const unsafe fn unchecked_shl(self, rhs: Self) -> Self {\n+        pub const unsafe fn unchecked_shl(self, rhs: u32) -> Self {\n             // SAFETY: the caller must uphold the safety contract for\n             // `unchecked_shl`.\n-            unsafe { intrinsics::unchecked_shl(self, rhs) }\n+            // Any legal shift amount is losslessly representable in the self type.\n+            unsafe { intrinsics::unchecked_shl(self, rhs.try_into().ok().unwrap_unchecked()) }\n         }\n \n         /// Checked shift right. Computes `self >> rhs`, returning `None`\n@@ -955,10 +956,11 @@ macro_rules! uint_impl {\n         #[rustc_const_unstable(feature = \"const_inherent_unchecked_arith\", issue = \"85122\")]\n         #[inline(always)]\n         #[cfg_attr(miri, track_caller)] // even without panics, this helps for Miri backtraces\n-        pub const unsafe fn unchecked_shr(self, rhs: Self) -> Self {\n+        pub const unsafe fn unchecked_shr(self, rhs: u32) -> Self {\n             // SAFETY: the caller must uphold the safety contract for\n             // `unchecked_shr`.\n-            unsafe { intrinsics::unchecked_shr(self, rhs) }\n+            // Any legal shift amount is losslessly representable in the self type.\n+            unsafe { intrinsics::unchecked_shr(self, rhs.try_into().ok().unwrap_unchecked()) }\n         }\n \n         /// Checked exponentiation. Computes `self.pow(exp)`, returning `None` if\n@@ -1374,11 +1376,12 @@ macro_rules! uint_impl {\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline(always)]\n+        #[rustc_allow_const_fn_unstable(const_inherent_unchecked_arith)]\n         pub const fn wrapping_shl(self, rhs: u32) -> Self {\n             // SAFETY: the masking by the bitsize of the type ensures that we do not shift\n             // out of bounds\n             unsafe {\n-                intrinsics::unchecked_shl(self, (rhs & ($BITS - 1)) as $SelfT)\n+                self.unchecked_shl(rhs & ($BITS - 1))\n             }\n         }\n \n@@ -1406,11 +1409,12 @@ macro_rules! uint_impl {\n         #[must_use = \"this returns the result of the operation, \\\n                       without modifying the original\"]\n         #[inline(always)]\n+        #[rustc_allow_const_fn_unstable(const_inherent_unchecked_arith)]\n         pub const fn wrapping_shr(self, rhs: u32) -> Self {\n             // SAFETY: the masking by the bitsize of the type ensures that we do not shift\n             // out of bounds\n             unsafe {\n-                intrinsics::unchecked_shr(self, (rhs & ($BITS - 1)) as $SelfT)\n+                self.unchecked_shr(rhs & ($BITS - 1))\n             }\n         }\n "}, {"sha": "bff270b787ece3bf0bb56afc36099ac5de434447", "filename": "library/core/src/ptr/const_ptr.rs", "status": "modified", "additions": 10, "deletions": 19, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -79,19 +79,14 @@ impl<T: ?Sized> *const T {\n     /// }\n     /// ```\n     #[unstable(feature = \"set_ptr_value\", issue = \"75091\")]\n+    #[rustc_const_unstable(feature = \"set_ptr_value\", issue = \"75091\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     #[inline]\n-    pub fn with_metadata_of<U>(self, mut val: *const U) -> *const U\n+    pub const fn with_metadata_of<U>(self, meta: *const U) -> *const U\n     where\n         U: ?Sized,\n     {\n-        let target = &mut val as *mut *const U as *mut *const u8;\n-        // SAFETY: In case of a thin pointer, this operations is identical\n-        // to a simple assignment. In case of a fat pointer, with the current\n-        // fat pointer layout implementation, the first field of such a\n-        // pointer is always the data pointer, which is likewise assigned.\n-        unsafe { *target = self as *const u8 };\n-        val\n+        from_raw_parts::<U>(self as *const (), metadata(meta))\n     }\n \n     /// Changes constness without changing the type.\n@@ -478,8 +473,7 @@ impl<T: ?Sized> *const T {\n     #[cfg_attr(miri, track_caller)] // even without panics, this helps for Miri backtraces\n     pub const unsafe fn byte_offset(self, count: isize) -> Self {\n         // SAFETY: the caller must uphold the safety contract for `offset`.\n-        let this = unsafe { self.cast::<u8>().offset(count).cast::<()>() };\n-        from_raw_parts::<T>(this, metadata(self))\n+        unsafe { self.cast::<u8>().offset(count).with_metadata_of(self) }\n     }\n \n     /// Calculates the offset from a pointer using wrapping arithmetic.\n@@ -559,7 +553,7 @@ impl<T: ?Sized> *const T {\n     #[unstable(feature = \"pointer_byte_offsets\", issue = \"96283\")]\n     #[rustc_const_unstable(feature = \"const_pointer_byte_offsets\", issue = \"96283\")]\n     pub const fn wrapping_byte_offset(self, count: isize) -> Self {\n-        from_raw_parts::<T>(self.cast::<u8>().wrapping_offset(count).cast::<()>(), metadata(self))\n+        self.cast::<u8>().wrapping_offset(count).with_metadata_of(self)\n     }\n \n     /// Masks out bits of the pointer according to a mask.\n@@ -597,8 +591,7 @@ impl<T: ?Sized> *const T {\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     #[inline(always)]\n     pub fn mask(self, mask: usize) -> *const T {\n-        let this = intrinsics::ptr_mask(self.cast::<()>(), mask);\n-        from_raw_parts::<T>(this, metadata(self))\n+        intrinsics::ptr_mask(self.cast::<()>(), mask).with_metadata_of(self)\n     }\n \n     /// Calculates the distance between two pointers. The returned value is in\n@@ -939,8 +932,7 @@ impl<T: ?Sized> *const T {\n     #[cfg_attr(miri, track_caller)] // even without panics, this helps for Miri backtraces\n     pub const unsafe fn byte_add(self, count: usize) -> Self {\n         // SAFETY: the caller must uphold the safety contract for `add`.\n-        let this = unsafe { self.cast::<u8>().add(count).cast::<()>() };\n-        from_raw_parts::<T>(this, metadata(self))\n+        unsafe { self.cast::<u8>().add(count).with_metadata_of(self) }\n     }\n \n     /// Calculates the offset from a pointer (convenience for\n@@ -1026,8 +1018,7 @@ impl<T: ?Sized> *const T {\n     #[cfg_attr(miri, track_caller)] // even without panics, this helps for Miri backtraces\n     pub const unsafe fn byte_sub(self, count: usize) -> Self {\n         // SAFETY: the caller must uphold the safety contract for `sub`.\n-        let this = unsafe { self.cast::<u8>().sub(count).cast::<()>() };\n-        from_raw_parts::<T>(this, metadata(self))\n+        unsafe { self.cast::<u8>().sub(count).with_metadata_of(self) }\n     }\n \n     /// Calculates the offset from a pointer using wrapping arithmetic.\n@@ -1107,7 +1098,7 @@ impl<T: ?Sized> *const T {\n     #[unstable(feature = \"pointer_byte_offsets\", issue = \"96283\")]\n     #[rustc_const_unstable(feature = \"const_pointer_byte_offsets\", issue = \"96283\")]\n     pub const fn wrapping_byte_add(self, count: usize) -> Self {\n-        from_raw_parts::<T>(self.cast::<u8>().wrapping_add(count).cast::<()>(), metadata(self))\n+        self.cast::<u8>().wrapping_add(count).with_metadata_of(self)\n     }\n \n     /// Calculates the offset from a pointer using wrapping arithmetic.\n@@ -1187,7 +1178,7 @@ impl<T: ?Sized> *const T {\n     #[unstable(feature = \"pointer_byte_offsets\", issue = \"96283\")]\n     #[rustc_const_unstable(feature = \"const_pointer_byte_offsets\", issue = \"96283\")]\n     pub const fn wrapping_byte_sub(self, count: usize) -> Self {\n-        from_raw_parts::<T>(self.cast::<u8>().wrapping_sub(count).cast::<()>(), metadata(self))\n+        self.cast::<u8>().wrapping_sub(count).with_metadata_of(self)\n     }\n \n     /// Reads the value from `self` without moving it. This leaves the"}, {"sha": "e0ddb3154de126122588afc6e8c6f430fe33d562", "filename": "library/core/src/ptr/mod.rs", "status": "modified", "additions": 28, "deletions": 26, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -1591,8 +1591,8 @@ pub(crate) unsafe fn align_offset<T: Sized>(p: *const T, a: usize) -> usize {\n     // FIXME(#75598): Direct use of these intrinsics improves codegen significantly at opt-level <=\n     // 1, where the method versions of these operations are not inlined.\n     use intrinsics::{\n-        cttz_nonzero, exact_div, unchecked_rem, unchecked_shl, unchecked_shr, unchecked_sub,\n-        wrapping_add, wrapping_mul, wrapping_sub,\n+        cttz_nonzero, exact_div, mul_with_overflow, unchecked_rem, unchecked_shl, unchecked_shr,\n+        unchecked_sub, wrapping_add, wrapping_mul, wrapping_sub,\n     };\n \n     /// Calculate multiplicative modular inverse of `x` modulo `m`.\n@@ -1612,36 +1612,38 @@ pub(crate) unsafe fn align_offset<T: Sized>(p: *const T, a: usize) -> usize {\n         const INV_TABLE_MOD_16: [u8; 8] = [1, 11, 13, 7, 9, 3, 5, 15];\n         /// Modulo for which the `INV_TABLE_MOD_16` is intended.\n         const INV_TABLE_MOD: usize = 16;\n-        /// INV_TABLE_MOD\u00b2\n-        const INV_TABLE_MOD_SQUARED: usize = INV_TABLE_MOD * INV_TABLE_MOD;\n \n-        let table_inverse = INV_TABLE_MOD_16[(x & (INV_TABLE_MOD - 1)) >> 1] as usize;\n         // SAFETY: `m` is required to be a power-of-two, hence non-zero.\n         let m_minus_one = unsafe { unchecked_sub(m, 1) };\n-        if m <= INV_TABLE_MOD {\n-            table_inverse & m_minus_one\n-        } else {\n-            // We iterate \"up\" using the following formula:\n-            //\n-            // $$ xy \u2261 1 (mod 2\u207f) \u2192 xy (2 - xy) \u2261 1 (mod 2\u00b2\u207f) $$\n+        let mut inverse = INV_TABLE_MOD_16[(x & (INV_TABLE_MOD - 1)) >> 1] as usize;\n+        let mut mod_gate = INV_TABLE_MOD;\n+        // We iterate \"up\" using the following formula:\n+        //\n+        // $$ xy \u2261 1 (mod 2\u207f) \u2192 xy (2 - xy) \u2261 1 (mod 2\u00b2\u207f) $$\n+        //\n+        // This application needs to be applied at least until `2\u00b2\u207f \u2265 m`, at which point we can\n+        // finally reduce the computation to our desired `m` by taking `inverse mod m`.\n+        //\n+        // This computation is `O(log log m)`, which is to say, that on 64-bit machines this loop\n+        // will always finish in at most 4 iterations.\n+        loop {\n+            // y = y * (2 - xy) mod n\n             //\n-            // until 2\u00b2\u207f \u2265 m. Then we can reduce to our desired `m` by taking the result `mod m`.\n-            let mut inverse = table_inverse;\n-            let mut going_mod = INV_TABLE_MOD_SQUARED;\n-            loop {\n-                // y = y * (2 - xy) mod n\n-                //\n-                // Note, that we use wrapping operations here intentionally \u2013 the original formula\n-                // uses e.g., subtraction `mod n`. It is entirely fine to do them `mod\n-                // usize::MAX` instead, because we take the result `mod n` at the end\n-                // anyway.\n-                inverse = wrapping_mul(inverse, wrapping_sub(2usize, wrapping_mul(x, inverse)));\n-                if going_mod >= m {\n-                    return inverse & m_minus_one;\n-                }\n-                going_mod = wrapping_mul(going_mod, going_mod);\n+            // Note, that we use wrapping operations here intentionally \u2013 the original formula\n+            // uses e.g., subtraction `mod n`. It is entirely fine to do them `mod\n+            // usize::MAX` instead, because we take the result `mod n` at the end\n+            // anyway.\n+            if mod_gate >= m {\n+                break;\n+            }\n+            inverse = wrapping_mul(inverse, wrapping_sub(2usize, wrapping_mul(x, inverse)));\n+            let (new_gate, overflow) = mul_with_overflow(mod_gate, mod_gate);\n+            if overflow {\n+                break;\n             }\n+            mod_gate = new_gate;\n         }\n+        inverse & m_minus_one\n     }\n \n     let addr = p.addr();"}, {"sha": "8f4809ec4baa4a6c51d4b02c92b1531c24b5ef5e", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 10, "deletions": 26, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -78,23 +78,14 @@ impl<T: ?Sized> *mut T {\n     /// }\n     /// ```\n     #[unstable(feature = \"set_ptr_value\", issue = \"75091\")]\n+    #[rustc_const_unstable(feature = \"set_ptr_value\", issue = \"75091\")]\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     #[inline]\n-    pub fn with_metadata_of<U>(self, val: *const U) -> *mut U\n+    pub const fn with_metadata_of<U>(self, meta: *const U) -> *mut U\n     where\n         U: ?Sized,\n     {\n-        // Prepare in the type system that we will replace the pointer value with a mutable\n-        // pointer, taking the mutable provenance from the `self` pointer.\n-        let mut val = val as *mut U;\n-        // Pointer to the pointer value within the value.\n-        let target = &mut val as *mut *mut U as *mut *mut u8;\n-        // SAFETY: In case of a thin pointer, this operations is identical\n-        // to a simple assignment. In case of a fat pointer, with the current\n-        // fat pointer layout implementation, the first field of such a\n-        // pointer is always the data pointer, which is likewise assigned.\n-        unsafe { *target = self as *mut u8 };\n-        val\n+        from_raw_parts_mut::<U>(self as *mut (), metadata(meta))\n     }\n \n     /// Changes constness without changing the type.\n@@ -496,8 +487,7 @@ impl<T: ?Sized> *mut T {\n     #[cfg_attr(miri, track_caller)] // even without panics, this helps for Miri backtraces\n     pub const unsafe fn byte_offset(self, count: isize) -> Self {\n         // SAFETY: the caller must uphold the safety contract for `offset`.\n-        let this = unsafe { self.cast::<u8>().offset(count).cast::<()>() };\n-        from_raw_parts_mut::<T>(this, metadata(self))\n+        unsafe { self.cast::<u8>().offset(count).with_metadata_of(self) }\n     }\n \n     /// Calculates the offset from a pointer using wrapping arithmetic.\n@@ -576,10 +566,7 @@ impl<T: ?Sized> *mut T {\n     #[unstable(feature = \"pointer_byte_offsets\", issue = \"96283\")]\n     #[rustc_const_unstable(feature = \"const_pointer_byte_offsets\", issue = \"96283\")]\n     pub const fn wrapping_byte_offset(self, count: isize) -> Self {\n-        from_raw_parts_mut::<T>(\n-            self.cast::<u8>().wrapping_offset(count).cast::<()>(),\n-            metadata(self),\n-        )\n+        self.cast::<u8>().wrapping_offset(count).with_metadata_of(self)\n     }\n \n     /// Masks out bits of the pointer according to a mask.\n@@ -620,8 +607,7 @@ impl<T: ?Sized> *mut T {\n     #[must_use = \"returns a new pointer rather than modifying its argument\"]\n     #[inline(always)]\n     pub fn mask(self, mask: usize) -> *mut T {\n-        let this = intrinsics::ptr_mask(self.cast::<()>(), mask) as *mut ();\n-        from_raw_parts_mut::<T>(this, metadata(self))\n+        intrinsics::ptr_mask(self.cast::<()>(), mask).cast_mut().with_metadata_of(self)\n     }\n \n     /// Returns `None` if the pointer is null, or else returns a unique reference to\n@@ -1048,8 +1034,7 @@ impl<T: ?Sized> *mut T {\n     #[cfg_attr(miri, track_caller)] // even without panics, this helps for Miri backtraces\n     pub const unsafe fn byte_add(self, count: usize) -> Self {\n         // SAFETY: the caller must uphold the safety contract for `add`.\n-        let this = unsafe { self.cast::<u8>().add(count).cast::<()>() };\n-        from_raw_parts_mut::<T>(this, metadata(self))\n+        unsafe { self.cast::<u8>().add(count).with_metadata_of(self) }\n     }\n \n     /// Calculates the offset from a pointer (convenience for\n@@ -1135,8 +1120,7 @@ impl<T: ?Sized> *mut T {\n     #[cfg_attr(miri, track_caller)] // even without panics, this helps for Miri backtraces\n     pub const unsafe fn byte_sub(self, count: usize) -> Self {\n         // SAFETY: the caller must uphold the safety contract for `sub`.\n-        let this = unsafe { self.cast::<u8>().sub(count).cast::<()>() };\n-        from_raw_parts_mut::<T>(this, metadata(self))\n+        unsafe { self.cast::<u8>().sub(count).with_metadata_of(self) }\n     }\n \n     /// Calculates the offset from a pointer using wrapping arithmetic.\n@@ -1216,7 +1200,7 @@ impl<T: ?Sized> *mut T {\n     #[unstable(feature = \"pointer_byte_offsets\", issue = \"96283\")]\n     #[rustc_const_unstable(feature = \"const_pointer_byte_offsets\", issue = \"96283\")]\n     pub const fn wrapping_byte_add(self, count: usize) -> Self {\n-        from_raw_parts_mut::<T>(self.cast::<u8>().wrapping_add(count).cast::<()>(), metadata(self))\n+        self.cast::<u8>().wrapping_add(count).with_metadata_of(self)\n     }\n \n     /// Calculates the offset from a pointer using wrapping arithmetic.\n@@ -1296,7 +1280,7 @@ impl<T: ?Sized> *mut T {\n     #[unstable(feature = \"pointer_byte_offsets\", issue = \"96283\")]\n     #[rustc_const_unstable(feature = \"const_pointer_byte_offsets\", issue = \"96283\")]\n     pub const fn wrapping_byte_sub(self, count: usize) -> Self {\n-        from_raw_parts_mut::<T>(self.cast::<u8>().wrapping_sub(count).cast::<()>(), metadata(self))\n+        self.cast::<u8>().wrapping_sub(count).with_metadata_of(self)\n     }\n \n     /// Reads the value from `self` without moving it. This leaves the"}, {"sha": "ad90e00b8a095a42aa6a0fed4a28d4ae0f98c0e9", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -3752,9 +3752,9 @@ impl<T> [T] {\n     /// [`is_sorted`]: slice::is_sorted\n     #[unstable(feature = \"is_sorted\", reason = \"new API\", issue = \"53485\")]\n     #[must_use]\n-    pub fn is_sorted_by<F>(&self, mut compare: F) -> bool\n+    pub fn is_sorted_by<'a, F>(&'a self, mut compare: F) -> bool\n     where\n-        F: FnMut(&T, &T) -> Option<Ordering>,\n+        F: FnMut(&'a T, &'a T) -> Option<Ordering>,\n     {\n         self.iter().is_sorted_by(|a, b| compare(*a, *b))\n     }\n@@ -3778,9 +3778,9 @@ impl<T> [T] {\n     #[inline]\n     #[unstable(feature = \"is_sorted\", reason = \"new API\", issue = \"53485\")]\n     #[must_use]\n-    pub fn is_sorted_by_key<F, K>(&self, f: F) -> bool\n+    pub fn is_sorted_by_key<'a, F, K>(&'a self, f: F) -> bool\n     where\n-        F: FnMut(&T) -> K,\n+        F: FnMut(&'a T) -> K,\n         K: PartialOrd,\n     {\n         self.iter().is_sorted_by_key(f)"}, {"sha": "0977980ba47bf0e243c74adb4955907f67fc50b1", "filename": "library/core/tests/ptr.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Ftests%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/library%2Fcore%2Ftests%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fptr.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -455,6 +455,18 @@ fn align_offset_various_strides() {\n     assert!(!x);\n }\n \n+#[test]\n+fn align_offset_issue_103361() {\n+    #[cfg(target_pointer_width = \"64\")]\n+    const SIZE: usize = 1 << 47;\n+    #[cfg(target_pointer_width = \"32\")]\n+    const SIZE: usize = 1 << 30;\n+    #[cfg(target_pointer_width = \"16\")]\n+    const SIZE: usize = 1 << 13;\n+    struct HugeSize([u8; SIZE - 1]);\n+    let _ = (SIZE as *const HugeSize).align_offset(SIZE);\n+}\n+\n #[test]\n fn offset_from() {\n     let mut a = [0; 5];"}, {"sha": "c95f117a205886dc06c5c32937884b07d3fd9d2a", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -19,8 +19,8 @@ use super::{\n     collect_paths_for_type, document, ensure_trailing_slash, get_filtered_impls_for_reference,\n     item_ty_to_section, notable_traits_button, notable_traits_json, render_all_impls,\n     render_assoc_item, render_assoc_items, render_attributes_in_code, render_attributes_in_pre,\n-    render_impl, render_rightside, render_stability_since_raw, AssocItemLink, Context,\n-    ImplRenderingParameters,\n+    render_impl, render_rightside, render_stability_since_raw,\n+    render_stability_since_raw_with_extra, AssocItemLink, Context, ImplRenderingParameters,\n };\n use crate::clean;\n use crate::config::ModuleSorting;\n@@ -1267,30 +1267,30 @@ fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::\n             document_non_exhaustive_header(it)\n         );\n         document_non_exhaustive(w, it);\n+        write!(w, \"<div class=\\\"variants\\\">\");\n         for variant in e.variants() {\n             let id = cx.derive_id(format!(\"{}.{}\", ItemType::Variant, variant.name.unwrap()));\n             write!(\n                 w,\n-                \"<h3 id=\\\"{id}\\\" class=\\\"variant small-section-header\\\">\\\n-                    <a href=\\\"#{id}\\\" class=\\\"anchor field\\\"></a>\\\n-                    <code>{name}\",\n+                \"<section id=\\\"{id}\\\" class=\\\"variant\\\">\\\n+                    <a href=\\\"#{id}\\\" class=\\\"anchor\\\"></a>\",\n                 id = id,\n-                name = variant.name.unwrap()\n             );\n-            if let clean::VariantItem(clean::Variant::Tuple(ref s)) = *variant.kind {\n-                w.write_str(\"(\");\n-                print_tuple_struct_fields(w, cx, s);\n-                w.write_str(\")\");\n-            }\n-            w.write_str(\"</code>\");\n-            render_stability_since_raw(\n+            render_stability_since_raw_with_extra(\n                 w,\n                 variant.stable_since(tcx),\n                 variant.const_stability(tcx),\n                 it.stable_since(tcx),\n                 it.const_stable_since(tcx),\n+                \" rightside\",\n             );\n-            w.write_str(\"</h3>\");\n+            write!(w, \"<h3 class=\\\"code-header\\\">{name}\", name = variant.name.unwrap());\n+            if let clean::VariantItem(clean::Variant::Tuple(ref s)) = *variant.kind {\n+                w.write_str(\"(\");\n+                print_tuple_struct_fields(w, cx, s);\n+                w.write_str(\")\");\n+            }\n+            w.write_str(\"</h3></section>\");\n \n             use crate::clean::Variant;\n \n@@ -1324,7 +1324,7 @@ fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::\n                             write!(\n                                 w,\n                                 \"<div class=\\\"sub-variant-field\\\">\\\n-                                 <span id=\\\"{id}\\\" class=\\\"variant small-section-header\\\">\\\n+                                 <span id=\\\"{id}\\\" class=\\\"small-section-header\\\">\\\n                                      <a href=\\\"#{id}\\\" class=\\\"anchor field\\\"></a>\\\n                                      <code>{f}:&nbsp;{t}</code>\\\n                                  </span>\",\n@@ -1343,6 +1343,7 @@ fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::\n \n             document(w, cx, variant, Some(it), HeadingOffset::H4);\n         }\n+        write!(w, \"</div>\");\n     }\n     let def_id = it.item_id.expect_def_id();\n     render_assoc_items(w, cx, it, def_id, AssocItemRender::All);"}, {"sha": "bf8c0397bc3af2c8bee65b2d84a104aca62cba78", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -700,16 +700,14 @@ a {\n }\n \n .small-section-header {\n-\tdisplay: flex;\n-\tjustify-content: space-between;\n \tposition: relative;\n }\n \n .small-section-header:hover > .anchor {\n \tdisplay: initial;\n }\n \n-.impl:hover > .anchor, .trait-impl:hover > .anchor {\n+.impl:hover > .anchor, .trait-impl:hover > .anchor, .variant:hover > .anchor {\n \tdisplay: inline-block;\n \tposition: absolute;\n }\n@@ -1228,12 +1226,6 @@ a.test-arrow:hover {\n \tfont-size: 1.25rem;\n }\n \n-h3.variant {\n-\tfont-weight: 600;\n-\tfont-size: 1.125rem;\n-\tmargin-bottom: 10px;\n-}\n-\n .sub-variant h4 {\n \tfont-size: 1rem;\n \tfont-weight: 400;\n@@ -1903,6 +1895,7 @@ in storage.js\n \t}\n }\n \n+.variant,\n .implementors-toggle > summary,\n .impl,\n #implementors-list > .docblock,\n@@ -1914,6 +1907,7 @@ in storage.js\n \tmargin-bottom: 0.75em;\n }\n \n+.variants > .docblock,\n .impl-items > .rustdoc-toggle[open]:not(:last-child),\n .methods > .rustdoc-toggle[open]:not(:last-child),\n .implementors-toggle[open]:not(:last-child) {"}, {"sha": "60d0cb09acaf94f85060896078c2a9f9cf796c7b", "filename": "src/test/codegen/unchecked_shifts.rs", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fcodegen%2Funchecked_shifts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fcodegen%2Funchecked_shifts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Funchecked_shifts.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,66 @@\n+// compile-flags: -O\n+// min-llvm-version: 15.0 (LLVM 13 in CI does this differently from submodule LLVM)\n+// ignore-debug (because unchecked is checked in debug)\n+\n+#![crate_type = \"lib\"]\n+#![feature(unchecked_math)]\n+\n+// CHECK-LABEL: @unchecked_shl_unsigned_same\n+#[no_mangle]\n+pub unsafe fn unchecked_shl_unsigned_same(a: u32, b: u32) -> u32 {\n+    // CHECK-NOT: and i32\n+    // CHECK: shl i32 %a, %b\n+    // CHECK-NOT: and i32\n+    a.unchecked_shl(b)\n+}\n+\n+// CHECK-LABEL: @unchecked_shl_unsigned_smaller\n+#[no_mangle]\n+pub unsafe fn unchecked_shl_unsigned_smaller(a: u16, b: u32) -> u16 {\n+    // This uses -DAG to avoid failing on irrelevant reorderings,\n+    // like emitting the truncation earlier.\n+\n+    // CHECK-DAG: %[[INRANGE:.+]] = icmp ult i32 %b, 65536\n+    // CHECK-DAG: tail call void @llvm.assume(i1 %[[INRANGE]])\n+    // CHECK-DAG: %[[TRUNC:.+]] = trunc i32 %b to i16\n+    // CHECK-DAG: shl i16 %a, %[[TRUNC]]\n+    a.unchecked_shl(b)\n+}\n+\n+// CHECK-LABEL: @unchecked_shl_unsigned_bigger\n+#[no_mangle]\n+pub unsafe fn unchecked_shl_unsigned_bigger(a: u64, b: u32) -> u64 {\n+    // CHECK: %[[EXT:.+]] = zext i32 %b to i64\n+    // CHECK: shl i64 %a, %[[EXT]]\n+    a.unchecked_shl(b)\n+}\n+\n+// CHECK-LABEL: @unchecked_shr_signed_same\n+#[no_mangle]\n+pub unsafe fn unchecked_shr_signed_same(a: i32, b: u32) -> i32 {\n+    // CHECK-NOT: and i32\n+    // CHECK: ashr i32 %a, %b\n+    // CHECK-NOT: and i32\n+    a.unchecked_shr(b)\n+}\n+\n+// CHECK-LABEL: @unchecked_shr_signed_smaller\n+#[no_mangle]\n+pub unsafe fn unchecked_shr_signed_smaller(a: i16, b: u32) -> i16 {\n+    // This uses -DAG to avoid failing on irrelevant reorderings,\n+    // like emitting the truncation earlier.\n+\n+    // CHECK-DAG: %[[INRANGE:.+]] = icmp ult i32 %b, 32768\n+    // CHECK-DAG: tail call void @llvm.assume(i1 %[[INRANGE]])\n+    // CHECK-DAG: %[[TRUNC:.+]] = trunc i32 %b to i16\n+    // CHECK-DAG: ashr i16 %a, %[[TRUNC]]\n+    a.unchecked_shr(b)\n+}\n+\n+// CHECK-LABEL: @unchecked_shr_signed_bigger\n+#[no_mangle]\n+pub unsafe fn unchecked_shr_signed_bigger(a: i64, b: u32) -> i64 {\n+    // CHECK: %[[EXT:.+]] = zext i32 %b to i64\n+    // CHECK: ashr i64 %a, %[[EXT]]\n+    a.unchecked_shr(b)\n+}"}, {"sha": "230abb236bd64aa1fba2215737c68bd63bc3b0e4", "filename": "src/test/rustdoc-gui/enum-variants.goml", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Frustdoc-gui%2Fenum-variants.goml", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Frustdoc-gui%2Fenum-variants.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fenum-variants.goml?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,5 @@\n+// Verifies that there is non-zero margin on variants and their docblocks.\n+goto: \"file://\" + |DOC_PATH| + \"/test_docs/enum.WhoLetTheDogOut.html\"\n+\n+assert-css: (\".variants > .variant\", {\"margin\": \"0px 0px 12px\"})\n+assert-css: (\".variants > .docblock\", {\"margin\": \"0px 0px 32px 24px\"})"}, {"sha": "db0d102b741846292198e1d04994b908ac2827cc", "filename": "src/test/rustdoc/issue-88600.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Frustdoc%2Fissue-88600.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Frustdoc%2Fissue-88600.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-88600.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -8,22 +8,22 @@ pub struct S;\n \n // @has issue_88600/enum.FooEnum.html\n pub enum FooEnum {\n-    // @has - '//*[@id=\"variant.HiddenTupleItem\"]//code' 'HiddenTupleItem(_)'\n+    // @has - '//*[@id=\"variant.HiddenTupleItem\"]//h3' 'HiddenTupleItem(_)'\n     // @count - '//*[@id=\"variant.HiddenTupleItem.field.0\"]' 0\n     HiddenTupleItem(#[doc(hidden)] H),\n-    // @has - '//*[@id=\"variant.MultipleHidden\"]//code' 'MultipleHidden(_, _)'\n+    // @has - '//*[@id=\"variant.MultipleHidden\"]//h3' 'MultipleHidden(_, _)'\n     // @count - '//*[@id=\"variant.MultipleHidden.field.0\"]' 0\n     // @count - '//*[@id=\"variant.MultipleHidden.field.1\"]' 0\n     MultipleHidden(#[doc(hidden)] H, #[doc(hidden)] H),\n-    // @has - '//*[@id=\"variant.MixedHiddenFirst\"]//code' 'MixedHiddenFirst(_, S)'\n+    // @has - '//*[@id=\"variant.MixedHiddenFirst\"]//h3' 'MixedHiddenFirst(_, S)'\n     // @count - '//*[@id=\"variant.MixedHiddenFirst.field.0\"]' 0\n     // @has - '//*[@id=\"variant.MixedHiddenFirst.field.1\"]' '1: S'\n     MixedHiddenFirst(#[doc(hidden)] H, /** dox */ S),\n-    // @has - '//*[@id=\"variant.MixedHiddenLast\"]//code' 'MixedHiddenLast(S, _)'\n+    // @has - '//*[@id=\"variant.MixedHiddenLast\"]//h3' 'MixedHiddenLast(S, _)'\n     // @has - '//*[@id=\"variant.MixedHiddenLast.field.0\"]' '0: S'\n     // @count - '//*[@id=\"variant.MixedHiddenLast.field.1\"]' 0\n     MixedHiddenLast(/** dox */ S, #[doc(hidden)] H),\n-    // @has - '//*[@id=\"variant.HiddenStruct\"]//code' 'HiddenStruct'\n+    // @has - '//*[@id=\"variant.HiddenStruct\"]//h3' 'HiddenStruct'\n     // @count - '//*[@id=\"variant.HiddenStruct.field.h\"]' 0\n     // @has - '//*[@id=\"variant.HiddenStruct.field.s\"]' 's: S'\n     HiddenStruct {"}, {"sha": "073280d0fab1f0f099be6963d4085a33ce4f3630", "filename": "src/test/ui/array-slice-vec/slice_is_sorted_by_borrow.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Farray-slice-vec%2Fslice_is_sorted_by_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Farray-slice-vec%2Fslice_is_sorted_by_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-slice-vec%2Fslice_is_sorted_by_borrow.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,20 @@\n+// check-pass\n+// regression test for https://github.com/rust-lang/rust/issues/53485#issuecomment-885393452\n+\n+#![feature(is_sorted)]\n+\n+struct A {\n+    name: String,\n+}\n+\n+fn main() {\n+    let a = &[\n+        A {\n+            name: \"1\".to_string(),\n+        },\n+        A {\n+            name: \"2\".to_string(),\n+        },\n+    ];\n+    assert!(a.is_sorted_by_key(|a| a.name.as_str()));\n+}"}, {"sha": "983d7bf6e7e9cdc7e3d7053534651ca41b95180b", "filename": "src/test/ui/dyn-star/align.normal.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Fdyn-star%2Falign.normal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Fdyn-star%2Falign.normal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-star%2Falign.normal.stderr?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,11 @@\n+warning: the feature `dyn_star` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/align.rs:4:12\n+   |\n+LL | #![feature(dyn_star)]\n+   |            ^^^^^^^^\n+   |\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+warning: 1 warning emitted\n+"}, {"sha": "6b6fc55d8053eb71861505f62c24082816a29b02", "filename": "src/test/ui/dyn-star/align.over_aligned.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Fdyn-star%2Falign.over_aligned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Fdyn-star%2Falign.over_aligned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-star%2Falign.over_aligned.stderr?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,20 @@\n+warning: the feature `dyn_star` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/align.rs:4:12\n+   |\n+LL | #![feature(dyn_star)]\n+   |            ^^^^^^^^\n+   |\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error[E0277]: `AlignedUsize` needs to be a pointer-sized type\n+  --> $DIR/align.rs:15:13\n+   |\n+LL |     let x = AlignedUsize(12) as dyn* Debug;\n+   |             ^^^^^^^^^^^^^^^^ `AlignedUsize` needs to be a pointer-sized type\n+   |\n+   = help: the trait `PointerSized` is not implemented for `AlignedUsize`\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "fb41a05a0660ba19e45dc5f652b43fdf0f856111", "filename": "src/test/ui/dyn-star/align.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Fdyn-star%2Falign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Fdyn-star%2Falign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-star%2Falign.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,17 @@\n+// revisions: normal over_aligned\n+//[normal] check-pass\n+\n+#![feature(dyn_star)]\n+//~^ WARN the feature `dyn_star` is incomplete and may not be safe to use and/or cause compiler crashes\n+\n+use std::fmt::Debug;\n+\n+#[cfg_attr(over_aligned,      repr(C, align(1024)))]\n+#[cfg_attr(not(over_aligned), repr(C))]\n+#[derive(Debug)]\n+struct AlignedUsize(usize);\n+\n+fn main() {\n+    let x = AlignedUsize(12) as dyn* Debug;\n+    //[over_aligned]~^ ERROR `AlignedUsize` needs to be a pointer-sized type\n+}"}, {"sha": "e19e36cc7d7b5a7ed70400259361b3d009e3f5a8", "filename": "src/test/ui/dyn-star/check-size-at-cast-polymorphic-bad.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Fdyn-star%2Fcheck-size-at-cast-polymorphic-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Fdyn-star%2Fcheck-size-at-cast-polymorphic-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-star%2Fcheck-size-at-cast-polymorphic-bad.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,15 @@\n+#![feature(dyn_star)]\n+#![allow(incomplete_features)]\n+\n+use std::fmt::Debug;\n+\n+fn dyn_debug(_: (dyn* Debug + '_)) {\n+\n+}\n+\n+fn polymorphic<T: Debug + ?Sized>(t: &T) {\n+    dyn_debug(t);\n+    //~^ ERROR `&T` needs to be a pointer-sized type\n+}\n+\n+fn main() {}"}, {"sha": "53ccbe43dcc9eea389cb3712f2e88028d378a8b6", "filename": "src/test/ui/dyn-star/check-size-at-cast-polymorphic-bad.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Fdyn-star%2Fcheck-size-at-cast-polymorphic-bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Fdyn-star%2Fcheck-size-at-cast-polymorphic-bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-star%2Fcheck-size-at-cast-polymorphic-bad.stderr?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,15 @@\n+error[E0277]: `&T` needs to be a pointer-sized type\n+  --> $DIR/check-size-at-cast-polymorphic-bad.rs:11:15\n+   |\n+LL |     dyn_debug(t);\n+   |               ^ `&T` needs to be a pointer-sized type\n+   |\n+   = help: the trait `PointerSized` is not implemented for `&T`\n+help: consider introducing a `where` clause, but there might be an alternative better way to express this requirement\n+   |\n+LL | fn polymorphic<T: Debug + ?Sized>(t: &T) where &T: PointerSized {\n+   |                                          ++++++++++++++++++++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "5c0a3d256f60742da6c3a2d0b19a428c5f3251b6", "filename": "src/test/ui/dyn-star/check-size-at-cast-polymorphic.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Fdyn-star%2Fcheck-size-at-cast-polymorphic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Fdyn-star%2Fcheck-size-at-cast-polymorphic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-star%2Fcheck-size-at-cast-polymorphic.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,16 @@\n+// check-pass\n+\n+#![feature(dyn_star)]\n+#![allow(incomplete_features)]\n+\n+use std::fmt::Debug;\n+\n+fn dyn_debug(_: (dyn* Debug + '_)) {\n+\n+}\n+\n+fn polymorphic<T: Debug>(t: &T) {\n+    dyn_debug(t);\n+}\n+\n+fn main() {}"}, {"sha": "1f22f798361541600bc877d8ee90fe2fe0565d2c", "filename": "src/test/ui/dyn-star/check-size-at-cast.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Fdyn-star%2Fcheck-size-at-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Fdyn-star%2Fcheck-size-at-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-star%2Fcheck-size-at-cast.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,10 @@\n+#![feature(dyn_star)]\n+#![allow(incomplete_features)]\n+\n+use std::fmt::Debug;\n+\n+fn main() {\n+    let i = [1, 2, 3, 4] as dyn* Debug;\n+    //~^ ERROR `[i32; 4]` needs to be a pointer-sized type\n+    dbg!(i);\n+}"}, {"sha": "af2a1ccf71c6d6e7851c389a030aa4a0d43e2c0f", "filename": "src/test/ui/dyn-star/check-size-at-cast.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Fdyn-star%2Fcheck-size-at-cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftest%2Fui%2Fdyn-star%2Fcheck-size-at-cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-star%2Fcheck-size-at-cast.stderr?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -0,0 +1,11 @@\n+error[E0277]: `[i32; 4]` needs to be a pointer-sized type\n+  --> $DIR/check-size-at-cast.rs:7:13\n+   |\n+LL |     let i = [1, 2, 3, 4] as dyn* Debug;\n+   |             ^^^^^^^^^^^^ `[i32; 4]` needs to be a pointer-sized type\n+   |\n+   = help: the trait `PointerSized` is not implemented for `[i32; 4]`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "8155ec9dd27e22e0ffb15809efe04a87ca065f06", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0ffda6b3c3ea392c6cf88c676133666f491e5c/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "patch": "@@ -133,6 +133,11 @@ const PERMITTED_RUSTC_DEPENDENCIES: &[&str] = &[\n     \"hashbrown\",\n     \"hermit-abi\",\n     \"humantime\",\n+    \"icu_list\",\n+    \"icu_locid\",\n+    \"icu_provider\",\n+    \"icu_provider_adapters\",\n+    \"icu_provider_macros\",\n     \"if_chain\",\n     \"indexmap\",\n     \"instant\",\n@@ -145,6 +150,7 @@ const PERMITTED_RUSTC_DEPENDENCIES: &[&str] = &[\n     \"libc\",\n     \"libloading\",\n     \"libz-sys\",\n+    \"litemap\",\n     \"lock_api\",\n     \"log\",\n     \"matchers\",\n@@ -253,9 +259,16 @@ const PERMITTED_RUSTC_DEPENDENCIES: &[&str] = &[\n     \"winapi-i686-pc-windows-gnu\",\n     \"winapi-util\",\n     \"winapi-x86_64-pc-windows-gnu\",\n+    \"writeable\",\n     // this is a false-positive: it's only used by rustfmt, but because it's enabled through a\n     // feature, tidy thinks it's used by rustc as well.\n     \"yansi-term\",\n+    \"yoke\",\n+    \"yoke-derive\",\n+    \"zerofrom\",\n+    \"zerofrom-derive\",\n+    \"zerovec\",\n+    \"zerovec-derive\",\n ];\n \n const PERMITTED_CRANELIFT_DEPENDENCIES: &[&str] = &["}]}