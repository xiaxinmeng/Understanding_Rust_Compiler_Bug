{"sha": "35eba85c3d63579bbe0929dc880caf2be906b767", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1ZWJhODVjM2Q2MzU3OWJiZTA5MjlkYzg4MGNhZjJiZTkwNmI3Njc=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-08-15T02:56:26Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-08-15T02:56:26Z"}, "message": "refactor: use CStore::is_no_builtins", "tree": {"sha": "e837920d1ef139bf2336e09b84eb591b0e02aca5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e837920d1ef139bf2336e09b84eb591b0e02aca5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35eba85c3d63579bbe0929dc880caf2be906b767", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35eba85c3d63579bbe0929dc880caf2be906b767", "html_url": "https://github.com/rust-lang/rust/commit/35eba85c3d63579bbe0929dc880caf2be906b767", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35eba85c3d63579bbe0929dc880caf2be906b767/comments", "author": null, "committer": null, "parents": [{"sha": "db16909ae341f7e2de29e0e458d945fd0cdec8aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/db16909ae341f7e2de29e0e458d945fd0cdec8aa", "html_url": "https://github.com/rust-lang/rust/commit/db16909ae341f7e2de29e0e458d945fd0cdec8aa"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "05cd822c6d635b45e4eb457d9ee41501f2a2f731", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35eba85c3d63579bbe0929dc880caf2be906b767/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35eba85c3d63579bbe0929dc880caf2be906b767/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=35eba85c3d63579bbe0929dc880caf2be906b767", "patch": "@@ -227,6 +227,7 @@ pub trait CrateStore<'tcx> {\n     fn plugin_registrar_fn(&self, cnum: ast::CrateNum) -> Option<DefId>;\n     fn native_libraries(&self, cnum: ast::CrateNum) -> Vec<(NativeLibraryKind, String)>;\n     fn reachable_ids(&self, cnum: ast::CrateNum) -> Vec<DefId>;\n+    fn is_no_builtins(&self, cnum: ast::CrateNum) -> bool;\n \n     // resolve\n     fn def_index_for_def_key(&self,\n@@ -428,6 +429,7 @@ impl<'tcx> CrateStore<'tcx> for DummyCrateStore {\n     fn native_libraries(&self, cnum: ast::CrateNum) -> Vec<(NativeLibraryKind, String)>\n         { bug!(\"native_libraries\") }\n     fn reachable_ids(&self, cnum: ast::CrateNum) -> Vec<DefId> { bug!(\"reachable_ids\") }\n+    fn is_no_builtins(&self, cnum: ast::CrateNum) -> bool { bug!(\"is_no_builtins\") }\n \n     // resolve\n     fn def_key(&self, def: DefId) -> hir_map::DefKey { bug!(\"def_key\") }"}, {"sha": "2cdbd1b86012dd293734b01eb74ee1c4ce092048", "filename": "src/librustc_metadata/csearch.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/35eba85c3d63579bbe0929dc880caf2be906b767/src%2Flibrustc_metadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35eba85c3d63579bbe0929dc880caf2be906b767/src%2Flibrustc_metadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcsearch.rs?ref=35eba85c3d63579bbe0929dc880caf2be906b767", "patch": "@@ -409,6 +409,10 @@ impl<'tcx> CrateStore<'tcx> for cstore::CStore {\n         decoder::get_reachable_ids(&cdata)\n     }\n \n+    fn is_no_builtins(&self, cnum: ast::CrateNum) -> bool {\n+        attr::contains_name(&self.crate_attrs(cnum), \"no_builtins\")\n+    }\n+\n     fn def_index_for_def_key(&self,\n                              cnum: ast::CrateNum,\n                              def: DefKey)"}, {"sha": "e7ee9521294665430062d0898b642f12ceded17e", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/35eba85c3d63579bbe0929dc880caf2be906b767/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35eba85c3d63579bbe0929dc880caf2be906b767/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=35eba85c3d63579bbe0929dc880caf2be906b767", "patch": "@@ -42,7 +42,7 @@ use std::process::Command;\n use std::str;\n use flate;\n use syntax::ast;\n-use syntax::attr::{self, AttrMetaMethods};\n+use syntax::attr::AttrMetaMethods;\n use syntax_pos::Span;\n \n // RLIB LLVM-BYTECODE OBJECT LAYOUT\n@@ -938,10 +938,8 @@ fn add_upstream_rust_crates(cmd: &mut Linker,\n             Linkage::NotLinked |\n             Linkage::IncludedFromDylib => {}\n             Linkage::Static => {\n-                let is_a_no_builtins_crate =\n-                    attr::contains_name(&sess.cstore.crate_attrs(cnum), \"no_builtins\");\n                 add_static_crate(cmd, sess, tmpdir, crate_type,\n-                                 &src.rlib.unwrap().0, is_a_no_builtins_crate)\n+                                 &src.rlib.unwrap().0, sess.cstore.is_no_builtins(cnum))\n             }\n             Linkage::Dynamic => {\n                 add_dynamic_crate(cmd, sess, &src.dylib.unwrap().0)"}, {"sha": "522864c6ec3a4c12601a9fd77d97ff639d546f88", "filename": "src/librustc_trans/back/lto.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/35eba85c3d63579bbe0929dc880caf2be906b767/src%2Flibrustc_trans%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35eba85c3d63579bbe0929dc880caf2be906b767/src%2Flibrustc_trans%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flto.rs?ref=35eba85c3d63579bbe0929dc880caf2be906b767", "patch": "@@ -17,7 +17,6 @@ use llvm::{ModuleRef, TargetMachineRef, True, False};\n use rustc::util::common::time;\n use rustc::util::common::path2cstr;\n use back::write::{ModuleConfig, with_llvm_pmb};\n-use syntax::attr;\n \n use libc;\n use flate;\n@@ -54,11 +53,8 @@ pub fn run(sess: &session::Session, llmod: ModuleRef,\n     // load the bitcode from the archive. Then merge it into the current LLVM\n     // module that we've got.\n     link::each_linked_rlib(sess, &mut |cnum, path| {\n-        let is_a_no_builtins_crate =\n-            attr::contains_name(&sess.cstore.crate_attrs(cnum), \"no_builtins\");\n-\n         // `#![no_builtins]` crates don't participate in LTO.\n-        if is_a_no_builtins_crate {\n+        if sess.cstore.is_no_builtins(cnum) {\n             return;\n         }\n "}]}