{"sha": "13b2605ed985a37481dc497357dc6dcdf37ba6ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzYjI2MDVlZDk4NWEzNzQ4MWRjNDk3MzU3ZGM2ZGNkZjM3YmE2ZmY=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-20T03:48:51Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-20T03:48:51Z"}, "message": "fixup and cool example for checked-uninit", "tree": {"sha": "eb8ed9a9cff69bd961a478ae3783a2f7fa0b234a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb8ed9a9cff69bd961a478ae3783a2f7fa0b234a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13b2605ed985a37481dc497357dc6dcdf37ba6ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13b2605ed985a37481dc497357dc6dcdf37ba6ff", "html_url": "https://github.com/rust-lang/rust/commit/13b2605ed985a37481dc497357dc6dcdf37ba6ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13b2605ed985a37481dc497357dc6dcdf37ba6ff/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c97673c7b0fffe131822f2a5be520cf408c68319", "url": "https://api.github.com/repos/rust-lang/rust/commits/c97673c7b0fffe131822f2a5be520cf408c68319", "html_url": "https://github.com/rust-lang/rust/commit/c97673c7b0fffe131822f2a5be520cf408c68319"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "8b03cd497b74c386cf1cbfbd64d3adf3df58ba04", "filename": "src/doc/tarpl/checked-uninit.md", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/13b2605ed985a37481dc497357dc6dcdf37ba6ff/src%2Fdoc%2Ftarpl%2Fchecked-uninit.md", "raw_url": "https://github.com/rust-lang/rust/raw/13b2605ed985a37481dc497357dc6dcdf37ba6ff/src%2Fdoc%2Ftarpl%2Fchecked-uninit.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftarpl%2Fchecked-uninit.md?ref=13b2605ed985a37481dc497357dc6dcdf37ba6ff", "patch": "@@ -68,6 +68,29 @@ fn main() {\n }\n ```\n \n+Of course, while the analysis doesn't consider actual values, it does\n+have a relatively sophisticated understanding of dependencies and control\n+flow. For instance, this works:\n+\n+```rust\n+let x: i32;\n+\n+loop {\n+    // Rust doesn't understand that this branch will be taken unconditionally,\n+    // because it relies on actual values.\n+    if true {\n+        // But it does understand that it will only be taken once because\n+        // we *do* unconditionally break out of it. Therefore `x` doesn't\n+        // need to be marked as mutable.\n+        x = 0;\n+        break;\n+    }\n+}\n+// It also knows that it's impossible to get here without reaching the break.\n+// And therefore that `x` must be initialized here!\n+println!(\"{}\", x);\n+```\n+\n If a value is moved out of a variable, that variable becomes logically\n uninitialized if the type of the value isn't Copy. That is:\n "}, {"sha": "26e0192a536d63f521606d559dc805262245b996", "filename": "src/doc/tarpl/other-reprs.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13b2605ed985a37481dc497357dc6dcdf37ba6ff/src%2Fdoc%2Ftarpl%2Fother-reprs.md", "raw_url": "https://github.com/rust-lang/rust/raw/13b2605ed985a37481dc497357dc6dcdf37ba6ff/src%2Fdoc%2Ftarpl%2Fother-reprs.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftarpl%2Fother-reprs.md?ref=13b2605ed985a37481dc497357dc6dcdf37ba6ff", "patch": "@@ -47,7 +47,7 @@ discriminant.\n On non-C-like enums, this will inhibit certain optimizations like the null-\n pointer optimization.\n \n-These reprs have no affect on a struct.\n+These reprs have no effect on a struct.\n \n \n "}]}