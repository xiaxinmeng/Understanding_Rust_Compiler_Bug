{"sha": "e56c9a52532d87a36da32fbde8066ecc34e67cd4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1NmM5YTUyNTMyZDg3YTM2ZGEzMmZiZGU4MDY2ZWNjMzRlNjdjZDQ=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-12-23T14:59:16Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-01-23T01:18:11Z"}, "message": "cargo dev crater: gather and save lint statistics (how often a lint triggered)", "tree": {"sha": "37fdf3825fe3dfb6ed17c47589c5405f64e3916b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37fdf3825fe3dfb6ed17c47589c5405f64e3916b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e56c9a52532d87a36da32fbde8066ecc34e67cd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e56c9a52532d87a36da32fbde8066ecc34e67cd4", "html_url": "https://github.com/rust-lang/rust/commit/e56c9a52532d87a36da32fbde8066ecc34e67cd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e56c9a52532d87a36da32fbde8066ecc34e67cd4/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ec9cb84bb96ff11eba9d0a8961ddfea2fa1ba65", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ec9cb84bb96ff11eba9d0a8961ddfea2fa1ba65", "html_url": "https://github.com/rust-lang/rust/commit/4ec9cb84bb96ff11eba9d0a8961ddfea2fa1ba65"}], "stats": {"total": 137, "additions": 136, "deletions": 1}, "files": [{"sha": "7607e6b449f92ca6e57f08674840bc59192d80a2", "filename": "clippy_dev/src/crater.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/e56c9a52532d87a36da32fbde8066ecc34e67cd4/clippy_dev%2Fsrc%2Fcrater.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e56c9a52532d87a36da32fbde8066ecc34e67cd4/clippy_dev%2Fsrc%2Fcrater.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fcrater.rs?ref=e56c9a52532d87a36da32fbde8066ecc34e67cd4", "patch": "@@ -224,7 +224,30 @@ pub fn run() {\n         .flatten()\n         .collect();\n \n-    let all_msgs: Vec<String> = clippy_warnings.iter().map(|warning| warning.to_string()).collect();\n+    // generate some stats:\n+\n+    // count lint type occurrences\n+    let mut counter: HashMap<&String, usize> = HashMap::new();\n+    clippy_warnings\n+        .iter()\n+        .for_each(|wrn| *counter.entry(&wrn.linttype).or_insert(0) += 1);\n+\n+    // collect into a tupled list for sorting\n+    let mut stats: Vec<(&&String, &usize)> = counter.iter().map(|(lint, count)| (lint, count)).collect();\n+    // sort by number of lint occurences\n+    stats.sort_by_key(|(_, count)| *count);\n+    // biggest number first\n+    stats.reverse();\n+\n+    let stats_formatted: String = stats\n+        .iter()\n+        .map(|(lint, count)| format!(\"{} {}\\n\", lint, count))\n+        .collect::<String>();\n+\n+    let mut all_msgs: Vec<String> = clippy_warnings.iter().map(|warning| warning.to_string()).collect();\n+    all_msgs.sort();\n+    all_msgs.push(\"\\n\\n\\n\\nStats\\n\\n\".into());\n+    all_msgs.push(stats_formatted);\n \n     // save the text into mini-crater/logs.txt\n     let text = all_msgs.join(\"\");"}, {"sha": "18a0c2120ff14c00535462e6a4b25a2fb556302f", "filename": "mini-crater/logs.txt", "status": "modified", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/e56c9a52532d87a36da32fbde8066ecc34e67cd4/mini-crater%2Flogs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e56c9a52532d87a36da32fbde8066ecc34e67cd4/mini-crater%2Flogs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mini-crater%2Flogs.txt?ref=e56c9a52532d87a36da32fbde8066ecc34e67cd4", "patch": "@@ -3247,3 +3247,115 @@ xsv/0.13.0/src/select.rs:99:17 clippy::similar_names \"binding's name is too simi\n xsv/0.13.0/src/util.rs:150:5 clippy::doc_markdown \"you should put bare URLs between `<`/`>` or make a proper Markdown link\"\n xsv/0.13.0/src/util.rs:37:33 clippy::map_clone \"you are using an explicit closure for copying elements\"\n xsv/0.13.0/src/util.rs:90:1 clippy::needless_lifetimes \"explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\"\n+\n+\n+\n+\n+Stats\n+\n+clippy::must_use_candidate 552\n+clippy::unreadable_literal 365\n+clippy::missing_errors_doc 338\n+clippy::doc_markdown 178\n+clippy::wildcard_imports 160\n+clippy::items_after_statements 139\n+clippy::module_name_repetitions 137\n+clippy::redundant_closure_for_method_calls 135\n+clippy::redundant_field_names 111\n+clippy::cast_possible_truncation 91\n+clippy::similar_names 79\n+clippy::match_same_arms 64\n+clippy::inline_always 59\n+clippy::single_match_else 45\n+clippy::unseparated_literal_suffix 41\n+clippy::enum_glob_use 40\n+clippy::cast_precision_loss 35\n+clippy::if_not_else 35\n+clippy::filter_map 31\n+clippy::too_many_lines 31\n+clippy::redundant_else 29\n+clippy::trivially_copy_pass_by_ref 26\n+clippy::cast_lossless 23\n+clippy::redundant_static_lifetimes 21\n+clippy::struct_excessive_bools 20\n+clippy::map_unwrap_or 20\n+clippy::unusual_byte_groupings 19\n+clippy::unused_self 19\n+clippy::cast_possible_wrap 19\n+clippy::cast_sign_loss 19\n+clippy::unnecessary_wraps 19\n+clippy::needless_pass_by_value 18\n+clippy::default_trait_access 16\n+clippy::linkedlist 14\n+clippy::single_char_add_str 14\n+clippy::shadow_unrelated 13\n+clippy::cargo_common_metadata 13\n+clippy::option_if_let_else 12\n+clippy::needless_lifetimes 12\n+clippy::multiple_crate_versions 11\n+clippy::needless_doctest_main 10\n+clippy::missing_safety_doc 10\n+clippy::manual_range_contains 10\n+clippy::match_wildcard_for_single_variants 10\n+clippy::find_map 9\n+clippy::wrong_self_convention 8\n+clippy::invalid_upcast_comparisons 8\n+clippy::option_map_unit_fn 7\n+clippy::map_clone 7\n+clippy::explicit_into_iter_loop 7\n+clippy::range_plus_one 7\n+clippy::manual_strip 6\n+clippy::non_ascii_literal 6\n+clippy::single_component_path_imports 6\n+clippy::field_reassign_with_default 5\n+clippy::new_without_default 5\n+clippy::len_without_is_empty 5\n+clippy::identity_op 5\n+clippy::needless_return 5\n+clippy::empty_enum 5\n+clippy::match_like_matches_macro 5\n+clippy::explicit_iter_loop 5\n+clippy::too_many_arguments 4\n+clippy::let_underscore_drop 4\n+clippy::if_same_then_else 4\n+clippy::filter_map_next 3\n+clippy::zero_ptr 3\n+clippy::fn_params_excessive_bools 3\n+clippy::mut_mut 3\n+clippy::manual_non_exhaustive 2\n+clippy::comparison_to_empty 2\n+clippy::question_mark 2\n+clippy::redundant_pattern_matching 2\n+clippy::write_with_newline 2\n+clippy::unnecessary_cast 2\n+clippy::option_option 2\n+clippy::match_on_vec_items 2\n+clippy::type_complexity 2\n+clippy::len_zero 2\n+clippy::expl_impl_clone_on_copy 2\n+clippy::option_as_ref_deref 2\n+clippy::unused_unit 2\n+clippy::derive_hash_xor_eq 2\n+clippy::while_let_on_iterator 1\n+clippy::clone_on_copy 1\n+clippy::same_item_push 1\n+clippy::from_iter_instead_of_collect 1\n+clippy::or_fun_call 1\n+clippy::pub_enum_variant_names 1\n+clippy::used_underscore_binding 1\n+clippy::precedence 1\n+clippy::redundant_clone 1\n+clippy::collapsible_if 1\n+clippy::stable_sort_primitive 1\n+clippy::unit_arg 1\n+clippy::nonminimal_bool 1\n+clippy::comparison_chain 1\n+clippy::mem_replace_with_default 1\n+clippy::manual_saturating_arithmetic 1\n+clippy::expect_fun_call 1\n+clippy::should_implement_trait 1\n+clippy::verbose_bit_mask 1\n+clippy::int_plus_one 1\n+clippy::unnecessary_lazy_evaluations 1\n+clippy::from_over_into 1\n+clippy::explicit_deref_methods 1"}]}