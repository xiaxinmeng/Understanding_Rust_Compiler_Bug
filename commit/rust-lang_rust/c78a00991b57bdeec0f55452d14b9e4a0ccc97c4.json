{"sha": "c78a00991b57bdeec0f55452d14b9e4a0ccc97c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3OGEwMDk5MWI1N2JkZWVjMGY1NTQ1MmQxNGI5ZTRhMGNjYzk3YzQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-09-19T17:42:46Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-09-19T17:42:46Z"}, "message": "whoops, only trigger this path for avoiding DROP, not StorageDead", "tree": {"sha": "d7ce87b34e4c0be3c1d705d630b1cf6b2bbcf160", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7ce87b34e4c0be3c1d705d630b1cf6b2bbcf160"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c78a00991b57bdeec0f55452d14b9e4a0ccc97c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c78a00991b57bdeec0f55452d14b9e4a0ccc97c4", "html_url": "https://github.com/rust-lang/rust/commit/c78a00991b57bdeec0f55452d14b9e4a0ccc97c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c78a00991b57bdeec0f55452d14b9e4a0ccc97c4/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "265566334549bbe38e775af092f9b991e91076e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/265566334549bbe38e775af092f9b991e91076e1", "html_url": "https://github.com/rust-lang/rust/commit/265566334549bbe38e775af092f9b991e91076e1"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "a26ec72584bda72b86ef4d814094e81ca40ce6e4", "filename": "src/librustc_mir/build/scope.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c78a00991b57bdeec0f55452d14b9e4a0ccc97c4/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c78a00991b57bdeec0f55452d14b9e4a0ccc97c4/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fscope.rs?ref=c78a00991b57bdeec0f55452d14b9e4a0ccc97c4", "patch": "@@ -1123,16 +1123,16 @@ fn build_scope_drops<'tcx>(\n         let source_info = scope.source_info(drop_data.span);\n         let local = drop_data.local;\n \n-        // If the operand has been moved, and we are not on an unwind\n-        // path, then don't generate the drop. (We only take this into\n-        // account for non-unwind paths so as not to disturb the\n-        // caching mechanism.)\n-        if !is_cached_path && scope.moved_locals.iter().any(|&o| o == local) {\n-            continue;\n-        }\n-\n         match drop_data.kind {\n             DropKind::Value => {\n+                // If the operand has been moved, and we are not on an unwind\n+                // path, then don't generate the drop. (We only take this into\n+                // account for non-unwind paths so as not to disturb the\n+                // caching mechanism.)\n+                if !is_cached_path && scope.moved_locals.iter().any(|&o| o == local) {\n+                    continue;\n+                }\n+\n                 let unwind_to = get_unwind_to(scope, is_generator, drop_idx, generator_drop)\n                     .unwrap_or(last_unwind_to);\n "}]}