{"sha": "8dc53d3750e3b683673b09785b2787543af19bb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYzUzZDM3NTBlM2I2ODM2NzNiMDk3ODViMjc4NzU0M2FmMTliYjg=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-04-15T07:23:38Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-04-15T07:23:38Z"}, "message": "Check the length of the first line of the last method in the chain", "tree": {"sha": "885e2eaaa6db5a7208f753eb3a82b4faee91c0be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/885e2eaaa6db5a7208f753eb3a82b4faee91c0be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dc53d3750e3b683673b09785b2787543af19bb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dc53d3750e3b683673b09785b2787543af19bb8", "html_url": "https://github.com/rust-lang/rust/commit/8dc53d3750e3b683673b09785b2787543af19bb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dc53d3750e3b683673b09785b2787543af19bb8/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c1ad525f6c23920cb264b1c9dd95742b700456a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c1ad525f6c23920cb264b1c9dd95742b700456a", "html_url": "https://github.com/rust-lang/rust/commit/1c1ad525f6c23920cb264b1c9dd95742b700456a"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "9dabf2d03226b67babe76c0bf0474bd2da6d86d1", "filename": "src/chains.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8dc53d3750e3b683673b09785b2787543af19bb8/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dc53d3750e3b683673b09785b2787543af19bb8/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=8dc53d3750e3b683673b09785b2787543af19bb8", "patch": "@@ -195,12 +195,19 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n         if fits_single_line {\n             fits_single_line = match expr.node {\n                 ref e @ ast::ExprKind::MethodCall(..) => {\n-                    rewrite_method_call_with_overflow(e,\n-                                                      &mut last[0],\n-                                                      almost_total,\n-                                                      total_span,\n-                                                      context,\n-                                                      shape)\n+                    if rewrite_method_call_with_overflow(e,\n+                                                         &mut last[0],\n+                                                         almost_total,\n+                                                         total_span,\n+                                                         context,\n+                                                         shape) {\n+                        // If the first line of the last method does not fit into a single line\n+                        // after the others, allow new lines.\n+                        let first_line = try_opt!(last[0].lines().nth(0));\n+                        almost_total + first_line.len() < context.config.max_width\n+                    } else {\n+                        false\n+                    }\n                 }\n                 _ => !last[0].contains('\\n'),\n             }"}]}