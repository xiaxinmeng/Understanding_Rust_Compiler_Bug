{"sha": "f96b92f5097a31496b0b735a8647326c5dc2ecf8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NmI5MmY1MDk3YTMxNDk2YjBiNzM1YTg2NDczMjZjNWRjMmVjZjg=", "commit": {"author": {"name": "Kevin Per", "email": "kevin.per@protonmail.com", "date": "2020-04-04T08:39:17Z"}, "committer": {"name": "Kevin Per", "email": "kevin.per@protonmail.com", "date": "2020-04-04T08:39:17Z"}, "message": "Run fmt", "tree": {"sha": "8ea964f3f5f1f85ff05d6901083f4d6de36f4771", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ea964f3f5f1f85ff05d6901083f4d6de36f4771"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f96b92f5097a31496b0b735a8647326c5dc2ecf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f96b92f5097a31496b0b735a8647326c5dc2ecf8", "html_url": "https://github.com/rust-lang/rust/commit/f96b92f5097a31496b0b735a8647326c5dc2ecf8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f96b92f5097a31496b0b735a8647326c5dc2ecf8/comments", "author": {"login": "kper", "id": 10795807, "node_id": "MDQ6VXNlcjEwNzk1ODA3", "avatar_url": "https://avatars.githubusercontent.com/u/10795807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kper", "html_url": "https://github.com/kper", "followers_url": "https://api.github.com/users/kper/followers", "following_url": "https://api.github.com/users/kper/following{/other_user}", "gists_url": "https://api.github.com/users/kper/gists{/gist_id}", "starred_url": "https://api.github.com/users/kper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kper/subscriptions", "organizations_url": "https://api.github.com/users/kper/orgs", "repos_url": "https://api.github.com/users/kper/repos", "events_url": "https://api.github.com/users/kper/events{/privacy}", "received_events_url": "https://api.github.com/users/kper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kper", "id": 10795807, "node_id": "MDQ6VXNlcjEwNzk1ODA3", "avatar_url": "https://avatars.githubusercontent.com/u/10795807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kper", "html_url": "https://github.com/kper", "followers_url": "https://api.github.com/users/kper/followers", "following_url": "https://api.github.com/users/kper/following{/other_user}", "gists_url": "https://api.github.com/users/kper/gists{/gist_id}", "starred_url": "https://api.github.com/users/kper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kper/subscriptions", "organizations_url": "https://api.github.com/users/kper/orgs", "repos_url": "https://api.github.com/users/kper/repos", "events_url": "https://api.github.com/users/kper/events{/privacy}", "received_events_url": "https://api.github.com/users/kper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c6f84668e9f985aff261d317d3188d053ca29d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c6f84668e9f985aff261d317d3188d053ca29d1", "html_url": "https://github.com/rust-lang/rust/commit/2c6f84668e9f985aff261d317d3188d053ca29d1"}], "stats": {"total": 47, "additions": 16, "deletions": 31}, "files": [{"sha": "c08659ec9f6486ac53ec260b9d91575f0734eb2b", "filename": "src/librustc_parse/lexer/tokentrees.rs", "status": "modified", "additions": 16, "deletions": 31, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/f96b92f5097a31496b0b735a8647326c5dc2ecf8/src%2Flibrustc_parse%2Flexer%2Ftokentrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f96b92f5097a31496b0b735a8647326c5dc2ecf8/src%2Flibrustc_parse%2Flexer%2Ftokentrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flexer%2Ftokentrees.rs?ref=f96b92f5097a31496b0b735a8647326c5dc2ecf8", "patch": "@@ -1,6 +1,6 @@\n use super::{StringReader, UnmatchedBrace};\n \n-use rustc_ast::token::{self, Token, DelimToken};\n+use rustc_ast::token::{self, DelimToken, Token};\n use rustc_ast::tokenstream::{\n     DelimSpan,\n     IsJoint::{self, *},\n@@ -238,40 +238,25 @@ impl<'a> TokenTreesReader<'a> {\n                 let mut err =\n                     self.string_reader.sess.span_diagnostic.struct_span_err(self.token.span, &msg);\n \n-                    // Braces are added at the end, so the last element is the biggest block\n-                    if let Some(parent) = self.matching_block_spans.last() {\n-\n-                        if let Some(span) = self.last_delim_empty_block_spans.remove(&delim) {\n-                            // Check if the (empty block) is in the last properly closed block\n-                            if (parent.0.to(parent.1)).contains(span) {\n-                                err.span_label(\n-                                    span,\n-                                    \"block is empty, you might have not meant to close it\",\n-                                );\n-                            }\n-                            else {\n-                                err.span_label(\n-                                    parent.0,\n-                                    \"this opening brace...\",\n-                                );\n-\n-                                err.span_label(\n-                                    parent.1,\n-                                    \"...matches this closing brace\",\n-                                );\n-                            }\n-                        }\n-                        else {\n+                // Braces are added at the end, so the last element is the biggest block\n+                if let Some(parent) = self.matching_block_spans.last() {\n+                    if let Some(span) = self.last_delim_empty_block_spans.remove(&delim) {\n+                        // Check if the (empty block) is in the last properly closed block\n+                        if (parent.0.to(parent.1)).contains(span) {\n                             err.span_label(\n-                                parent.0,\n-                                \"this opening brace...\",\n+                                span,\n+                                \"block is empty, you might have not meant to close it\",\n                             );\n+                        } else {\n+                            err.span_label(parent.0, \"this opening brace...\");\n \n-                            err.span_label(\n-                                parent.1,\n-                                \"...matches this closing brace\",\n-                            );\n+                            err.span_label(parent.1, \"...matches this closing brace\");\n                         }\n+                    } else {\n+                        err.span_label(parent.0, \"this opening brace...\");\n+\n+                        err.span_label(parent.1, \"...matches this closing brace\");\n+                    }\n                 }\n \n                 err.span_label(self.token.span, \"unexpected closing delimiter\");"}]}