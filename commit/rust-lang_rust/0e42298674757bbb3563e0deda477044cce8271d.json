{"sha": "0e42298674757bbb3563e0deda477044cce8271d", "node_id": "C_kwDOAAsO6NoAKDBlNDIyOTg2NzQ3NTdiYmIzNTYzZTBkZWRhNDc3MDQ0Y2NlODI3MWQ", "commit": {"author": {"name": "Yutaro Ohno", "email": "yutaro.ono.418@gmail.com", "date": "2023-02-23T07:42:52Z"}, "committer": {"name": "Yutaro Ohno", "email": "yutaro.ono.418@gmail.com", "date": "2023-02-23T10:05:13Z"}, "message": "parser: provide better errors on closures with braces missing\n\nWe currently provide wrong suggestions and unhelpful errors on closure\nbodies with braces missing. For example, given the following code:\n\n```\nfn main() {\n    let _x = Box::new(|x|x+1;);\n}\n```\n\nthe current output is like this:\n\n```\nerror: expected expression, found `)`\n --> ./main.rs:2:30\n  |\n2 |     let _x = Box::new(|x|x+1;);\n  |                              ^ expected expression\n\nerror: closure bodies that contain statements must be surrounded by braces\n --> ./main.rs:2:25\n  |\n2 |     let _x = Box::new(|x|x+1;);\n  |                         ^\n3 | }\n  | ^\n  |\n\n...\n\nhelp: try adding braces\n  |\n2 ~     let _x = Box::new(|x| {x+1;);\n3 ~ }}\n\n...\n\nerror: expected `;`, found `}`\n --> ./main.rs:2:32\n  |\n2 |     let _x = Box::new(|x|x+1;);\n  |                                ^ help: add `;` here\n3 | }\n  | - unexpected token\n\nerror: aborting due to 3 previous errors\n```\n\nThis commit allows outputting correct suggestions and errors. The above\ncode would output like this:\n\n```\nerror: closure bodies that contain statements must be surrounded by braces\n --> ./main.rs:2:25\n  |\n2 |     let _x = Box::new(|x|x+1;);\n  |                         ^    ^\n  |\nnote: statement found outside of a block\n --> ./main.rs:2:29\n  |\n2 |     let _x = Box::new(|x|x+1;);\n  |                          ---^ this `;` turns the preceding closure into a statement\n  |                          |\n  |                          this expression is a statement because of the trailing semicolon\nnote: the closure body may be incorrectly delimited\n --> ./main.rs:2:23\n  |\n2 |     let _x = Box::new(|x|x+1;);\n  |                       ^^^^^^ - ...but likely you meant the closure to end here\n  |                       |\n  |                       this is the parsed closure...\nhelp: try adding braces\n  |\n2 |     let _x = Box::new(|x| {x+1;});\n  |                           +    +\n\nerror: aborting due to previous error\n```", "tree": {"sha": "febe57fec7980d762731fd493fdfe58eab26a371", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/febe57fec7980d762731fd493fdfe58eab26a371"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e42298674757bbb3563e0deda477044cce8271d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e42298674757bbb3563e0deda477044cce8271d", "html_url": "https://github.com/rust-lang/rust/commit/0e42298674757bbb3563e0deda477044cce8271d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e42298674757bbb3563e0deda477044cce8271d/comments", "author": {"login": "ohno418", "id": 24674436, "node_id": "MDQ6VXNlcjI0Njc0NDM2", "avatar_url": "https://avatars.githubusercontent.com/u/24674436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohno418", "html_url": "https://github.com/ohno418", "followers_url": "https://api.github.com/users/ohno418/followers", "following_url": "https://api.github.com/users/ohno418/following{/other_user}", "gists_url": "https://api.github.com/users/ohno418/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohno418/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohno418/subscriptions", "organizations_url": "https://api.github.com/users/ohno418/orgs", "repos_url": "https://api.github.com/users/ohno418/repos", "events_url": "https://api.github.com/users/ohno418/events{/privacy}", "received_events_url": "https://api.github.com/users/ohno418/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ohno418", "id": 24674436, "node_id": "MDQ6VXNlcjI0Njc0NDM2", "avatar_url": "https://avatars.githubusercontent.com/u/24674436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohno418", "html_url": "https://github.com/ohno418", "followers_url": "https://api.github.com/users/ohno418/followers", "following_url": "https://api.github.com/users/ohno418/following{/other_user}", "gists_url": "https://api.github.com/users/ohno418/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohno418/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohno418/subscriptions", "organizations_url": "https://api.github.com/users/ohno418/orgs", "repos_url": "https://api.github.com/users/ohno418/repos", "events_url": "https://api.github.com/users/ohno418/events{/privacy}", "received_events_url": "https://api.github.com/users/ohno418/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b1dbf728add722d4db894b9b986ec24e1cdb0a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b1dbf728add722d4db894b9b986ec24e1cdb0a1", "html_url": "https://github.com/rust-lang/rust/commit/8b1dbf728add722d4db894b9b986ec24e1cdb0a1"}], "stats": {"total": 57, "additions": 50, "deletions": 7}, "files": [{"sha": "fda9151478f6890cf7e9e6be846616655aab9b43", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e42298674757bbb3563e0deda477044cce8271d/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e42298674757bbb3563e0deda477044cce8271d/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=0e42298674757bbb3563e0deda477044cce8271d", "patch": "@@ -982,7 +982,11 @@ impl<'a> Parser<'a> {\n         let initial_semicolon = self.token.span;\n \n         while self.eat(&TokenKind::Semi) {\n-            let _ = self.parse_stmt(ForceCollect::Yes)?;\n+            let _ =\n+                self.parse_stmt_without_recovery(false, ForceCollect::Yes).unwrap_or_else(|e| {\n+                    e.cancel();\n+                    None\n+                });\n         }\n \n         expect_err.set_primary_message("}, {"sha": "a7a9db7d9775e8532bf37d42d9ecc27aa370d4c7", "filename": "tests/ui/expr/malformed_closure/missing_braces_around_block.fixed", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0e42298674757bbb3563e0deda477044cce8271d/tests%2Fui%2Fexpr%2Fmalformed_closure%2Fmissing_braces_around_block.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0e42298674757bbb3563e0deda477044cce8271d/tests%2Fui%2Fexpr%2Fmalformed_closure%2Fmissing_braces_around_block.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexpr%2Fmalformed_closure%2Fmissing_braces_around_block.fixed?ref=0e42298674757bbb3563e0deda477044cce8271d", "patch": "@@ -4,16 +4,23 @@\n // If this recovery happens, then plenty of errors are emitted. Here, we expect\n // only one error.\n //\n-// This is part of issue #88065:\n+// This is part of the following issues:\n // https://github.com/rust-lang/rust/issues/88065\n+// https://github.com/rust-lang/rust/issues/107959\n \n // run-rustfix\n \n fn main() {\n+    // Closure with multiple expressions delimited by semicolon.\n     let num = 5;\n     (1..num).reduce(|a, b| {\n         //~^ ERROR: closure bodies that contain statements must be surrounded by braces\n         println!(\"{}\", a);\n         a * b\n     }).unwrap();\n+\n+    // Closure with a single expression ended by a semicolon.\n+    let mut v = vec![1, 2, 3];\n+    v.iter_mut().for_each(|x| {*x = *x+1;});\n+        //~^ ERROR: closure bodies that contain statements must be surrounded by braces\n }"}, {"sha": "b5690b2eca7c26739cd96bafa350c6daedac5cc6", "filename": "tests/ui/expr/malformed_closure/missing_braces_around_block.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0e42298674757bbb3563e0deda477044cce8271d/tests%2Fui%2Fexpr%2Fmalformed_closure%2Fmissing_braces_around_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e42298674757bbb3563e0deda477044cce8271d/tests%2Fui%2Fexpr%2Fmalformed_closure%2Fmissing_braces_around_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexpr%2Fmalformed_closure%2Fmissing_braces_around_block.rs?ref=0e42298674757bbb3563e0deda477044cce8271d", "patch": "@@ -4,16 +4,23 @@\n // If this recovery happens, then plenty of errors are emitted. Here, we expect\n // only one error.\n //\n-// This is part of issue #88065:\n+// This is part of the following issues:\n // https://github.com/rust-lang/rust/issues/88065\n+// https://github.com/rust-lang/rust/issues/107959\n \n // run-rustfix\n \n fn main() {\n+    // Closure with multiple expressions delimited by semicolon.\n     let num = 5;\n     (1..num).reduce(|a, b|\n         //~^ ERROR: closure bodies that contain statements must be surrounded by braces\n         println!(\"{}\", a);\n         a * b\n     ).unwrap();\n+\n+    // Closure with a single expression ended by a semicolon.\n+    let mut v = vec![1, 2, 3];\n+    v.iter_mut().for_each(|x|*x = *x+1;);\n+        //~^ ERROR: closure bodies that contain statements must be surrounded by braces\n }"}, {"sha": "039eef909fc4b4f1868e9c903e712ba89e06a2d8", "filename": "tests/ui/expr/malformed_closure/missing_braces_around_block.stderr", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/0e42298674757bbb3563e0deda477044cce8271d/tests%2Fui%2Fexpr%2Fmalformed_closure%2Fmissing_braces_around_block.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e42298674757bbb3563e0deda477044cce8271d/tests%2Fui%2Fexpr%2Fmalformed_closure%2Fmissing_braces_around_block.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexpr%2Fmalformed_closure%2Fmissing_braces_around_block.stderr?ref=0e42298674757bbb3563e0deda477044cce8271d", "patch": "@@ -1,5 +1,5 @@\n error: closure bodies that contain statements must be surrounded by braces\n-  --> $DIR/missing_braces_around_block.rs:14:26\n+  --> $DIR/missing_braces_around_block.rs:16:26\n    |\n LL |     (1..num).reduce(|a, b|\n    |                          ^\n@@ -8,14 +8,14 @@ LL |     ).unwrap();\n    |     ^\n    |\n note: statement found outside of a block\n-  --> $DIR/missing_braces_around_block.rs:16:26\n+  --> $DIR/missing_braces_around_block.rs:18:26\n    |\n LL |         println!(\"{}\", a);\n    |         -----------------^ this `;` turns the preceding closure into a statement\n    |         |\n    |         this expression is a statement because of the trailing semicolon\n note: the closure body may be incorrectly delimited\n-  --> $DIR/missing_braces_around_block.rs:14:21\n+  --> $DIR/missing_braces_around_block.rs:16:21\n    |\n LL |       (1..num).reduce(|a, b|\n    |  _____________________^\n@@ -34,5 +34,30 @@ LL |         a * b\n LL ~     }).unwrap();\n    |\n \n-error: aborting due to previous error\n+error: closure bodies that contain statements must be surrounded by braces\n+  --> $DIR/missing_braces_around_block.rs:24:29\n+   |\n+LL |     v.iter_mut().for_each(|x|*x = *x+1;);\n+   |                             ^          ^\n+   |\n+note: statement found outside of a block\n+  --> $DIR/missing_braces_around_block.rs:24:39\n+   |\n+LL |     v.iter_mut().for_each(|x|*x = *x+1;);\n+   |                              ---------^ this `;` turns the preceding closure into a statement\n+   |                              |\n+   |                              this expression is a statement because of the trailing semicolon\n+note: the closure body may be incorrectly delimited\n+  --> $DIR/missing_braces_around_block.rs:24:27\n+   |\n+LL |     v.iter_mut().for_each(|x|*x = *x+1;);\n+   |                           ^^^^^^^^^^^^ - ...but likely you meant the closure to end here\n+   |                           |\n+   |                           this is the parsed closure...\n+help: try adding braces\n+   |\n+LL |     v.iter_mut().for_each(|x| {*x = *x+1;});\n+   |                               +          +\n+\n+error: aborting due to 2 previous errors\n "}]}