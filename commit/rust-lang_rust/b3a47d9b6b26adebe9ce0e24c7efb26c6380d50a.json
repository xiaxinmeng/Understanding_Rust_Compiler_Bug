{"sha": "b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "node_id": "C_kwDOAAsO6NoAKGIzYTQ3ZDliNmIyNmFkZWJlOWNlMGUyNGM3ZWZiMjZjNjM4MGQ1MGE", "commit": {"author": {"name": "Giacomo Pasini", "email": "giacomo@status.im", "date": "2023-02-08T21:29:52Z"}, "committer": {"name": "Giacomo Pasini", "email": "giacomo@status.im", "date": "2023-03-03T15:33:11Z"}, "message": "Desugars drop and replace at MIR build\n\nThis commit desugars the drop and replace deriving from an\nassignment at MIR build, avoiding the construction of the\nDropAndReplace terminator (which will be removed in a followign PR)\n\nIn order to retain the same error messages for replaces a new\nDesugaringKind::Replace variant is introduced.", "tree": {"sha": "ac5e0d9d46bc053d00fe99b787af4480d0bbf1f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac5e0d9d46bc053d00fe99b787af4480d0bbf1f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEElHY+FNnS7QgcFjiQoDhRt4psmkYFAmQCEzcACgkQoDhRt4ps\nmkaCGg//fOUD/sfI4RmyioiGeFB21xH50xJfJEwETil5IL+hLdFCLF4bQjri1rEr\nqYQpGmCfpLzGqH/iiLTTiDjNoEzCMIHR1x5W6DVYEBuQVvDLS38MR2rzVeG0Go9D\nSI+/srP5NEJqfLtuX1pLuhUS2s7Eh7HPSnX7fBUnpMAvXf+khJ5L8J2LHs0oso+C\nu/h6SSp3Ckki2d54pGqaKjh641g2twa9iraMB2KVVBVkMvWvZcG5NgYgkLPluVsL\nDLvg+P6U20H4zEVjZu06A87IC18uCa3uv2xIPQ84744CSWTdn8sEruQPW7XdsLzy\nsYNlVPWBYsXXqEfyB5oPH+a7Y8M/r/P2AZ07b5Aitc1h4OHYnlafEPmQpH7AoXj1\nxcdD8//aO4MRxBBQWQkL36ylXmBATZxRrEdP2AbK0Nw3aqtEJ5VlhpvMMFPFD2Bh\nyq/adMMl1xwn8AKEvJZ3MzPGPQKMSUBsA1+jD6JS6ktF/53ZR5Fh+O1HqpQisFtA\n57n+Bw3FQL6Nq50UtAGktDVdBqQIpNCtHBVQXeLU2yTK42n/NmGhTsbuA4a9ERQ1\ngg81G0ccRQXUtAQkELvIbFN0cCfDPp4ojIyaR4mlk0hY6q+XULnFboBDllEYdrFs\n4dfNnRnZBLlDdsj7AQoBNtX4sDql2EqWW9ARX6hK5kt0XJNaJRI=\n=/9xK\n-----END PGP SIGNATURE-----", "payload": "tree ac5e0d9d46bc053d00fe99b787af4480d0bbf1f6\nparent 13471d3b2046cce78181dde6cfc146c09f55e29e\nauthor Giacomo Pasini <giacomo@status.im> 1675891792 +0100\ncommitter Giacomo Pasini <giacomo@status.im> 1677857591 +0100\n\nDesugars drop and replace at MIR build\n\nThis commit desugars the drop and replace deriving from an\nassignment at MIR build, avoiding the construction of the\nDropAndReplace terminator (which will be removed in a followign PR)\n\nIn order to retain the same error messages for replaces a new\nDesugaringKind::Replace variant is introduced.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "html_url": "https://github.com/rust-lang/rust/commit/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/comments", "author": {"login": "Zeegomo", "id": 21265557, "node_id": "MDQ6VXNlcjIxMjY1NTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21265557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zeegomo", "html_url": "https://github.com/Zeegomo", "followers_url": "https://api.github.com/users/Zeegomo/followers", "following_url": "https://api.github.com/users/Zeegomo/following{/other_user}", "gists_url": "https://api.github.com/users/Zeegomo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zeegomo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zeegomo/subscriptions", "organizations_url": "https://api.github.com/users/Zeegomo/orgs", "repos_url": "https://api.github.com/users/Zeegomo/repos", "events_url": "https://api.github.com/users/Zeegomo/events{/privacy}", "received_events_url": "https://api.github.com/users/Zeegomo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zeegomo", "id": 21265557, "node_id": "MDQ6VXNlcjIxMjY1NTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21265557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zeegomo", "html_url": "https://github.com/Zeegomo", "followers_url": "https://api.github.com/users/Zeegomo/followers", "following_url": "https://api.github.com/users/Zeegomo/following{/other_user}", "gists_url": "https://api.github.com/users/Zeegomo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zeegomo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zeegomo/subscriptions", "organizations_url": "https://api.github.com/users/Zeegomo/orgs", "repos_url": "https://api.github.com/users/Zeegomo/repos", "events_url": "https://api.github.com/users/Zeegomo/events{/privacy}", "received_events_url": "https://api.github.com/users/Zeegomo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13471d3b2046cce78181dde6cfc146c09f55e29e", "url": "https://api.github.com/repos/rust-lang/rust/commits/13471d3b2046cce78181dde6cfc146c09f55e29e", "html_url": "https://github.com/rust-lang/rust/commit/13471d3b2046cce78181dde6cfc146c09f55e29e"}], "stats": {"total": 420, "additions": 268, "deletions": 152}, "files": [{"sha": "a1817f8548340229ae7a2aace5f58c0a9a4069cc", "filename": "compiler/rustc_borrowck/src/diagnostics/mod.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -925,7 +925,20 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             return OtherUse(use_span);\n         }\n \n-        for stmt in &self.body[location.block].statements[location.statement_index + 1..] {\n+        // drop and replace might have moved the assignment to the next block\n+        let maybe_additional_statement =\n+            if let TerminatorKind::Drop { target: drop_target, .. } =\n+                self.body[location.block].terminator().kind\n+            {\n+                self.body[drop_target].statements.first()\n+            } else {\n+                None\n+            };\n+\n+        let statements =\n+            self.body[location.block].statements[location.statement_index + 1..].iter();\n+\n+        for stmt in statements.chain(maybe_additional_statement) {\n             if let StatementKind::Assign(box (_, Rvalue::Aggregate(kind, places))) = &stmt.kind {\n                 let (&def_id, is_generator) = match kind {\n                     box AggregateKind::Closure(def_id, _) => (def_id, false),"}, {"sha": "eded913ae9681af5b5105ccb41c59c38298521e4", "filename": "compiler/rustc_borrowck/src/diagnostics/mutability_errors.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -828,7 +828,13 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n             let Some(hir::Node::Item(item)) = node else { return; };\n             let hir::ItemKind::Fn(.., body_id) = item.kind else { return; };\n             let body = self.infcx.tcx.hir().body(body_id);\n-            let mut v = V { assign_span: span, err, ty, suggested: false };\n+            let mut assign_span = span;\n+            // Drop desugaring is done at MIR build so it's not in the HIR\n+            if let Some(DesugaringKind::Replace) = span.desugaring_kind() {\n+                assign_span.remove_mark();\n+            }\n+\n+            let mut v = V { assign_span, err, ty, suggested: false };\n             v.visit_body(body);\n             if !v.suggested {\n                 err.help(&format!("}, {"sha": "11a746ffb0af290cc7aed1da509d2072c77b271a", "filename": "compiler/rustc_borrowck/src/lib.rs", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -40,7 +40,7 @@ use rustc_middle::mir::{InlineAsmOperand, Terminator, TerminatorKind};\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{self, CapturedPlace, ParamEnv, RegionVid, TyCtxt};\n use rustc_session::lint::builtin::UNUSED_MUT;\n-use rustc_span::{Span, Symbol};\n+use rustc_span::{DesugaringKind, Span, Symbol};\n \n use either::Either;\n use smallvec::SmallVec;\n@@ -1184,13 +1184,22 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                                 this.report_conflicting_borrow(location, place_span, bk, borrow);\n                             this.buffer_error(err);\n                         }\n-                        WriteKind::StorageDeadOrDrop => this\n-                            .report_borrowed_value_does_not_live_long_enough(\n-                                location,\n-                                borrow,\n-                                place_span,\n-                                Some(kind),\n-                            ),\n+                        WriteKind::StorageDeadOrDrop => {\n+                            if let Some(DesugaringKind::Replace) = place_span.1.desugaring_kind() {\n+                                // If this is a drop triggered by a reassignment, it's more user friendly\n+                                // to report a problem with the explicit assignment than the implicit drop.\n+                                this.report_illegal_mutation_of_borrowed(\n+                                    location, place_span, borrow,\n+                                )\n+                            } else {\n+                                this.report_borrowed_value_does_not_live_long_enough(\n+                                    location,\n+                                    borrow,\n+                                    place_span,\n+                                    Some(kind),\n+                                )\n+                            }\n+                        }\n                         WriteKind::Mutate => {\n                             this.report_illegal_mutation_of_borrowed(location, place_span, borrow)\n                         }"}, {"sha": "ea5aeb67d8576af803565b1fadb9c80b53c18335", "filename": "compiler/rustc_mir_build/src/build/expr/stmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fstmt.rs?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -40,7 +40,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                 // Generate better code for things that don't need to be\n                 // dropped.\n                 if lhs.ty.needs_drop(this.tcx, this.param_env) {\n-                    let rhs = unpack!(block = this.as_local_operand(block, rhs));\n+                    let rhs = unpack!(block = this.as_local_rvalue(block, rhs));\n                     let lhs = unpack!(block = this.as_place(block, lhs));\n                     unpack!(block = this.build_drop_and_replace(block, lhs_span, lhs, rhs));\n                 } else {"}, {"sha": "770701b3750dfa3e1275a3761fd069bf60e88775", "filename": "compiler/rustc_mir_build/src/build/scope.rs", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -91,7 +91,7 @@ use rustc_middle::middle::region;\n use rustc_middle::mir::*;\n use rustc_middle::thir::{Expr, LintLevel};\n \n-use rustc_span::{Span, DUMMY_SP};\n+use rustc_span::{DesugaringKind, Span, DUMMY_SP};\n \n #[derive(Debug)]\n pub struct Scopes<'tcx> {\n@@ -1118,24 +1118,35 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n     }\n \n     /// Utility function for *non*-scope code to build their own drops\n+    /// Force a drop at this point in the MIR by creating a new block.\n     pub(crate) fn build_drop_and_replace(\n         &mut self,\n         block: BasicBlock,\n         span: Span,\n         place: Place<'tcx>,\n-        value: Operand<'tcx>,\n+        value: Rvalue<'tcx>,\n     ) -> BlockAnd<()> {\n+        let span = self.tcx.with_stable_hashing_context(|hcx| {\n+            span.mark_with_reason(None, DesugaringKind::Replace, self.tcx.sess.edition(), hcx)\n+        });\n         let source_info = self.source_info(span);\n-        let next_target = self.cfg.start_new_block();\n+\n+        // create the new block for the assignment\n+        let assign = self.cfg.start_new_block();\n+        self.cfg.push_assign(assign, source_info, place, value.clone());\n+\n+        // create the new block for the assignment in the case of unwinding\n+        let assign_unwind = self.cfg.start_new_cleanup_block();\n+        self.cfg.push_assign(assign_unwind, source_info, place, value.clone());\n \n         self.cfg.terminate(\n             block,\n             source_info,\n-            TerminatorKind::DropAndReplace { place, value, target: next_target, unwind: None },\n+            TerminatorKind::Drop { place, target: assign, unwind: Some(assign_unwind) },\n         );\n         self.diverge_from(block);\n \n-        next_target.unit()\n+        assign.unit()\n     }\n \n     /// Creates an `Assert` terminator and return the success block.\n@@ -1413,8 +1424,15 @@ impl<'tcx> DropTreeBuilder<'tcx> for Unwind {\n     fn add_entry(cfg: &mut CFG<'tcx>, from: BasicBlock, to: BasicBlock) {\n         let term = &mut cfg.block_data_mut(from).terminator_mut();\n         match &mut term.kind {\n-            TerminatorKind::Drop { unwind, .. }\n-            | TerminatorKind::DropAndReplace { unwind, .. }\n+            TerminatorKind::Drop { unwind, .. } => {\n+                if let Some(unwind) = *unwind {\n+                    let source_info = term.source_info;\n+                    cfg.terminate(unwind, source_info, TerminatorKind::Goto { target: to });\n+                } else {\n+                    *unwind = Some(to);\n+                }\n+            }\n+            TerminatorKind::DropAndReplace { unwind, .. }\n             | TerminatorKind::FalseUnwind { unwind, .. }\n             | TerminatorKind::Call { cleanup: unwind, .. }\n             | TerminatorKind::Assert { cleanup: unwind, .. }"}, {"sha": "29424f09695f1d123e5c8dc5f53ba4a364c4308f", "filename": "compiler/rustc_mir_transform/src/elaborate_drops.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/compiler%2Frustc_mir_transform%2Fsrc%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/compiler%2Frustc_mir_transform%2Fsrc%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Felaborate_drops.rs?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -14,7 +14,7 @@ use rustc_mir_dataflow::un_derefer::UnDerefer;\n use rustc_mir_dataflow::MoveDataParamEnv;\n use rustc_mir_dataflow::{on_all_children_bits, on_all_drop_children_bits};\n use rustc_mir_dataflow::{Analysis, ResultsCursor};\n-use rustc_span::Span;\n+use rustc_span::{DesugaringKind, Span};\n use rustc_target::abi::VariantIdx;\n use std::fmt;\n \n@@ -425,10 +425,19 @@ impl<'b, 'tcx> ElaborateDropsCtxt<'b, 'tcx> {\n                             bb,\n                         ),\n                         LookupResult::Parent(..) => {\n-                            self.tcx.sess.delay_span_bug(\n-                                terminator.source_info.span,\n-                                &format!(\"drop of untracked value {:?}\", bb),\n-                            );\n+                            if !matches!(\n+                                terminator.source_info.span.desugaring_kind(),\n+                                Some(DesugaringKind::Replace),\n+                            ) {\n+                                self.tcx.sess.delay_span_bug(\n+                                    terminator.source_info.span,\n+                                    &format!(\"drop of untracked value {:?}\", bb),\n+                                );\n+                            }\n+                            // A drop and replace behind a pointer/array/whatever.\n+                            // The borrow checker requires that these locations are initialized before the assignment,\n+                            // so we just leave an unconditional drop.\n+                            assert!(!data.is_cleanup);\n                         }\n                     }\n                 }"}, {"sha": "9f22e9776d4f6b3b2633e64b37adee68a0993d2f", "filename": "compiler/rustc_span/src/hygiene.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -1151,6 +1151,7 @@ pub enum DesugaringKind {\n     Await,\n     ForLoop,\n     WhileLoop,\n+    Replace,\n }\n \n impl DesugaringKind {\n@@ -1166,6 +1167,7 @@ impl DesugaringKind {\n             DesugaringKind::OpaqueTy => \"`impl Trait`\",\n             DesugaringKind::ForLoop => \"`for` loop\",\n             DesugaringKind::WhileLoop => \"`while` loop\",\n+            DesugaringKind::Replace => \"drop and replace\",\n         }\n     }\n }"}, {"sha": "61a934685cdbcf03f3ad66b8f34e73b50f17d0a7", "filename": "tests/mir-opt/basic_assignment.main.ElaborateDrops.diff", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fmir-opt%2Fbasic_assignment.main.ElaborateDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fmir-opt%2Fbasic_assignment.main.ElaborateDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fbasic_assignment.main.ElaborateDrops.diff?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -0,0 +1,85 @@\n+- // MIR for `main` before ElaborateDrops\n++ // MIR for `main` after ElaborateDrops\n+  \n+  fn main() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/basic_assignment.rs:+0:11: +0:11\n+      let _1: bool;                        // in scope 0 at $DIR/basic_assignment.rs:+1:9: +1:17\n+      let mut _3: bool;                    // in scope 0 at $DIR/basic_assignment.rs:+6:16: +6:24\n+      let mut _6: std::option::Option<std::boxed::Box<u32>>; // in scope 0 at $DIR/basic_assignment.rs:+13:14: +13:20\n+      scope 1 {\n+          debug nodrop_x => _1;            // in scope 1 at $DIR/basic_assignment.rs:+1:9: +1:17\n+          let _2: bool;                    // in scope 1 at $DIR/basic_assignment.rs:+2:9: +2:17\n+          scope 2 {\n+              debug nodrop_y => _2;        // in scope 2 at $DIR/basic_assignment.rs:+2:9: +2:17\n+              let _4: std::option::Option<std::boxed::Box<u32>>; // in scope 2 at $DIR/basic_assignment.rs:+8:9: +8:15\n+              scope 3 {\n+                  debug drop_x => _4;      // in scope 3 at $DIR/basic_assignment.rs:+8:9: +8:15\n+                  let _5: std::option::Option<std::boxed::Box<u32>>; // in scope 3 at $DIR/basic_assignment.rs:+9:9: +9:15\n+                  scope 4 {\n+                      debug drop_y => _5;  // in scope 4 at $DIR/basic_assignment.rs:+9:9: +9:15\n+                  }\n+              }\n+          }\n+      }\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/basic_assignment.rs:+1:9: +1:17\n+          _1 = const false;                // scope 0 at $DIR/basic_assignment.rs:+1:20: +1:25\n+          StorageLive(_2);                 // scope 1 at $DIR/basic_assignment.rs:+2:9: +2:17\n+          StorageLive(_3);                 // scope 2 at $DIR/basic_assignment.rs:+6:16: +6:24\n+          _3 = _1;                         // scope 2 at $DIR/basic_assignment.rs:+6:16: +6:24\n+          _2 = move _3;                    // scope 2 at $DIR/basic_assignment.rs:+6:5: +6:24\n+          StorageDead(_3);                 // scope 2 at $DIR/basic_assignment.rs:+6:23: +6:24\n+          StorageLive(_4);                 // scope 2 at $DIR/basic_assignment.rs:+8:9: +8:15\n+          _4 = Option::<Box<u32>>::None;   // scope 2 at $DIR/basic_assignment.rs:+8:36: +8:40\n+          StorageLive(_5);                 // scope 3 at $DIR/basic_assignment.rs:+9:9: +9:15\n+          StorageLive(_6);                 // scope 4 at $DIR/basic_assignment.rs:+13:14: +13:20\n+          _6 = move _4;                    // scope 4 at $DIR/basic_assignment.rs:+13:14: +13:20\n+-         drop(_5) -> [return: bb1, unwind: bb2]; // scope 4 at $DIR/basic_assignment.rs:+13:5: +13:11\n++         goto -> bb1;                     // scope 4 at $DIR/basic_assignment.rs:+13:5: +13:11\n+      }\n+  \n+      bb1: {\n+          _5 = move _6;                    // scope 4 at $DIR/basic_assignment.rs:+13:5: +13:11\n+-         drop(_6) -> [return: bb3, unwind: bb6]; // scope 4 at $DIR/basic_assignment.rs:+13:19: +13:20\n++         goto -> bb3;                     // scope 4 at $DIR/basic_assignment.rs:+13:19: +13:20\n+      }\n+  \n+      bb2 (cleanup): {\n+          _5 = move _6;                    // scope 4 at $DIR/basic_assignment.rs:+13:5: +13:11\n+          drop(_6) -> bb6;                 // scope 4 at $DIR/basic_assignment.rs:+13:19: +13:20\n+      }\n+  \n+      bb3: {\n+          StorageDead(_6);                 // scope 4 at $DIR/basic_assignment.rs:+13:19: +13:20\n+          _0 = const ();                   // scope 0 at $DIR/basic_assignment.rs:+0:11: +14:2\n+          drop(_5) -> [return: bb4, unwind: bb7]; // scope 3 at $DIR/basic_assignment.rs:+14:1: +14:2\n+      }\n+  \n+      bb4: {\n+          StorageDead(_5);                 // scope 3 at $DIR/basic_assignment.rs:+14:1: +14:2\n+-         drop(_4) -> bb5;                 // scope 2 at $DIR/basic_assignment.rs:+14:1: +14:2\n++         goto -> bb5;                     // scope 2 at $DIR/basic_assignment.rs:+14:1: +14:2\n+      }\n+  \n+      bb5: {\n+          StorageDead(_4);                 // scope 2 at $DIR/basic_assignment.rs:+14:1: +14:2\n+          StorageDead(_2);                 // scope 1 at $DIR/basic_assignment.rs:+14:1: +14:2\n+          StorageDead(_1);                 // scope 0 at $DIR/basic_assignment.rs:+14:1: +14:2\n+          return;                          // scope 0 at $DIR/basic_assignment.rs:+14:2: +14:2\n+      }\n+  \n+      bb6 (cleanup): {\n+          drop(_5) -> bb7;                 // scope 3 at $DIR/basic_assignment.rs:+14:1: +14:2\n+      }\n+  \n+      bb7 (cleanup): {\n+-         drop(_4) -> bb8;                 // scope 2 at $DIR/basic_assignment.rs:+14:1: +14:2\n++         goto -> bb8;                     // scope 2 at $DIR/basic_assignment.rs:+14:1: +14:2\n+      }\n+  \n+      bb8 (cleanup): {\n+          resume;                          // scope 0 at $DIR/basic_assignment.rs:+0:1: +14:2\n+      }\n+  }\n+  "}, {"sha": "9e7f5f212846d6a69ef0e358e07cd0d99d877c9c", "filename": "tests/mir-opt/basic_assignment.main.SimplifyCfg-initial.after.mir", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fmir-opt%2Fbasic_assignment.main.SimplifyCfg-initial.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fmir-opt%2Fbasic_assignment.main.SimplifyCfg-initial.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fbasic_assignment.main.SimplifyCfg-initial.after.mir?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -1,8 +1,8 @@\n // MIR for `main` after SimplifyCfg-initial\n \n | User Type Annotations\n-| 0: user_ty: Canonical { max_universe: U0, variables: [], value: Ty(std::option::Option<std::boxed::Box<u32>>) }, span: $DIR/basic_assignment.rs:18:17: 18:33, inferred_ty: std::option::Option<std::boxed::Box<u32>>\n-| 1: user_ty: Canonical { max_universe: U0, variables: [], value: Ty(std::option::Option<std::boxed::Box<u32>>) }, span: $DIR/basic_assignment.rs:18:17: 18:33, inferred_ty: std::option::Option<std::boxed::Box<u32>>\n+| 0: user_ty: Canonical { max_universe: U0, variables: [], value: Ty(std::option::Option<std::boxed::Box<u32>>) }, span: $DIR/basic_assignment.rs:19:17: 19:33, inferred_ty: std::option::Option<std::boxed::Box<u32>>\n+| 1: user_ty: Canonical { max_universe: U0, variables: [], value: Ty(std::option::Option<std::boxed::Box<u32>>) }, span: $DIR/basic_assignment.rs:19:17: 19:33, inferred_ty: std::option::Option<std::boxed::Box<u32>>\n |\n fn main() -> () {\n     let mut _0: ();                      // return place in scope 0 at $DIR/basic_assignment.rs:+0:11: +0:11\n@@ -41,35 +41,37 @@ fn main() -> () {\n         StorageLive(_5);                 // scope 3 at $DIR/basic_assignment.rs:+9:9: +9:15\n         StorageLive(_6);                 // scope 4 at $DIR/basic_assignment.rs:+13:14: +13:20\n         _6 = move _4;                    // scope 4 at $DIR/basic_assignment.rs:+13:14: +13:20\n-        replace(_5 <- move _6) -> [return: bb1, unwind: bb5]; // scope 4 at $DIR/basic_assignment.rs:+13:5: +13:11\n+        drop(_5) -> [return: bb1, unwind: bb2]; // scope 4 at $DIR/basic_assignment.rs:+13:5: +13:11\n     }\n \n     bb1: {\n-        drop(_6) -> [return: bb2, unwind: bb6]; // scope 4 at $DIR/basic_assignment.rs:+13:19: +13:20\n+        _5 = move _6;                    // scope 4 at $DIR/basic_assignment.rs:+13:5: +13:11\n+        drop(_6) -> [return: bb3, unwind: bb6]; // scope 4 at $DIR/basic_assignment.rs:+13:19: +13:20\n     }\n \n-    bb2: {\n+    bb2 (cleanup): {\n+        _5 = move _6;                    // scope 4 at $DIR/basic_assignment.rs:+13:5: +13:11\n+        drop(_6) -> bb6;                 // scope 4 at $DIR/basic_assignment.rs:+13:19: +13:20\n+    }\n+\n+    bb3: {\n         StorageDead(_6);                 // scope 4 at $DIR/basic_assignment.rs:+13:19: +13:20\n         _0 = const ();                   // scope 0 at $DIR/basic_assignment.rs:+0:11: +14:2\n-        drop(_5) -> [return: bb3, unwind: bb7]; // scope 3 at $DIR/basic_assignment.rs:+14:1: +14:2\n+        drop(_5) -> [return: bb4, unwind: bb7]; // scope 3 at $DIR/basic_assignment.rs:+14:1: +14:2\n     }\n \n-    bb3: {\n+    bb4: {\n         StorageDead(_5);                 // scope 3 at $DIR/basic_assignment.rs:+14:1: +14:2\n-        drop(_4) -> [return: bb4, unwind: bb8]; // scope 2 at $DIR/basic_assignment.rs:+14:1: +14:2\n+        drop(_4) -> [return: bb5, unwind: bb8]; // scope 2 at $DIR/basic_assignment.rs:+14:1: +14:2\n     }\n \n-    bb4: {\n+    bb5: {\n         StorageDead(_4);                 // scope 2 at $DIR/basic_assignment.rs:+14:1: +14:2\n         StorageDead(_2);                 // scope 1 at $DIR/basic_assignment.rs:+14:1: +14:2\n         StorageDead(_1);                 // scope 0 at $DIR/basic_assignment.rs:+14:1: +14:2\n         return;                          // scope 0 at $DIR/basic_assignment.rs:+14:2: +14:2\n     }\n \n-    bb5 (cleanup): {\n-        drop(_6) -> bb6;                 // scope 4 at $DIR/basic_assignment.rs:+13:19: +13:20\n-    }\n-\n     bb6 (cleanup): {\n         drop(_5) -> bb7;                 // scope 3 at $DIR/basic_assignment.rs:+14:1: +14:2\n     }"}, {"sha": "2a52323c2ce7f29142dd6a4830d119590d7d7e9c", "filename": "tests/mir-opt/basic_assignment.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fmir-opt%2Fbasic_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fmir-opt%2Fbasic_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fbasic_assignment.rs?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -1,5 +1,6 @@\n // this tests move up progration, which is not yet implemented\n \n+// EMIT_MIR basic_assignment.main.ElaborateDrops.diff\n // EMIT_MIR basic_assignment.main.SimplifyCfg-initial.after.mir\n \n // Check codegen for assignments (`a = b`) where the left-hand-side is"}, {"sha": "3dd1a9bbab58671a7cc6d9654e09333f8b74efc7", "filename": "tests/mir-opt/issue_41110.test.ElaborateDrops.diff", "status": "modified", "additions": 19, "deletions": 27, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fmir-opt%2Fissue_41110.test.ElaborateDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fmir-opt%2Fissue_41110.test.ElaborateDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fissue_41110.test.ElaborateDrops.diff?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -38,37 +38,39 @@\n           StorageLive(_5);                 // scope 2 at $DIR/issue_41110.rs:+4:9: +4:10\n +         _6 = const false;                // scope 2 at $DIR/issue_41110.rs:+4:9: +4:10\n           _5 = move _1;                    // scope 2 at $DIR/issue_41110.rs:+4:9: +4:10\n--         replace(_2 <- move _5) -> [return: bb2, unwind: bb6]; // scope 2 at $DIR/issue_41110.rs:+4:5: +4:6\n-+         goto -> bb12;                    // scope 2 at $DIR/issue_41110.rs:+4:5: +4:6\n+-         drop(_2) -> [return: bb2, unwind: bb3]; // scope 2 at $DIR/issue_41110.rs:+4:5: +4:6\n++         goto -> bb2;                     // scope 2 at $DIR/issue_41110.rs:+4:5: +4:6\n       }\n   \n       bb2: {\n--         drop(_5) -> [return: bb3, unwind: bb8]; // scope 2 at $DIR/issue_41110.rs:+4:9: +4:10\n-+         goto -> bb3;                     // scope 2 at $DIR/issue_41110.rs:+4:9: +4:10\n+          _2 = move _5;                    // scope 2 at $DIR/issue_41110.rs:+4:5: +4:6\n+-         drop(_5) -> [return: bb4, unwind: bb8]; // scope 2 at $DIR/issue_41110.rs:+4:9: +4:10\n++         goto -> bb4;                     // scope 2 at $DIR/issue_41110.rs:+4:9: +4:10\n+      }\n+  \n+      bb3 (cleanup): {\n+          _2 = move _5;                    // scope 2 at $DIR/issue_41110.rs:+4:5: +4:6\n+          drop(_5) -> bb8;                 // scope 2 at $DIR/issue_41110.rs:+4:9: +4:10\n       }\n   \n-      bb3: {\n+      bb4: {\n           StorageDead(_5);                 // scope 2 at $DIR/issue_41110.rs:+4:9: +4:10\n           _0 = const ();                   // scope 0 at $DIR/issue_41110.rs:+0:15: +5:2\n-          drop(_2) -> [return: bb4, unwind: bb9]; // scope 1 at $DIR/issue_41110.rs:+5:1: +5:2\n+          drop(_2) -> [return: bb5, unwind: bb9]; // scope 1 at $DIR/issue_41110.rs:+5:1: +5:2\n       }\n   \n-      bb4: {\n+      bb5: {\n           StorageDead(_2);                 // scope 1 at $DIR/issue_41110.rs:+5:1: +5:2\n--         drop(_1) -> bb5;                 // scope 0 at $DIR/issue_41110.rs:+5:1: +5:2\n-+         goto -> bb5;                     // scope 0 at $DIR/issue_41110.rs:+5:1: +5:2\n+-         drop(_1) -> bb6;                 // scope 0 at $DIR/issue_41110.rs:+5:1: +5:2\n++         goto -> bb6;                     // scope 0 at $DIR/issue_41110.rs:+5:1: +5:2\n       }\n   \n-      bb5: {\n+      bb6: {\n +         _6 = const false;                // scope 0 at $DIR/issue_41110.rs:+5:1: +5:2\n           StorageDead(_1);                 // scope 0 at $DIR/issue_41110.rs:+5:1: +5:2\n           return;                          // scope 0 at $DIR/issue_41110.rs:+5:2: +5:2\n       }\n   \n-      bb6 (cleanup): {\n-          drop(_5) -> bb8;                 // scope 2 at $DIR/issue_41110.rs:+4:9: +4:10\n-      }\n-  \n       bb7 (cleanup): {\n -         drop(_4) -> bb8;                 // scope 2 at $DIR/issue_41110.rs:+3:11: +3:12\n +         goto -> bb8;                     // scope 2 at $DIR/issue_41110.rs:+3:11: +3:12\n@@ -81,29 +83,19 @@\n   \n       bb9 (cleanup): {\n -         drop(_1) -> bb10;                // scope 0 at $DIR/issue_41110.rs:+5:1: +5:2\n-+         goto -> bb14;                    // scope 0 at $DIR/issue_41110.rs:+5:1: +5:2\n++         goto -> bb12;                    // scope 0 at $DIR/issue_41110.rs:+5:1: +5:2\n       }\n   \n       bb10 (cleanup): {\n           resume;                          // scope 0 at $DIR/issue_41110.rs:+0:1: +5:2\n +     }\n + \n +     bb11 (cleanup): {\n-+         _2 = move _5;                    // scope 2 at $DIR/issue_41110.rs:+4:5: +4:6\n-+         goto -> bb10;                    // scope 2 at $DIR/issue_41110.rs:+4:5: +4:6\n-+     }\n-+ \n-+     bb12: {\n-+         _2 = move _5;                    // scope 2 at $DIR/issue_41110.rs:+4:5: +4:6\n-+         goto -> bb2;                     // scope 2 at $DIR/issue_41110.rs:+4:5: +4:6\n-+     }\n-+ \n-+     bb13 (cleanup): {\n +         drop(_1) -> bb10;                // scope 0 at $DIR/issue_41110.rs:+5:1: +5:2\n +     }\n + \n-+     bb14 (cleanup): {\n-+         switchInt(_6) -> [0: bb10, otherwise: bb13]; // scope 0 at $DIR/issue_41110.rs:+5:1: +5:2\n++     bb12 (cleanup): {\n++         switchInt(_6) -> [0: bb10, otherwise: bb11]; // scope 0 at $DIR/issue_41110.rs:+5:1: +5:2\n       }\n   }\n   "}, {"sha": "4e38659a90be736f5598e6f5f7d8401d679f6e73", "filename": "tests/mir-opt/issue_41888.main.ElaborateDrops.diff", "status": "modified", "additions": 40, "deletions": 51, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fmir-opt%2Fissue_41888.main.ElaborateDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fmir-opt%2Fissue_41888.main.ElaborateDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fissue_41888.main.ElaborateDrops.diff?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -34,7 +34,7 @@\n       }\n   \n       bb1: {\n-          switchInt(move _2) -> [0: bb7, otherwise: bb2]; // scope 1 at $DIR/issue_41888.rs:+2:8: +2:14\n+          switchInt(move _2) -> [0: bb8, otherwise: bb2]; // scope 1 at $DIR/issue_41888.rs:+2:8: +2:14\n       }\n   \n       bb2: {\n@@ -43,58 +43,63 @@\n           _4 = K;                          // scope 1 at $DIR/issue_41888.rs:+3:18: +3:19\n           _3 = E::F(move _4);              // scope 1 at $DIR/issue_41888.rs:+3:13: +3:20\n           StorageDead(_4);                 // scope 1 at $DIR/issue_41888.rs:+3:19: +3:20\n--         replace(_1 <- move _3) -> [return: bb3, unwind: bb10]; // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n-+         goto -> bb14;                    // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n+-         drop(_1) -> [return: bb3, unwind: bb4]; // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n++         goto -> bb3;                     // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n       }\n   \n       bb3: {\n--         drop(_3) -> [return: bb4, unwind: bb11]; // scope 1 at $DIR/issue_41888.rs:+3:19: +3:20\n-+         goto -> bb4;                     // scope 1 at $DIR/issue_41888.rs:+3:19: +3:20\n++         _7 = const true;                 // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n++         _8 = const true;                 // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n++         _9 = const true;                 // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n+          _1 = move _3;                    // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n+-         drop(_3) -> [return: bb5, unwind: bb11]; // scope 1 at $DIR/issue_41888.rs:+3:19: +3:20\n++         goto -> bb5;                     // scope 1 at $DIR/issue_41888.rs:+3:19: +3:20\n+      }\n+  \n+      bb4 (cleanup): {\n+          _1 = move _3;                    // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n+          drop(_3) -> bb11;                // scope 1 at $DIR/issue_41888.rs:+3:19: +3:20\n       }\n   \n-      bb4: {\n+      bb5: {\n           StorageDead(_3);                 // scope 1 at $DIR/issue_41888.rs:+3:19: +3:20\n           _5 = discriminant(_1);           // scope 2 at $DIR/issue_41888.rs:+4:16: +4:24\n-          switchInt(move _5) -> [0: bb5, otherwise: bb6]; // scope 2 at $DIR/issue_41888.rs:+4:16: +4:24\n+          switchInt(move _5) -> [0: bb6, otherwise: bb7]; // scope 2 at $DIR/issue_41888.rs:+4:16: +4:24\n       }\n   \n-      bb5: {\n+      bb6: {\n           StorageLive(_6);                 // scope 2 at $DIR/issue_41888.rs:+4:21: +4:23\n +         _9 = const false;                // scope 2 at $DIR/issue_41888.rs:+4:21: +4:23\n           _6 = move ((_1 as F).0: K);      // scope 2 at $DIR/issue_41888.rs:+4:21: +4:23\n           _0 = const ();                   // scope 2 at $DIR/issue_41888.rs:+4:29: +7:10\n           StorageDead(_6);                 // scope 1 at $DIR/issue_41888.rs:+7:9: +7:10\n-          goto -> bb8;                     // scope 1 at $DIR/issue_41888.rs:+4:9: +7:10\n+          goto -> bb9;                     // scope 1 at $DIR/issue_41888.rs:+4:9: +7:10\n       }\n   \n-      bb6: {\n+      bb7: {\n           _0 = const ();                   // scope 1 at $DIR/issue_41888.rs:+7:10: +7:10\n-          goto -> bb8;                     // scope 1 at $DIR/issue_41888.rs:+4:9: +7:10\n+          goto -> bb9;                     // scope 1 at $DIR/issue_41888.rs:+4:9: +7:10\n       }\n   \n-      bb7: {\n+      bb8: {\n           _0 = const ();                   // scope 1 at $DIR/issue_41888.rs:+8:6: +8:6\n-          goto -> bb8;                     // scope 1 at $DIR/issue_41888.rs:+2:5: +8:6\n+          goto -> bb9;                     // scope 1 at $DIR/issue_41888.rs:+2:5: +8:6\n       }\n   \n-      bb8: {\n+      bb9: {\n           StorageDead(_2);                 // scope 1 at $DIR/issue_41888.rs:+8:5: +8:6\n--         drop(_1) -> bb9;                 // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n-+         goto -> bb20;                    // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n+-         drop(_1) -> bb10;                // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n++         goto -> bb18;                    // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n       }\n   \n-      bb9: {\n+      bb10: {\n +         _7 = const false;                // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n +         _8 = const false;                // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n +         _9 = const false;                // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n           StorageDead(_1);                 // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n           return;                          // scope 0 at $DIR/issue_41888.rs:+9:2: +9:2\n       }\n   \n-      bb10 (cleanup): {\n-          drop(_3) -> bb11;                // scope 1 at $DIR/issue_41888.rs:+3:19: +3:20\n-      }\n-  \n       bb11 (cleanup): {\n -         drop(_1) -> bb12;                // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n +         goto -> bb12;                    // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n@@ -104,55 +109,39 @@\n           resume;                          // scope 0 at $DIR/issue_41888.rs:+0:1: +9:2\n +     }\n + \n-+     bb13 (cleanup): {\n-+         _7 = const true;                 // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n-+         _8 = const true;                 // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n-+         _9 = const true;                 // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n-+         _1 = move _3;                    // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n-+         goto -> bb12;                    // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n-+     }\n-+ \n-+     bb14: {\n-+         _7 = const true;                 // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n-+         _8 = const true;                 // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n-+         _9 = const true;                 // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n-+         _1 = move _3;                    // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n-+         goto -> bb3;                     // scope 1 at $DIR/issue_41888.rs:+3:9: +3:10\n-+     }\n-+ \n-+     bb15: {\n++     bb13: {\n +         _7 = const false;                // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n-+         goto -> bb9;                     // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n++         goto -> bb10;                    // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n +     }\n + \n-+     bb16 (cleanup): {\n++     bb14 (cleanup): {\n +         goto -> bb12;                    // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n +     }\n + \n-+     bb17: {\n-+         drop(_1) -> [return: bb15, unwind: bb12]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n++     bb15: {\n++         drop(_1) -> [return: bb13, unwind: bb12]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n +     }\n + \n-+     bb18 (cleanup): {\n++     bb16 (cleanup): {\n +         drop(_1) -> bb12;                // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n +     }\n + \n-+     bb19: {\n++     bb17: {\n +         _10 = discriminant(_1);          // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n-+         switchInt(move _10) -> [0: bb15, otherwise: bb17]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n++         switchInt(move _10) -> [0: bb13, otherwise: bb15]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n +     }\n + \n-+     bb20: {\n-+         switchInt(_7) -> [0: bb15, otherwise: bb19]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n++     bb18: {\n++         switchInt(_7) -> [0: bb13, otherwise: bb17]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n +     }\n + \n-+     bb21 (cleanup): {\n++     bb19 (cleanup): {\n +         _11 = discriminant(_1);          // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n-+         switchInt(move _11) -> [0: bb16, otherwise: bb18]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n++         switchInt(move _11) -> [0: bb14, otherwise: bb16]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n +     }\n + \n-+     bb22 (cleanup): {\n-+         switchInt(_7) -> [0: bb12, otherwise: bb21]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n++     bb20 (cleanup): {\n++         switchInt(_7) -> [0: bb12, otherwise: bb19]; // scope 0 at $DIR/issue_41888.rs:+9:1: +9:2\n       }\n   }\n   "}, {"sha": "56cb9166c374aed66b21784217d8b66c6f597b03", "filename": "tests/mir-opt/packed_struct_drop_aligned.main.SimplifyCfg-elaborate-drops.after.mir", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fmir-opt%2Fpacked_struct_drop_aligned.main.SimplifyCfg-elaborate-drops.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fmir-opt%2Fpacked_struct_drop_aligned.main.SimplifyCfg-elaborate-drops.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fpacked_struct_drop_aligned.main.SimplifyCfg-elaborate-drops.after.mir?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -28,28 +28,28 @@ fn main() -> () {\n         StorageDead(_5);                 // scope 1 at $DIR/packed_struct_drop_aligned.rs:+2:28: +2:29\n         StorageLive(_6);                 // scope 1 at $DIR/packed_struct_drop_aligned.rs:+2:5: +2:8\n         _6 = move (_1.0: Aligned);       // scope 1 at $DIR/packed_struct_drop_aligned.rs:+2:5: +2:8\n-        drop(_6) -> [return: bb4, unwind: bb3]; // scope 1 at $DIR/packed_struct_drop_aligned.rs:+2:5: +2:8\n+        drop(_6) -> [return: bb4, unwind: bb1]; // scope 1 at $DIR/packed_struct_drop_aligned.rs:+2:5: +2:8\n     }\n \n-    bb1: {\n-        StorageDead(_1);                 // scope 0 at $DIR/packed_struct_drop_aligned.rs:+3:1: +3:2\n-        return;                          // scope 0 at $DIR/packed_struct_drop_aligned.rs:+3:2: +3:2\n+    bb1 (cleanup): {\n+        (_1.0: Aligned) = move _4;       // scope 1 at $DIR/packed_struct_drop_aligned.rs:+2:5: +2:8\n+        drop(_1) -> bb3;                 // scope 0 at $DIR/packed_struct_drop_aligned.rs:+3:1: +3:2\n     }\n \n-    bb2 (cleanup): {\n-        resume;                          // scope 0 at $DIR/packed_struct_drop_aligned.rs:+0:1: +3:2\n+    bb2: {\n+        StorageDead(_1);                 // scope 0 at $DIR/packed_struct_drop_aligned.rs:+3:1: +3:2\n+        return;                          // scope 0 at $DIR/packed_struct_drop_aligned.rs:+3:2: +3:2\n     }\n \n     bb3 (cleanup): {\n-        (_1.0: Aligned) = move _4;       // scope 1 at $DIR/packed_struct_drop_aligned.rs:+2:5: +2:8\n-        drop(_1) -> bb2;                 // scope 0 at $DIR/packed_struct_drop_aligned.rs:+3:1: +3:2\n+        resume;                          // scope 0 at $DIR/packed_struct_drop_aligned.rs:+0:1: +3:2\n     }\n \n     bb4: {\n         StorageDead(_6);                 // scope 1 at $DIR/packed_struct_drop_aligned.rs:+2:5: +2:8\n         (_1.0: Aligned) = move _4;       // scope 1 at $DIR/packed_struct_drop_aligned.rs:+2:5: +2:8\n         StorageDead(_4);                 // scope 1 at $DIR/packed_struct_drop_aligned.rs:+2:28: +2:29\n         _0 = const ();                   // scope 0 at $DIR/packed_struct_drop_aligned.rs:+0:11: +3:2\n-        drop(_1) -> [return: bb1, unwind: bb2]; // scope 0 at $DIR/packed_struct_drop_aligned.rs:+3:1: +3:2\n+        drop(_1) -> [return: bb2, unwind: bb3]; // scope 0 at $DIR/packed_struct_drop_aligned.rs:+3:1: +3:2\n     }\n }"}, {"sha": "127a3f5b2dc972b638d8fd644116d31b94a3be36", "filename": "tests/ui/borrowck/borrowck-vec-pattern-nesting.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fui%2Fborrowck%2Fborrowck-vec-pattern-nesting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fui%2Fborrowck%2Fborrowck-vec-pattern-nesting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fborrowck-vec-pattern-nesting.rs?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -8,6 +8,7 @@ fn a() {\n         //~^ NOTE `vec[_]` is borrowed here\n             vec[0] = Box::new(4); //~ ERROR cannot assign\n             //~^ NOTE `vec[_]` is assigned to here\n+            //~| NOTE in this expansion of desugaring of drop and replace\n             _a.use_ref();\n             //~^ NOTE borrow later used here\n         }\n@@ -22,6 +23,7 @@ fn b() {\n         //~^ `vec[_]` is borrowed here\n             vec[0] = Box::new(4); //~ ERROR cannot assign\n             //~^ NOTE `vec[_]` is assigned to here\n+            //~| NOTE in this expansion of desugaring of drop and replace\n             _b.use_ref();\n             //~^ NOTE borrow later used here\n         }"}, {"sha": "5e1251b059093021e864d6d7ef4fd810f1a02ec9", "filename": "tests/ui/borrowck/borrowck-vec-pattern-nesting.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fui%2Fborrowck%2Fborrowck-vec-pattern-nesting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fui%2Fborrowck%2Fborrowck-vec-pattern-nesting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fborrowck-vec-pattern-nesting.stderr?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -6,24 +6,24 @@ LL |         [box ref _a, _, _] => {\n LL |\n LL |             vec[0] = Box::new(4);\n    |             ^^^^^^ `vec[_]` is assigned to here but it was already borrowed\n-LL |\n+...\n LL |             _a.use_ref();\n    |             ------------ borrow later used here\n \n error[E0506]: cannot assign to `vec[_]` because it is borrowed\n-  --> $DIR/borrowck-vec-pattern-nesting.rs:23:13\n+  --> $DIR/borrowck-vec-pattern-nesting.rs:24:13\n    |\n LL |         &mut [ref _b @ ..] => {\n    |               ------ `vec[_]` is borrowed here\n LL |\n LL |             vec[0] = Box::new(4);\n    |             ^^^^^^ `vec[_]` is assigned to here but it was already borrowed\n-LL |\n+...\n LL |             _b.use_ref();\n    |             ------------ borrow later used here\n \n error[E0508]: cannot move out of type `[Box<isize>]`, a non-copy slice\n-  --> $DIR/borrowck-vec-pattern-nesting.rs:34:11\n+  --> $DIR/borrowck-vec-pattern-nesting.rs:36:11\n    |\n LL |     match vec {\n    |           ^^^ cannot move out of here\n@@ -41,7 +41,7 @@ LL +         [_a,\n    |\n \n error[E0508]: cannot move out of type `[Box<isize>]`, a non-copy slice\n-  --> $DIR/borrowck-vec-pattern-nesting.rs:46:13\n+  --> $DIR/borrowck-vec-pattern-nesting.rs:48:13\n    |\n LL |     let a = vec[0];\n    |             ^^^^^^\n@@ -55,7 +55,7 @@ LL |     let a = &vec[0];\n    |             +\n \n error[E0508]: cannot move out of type `[Box<isize>]`, a non-copy slice\n-  --> $DIR/borrowck-vec-pattern-nesting.rs:55:11\n+  --> $DIR/borrowck-vec-pattern-nesting.rs:57:11\n    |\n LL |     match vec {\n    |           ^^^ cannot move out of here\n@@ -73,7 +73,7 @@ LL +         [\n    |\n \n error[E0508]: cannot move out of type `[Box<isize>]`, a non-copy slice\n-  --> $DIR/borrowck-vec-pattern-nesting.rs:65:13\n+  --> $DIR/borrowck-vec-pattern-nesting.rs:67:13\n    |\n LL |     let a = vec[0];\n    |             ^^^^^^\n@@ -87,7 +87,7 @@ LL |     let a = &vec[0];\n    |             +\n \n error[E0508]: cannot move out of type `[Box<isize>]`, a non-copy slice\n-  --> $DIR/borrowck-vec-pattern-nesting.rs:74:11\n+  --> $DIR/borrowck-vec-pattern-nesting.rs:76:11\n    |\n LL |     match vec {\n    |           ^^^ cannot move out of here\n@@ -106,7 +106,7 @@ LL +         [_a, _b, _c] => {}\n    |\n \n error[E0508]: cannot move out of type `[Box<isize>]`, a non-copy slice\n-  --> $DIR/borrowck-vec-pattern-nesting.rs:85:13\n+  --> $DIR/borrowck-vec-pattern-nesting.rs:87:13\n    |\n LL |     let a = vec[0];\n    |             ^^^^^^"}, {"sha": "6a6b25541f396c347beac727b6ee372f5c775c22", "filename": "tests/ui/borrowck/issue-45199.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fui%2Fborrowck%2Fissue-45199.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fui%2Fborrowck%2Fissue-45199.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fissue-45199.rs?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -5,6 +5,7 @@ fn test_drop_replace() {\n     b = Box::new(1);    //~ NOTE first assignment\n     b = Box::new(2);    //~ ERROR cannot assign twice to immutable variable `b`\n                         //~| NOTE cannot assign twice to immutable\n+                        //~| NOTE in this expansion of desugaring of drop and replace\n }\n \n fn test_call() {\n@@ -13,12 +14,14 @@ fn test_call() {\n                             //~| SUGGESTION mut b\n     b = Box::new(2);        //~ ERROR cannot assign twice to immutable variable `b`\n                             //~| NOTE cannot assign twice to immutable\n+                            //~| NOTE in this expansion of desugaring of drop and replace\n }\n \n fn test_args(b: Box<i32>) {  //~ HELP consider making this binding mutable\n                                 //~| SUGGESTION mut b\n     b = Box::new(2);            //~ ERROR cannot assign to immutable argument `b`\n                                 //~| NOTE cannot assign to immutable argument\n+                                //~| NOTE in this expansion of desugaring of drop and replace\n }\n \n fn main() {}"}, {"sha": "163f2370ba010097eb182788512ebffdb21ebb05", "filename": "tests/ui/borrowck/issue-45199.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fui%2Fborrowck%2Fissue-45199.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fui%2Fborrowck%2Fissue-45199.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fissue-45199.stderr?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -10,7 +10,7 @@ LL |     b = Box::new(2);\n    |     ^ cannot assign twice to immutable variable\n \n error[E0384]: cannot assign twice to immutable variable `b`\n-  --> $DIR/issue-45199.rs:14:5\n+  --> $DIR/issue-45199.rs:15:5\n    |\n LL |     let b = Box::new(1);\n    |         -\n@@ -22,7 +22,7 @@ LL |     b = Box::new(2);\n    |     ^ cannot assign twice to immutable variable\n \n error[E0384]: cannot assign to immutable argument `b`\n-  --> $DIR/issue-45199.rs:20:5\n+  --> $DIR/issue-45199.rs:22:5\n    |\n LL | fn test_args(b: Box<i32>) {\n    |              - help: consider making this binding mutable: `mut b`"}, {"sha": "0b2372d1274ceabd037bc547b662f24ca7e438ad", "filename": "tests/ui/borrowck/issue-58776-borrowck-scans-children.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.rs?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -5,7 +5,6 @@ fn main() {\n     greeting = \"DEALLOCATED\".to_string();\n     //~^ ERROR cannot assign\n     drop(greeting);\n-    //~^ ERROR cannot move\n \n     println!(\"thread result: {:?}\", res);\n }"}, {"sha": "967451c68bea1f24ebcecf3848e9d091aebb5773", "filename": "tests/ui/borrowck/issue-58776-borrowck-scans-children.stderr", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.stderr?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -12,21 +12,6 @@ LL |     greeting = \"DEALLOCATED\".to_string();\n LL |     println!(\"thread result: {:?}\", res);\n    |                                     --- borrow later used here\n \n-error[E0505]: cannot move out of `greeting` because it is borrowed\n-  --> $DIR/issue-58776-borrowck-scans-children.rs:7:10\n-   |\n-LL |     let res = (|| (|| &greeting)())();\n-   |                --      -------- borrow occurs due to use in closure\n-   |                |\n-   |                borrow of `greeting` occurs here\n-...\n-LL |     drop(greeting);\n-   |          ^^^^^^^^ move out of `greeting` occurs here\n-...\n-LL |     println!(\"thread result: {:?}\", res);\n-   |                                     --- borrow later used here\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors have detailed explanations: E0505, E0506.\n-For more information about an error, try `rustc --explain E0505`.\n+For more information about this error, try `rustc --explain E0506`."}, {"sha": "293fdca1cc91be77a7d4a42e607d901140a61d60", "filename": "tests/ui/liveness/liveness-assign/liveness-assign-imm-local-with-drop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fui%2Fliveness%2Fliveness-assign%2Fliveness-assign-imm-local-with-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a/tests%2Fui%2Fliveness%2Fliveness-assign%2Fliveness-assign-imm-local-with-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliveness%2Fliveness-assign%2Fliveness-assign-imm-local-with-drop.rs?ref=b3a47d9b6b26adebe9ce0e24c7efb26c6380d50a", "patch": "@@ -5,6 +5,7 @@ fn test() {\n     drop(b);\n     b = Box::new(2); //~ ERROR cannot assign twice to immutable variable `b`\n                      //~| NOTE cannot assign twice to immutable\n+                     //~| NOTE in this expansion of desugaring of drop and replace\n     drop(b);\n }\n "}]}