{"sha": "2a83c11d4d2468fd753daddb0dfffd392d09f289", "node_id": "C_kwDOAAsO6NoAKDJhODNjMTFkNGQyNDY4ZmQ3NTNkYWRkYjBkZmZmZDM5MmQwOWYyODk", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2021-11-26T22:06:08Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2021-11-26T22:06:08Z"}, "message": "Handle placeholder regions in NLL type outlive constraints", "tree": {"sha": "c267d6af0c67f7408cced0dad6af29c8c9793b79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c267d6af0c67f7408cced0dad6af29c8c9793b79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a83c11d4d2468fd753daddb0dfffd392d09f289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a83c11d4d2468fd753daddb0dfffd392d09f289", "html_url": "https://github.com/rust-lang/rust/commit/2a83c11d4d2468fd753daddb0dfffd392d09f289", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a83c11d4d2468fd753daddb0dfffd392d09f289/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "454cc5fb86be180b3ec1138b6f2b480fbf3f1388", "url": "https://api.github.com/repos/rust-lang/rust/commits/454cc5fb86be180b3ec1138b6f2b480fbf3f1388", "html_url": "https://github.com/rust-lang/rust/commit/454cc5fb86be180b3ec1138b6f2b480fbf3f1388"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "a3b39591f8db261891835ea878a1dfc8a5445560", "filename": "compiler/rustc_borrowck/src/type_check/constraint_conversion.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2a83c11d4d2468fd753daddb0dfffd392d09f289/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fconstraint_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a83c11d4d2468fd753daddb0dfffd392d09f289/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fconstraint_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fconstraint_conversion.rs?ref=2a83c11d4d2468fd753daddb0dfffd392d09f289", "patch": "@@ -6,6 +6,7 @@ use rustc_infer::infer::region_constraints::{GenericKind, VerifyBound};\n use rustc_infer::infer::{self, InferCtxt, SubregionOrigin};\n use rustc_middle::mir::ConstraintCategory;\n use rustc_middle::ty::subst::GenericArgKind;\n+use rustc_middle::ty::TypeFoldable;\n use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::DUMMY_SP;\n \n@@ -95,11 +96,23 @@ impl<'a, 'tcx> ConstraintConversion<'a, 'tcx> {\n                 self.add_outlives(r1_vid, r2_vid);\n             }\n \n-            GenericArgKind::Type(t1) => {\n+            GenericArgKind::Type(mut t1) => {\n                 // we don't actually use this for anything, but\n                 // the `TypeOutlives` code needs an origin.\n                 let origin = infer::RelateParamBound(DUMMY_SP, t1, None);\n \n+                // Placeholder regions need to be converted now because it may\n+                // create new region variables, which can't be done later when\n+                // verifying these bounds.\n+                if t1.has_placeholders() {\n+                    t1 = tcx.fold_regions(&t1, &mut false, |r, _| match *r {\n+                        ty::RegionKind::RePlaceholder(placeholder) => {\n+                            self.constraints.placeholder_region(self.infcx, placeholder)\n+                        }\n+                        _ => r,\n+                    });\n+                }\n+\n                 TypeOutlives::new(\n                     &mut *self,\n                     tcx,"}, {"sha": "9366e94c90ff559e28fadab9c1ae74af214d17b0", "filename": "src/test/ui/lifetimes/issue-76168-hr-outlives.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2a83c11d4d2468fd753daddb0dfffd392d09f289/src%2Ftest%2Fui%2Flifetimes%2Fissue-76168-hr-outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a83c11d4d2468fd753daddb0dfffd392d09f289/src%2Ftest%2Fui%2Flifetimes%2Fissue-76168-hr-outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fissue-76168-hr-outlives.rs?ref=2a83c11d4d2468fd753daddb0dfffd392d09f289", "patch": "@@ -0,0 +1,19 @@\n+// edition:2018\n+// check-pass\n+\n+#![feature(unboxed_closures)]\n+use std::future::Future;\n+\n+async fn wrapper<F>(f: F)\n+where for<'a> F: FnOnce<(&'a mut i32,)>,\n+    for<'a> <F as FnOnce<(&'a mut i32,)>>::Output: Future<Output=()> + 'a\n+{\n+    let mut i = 41;\n+    f(&mut i).await;\n+}\n+\n+async fn add_one(i: &mut i32) {\n+    *i = *i + 1;\n+}\n+\n+fn main() {}"}]}