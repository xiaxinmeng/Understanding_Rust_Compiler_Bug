{"sha": "868927fefb2f6ea62783339552bbb67f828190e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2ODkyN2ZlZmIyZjZlYTYyNzgzMzM5NTUyYmJiNjdmODI4MTkwZTE=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-05T04:11:57Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-29T21:21:26Z"}, "message": "rustdoc: Fix intra-doc links for cross-crate re-exports of traits\n\n #58972 ignored extern_traits because before #65983 was fixed, they\nwould always fail to resolve, giving spurious warnings.\nThis undoes that change, so extern traits are now seen by the\n`collect_intra_doc_links` pass. There are also some minor changes in\nlibrustdoc/fold.rs to avoid borrowing the extern_traits RefCell more\nthan once at a time.", "tree": {"sha": "960e5c1b67fab7ea5c763569145c608063310892", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/960e5c1b67fab7ea5c763569145c608063310892"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/868927fefb2f6ea62783339552bbb67f828190e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/868927fefb2f6ea62783339552bbb67f828190e1", "html_url": "https://github.com/rust-lang/rust/commit/868927fefb2f6ea62783339552bbb67f828190e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/868927fefb2f6ea62783339552bbb67f828190e1/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dc748fb3d2c54f536e6abd74f1ad34b3624f640", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dc748fb3d2c54f536e6abd74f1ad34b3624f640", "html_url": "https://github.com/rust-lang/rust/commit/1dc748fb3d2c54f536e6abd74f1ad34b3624f640"}], "stats": {"total": 29, "additions": 8, "deletions": 21}, "files": [{"sha": "50cb987cf0870d9b0bb98989941245ca342b5c57", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/868927fefb2f6ea62783339552bbb67f828190e1/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/868927fefb2f6ea62783339552bbb67f828190e1/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=868927fefb2f6ea62783339552bbb67f828190e1", "patch": "@@ -628,7 +628,9 @@ pub fn record_extern_trait(cx: &DocContext<'_>, did: DefId) {\n         }\n     }\n \n-    cx.active_extern_traits.borrow_mut().insert(did);\n+    {\n+        cx.active_extern_traits.borrow_mut().insert(did);\n+    }\n \n     debug!(\"record_extern_trait: {:?}\", did);\n     let trait_ = build_external_trait(cx, did);"}, {"sha": "d4ada3278e6a1298901371d33cabfe12dcccec07", "filename": "src/librustdoc/fold.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/868927fefb2f6ea62783339552bbb67f828190e1/src%2Flibrustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/868927fefb2f6ea62783339552bbb67f828190e1/src%2Flibrustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ffold.rs?ref=868927fefb2f6ea62783339552bbb67f828190e1", "patch": "@@ -93,15 +93,11 @@ pub trait DocFolder: Sized {\n         c.module = c.module.take().and_then(|module| self.fold_item(module));\n \n         {\n-            let mut guard = c.external_traits.borrow_mut();\n-            let external_traits = std::mem::replace(&mut *guard, Default::default());\n-            *guard = external_traits\n-                .into_iter()\n-                .map(|(k, mut v)| {\n-                    v.items = v.items.into_iter().filter_map(|i| self.fold_item(i)).collect();\n-                    (k, v)\n-                })\n-                .collect();\n+            let external_traits = { std::mem::take(&mut *c.external_traits.borrow_mut()) };\n+            for (k, mut v) in external_traits {\n+                v.items = v.items.into_iter().filter_map(|i| self.fold_item(i)).collect();\n+                c.external_traits.borrow_mut().insert(k, v);\n+            }\n         }\n         c\n     }"}, {"sha": "0ef48e7d51bf2518e996527162b458a7224cbf38", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/868927fefb2f6ea62783339552bbb67f828190e1/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/868927fefb2f6ea62783339552bbb67f828190e1/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=868927fefb2f6ea62783339552bbb67f828190e1", "patch": "@@ -971,15 +971,6 @@ impl<'a, 'tcx> DocFolder for LinkCollector<'a, 'tcx> {\n             self.fold_item_recur(item)\n         }\n     }\n-\n-    // FIXME: if we can resolve intra-doc links from other crates, we can use the stock\n-    // `fold_crate`, but until then we should avoid scanning `krate.external_traits` since those\n-    // will never resolve properly\n-    fn fold_crate(&mut self, mut c: Crate) -> Crate {\n-        c.module = c.module.take().and_then(|module| self.fold_item(module));\n-\n-        c\n-    }\n }\n \n #[derive(Copy, Clone, Debug, PartialEq, Eq)]"}, {"sha": "07decb48019da26c168cbcc031ba6df4f48e4bb7", "filename": "src/test/rustdoc/intra-doc-crate/traits.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/868927fefb2f6ea62783339552bbb67f828190e1/src%2Ftest%2Frustdoc%2Fintra-doc-crate%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/868927fefb2f6ea62783339552bbb67f828190e1/src%2Ftest%2Frustdoc%2Fintra-doc-crate%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc-crate%2Ftraits.rs?ref=868927fefb2f6ea62783339552bbb67f828190e1", "patch": "@@ -1,5 +1,3 @@\n-// ignore-test\n-// ^ this is https://github.com/rust-lang/rust/issues/73829\n // aux-build:traits.rs\n // build-aux-docs\n // ignore-tidy-line-length"}]}