{"sha": "d791aa1b3f2d67720f1baba31bf1f1a5e7988b8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3OTFhYTFiM2YyZDY3NzIwZjFiYWJhMzFiZjFmMWE1ZTc5ODhiOGY=", "commit": {"author": {"name": "trixnz", "email": "me@trix.nz", "date": "2016-08-20T10:10:41Z"}, "committer": {"name": "trixnz", "email": "me@trix.nz", "date": "2016-08-20T10:10:41Z"}, "message": "Fix broken tests for E0428", "tree": {"sha": "edf2fd27297774f9038c958470aa41dce5f24f89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edf2fd27297774f9038c958470aa41dce5f24f89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d791aa1b3f2d67720f1baba31bf1f1a5e7988b8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d791aa1b3f2d67720f1baba31bf1f1a5e7988b8f", "html_url": "https://github.com/rust-lang/rust/commit/d791aa1b3f2d67720f1baba31bf1f1a5e7988b8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d791aa1b3f2d67720f1baba31bf1f1a5e7988b8f/comments", "author": {"login": "trixnz", "id": 2995953, "node_id": "MDQ6VXNlcjI5OTU5NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2995953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trixnz", "html_url": "https://github.com/trixnz", "followers_url": "https://api.github.com/users/trixnz/followers", "following_url": "https://api.github.com/users/trixnz/following{/other_user}", "gists_url": "https://api.github.com/users/trixnz/gists{/gist_id}", "starred_url": "https://api.github.com/users/trixnz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trixnz/subscriptions", "organizations_url": "https://api.github.com/users/trixnz/orgs", "repos_url": "https://api.github.com/users/trixnz/repos", "events_url": "https://api.github.com/users/trixnz/events{/privacy}", "received_events_url": "https://api.github.com/users/trixnz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "trixnz", "id": 2995953, "node_id": "MDQ6VXNlcjI5OTU5NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2995953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trixnz", "html_url": "https://github.com/trixnz", "followers_url": "https://api.github.com/users/trixnz/followers", "following_url": "https://api.github.com/users/trixnz/following{/other_user}", "gists_url": "https://api.github.com/users/trixnz/gists{/gist_id}", "starred_url": "https://api.github.com/users/trixnz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trixnz/subscriptions", "organizations_url": "https://api.github.com/users/trixnz/orgs", "repos_url": "https://api.github.com/users/trixnz/repos", "events_url": "https://api.github.com/users/trixnz/events{/privacy}", "received_events_url": "https://api.github.com/users/trixnz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b64cf669cef3aec090b2c6fa6ba7b8b23d4ba97", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b64cf669cef3aec090b2c6fa6ba7b8b23d4ba97", "html_url": "https://github.com/rust-lang/rust/commit/3b64cf669cef3aec090b2c6fa6ba7b8b23d4ba97"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "527ac7505a654b15c068ecd704390adee28932e8", "filename": "src/test/compile-fail/enum-and-module-in-same-scope.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d791aa1b3f2d67720f1baba31bf1f1a5e7988b8f/src%2Ftest%2Fcompile-fail%2Fenum-and-module-in-same-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d791aa1b3f2d67720f1baba31bf1f1a5e7988b8f/src%2Ftest%2Fcompile-fail%2Fenum-and-module-in-same-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fenum-and-module-in-same-scope.rs?ref=d791aa1b3f2d67720f1baba31bf1f1a5e7988b8f", "patch": "@@ -8,11 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-enum Foo { //~ NOTE previous definition\n+enum Foo { //~ NOTE previous definition of `Foo` here\n     X\n }\n \n mod Foo { //~ ERROR a type named `Foo` has already been defined\n+          //~| NOTE already defined\n     pub static X: isize = 42;\n     fn f() { f() } // Check that this does not result in a resolution error\n }"}, {"sha": "d103d45bc4cb75bb4b6ecf714f0ce572e87fdb6d", "filename": "src/test/compile-fail/issue-21546.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d791aa1b3f2d67720f1baba31bf1f1a5e7988b8f/src%2Ftest%2Fcompile-fail%2Fissue-21546.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d791aa1b3f2d67720f1baba31bf1f1a5e7988b8f/src%2Ftest%2Fcompile-fail%2Fissue-21546.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-21546.rs?ref=d791aa1b3f2d67720f1baba31bf1f1a5e7988b8f", "patch": "@@ -17,6 +17,7 @@ mod Foo { }\n #[allow(dead_code)]\n struct Foo;\n //~^ ERROR a module named `Foo` has already been defined in this module\n+//~| NOTE already defined\n \n #[allow(non_snake_case)]\n mod Bar { }\n@@ -25,6 +26,7 @@ mod Bar { }\n #[allow(dead_code)]\n struct Bar(i32);\n //~^ ERROR a module named `Bar` has already been defined\n+//~| NOTE already defined\n \n \n #[allow(dead_code)]\n@@ -34,6 +36,7 @@ struct Baz(i32);\n #[allow(non_snake_case)]\n mod Baz { }\n //~^ ERROR a type named `Baz` has already been defined\n+//~| NOTE already defined\n \n \n #[allow(dead_code)]\n@@ -43,6 +46,7 @@ struct Qux { x: bool }\n #[allow(non_snake_case)]\n mod Qux { }\n //~^ ERROR a type named `Qux` has already been defined\n+//~| NOTE already defined\n \n \n #[allow(dead_code)]\n@@ -52,6 +56,7 @@ struct Quux;\n #[allow(non_snake_case)]\n mod Quux { }\n //~^ ERROR a type named `Quux` has already been defined\n+//~| NOTE already defined\n \n \n #[allow(dead_code)]\n@@ -61,5 +66,6 @@ enum Corge { A, B }\n #[allow(non_snake_case)]\n mod Corge { }\n //~^ ERROR a type named `Corge` has already been defined\n+//~| NOTE already defined\n \n fn main() { }"}, {"sha": "7bcab1f6ac56b9da9e828b45fefc604a6ac67fb3", "filename": "src/test/compile-fail/trait-duplicate-methods.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d791aa1b3f2d67720f1baba31bf1f1a5e7988b8f/src%2Ftest%2Fcompile-fail%2Ftrait-duplicate-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d791aa1b3f2d67720f1baba31bf1f1a5e7988b8f/src%2Ftest%2Fcompile-fail%2Ftrait-duplicate-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-duplicate-methods.rs?ref=d791aa1b3f2d67720f1baba31bf1f1a5e7988b8f", "patch": "@@ -11,6 +11,7 @@\n trait Foo {\n     fn orange(&self); //~ NOTE previous definition of `orange` here\n     fn orange(&self); //~ ERROR a value named `orange` has already been defined in this trait\n+                      //~| NOTE already define\n }\n \n fn main() {}"}]}