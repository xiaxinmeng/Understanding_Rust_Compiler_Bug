{"sha": "6f7d1937e20edf00ea2b5d7c2c8ce2dab2830452", "node_id": "C_kwDOAAsO6NoAKDZmN2QxOTM3ZTIwZWRmMDBlYTJiNWQ3YzJjOGNlMmRhYjI4MzA0NTI", "commit": {"author": {"name": "Raoul Strackx", "email": "raoul.strackx@fortanix.com", "date": "2022-03-23T09:03:00Z"}, "committer": {"name": "Raoul Strackx", "email": "raoul.strackx@fortanix.com", "date": "2022-06-15T09:06:48Z"}, "message": "Ensure userspace allocation is 8-byte aligned", "tree": {"sha": "7063246cdd6cce51d1b5bfd92d904e92189ca718", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7063246cdd6cce51d1b5bfd92d904e92189ca718"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f7d1937e20edf00ea2b5d7c2c8ce2dab2830452", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f7d1937e20edf00ea2b5d7c2c8ce2dab2830452", "html_url": "https://github.com/rust-lang/rust/commit/6f7d1937e20edf00ea2b5d7c2c8ce2dab2830452", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f7d1937e20edf00ea2b5d7c2c8ce2dab2830452/comments", "author": {"login": "raoulstrackx", "id": 56830709, "node_id": "MDQ6VXNlcjU2ODMwNzA5", "avatar_url": "https://avatars.githubusercontent.com/u/56830709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raoulstrackx", "html_url": "https://github.com/raoulstrackx", "followers_url": "https://api.github.com/users/raoulstrackx/followers", "following_url": "https://api.github.com/users/raoulstrackx/following{/other_user}", "gists_url": "https://api.github.com/users/raoulstrackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/raoulstrackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raoulstrackx/subscriptions", "organizations_url": "https://api.github.com/users/raoulstrackx/orgs", "repos_url": "https://api.github.com/users/raoulstrackx/repos", "events_url": "https://api.github.com/users/raoulstrackx/events{/privacy}", "received_events_url": "https://api.github.com/users/raoulstrackx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "raoulstrackx", "id": 56830709, "node_id": "MDQ6VXNlcjU2ODMwNzA5", "avatar_url": "https://avatars.githubusercontent.com/u/56830709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raoulstrackx", "html_url": "https://github.com/raoulstrackx", "followers_url": "https://api.github.com/users/raoulstrackx/followers", "following_url": "https://api.github.com/users/raoulstrackx/following{/other_user}", "gists_url": "https://api.github.com/users/raoulstrackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/raoulstrackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raoulstrackx/subscriptions", "organizations_url": "https://api.github.com/users/raoulstrackx/orgs", "repos_url": "https://api.github.com/users/raoulstrackx/repos", "events_url": "https://api.github.com/users/raoulstrackx/events{/privacy}", "received_events_url": "https://api.github.com/users/raoulstrackx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "531752f39ab662a73e7ab580bf8a06c6bfeef486", "url": "https://api.github.com/repos/rust-lang/rust/commits/531752f39ab662a73e7ab580bf8a06c6bfeef486", "html_url": "https://github.com/rust-lang/rust/commit/531752f39ab662a73e7ab580bf8a06c6bfeef486"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "4c1f279857f9c4038779dbc6bd3f173e831bac36", "filename": "library/std/src/sys/sgx/abi/usercalls/alloc.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6f7d1937e20edf00ea2b5d7c2c8ce2dab2830452/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fabi%2Fusercalls%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f7d1937e20edf00ea2b5d7c2c8ce2dab2830452/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fabi%2Fusercalls%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fabi%2Fusercalls%2Falloc.rs?ref=6f7d1937e20edf00ea2b5d7c2c8ce2dab2830452", "patch": "@@ -2,6 +2,7 @@\n \n use crate::arch::asm;\n use crate::cell::UnsafeCell;\n+use crate::cmp;\n use crate::convert::TryInto;\n use crate::mem;\n use crate::ops::{CoerceUnsized, Deref, DerefMut, Index, IndexMut};\n@@ -212,7 +213,9 @@ where\n         unsafe {\n             // Mustn't call alloc with size 0.\n             let ptr = if size > 0 {\n-                rtunwrap!(Ok, super::alloc(size, T::align_of())) as _\n+                // `copy_to_userspace` is more efficient when data is 8-byte aligned\n+                let alignment = cmp::max(T::align_of(), 8);\n+                rtunwrap!(Ok, super::alloc(size, alignment)) as _\n             } else {\n                 T::align_of() as _ // dangling pointer ok for size 0\n             };"}]}