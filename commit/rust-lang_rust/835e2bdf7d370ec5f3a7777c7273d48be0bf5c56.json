{"sha": "835e2bdf7d370ec5f3a7777c7273d48be0bf5c56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNWUyYmRmN2QzNzBlYzVmM2E3Nzc3YzcyNzNkNDhiZTBiZjVjNTY=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-09T20:46:00Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-17T19:51:55Z"}, "message": "Add -Z orbit for forcing MIR for everything, unless #[rustc_no_mir] is used.", "tree": {"sha": "995f42f13a54784f600eb34437e2cc60aefe794a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/995f42f13a54784f600eb34437e2cc60aefe794a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/835e2bdf7d370ec5f3a7777c7273d48be0bf5c56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/835e2bdf7d370ec5f3a7777c7273d48be0bf5c56", "html_url": "https://github.com/rust-lang/rust/commit/835e2bdf7d370ec5f3a7777c7273d48be0bf5c56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/835e2bdf7d370ec5f3a7777c7273d48be0bf5c56/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "856185dbb2f4a57dc865c6dc3c856268c7efa79a", "url": "https://api.github.com/repos/rust-lang/rust/commits/856185dbb2f4a57dc865c6dc3c856268c7efa79a", "html_url": "https://github.com/rust-lang/rust/commit/856185dbb2f4a57dc865c6dc3c856268c7efa79a"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "34132b7e5f5358f7bbbf674c45eb3fac96497131", "filename": "configure", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/835e2bdf7d370ec5f3a7777c7273d48be0bf5c56/configure", "raw_url": "https://github.com/rust-lang/rust/raw/835e2bdf7d370ec5f3a7777c7273d48be0bf5c56/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=835e2bdf7d370ec5f3a7777c7273d48be0bf5c56", "patch": "@@ -607,6 +607,7 @@ opt dist-host-only 0 \"only install bins for the host architecture\"\n opt inject-std-version 1 \"inject the current compiler version of libstd into programs\"\n opt llvm-version-check 1 \"check if the LLVM version is supported, build anyway\"\n opt rustbuild 0 \"use the rust and cargo based build system\"\n+opt orbit 0 \"get MIR where it belongs - everywhere; most importantly, in orbit\"\n \n # Optimization and debugging options. These may be overridden by the release channel, etc.\n opt_nosave optimize 1 \"build optimized rust code\"\n@@ -713,6 +714,8 @@ if [ -n \"$CFG_ENABLE_DEBUG_ASSERTIONS\" ]; then putvar CFG_ENABLE_DEBUG_ASSERTION\n if [ -n \"$CFG_ENABLE_DEBUGINFO\" ]; then putvar CFG_ENABLE_DEBUGINFO; fi\n if [ -n \"$CFG_ENABLE_DEBUG_JEMALLOC\" ]; then putvar CFG_ENABLE_DEBUG_JEMALLOC; fi\n \n+if [ -n \"$CFG_ENABLE_ORBIT\" ]; then putvar CFG_ENABLE_ORBIT; fi\n+\n # A magic value that allows the compiler to use unstable features\n # during the bootstrap even when doing so would normally be an error\n # because of feature staging or because the build turns on"}, {"sha": "9df04a6d43eac4c5a7073615604f308d73b7af65", "filename": "mk/main.mk", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/835e2bdf7d370ec5f3a7777c7273d48be0bf5c56/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/835e2bdf7d370ec5f3a7777c7273d48be0bf5c56/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=835e2bdf7d370ec5f3a7777c7273d48be0bf5c56", "patch": "@@ -134,6 +134,11 @@ ifdef CFG_ENABLE_DEBUGINFO\n   CFG_RUSTC_FLAGS += -g\n endif\n \n+ifdef CFG_ENABLE_ORBIT\n+  $(info cfg: launching MIR (CFG_ENABLE_ORBIT))\n+  CFG_RUSTC_FLAGS += -Z orbit\n+endif\n+\n ifdef SAVE_TEMPS\n   CFG_RUSTC_FLAGS += --save-temps\n endif"}, {"sha": "17f70b2d8dc663ebd7cd01a6b51e48081f74fe62", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/835e2bdf7d370ec5f3a7777c7273d48be0bf5c56/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/835e2bdf7d370ec5f3a7777c7273d48be0bf5c56/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=835e2bdf7d370ec5f3a7777c7273d48be0bf5c56", "patch": "@@ -663,6 +663,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n           \"print the result of the translation item collection pass\"),\n     mir_opt_level: Option<usize> = (None, parse_opt_uint,\n           \"set the MIR optimization level (0-3)\"),\n+    orbit: bool = (false, parse_bool,\n+          \"get MIR where it belongs - everywhere; most importantly, in orbit\"),\n }\n \n pub fn default_lib_output() -> CrateType {"}, {"sha": "93ca306f0b0a2a464bbf18846c6ca94607769e8b", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/835e2bdf7d370ec5f3a7777c7273d48be0bf5c56/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/835e2bdf7d370ec5f3a7777c7273d48be0bf5c56/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=835e2bdf7d370ec5f3a7777c7273d48be0bf5c56", "patch": "@@ -1431,7 +1431,9 @@ impl<'blk, 'tcx> FunctionContext<'blk, 'tcx> {\n         };\n \n         let check_attrs = |attrs: &[ast::Attribute]| {\n-            attrs.iter().any(|item| item.check_name(\"rustc_mir\"))\n+            let default_to_mir = ccx.sess().opts.debugging_opts.orbit;\n+            let invert = if default_to_mir { \"rustc_no_mir\" } else { \"rustc_mir\" };\n+            default_to_mir ^ attrs.iter().any(|item| item.check_name(invert))\n         };\n \n         let use_mir = if let Some(id) = local_id {\n@@ -1449,13 +1451,13 @@ impl<'blk, 'tcx> FunctionContext<'blk, 'tcx> {\n         };\n \n         FunctionContext {\n+            needs_ret_allocas: nested_returns && mir.is_none(),\n             mir: mir,\n             llfn: llfndecl,\n             llretslotptr: Cell::new(None),\n             param_env: ccx.tcx().empty_parameter_environment(),\n             alloca_insert_pt: Cell::new(None),\n             llreturn: Cell::new(None),\n-            needs_ret_allocas: nested_returns,\n             landingpad_alloca: Cell::new(None),\n             lllocals: RefCell::new(NodeMap()),\n             llupvars: RefCell::new(NodeMap()),"}, {"sha": "a017e62d546319518e325dfbe2e13f86167ccd3d", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/835e2bdf7d370ec5f3a7777c7273d48be0bf5c56/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/835e2bdf7d370ec5f3a7777c7273d48be0bf5c56/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=835e2bdf7d370ec5f3a7777c7273d48be0bf5c56", "patch": "@@ -350,10 +350,14 @@ pub const KNOWN_ATTRIBUTES: &'static [(&'static str, AttributeType, AttributeGat\n                                            \"the `#[rustc_move_fragments]` attribute \\\n                                             is just used for rustc unit tests \\\n                                             and will never be stable\")),\n-    (\"rustc_mir\", Normal, Gated(\"rustc_attrs\",\n-                                \"the `#[rustc_mir]` attribute \\\n-                                 is just used for rustc unit tests \\\n-                                 and will never be stable\")),\n+    (\"rustc_mir\", Whitelisted, Gated(\"rustc_attrs\",\n+                                     \"the `#[rustc_mir]` attribute \\\n+                                      is just used for rustc unit tests \\\n+                                      and will never be stable\")),\n+    (\"rustc_no_mir\", Whitelisted, Gated(\"rustc_attrs\",\n+                                        \"the `#[rustc_no_mir]` attribute \\\n+                                         is just used to make tests pass \\\n+                                         and will never be stable\")),\n \n     (\"allow_internal_unstable\", Normal, Gated(\"allow_internal_unstable\",\n                                               EXPLAIN_ALLOW_INTERNAL_UNSTABLE)),"}]}