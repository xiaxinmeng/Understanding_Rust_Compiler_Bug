{"sha": "aa8c48a2746e85b1a2e2ff53a34f30b81920fa5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhOGM0OGEyNzQ2ZTg1YjFhMmUyZmY1M2EzNGYzMGI4MTkyMGZhNWY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-02-19T08:35:06Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-03-04T16:10:02Z"}, "message": "Don't try to copy relocations if there are none", "tree": {"sha": "7cff4a083e6b5ab948edd561b1818821efc4c5a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7cff4a083e6b5ab948edd561b1818821efc4c5a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa8c48a2746e85b1a2e2ff53a34f30b81920fa5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa8c48a2746e85b1a2e2ff53a34f30b81920fa5f", "html_url": "https://github.com/rust-lang/rust/commit/aa8c48a2746e85b1a2e2ff53a34f30b81920fa5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa8c48a2746e85b1a2e2ff53a34f30b81920fa5f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e3d1b65c500a33993462c84ecb80136d184acb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e3d1b65c500a33993462c84ecb80136d184acb2", "html_url": "https://github.com/rust-lang/rust/commit/1e3d1b65c500a33993462c84ecb80136d184acb2"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "8cbc404e28b3117433561c1ee674a0b98aaa45e0", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 22, "deletions": 17, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/aa8c48a2746e85b1a2e2ff53a34f30b81920fa5f/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa8c48a2746e85b1a2e2ff53a34f30b81920fa5f/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=aa8c48a2746e85b1a2e2ff53a34f30b81920fa5f", "patch": "@@ -700,24 +700,29 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n         // relocations overlapping the edges; those would not be handled correctly).\n         let relocations = {\n             let relocations = self.get(src.alloc_id)?.relocations(self, src, size);\n-            let mut new_relocations = Vec::with_capacity(relocations.len() * (length as usize));\n-            for i in 0..length {\n-                new_relocations.extend(\n-                    relocations\n-                    .iter()\n-                    .map(|&(offset, reloc)| {\n-                        // compute offset for current repetition\n-                        let dest_offset = dest.offset + (i * size);\n-                        (\n-                            // shift offsets from source allocation to destination allocation\n-                            offset + dest_offset - src.offset,\n-                            reloc,\n-                        )\n-                    })\n-                );\n-            }\n+            if relocations.is_empty() {\n+                // nothing to copy, ignore even the `length` loop\n+                Vec::new()\n+            } else {\n+                let mut new_relocations = Vec::with_capacity(relocations.len() * (length as usize));\n+                for i in 0..length {\n+                    new_relocations.extend(\n+                        relocations\n+                        .iter()\n+                        .map(|&(offset, reloc)| {\n+                            // compute offset for current repetition\n+                            let dest_offset = dest.offset + (i * size);\n+                            (\n+                                // shift offsets from source allocation to destination allocation\n+                                offset + dest_offset - src.offset,\n+                                reloc,\n+                            )\n+                        })\n+                    );\n+                }\n \n-            new_relocations\n+                new_relocations\n+            }\n         };\n \n         let tcx = self.tcx.tcx;"}]}