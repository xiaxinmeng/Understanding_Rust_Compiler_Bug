{"sha": "55371be807bf5eb5d526658d77084230213881fb", "node_id": "C_kwDOAAsO6NoAKDU1MzcxYmU4MDdiZjVlYjVkNTI2NjU4ZDc3MDg0MjMwMjEzODgxZmI", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2021-02-09T10:39:40Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2022-03-04T05:45:51Z"}, "message": "Add experimental VSCode api", "tree": {"sha": "637cc8f17e81ee04b62352ed728b494d394cada6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/637cc8f17e81ee04b62352ed728b494d394cada6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55371be807bf5eb5d526658d77084230213881fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55371be807bf5eb5d526658d77084230213881fb", "html_url": "https://github.com/rust-lang/rust/commit/55371be807bf5eb5d526658d77084230213881fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55371be807bf5eb5d526658d77084230213881fb/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d473a0b9f92c0739e4635fa8ef95a91ac2a481d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d473a0b9f92c0739e4635fa8ef95a91ac2a481d", "html_url": "https://github.com/rust-lang/rust/commit/9d473a0b9f92c0739e4635fa8ef95a91ac2a481d"}], "stats": {"total": 754, "additions": 136, "deletions": 618}, "files": [{"sha": "7e7f96da21e124c7d99287b474c7479e9415002a", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/55371be807bf5eb5d526658d77084230213881fb/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55371be807bf5eb5d526658d77084230213881fb/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=55371be807bf5eb5d526658d77084230213881fb", "patch": "@@ -244,16 +244,19 @@ pub struct InlayHintsParams {\n \n #[derive(Debug, PartialEq, Eq, Deserialize, Serialize)]\n pub enum InlayKind {\n-    TypeHint,\n-    ParameterHint,\n-    ChainingHint,\n+    Other,\n+    Type,\n+    Parameter,\n }\n \n #[derive(Debug, Deserialize, Serialize)]\n pub struct InlayHint {\n+    pub text: String,\n     pub range: Range,\n-    pub kind: InlayKind,\n-    pub label: String,\n+    pub kind: Option<InlayKind>,\n+    pub description: Option<String>,\n+    pub whitespace_before: Option<bool>,\n+    pub whitespace_after: Option<bool>,\n }\n \n pub enum Ssr {}"}, {"sha": "a5d7b3a86f7855e1788120d54f9dd93f9ae3cbbf", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/55371be807bf5eb5d526658d77084230213881fb/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55371be807bf5eb5d526658d77084230213881fb/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=55371be807bf5eb5d526658d77084230213881fb", "patch": "@@ -412,13 +412,16 @@ pub(crate) fn signature_help(\n \n pub(crate) fn inlay_hint(line_index: &LineIndex, inlay_hint: InlayHint) -> lsp_ext::InlayHint {\n     lsp_ext::InlayHint {\n-        label: inlay_hint.label.to_string(),\n+        text: inlay_hint.label.to_string(),\n         range: range(line_index, inlay_hint.range),\n-        kind: match inlay_hint.kind {\n-            InlayKind::ParameterHint => lsp_ext::InlayKind::ParameterHint,\n-            InlayKind::TypeHint => lsp_ext::InlayKind::TypeHint,\n-            InlayKind::ChainingHint => lsp_ext::InlayKind::ChainingHint,\n-        },\n+        kind: Some(match inlay_hint.kind {\n+            InlayKind::ParameterHint => lsp_ext::InlayKind::Parameter,\n+            InlayKind::TypeHint => lsp_ext::InlayKind::Type,\n+            InlayKind::ChainingHint => lsp_ext::InlayKind::Other,\n+        }),\n+        description: Some(\"test description\".to_string()),\n+        whitespace_before: Some(true),\n+        whitespace_after: Some(true),\n     }\n }\n "}, {"sha": "2c975a947eb35e25a9c10c66d45fe9f812c54a02", "filename": "editors/code/.gitignore", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55371be807bf5eb5d526658d77084230213881fb/editors%2Fcode%2F.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/55371be807bf5eb5d526658d77084230213881fb/editors%2Fcode%2F.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2F.gitignore?ref=55371be807bf5eb5d526658d77084230213881fb", "patch": "@@ -3,3 +3,5 @@ node_modules\n server\n .vscode-test/\n *.vsix\n+bundle\n+vscode.proposed.d.ts"}, {"sha": "313da64430efad8f1ee6186c52bfcb9a93282b7f", "filename": "editors/code/package-lock.json", "status": "modified", "additions": 77, "deletions": 341, "changes": 418, "blob_url": "https://github.com/rust-lang/rust/blob/55371be807bf5eb5d526658d77084230213881fb/editors%2Fcode%2Fpackage-lock.json", "raw_url": "https://github.com/rust-lang/rust/raw/55371be807bf5eb5d526658d77084230213881fb/editors%2Fcode%2Fpackage-lock.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage-lock.json?ref=55371be807bf5eb5d526658d77084230213881fb", "patch": "@@ -24,7 +24,8 @@\n                 \"tslib\": \"^2.3.0\",\n                 \"typescript\": \"^4.5.5\",\n                 \"typescript-formatter\": \"^7.2.2\",\n-                \"vsce\": \"^2.6.3\"\n+                \"vsce\": \"^2.6.7\",\n+                \"vscode-dts\": \"^0.3.1\"\n             },\n             \"engines\": {\n                 \"vscode\": \"^1.63.0\"\n@@ -1543,84 +1544,6 @@\n                 \"esbuild-windows-arm64\": \"0.14.12\"\n             }\n         },\n-        \"node_modules/esbuild-android-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-android-arm64/-/esbuild-android-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-eO4JHwnTeJq1/xC9K0FdHNEYztwT0HaWHnOzR5kXKwJxHatxDNZ+lCHOSxMzh9uVSmnA8YwdSiXPWbwTlWZVrw==\",\n-            \"cpu\": [\n-                \"arm64\"\n-            ],\n-            \"dev\": true,\n-            \"optional\": true,\n-            \"os\": [\n-                \"android\"\n-            ]\n-        },\n-        \"node_modules/esbuild-darwin-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-64/-/esbuild-darwin-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-LyZ81assnJWhq2IxKEVipwddKlXLTubbz/IObyKOm5cWS9jQCpuwQey2PpzroWSiy7QLGV8XCGWY5b8U8fsmWA==\",\n-            \"cpu\": [\n-                \"x64\"\n-            ],\n-            \"dev\": true,\n-            \"optional\": true,\n-            \"os\": [\n-                \"darwin\"\n-            ]\n-        },\n-        \"node_modules/esbuild-darwin-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-arm64/-/esbuild-darwin-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-jj27iSbDS4KlftN1PHHNiTrtXPQIk11J/qpQiQLwKJpeEMNeJUBfQlS7X7dXgFFMxV0rNtcRl8AimEFl+qEMRQ==\",\n-            \"cpu\": [\n-                \"arm64\"\n-            ],\n-            \"dev\": true,\n-            \"optional\": true,\n-            \"os\": [\n-                \"darwin\"\n-            ]\n-        },\n-        \"node_modules/esbuild-freebsd-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-64/-/esbuild-freebsd-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-RnTty09bA8Ts/eWnrJsYiE2dFM6ZseKYQ/7QCM5QYphU6GbifooO9oGjc/UE3Sg8R58yZVO15vnIV0i+kTgDOw==\",\n-            \"cpu\": [\n-                \"x64\"\n-            ],\n-            \"dev\": true,\n-            \"optional\": true,\n-            \"os\": [\n-                \"freebsd\"\n-            ]\n-        },\n-        \"node_modules/esbuild-freebsd-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-arm64/-/esbuild-freebsd-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-AvAQoEgsHE53hucgoVWdHnXJBl0r9W/7eUCaBvpcgYu3W/EbPZ26VnZwfSXLpk0Pf3t7o6SRwrU+KDTKPscDTw==\",\n-            \"cpu\": [\n-                \"arm64\"\n-            ],\n-            \"dev\": true,\n-            \"optional\": true,\n-            \"os\": [\n-                \"freebsd\"\n-            ]\n-        },\n-        \"node_modules/esbuild-linux-32\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-32/-/esbuild-linux-32-0.14.12.tgz\",\n-            \"integrity\": \"sha512-na4I5i2c9ACPuglfYmrnJ6qGQnFJb59dFjyFk5OHTCtoKCq3lXbGHrvYa+3sYlOrRax1kYuRDRGse7YsDLbr3Q==\",\n-            \"cpu\": [\n-                \"ia32\"\n-            ],\n-            \"dev\": true,\n-            \"optional\": true,\n-            \"os\": [\n-                \"linux\"\n-            ]\n-        },\n         \"node_modules/esbuild-linux-64\": {\n             \"version\": \"0.14.12\",\n             \"resolved\": \"https://registry.npmjs.org/esbuild-linux-64/-/esbuild-linux-64-0.14.12.tgz\",\n@@ -1634,149 +1557,6 @@\n                 \"linux\"\n             ]\n         },\n-        \"node_modules/esbuild-linux-arm\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm/-/esbuild-linux-arm-0.14.12.tgz\",\n-            \"integrity\": \"sha512-tD4q/zVUeYkThGehYAJQElo80+ysxvq5vpd2QvykDp4hvIidEUJu2hf+NzG5OuMJSQJmAeAWPrkFOXN+6di9cA==\",\n-            \"cpu\": [\n-                \"arm\"\n-            ],\n-            \"dev\": true,\n-            \"optional\": true,\n-            \"os\": [\n-                \"linux\"\n-            ]\n-        },\n-        \"node_modules/esbuild-linux-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm64/-/esbuild-linux-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-i1/ikCl9gG9yx6QuI+8yJMk9XHUu8ekIQOo6cex2pDqXY5KVHSXDTAT4FDWOd5YXQ1QTjneBAQHcKGft4pd6PQ==\",\n-            \"cpu\": [\n-                \"arm64\"\n-            ],\n-            \"dev\": true,\n-            \"optional\": true,\n-            \"os\": [\n-                \"linux\"\n-            ]\n-        },\n-        \"node_modules/esbuild-linux-mips64le\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-mips64le/-/esbuild-linux-mips64le-0.14.12.tgz\",\n-            \"integrity\": \"sha512-+/a6/tiKUCENep8ryUR75Jba4znG51Sb75OzKT6phZFEkB7fao4+GZD39Zxx3EaaA5OC10MsJPjJMFrn0dMusg==\",\n-            \"cpu\": [\n-                \"mips64el\"\n-            ],\n-            \"dev\": true,\n-            \"optional\": true,\n-            \"os\": [\n-                \"linux\"\n-            ]\n-        },\n-        \"node_modules/esbuild-linux-ppc64le\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-ppc64le/-/esbuild-linux-ppc64le-0.14.12.tgz\",\n-            \"integrity\": \"sha512-SD7e2VLza/cEU2qKuD18Ibt1V0h3TUuerC1Mp3jRJ4RRGXWAyUt4gUpqKSiB7R0rHe6LWECdLbeVFAuGEntCeA==\",\n-            \"cpu\": [\n-                \"ppc64\"\n-            ],\n-            \"dev\": true,\n-            \"optional\": true,\n-            \"os\": [\n-                \"linux\"\n-            ]\n-        },\n-        \"node_modules/esbuild-linux-s390x\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-s390x/-/esbuild-linux-s390x-0.14.12.tgz\",\n-            \"integrity\": \"sha512-KZmjYgAvYUpPBG0v6xv8qCngbfcRKC2AdYx3H3j3VqJfICgjt5XYsyG7ntWdc8Rdw9jZxr9sni6othy2Rp/T+A==\",\n-            \"cpu\": [\n-                \"s390x\"\n-            ],\n-            \"dev\": true,\n-            \"optional\": true,\n-            \"os\": [\n-                \"linux\"\n-            ]\n-        },\n-        \"node_modules/esbuild-netbsd-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-netbsd-64/-/esbuild-netbsd-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-dG+hbCIJC65fHqzkTEYbrPSYG3m8pEaI9A1VDtqHfV13Oiw9/tua1odd47iwoWvTyurErb49wanHsIAKb8/2oQ==\",\n-            \"cpu\": [\n-                \"x64\"\n-            ],\n-            \"dev\": true,\n-            \"optional\": true,\n-            \"os\": [\n-                \"netbsd\"\n-            ]\n-        },\n-        \"node_modules/esbuild-openbsd-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-openbsd-64/-/esbuild-openbsd-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-W3SwxnMjJR3HtBD0aij5WPd0ow2bRB5BsW6FjhN7FgwDBQ+jgniFs1dq54HOkjQ2qBJrt8JvPDFAxacWjdD6Jw==\",\n-            \"cpu\": [\n-                \"x64\"\n-            ],\n-            \"dev\": true,\n-            \"optional\": true,\n-            \"os\": [\n-                \"openbsd\"\n-            ]\n-        },\n-        \"node_modules/esbuild-sunos-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-sunos-64/-/esbuild-sunos-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-jU/IcTFwvUtt21wOmqKJrevyHQ5XRfiCdFbPie4wsYr8VFcPZZsz18A9lcoI8gZdrF/8pBdD0V+L2UuUY0KsGg==\",\n-            \"cpu\": [\n-                \"x64\"\n-            ],\n-            \"dev\": true,\n-            \"optional\": true,\n-            \"os\": [\n-                \"sunos\"\n-            ]\n-        },\n-        \"node_modules/esbuild-windows-32\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-32/-/esbuild-windows-32-0.14.12.tgz\",\n-            \"integrity\": \"sha512-6luae9cmTB0rSPMCQFWMgf0SLNZ9hxusoS0poVEUHJf3n8bW6wgdyLE2xfYcEcXPMsjAt2e71/etkpqlFxeuYg==\",\n-            \"cpu\": [\n-                \"ia32\"\n-            ],\n-            \"dev\": true,\n-            \"optional\": true,\n-            \"os\": [\n-                \"win32\"\n-            ]\n-        },\n-        \"node_modules/esbuild-windows-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-64/-/esbuild-windows-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-CdCXvME/7s0uMt+4rYd8d5roHJJ5k2VDOzWaOMWExjroet+nSSZngfLpxI5St+28lXLeBorUxeBS+p1qcfEDfw==\",\n-            \"cpu\": [\n-                \"x64\"\n-            ],\n-            \"dev\": true,\n-            \"optional\": true,\n-            \"os\": [\n-                \"win32\"\n-            ]\n-        },\n-        \"node_modules/esbuild-windows-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-arm64/-/esbuild-windows-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-vNuLQh/MpYDepK0GNpEWHy0Kn7Jf3Shz/Xetf8hUIc31jgCR1qbLVLDf3ckQdanD2U430YZupOGtEZKRwno79w==\",\n-            \"cpu\": [\n-                \"arm64\"\n-            ],\n-            \"dev\": true,\n-            \"optional\": true,\n-            \"os\": [\n-                \"win32\"\n-            ]\n-        },\n         \"node_modules/escape-string-regexp\": {\n             \"version\": \"4.0.0\",\n             \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n@@ -2564,6 +2344,15 @@\n                 \"prebuild-install\": \"^6.0.0\"\n             }\n         },\n+        \"node_modules/kleur\": {\n+            \"version\": \"3.0.3\",\n+            \"resolved\": \"https://registry.npmjs.org/kleur/-/kleur-3.0.3.tgz\",\n+            \"integrity\": \"sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==\",\n+            \"dev\": true,\n+            \"engines\": {\n+                \"node\": \">=6\"\n+            }\n+        },\n         \"node_modules/leven\": {\n             \"version\": \"3.1.0\",\n             \"resolved\": \"https://registry.npmjs.org/leven/-/leven-3.1.0.tgz\",\n@@ -2987,6 +2776,19 @@\n             \"integrity\": \"sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==\",\n             \"dev\": true\n         },\n+        \"node_modules/prompts\": {\n+            \"version\": \"2.4.2\",\n+            \"resolved\": \"https://registry.npmjs.org/prompts/-/prompts-2.4.2.tgz\",\n+            \"integrity\": \"sha512-NxNv/kLguCA7p3jE8oL2aEBsrJWgAakBpgmgK6lpPWV+WuOmY6r2/zbAVnP+T8bQlA0nzHXSJSJW0Hq7ylaD2Q==\",\n+            \"dev\": true,\n+            \"dependencies\": {\n+                \"kleur\": \"^3.0.3\",\n+                \"sisteransi\": \"^1.0.5\"\n+            },\n+            \"engines\": {\n+                \"node\": \">= 6\"\n+            }\n+        },\n         \"node_modules/pseudomap\": {\n             \"version\": \"1.0.2\",\n             \"resolved\": \"https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz\",\n@@ -3298,6 +3100,12 @@\n                 \"simple-concat\": \"^1.0.0\"\n             }\n         },\n+        \"node_modules/sisteransi\": {\n+            \"version\": \"1.0.5\",\n+            \"resolved\": \"https://registry.npmjs.org/sisteransi/-/sisteransi-1.0.5.tgz\",\n+            \"integrity\": \"sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg==\",\n+            \"dev\": true\n+        },\n         \"node_modules/slash\": {\n             \"version\": \"3.0.0\",\n             \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n@@ -3763,6 +3571,20 @@\n                 \"node\": \">=4\"\n             }\n         },\n+        \"node_modules/vscode-dts\": {\n+            \"version\": \"0.3.3\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-dts/-/vscode-dts-0.3.3.tgz\",\n+            \"integrity\": \"sha512-JfOsWL0NvfVw0UF9bcTjlv1Onz3Ted7cgpPWKWMnHGB+72t/tn8WFDeKLZO42l2k9KJq/NGS9rFC5gZbyI4FTg==\",\n+            \"dev\": true,\n+            \"dependencies\": {\n+                \"minimist\": \"^1.2.0\",\n+                \"prompts\": \"^2.1.0\",\n+                \"rimraf\": \"^3.0.0\"\n+            },\n+            \"bin\": {\n+                \"vscode-dts\": \"index.js\"\n+            }\n+        },\n         \"node_modules/vscode-jsonrpc\": {\n             \"version\": \"8.0.0-next.5\",\n             \"resolved\": \"https://registry.npmjs.org/vscode-jsonrpc/-/vscode-jsonrpc-8.0.0-next.5.tgz\",\n@@ -5002,132 +4824,13 @@\n                 \"esbuild-windows-arm64\": \"0.14.12\"\n             }\n         },\n-        \"esbuild-android-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-android-arm64/-/esbuild-android-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-eO4JHwnTeJq1/xC9K0FdHNEYztwT0HaWHnOzR5kXKwJxHatxDNZ+lCHOSxMzh9uVSmnA8YwdSiXPWbwTlWZVrw==\",\n-            \"dev\": true,\n-            \"optional\": true\n-        },\n-        \"esbuild-darwin-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-64/-/esbuild-darwin-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-LyZ81assnJWhq2IxKEVipwddKlXLTubbz/IObyKOm5cWS9jQCpuwQey2PpzroWSiy7QLGV8XCGWY5b8U8fsmWA==\",\n-            \"dev\": true,\n-            \"optional\": true\n-        },\n-        \"esbuild-darwin-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-arm64/-/esbuild-darwin-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-jj27iSbDS4KlftN1PHHNiTrtXPQIk11J/qpQiQLwKJpeEMNeJUBfQlS7X7dXgFFMxV0rNtcRl8AimEFl+qEMRQ==\",\n-            \"dev\": true,\n-            \"optional\": true\n-        },\n-        \"esbuild-freebsd-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-64/-/esbuild-freebsd-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-RnTty09bA8Ts/eWnrJsYiE2dFM6ZseKYQ/7QCM5QYphU6GbifooO9oGjc/UE3Sg8R58yZVO15vnIV0i+kTgDOw==\",\n-            \"dev\": true,\n-            \"optional\": true\n-        },\n-        \"esbuild-freebsd-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-arm64/-/esbuild-freebsd-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-AvAQoEgsHE53hucgoVWdHnXJBl0r9W/7eUCaBvpcgYu3W/EbPZ26VnZwfSXLpk0Pf3t7o6SRwrU+KDTKPscDTw==\",\n-            \"dev\": true,\n-            \"optional\": true\n-        },\n-        \"esbuild-linux-32\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-32/-/esbuild-linux-32-0.14.12.tgz\",\n-            \"integrity\": \"sha512-na4I5i2c9ACPuglfYmrnJ6qGQnFJb59dFjyFk5OHTCtoKCq3lXbGHrvYa+3sYlOrRax1kYuRDRGse7YsDLbr3Q==\",\n-            \"dev\": true,\n-            \"optional\": true\n-        },\n         \"esbuild-linux-64\": {\n             \"version\": \"0.14.12\",\n             \"resolved\": \"https://registry.npmjs.org/esbuild-linux-64/-/esbuild-linux-64-0.14.12.tgz\",\n             \"integrity\": \"sha512-ObPoYGakJLx/RldQsFQiwsQ7N9YbQ4LLazHtpKx34bjqFjhqO5JiHPVAJYCmAtci3cJMsZ5DtEFXvijytTBz1g==\",\n             \"dev\": true,\n             \"optional\": true\n         },\n-        \"esbuild-linux-arm\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm/-/esbuild-linux-arm-0.14.12.tgz\",\n-            \"integrity\": \"sha512-tD4q/zVUeYkThGehYAJQElo80+ysxvq5vpd2QvykDp4hvIidEUJu2hf+NzG5OuMJSQJmAeAWPrkFOXN+6di9cA==\",\n-            \"dev\": true,\n-            \"optional\": true\n-        },\n-        \"esbuild-linux-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm64/-/esbuild-linux-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-i1/ikCl9gG9yx6QuI+8yJMk9XHUu8ekIQOo6cex2pDqXY5KVHSXDTAT4FDWOd5YXQ1QTjneBAQHcKGft4pd6PQ==\",\n-            \"dev\": true,\n-            \"optional\": true\n-        },\n-        \"esbuild-linux-mips64le\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-mips64le/-/esbuild-linux-mips64le-0.14.12.tgz\",\n-            \"integrity\": \"sha512-+/a6/tiKUCENep8ryUR75Jba4znG51Sb75OzKT6phZFEkB7fao4+GZD39Zxx3EaaA5OC10MsJPjJMFrn0dMusg==\",\n-            \"dev\": true,\n-            \"optional\": true\n-        },\n-        \"esbuild-linux-ppc64le\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-ppc64le/-/esbuild-linux-ppc64le-0.14.12.tgz\",\n-            \"integrity\": \"sha512-SD7e2VLza/cEU2qKuD18Ibt1V0h3TUuerC1Mp3jRJ4RRGXWAyUt4gUpqKSiB7R0rHe6LWECdLbeVFAuGEntCeA==\",\n-            \"dev\": true,\n-            \"optional\": true\n-        },\n-        \"esbuild-linux-s390x\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-linux-s390x/-/esbuild-linux-s390x-0.14.12.tgz\",\n-            \"integrity\": \"sha512-KZmjYgAvYUpPBG0v6xv8qCngbfcRKC2AdYx3H3j3VqJfICgjt5XYsyG7ntWdc8Rdw9jZxr9sni6othy2Rp/T+A==\",\n-            \"dev\": true,\n-            \"optional\": true\n-        },\n-        \"esbuild-netbsd-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-netbsd-64/-/esbuild-netbsd-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-dG+hbCIJC65fHqzkTEYbrPSYG3m8pEaI9A1VDtqHfV13Oiw9/tua1odd47iwoWvTyurErb49wanHsIAKb8/2oQ==\",\n-            \"dev\": true,\n-            \"optional\": true\n-        },\n-        \"esbuild-openbsd-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-openbsd-64/-/esbuild-openbsd-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-W3SwxnMjJR3HtBD0aij5WPd0ow2bRB5BsW6FjhN7FgwDBQ+jgniFs1dq54HOkjQ2qBJrt8JvPDFAxacWjdD6Jw==\",\n-            \"dev\": true,\n-            \"optional\": true\n-        },\n-        \"esbuild-sunos-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-sunos-64/-/esbuild-sunos-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-jU/IcTFwvUtt21wOmqKJrevyHQ5XRfiCdFbPie4wsYr8VFcPZZsz18A9lcoI8gZdrF/8pBdD0V+L2UuUY0KsGg==\",\n-            \"dev\": true,\n-            \"optional\": true\n-        },\n-        \"esbuild-windows-32\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-32/-/esbuild-windows-32-0.14.12.tgz\",\n-            \"integrity\": \"sha512-6luae9cmTB0rSPMCQFWMgf0SLNZ9hxusoS0poVEUHJf3n8bW6wgdyLE2xfYcEcXPMsjAt2e71/etkpqlFxeuYg==\",\n-            \"dev\": true,\n-            \"optional\": true\n-        },\n-        \"esbuild-windows-64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-64/-/esbuild-windows-64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-CdCXvME/7s0uMt+4rYd8d5roHJJ5k2VDOzWaOMWExjroet+nSSZngfLpxI5St+28lXLeBorUxeBS+p1qcfEDfw==\",\n-            \"dev\": true,\n-            \"optional\": true\n-        },\n-        \"esbuild-windows-arm64\": {\n-            \"version\": \"0.14.12\",\n-            \"resolved\": \"https://registry.npmjs.org/esbuild-windows-arm64/-/esbuild-windows-arm64-0.14.12.tgz\",\n-            \"integrity\": \"sha512-vNuLQh/MpYDepK0GNpEWHy0Kn7Jf3Shz/Xetf8hUIc31jgCR1qbLVLDf3ckQdanD2U430YZupOGtEZKRwno79w==\",\n-            \"dev\": true,\n-            \"optional\": true\n-        },\n         \"escape-string-regexp\": {\n             \"version\": \"4.0.0\",\n             \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n@@ -5739,6 +5442,12 @@\n                 \"prebuild-install\": \"^6.0.0\"\n             }\n         },\n+        \"kleur\": {\n+            \"version\": \"3.0.3\",\n+            \"resolved\": \"https://registry.npmjs.org/kleur/-/kleur-3.0.3.tgz\",\n+            \"integrity\": \"sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==\",\n+            \"dev\": true\n+        },\n         \"leven\": {\n             \"version\": \"3.1.0\",\n             \"resolved\": \"https://registry.npmjs.org/leven/-/leven-3.1.0.tgz\",\n@@ -6081,6 +5790,16 @@\n             \"integrity\": \"sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==\",\n             \"dev\": true\n         },\n+        \"prompts\": {\n+            \"version\": \"2.4.2\",\n+            \"resolved\": \"https://registry.npmjs.org/prompts/-/prompts-2.4.2.tgz\",\n+            \"integrity\": \"sha512-NxNv/kLguCA7p3jE8oL2aEBsrJWgAakBpgmgK6lpPWV+WuOmY6r2/zbAVnP+T8bQlA0nzHXSJSJW0Hq7ylaD2Q==\",\n+            \"dev\": true,\n+            \"requires\": {\n+                \"kleur\": \"^3.0.3\",\n+                \"sisteransi\": \"^1.0.5\"\n+            }\n+        },\n         \"pseudomap\": {\n             \"version\": \"1.0.2\",\n             \"resolved\": \"https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz\",\n@@ -6300,6 +6019,12 @@\n                 \"simple-concat\": \"^1.0.0\"\n             }\n         },\n+        \"sisteransi\": {\n+            \"version\": \"1.0.5\",\n+            \"resolved\": \"https://registry.npmjs.org/sisteransi/-/sisteransi-1.0.5.tgz\",\n+            \"integrity\": \"sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg==\",\n+            \"dev\": true\n+        },\n         \"slash\": {\n             \"version\": \"3.0.0\",\n             \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n@@ -6670,6 +6395,17 @@\n                 }\n             }\n         },\n+        \"vscode-dts\": {\n+            \"version\": \"0.3.3\",\n+            \"resolved\": \"https://registry.npmjs.org/vscode-dts/-/vscode-dts-0.3.3.tgz\",\n+            \"integrity\": \"sha512-JfOsWL0NvfVw0UF9bcTjlv1Onz3Ted7cgpPWKWMnHGB+72t/tn8WFDeKLZO42l2k9KJq/NGS9rFC5gZbyI4FTg==\",\n+            \"dev\": true,\n+            \"requires\": {\n+                \"minimist\": \"^1.2.0\",\n+                \"prompts\": \"^2.1.0\",\n+                \"rimraf\": \"^3.0.0\"\n+            }\n+        },\n         \"vscode-jsonrpc\": {\n             \"version\": \"8.0.0-next.5\",\n             \"resolved\": \"https://registry.npmjs.org/vscode-jsonrpc/-/vscode-jsonrpc-8.0.0-next.5.tgz\","}, {"sha": "3ddae8109efe4aa193152fc39e08173b38b1ee66", "filename": "editors/code/package.json", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55371be807bf5eb5d526658d77084230213881fb/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/55371be807bf5eb5d526658d77084230213881fb/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=55371be807bf5eb5d526658d77084230213881fb", "patch": "@@ -51,7 +51,8 @@\n         \"tslib\": \"^2.3.0\",\n         \"typescript\": \"^4.5.5\",\n         \"typescript-formatter\": \"^7.2.2\",\n-        \"vsce\": \"^2.6.7\"\n+        \"vsce\": \"^2.6.7\",\n+        \"vscode-dts\": \"^0.3.1\"\n     },\n     \"activationEvents\": [\n         \"onLanguage:rust\","}, {"sha": "4e5d7bf8e8b513de33e2f3c26e8bfd8b44bb512f", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55371be807bf5eb5d526658d77084230213881fb/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/55371be807bf5eb5d526658d77084230213881fb/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=55371be807bf5eb5d526658d77084230213881fb", "patch": "@@ -77,8 +77,7 @@ export function createClient(serverPath: string, workspace: Workspace, extraEnv:\n                         client.handleFailedRequest(\n                             lc.HoverRequest.type,\n                             token,\n-                            error,\n-                            null\n+                            error\n                         );\n                         return Promise.resolve(null);\n                     }"}, {"sha": "af45d7032de937920d1ad0416026b8192fa9336c", "filename": "editors/code/src/inlay_hints.ts", "status": "modified", "additions": 33, "deletions": 246, "changes": 279, "blob_url": "https://github.com/rust-lang/rust/blob/55371be807bf5eb5d526658d77084230213881fb/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/55371be807bf5eb5d526658d77084230213881fb/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finlay_hints.ts?ref=55371be807bf5eb5d526658d77084230213881fb", "patch": "@@ -1,267 +1,54 @@\n-import * as lc from \"vscode-languageclient\";\n import * as vscode from 'vscode';\n import * as ra from './lsp_ext';\n \n import { Ctx, Disposable } from './ctx';\n-import { sendRequestWithRetry, isRustDocument, RustDocument, RustEditor, sleep } from './util';\n-\n-interface InlayHintStyle {\n-    decorationType: vscode.TextEditorDecorationType;\n-    toDecoration(hint: ra.InlayHint, conv: lc.Protocol2CodeConverter): vscode.DecorationOptions;\n-};\n-\n-interface InlayHintsStyles {\n-    typeHints: InlayHintStyle;\n-    paramHints: InlayHintStyle;\n-    chainingHints: InlayHintStyle;\n-}\n-\n+import { sendRequestWithRetry, isRustDocument } from './util';\n \n export function activateInlayHints(ctx: Ctx) {\n     const maybeUpdater = {\n-        updater: null as null | HintsUpdater,\n+        hintsProvider: null as Disposable | null,\n+        updateHintsEventEmitter: new vscode.EventEmitter<void>(),\n+\n         async onConfigChange() {\n+            this.dispose();\n+\n             const anyEnabled = ctx.config.inlayHints.typeHints\n                 || ctx.config.inlayHints.parameterHints\n                 || ctx.config.inlayHints.chainingHints;\n             const enabled = ctx.config.inlayHints.enable && anyEnabled;\n+            if (!enabled) return;\n+\n+            const event = this.updateHintsEventEmitter.event;\n+            this.hintsProvider = vscode.languages.registerInlayHintsProvider({ scheme: 'file', language: 'rust' }, new class implements vscode.InlayHintsProvider {\n+                onDidChangeInlayHints = event;\n+                async provideInlayHints(document: vscode.TextDocument, range: vscode.Range, token: vscode.CancellationToken): Promise<vscode.InlayHint[]> {\n+                    const request = { textDocument: { uri: document.uri.toString() }, range: { start: range.start, end: range.end } };\n+                    const hints = await sendRequestWithRetry(ctx.client, ra.inlayHints, request, token).catch(_ => null)\n+                    if (hints == null) {\n+                        return [];\n+                    } else {\n+                        return hints;\n+                    }\n+                }\n+            });\n+        },\n \n-            if (!enabled) return this.dispose();\n-\n-            await sleep(100);\n-            if (this.updater) {\n-                this.updater.updateInlayHintsStyles();\n-                this.updater.syncCacheAndRenderHints();\n-            } else {\n-                this.updater = new HintsUpdater(ctx);\n-            }\n+        onDidChangeTextDocument({ contentChanges, document }: vscode.TextDocumentChangeEvent) {\n+            if (contentChanges.length === 0 || !isRustDocument(document)) return;\n+            this.updateHintsEventEmitter.fire();\n         },\n+\n         dispose() {\n-            this.updater?.dispose();\n-            this.updater = null;\n-        }\n-    };\n+            this.hintsProvider?.dispose();\n+            this.hintsProvider = null;\n+            this.updateHintsEventEmitter.dispose();\n+        },\n+    }\n \n     ctx.pushCleanup(maybeUpdater);\n \n-    vscode.workspace.onDidChangeConfiguration(\n-        maybeUpdater.onConfigChange, maybeUpdater, ctx.subscriptions\n-    );\n+    vscode.workspace.onDidChangeConfiguration(maybeUpdater.onConfigChange, maybeUpdater, ctx.subscriptions);\n+    vscode.workspace.onDidChangeTextDocument(maybeUpdater.onDidChangeTextDocument, maybeUpdater, ctx.subscriptions);\n \n     maybeUpdater.onConfigChange().catch(console.error);\n }\n-\n-function createHintStyle(hintKind: \"type\" | \"parameter\" | \"chaining\", smallerHints: boolean): InlayHintStyle {\n-    // U+200C is a zero-width non-joiner to prevent the editor from forming a ligature\n-    // between code and type hints\n-    const [pos, render] = ({\n-        type: [\"after\", (label: string) => `\\u{200c}: ${label}`],\n-        parameter: [\"before\", (label: string) => `${label}: `],\n-        chaining: [\"after\", (label: string) => `\\u{200c}: ${label}`],\n-    } as const)[hintKind];\n-\n-    const fg = new vscode.ThemeColor(`rust_analyzer.inlayHints.foreground.${hintKind}Hints`);\n-    const bg = new vscode.ThemeColor(`rust_analyzer.inlayHints.background.${hintKind}Hints`);\n-    return {\n-        decorationType: vscode.window.createTextEditorDecorationType({\n-            [pos]: {\n-                color: fg,\n-                backgroundColor: bg,\n-                fontStyle: \"normal\",\n-                fontWeight: \"normal\",\n-                textDecoration: smallerHints ? \";font-size:smaller\" : \"none\",\n-            },\n-        }),\n-        toDecoration(hint: ra.InlayHint, conv: lc.Protocol2CodeConverter): vscode.DecorationOptions {\n-            return {\n-                range: conv.asRange(hint.range),\n-                renderOptions: { [pos]: { contentText: render(hint.label) } }\n-            };\n-        }\n-    };\n-}\n-\n-const smallHintsStyles = {\n-    typeHints: createHintStyle(\"type\", true),\n-    paramHints: createHintStyle(\"parameter\", true),\n-    chainingHints: createHintStyle(\"chaining\", true),\n-};\n-\n-const biggerHintsStyles = {\n-    typeHints: createHintStyle(\"type\", false),\n-    paramHints: createHintStyle(\"parameter\", false),\n-    chainingHints: createHintStyle(\"chaining\", false),\n-};\n-\n-class HintsUpdater implements Disposable {\n-    private sourceFiles = new Map<string, RustSourceFile>(); // map Uri -> RustSourceFile\n-    private readonly disposables: Disposable[] = [];\n-    private pendingDisposeDecorations: undefined | InlayHintsStyles = undefined;\n-    private inlayHintsStyles!: InlayHintsStyles;\n-\n-    constructor(private readonly ctx: Ctx) {\n-        vscode.window.onDidChangeVisibleTextEditors(\n-            this.onDidChangeVisibleTextEditors,\n-            this,\n-            this.disposables\n-        );\n-\n-        vscode.workspace.onDidChangeTextDocument(\n-            this.onDidChangeTextDocument,\n-            this,\n-            this.disposables\n-        );\n-\n-        // Set up initial cache shape\n-        ctx.visibleRustEditors.forEach(editor => this.sourceFiles.set(\n-            editor.document.uri.toString(),\n-            {\n-                document: editor.document,\n-                inlaysRequest: null,\n-                cachedDecorations: null\n-            }\n-        ));\n-\n-        this.updateInlayHintsStyles();\n-        this.syncCacheAndRenderHints();\n-    }\n-\n-    dispose() {\n-        this.sourceFiles.forEach(file => file.inlaysRequest?.cancel());\n-        this.ctx.visibleRustEditors.forEach(editor => this.renderDecorations(editor, { param: [], type: [], chaining: [] }));\n-        this.disposables.forEach(d => d.dispose());\n-    }\n-\n-    onDidChangeTextDocument({ contentChanges, document }: vscode.TextDocumentChangeEvent) {\n-        if (contentChanges.length === 0 || !isRustDocument(document)) return;\n-        this.syncCacheAndRenderHints();\n-    }\n-\n-    updateInlayHintsStyles() {\n-        const inlayHintsStyles = this.ctx.config.inlayHints.smallerHints ? smallHintsStyles : biggerHintsStyles;\n-\n-        if (inlayHintsStyles !== this.inlayHintsStyles) {\n-            this.pendingDisposeDecorations = this.inlayHintsStyles;\n-            this.inlayHintsStyles = inlayHintsStyles;\n-        }\n-    }\n-\n-    syncCacheAndRenderHints() {\n-        this.sourceFiles.forEach((file, uri) => this.fetchHints(file).then(hints => {\n-            if (!hints) return;\n-\n-            file.cachedDecorations = this.hintsToDecorations(hints);\n-\n-            for (const editor of this.ctx.visibleRustEditors) {\n-                if (editor.document.uri.toString() === uri) {\n-                    this.renderDecorations(editor, file.cachedDecorations);\n-                }\n-            }\n-        }));\n-    }\n-\n-    onDidChangeVisibleTextEditors() {\n-        const newSourceFiles = new Map<string, RustSourceFile>();\n-\n-        // Rerendering all, even up-to-date editors for simplicity\n-        this.ctx.visibleRustEditors.forEach(async editor => {\n-            const uri = editor.document.uri.toString();\n-            const file = this.sourceFiles.get(uri) ?? {\n-                document: editor.document,\n-                inlaysRequest: null,\n-                cachedDecorations: null\n-            };\n-            newSourceFiles.set(uri, file);\n-\n-            // No text documents changed, so we may try to use the cache\n-            if (!file.cachedDecorations) {\n-                const hints = await this.fetchHints(file);\n-                if (!hints) return;\n-\n-                file.cachedDecorations = this.hintsToDecorations(hints);\n-            }\n-\n-            this.renderDecorations(editor, file.cachedDecorations);\n-        });\n-\n-        // Cancel requests for no longer visible (disposed) source files\n-        this.sourceFiles.forEach((file, uri) => {\n-            if (!newSourceFiles.has(uri)) file.inlaysRequest?.cancel();\n-        });\n-\n-        this.sourceFiles = newSourceFiles;\n-    }\n-\n-    private renderDecorations(editor: RustEditor, decorations: InlaysDecorations) {\n-        const { typeHints, paramHints, chainingHints } = this.inlayHintsStyles;\n-        if (this.pendingDisposeDecorations !== undefined) {\n-            const { typeHints, paramHints, chainingHints } = this.pendingDisposeDecorations;\n-            editor.setDecorations(typeHints.decorationType, []);\n-            editor.setDecorations(paramHints.decorationType, []);\n-            editor.setDecorations(chainingHints.decorationType, []);\n-        }\n-        editor.setDecorations(typeHints.decorationType, decorations.type);\n-        editor.setDecorations(paramHints.decorationType, decorations.param);\n-        editor.setDecorations(chainingHints.decorationType, decorations.chaining);\n-    }\n-\n-    private hintsToDecorations(hints: ra.InlayHint[]): InlaysDecorations {\n-        const { typeHints, paramHints, chainingHints } = this.inlayHintsStyles;\n-        const decorations: InlaysDecorations = { type: [], param: [], chaining: [] };\n-        const conv = this.ctx.client.protocol2CodeConverter;\n-\n-        for (const hint of hints) {\n-            switch (hint.kind) {\n-                case ra.InlayHint.Kind.TypeHint: {\n-                    decorations.type.push(typeHints.toDecoration(hint, conv));\n-                    continue;\n-                }\n-                case ra.InlayHint.Kind.ParamHint: {\n-                    decorations.param.push(paramHints.toDecoration(hint, conv));\n-                    continue;\n-                }\n-                case ra.InlayHint.Kind.ChainingHint: {\n-                    decorations.chaining.push(chainingHints.toDecoration(hint, conv));\n-                    continue;\n-                }\n-            }\n-        }\n-        return decorations;\n-    }\n-\n-    private async fetchHints(file: RustSourceFile): Promise<null | ra.InlayHint[]> {\n-        file.inlaysRequest?.cancel();\n-\n-        const tokenSource = new vscode.CancellationTokenSource();\n-        file.inlaysRequest = tokenSource;\n-\n-        const request = { textDocument: { uri: file.document.uri.toString() } };\n-\n-        return sendRequestWithRetry(this.ctx.client, ra.inlayHints, request, tokenSource.token)\n-            .catch(_ => null)\n-            .finally(() => {\n-                if (file.inlaysRequest === tokenSource) {\n-                    file.inlaysRequest = null;\n-                }\n-            });\n-    }\n-}\n-\n-interface InlaysDecorations {\n-    type: vscode.DecorationOptions[];\n-    param: vscode.DecorationOptions[];\n-    chaining: vscode.DecorationOptions[];\n-}\n-\n-interface RustSourceFile {\n-    /**\n-     * Source of the token to cancel in-flight inlay hints request if any.\n-     */\n-    inlaysRequest: null | vscode.CancellationTokenSource;\n-    /**\n-     * Last applied decorations.\n-     */\n-    cachedDecorations: null | InlaysDecorations;\n-\n-    document: RustDocument;\n-}"}, {"sha": "03cd15200ba30e2c80cc03a7d9b575b102df6870", "filename": "editors/code/src/lsp_ext.ts", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/55371be807bf5eb5d526658d77084230213881fb/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "raw_url": "https://github.com/rust-lang/rust/raw/55371be807bf5eb5d526658d77084230213881fb/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Flsp_ext.ts?ref=55371be807bf5eb5d526658d77084230213881fb", "patch": "@@ -2,6 +2,7 @@\n  * This file mirrors `crates/rust-analyzer/src/lsp_ext.rs` declarations.\n  */\n \n+import { InlayHint } from \"vscode\";\n import * as lc from \"vscode-languageclient\";\n \n export interface AnalyzerStatusParams {\n@@ -99,24 +100,9 @@ export interface TestInfo {\n \n export const relatedTests = new lc.RequestType<lc.TextDocumentPositionParams, TestInfo[], void>(\"rust-analyzer/relatedTests\");\n \n-export type InlayHint = InlayHint.TypeHint | InlayHint.ParamHint | InlayHint.ChainingHint;\n-\n-export namespace InlayHint {\n-    export const enum Kind {\n-        TypeHint = \"TypeHint\",\n-        ParamHint = \"ParameterHint\",\n-        ChainingHint = \"ChainingHint\",\n-    }\n-    interface Common {\n-        range: lc.Range;\n-        label: string;\n-    }\n-    export type TypeHint = Common & { kind: Kind.TypeHint };\n-    export type ParamHint = Common & { kind: Kind.ParamHint };\n-    export type ChainingHint = Common & { kind: Kind.ChainingHint };\n-}\n export interface InlayHintsParams {\n     textDocument: lc.TextDocumentIdentifier;\n+    range: lc.Range,\n }\n export const inlayHints = new lc.RequestType<InlayHintsParams, InlayHint[], void>(\"rust-analyzer/inlayHints\");\n "}, {"sha": "46fd163dcb12e46e1bb2a8541004f7139bee3ee7", "filename": "editors/code/tsconfig.json", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55371be807bf5eb5d526658d77084230213881fb/editors%2Fcode%2Ftsconfig.json", "raw_url": "https://github.com/rust-lang/rust/raw/55371be807bf5eb5d526658d77084230213881fb/editors%2Fcode%2Ftsconfig.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Ftsconfig.json?ref=55371be807bf5eb5d526658d77084230213881fb", "patch": "@@ -22,6 +22,7 @@\n     ],\n     \"include\": [\n         \"src\",\n-        \"tests\"\n+        \"tests\",\n+        \"vscode.proposed.d.ts\"\n     ]\n }"}]}