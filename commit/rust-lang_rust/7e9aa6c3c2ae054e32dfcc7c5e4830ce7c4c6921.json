{"sha": "7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlOWFhNmMzYzJhZTA1NGUzMmRmY2M3YzVlNDgzMGNlN2M0YzY5MjE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-27T23:42:22Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-28T00:13:51Z"}, "message": "rt: Don't zero new stacks", "tree": {"sha": "3e25c31b0deaf0ad38edb6f7b15a7505f0bc57be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e25c31b0deaf0ad38edb6f7b15a7505f0bc57be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921", "html_url": "https://github.com/rust-lang/rust/commit/7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3f77bf92703543793a8073c8319e461e024cb69", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3f77bf92703543793a8073c8319e461e024cb69", "html_url": "https://github.com/rust-lang/rust/commit/b3f77bf92703543793a8073c8319e461e024cb69"}], "stats": {"total": 61, "additions": 28, "deletions": 33}, "files": [{"sha": "8e994ea71ec053a2a256f7fe2e733201d418fa33", "filename": "src/rt/rust_kernel.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921/src%2Frt%2Frust_kernel.h", "raw_url": "https://github.com/rust-lang/rust/raw/7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921/src%2Frt%2Frust_kernel.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.h?ref=7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921", "patch": "@@ -59,6 +59,7 @@ class rust_kernel {\n     void *malloc(size_t size, const char *tag);\n     void *realloc(void *mem, size_t size);\n     void free(void *mem);\n+    memory_region *region() { return &_region; }\n \n     void fail();\n "}, {"sha": "b5a83832f081a98422e05d7311e2547bd5807d4e", "filename": "src/rt/rust_stack.cpp", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921/src%2Frt%2Frust_stack.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921/src%2Frt%2Frust_stack.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_stack.cpp?ref=7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921", "patch": "@@ -41,3 +41,20 @@ void\n check_stack_canary(stk_seg *stk) {\n     assert(stk->canary == canary_value && \"Somebody killed the canary\");\n }\n+\n+stk_seg *\n+create_stack(memory_region *region, size_t sz) {\n+    size_t total_sz = sizeof(stk_seg) + sz;\n+    stk_seg *stk = (stk_seg *)region->malloc(total_sz, \"stack\", false);\n+    memset(stk, 0, sizeof(stk_seg));\n+    stk->end = (uintptr_t) &stk->data[sz];\n+    add_stack_canary(stk);\n+    register_valgrind_stack(stk);\n+    return stk;\n+}\n+\n+void\n+destroy_stack(memory_region *region, stk_seg *stk) {\n+    deregister_valgrind_stack(stk);\n+    region->free(stk);\n+}"}, {"sha": "09a468ae5c9adc1690a4dbd668163a917305344c", "filename": "src/rt/rust_stack.h", "status": "modified", "additions": 5, "deletions": 28, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921/src%2Frt%2Frust_stack.h", "raw_url": "https://github.com/rust-lang/rust/raw/7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921/src%2Frt%2Frust_stack.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_stack.h?ref=7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921", "patch": "@@ -1,6 +1,8 @@\n #ifndef RUST_STACK_H\n #define RUST_STACK_H\n \n+#include \"memory_region.h\"\n+\n struct stk_seg {\n     stk_seg *prev;\n     stk_seg *next;\n@@ -15,36 +17,11 @@ struct stk_seg {\n     uint8_t data[];\n };\n \n-// Used by create_stack\n-void\n-register_valgrind_stack(stk_seg *stk);\n-\n-// Used by destroy_stack\n-void\n-deregister_valgrind_stack(stk_seg *stk);\n-\n-// Used by create_stack\n-void\n-add_stack_canary(stk_seg *stk);\n-\n-template <class T>\n stk_seg *\n-create_stack(T allocer, size_t sz) {\n-  size_t total_sz = sizeof(stk_seg) + sz;\n-  stk_seg *stk = (stk_seg *)allocer->malloc(total_sz, \"stack\");\n-  memset(stk, 0, sizeof(stk_seg));\n-  stk->end = (uintptr_t) &stk->data[sz];\n-  add_stack_canary(stk);\n-  register_valgrind_stack(stk);\n-  return stk;\n-}\n-\n-template <class T>\n+create_stack(memory_region *region, size_t sz);\n+\n void\n-destroy_stack(T allocer, stk_seg *stk) {\n-  deregister_valgrind_stack(stk);\n-  allocer->free(stk);\n-}\n+destroy_stack(memory_region *region, stk_seg *stk);\n \n // Must be called before each time a stack is reused to tell valgrind\n // that the stack is accessible."}, {"sha": "c6d1ce4f10027185c511ae8365a7683cabc3b080", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921", "patch": "@@ -552,7 +552,7 @@ void\n rust_task::free_stack(stk_seg *stk) {\n     LOGPTR(thread, \"freeing stk segment\", (uintptr_t)stk);\n     total_stack_sz -= user_stack_size(stk);\n-    destroy_stack(this, stk);\n+    destroy_stack(&local_region, stk);\n }\n \n void\n@@ -596,7 +596,7 @@ rust_task::new_stack(size_t requested_sz) {\n     }\n \n     size_t sz = rust_stk_sz + RED_ZONE_SIZE;\n-    stk_seg *new_stk = create_stack(this, sz);\n+    stk_seg *new_stk = create_stack(&local_region, sz);\n     LOGPTR(thread, \"new stk\", (uintptr_t)new_stk);\n     new_stk->prev = NULL;\n     new_stk->next = stk;"}, {"sha": "d829ce053bcad39f54b5b1b7dea7192a42ab34e8", "filename": "src/rt/rust_task_thread.cpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921/src%2Frt%2Frust_task_thread.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921/src%2Frt%2Frust_task_thread.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task_thread.cpp?ref=7e9aa6c3c2ae054e32dfcc7c5e4830ce7c4c6921", "patch": "@@ -290,7 +290,7 @@ rust_task_thread::start_main_loop() {\n \n     I(this, !extra_c_stack);\n     if (cached_c_stack) {\n-        destroy_stack(kernel, cached_c_stack);\n+        destroy_stack(kernel->region(), cached_c_stack);\n         cached_c_stack = NULL;\n     }\n }\n@@ -369,15 +369,15 @@ void\n rust_task_thread::prepare_c_stack(rust_task *task) {\n     I(this, !extra_c_stack);\n     if (!cached_c_stack && !task->have_c_stack()) {\n-        cached_c_stack = create_stack(kernel, C_STACK_SIZE);\n+        cached_c_stack = create_stack(kernel->region(), C_STACK_SIZE);\n         prepare_valgrind_stack(cached_c_stack);\n     }\n }\n \n void\n rust_task_thread::unprepare_c_stack() {\n     if (extra_c_stack) {\n-        destroy_stack(kernel, extra_c_stack);\n+        destroy_stack(kernel->region(), extra_c_stack);\n         extra_c_stack = NULL;\n     }\n }"}]}