{"sha": "439f7521b87161908afaace97204d7a0b3438e19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzOWY3NTIxYjg3MTYxOTA4YWZhYWNlOTcyMDRkN2EwYjM0MzhlMTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-19T18:22:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-19T18:22:15Z"}, "message": "Auto merge of #45386 - kennytm:rollup, r=kennytm\n\nRollup of 8 pull requests\n\n- Successful merges: #45343, #45349, #45352, #45374, #45375, #45376, #45377, #45382\n- Failed merges:", "tree": {"sha": "01b3e31e94f47ce91e45c0e3933f6c5706ad6817", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01b3e31e94f47ce91e45c0e3933f6c5706ad6817"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/439f7521b87161908afaace97204d7a0b3438e19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/439f7521b87161908afaace97204d7a0b3438e19", "html_url": "https://github.com/rust-lang/rust/commit/439f7521b87161908afaace97204d7a0b3438e19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/439f7521b87161908afaace97204d7a0b3438e19/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b45c24b510e80a77c01881736ed0fad8770850e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b45c24b510e80a77c01881736ed0fad8770850e", "html_url": "https://github.com/rust-lang/rust/commit/8b45c24b510e80a77c01881736ed0fad8770850e"}, {"sha": "437186217ba37d52da9f657e78b56874a010cd98", "url": "https://api.github.com/repos/rust-lang/rust/commits/437186217ba37d52da9f657e78b56874a010cd98", "html_url": "https://github.com/rust-lang/rust/commit/437186217ba37d52da9f657e78b56874a010cd98"}], "stats": {"total": 175, "additions": 88, "deletions": 87}, "files": [{"sha": "9ff681ac680874b09b35122160f7807025d4b1cc", "filename": "src/bootstrap/README.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Fbootstrap%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Fbootstrap%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FREADME.md?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -129,14 +129,14 @@ configure your directory to use this build, like so:\n # configure to use local rust instead of downloading a beta.\n # `--local-rust-root` is optional here. If elided, we will\n # use whatever rustc we find on your PATH.\n-> configure --enable-rustbuild --local-rust-root=~/.cargo/ --enable-local-rebuild\n+> ./configure --local-rust-root=~/.cargo/ --enable-local-rebuild\n ```\n \n After that, you can use the `--incremental` flag to actually do\n incremental builds:\n \n ```\n-> ../x.py build --incremental\n+> ./x.py build --incremental\n ```\n \n The `--incremental` flag will store incremental compilation artifacts"}, {"sha": "0ab4c79e3b236df03426d27690c6f0edfa43c93a", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -532,7 +532,7 @@ def program_config(self, program):\n         \"\"\"\n         config = self.get_toml(program)\n         if config:\n-            return config\n+            return os.path.expanduser(config)\n         return os.path.join(self.bin_root(), \"bin\", \"{}{}\".format(\n             program, self.exe_suffix()))\n "}, {"sha": "38dca108012076683fd4760d441e6925965c645e", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -630,7 +630,7 @@ impl Step for Analysis {\n         let image = tmpdir(build).join(format!(\"{}-{}-image\", name, target));\n \n         let src = build.stage_out(compiler, Mode::Libstd)\n-            .join(target).join(\"release\").join(\"deps\");\n+            .join(target).join(build.cargo_dir()).join(\"deps\");\n \n         let image_src = src.join(\"save-analysis\");\n         let dst = image.join(\"lib/rustlib\").join(target).join(\"analysis\");"}, {"sha": "c0bf689e39db967ece1aa2aef81d95f6a177064a", "filename": "src/ci/docker/asmjs/Dockerfile", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Fci%2Fdocker%2Fasmjs%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Fci%2Fdocker%2Fasmjs%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fasmjs%2FDockerfile?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -16,6 +16,9 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n COPY scripts/emscripten.sh /scripts/\n RUN bash /scripts/emscripten.sh\n \n+COPY scripts/sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh\n+\n ENV PATH=$PATH:/emsdk-portable\n ENV PATH=$PATH:/emsdk-portable/clang/e1.37.13_64bit/\n ENV PATH=$PATH:/emsdk-portable/emscripten/1.37.13/\n@@ -28,7 +31,4 @@ ENV TARGETS=asmjs-unknown-emscripten\n \n ENV RUST_CONFIGURE_ARGS --target=$TARGETS\n \n-ENV SCRIPT python2.7 ../x.py test --target $TARGETS\n-\n-COPY scripts/sccache.sh /scripts/\n-RUN sh /scripts/sccache.sh\n+ENV SCRIPT python2.7 ../x.py test --target $TARGETS src/test/run-pass"}, {"sha": "71ab998aab20dd1f7f8fc1552525c10bbb6d9b77", "filename": "src/ci/docker/cross2/build-solaris-toolchain.sh", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Fci%2Fdocker%2Fcross2%2Fbuild-solaris-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Fci%2Fdocker%2Fcross2%2Fbuild-solaris-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fcross2%2Fbuild-solaris-toolchain.sh?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -38,37 +38,38 @@ cd solaris\n \n dpkg --add-architecture $APT_ARCH\n apt-get update\n-apt-get download           \\\n-  libc:$APT_ARCH           \\\n+apt-get download $(apt-cache depends --recurse --no-replaces \\\n   libc-dev:$APT_ARCH       \\\n-  libm:$APT_ARCH           \\\n   libm-dev:$APT_ARCH       \\\n-  libpthread:$APT_ARCH     \\\n   libpthread-dev:$APT_ARCH \\\n-  libresolv:$APT_ARCH      \\\n   libresolv-dev:$APT_ARCH  \\\n-  librt:$APT_ARCH          \\\n   librt-dev:$APT_ARCH      \\\n-  libsocket:$APT_ARCH      \\\n   libsocket-dev:$APT_ARCH  \\\n   system-crt:$APT_ARCH     \\\n-  system-header:$APT_ARCH\n+  system-header:$APT_ARCH  \\\n+  | grep \"^\\w\")\n \n for deb in *$APT_ARCH.deb; do\n   dpkg -x $deb .\n done\n \n-# Strip Solaris 11 functions that are optionally used by libbacktrace.\n+# Remove Solaris 11 functions that are optionally used by libbacktrace.\n # This is for Solaris 10 compatibility.\n-$ARCH-sun-solaris2.10-strip -N dl_iterate_phdr -N strnlen lib/$LIB_ARCH/libc.so\n+rm usr/include/link.h\n+patch -p0  << 'EOF'\n+--- usr/include/string.h\n++++ usr/include/string10.h\n+@@ -93 +92,0 @@\n+-extern size_t strnlen(const char *, size_t);\n+EOF\n \n mkdir                  /usr/local/$ARCH-sun-solaris2.10/usr\n mv usr/include         /usr/local/$ARCH-sun-solaris2.10/usr/include\n mv usr/lib/$LIB_ARCH/* /usr/local/$ARCH-sun-solaris2.10/lib\n mv     lib/$LIB_ARCH/* /usr/local/$ARCH-sun-solaris2.10/lib\n \n-ln -s /usr/local/$ARCH-sun-solaris2.10/usr/include /usr/local/$ARCH-sun-solaris2.10/sys-include\n-ln -s /usr/local/$ARCH-sun-solaris2.10/usr/include /usr/local/$ARCH-sun-solaris2.10/include\n+ln -s usr/include /usr/local/$ARCH-sun-solaris2.10/sys-include\n+ln -s usr/include /usr/local/$ARCH-sun-solaris2.10/include\n \n cd ..\n rm -rf solaris\n@@ -97,8 +98,7 @@ hide_output ../gcc-$GCC/configure \\\n   --disable-libada                \\\n   --disable-libsanitizer          \\\n   --disable-libquadmath-support   \\\n-  --disable-lto                   \\\n-  --with-sysroot=/usr/local/$ARCH-sun-solaris2.10\n+  --disable-lto\n \n hide_output make -j10\n hide_output make install"}, {"sha": "895607ff8d4f0cdd2f85d4f009f419da48ef4dbc", "filename": "src/liballoc/str.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Fliballoc%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Fliballoc%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstr.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -959,13 +959,15 @@ impl str {\n     /// assert_eq!(s.find(\"L\u00e9opard\"), Some(13));\n     /// ```\n     ///\n-    /// More complex patterns with closures:\n+    /// More complex patterns using point-free style and closures:\n     ///\n     /// ```\n     /// let s = \"L\u00f6we \u8001\u864e L\u00e9opard\";\n     ///\n     /// assert_eq!(s.find(char::is_whitespace), Some(5));\n     /// assert_eq!(s.find(char::is_lowercase), Some(1));\n+    /// assert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\n+    /// assert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n     /// ```\n     ///\n     /// Not finding the pattern:"}, {"sha": "ddf71a06d607c7f7016546b0cc6fdb7da8ee3bef", "filename": "src/librustc/README.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Flibrustc%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Flibrustc%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FREADME.md?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -98,7 +98,7 @@ entire program, and each did a particular check of transformation.\n We are gradually replacing this pass-based code with an alternative\n setup based on on-demand **queries**. In the query-model, we work\n backwards, executing a *query* that expresses our ultimate goal (e.g.,\n-\"compiler this crate\"). This query in turn may make other queries\n+\"compile this crate\"). This query in turn may make other queries\n (e.g., \"get me a list of all modules in the crate\"). Those queries\n make other queries that ultimately bottom out in the base operations,\n like parsing the input, running the type-checker, and so forth. This\n@@ -162,7 +162,7 @@ The compiler uses a number of...idiosyncratic abbreviations and\n things. This glossary attempts to list them and give you a few\n pointers for understanding them better.\n \n-- AST -- the **abstract syntax tree** produced the `syntax` crate; reflects user syntax\n+- AST -- the **abstract syntax tree** produced by the `syntax` crate; reflects user syntax\n   very closely. \n - codegen unit -- when we produce LLVM IR, we group the Rust code into a number of codegen\n   units. Each of these units is processed by LLVM independently from one another,"}, {"sha": "3fd956ecfb87dea7f60567b9cf192103b7b5c8e2", "filename": "src/librustc/ty/README.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Flibrustc%2Fty%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Flibrustc%2Fty%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2FREADME.md?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -42,7 +42,7 @@ wasteful.\n Often, we wish to write code that explicitly asserts that it is not\n taking place during inference. In that case, there is no \"local\"\n arena, and all the types that you can access are allocated in the\n-global arena.  To express this, the idea is to us the same lifetime\n+global arena.  To express this, the idea is to use the same lifetime\n for the `'gcx` and `'tcx` parameters of `TyCtxt`. Just to be a touch\n confusing, we tend to use the name `'tcx` in such contexts. Here is an\n example:\n@@ -100,10 +100,10 @@ fn test_type<'tcx>(ty: Ty<'tcx>) {\n \n The `sty` field (the origin of this name is unclear to me; perhaps\n structural type?) is of type `TypeVariants<'tcx>`, which is an enum\n-definined all of the different kinds of types in the compiler.\n+defining all of the different kinds of types in the compiler.\n \n > NB: inspecting the `sty` field on types during type inference can be\n-> risky, as there are may be inference variables and other things to\n+> risky, as there may be inference variables and other things to\n > consider, or sometimes types are not yet known that will become\n > known later.).\n \n@@ -132,7 +132,7 @@ a safe approximation, so that is what you get back.\n > you are going to be testing for type equality, you probably need to\n > start looking into the inference code to do it right.\n \n-You can also find various common types in the tcx itself by accessing\n+You can also find various common types in the `tcx` itself by accessing\n `tcx.types.bool`, `tcx.types.char`, etc (see `CommonTypes` for more).\n \n ### Beyond types: Other kinds of arena-allocated data structures\n@@ -143,7 +143,7 @@ module. Here are a few examples:\n \n - `Substs`, allocated with `mk_substs` -- this will intern a slice of types, often used to\n   specify the values to be substituted for generics (e.g., `HashMap<i32, u32>`\n-  would be represented as a slice `&'tcx [tcx.types.i32, tcx.types.u32]`.\n+  would be represented as a slice `&'tcx [tcx.types.i32, tcx.types.u32]`).\n - `TraitRef`, typically passed by value -- a **trait reference**\n   consists of a reference to a trait along with its various type\n   parameters (including `Self`), like `i32: Display` (here, the def-id"}, {"sha": "4afb61ab76cf7357a2be4e1d0010a54beedfc343", "filename": "src/test/compile-fail/macro-expanded-include/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Fcompile-fail%2Fmacro-expanded-include%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Fcompile-fail%2Fmacro-expanded-include%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-expanded-include%2Ftest.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no asm! support\n \n #![feature(asm, rustc_attrs)]\n #![allow(unused)]"}, {"sha": "0380ccbdea47b45cfdd5bca801fd20b5180bb0d0", "filename": "src/test/run-pass/asm-concat-src.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fasm-concat-src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fasm-concat-src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fasm-concat-src.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // pretty-expanded FIXME #23616\n-// ignore-emscripten\n+// ignore-emscripten no asm\n \n #![feature(asm)]\n "}, {"sha": "9e782cca218fd1051e8876778877545b0aa28e96", "filename": "src/test/run-pass/command-before-exec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fcommand-before-exec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fcommand-before-exec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcommand-before-exec.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-windows - this is a unix-specific test\n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n #![feature(process_exec, libc)]\n "}, {"sha": "e378f55dffa1e097e333f1098f7c72a1be9ff180", "filename": "src/test/run-pass/command-exec.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fcommand-exec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fcommand-exec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcommand-exec.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -10,7 +10,8 @@\n \n // ignore-windows - this is a unix-specific test\n // ignore-pretty issue #37199\n-// ignore-emscripten\n+// ignore-emscripten no processes\n+\n #![feature(process_exec)]\n \n use std::env;"}, {"sha": "863f3cf30e96a72b0288570d9aaad84eaa295d94", "filename": "src/test/run-pass/core-run-destroy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags:--test\n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n // NB: These tests kill child processes. Valgrind sees these children as leaking\n // memory, which makes for some *confusing* logs. That's why these are here"}, {"sha": "dddf1ae0546599101a3d37949930056bf47da1f3", "filename": "src/test/run-pass/env-args-reverse-iterator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fenv-args-reverse-iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fenv-args-reverse-iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenv-args-reverse-iterator.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n use std::env::args;\n use std::process::Command;"}, {"sha": "86ffaf1e24f62007a96823e74e8086ca6db1a404", "filename": "src/test/run-pass/env-funky-keys.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fenv-funky-keys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fenv-funky-keys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenv-funky-keys.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -12,7 +12,7 @@\n \n // ignore-android\n // ignore-windows\n-// ignore-emscripten\n+// ignore-emscripten no execve\n // no-prefer-dynamic\n \n #![feature(libc)]"}, {"sha": "3693e86ba242808e51e28935be6823bc0fc13613", "filename": "src/test/run-pass/env-home-dir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fenv-home-dir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fenv-home-dir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenv-home-dir.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten env vars don't work?\n \n #![feature(path)]\n "}, {"sha": "f4ee3b6e9e8008e370c6d0dfa335ced78c11988d", "filename": "src/test/run-pass/extern-pass-empty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fextern-pass-empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fextern-pass-empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-empty.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n // ignore-msvc\n-// ignore-emscripten\n+// ignore-emscripten emcc asserts on an empty struct as an argument\n \n #[repr(C)]\n struct TwoU8s {"}, {"sha": "f55876115c09c1bdd69c652a04e94ebe5fc0f7f0", "filename": "src/test/run-pass/fds-are-cloexec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Ffds-are-cloexec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Ffds-are-cloexec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffds-are-cloexec.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-windows\n // ignore-android\n-// ignore-emscripten\n+// ignore-emscripten no processes\n // ignore-haiku\n \n #![feature(libc)]"}, {"sha": "e23accfcc235d4f50527a0bb3087eefe0e02fbad", "filename": "src/test/run-pass/format-no-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fformat-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fformat-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fformat-no-std.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten missing rust_begin_unwind\n+// ignore-emscripten no no_std executables\n \n #![feature(lang_items, start, alloc)]\n #![no_std]"}, {"sha": "8693964665d342c8a320fd2812b76673fea2d870", "filename": "src/test/run-pass/generator/smoke.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fgenerator%2Fsmoke.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fgenerator%2Fsmoke.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgenerator%2Fsmoke.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no threads support\n // compile-flags: --test\n \n #![feature(generators, generator_trait)]"}, {"sha": "5369b138b0d584a0a91f6e523245736e64129a8b", "filename": "src/test/run-pass/i128.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fi128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fi128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fi128.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten i128 doesn't work\n \n #![feature(i128_type, test)]\n "}, {"sha": "e9d37817ee2e2fba776abb7f9e0c618e845ef1c7", "filename": "src/test/run-pass/issue-10626.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-10626.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-10626.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-10626.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n // Make sure that if a process doesn't have its stdio/stderr descriptors set up\n // that we don't die in a large ball of fire"}, {"sha": "9214d6b04bd2e3e42fe5b82a461b16fffee000bb", "filename": "src/test/run-pass/issue-13304.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-13304.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-13304.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-13304.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n+\n #![feature(io, process_capture)]\n \n use std::env;"}, {"sha": "2edb45cc1c4141e1fa219eb90bf2dc8f6e0b9b96", "filename": "src/test/run-pass/issue-14456.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-14456.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-14456.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14456.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n #![feature(io, process_capture)]\n "}, {"sha": "588fa63cfdfb2fdf67941d26c7b0e8097ce3e197", "filename": "src/test/run-pass/issue-14940.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-14940.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-14940.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14940.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n use std::env;\n use std::process::Command;"}, {"sha": "cd02cbf3dad3e0f7baa919c6692edd1fdae71650", "filename": "src/test/run-pass/issue-16272.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-16272.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-16272.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16272.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n use std::process::Command;\n use std::env;"}, {"sha": "c8ba5dbd84cdf17a7d3eb5ddd1f612b30d5ccbca", "filename": "src/test/run-pass/issue-20091.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-20091.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-20091.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-20091.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n+\n #![feature(std_misc, os)]\n \n #[cfg(unix)]"}, {"sha": "8cc23c883ed6a67b2aaae9a72849b60f879714f7", "filename": "src/test/run-pass/issue-2190-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-2190-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-2190-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2190-1.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // pretty-expanded FIXME #23616\n-// ignore-emscripten\n+// ignore-emscripten no threads\n \n use std::thread::Builder;\n "}, {"sha": "ad385ee78e0c798c0bea2dc2c321f9168a822e45", "filename": "src/test/run-pass/issue-24313.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-24313.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-24313.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-24313.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no threads\n \n use std::thread;\n use std::env;"}, {"sha": "4e4530789c8ddc7d9c8d424ffb882bf54fa9a9ed", "filename": "src/test/run-pass/issue-28950.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-28950.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-28950.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-28950.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no threads\n // compile-flags: -O\n \n // Tests that the `vec!` macro does not overflow the stack when it is"}, {"sha": "828b495d40813febbfd90d39dea732c0e1112e07", "filename": "src/test/run-pass/issue-29485.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-29485.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-29485.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-29485.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue-29485.rs\n-// ignore-emscripten\n+// ignore-emscripten no threads\n \n #[feature(recover)]\n "}, {"sha": "9a77be049feebbebf3c3d175933fabe5c8eccc2b", "filename": "src/test/run-pass/issue-29663.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-29663.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-29663.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-29663.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -10,8 +10,6 @@\n \n // write_volatile causes an LLVM assert with composite types\n \n-// ignore-emscripten See #41299: probably a bad optimization\n-\n #![feature(volatile)]\n use std::ptr::{read_volatile, write_volatile};\n "}, {"sha": "4296107dd457e448c01baae9e2ae65a9ffb03ae0", "filename": "src/test/run-pass/issue-30490.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-30490.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-30490.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-30490.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n // Previously libstd would set stdio descriptors of a child process\n // by `dup`ing the requested descriptors to inherit directly into the"}, {"sha": "3806270070783c3a5fe31795e8252f9f0de1db32", "filename": "src/test/run-pass/issue-33770.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-33770.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fissue-33770.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-33770.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n use std::process::{Command, Stdio};\n use std::env;"}, {"sha": "f12a233f493ee6a94aea237c07d4085be90b2f09", "filename": "src/test/run-pass/linkage1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Flinkage1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Flinkage1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flinkage1.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-windows\n // ignore-macos\n-// ignore-emscripten\n+// ignore-emscripten doesn't support this linkage\n // aux-build:linkage1.rs\n \n #![feature(linkage)]"}, {"sha": "c15b40d4dda2086f1cba52e84f4fe0f2e1f6e554", "filename": "src/test/run-pass/multi-panic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fmulti-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fmulti-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmulti-panic.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n fn check_for_no_backtrace(test: std::process::Output) {\n     assert!(!test.status.success());"}, {"sha": "7b6b711315afd9384cdb7bd6919b33bd96854dde", "filename": "src/test/run-pass/no-stdio.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fno-stdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fno-stdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fno-stdio.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n // ignore-android\n \n #![feature(libc)]"}, {"sha": "485335a2d8006a61adfb3e5459c4216c97fcdaa9", "filename": "src/test/run-pass/out-of-stack.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fout-of-stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fout-of-stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fout-of-stack.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-android: FIXME (#20004)\n // ignore-musl\n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n #![feature(asm)]\n #![feature(libc)]"}, {"sha": "a4a0055785f0d6b23959171ad03affebecac182a", "filename": "src/test/run-pass/packed-struct-layout.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fpacked-struct-layout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fpacked-struct-layout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-layout.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -7,8 +7,6 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-// ignore-emscripten Not sure what's happening here.\n-\n \n use std::mem;\n "}, {"sha": "18f7eff280a8469c1a195168709e24694241d285", "filename": "src/test/run-pass/packed-tuple-struct-layout.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fpacked-tuple-struct-layout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fpacked-tuple-struct-layout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-tuple-struct-layout.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -7,8 +7,6 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-// ignore-emscripten\n-\n \n use std::mem;\n "}, {"sha": "d1fdc8afa653e0de8a0b1cd40ad628aea8b4ed6e", "filename": "src/test/run-pass/panic-runtime/abort-link-to-unwinding-crates.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort-link-to-unwinding-crates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort-link-to-unwinding-crates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort-link-to-unwinding-crates.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -11,7 +11,7 @@\n // compile-flags:-C panic=abort\n // aux-build:exit-success-if-unwind.rs\n // no-prefer-dynamic\n-// ignore-emscripten Function not implemented\n+// ignore-emscripten no processes\n \n extern crate exit_success_if_unwind;\n "}, {"sha": "bb541b29d7c76d180f40d443e8e7fe7093f31982", "filename": "src/test/run-pass/panic-runtime/abort.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Fabort.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags:-C panic=abort\n // no-prefer-dynamic\n-// ignore-emscripten Function not implemented.\n+// ignore-emscripten no processes\n \n use std::process::Command;\n use std::env;"}, {"sha": "59e9474aab2ec03b53232fe6d1c2d1c8bed8fd88", "filename": "src/test/run-pass/panic-runtime/lto-abort.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Flto-abort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Flto-abort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Flto-abort.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags:-C lto -C panic=abort\n // no-prefer-dynamic\n-// ignore-emscripten Function not implemented.\n+// ignore-emscripten no processes\n \n use std::process::Command;\n use std::env;"}, {"sha": "6d28b8d12f62bad32c48315c4a49ba1ff2cc62cb", "filename": "src/test/run-pass/panic-runtime/lto-unwind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Flto-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Flto-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-runtime%2Flto-unwind.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags:-C lto -C panic=unwind\n // no-prefer-dynamic\n-// ignore-emscripten Function not implemented.\n+// ignore-emscripten no processes\n \n use std::process::Command;\n use std::env;"}, {"sha": "1622517198a2c6f6f9fb2b99e912901660b82e4d", "filename": "src/test/run-pass/process-envs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fprocess-envs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fprocess-envs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprocess-envs.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n use std::process::Command;\n use std::env;"}, {"sha": "5abc06b75e14e190dd5a33f40c930e4afa60b252", "filename": "src/test/run-pass/process-exit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fprocess-exit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fprocess-exit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprocess-exit.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n use std::env;\n use std::process::{self, Command, Stdio};"}, {"sha": "7a9b431d5709e4211417e1b8d1623b5d83013bee", "filename": "src/test/run-pass/process-remove-from-env.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fprocess-remove-from-env.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fprocess-remove-from-env.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprocess-remove-from-env.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n use std::process::Command;\n use std::env;"}, {"sha": "7b85420726326a4bf5d99347cef3bf66e1fb0645", "filename": "src/test/run-pass/process-spawn-with-unicode-params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fprocess-spawn-with-unicode-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fprocess-spawn-with-unicode-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprocess-spawn-with-unicode-params.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -16,7 +16,7 @@\n // non-ASCII characters.  The child process ensures all the strings are\n // intact.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n use std::io::prelude::*;\n use std::io;"}, {"sha": "5ea48a4ff33bc545d5957154f39321896c546c36", "filename": "src/test/run-pass/process-status-inherits-stdin.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fprocess-status-inherits-stdin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fprocess-status-inherits-stdin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprocess-status-inherits-stdin.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -7,7 +7,8 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-// ignore-emscripten Function not implemented.\n+\n+// ignore-emscripten no processes\n \n use std::env;\n use std::io;"}, {"sha": "6f696c1c9cea5ceafb631530760717240750ceb8", "filename": "src/test/run-pass/running-with-no-runtime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Frunning-with-no-runtime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Frunning-with-no-runtime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frunning-with-no-runtime.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten spawning processes is not supported\n \n #![feature(start)]\n "}, {"sha": "0f6832acec8143ab22b5254451a93fe544003ae8", "filename": "src/test/run-pass/signal-exit-status.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsignal-exit-status.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-windows\n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n use std::env;\n use std::process::Command;"}, {"sha": "465feb4b7790ecf20da3cd585b74d386bedb5e97", "filename": "src/test/run-pass/sigpipe-should-be-ignored.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fsigpipe-should-be-ignored.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fsigpipe-should-be-ignored.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsigpipe-should-be-ignored.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -11,7 +11,7 @@\n // Be sure that when a SIGPIPE would have been received that the entire process\n // doesn't die in a ball of fire, but rather it's gracefully handled.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n use std::env;\n use std::io::prelude::*;"}, {"sha": "ed2786edf3a3f25d9b09531b35a3dfb989578570", "filename": "src/test/run-pass/simd-intrinsic-generic-cast.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-cast.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -7,7 +7,8 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-// ignore-emscripten linking with emcc failed\n+\n+// ignore-emscripten FIXME(#45351) hits an LLVM assert\n \n #![feature(repr_simd, platform_intrinsics, concat_idents, test)]\n #![allow(non_camel_case_types)]"}, {"sha": "78a1019578e350224bb855c2a77ee1eaf629bbe6", "filename": "src/test/run-pass/stack-probes-lto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fstack-probes-lto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fstack-probes-lto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstack-probes-lto.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -11,7 +11,7 @@\n // ignore-arm\n // ignore-aarch64\n // ignore-wasm\n-// ignore-emscripten\n+// ignore-emscripten no processes\n // ignore-musl FIXME #31506\n // ignore-pretty\n // no-system-llvm"}, {"sha": "bb9471e1b48bc4f2d84e66310a1616111fa019d2", "filename": "src/test/run-pass/stack-probes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fstack-probes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fstack-probes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstack-probes.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -11,7 +11,7 @@\n // ignore-arm\n // ignore-aarch64\n // ignore-wasm\n-// ignore-emscripten\n+// ignore-emscripten no processes\n // ignore-musl FIXME #31506\n // no-system-llvm\n "}, {"sha": "cce1077202c3fb03928559187541a48e90d6508c", "filename": "src/test/run-pass/stdio-is-blocking.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fstdio-is-blocking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fstdio-is-blocking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstdio-is-blocking.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n use std::env;\n use std::io::prelude::*;"}, {"sha": "7a71dd2bc5125f080d7c0e9804f561cc2f96fc01", "filename": "src/test/run-pass/thinlto/thin-lto-inlines.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fthinlto%2Fthin-lto-inlines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fthinlto%2Fthin-lto-inlines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fthinlto%2Fthin-lto-inlines.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags: -Z thinlto -C codegen-units=8 -O\n // min-llvm-version 4.0\n-// ignore-emscripten\n+// ignore-emscripten can't inspect instructions on emscripten\n \n // We want to assert here that ThinLTO will inline across codegen units. There's\n // not really a great way to do that in general so we sort of hack around it by"}, {"sha": "0e8ad08a5f6804c26caed1237fba12c5b32d3c80", "filename": "src/test/run-pass/thinlto/thin-lto-inlines2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fthinlto%2Fthin-lto-inlines2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fthinlto%2Fthin-lto-inlines2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fthinlto%2Fthin-lto-inlines2.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -12,7 +12,7 @@\n // aux-build:thin-lto-inlines-aux.rs\n // min-llvm-version 4.0\n // no-prefer-dynamic\n-// ignore-emscripten\n+// ignore-emscripten can't inspect instructions on emscripten\n \n // We want to assert here that ThinLTO will inline across codegen units. There's\n // not really a great way to do that in general so we sort of hack around it by"}, {"sha": "0ee2cb9238c91e768427cf11384265fa9c91ce92", "filename": "src/test/run-pass/try-wait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Ftry-wait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Ftry-wait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftry-wait.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n #![feature(process_try_wait)]\n "}, {"sha": "bf506a712500178e0f6c6f749d9f2ef71f25a029", "filename": "src/test/run-pass/u128.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fu128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fu128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fu128.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten u128 not supported\n \n #![feature(i128_type, test)]\n "}, {"sha": "56ff9cb24774b977923b96b620fbb81484b9460a", "filename": "src/test/run-pass/vec-macro-no-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten missing rust_begin_unwind\n+// ignore-emscripten no no_std executables\n \n #![feature(lang_items, start, libc, alloc)]\n #![no_std]"}, {"sha": "744f2989bcfcace577a0ba5503574e83f9b9d6f0", "filename": "src/test/run-pass/wait-forked-but-failed-child.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fwait-forked-but-failed-child.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439f7521b87161908afaace97204d7a0b3438e19/src%2Ftest%2Frun-pass%2Fwait-forked-but-failed-child.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fwait-forked-but-failed-child.rs?ref=439f7521b87161908afaace97204d7a0b3438e19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-emscripten\n+// ignore-emscripten no processes\n \n #![feature(libc)]\n "}]}