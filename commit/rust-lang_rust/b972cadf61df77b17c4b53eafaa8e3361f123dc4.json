{"sha": "b972cadf61df77b17c4b53eafaa8e3361f123dc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5NzJjYWRmNjFkZjc3YjE3YzRiNTNlYWZhYThlMzM2MWYxMjNkYzQ=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-01T04:52:41Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-01T15:59:03Z"}, "message": "Update/delete tests using @[].", "tree": {"sha": "6b849d3ad12bac5e0f2ea7129b48a986fc299b13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b849d3ad12bac5e0f2ea7129b48a986fc299b13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b972cadf61df77b17c4b53eafaa8e3361f123dc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b972cadf61df77b17c4b53eafaa8e3361f123dc4", "html_url": "https://github.com/rust-lang/rust/commit/b972cadf61df77b17c4b53eafaa8e3361f123dc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b972cadf61df77b17c4b53eafaa8e3361f123dc4/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f63c3fba4c14bbf64931791da0222e66133924bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f63c3fba4c14bbf64931791da0222e66133924bd", "html_url": "https://github.com/rust-lang/rust/commit/f63c3fba4c14bbf64931791da0222e66133924bd"}], "stats": {"total": 137, "additions": 9, "deletions": 128}, "files": [{"sha": "6a0f5a39202a99d734fac887da39c46ee13708a1", "filename": "src/test/compile-fail/auto-ref-slice-plus-ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Fcompile-fail%2Fauto-ref-slice-plus-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Fcompile-fail%2Fauto-ref-slice-plus-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauto-ref-slice-plus-ref.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -17,7 +17,7 @@ fn main() {\n     // reference.  That would allow creating a mutable pointer to a\n     // temporary, which would be a source of confusion\n \n-    let mut a = @[0];\n+    let mut a = ~[0];\n     a.test_mut(); //~ ERROR does not implement any method in scope named `test_mut`\n }\n "}, {"sha": "0d01fe4e8c73204a83c8ae258f3f395e1b847021", "filename": "src/test/compile-fail/drop-on-non-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Fcompile-fail%2Fdrop-on-non-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Fcompile-fail%2Fdrop-on-non-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdrop-on-non-struct.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -10,7 +10,7 @@\n \n #[feature(managed_boxes)];\n \n-type Foo = @[u8];\n+type Foo = ~[u8];\n \n impl Drop for Foo {   //~ ERROR the Drop trait may only be implemented\n //~^ ERROR cannot provide an extension implementation"}, {"sha": "9a0227b7d31a21013b2e99431030fad8afdf02f4", "filename": "src/test/compile-fail/evec-subtyping.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Fcompile-fail%2Fevec-subtyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Fcompile-fail%2Fevec-subtyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fevec-subtyping.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -10,30 +10,20 @@\n \n #[feature(managed_boxes)];\n \n-fn wants_box(x: @[uint]) { }\n fn wants_uniq(x: ~[uint]) { }\n fn wants_three(x: [uint, ..3]) { }\n \n-fn has_box(x: @[uint]) {\n-   wants_box(x);\n-   wants_uniq(x); //~ ERROR [] storage differs: expected `~` but found `@`\n-   wants_three(x); //~ ERROR [] storage differs: expected `3` but found `@`\n-}\n-\n fn has_uniq(x: ~[uint]) {\n-   wants_box(x); //~ ERROR [] storage differs: expected `@` but found `~`\n    wants_uniq(x);\n    wants_three(x); //~ ERROR [] storage differs: expected `3` but found `~`\n }\n \n fn has_three(x: [uint, ..3]) {\n-   wants_box(x); //~ ERROR [] storage differs: expected `@` but found `3`\n    wants_uniq(x); //~ ERROR [] storage differs: expected `~` but found `3`\n    wants_three(x);\n }\n \n fn has_four(x: [uint, ..4]) {\n-   wants_box(x); //~ ERROR [] storage differs: expected `@` but found `4`\n    wants_uniq(x); //~ ERROR [] storage differs: expected `~` but found `4`\n    wants_three(x); //~ ERROR [] storage differs: expected `3` but found `4`\n }"}, {"sha": "3fc6106f7480b6455dc4489b50e8194ed0c3b285", "filename": "src/test/compile-fail/issue-10487.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Fcompile-fail%2Fissue-10487.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Fcompile-fail%2Fissue-10487.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-10487.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -11,6 +11,5 @@\n #[feature(managed_boxes)];\n \n static x: ~[int] = ~[123, 456]; //~ ERROR: cannot allocate vectors in constant expressions\n-static y: @[int] = @[123, 456]; //~ ERROR: cannot allocate vectors in constant expressions\n \n fn main() {}"}, {"sha": "8899f3f5dbbcfd1b986342ab39c2295c2827422b", "filename": "src/test/compile-fail/lint-heap-memory.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Fcompile-fail%2Flint-heap-memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Fcompile-fail%2Flint-heap-memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-heap-memory.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -22,8 +22,7 @@ fn main() {\n     let _x : Bar = Bar {x : ~10}; //~ ERROR type uses owned\n \n     @2; //~ ERROR type uses managed\n-    @[1]; //~ ERROR type uses managed\n-    //~^ ERROR type uses managed\n+\n     fn f(_: @Clone) {} //~ ERROR type uses managed\n \n     ~2; //~ ERROR type uses owned"}, {"sha": "4e2391ea25ff2dd54c86c89f838bc8c28131f85d", "filename": "src/test/compile-fail/moves-based-on-type-exprs.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-exprs.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -72,12 +72,6 @@ fn f80() {\n     touch(&x); //~ ERROR use of moved value: `x`\n }\n \n-fn f90() {\n-    let x = ~\"hi\";\n-    let _y = @[x];\n-    touch(&x); //~ ERROR use of moved value: `x`\n-}\n-\n fn f100() {\n     let x = ~[~\"hi\"];\n     let _y = x[0];"}, {"sha": "2c0edb783f830ff0f0a5884d571faefbb593ed3f", "filename": "src/test/debug-info/boxed-vec.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Fdebug-info%2Fboxed-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Fdebug-info%2Fboxed-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fboxed-vec.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -17,21 +17,15 @@\n // debugger:run\n // debugger:finish\n \n-// debugger:print managed->val.fill\n-// check:$1 = 24\n-// debugger:print *((uint64_t[3]*)(managed->val.elements))\n-// check:$2 = {7, 8, 9}\n-\n // debugger:print unique->fill\n-// check:$3 = 32\n+// check:$1 = 32\n // debugger:print *((uint64_t[4]*)(unique->elements))\n-// check:$4 = {10, 11, 12, 13}\n+// check:$2 = {10, 11, 12, 13}\n \n #[allow(unused_variable)];\n \n fn main() {\n \n-    let managed: @[i64] = @[7, 8, 9];\n     let unique: ~[i64] = ~[10, 11, 12, 13];\n \n     zzz();"}, {"sha": "f3af7d652cde49b3757e5dda74b9823d92b9b76f", "filename": "src/test/run-pass/auto-encode.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fauto-encode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fauto-encode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto-encode.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -144,9 +144,6 @@ pub fn main() {\n     let a = &Point {x: 3u, y: 5u};\n     test_ebml(a);\n \n-    let a = &@[1u, 2u, 3u];\n-    test_ebml(a);\n-\n     let a = &Top(22u);\n     test_ebml(a);\n "}, {"sha": "c22e25e5d95be099d257932b7f5a524857bafcbf", "filename": "src/test/run-pass/auto-ref-slice-plus-ref.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fauto-ref-slice-plus-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fauto-ref-slice-plus-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto-ref-slice-plus-ref.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -30,7 +30,6 @@ pub fn main() {\n \n     ([1]).test_imm();\n     (~[1]).test_imm();\n-    (@[1]).test_imm();\n     (&[1]).test_imm();\n     (\"test\").test_imm();\n     (~\"test\").test_imm();"}, {"sha": "5ae959ef169998e2d3fb4030be78c8393520471e", "filename": "src/test/run-pass/borrowck-borrow-from-at-vec.rs", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f63c3fba4c14bbf64931791da0222e66133924bd/src%2Ftest%2Frun-pass%2Fborrowck-borrow-from-at-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f63c3fba4c14bbf64931791da0222e66133924bd/src%2Ftest%2Frun-pass%2Fborrowck-borrow-from-at-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-borrow-from-at-vec.rs?ref=f63c3fba4c14bbf64931791da0222e66133924bd", "patch": "@@ -1,22 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#[feature(managed_boxes)];\n-\n-fn sum_slice(x: &[int]) -> int {\n-    let mut sum = 0;\n-    for i in x.iter() { sum += *i; }\n-    return sum;\n-}\n-\n-pub fn main() {\n-    let x = @[1, 2, 3];\n-    assert_eq!(sum_slice(x), 6);\n-}"}, {"sha": "c841297e19f2f2f357f367e80f452314254590b0", "filename": "src/test/run-pass/expr-repeat-vstore.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fexpr-repeat-vstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fexpr-repeat-vstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-repeat-vstore.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -7,10 +7,4 @@ pub fn main() {\n     println!(\"{}\", v[2]);\n     println!(\"{}\", v[3]);\n     println!(\"{}\", v[4]);\n-    let v: @[int] = @[ 2, ..5 ];\n-    println!(\"{}\", v[0]);\n-    println!(\"{}\", v[1]);\n-    println!(\"{}\", v[2]);\n-    println!(\"{}\", v[3]);\n-    println!(\"{}\", v[4]);\n }"}, {"sha": "ffb7a0a5bb30e5446b5c77672fd670bba7cf66de", "filename": "src/test/run-pass/issue-5926.rs", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f63c3fba4c14bbf64931791da0222e66133924bd/src%2Ftest%2Frun-pass%2Fissue-5926.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f63c3fba4c14bbf64931791da0222e66133924bd/src%2Ftest%2Frun-pass%2Fissue-5926.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5926.rs?ref=f63c3fba4c14bbf64931791da0222e66133924bd", "patch": "@@ -1,20 +0,0 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#[feature(managed_boxes)];\n-#[allow(unused_mut)];\n-\n-pub fn main() {\n-    let  mut your_favorite_numbers = @[1,2,3];\n-    let  mut my_favorite_numbers = @[4,5,6];\n-    let  f = your_favorite_numbers + my_favorite_numbers;\n-    println!(\"The third favorite number is {:?}.\", f)\n-}\n-"}, {"sha": "c5123f23116251c9af2b6e91d95d37404a345c3f", "filename": "src/test/run-pass/issue-9382.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fissue-9382.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fissue-9382.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9382.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -35,10 +35,6 @@ pub fn main() {\n         baz: ~[],\n         bar: ~32,\n     };\n-    let _t1_at = Thing1 {\n-        baz: @[],\n-        bar: ~32,\n-    };\n     let _t2_fixed = Thing2 {\n         baz: &[],\n         bar: 32,\n@@ -47,8 +43,4 @@ pub fn main() {\n         baz: ~[],\n         bar: 32,\n     };\n-    let _t2_at = Thing2 {\n-        baz: @[],\n-        bar: 32,\n-    };\n }"}, {"sha": "7d8d5d635f904724e7bce6b064b8a6a69293296f", "filename": "src/test/run-pass/nullable-pointer-iotareduction.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fnullable-pointer-iotareduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fnullable-pointer-iotareduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnullable-pointer-iotareduction.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -80,8 +80,6 @@ pub fn main() {\n     check_type!(@19: @int);\n     check_type!(~\"foo\": ~str);\n     check_type!(~[20, 22]: ~[int]);\n-    check_type!(@[]: @[int]);\n-    check_type!(@[24, 26]: @[int]);\n     let mint: uint = unsafe { cast::transmute(main) };\n     check_type!(main: extern fn(), |pthing| {\n         assert!(mint == unsafe { cast::transmute(*pthing) })"}, {"sha": "84a6baa5de8a9996f887a69f3c779c40459afcbf", "filename": "src/test/run-pass/nullable-pointer-size.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fnullable-pointer-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fnullable-pointer-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnullable-pointer-size.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -42,6 +42,5 @@ pub fn main() {\n     check_type!(@int);\n     check_type!(~str);\n     check_type!(~[int]);\n-    check_type!(@[int]);\n     check_type!(extern fn());\n }"}, {"sha": "0b6ab579e6b73299fdc5acfe5b37c55d353aeaff", "filename": "src/test/run-pass/packed-struct-generic-size.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fpacked-struct-generic-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fpacked-struct-generic-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpacked-struct-generic-size.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -22,6 +22,6 @@ pub fn main() {\n \n     assert_eq!(mem::size_of::<S<u64, u16>>(), 11);\n \n-    assert_eq!(mem::size_of::<S<~str, @[int]>>(),\n-               1 + mem::size_of::<~str>() + mem::size_of::<@[int]>());\n+    assert_eq!(mem::size_of::<S<~str, ~[int]>>(),\n+               1 + mem::size_of::<~str>() + mem::size_of::<~[int]>());\n }"}, {"sha": "6a817bf03d40180c3e9c724981cdfd7b4851bc44", "filename": "src/test/run-pass/reflect-visit-data.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -252,9 +252,6 @@ impl<V:TyVisitor + movable_ptr> TyVisitor for ptr_visit_adaptor<V> {\n     }\n \n     fn visit_evec_box(&mut self, mtbl: uint, inner: *TyDesc) -> bool {\n-        self.align_to::<@[u8]>();\n-        if ! self.inner().visit_evec_box(mtbl, inner) { return false; }\n-        self.bump_past::<@[u8]>();\n         true\n     }\n "}, {"sha": "3c0fcba2064fba9e96f9b7e2086c21023a17b92b", "filename": "src/test/run-pass/regions-borrow-evec-at.rs", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f63c3fba4c14bbf64931791da0222e66133924bd/src%2Ftest%2Frun-pass%2Fregions-borrow-evec-at.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f63c3fba4c14bbf64931791da0222e66133924bd/src%2Ftest%2Frun-pass%2Fregions-borrow-evec-at.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-borrow-evec-at.rs?ref=f63c3fba4c14bbf64931791da0222e66133924bd", "patch": "@@ -1,21 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#[feature(managed_boxes)];\n-\n-fn foo(x: &[uint]) -> uint {\n-    x[0]\n-}\n-\n-pub fn main() {\n-    let p = @[22u];\n-    let r = foo(p);\n-    assert_eq!(r, 22u);\n-}"}, {"sha": "9f2069908437b96e7cf30b2e02c6d0b21ffecb42", "filename": "src/test/run-pass/repeated-vector-syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Frepeated-vector-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Frepeated-vector-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frepeated-vector-syntax.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -16,7 +16,7 @@ struct Foo {\n }\n \n pub fn main() {\n-    let x = [ @[true], ..512 ];\n+    let x = [ [true], ..512 ];\n     let y = [ 0, ..1 ];\n \n     error!(\"{:?}\", x);"}, {"sha": "68d2ce364631c6f6aee1435722987a90394c1839", "filename": "src/test/run-pass/vec-matching-autoslice.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fvec-matching-autoslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fvec-matching-autoslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-matching-autoslice.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -1,7 +1,5 @@\n-#[feature(managed_boxes)];\n-\n pub fn main() {\n-    let x = @[1, 2, 3];\n+    let x = ~[1, 2, 3];\n     match x {\n         [2, ..] => fail!(),\n         [1, ..tail] => {"}, {"sha": "e25b4de0a11c9dc019a06a126e344843eddbdcca", "filename": "src/test/run-pass/vec-to_str.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fvec-to_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b972cadf61df77b17c4b53eafaa8e3361f123dc4/src%2Ftest%2Frun-pass%2Fvec-to_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-to_str.rs?ref=b972cadf61df77b17c4b53eafaa8e3361f123dc4", "patch": "@@ -8,19 +8,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[feature(managed_boxes)];\n-\n pub fn main() {\n     assert_eq!((~[0, 1]).to_str(), ~\"[0, 1]\");\n     assert_eq!((&[1, 2]).to_str(), ~\"[1, 2]\");\n-    assert_eq!((@[2, 3]).to_str(), ~\"[2, 3]\");\n \n     let foo = ~[3, 4];\n     let bar = &[4, 5];\n-    let baz = @[5, 6];\n \n     assert_eq!(foo.to_str(), ~\"[3, 4]\");\n     assert_eq!(bar.to_str(), ~\"[4, 5]\");\n-    assert_eq!(baz.to_str(), ~\"[5, 6]\");\n-\n }"}]}