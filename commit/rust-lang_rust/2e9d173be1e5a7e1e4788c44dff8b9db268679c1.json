{"sha": "2e9d173be1e5a7e1e4788c44dff8b9db268679c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlOWQxNzNiZTFlNWE3ZTFlNDc4OGM0NGRmZjhiOWRiMjY4Njc5YzE=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-11-13T06:28:50Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-11-13T06:28:50Z"}, "message": "literal representation restructure 12\n\nExport function for formatting literals and remove crate visibility from\nother items.", "tree": {"sha": "82dbf8360938b07792979eb439ea6383f89b5272", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82dbf8360938b07792979eb439ea6383f89b5272"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e9d173be1e5a7e1e4788c44dff8b9db268679c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e9d173be1e5a7e1e4788c44dff8b9db268679c1", "html_url": "https://github.com/rust-lang/rust/commit/2e9d173be1e5a7e1e4788c44dff8b9db268679c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e9d173be1e5a7e1e4788c44dff8b9db268679c1/comments", "author": null, "committer": null, "parents": [{"sha": "eb9caf3050d9502fb98c30356da433629b5fa78d", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb9caf3050d9502fb98c30356da433629b5fa78d", "html_url": "https://github.com/rust-lang/rust/commit/eb9caf3050d9502fb98c30356da433629b5fa78d"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "40dbaa17732ff325dfea9e013df263bea54d237e", "filename": "clippy_lints/src/excessive_precision.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2e9d173be1e5a7e1e4788c44dff8b9db268679c1/clippy_lints%2Fsrc%2Fexcessive_precision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e9d173be1e5a7e1e4788c44dff8b9db268679c1/clippy_lints%2Fsrc%2Fexcessive_precision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexcessive_precision.rs?ref=2e9d173be1e5a7e1e4788c44dff8b9db268679c1", "patch": "@@ -1,4 +1,5 @@\n use crate::utils::span_lint_and_sugg;\n+use crate::utils::sugg::format_numeric_literal;\n use if_chain::if_chain;\n use rustc::hir;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n@@ -86,8 +87,7 @@ impl ExcessivePrecision {\n             if sym_str == s {\n                 None\n             } else {\n-                let num_lit = super::literal_representation::NumericLiteral::new(&s, None, true);\n-                Some(num_lit.format())\n+                Some(format_numeric_literal(&s, None, true))\n             }\n         } else {\n             None"}, {"sha": "b6f641d1b8cf2799708f2981339f965acf51277a", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2e9d173be1e5a7e1e4788c44dff8b9db268679c1/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e9d173be1e5a7e1e4788c44dff8b9db268679c1/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=2e9d173be1e5a7e1e4788c44dff8b9db268679c1", "patch": "@@ -114,20 +114,26 @@ pub(super) enum Radix {\n impl Radix {\n     /// Returns a reasonable digit group size for this radix.\n     #[must_use]\n-    crate fn suggest_grouping(&self) -> usize {\n+    fn suggest_grouping(&self) -> usize {\n         match *self {\n             Self::Binary | Self::Hexadecimal => 4,\n             Self::Octal | Self::Decimal => 3,\n         }\n     }\n }\n \n+/// A helper method to format numeric literals with digit grouping.\n+/// `lit` must be a valid numeric literal without suffix.\n+pub fn format_numeric_literal(lit: &str, type_suffix: Option<&str>, float: bool) -> String {\n+    NumericLiteral::new(lit, type_suffix, float).format()\n+}\n+\n #[derive(Debug)]\n pub(super) struct NumericLiteral<'a> {\n     /// Which radix the literal was represented in.\n-    crate radix: Radix,\n+    radix: Radix,\n     /// The radix prefix, if present.\n-    crate prefix: Option<&'a str>,\n+    prefix: Option<&'a str>,\n \n     /// The integer part of the number.\n     integer: &'a str,\n@@ -137,7 +143,7 @@ pub(super) struct NumericLiteral<'a> {\n     exponent: Option<(char, &'a str)>,\n \n     /// The type suffix, including preceding underscore if present.\n-    crate suffix: Option<&'a str>,\n+    suffix: Option<&'a str>,\n }\n \n impl<'a> NumericLiteral<'a> {\n@@ -152,7 +158,7 @@ impl<'a> NumericLiteral<'a> {\n     }\n \n     #[must_use]\n-    crate fn new(lit: &'a str, suffix: Option<&'a str>, float: bool) -> Self {\n+    fn new(lit: &'a str, suffix: Option<&'a str>, float: bool) -> Self {\n         // Determine delimiter for radix prefix, if present, and radix.\n         let radix = if lit.starts_with(\"0x\") {\n             Radix::Hexadecimal\n@@ -219,7 +225,7 @@ impl<'a> NumericLiteral<'a> {\n     }\n \n     /// Returns literal formatted in a sensible way.\n-    crate fn format(&self) -> String {\n+    fn format(&self) -> String {\n         let mut output = String::new();\n \n         if let Some(prefix) = self.prefix {\n@@ -324,7 +330,7 @@ enum WarningType {\n }\n \n impl WarningType {\n-    crate fn display(&self, suggested_format: String, cx: &EarlyContext<'_>, span: syntax_pos::Span) {\n+    fn display(&self, suggested_format: String, cx: &EarlyContext<'_>, span: syntax_pos::Span) {\n         match self {\n             Self::MistypedLiteralSuffix => span_lint_and_sugg(\n                 cx,"}, {"sha": "228fda9eec0aa13f376e38956010324723d39d86", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2e9d173be1e5a7e1e4788c44dff8b9db268679c1/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e9d173be1e5a7e1e4788c44dff8b9db268679c1/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=2e9d173be1e5a7e1e4788c44dff8b9db268679c1", "patch": "@@ -18,6 +18,8 @@ use syntax::token;\n use syntax::util::parser::AssocOp;\n use syntax_pos::{BytePos, Pos};\n \n+pub use crate::literal_representation::format_numeric_literal;\n+\n /// A helper type to build suggestion correctly handling parenthesis.\n pub enum Sugg<'a> {\n     /// An expression that never needs parenthesis such as `1337` or `[0; 42]`."}]}