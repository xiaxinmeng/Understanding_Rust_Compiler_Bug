{"sha": "380dd7d47b574697fe87ef00ad5ffcbb6651c501", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4MGRkN2Q0N2I1NzQ2OTdmZTg3ZWYwMGFkNWZmY2JiNjY1MWM1MDE=", "commit": {"author": {"name": "Thomas de Zeeuw", "email": "thomasdezeeuw@gmail.com", "date": "2018-11-15T15:41:06Z"}, "committer": {"name": "Thomas de Zeeuw", "email": "thomasdezeeuw@gmail.com", "date": "2018-12-03T09:49:27Z"}, "message": "Add rc::Weak.ptr_eq", "tree": {"sha": "9131b57c8ce95f2acc05743e03a1d8fa485da78e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9131b57c8ce95f2acc05743e03a1d8fa485da78e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/380dd7d47b574697fe87ef00ad5ffcbb6651c501", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/380dd7d47b574697fe87ef00ad5ffcbb6651c501", "html_url": "https://github.com/rust-lang/rust/commit/380dd7d47b574697fe87ef00ad5ffcbb6651c501", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/380dd7d47b574697fe87ef00ad5ffcbb6651c501/comments", "author": {"login": "Thomasdezeeuw", "id": 3159064, "node_id": "MDQ6VXNlcjMxNTkwNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3159064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thomasdezeeuw", "html_url": "https://github.com/Thomasdezeeuw", "followers_url": "https://api.github.com/users/Thomasdezeeuw/followers", "following_url": "https://api.github.com/users/Thomasdezeeuw/following{/other_user}", "gists_url": "https://api.github.com/users/Thomasdezeeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thomasdezeeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thomasdezeeuw/subscriptions", "organizations_url": "https://api.github.com/users/Thomasdezeeuw/orgs", "repos_url": "https://api.github.com/users/Thomasdezeeuw/repos", "events_url": "https://api.github.com/users/Thomasdezeeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/Thomasdezeeuw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Thomasdezeeuw", "id": 3159064, "node_id": "MDQ6VXNlcjMxNTkwNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3159064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thomasdezeeuw", "html_url": "https://github.com/Thomasdezeeuw", "followers_url": "https://api.github.com/users/Thomasdezeeuw/followers", "following_url": "https://api.github.com/users/Thomasdezeeuw/following{/other_user}", "gists_url": "https://api.github.com/users/Thomasdezeeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thomasdezeeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thomasdezeeuw/subscriptions", "organizations_url": "https://api.github.com/users/Thomasdezeeuw/orgs", "repos_url": "https://api.github.com/users/Thomasdezeeuw/repos", "events_url": "https://api.github.com/users/Thomasdezeeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/Thomasdezeeuw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a2d1b4e15d5de90f8c36181b1d429da658adfd2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a2d1b4e15d5de90f8c36181b1d429da658adfd2", "html_url": "https://github.com/rust-lang/rust/commit/6a2d1b4e15d5de90f8c36181b1d429da658adfd2"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "064b3180d4c20fa2883104cfa043889bc04f9b17", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/380dd7d47b574697fe87ef00ad5ffcbb6651c501/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/380dd7d47b574697fe87ef00ad5ffcbb6651c501/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=380dd7d47b574697fe87ef00ad5ffcbb6651c501", "patch": "@@ -1260,6 +1260,52 @@ impl<T: ?Sized> Weak<T> {\n             Some(unsafe { self.ptr.as_ref() })\n         }\n     }\n+\n+    /// Returns true if the two `Weak`s point to the same value (not just values\n+    /// that compare as equal).\n+    ///\n+    /// # Notes\n+    ///\n+    /// Since this compares pointers it means that `Weak::new()` will equal each\n+    /// other, even though they don't point to any value.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(weak_ptr_eq)]\n+    /// use std::rc::{Rc, Weak};\n+    ///\n+    /// let first_rc = Rc::new(5);\n+    /// let first = Rc::downgrade(&first_rc);\n+    /// let second = Rc::downgrade(&first_rc);\n+    ///\n+    /// assert!(Weak::ptr_eq(&first, &second));\n+    ///\n+    /// let third_rc = Rc::new(5);\n+    /// let third = Rc::downgrade(&third_rc);\n+    ///\n+    /// assert!(!Weak::ptr_eq(&first, &third));\n+    /// ```\n+    ///\n+    /// Comparing `Weak::new`.\n+    ///\n+    /// ```\n+    /// #![feature(weak_ptr_eq)]\n+    /// use std::rc::{Rc, Weak};\n+    ///\n+    /// let first = Weak::new();\n+    /// let second = Weak::new();\n+    /// assert!(Weak::ptr_eq(&first, &second));\n+    ///\n+    /// let third_rc = Rc::new(());\n+    /// let third = Rc::downgrade(&third_rc);\n+    /// assert!(!Weak::ptr_eq(&first, &third));\n+    /// ```\n+    #[inline]\n+    #[unstable(feature = \"weak_ptr_eq\", issue = \"55981\")]\n+    pub fn ptr_eq(this: &Self, other: &Self) -> bool {\n+        this.ptr.as_ptr() == other.ptr.as_ptr()\n+    }\n }\n \n #[stable(feature = \"rc_weak\", since = \"1.4.0\")]"}]}