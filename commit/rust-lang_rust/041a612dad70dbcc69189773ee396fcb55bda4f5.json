{"sha": "041a612dad70dbcc69189773ee396fcb55bda4f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0MWE2MTJkYWQ3MGRiY2M2OTE4OTc3M2VlMzk2ZmNiNTViZGE0ZjU=", "commit": {"author": {"name": "Gabriel Smith", "email": "gsmith@d3engineering.com", "date": "2019-11-18T19:22:00Z"}, "committer": {"name": "Gabriel Smith", "email": "gsmith@d3engineering.com", "date": "2019-11-18T22:01:33Z"}, "message": "resolve: Allow idents to resolve to primitives in the type namespace", "tree": {"sha": "60c8d006c741e71b5ba16b0bfd778936879607e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60c8d006c741e71b5ba16b0bfd778936879607e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/041a612dad70dbcc69189773ee396fcb55bda4f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/041a612dad70dbcc69189773ee396fcb55bda4f5", "html_url": "https://github.com/rust-lang/rust/commit/041a612dad70dbcc69189773ee396fcb55bda4f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/041a612dad70dbcc69189773ee396fcb55bda4f5/comments", "author": null, "committer": null, "parents": [{"sha": "a0d40f8bdfcc3c28355467973f97fd4c45ac5876", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0d40f8bdfcc3c28355467973f97fd4c45ac5876", "html_url": "https://github.com/rust-lang/rust/commit/a0d40f8bdfcc3c28355467973f97fd4c45ac5876"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "c49db39643bc799639676cd117a880c54b4497fd", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/041a612dad70dbcc69189773ee396fcb55bda4f5/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/041a612dad70dbcc69189773ee396fcb55bda4f5/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=041a612dad70dbcc69189773ee396fcb55bda4f5", "patch": "@@ -1726,6 +1726,14 @@ impl<'a> Resolver<'a> {\n             }\n         }\n \n+        if ns == TypeNS {\n+            if let Some(prim_ty) = self.primitive_type_table.primitive_types.get(&ident.name) {\n+                let binding = (Res::PrimTy(*prim_ty), ty::Visibility::Public,\n+                               DUMMY_SP, ExpnId::root()).to_name_binding(self.arenas);\n+                return Some(LexicalScopeBinding::Item(binding));\n+            }\n+        }\n+\n         None\n     }\n "}]}