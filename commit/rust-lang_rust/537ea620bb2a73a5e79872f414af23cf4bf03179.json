{"sha": "537ea620bb2a73a5e79872f414af23cf4bf03179", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzN2VhNjIwYmIyYTczYTVlNzk4NzJmNDE0YWYyM2NmNGJmMDMxNzk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-28T16:23:55Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-28T16:23:55Z"}, "message": "complete items from module scope", "tree": {"sha": "875b5c789e027615be5466a74bf7053a6798da0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/875b5c789e027615be5466a74bf7053a6798da0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/537ea620bb2a73a5e79872f414af23cf4bf03179", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/537ea620bb2a73a5e79872f414af23cf4bf03179", "html_url": "https://github.com/rust-lang/rust/commit/537ea620bb2a73a5e79872f414af23cf4bf03179", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/537ea620bb2a73a5e79872f414af23cf4bf03179/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d34588bf83898870d7f9b4b49ac2a5f71c77dabb", "url": "https://api.github.com/repos/rust-lang/rust/commits/d34588bf83898870d7f9b4b49ac2a5f71c77dabb", "html_url": "https://github.com/rust-lang/rust/commit/d34588bf83898870d7f9b4b49ac2a5f71c77dabb"}], "stats": {"total": 118, "additions": 100, "deletions": 18}, "files": [{"sha": "2756e472adde52e2612cb99388ddeb08e7d3af6a", "filename": "crates/libeditor/src/completion.rs", "status": "modified", "additions": 39, "deletions": 14, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/537ea620bb2a73a5e79872f414af23cf4bf03179/crates%2Flibeditor%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/537ea620bb2a73a5e79872f414af23cf4bf03179/crates%2Flibeditor%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fcompletion.rs?ref=537ea620bb2a73a5e79872f414af23cf4bf03179", "patch": "@@ -8,7 +8,7 @@ use libsyntax2::{\n \n use {\n     AtomEdit, find_node_at_offset,\n-    scope::FnScopes,\n+    scope::{FnScopes, ModuleScope},\n };\n \n #[derive(Debug)]\n@@ -24,18 +24,27 @@ pub fn scope_completion(file: &File, offset: TextUnit) -> Option<Vec<CompletionI\n         file.incremental_reparse(&edit)?\n     };\n     let name_ref = find_node_at_offset::<ast::NameRef>(file.syntax(), offset)?;\n-    let fn_def = ancestors(name_ref.syntax()).filter_map(ast::FnDef::cast).next()?;\n-    let scopes = FnScopes::new(fn_def);\n-    Some(complete(name_ref, &scopes))\n+    let mut res = Vec::new();\n+    if let Some(fn_def) = ancestors(name_ref.syntax()).filter_map(ast::FnDef::cast).next() {\n+        let scopes = FnScopes::new(fn_def);\n+        complete_fn(name_ref, &scopes, &mut res);\n+    }\n+    if let Some(root) = ancestors(name_ref.syntax()).filter_map(ast::Root::cast).next() {\n+        let scope = ModuleScope::new(root);\n+        res.extend(\n+            scope.entries().iter()\n+                .map(|entry| CompletionItem { name: entry.name().to_string() })\n+        )\n+    }\n+    Some(res)\n }\n \n-fn complete(name_ref: ast::NameRef, scopes: &FnScopes) -> Vec<CompletionItem> {\n-    scopes.scope_chain(name_ref.syntax())\n-        .flat_map(|scope| scopes.entries(scope).iter())\n-        .map(|entry| CompletionItem {\n-            name: entry.name().to_string()\n-        })\n-        .collect()\n+fn complete_fn(name_ref: ast::NameRef, scopes: &FnScopes, acc: &mut Vec<CompletionItem>) {\n+    acc.extend(\n+        scopes.scope_chain(name_ref.syntax())\n+            .flat_map(|scope| scopes.entries(scope).iter())\n+            .map(|entry| CompletionItem { name: entry.name().to_string() })\n+    )\n }\n \n #[cfg(test)]\n@@ -59,7 +68,8 @@ mod tests {\n                 let z = ();\n             }\n             \", r#\"[CompletionItem { name: \"y\" },\n-                   CompletionItem { name: \"x\" }]\"#);\n+                   CompletionItem { name: \"x\" },\n+                   CompletionItem { name: \"quux\" }]\"#);\n     }\n \n     #[test]\n@@ -75,7 +85,8 @@ mod tests {\n                 }\n             }\n             \", r#\"[CompletionItem { name: \"b\" },\n-                   CompletionItem { name: \"a\" }]\"#);\n+                   CompletionItem { name: \"a\" },\n+                   CompletionItem { name: \"quux\" }]\"#);\n     }\n \n     #[test]\n@@ -86,6 +97,20 @@ mod tests {\n                     <|>\n                 }\n             }\n-            \", r#\"[CompletionItem { name: \"x\" }]\"#);\n+            \", r#\"[CompletionItem { name: \"x\" },\n+                   CompletionItem { name: \"quux\" }]\"#);\n+    }\n+\n+    #[test]\n+    fn test_completion_mod_scope() {\n+        do_check(r\"\n+            struct Foo;\n+            enum Baz {}\n+            fn quux() {\n+                <|>\n+            }\n+            \", r#\"[CompletionItem { name: \"Foo\" },\n+                   CompletionItem { name: \"Baz\" },\n+                   CompletionItem { name: \"quux\" }]\"#);\n     }\n }"}, {"sha": "06dac9d6d046f63c083895c1269d1399f38c430e", "filename": "crates/libeditor/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/537ea620bb2a73a5e79872f414af23cf4bf03179/crates%2Flibeditor%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/537ea620bb2a73a5e79872f414af23cf4bf03179/crates%2Flibeditor%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Flib.rs?ref=537ea620bb2a73a5e79872f414af23cf4bf03179", "patch": "@@ -18,7 +18,7 @@ mod test_utils;\n \n use libsyntax2::{\n     File, TextUnit, TextRange, SyntaxNodeRef,\n-    ast::{AstNode, NameOwner},\n+    ast::{self, AstNode, NameOwner},\n     algo::{walk, find_leaf_at_offset, ancestors},\n     SyntaxKind::{self, *},\n };\n@@ -126,8 +126,8 @@ pub fn syntax_tree(file: &File) -> String {\n }\n \n pub fn runnables(file: &File) -> Vec<Runnable> {\n-    file.ast()\n-        .functions()\n+    walk::preorder(file.syntax())\n+        .filter_map(ast::FnDef::cast)\n         .filter_map(|f| {\n             let name = f.name()?.text();\n             let kind = if name == \"main\" {"}, {"sha": "2f25230f8f3290c4c3a4f6d74336f2a34399f8f4", "filename": "crates/libeditor/src/scope/mod.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/537ea620bb2a73a5e79872f414af23cf4bf03179/crates%2Flibeditor%2Fsrc%2Fscope%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/537ea620bb2a73a5e79872f414af23cf4bf03179/crates%2Flibeditor%2Fsrc%2Fscope%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fscope%2Fmod.rs?ref=537ea620bb2a73a5e79872f414af23cf4bf03179", "patch": "@@ -1,3 +1,8 @@\n mod fn_scope;\n+mod mod_scope;\n+\n+pub use self::{\n+    fn_scope::FnScopes,\n+    mod_scope::ModuleScope,\n+};\n \n-pub use self::fn_scope::FnScopes;"}, {"sha": "0e51108d984832a4f494c915126fd3aa9997e992", "filename": "crates/libeditor/src/scope/mod_scope.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/537ea620bb2a73a5e79872f414af23cf4bf03179/crates%2Flibeditor%2Fsrc%2Fscope%2Fmod_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/537ea620bb2a73a5e79872f414af23cf4bf03179/crates%2Flibeditor%2Fsrc%2Fscope%2Fmod_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fscope%2Fmod_scope.rs?ref=537ea620bb2a73a5e79872f414af23cf4bf03179", "patch": "@@ -0,0 +1,47 @@\n+use libsyntax2::{\n+    AstNode, SyntaxNode, SmolStr, ast\n+};\n+\n+pub struct ModuleScope {\n+    entries: Vec<Entry>,\n+}\n+\n+impl ModuleScope {\n+    pub fn new(m: ast::Root) -> ModuleScope {\n+        let entries = m.items().filter_map(|item| {\n+            match item {\n+                ast::ModuleItem::StructDef(item) => Entry::new(item),\n+                ast::ModuleItem::EnumDef(item) => Entry::new(item),\n+                ast::ModuleItem::FnDef(item) => Entry::new(item),\n+                ast::ModuleItem::TraitDef(item) => Entry::new(item),\n+                ast::ModuleItem::ExternCrateItem(_) |\n+                ast::ModuleItem::ImplItem(_) |\n+                ast::ModuleItem::UseItem(_) => None\n+            }\n+        }).collect();\n+\n+        ModuleScope { entries }\n+    }\n+\n+    pub fn entries(&self) -> &[Entry] {\n+        self.entries.as_slice()\n+    }\n+}\n+\n+pub struct Entry {\n+    name: SyntaxNode,\n+}\n+\n+impl Entry {\n+    fn new<'a>(item: impl ast::NameOwner<'a>) -> Option<Entry> {\n+        let name = item.name()?;\n+        Some(Entry { name: name.syntax().owned() })\n+    }\n+    pub fn name(&self) -> SmolStr {\n+        self.ast().text()\n+    }\n+    fn ast(&self) -> ast::Name {\n+        ast::Name::cast(self.name.borrowed()).unwrap()\n+    }\n+}\n+"}, {"sha": "2b400b8474f2848dbfcd8f6f86ce6f9ccc0a0f2c", "filename": "crates/libsyntax2/src/ast/generated.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/537ea620bb2a73a5e79872f414af23cf4bf03179/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/537ea620bb2a73a5e79872f414af23cf4bf03179/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs?ref=537ea620bb2a73a5e79872f414af23cf4bf03179", "patch": "@@ -1441,6 +1441,10 @@ impl<'a> AstNode<'a> for Root<'a> {\n }\n \n impl<'a> Root<'a> {\n+    pub fn items(self) -> impl Iterator<Item = ModuleItem<'a>> + 'a {\n+        super::children(self)\n+    }\n+\n     pub fn functions(self) -> impl Iterator<Item = FnDef<'a>> + 'a {\n         super::children(self)\n     }"}, {"sha": "8055a4687136dffb399150f02e3a12a7c08af58d", "filename": "crates/libsyntax2/src/grammar.ron", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/537ea620bb2a73a5e79872f414af23cf4bf03179/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/537ea620bb2a73a5e79872f414af23cf4bf03179/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron?ref=537ea620bb2a73a5e79872f414af23cf4bf03179", "patch": "@@ -238,6 +238,7 @@ Grammar(\n     ast: {\n         \"Root\": (\n             collections: [\n+                [\"items\", \"ModuleItem\"],\n                 [\"functions\", \"FnDef\"],\n                 [\"modules\", \"Module\"],\n             ]"}]}