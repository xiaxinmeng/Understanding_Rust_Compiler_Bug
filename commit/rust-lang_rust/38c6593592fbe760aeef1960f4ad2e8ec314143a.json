{"sha": "38c6593592fbe760aeef1960f4ad2e8ec314143a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4YzY1OTM1OTJmYmU3NjBhZWVmMTk2MGY0YWQyZThlYzMxNDE0M2E=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-03-24T14:37:24Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-03-24T14:37:24Z"}, "message": "Rollup merge of #32459 - nrc:json-err-text, r=nikomatsakis\n\nInclude source text in JSON errors", "tree": {"sha": "db966609ff2ba4579232984d66e3d2925911441d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db966609ff2ba4579232984d66e3d2925911441d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38c6593592fbe760aeef1960f4ad2e8ec314143a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38c6593592fbe760aeef1960f4ad2e8ec314143a", "html_url": "https://github.com/rust-lang/rust/commit/38c6593592fbe760aeef1960f4ad2e8ec314143a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38c6593592fbe760aeef1960f4ad2e8ec314143a/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3b9b42d44c1b8e613593860cea03a1ef97bf9e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3b9b42d44c1b8e613593860cea03a1ef97bf9e4", "html_url": "https://github.com/rust-lang/rust/commit/a3b9b42d44c1b8e613593860cea03a1ef97bf9e4"}, {"sha": "9757516f1206e127374b489c44d9ef26db7315b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9757516f1206e127374b489c44d9ef26db7315b0", "html_url": "https://github.com/rust-lang/rust/commit/9757516f1206e127374b489c44d9ef26db7315b0"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "212a54447a8610d8ca95436b690487fd6acc923c", "filename": "src/libsyntax/errors/json.rs", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/38c6593592fbe760aeef1960f4ad2e8ec314143a/src%2Flibsyntax%2Ferrors%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38c6593592fbe760aeef1960f4ad2e8ec314143a/src%2Flibsyntax%2Ferrors%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ferrors%2Fjson.rs?ref=38c6593592fbe760aeef1960f4ad2e8ec314143a", "patch": "@@ -20,7 +20,7 @@\n // FIXME spec the JSON output properly.\n \n \n-use codemap::{MultiSpan, CodeMap};\n+use codemap::{Span, MultiSpan, CodeMap};\n use diagnostics::registry::Registry;\n use errors::{Level, DiagnosticBuilder, SubDiagnostic, RenderSpan, CodeSuggestion};\n use errors::emitter::Emitter;\n@@ -99,6 +99,16 @@ struct DiagnosticSpan {\n     /// 1-based, character offset.\n     column_start: usize,\n     column_end: usize,\n+    /// Source text from the start of line_start to the end of line_end.\n+    text: Vec<DiagnosticSpanLine>,\n+}\n+\n+#[derive(RustcEncodable)]\n+struct DiagnosticSpanLine {\n+    text: String,\n+    /// 1-based, character offset in self.text.\n+    highlight_start: usize,\n+    highlight_end: usize,\n }\n \n #[derive(RustcEncodable)]\n@@ -180,6 +190,7 @@ impl DiagnosticSpan {\n                 line_end: end.line,\n                 column_start: start.col.0 + 1,\n                 column_end: end.col.0 + 1,\n+                text: DiagnosticSpanLine::from_span(span, je),\n             }\n         }).collect()\n     }\n@@ -202,6 +213,7 @@ impl DiagnosticSpan {\n                         line_end: end.line,\n                         column_start: 0,\n                         column_end: end.col.0 + 1,\n+                        text: DiagnosticSpanLine::from_span(span, je),\n                     }\n                 }).collect()\n             }\n@@ -217,13 +229,39 @@ impl DiagnosticSpan {\n                         line_end: end.line,\n                         column_start: 0,\n                         column_end: 0,\n+                        text: DiagnosticSpanLine::from_span(span, je),\n                     }\n                 }).collect()\n             }\n         }\n     }\n }\n \n+impl DiagnosticSpanLine {\n+    fn from_span(span: &Span, je: &JsonEmitter) -> Vec<DiagnosticSpanLine> {\n+        let lines = match je.cm.span_to_lines(*span) {\n+            Ok(lines) => lines,\n+            Err(_) => {\n+                debug!(\"unprintable span\");\n+                return Vec::new();\n+            }\n+        };\n+\n+        let mut result = Vec::new();\n+        let fm = &*lines.file;\n+\n+        for line in &lines.lines {\n+            result.push(DiagnosticSpanLine {\n+                text: fm.get_line(line.line_index).unwrap().to_owned(),\n+                highlight_start: line.start_col.0 + 1,\n+                highlight_end: line.end_col.0 + 1,\n+            });\n+        }\n+\n+        result\n+    }\n+}\n+\n impl DiagnosticCode {\n     fn map_opt_string(s: Option<String>, je: &JsonEmitter) -> Option<DiagnosticCode> {\n         s.map(|s| {"}, {"sha": "cd3a2af30ab8fa62be91200080adea59307ae39d", "filename": "src/test/run-make/json-errors/Makefile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/38c6593592fbe760aeef1960f4ad2e8ec314143a/src%2Ftest%2Frun-make%2Fjson-errors%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/38c6593592fbe760aeef1960f4ad2e8ec314143a/src%2Ftest%2Frun-make%2Fjson-errors%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fjson-errors%2FMakefile?ref=38c6593592fbe760aeef1960f4ad2e8ec314143a", "patch": "@@ -6,5 +6,5 @@ all:\n \tcp foo.rs $(TMPDIR)\n \tcd $(TMPDIR)\n \t-$(RUSTC) -Z unstable-options --error-format=json foo.rs 2>$(LOG)\n-\tgrep -q '{\"message\":\"unresolved name `y`\",\"code\":{\"code\":\"E0425\",\"explanation\":\"\\\\nAn unresolved name was used. Example of erroneous codes.*\"},\"level\":\"error\",\"spans\":\\[{\"file_name\":\"foo.rs\",\"byte_start\":496,\"byte_end\":497,\"line_start\":12,\"line_end\":12,\"column_start\":18,\"column_end\":19}\\],\"children\":\\[\\]}' $(LOG)\n-\tgrep -q '{\"message\":\".*\",\"code\":{\"code\":\"E0277\",\"explanation\":\"\\\\nYou tried.*\"},\"level\":\"error\",\"spans\":\\[{.*}\\],\"children\":\\[{\"message\":\"the .*\",\"code\":null,\"level\":\"help\",\"spans\":\\[{\"file_name\":\"foo.rs\",\"byte_start\":504,\"byte_end\":516,\"line_start\":14,\"line_end\":14,\"column_start\":0,\"column_end\":0}\\],\"children\":\\[\\]},{\"message\":\"  <u8 as core::ops::Add>\",\"code\":null,\"level\":\"help\",' $(LOG)\n+\tgrep -q '{\"message\":\"unresolved name `y`\",\"code\":{\"code\":\"E0425\",\"explanation\":\"\\\\nAn unresolved name was used. Example of erroneous codes.*\"},\"level\":\"error\",\"spans\":\\[{\"file_name\":\"foo.rs\",\"byte_start\":496,\"byte_end\":497,\"line_start\":12,\"line_end\":12,\"column_start\":18,\"column_end\":19,\"text\":\\[{\"text\":\"    let x = 42 + y;\",\"highlight_start\":18,\"highlight_end\":19}\\]}\\],\"children\":\\[\\]}' $(LOG)\n+\tgrep -q '{\"message\":\".*\",\"code\":{\"code\":\"E0277\",\"explanation\":\"\\\\nYou tried.*\"},\"level\":\"error\",\"spans\":\\[{.*}\\],\"children\":\\[{\"message\":\"the .*\",\"code\":null,\"level\":\"help\",\"spans\":\\[{\"file_name\":\"foo.rs\",\"byte_start\":504,\"byte_end\":516,\"line_start\":14,\"line_end\":14,\"column_start\":0,\"column_end\":0,\"text\":\\[{.*}\\]}\\],\"children\":\\[\\]},{\"message\":\"  <u8 as core::ops::Add>\",\"code\":null,\"level\":\"help\",' $(LOG)"}]}