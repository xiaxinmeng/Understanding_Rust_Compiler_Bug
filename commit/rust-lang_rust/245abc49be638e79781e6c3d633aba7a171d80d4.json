{"sha": "245abc49be638e79781e6c3d633aba7a171d80d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NWFiYzQ5YmU2MzhlNzk3ODFlNmMzZDYzM2FiYTdhMTcxZDgwZDQ=", "commit": {"author": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2019-11-13T05:35:45Z"}, "committer": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2019-12-02T13:41:30Z"}, "message": "Fix type errors cause during rebasing", "tree": {"sha": "3bc1adef16903a17283e477f12587620af7d74d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bc1adef16903a17283e477f12587620af7d74d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/245abc49be638e79781e6c3d633aba7a171d80d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/245abc49be638e79781e6c3d633aba7a171d80d4", "html_url": "https://github.com/rust-lang/rust/commit/245abc49be638e79781e6c3d633aba7a171d80d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/245abc49be638e79781e6c3d633aba7a171d80d4/comments", "author": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05dc5e9f47729b8bba89f7b0e2b54ea7dd1e1777", "url": "https://api.github.com/repos/rust-lang/rust/commits/05dc5e9f47729b8bba89f7b0e2b54ea7dd1e1777", "html_url": "https://github.com/rust-lang/rust/commit/05dc5e9f47729b8bba89f7b0e2b54ea7dd1e1777"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "73a9fd81c9b4f3fcc7b31969a87b008f9f254726", "filename": "src/librustc_mir/borrow_check/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/245abc49be638e79781e6c3d633aba7a171d80d4/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245abc49be638e79781e6c3d633aba7a171d80d4/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs?ref=245abc49be638e79781e6c3d633aba7a171d80d4", "patch": "@@ -1695,7 +1695,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             }\n         }\n         let mut visitor = FakeReadCauseFinder { place, cause: None };\n-        visitor.visit_body(&self.body);\n+        visitor.visit_body(self.body);\n         match visitor.cause {\n             Some(FakeReadCause::ForMatchGuard) => Some(\"match guard\"),\n             Some(FakeReadCause::ForIndex) => Some(\"indexing expression\"),"}, {"sha": "49ae759fd553199bf691413c298463e1ef444826", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/245abc49be638e79781e6c3d633aba7a171d80d4/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245abc49be638e79781e6c3d633aba7a171d80d4/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=245abc49be638e79781e6c3d633aba7a171d80d4", "patch": "@@ -41,11 +41,11 @@ use crate::transform::check_consts::{qualifs, Item, ConstKind, is_lang_panic_fn}\n /// newly created `StaticKind::Promoted`.\n #[derive(Default)]\n pub struct PromoteTemps<'tcx> {\n-    pub promoted_fragments: Cell<IndexVec<Promoted, Body<'tcx>>>,\n+    pub promoted_fragments: Cell<IndexVec<Promoted, BodyCache<'tcx>>>,\n }\n \n impl<'tcx> MirPass<'tcx> for PromoteTemps<'tcx> {\n-    fn run_pass(&self, tcx: TyCtxt<'tcx>, src: MirSource<'tcx>, body: &mut Body<'tcx>) {\n+    fn run_pass(&self, tcx: TyCtxt<'tcx>, src: MirSource<'tcx>, body: &mut BodyCache<'tcx>) {\n         // There's not really any point in promoting errorful MIR.\n         //\n         // This does not include MIR that failed const-checking, which we still try to promote."}, {"sha": "de070d75ad8e2a88d9f1e4260728e3890c7051b4", "filename": "src/librustc_mir/transform/uninhabited_enum_branching.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/245abc49be638e79781e6c3d633aba7a171d80d4/src%2Flibrustc_mir%2Ftransform%2Funinhabited_enum_branching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245abc49be638e79781e6c3d633aba7a171d80d4/src%2Flibrustc_mir%2Ftransform%2Funinhabited_enum_branching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Funinhabited_enum_branching.rs?ref=245abc49be638e79781e6c3d633aba7a171d80d4", "patch": "@@ -2,7 +2,8 @@\n \n use crate::transform::{MirPass, MirSource};\n use rustc::mir::{\n-    BasicBlock, BasicBlockData, Body, Local, Operand, Rvalue, StatementKind, TerminatorKind,\n+    BasicBlock, BasicBlockData, Body, BodyCache, Local, Operand, Rvalue, StatementKind,\n+    TerminatorKind,\n };\n use rustc::ty::layout::{Abi, TyLayout, Variants};\n use rustc::ty::{Ty, TyCtxt};\n@@ -65,7 +66,7 @@ fn variant_discriminants<'tcx>(\n }\n \n impl<'tcx> MirPass<'tcx> for UninhabitedEnumBranching {\n-    fn run_pass(&self, tcx: TyCtxt<'tcx>, source: MirSource<'tcx>, body: &mut Body<'tcx>) {\n+    fn run_pass(&self, tcx: TyCtxt<'tcx>, source: MirSource<'tcx>, body: &mut BodyCache<'tcx>) {\n         if source.promoted.is_some() {\n             return;\n         }"}]}