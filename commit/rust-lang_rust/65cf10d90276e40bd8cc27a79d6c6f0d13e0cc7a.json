{"sha": "65cf10d90276e40bd8cc27a79d6c6f0d13e0cc7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1Y2YxMGQ5MDI3NmU0MGJkOGNjMjdhNzlkNmM2ZjBkMTNlMGNjN2E=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-23T15:51:52Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-23T15:51:52Z"}, "message": "word things more like we usually do", "tree": {"sha": "c20cbf946908e2d40e55754cc10843ed0be4feed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c20cbf946908e2d40e55754cc10843ed0be4feed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65cf10d90276e40bd8cc27a79d6c6f0d13e0cc7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65cf10d90276e40bd8cc27a79d6c6f0d13e0cc7a", "html_url": "https://github.com/rust-lang/rust/commit/65cf10d90276e40bd8cc27a79d6c6f0d13e0cc7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65cf10d90276e40bd8cc27a79d6c6f0d13e0cc7a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd5045ed630b7577296087f09f559bb9c08f68e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd5045ed630b7577296087f09f559bb9c08f68e2", "html_url": "https://github.com/rust-lang/rust/commit/dd5045ed630b7577296087f09f559bb9c08f68e2"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d9a3da66a67868096011e29eac00e9328109c2f0", "filename": "src/libstd/primitive_docs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/65cf10d90276e40bd8cc27a79d6c6f0d13e0cc7a/src%2Flibstd%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65cf10d90276e40bd8cc27a79d6c6f0d13e0cc7a/src%2Flibstd%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprimitive_docs.rs?ref=65cf10d90276e40bd8cc27a79d6c6f0d13e0cc7a", "patch": "@@ -900,8 +900,8 @@ mod prim_usize { }\n /// For those familiar with pointers, a reference is just a pointer that is assumed to be\n /// aligned, not null, and pointing to memory containing a valid value of `T` - for example,\n /// `&bool` can only point to an allocation containing the integer values `1` (`true`) or `0`\n-/// (`false`), but the behavior of creating a `&bool` that points to an allocation containing\n-/// the value `3` is undefined.\n+/// (`false`), but creating a `&bool` that points to an allocation containing\n+/// the value `3` causes undefined behaviour.\n /// In fact, `Option<&T>` has the same memory representation as a\n /// nullable but aligned pointer, and can be passed across FFI boundaries as such.\n ///"}]}