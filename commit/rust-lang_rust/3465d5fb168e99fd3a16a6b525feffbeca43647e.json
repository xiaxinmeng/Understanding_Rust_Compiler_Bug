{"sha": "3465d5fb168e99fd3a16a6b525feffbeca43647e", "node_id": "C_kwDOAAsO6NoAKDM0NjVkNWZiMTY4ZTk5ZmQzYTE2YTZiNTI1ZmVmZmJlY2E0MzY0N2U", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-12-12T08:49:42Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-12-12T20:02:49Z"}, "message": "explain mem::forget(env_lock) in fork/exec", "tree": {"sha": "7449931576fd8330f1ee4397c90347e73f04dc40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7449931576fd8330f1ee4397c90347e73f04dc40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3465d5fb168e99fd3a16a6b525feffbeca43647e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3465d5fb168e99fd3a16a6b525feffbeca43647e", "html_url": "https://github.com/rust-lang/rust/commit/3465d5fb168e99fd3a16a6b525feffbeca43647e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3465d5fb168e99fd3a16a6b525feffbeca43647e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cd2070af7643ad88d280a4933bc4fb60451e521", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cd2070af7643ad88d280a4933bc4fb60451e521", "html_url": "https://github.com/rust-lang/rust/commit/2cd2070af7643ad88d280a4933bc4fb60451e521"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "c0716a089bc38b1b2b3be521c41165e259daeb46", "filename": "library/std/src/sys/unix/process/process_unix.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3465d5fb168e99fd3a16a6b525feffbeca43647e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3465d5fb168e99fd3a16a6b525feffbeca43647e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=3465d5fb168e99fd3a16a6b525feffbeca43647e", "patch": "@@ -66,14 +66,15 @@ impl Command {\n         //\n         // Note that as soon as we're done with the fork there's no need to hold\n         // a lock any more because the parent won't do anything and the child is\n-        // in its own process. Thus the parent drops the lock guard while the child\n-        // forgets it to avoid unlocking it on a new thread, which would be invalid.\n+        // in its own process. Thus the parent drops the lock guard immediately.\n+        // The child calls `mem::forget` to leak the lock, which is crucial because\n+        // releasing a lock is not async-signal-safe.\n         let env_lock = sys::os::env_read_lock();\n         let (pid, pidfd) = unsafe { self.do_fork()? };\n \n         if pid == 0 {\n             crate::panic::always_abort();\n-            mem::forget(env_lock);\n+            mem::forget(env_lock); // avoid non-async-signal-safe unlocking\n             drop(input);\n             let Err(err) = unsafe { self.do_exec(theirs, envp.as_ref()) };\n             let errno = err.raw_os_error().unwrap_or(libc::EINVAL) as u32;"}]}