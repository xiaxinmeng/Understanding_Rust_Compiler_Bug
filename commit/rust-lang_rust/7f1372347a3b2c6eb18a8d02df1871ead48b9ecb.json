{"sha": "7f1372347a3b2c6eb18a8d02df1871ead48b9ecb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmMTM3MjM0N2EzYjJjNmViMThhOGQwMmRmMTg3MWVhZDQ4YjllY2I=", "commit": {"author": {"name": "Mohsen Zohrevandi", "email": "mohsen.zohrevandi@fortanix.com", "date": "2020-04-23T01:21:23Z"}, "committer": {"name": "Mohsen Zohrevandi", "email": "mohsen.zohrevandi@fortanix.com", "date": "2020-04-23T01:23:40Z"}, "message": "Use lib crate type for SGX in `fn build_auxiliary`", "tree": {"sha": "8022a6e7786731cca385730e9d816314d596f938", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8022a6e7786731cca385730e9d816314d596f938"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f1372347a3b2c6eb18a8d02df1871ead48b9ecb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f1372347a3b2c6eb18a8d02df1871ead48b9ecb", "html_url": "https://github.com/rust-lang/rust/commit/7f1372347a3b2c6eb18a8d02df1871ead48b9ecb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f1372347a3b2c6eb18a8d02df1871ead48b9ecb/comments", "author": {"login": "mzohreva", "id": 1142455, "node_id": "MDQ6VXNlcjExNDI0NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1142455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzohreva", "html_url": "https://github.com/mzohreva", "followers_url": "https://api.github.com/users/mzohreva/followers", "following_url": "https://api.github.com/users/mzohreva/following{/other_user}", "gists_url": "https://api.github.com/users/mzohreva/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzohreva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzohreva/subscriptions", "organizations_url": "https://api.github.com/users/mzohreva/orgs", "repos_url": "https://api.github.com/users/mzohreva/repos", "events_url": "https://api.github.com/users/mzohreva/events{/privacy}", "received_events_url": "https://api.github.com/users/mzohreva/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mzohreva", "id": 1142455, "node_id": "MDQ6VXNlcjExNDI0NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1142455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzohreva", "html_url": "https://github.com/mzohreva", "followers_url": "https://api.github.com/users/mzohreva/followers", "following_url": "https://api.github.com/users/mzohreva/following{/other_user}", "gists_url": "https://api.github.com/users/mzohreva/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzohreva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzohreva/subscriptions", "organizations_url": "https://api.github.com/users/mzohreva/orgs", "repos_url": "https://api.github.com/users/mzohreva/repos", "events_url": "https://api.github.com/users/mzohreva/events{/privacy}", "received_events_url": "https://api.github.com/users/mzohreva/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db9b05aeb52b77d1eb780ee005979b63d093c214", "url": "https://api.github.com/repos/rust-lang/rust/commits/db9b05aeb52b77d1eb780ee005979b63d093c214", "html_url": "https://github.com/rust-lang/rust/commit/db9b05aeb52b77d1eb780ee005979b63d093c214"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "78d72e748b32e7b19deaa9105f2e14410ab18f39", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7f1372347a3b2c6eb18a8d02df1871ead48b9ecb/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f1372347a3b2c6eb18a8d02df1871ead48b9ecb/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=7f1372347a3b2c6eb18a8d02df1871ead48b9ecb", "patch": "@@ -1750,6 +1750,7 @@ impl<'test> TestCx<'test> {\n             || self.config.target.contains(\"wasm32\")\n             || self.config.target.contains(\"nvptx\")\n             || self.is_vxworks_pure_static()\n+            || self.config.target.contains(\"sgx\")\n         {\n             // We primarily compile all auxiliary libraries as dynamic libraries\n             // to avoid code size bloat and large binaries as much as possible"}]}