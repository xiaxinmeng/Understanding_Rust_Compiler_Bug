{"sha": "18356675e51ca1d01493718df3f6feed52f096a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MzU2Njc1ZTUxY2ExZDAxNDkzNzE4ZGYzZjZmZWVkNTJmMDk2YTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-12T14:42:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-12T14:42:03Z"}, "message": "auto merge of #12816 : michaelwoerister/rust/limited-debuginfo, r=alexcrichton\n\nFixes #12811 as described in the issue.", "tree": {"sha": "d341aa5974938a2c07a3e9f049cd69fac61d0c3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d341aa5974938a2c07a3e9f049cd69fac61d0c3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18356675e51ca1d01493718df3f6feed52f096a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18356675e51ca1d01493718df3f6feed52f096a9", "html_url": "https://github.com/rust-lang/rust/commit/18356675e51ca1d01493718df3f6feed52f096a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18356675e51ca1d01493718df3f6feed52f096a9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2e5135358ed462757d84504872aa92312769060", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2e5135358ed462757d84504872aa92312769060", "html_url": "https://github.com/rust-lang/rust/commit/c2e5135358ed462757d84504872aa92312769060"}, {"sha": "3ea50f0e36ea518e94dd4d3ec0e0be69e05e1358", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ea50f0e36ea518e94dd4d3ec0e0be69e05e1358", "html_url": "https://github.com/rust-lang/rust/commit/3ea50f0e36ea518e94dd4d3ec0e0be69e05e1358"}], "stats": {"total": 66, "additions": 38, "deletions": 28}, "files": [{"sha": "331677cf955d64138f57eba270ddb7e3606a9c85", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 35, "deletions": 25, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/18356675e51ca1d01493718df3f6feed52f096a9/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18356675e51ca1d01493718df3f6feed52f096a9/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=18356675e51ca1d01493718df3f6feed52f096a9", "patch": "@@ -39,9 +39,7 @@ use std::os;\n use std::vec_ng::Vec;\n use std::vec_ng;\n use collections::HashMap;\n-use getopts::{optopt, optmulti, optflag, optflagopt, opt};\n-use MaybeHasArg = getopts::Maybe;\n-use OccurOptional = getopts::Optional;\n+use getopts::{optopt, optmulti, optflag, optflagopt};\n use getopts;\n use syntax::ast;\n use syntax::abi;\n@@ -866,29 +864,41 @@ pub fn build_session_options(matches: &getopts::Matches)\n             }\n             Default\n         } else if matches.opt_present(\"opt-level\") {\n-            match matches.opt_str(\"opt-level\").unwrap() {\n-              ~\"0\" => No,\n-              ~\"1\" => Less,\n-              ~\"2\" => Default,\n-              ~\"3\" => Aggressive,\n-              _ => {\n-                early_error(\"optimization level needs to be between 0-3\")\n-              }\n+            match matches.opt_str(\"opt-level\").as_ref().map(|s| s.as_slice()) {\n+                None      |\n+                Some(\"0\") => No,\n+                Some(\"1\") => Less,\n+                Some(\"2\") => Default,\n+                Some(\"3\") => Aggressive,\n+                Some(arg) => {\n+                    early_error(format!(\"optimization level needs to be between 0-3 \\\n+                                        (instead was `{}`)\", arg));\n+                }\n             }\n-        } else { No }\n+        } else {\n+            No\n+        }\n     };\n     let gc = debugging_opts & session::GC != 0;\n \n-    let debuginfo = match matches.opt_default(\"debuginfo\", \"2\") {\n-        Some(level) => {\n-            match level {\n-                ~\"0\" => NoDebugInfo,\n-                ~\"1\" => LimitedDebugInfo,\n-                ~\"2\" => FullDebugInfo,\n-                _    => early_error(\"debug info level needs to be between 0-2\")\n+    let debuginfo = if matches.opt_present(\"g\") {\n+        if matches.opt_present(\"debuginfo\") {\n+            early_error(\"-g and --debuginfo both provided\");\n+        }\n+        FullDebugInfo\n+    } else if matches.opt_present(\"debuginfo\") {\n+        match matches.opt_str(\"debuginfo\").as_ref().map(|s| s.as_slice()) {\n+            Some(\"0\") => NoDebugInfo,\n+            Some(\"1\") => LimitedDebugInfo,\n+            None      |\n+            Some(\"2\") => FullDebugInfo,\n+            Some(arg) => {\n+                early_error(format!(\"optimization level needs to be between 0-3 \\\n+                                    (instead was `{}`)\", arg));\n             }\n         }\n-        None => NoDebugInfo\n+    } else {\n+        NoDebugInfo\n     };\n \n     let addl_lib_search_paths = matches.opt_strs(\"L\").map(|s| {\n@@ -1045,11 +1055,11 @@ pub fn optgroups() -> Vec<getopts::OptGroup> {\n   optflag(\"\", \"crate-file-name\", \"Output the file(s) that would be written if compilation \\\n           continued and exit\"),\n   optflag(\"\",  \"ls\",  \"List the symbols defined by a library crate\"),\n-  opt(\"g\",  \"debuginfo\",  \"Emit DWARF debug info to the objects created:\n-       0 = no debug info,\n-       1 = line-tables only (for stacktraces),\n-       2 = full debug info with variable, argument and type information\",\n-      \"LEVEL\", MaybeHasArg, OccurOptional),\n+  optflag(\"g\",  \"\",  \"Equivalent to --debuginfo=2\"),\n+  optopt(\"\",  \"debuginfo\",  \"Emit DWARF debug info to the objects created:\n+         0 = no debug info,\n+         1 = line-tables only (for stacktraces and breakpoints),\n+         2 = full debug info with variable and type information (same as -g)\", \"LEVEL\"),\n   optflag(\"\", \"no-trans\", \"Run all passes except translation; no output\"),\n   optflag(\"\", \"no-analysis\", \"Parse and expand the output, but run no analysis or produce output\"),\n   optflag(\"O\", \"\", \"Equivalent to --opt-level=2\"),"}, {"sha": "8308afce08e8b39a8b0167dcd38a913c868f48ae", "filename": "src/test/debug-info/issue7712.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18356675e51ca1d01493718df3f6feed52f096a9/src%2Ftest%2Fdebug-info%2Fissue7712.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18356675e51ca1d01493718df3f6feed52f096a9/src%2Ftest%2Fdebug-info%2Fissue7712.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fissue7712.rs?ref=18356675e51ca1d01493718df3f6feed52f096a9", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags:-g1\n+// compile-flags:--debuginfo=1\n \n pub trait TraitWithDefaultMethod {\n     fn method(self) {"}, {"sha": "fd0a156b45412660ddf745b53cf817247bd02df7", "filename": "src/test/debug-info/lexical-scope-in-parameterless-closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18356675e51ca1d01493718df3f6feed52f096a9/src%2Ftest%2Fdebug-info%2Flexical-scope-in-parameterless-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18356675e51ca1d01493718df3f6feed52f096a9/src%2Ftest%2Fdebug-info%2Flexical-scope-in-parameterless-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Flexical-scope-in-parameterless-closure.rs?ref=18356675e51ca1d01493718df3f6feed52f096a9", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-android: FIXME(#10381)\n \n-// compile-flags:-g1\n+// compile-flags:--debuginfo=1\n // debugger:run\n \n // Nothing to do here really, just make sure it compiles. See issue #8513."}, {"sha": "3102d9967178b008cace4a86720f513a4f06ae5d", "filename": "src/test/debug-info/limited-debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18356675e51ca1d01493718df3f6feed52f096a9/src%2Ftest%2Fdebug-info%2Flimited-debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18356675e51ca1d01493718df3f6feed52f096a9/src%2Ftest%2Fdebug-info%2Flimited-debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Flimited-debuginfo.rs?ref=18356675e51ca1d01493718df3f6feed52f096a9", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-android: FIXME(#10381)\n \n-// compile-flags:-g1\n+// compile-flags:--debuginfo=1\n \n // Make sure functions have proper names\n // debugger:info functions"}]}