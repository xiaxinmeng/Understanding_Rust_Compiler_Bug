{"sha": "94dbbacd45702d32c67c0d3be8d4874eadf300c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ZGJiYWNkNDU3MDJkMzJjNjdjMGQzYmU4ZDQ4NzRlYWRmMzAwYzg=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-12-03T22:43:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-03T22:43:48Z"}, "message": "Rollup merge of #46462 - sinkuu:copyprop_reg2, r=arielb1\n\nFix CopyPropagation regression (2)\n\nRemaining part of MIR copyprop regression by (I think) #45380, which I missed in #45753.\n\n```rust\nfn foo(mut x: i32) -> i32 {\n    let y = x;\n    x = 123; // `x` is assigned only once in MIR, but cannot be propagated to `y`\n    y\n}\n```\n\nSo any assignment to an argument cannot be propagated.", "tree": {"sha": "e038092ff6aa90fae8b840d0b4976a3afe3e62ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e038092ff6aa90fae8b840d0b4976a3afe3e62ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94dbbacd45702d32c67c0d3be8d4874eadf300c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94dbbacd45702d32c67c0d3be8d4874eadf300c8", "html_url": "https://github.com/rust-lang/rust/commit/94dbbacd45702d32c67c0d3be8d4874eadf300c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94dbbacd45702d32c67c0d3be8d4874eadf300c8/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c4f74d16e80a584a648425b9dec1b413d0584cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c4f74d16e80a584a648425b9dec1b413d0584cf", "html_url": "https://github.com/rust-lang/rust/commit/7c4f74d16e80a584a648425b9dec1b413d0584cf"}, {"sha": "17d6631c02a297b187d75817b4cfe4d2b3c6c9de", "url": "https://api.github.com/repos/rust-lang/rust/commits/17d6631c02a297b187d75817b4cfe4d2b3c6c9de", "html_url": "https://github.com/rust-lang/rust/commit/17d6631c02a297b187d75817b4cfe4d2b3c6c9de"}], "stats": {"total": 87, "additions": 57, "deletions": 30}, "files": [{"sha": "95fe99a1bec9f6998fe210e03b92b12d7f37fca6", "filename": "src/librustc_mir/transform/copy_prop.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/94dbbacd45702d32c67c0d3be8d4874eadf300c8/src%2Flibrustc_mir%2Ftransform%2Fcopy_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94dbbacd45702d32c67c0d3be8d4874eadf300c8/src%2Flibrustc_mir%2Ftransform%2Fcopy_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcopy_prop.rs?ref=94dbbacd45702d32c67c0d3be8d4874eadf300c8", "patch": "@@ -239,10 +239,13 @@ impl<'tcx> Action<'tcx> {\n         //     USE(SRC);\n         let src_def_count = src_use_info.def_count_not_including_drop();\n         // allow function arguments to be propagated\n-        if src_def_count > 1 ||\n-            (src_def_count == 0 && mir.local_kind(src_local) != LocalKind::Arg) {\n-            debug!(\"  Can't copy-propagate local: {} defs of src\",\n-                   src_use_info.def_count_not_including_drop());\n+        let is_arg = mir.local_kind(src_local) == LocalKind::Arg;\n+        if (is_arg && src_def_count != 0) || (!is_arg && src_def_count != 1) {\n+            debug!(\n+                \"  Can't copy-propagate local: {} defs of src{}\",\n+                src_def_count,\n+                if is_arg { \" (argument)\" } else { \"\" },\n+            );\n             return None\n         }\n "}, {"sha": "35bb231df5adfcad15ca8d1e76b77622cdf09c11", "filename": "src/test/mir-opt/copy_propagation_arg.rs", "status": "modified", "additions": 50, "deletions": 26, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/94dbbacd45702d32c67c0d3be8d4874eadf300c8/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94dbbacd45702d32c67c0d3be8d4874eadf300c8/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg.rs?ref=94dbbacd45702d32c67c0d3be8d4874eadf300c8", "patch": "@@ -30,42 +30,43 @@ fn baz(mut x: i32) {\n     x = x;\n }\n \n+fn arg_src(mut x: i32) -> i32 {\n+    let y = x;\n+    x = 123; // Don't propagate this assignment to `y`\n+    y\n+}\n+\n fn main() {\n     // Make sure the function actually gets instantiated.\n     foo(0);\n     bar(0);\n     baz(0);\n+    arg_src(0);\n }\n \n // END RUST SOURCE\n // START rustc.foo.CopyPropagation.before.mir\n // bb0: {\n-//     StorageLive(_2);\n-//     StorageLive(_3);\n+//     ...\n //     _3 = _1;\n //     _2 = const dummy(move _3) -> bb1;\n // }\n // bb1: {\n-//     StorageDead(_3);\n+//     ...\n //     _1 = move _2;\n-//     StorageDead(_2);\n-//     _0 = ();\n-//     return;\n+//     ...\n // }\n // END rustc.foo.CopyPropagation.before.mir\n // START rustc.foo.CopyPropagation.after.mir\n // bb0: {\n-//     StorageLive(_2);\n-//     nop;\n-//     nop;\n-//     _2 = const dummy(move _1) -> bb1;\n+//     ...\n+//     _3 = _1;\n+//     _2 = const dummy(move _3) -> bb1;\n // }\n // bb1: {\n-//     nop;\n+//     ...\n //     _1 = move _2;\n-//     StorageDead(_2);\n-//     _0 = ();\n-//     return;\n+//     ...\n // }\n // END rustc.foo.CopyPropagation.after.mir\n // START rustc.bar.CopyPropagation.before.mir\n@@ -83,15 +84,14 @@ fn main() {\n // END rustc.bar.CopyPropagation.before.mir\n // START rustc.bar.CopyPropagation.after.mir\n // bb0: {\n-//     nop;\n-//     nop;\n-//     _2 = const dummy(move _1) -> bb1;\n+//     ...\n+//     _3 = _1;\n+//     _2 = const dummy(move _3) -> bb1;\n // }\n // bb1: {\n-//     nop;\n+//     ...\n //     _1 = const 5u8;\n-//     _0 = ();\n-//     return;\n+//     ...\n // }\n // END rustc.bar.CopyPropagation.after.mir\n // START rustc.baz.CopyPropagation.before.mir\n@@ -106,11 +106,35 @@ fn main() {\n // END rustc.baz.CopyPropagation.before.mir\n // START rustc.baz.CopyPropagation.after.mir\n // bb0: {\n-//     nop;\n-//     nop;\n-//     nop;\n-//     nop;\n-//     _0 = ();\n-//     return;\n+//     ...\n+//     _2 = _1;\n+//     _1 = move _2;\n+//     ...\n // }\n // END rustc.baz.CopyPropagation.after.mir\n+// START rustc.arg_src.CopyPropagation.before.mir\n+// bb0: {\n+//       ...\n+//       _3 = _1;\n+//       _2 = move _3;\n+//       ...\n+//       _1 = const 123i32;\n+//       ...\n+//       _4 = _2;\n+//       _0 = move _4;\n+//       ...\n+//       return;\n+//   }\n+// END rustc.arg_src.CopyPropagation.before.mir\n+// START rustc.arg_src.CopyPropagation.after.mir\n+// bb0: {\n+//     ...\n+//     _3 = _1;\n+//     ...\n+//     _1 = const 123i32;\n+//     ...\n+//     _0 = move _3;\n+//     ...\n+//     return;\n+// }\n+// END rustc.arg_src.CopyPropagation.after.mir"}]}