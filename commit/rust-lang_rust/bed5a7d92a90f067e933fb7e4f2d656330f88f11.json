{"sha": "bed5a7d92a90f067e933fb7e4f2d656330f88f11", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlZDVhN2Q5MmE5MGYwNjdlOTMzZmI3ZTRmMmQ2NTYzMzBmODhmMTE=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-10-26T01:33:56Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-10-26T02:23:39Z"}, "message": "Add MemWriter::from_vec", "tree": {"sha": "84c743b0aa06f2ae7ae2a54a758aa296faa91fd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84c743b0aa06f2ae7ae2a54a758aa296faa91fd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bed5a7d92a90f067e933fb7e4f2d656330f88f11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bed5a7d92a90f067e933fb7e4f2d656330f88f11", "html_url": "https://github.com/rust-lang/rust/commit/bed5a7d92a90f067e933fb7e4f2d656330f88f11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bed5a7d92a90f067e933fb7e4f2d656330f88f11/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80e5fe1a56bb95e8e89d5f8f0ff5122583bb5336", "url": "https://api.github.com/repos/rust-lang/rust/commits/80e5fe1a56bb95e8e89d5f8f0ff5122583bb5336", "html_url": "https://github.com/rust-lang/rust/commit/80e5fe1a56bb95e8e89d5f8f0ff5122583bb5336"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "dd4a3e0593594100dacb97bcf0f56ef26a1acf4f", "filename": "src/libstd/io/mem.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bed5a7d92a90f067e933fb7e4f2d656330f88f11/src%2Flibstd%2Fio%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bed5a7d92a90f067e933fb7e4f2d656330f88f11/src%2Flibstd%2Fio%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmem.rs?ref=bed5a7d92a90f067e933fb7e4f2d656330f88f11", "patch": "@@ -22,7 +22,7 @@ use slice;\n use slice::AsSlice;\n use vec::Vec;\n \n-static BUF_CAPACITY: uint = 128;\n+const BUF_CAPACITY: uint = 128;\n \n fn combine(seek: SeekStyle, cur: uint, end: uint, offset: i64) -> IoResult<u64> {\n     // compute offset as signed and clamp to prevent overflow\n@@ -71,7 +71,12 @@ impl MemWriter {\n     /// the internal buffer.\n     #[inline]\n     pub fn with_capacity(n: uint) -> MemWriter {\n-        MemWriter { buf: Vec::with_capacity(n) }\n+        MemWriter::from_vec(Vec::with_capacity(n))\n+    }\n+    /// Create a new `MemWriter` that will append to an existing `Vec`.\n+    #[inline]\n+    pub fn from_vec(buf: Vec<u8>) -> MemWriter {\n+        MemWriter { buf: buf }\n     }\n \n     /// Acquires an immutable reference to the underlying buffer of this"}]}