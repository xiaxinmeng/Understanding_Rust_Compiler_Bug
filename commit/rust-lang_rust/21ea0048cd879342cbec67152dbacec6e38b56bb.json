{"sha": "21ea0048cd879342cbec67152dbacec6e38b56bb", "node_id": "C_kwDOAAsO6NoAKDIxZWEwMDQ4Y2Q4NzkzNDJjYmVjNjcxNTJkYmFjZWM2ZTM4YjU2YmI", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-01-04T09:20:15Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-01-04T09:22:01Z"}, "message": "fix: unescape inline module names in module resolution", "tree": {"sha": "752c394c6ea4d31a661b6f7d7596f82faceb0d7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/752c394c6ea4d31a661b6f7d7596f82faceb0d7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21ea0048cd879342cbec67152dbacec6e38b56bb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmO1RUQACgkQ4laYqTBY\nYXGROg/6A9oL1tL7LJf/2ZN9QlejlnxrhC5NRvY/UbuEYt75vGdWXJFxFbDqK+zZ\nZIDt2Pi0Ny7ljBzSvwCNAFxTHUAqwltIkYy5KhUEb7Km31NCGv4gB5csjj3XnN5Z\n2kQHgDWTgvHkGMizwVI4ifEa9nweJWUMzLFXrzvJoMc4fdEBdRG/ECvj1Bix1M1i\nelSw4LgslEyJ1Gpr3IAmHg+8wgZiq47bbcOG1Rtu+y089jG/YZDP8wKdrWBicN5B\nA4WDRirgdsmTOR0NMq79Ii2EApOWfZYnwKSuT7Nm/92lA5FrED2StNdf9XygC+gv\nlZNbz/Pec/q0CyuVLrHkiHYQ7ZYH/Ih9DBuNlFiKyUzeeaobAkUp5DQMmYlPDVTi\nFTNKgTBVgGEBUS0rZ39yhHHGSGDT1AAhU4ZKsNYYbu/ltAl8f3NXHWvDyD9eUISh\ngk14brWKbrU4j3qk6IygDHOL1JCHkJnhhUGl+gv0+3c1Kl2LcZ6nBAKOtJNSB0Lr\nJtMKydiwr6dscVh5KU7+TIvRaGDR7EFAo7Lk44G+O0jCb0aFxf/GurBc1ys1lowa\nEg6mZw2enG8AE5yT4xcmtNKthoHQNgOmTPy46BMd/EbfYx0xhfY5A9s12jwpYBHc\nXKgXfSlhyAI4+fCEN8UCV/bjKHMZZbtKRVC44gNzr1N2qU7/4as=\n=2Nfm\n-----END PGP SIGNATURE-----", "payload": "tree 752c394c6ea4d31a661b6f7d7596f82faceb0d7c\nparent 643bc02ded7141a462bc0c9357c8914f9d50fb06\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1672824015 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1672824121 +0900\n\nfix: unescape inline module names in module resolution\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21ea0048cd879342cbec67152dbacec6e38b56bb", "html_url": "https://github.com/rust-lang/rust/commit/21ea0048cd879342cbec67152dbacec6e38b56bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21ea0048cd879342cbec67152dbacec6e38b56bb/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "643bc02ded7141a462bc0c9357c8914f9d50fb06", "url": "https://api.github.com/repos/rust-lang/rust/commits/643bc02ded7141a462bc0c9357c8914f9d50fb06", "html_url": "https://github.com/rust-lang/rust/commit/643bc02ded7141a462bc0c9357c8914f9d50fb06"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "4c263846d27d2a617324235d758a3d3fdbc05842", "filename": "crates/hir-def/src/nameres/mod_resolution.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21ea0048cd879342cbec67152dbacec6e38b56bb/crates%2Fhir-def%2Fsrc%2Fnameres%2Fmod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21ea0048cd879342cbec67152dbacec6e38b56bb/crates%2Fhir-def%2Fsrc%2Fnameres%2Fmod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fnameres%2Fmod_resolution.rs?ref=21ea0048cd879342cbec67152dbacec6e38b56bb", "patch": "@@ -34,7 +34,7 @@ impl ModDir {\n         let path = match attr_path.map(SmolStr::as_str) {\n             None => {\n                 let mut path = self.dir_path.clone();\n-                path.push(&name.to_smol_str());\n+                path.push(&name.unescaped().to_smol_str());\n                 path\n             }\n             Some(attr_path) => {"}, {"sha": "a0193128847876705917764eb8210d83004f56aa", "filename": "crates/hir-def/src/nameres/tests/mod_resolution.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/21ea0048cd879342cbec67152dbacec6e38b56bb/crates%2Fhir-def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21ea0048cd879342cbec67152dbacec6e38b56bb/crates%2Fhir-def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs?ref=21ea0048cd879342cbec67152dbacec6e38b56bb", "patch": "@@ -156,6 +156,43 @@ pub struct Baz;\n     );\n }\n \n+#[test]\n+fn module_resolution_works_for_inline_raw_modules() {\n+    check(\n+        r#\"\n+//- /lib.rs\n+mod r#async {\n+    pub mod a;\n+    pub mod r#async;\n+}\n+use self::r#async::a::Foo;\n+use self::r#async::r#async::Bar;\n+\n+//- /async/a.rs\n+pub struct Foo;\n+\n+//- /async/async.rs\n+pub struct Bar;\n+\"#,\n+        expect![[r#\"\n+            crate\n+            Bar: t v\n+            Foo: t v\n+            r#async: t\n+\n+            crate::r#async\n+            a: t\n+            r#async: t\n+\n+            crate::r#async::a\n+            Foo: t v\n+\n+            crate::r#async::r#async\n+            Bar: t v\n+        \"#]],\n+    );\n+}\n+\n #[test]\n fn module_resolution_decl_path() {\n     check("}]}