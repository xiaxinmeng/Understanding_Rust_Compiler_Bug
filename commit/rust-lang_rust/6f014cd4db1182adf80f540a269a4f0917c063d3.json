{"sha": "6f014cd4db1182adf80f540a269a4f0917c063d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmMDE0Y2Q0ZGIxMTgyYWRmODBmNTQwYTI2OWE0ZjA5MTdjMDYzZDM=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-02-04T20:10:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-04T20:10:44Z"}, "message": "Rollup merge of #81745 - Kixunil:stabilize_once_poison, r=m-ou-se\n\nStabilize poison API of Once, rename poisoned()\n\nThis stabilizes:\n\n* `OnceState`\n* `OnceState::is_poisoned()` (previously named `poisoned()`)\n* `Once::call_once_force()`\n\n`poisoned()` was renamed because the new name is more clear as a few\npeople agreed and nobody objected.\n\nCloses #33577\n\nNotes:\n\n* I'm not entirely sure it's supposed to be 1.51, LMK if I did it wrong\n* I failed to run tests locally, so we will have to leave it to bors or someone else can try", "tree": {"sha": "33187bd541b2cbcde19d5e1bb942ac27b2b0a688", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33187bd541b2cbcde19d5e1bb942ac27b2b0a688"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f014cd4db1182adf80f540a269a4f0917c063d3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgHFTECRBK7hj4Ov3rIwAAdHIIABMmrZgj9UzFfORurBby3kna\n9mHYti2yEOEv2N5UhN7cWsEFlneQ/AKxlQQ8idQ5aui8mPS80PcROqa0PzkYliQ0\nUlzjvFjkGBij/MR9Ie35w30vR6wlv6isNO1c30ZjSXEAREBh8CpUfdF9IFuQbe3q\nLXwWeduaXsGxiHFk7hnbJFRsqn4WmKo0TW2OZnCaUGLcacaI+tUbhoGkhggNMVgH\nu5lTt5Cu7xIbOsagBaTJqlWOx38/ainVFF/UQNWmGaR9ukaptfp0dqpUiyum3BGB\nXrx+8JxvGqrlQsdWJ41lHAc3H8EcPYgtC2HaORJKTk/ZjzzFt1IlLf5roDT9tq8=\n=/5S5\n-----END PGP SIGNATURE-----\n", "payload": "tree 33187bd541b2cbcde19d5e1bb942ac27b2b0a688\nparent 113e27fcfcf20d3c241ca40c0f8c214aa578014d\nparent f42e96149dd03e816b8bc3c329e7b9a5d12fcdab\nauthor Mara Bos <m-ou.se@m-ou.se> 1612469444 +0100\ncommitter GitHub <noreply@github.com> 1612469444 +0100\n\nRollup merge of #81745 - Kixunil:stabilize_once_poison, r=m-ou-se\n\nStabilize poison API of Once, rename poisoned()\n\nThis stabilizes:\n\n* `OnceState`\n* `OnceState::is_poisoned()` (previously named `poisoned()`)\n* `Once::call_once_force()`\n\n`poisoned()` was renamed because the new name is more clear as a few\npeople agreed and nobody objected.\n\nCloses #33577\n\nNotes:\n\n* I'm not entirely sure it's supposed to be 1.51, LMK if I did it wrong\n* I failed to run tests locally, so we will have to leave it to bors or someone else can try\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f014cd4db1182adf80f540a269a4f0917c063d3", "html_url": "https://github.com/rust-lang/rust/commit/6f014cd4db1182adf80f540a269a4f0917c063d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f014cd4db1182adf80f540a269a4f0917c063d3/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "113e27fcfcf20d3c241ca40c0f8c214aa578014d", "url": "https://api.github.com/repos/rust-lang/rust/commits/113e27fcfcf20d3c241ca40c0f8c214aa578014d", "html_url": "https://github.com/rust-lang/rust/commit/113e27fcfcf20d3c241ca40c0f8c214aa578014d"}, {"sha": "f42e96149dd03e816b8bc3c329e7b9a5d12fcdab", "url": "https://api.github.com/repos/rust-lang/rust/commits/f42e96149dd03e816b8bc3c329e7b9a5d12fcdab", "html_url": "https://github.com/rust-lang/rust/commit/f42e96149dd03e816b8bc3c329e7b9a5d12fcdab"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "2e5f843fc43cb8ba712ac3107680655b65bb80b1", "filename": "library/std/src/sync/once.rs", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6f014cd4db1182adf80f540a269a4f0917c063d3/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f014cd4db1182adf80f540a269a4f0917c063d3/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fonce.rs?ref=6f014cd4db1182adf80f540a269a4f0917c063d3", "patch": "@@ -125,7 +125,7 @@ unsafe impl Send for Once {}\n \n /// State yielded to [`Once::call_once_force()`]\u2019s closure parameter. The state\n /// can be used to query the poison status of the [`Once`].\n-#[unstable(feature = \"once_poison\", issue = \"33577\")]\n+#[stable(feature = \"once_poison\", since = \"1.51.0\")]\n #[derive(Debug)]\n pub struct OnceState {\n     poisoned: bool,\n@@ -280,8 +280,6 @@ impl Once {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(once_poison)]\n-    ///\n     /// use std::sync::Once;\n     /// use std::thread;\n     ///\n@@ -301,13 +299,13 @@ impl Once {\n     ///\n     /// // call_once_force will still run and reset the poisoned state\n     /// INIT.call_once_force(|state| {\n-    ///     assert!(state.poisoned());\n+    ///     assert!(state.is_poisoned());\n     /// });\n     ///\n     /// // once any success happens, we stop propagating the poison\n     /// INIT.call_once(|| {});\n     /// ```\n-    #[unstable(feature = \"once_poison\", issue = \"33577\")]\n+    #[stable(feature = \"once_poison\", since = \"1.51.0\")]\n     pub fn call_once_force<F>(&self, f: F)\n     where\n         F: FnOnce(&OnceState),\n@@ -526,8 +524,6 @@ impl OnceState {\n     /// A poisoned [`Once`]:\n     ///\n     /// ```\n-    /// #![feature(once_poison)]\n-    ///\n     /// use std::sync::Once;\n     /// use std::thread;\n     ///\n@@ -540,24 +536,22 @@ impl OnceState {\n     /// assert!(handle.join().is_err());\n     ///\n     /// INIT.call_once_force(|state| {\n-    ///     assert!(state.poisoned());\n+    ///     assert!(state.is_poisoned());\n     /// });\n     /// ```\n     ///\n     /// An unpoisoned [`Once`]:\n     ///\n     /// ```\n-    /// #![feature(once_poison)]\n-    ///\n     /// use std::sync::Once;\n     ///\n     /// static INIT: Once = Once::new();\n     ///\n     /// INIT.call_once_force(|state| {\n-    ///     assert!(!state.poisoned());\n+    ///     assert!(!state.is_poisoned());\n     /// });\n-    #[unstable(feature = \"once_poison\", issue = \"33577\")]\n-    pub fn poisoned(&self) -> bool {\n+    #[stable(feature = \"once_poison\", since = \"1.51.0\")]\n+    pub fn is_poisoned(&self) -> bool {\n         self.poisoned\n     }\n "}, {"sha": "0c35597e11c5126e0ebfe028e1ec36536ff4b097", "filename": "library/std/src/sync/once/tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f014cd4db1182adf80f540a269a4f0917c063d3/library%2Fstd%2Fsrc%2Fsync%2Fonce%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f014cd4db1182adf80f540a269a4f0917c063d3/library%2Fstd%2Fsrc%2Fsync%2Fonce%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fonce%2Ftests.rs?ref=6f014cd4db1182adf80f540a269a4f0917c063d3", "patch": "@@ -69,7 +69,7 @@ fn poison_bad() {\n     let mut called = false;\n     O.call_once_force(|p| {\n         called = true;\n-        assert!(p.poisoned())\n+        assert!(p.is_poisoned())\n     });\n     assert!(called);\n \n@@ -92,7 +92,7 @@ fn wait_for_force_to_finish() {\n     let (tx2, rx2) = channel();\n     let t1 = thread::spawn(move || {\n         O.call_once_force(|p| {\n-            assert!(p.poisoned());\n+            assert!(p.is_poisoned());\n             tx1.send(()).unwrap();\n             rx2.recv().unwrap();\n         });"}]}