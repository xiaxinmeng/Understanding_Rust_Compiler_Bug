{"sha": "e158ce8a9d49767cddf58c3e656d382e16aa232e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxNThjZThhOWQ0OTc2N2NkZGY1OGMzZTY1NmQzODJlMTZhYTIzMmU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-06-08T01:27:10Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-06-08T01:27:10Z"}, "message": "Add neg() to the num iface", "tree": {"sha": "d3b227cf16dc13235c2793dbec74de0a99314d66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3b227cf16dc13235c2793dbec74de0a99314d66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e158ce8a9d49767cddf58c3e656d382e16aa232e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e158ce8a9d49767cddf58c3e656d382e16aa232e", "html_url": "https://github.com/rust-lang/rust/commit/e158ce8a9d49767cddf58c3e656d382e16aa232e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e158ce8a9d49767cddf58c3e656d382e16aa232e/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8b113f209006e595e13c1baa1557c1fbedad46d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8b113f209006e595e13c1baa1557c1fbedad46d", "html_url": "https://github.com/rust-lang/rust/commit/d8b113f209006e595e13c1baa1557c1fbedad46d"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "e1d300819667497aa6c266d96533de5a4eff42b7", "filename": "src/libcore/f32.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e158ce8a9d49767cddf58c3e656d382e16aa232e/src%2Flibcore%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e158ce8a9d49767cddf58c3e656d382e16aa232e/src%2Flibcore%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ff32.rs?ref=e158ce8a9d49767cddf58c3e656d382e16aa232e", "patch": "@@ -184,6 +184,7 @@ impl num of num for f32 {\n     fn mul(&&other: f32)    -> f32 { ret self * other; }\n     fn div(&&other: f32)    -> f32 { ret self / other; }\n     fn modulo(&&other: f32) -> f32 { ret self % other; }\n+    fn neg()                -> f32 { ret -self;        }\n \n     fn to_int()         -> int { ret self as int; }\n     fn from_int(n: int) -> f32 { ret n as f32;    }"}, {"sha": "af83a0829e138c1333aa6c858a9493a947d44c90", "filename": "src/libcore/f64.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e158ce8a9d49767cddf58c3e656d382e16aa232e/src%2Flibcore%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e158ce8a9d49767cddf58c3e656d382e16aa232e/src%2Flibcore%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ff64.rs?ref=e158ce8a9d49767cddf58c3e656d382e16aa232e", "patch": "@@ -205,6 +205,7 @@ impl num of num for f64 {\n     fn mul(&&other: f64)    -> f64 { ret self * other; }\n     fn div(&&other: f64)    -> f64 { ret self / other; }\n     fn modulo(&&other: f64) -> f64 { ret self % other; }\n+    fn neg()                -> f64 { ret -self;        }\n \n     fn to_int()         -> int { ret self as int; }\n     fn from_int(n: int) -> f64 { ret n as f64;    }"}, {"sha": "d55c0e0c37111cc5b50c2b1c786492c8898a4146", "filename": "src/libcore/float.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e158ce8a9d49767cddf58c3e656d382e16aa232e/src%2Flibcore%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e158ce8a9d49767cddf58c3e656d382e16aa232e/src%2Flibcore%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffloat.rs?ref=e158ce8a9d49767cddf58c3e656d382e16aa232e", "patch": "@@ -416,6 +416,7 @@ impl num of num for float {\n     fn mul(&&other: float)    -> float { ret self * other; }\n     fn div(&&other: float)    -> float { ret self / other; }\n     fn modulo(&&other: float) -> float { ret self % other; }\n+    fn neg()                  -> float { ret -self;        }\n \n     fn to_int()         -> int   { ret self as int; }\n     fn from_int(n: int) -> float { ret n as float;  }"}, {"sha": "556b9944dde4d8ecca2bcd051b02d772dc32dc4e", "filename": "src/libcore/int-template.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e158ce8a9d49767cddf58c3e656d382e16aa232e/src%2Flibcore%2Fint-template.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e158ce8a9d49767cddf58c3e656d382e16aa232e/src%2Flibcore%2Fint-template.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fint-template.rs?ref=e158ce8a9d49767cddf58c3e656d382e16aa232e", "patch": "@@ -129,6 +129,7 @@ impl num of num for T {\n     fn mul(&&other: T)    -> T { ret self * other; }\n     fn div(&&other: T)    -> T { ret self / other; }\n     fn modulo(&&other: T) -> T { ret self % other; }\n+    fn neg()              -> T { ret -self;        }\n \n     fn to_int()         -> int { ret self as int; }\n     fn from_int(n: int) -> T   { ret n as T;      }"}, {"sha": "eb5073c14b891d7a5acb72e3aa393b9502915f78", "filename": "src/libcore/num.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e158ce8a9d49767cddf58c3e656d382e16aa232e/src%2Flibcore%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e158ce8a9d49767cddf58c3e656d382e16aa232e/src%2Flibcore%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum.rs?ref=e158ce8a9d49767cddf58c3e656d382e16aa232e", "patch": "@@ -8,6 +8,7 @@ iface num {\n     fn mul(&&other: self) -> self;\n     fn div(&&other: self) -> self;\n     fn modulo(&&other: self) -> self;\n+    fn neg() -> self;\n \n     fn to_int() -> int;\n     fn from_int(n: int) -> self;    // TODO: Static functions."}, {"sha": "d1d238d298ca832c3e2a5dbc711257525c587203", "filename": "src/libcore/uint-template.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e158ce8a9d49767cddf58c3e656d382e16aa232e/src%2Flibcore%2Fuint-template.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e158ce8a9d49767cddf58c3e656d382e16aa232e/src%2Flibcore%2Fuint-template.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fuint-template.rs?ref=e158ce8a9d49767cddf58c3e656d382e16aa232e", "patch": "@@ -70,6 +70,7 @@ impl num of num for T {\n     fn mul(&&other: T)    -> T { ret self * other; }\n     fn div(&&other: T)    -> T { ret self / other; }\n     fn modulo(&&other: T) -> T { ret self % other; }\n+    fn neg()              -> T { ret -self;        }\n \n     fn to_int()         -> int { ret self as int; }\n     fn from_int(n: int) -> T   { ret n as T;      }"}]}