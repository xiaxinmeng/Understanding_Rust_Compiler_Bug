{"sha": "c89010df2d586eec33b50f3afcc4b2226da32672", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4OTAxMGRmMmQ1ODZlZWMzM2I1MGYzYWZjYzRiMjIyNmRhMzI2NzI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-14T06:43:59Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-14T06:57:57Z"}, "message": "Add Expader::to_source", "tree": {"sha": "aa2a59b52df1632c3dbedd41ac31f45400f60409", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa2a59b52df1632c3dbedd41ac31f45400f60409"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c89010df2d586eec33b50f3afcc4b2226da32672", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c89010df2d586eec33b50f3afcc4b2226da32672", "html_url": "https://github.com/rust-lang/rust/commit/c89010df2d586eec33b50f3afcc4b2226da32672", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c89010df2d586eec33b50f3afcc4b2226da32672/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7e85c60d2c225eacc80184a7918ecf6c8ab0563", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7e85c60d2c225eacc80184a7918ecf6c8ab0563", "html_url": "https://github.com/rust-lang/rust/commit/e7e85c60d2c225eacc80184a7918ecf6c8ab0563"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "622c836d120a0b44743cf9bd1bc6b035e4b3944f", "filename": "crates/ra_hir_def/src/body.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c89010df2d586eec33b50f3afcc4b2226da32672/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c89010df2d586eec33b50f3afcc4b2226da32672/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody.rs?ref=c89010df2d586eec33b50f3afcc4b2226da32672", "patch": "@@ -34,6 +34,10 @@ impl Expander {\n         self.original_file_id != self.current_file_id\n     }\n \n+    fn to_source<T>(&self, ast: T) -> Source<T> {\n+        Source { file_id: self.current_file_id, ast }\n+    }\n+\n     fn resolve_path_as_macro(&self, db: &impl DefDatabase2, path: &Path) -> Option<MacroDefId> {\n         self.crate_def_map.resolve_path(db, self.module.module_id, path).0.get_macros()\n     }"}, {"sha": "1ea8ce249ca6954e8d7674de15173b87fa6ae3d4", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c89010df2d586eec33b50f3afcc4b2226da32672/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c89010df2d586eec33b50f3afcc4b2226da32672/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=c89010df2d586eec33b50f3afcc4b2226da32672", "patch": "@@ -4,7 +4,7 @@ use hir_expand::{\n     either::Either,\n     hygiene::Hygiene,\n     name::{self, AsName, Name},\n-    AstId, MacroCallLoc, MacroFileKind, Source,\n+    AstId, MacroCallLoc, MacroFileKind,\n };\n use ra_arena::Arena;\n use ra_syntax::{\n@@ -99,9 +99,7 @@ where\n         if !self.expander.is_in_expansion() {\n             self.source_map.expr_map.insert(ptr, id);\n         }\n-        self.source_map\n-            .expr_map_back\n-            .insert(id, Source { file_id: self.expander.current_file_id, ast: ptr });\n+        self.source_map.expr_map_back.insert(id, self.expander.to_source(ptr));\n         id\n     }\n     // desugared exprs don't have ptr, that's wrong and should be fixed\n@@ -115,19 +113,15 @@ where\n         if !self.expander.is_in_expansion() {\n             self.source_map.expr_map.insert(ptr, id);\n         }\n-        self.source_map\n-            .expr_map_back\n-            .insert(id, Source { file_id: self.expander.current_file_id, ast: ptr });\n+        self.source_map.expr_map_back.insert(id, self.expander.to_source(ptr));\n         id\n     }\n     fn alloc_pat(&mut self, pat: Pat, ptr: PatPtr) -> PatId {\n         let id = self.body.pats.alloc(pat);\n         if !self.expander.is_in_expansion() {\n             self.source_map.pat_map.insert(ptr, id);\n         }\n-        self.source_map\n-            .pat_map_back\n-            .insert(id, Source { file_id: self.expander.current_file_id, ast: ptr });\n+        self.source_map.pat_map_back.insert(id, self.expander.to_source(ptr));\n         id\n     }\n "}]}