{"sha": "45580684825c1855a4be5a7b4cd28525b24e7322", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NTgwNjg0ODI1YzE4NTVhNGJlNWE3YjRjZDI4NTI1YjI0ZTczMjI=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-03-29T16:05:40Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-03-30T17:43:26Z"}, "message": "Update tests", "tree": {"sha": "a31fcfea4d5793a1372505c0738960056db2d006", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a31fcfea4d5793a1372505c0738960056db2d006"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45580684825c1855a4be5a7b4cd28525b24e7322", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45580684825c1855a4be5a7b4cd28525b24e7322", "html_url": "https://github.com/rust-lang/rust/commit/45580684825c1855a4be5a7b4cd28525b24e7322", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45580684825c1855a4be5a7b4cd28525b24e7322/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "012884419eb797b3d277580146cad5bad8e41f5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/012884419eb797b3d277580146cad5bad8e41f5d", "html_url": "https://github.com/rust-lang/rust/commit/012884419eb797b3d277580146cad5bad8e41f5d"}], "stats": {"total": 590, "additions": 295, "deletions": 295}, "files": [{"sha": "5c4fd9dba7af47dc9a92c961bf0443a7b7411224", "filename": "src/librustc_incremental/persist/dirty_clean.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -3,9 +3,9 @@\n //! we will compare the fingerprint from the current and from the previous\n //! compilation session as appropriate:\n //!\n-//! - `#[rustc_clean(cfg=\"rev2\", except=\"TypeckTables\")]` if we are\n+//! - `#[rustc_clean(cfg=\"rev2\", except=\"typeck_tables_of\")]` if we are\n //!   in `#[cfg(rev2)]`, then the fingerprints associated with\n-//!   `DepNode::TypeckTables(X)` must be DIFFERENT (`X` is the `DefId` of the\n+//!   `DepNode::typeck_tables_of(X)` must be DIFFERENT (`X` is the `DefId` of the\n //!   current node).\n //! - `#[rustc_clean(cfg=\"rev2\")]` same as above, except that the\n //!   fingerprints must be the SAME (along with all other fingerprints)."}, {"sha": "13daa72a4d1f40f0ecd7eefa0b70d59a93c5c988", "filename": "src/test/incremental/add_private_fn_at_krate_root_cc/struct_point.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fadd_private_fn_at_krate_root_cc%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fadd_private_fn_at_krate_root_cc%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fadd_private_fn_at_krate_root_cc%2Fstruct_point.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -24,7 +24,7 @@ extern crate point;\n pub mod fn_calls_methods_in_same_impl {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn check() {\n         let x = Point { x: 2.0, y: 2.0 };\n         x.distance_from_origin();\n@@ -35,7 +35,7 @@ pub mod fn_calls_methods_in_same_impl {\n pub mod fn_calls_free_fn {\n     use point::{self, Point};\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn check() {\n         let x = Point { x: 2.0, y: 2.0 };\n         point::distance_squared(&x);\n@@ -46,7 +46,7 @@ pub mod fn_calls_free_fn {\n pub mod fn_make_struct {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn make_origin() -> Point {\n         Point { x: 2.0, y: 2.0 }\n     }\n@@ -56,7 +56,7 @@ pub mod fn_make_struct {\n pub mod fn_read_field {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn get_x(p: Point) -> f32 {\n         p.x\n     }\n@@ -66,7 +66,7 @@ pub mod fn_read_field {\n pub mod fn_write_field {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn inc_x(p: &mut Point) {\n         p.x += 1.0;\n     }"}, {"sha": "b49731b26e78f6664f6180b11eb60b98c7ec0cb1", "filename": "src/test/incremental/callee_caller_cross_crate/b.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fcallee_caller_cross_crate%2Fb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fcallee_caller_cross_crate%2Fb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fcallee_caller_cross_crate%2Fb.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -6,12 +6,12 @@\n \n extern crate a;\n \n-#[rustc_dirty(label=\"TypeckTables\", cfg=\"rpass2\")]\n+#[rustc_dirty(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn call_function0() {\n     a::function0(77);\n }\n \n-#[rustc_clean(label=\"TypeckTables\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn call_function1() {\n     a::function1(77);\n }"}, {"sha": "9e34aedbed307a1d3002f410de26521216406b9c", "filename": "src/test/incremental/change_add_field/struct_point.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fchange_add_field%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fchange_add_field%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_add_field%2Fstruct_point.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -70,7 +70,7 @@ pub mod point {\n pub mod fn_with_type_in_sig {\n     use point::Point;\n \n-    #[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn boop(p: Option<&Point>) -> f32 {\n         p.map(|p| p.total()).unwrap_or(0.0)\n     }\n@@ -86,7 +86,7 @@ pub mod fn_with_type_in_sig {\n pub mod call_fn_with_type_in_sig {\n     use fn_with_type_in_sig;\n \n-    #[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn bip() -> f32 {\n         fn_with_type_in_sig::boop(None)\n     }\n@@ -102,7 +102,7 @@ pub mod call_fn_with_type_in_sig {\n pub mod fn_with_type_in_body {\n     use point::Point;\n \n-    #[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn boop() -> f32 {\n         Point::origin().total()\n     }\n@@ -115,7 +115,7 @@ pub mod fn_with_type_in_body {\n pub mod call_fn_with_type_in_body {\n     use fn_with_type_in_body;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn bip() -> f32 {\n         fn_with_type_in_body::boop()\n     }\n@@ -125,7 +125,7 @@ pub mod call_fn_with_type_in_body {\n pub mod fn_make_struct {\n     use point::Point;\n \n-    #[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn make_origin(p: Point) -> Point {\n         Point { ..p }\n     }\n@@ -135,7 +135,7 @@ pub mod fn_make_struct {\n pub mod fn_read_field {\n     use point::Point;\n \n-    #[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn get_x(p: Point) -> f32 {\n         p.x\n     }\n@@ -145,7 +145,7 @@ pub mod fn_read_field {\n pub mod fn_write_field {\n     use point::Point;\n \n-    #[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn inc_x(p: &mut Point) {\n         p.x += 1.0;\n     }"}, {"sha": "c167cf6e035d6b505152cb588ff4356c62159e97", "filename": "src/test/incremental/change_crate_order/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fchange_crate_order%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fchange_crate_order%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_crate_order%2Fmain.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -18,7 +18,7 @@ extern crate a;\n use a::A;\n use b::B;\n \n-//? #[rustc_clean(label=\"TypeckTables\", cfg=\"rpass2\")]\n+//? #[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn main() {\n     A + B;\n }"}, {"sha": "be287b86bbcbac2e1eff894754ee772f154df817", "filename": "src/test/incremental/change_private_fn/struct_point.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fchange_private_fn%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fchange_private_fn%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_private_fn%2Fstruct_point.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -51,7 +51,7 @@ pub mod point {\n pub mod fn_calls_methods_in_same_impl {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn check() {\n         let x = Point { x: 2.0, y: 2.0 };\n         x.distance_from_origin();\n@@ -62,7 +62,7 @@ pub mod fn_calls_methods_in_same_impl {\n pub mod fn_calls_methods_in_another_impl {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn check() {\n         let mut x = Point { x: 2.0, y: 2.0 };\n         x.translate(3.0, 3.0);\n@@ -73,7 +73,7 @@ pub mod fn_calls_methods_in_another_impl {\n pub mod fn_make_struct {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn make_origin() -> Point {\n         Point { x: 2.0, y: 2.0 }\n     }\n@@ -83,7 +83,7 @@ pub mod fn_make_struct {\n pub mod fn_read_field {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn get_x(p: Point) -> f32 {\n         p.x\n     }\n@@ -93,7 +93,7 @@ pub mod fn_read_field {\n pub mod fn_write_field {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn inc_x(p: &mut Point) {\n         p.x += 1.0;\n     }"}, {"sha": "521fe99ebc2eb278e782f378abf7ad5a0af3a0d6", "filename": "src/test/incremental/change_private_fn_cc/struct_point.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fchange_private_fn_cc%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fchange_private_fn_cc%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_private_fn_cc%2Fstruct_point.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -23,7 +23,7 @@ extern crate point;\n pub mod fn_calls_methods_in_same_impl {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn check() {\n         let x = Point { x: 2.0, y: 2.0 };\n         x.distance_from_origin();\n@@ -34,7 +34,7 @@ pub mod fn_calls_methods_in_same_impl {\n pub mod fn_calls_methods_in_another_impl {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn check() {\n         let mut x = Point { x: 2.0, y: 2.0 };\n         x.translate(3.0, 3.0);\n@@ -45,7 +45,7 @@ pub mod fn_calls_methods_in_another_impl {\n pub mod fn_make_struct {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn make_origin() -> Point {\n         Point { x: 2.0, y: 2.0 }\n     }\n@@ -55,7 +55,7 @@ pub mod fn_make_struct {\n pub mod fn_read_field {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn get_x(p: Point) -> f32 {\n         p.x\n     }\n@@ -65,7 +65,7 @@ pub mod fn_read_field {\n pub mod fn_write_field {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn inc_x(p: &mut Point) {\n         p.x += 1.0;\n     }"}, {"sha": "c2796b5e3c90a7e3a3f4d6540b42a4ed6324f076", "filename": "src/test/incremental/change_private_impl_method/struct_point.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fchange_private_impl_method%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fchange_private_impl_method%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_private_impl_method%2Fstruct_point.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -51,7 +51,7 @@ pub mod point {\n pub mod fn_calls_methods_in_same_impl {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn check() {\n         let x = Point { x: 2.0, y: 2.0 };\n         x.distance_from_origin();\n@@ -62,7 +62,7 @@ pub mod fn_calls_methods_in_same_impl {\n pub mod fn_calls_methods_in_another_impl {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn check() {\n         let mut x = Point { x: 2.0, y: 2.0 };\n         x.translate(3.0, 3.0);\n@@ -73,7 +73,7 @@ pub mod fn_calls_methods_in_another_impl {\n pub mod fn_make_struct {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn make_origin() -> Point {\n         Point { x: 2.0, y: 2.0 }\n     }\n@@ -83,7 +83,7 @@ pub mod fn_make_struct {\n pub mod fn_read_field {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn get_x(p: Point) -> f32 {\n         p.x\n     }\n@@ -93,7 +93,7 @@ pub mod fn_read_field {\n pub mod fn_write_field {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn inc_x(p: &mut Point) {\n         p.x += 1.0;\n     }"}, {"sha": "731dcdf78c933c74239974d1111e93d49cb88fae", "filename": "src/test/incremental/change_private_impl_method_cc/struct_point.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fchange_private_impl_method_cc%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fchange_private_impl_method_cc%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_private_impl_method_cc%2Fstruct_point.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -24,7 +24,7 @@ extern crate point;\n pub mod fn_calls_methods_in_same_impl {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn check() {\n         let x = Point { x: 2.0, y: 2.0 };\n         x.distance_from_origin();\n@@ -35,7 +35,7 @@ pub mod fn_calls_methods_in_same_impl {\n pub mod fn_calls_methods_in_another_impl {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn dirty() {\n         let mut x = Point { x: 2.0, y: 2.0 };\n         x.translate(3.0, 3.0);\n@@ -46,7 +46,7 @@ pub mod fn_calls_methods_in_another_impl {\n pub mod fn_make_struct {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn make_origin() -> Point {\n         Point { x: 2.0, y: 2.0 }\n     }\n@@ -56,7 +56,7 @@ pub mod fn_make_struct {\n pub mod fn_read_field {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn get_x(p: Point) -> f32 {\n         p.x\n     }\n@@ -66,7 +66,7 @@ pub mod fn_read_field {\n pub mod fn_write_field {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn inc_x(p: &mut Point) {\n         p.x += 1.0;\n     }"}, {"sha": "76dcff848caf7f189766520bdfb662ed0ce40eb0", "filename": "src/test/incremental/change_pub_inherent_method_body/struct_point.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fchange_pub_inherent_method_body%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fchange_pub_inherent_method_body%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_pub_inherent_method_body%2Fstruct_point.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -42,7 +42,7 @@ pub mod point {\n pub mod fn_calls_changed_method {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn check() {\n         let p = Point { x: 2.0, y: 2.0 };\n         p.distance_from_origin();\n@@ -53,7 +53,7 @@ pub mod fn_calls_changed_method {\n pub mod fn_calls_another_method {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn check() {\n         let p = Point { x: 2.0, y: 2.0 };\n         p.x();\n@@ -64,7 +64,7 @@ pub mod fn_calls_another_method {\n pub mod fn_make_struct {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn make_origin() -> Point {\n         Point { x: 2.0, y: 2.0 }\n     }\n@@ -74,7 +74,7 @@ pub mod fn_make_struct {\n pub mod fn_read_field {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn get_x(p: Point) -> f32 {\n         p.x\n     }\n@@ -84,7 +84,7 @@ pub mod fn_read_field {\n pub mod fn_write_field {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn inc_x(p: &mut Point) {\n         p.x += 1.0;\n     }"}, {"sha": "9c95d4cc2a9a50245607aa7acece6b5ae1789edd", "filename": "src/test/incremental/change_pub_inherent_method_sig/struct_point.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fchange_pub_inherent_method_sig%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fchange_pub_inherent_method_sig%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_pub_inherent_method_sig%2Fstruct_point.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -52,7 +52,7 @@ pub mod point {\n pub mod fn_calls_changed_method {\n     use point::Point;\n \n-    #[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn check() {\n         let p = Point { x: 2.0, y: 2.0 };\n         p.distance_from_point(None);\n@@ -63,7 +63,7 @@ pub mod fn_calls_changed_method {\n pub mod fn_calls_another_method {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn check() {\n         let p = Point { x: 2.0, y: 2.0 };\n         p.x();\n@@ -74,7 +74,7 @@ pub mod fn_calls_another_method {\n pub mod fn_make_struct {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn make_origin() -> Point {\n         Point { x: 2.0, y: 2.0 }\n     }\n@@ -84,7 +84,7 @@ pub mod fn_make_struct {\n pub mod fn_read_field {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn get_x(p: Point) -> f32 {\n         p.x\n     }\n@@ -94,7 +94,7 @@ pub mod fn_read_field {\n pub mod fn_write_field {\n     use point::Point;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn inc_x(p: &mut Point) {\n         p.x += 1.0;\n     }"}, {"sha": "b9a1846b37d44ba93e948f08f0f68b33e1ec30da", "filename": "src/test/incremental/dirty_clean.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fdirty_clean.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -25,16 +25,16 @@ mod x {\n mod y {\n     use x;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn y() {\n-        //[cfail2]~^ ERROR `TypeckTables(y::y)` should be clean but is not\n+        //[cfail2]~^ ERROR `typeck_tables_of(y::y)` should be clean but is not\n         x::x();\n     }\n }\n \n mod z {\n-    #[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_dirty(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     pub fn z() {\n-        //[cfail2]~^ ERROR `TypeckTables(z::z)` should be dirty but is not\n+        //[cfail2]~^ ERROR `typeck_tables_of(z::z)` should be dirty but is not\n     }\n }"}, {"sha": "55dd37451235a8254e67afd03cb908d94afb267e", "filename": "src/test/incremental/hashes/call_expressions.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Fcall_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Fcall_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fcall_expressions.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -25,7 +25,7 @@ pub fn change_callee_function() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_callee_function() {\n     callee2(1, 2)\n@@ -81,7 +81,7 @@ pub fn change_callee_method() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_callee_method() {\n     let s = Struct;\n@@ -115,7 +115,7 @@ pub fn change_ufcs_callee_method() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_ufcs_callee_method() {\n     let s = Struct;\n@@ -149,7 +149,7 @@ pub fn change_to_ufcs() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n // One might think this would be expanded in the HirBody/Mir, but it actually\n // results in slightly different Hir/Mir.\n@@ -171,7 +171,7 @@ pub mod change_ufcs_callee_indirectly {\n     #[cfg(not(cfail1))]\n     use super::Struct2 as Struct;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,TypeckTables\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n \n "}, {"sha": "5bfd540eca63ec7c9c5ebec63f3b525bc7599133", "filename": "src/test/incremental/hashes/closure_expressions.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -37,7 +37,7 @@ pub fn add_parameter() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_parameter() {\n     let x = 0u32;\n@@ -53,7 +53,7 @@ pub fn change_parameter_pattern() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_parameter_pattern() {\n     let _ = |&x: &u32| x;\n@@ -84,7 +84,7 @@ pub fn add_type_ascription_to_parameter() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_type_ascription_to_parameter() {\n     let closure = |x: u32| x + 1u32;\n@@ -101,7 +101,7 @@ pub fn change_parameter_type() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_parameter_type() {\n     let closure = |x: u16| (x as u64) + 1;"}, {"sha": "f553b2d1b5123a91bfbc8790c1f37432621b2b39", "filename": "src/test/incremental/hashes/enum_constructors.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -57,7 +57,7 @@ pub fn change_field_order_struct_like() -> Enum {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n // FIXME(michaelwoerister):Interesting. I would have thought that that changes the MIR. And it\n // would if it were not all constants\n@@ -96,7 +96,7 @@ pub fn change_constructor_path_struct_like() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_constructor_path_struct_like() {\n     let _ = Enum2::Struct {\n@@ -139,8 +139,8 @@ pub mod change_constructor_path_indirectly_struct_like {\n \n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"FnSignature,Hir,HirBody,optimized_mir,mir_built,\\\n-                TypeckTables\"\n+        except=\"fn_sig,Hir,HirBody,optimized_mir,mir_built,\\\n+                typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn function() -> TheEnum {\n@@ -197,7 +197,7 @@ pub fn change_constructor_path_tuple_like() {\n #[cfg(not(cfail1))]\n #[rustc_clean(\n     cfg=\"cfail2\",\n-    except=\"HirBody,optimized_mir,mir_built,TypeckTables\"\n+    except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\"\n )]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_constructor_path_tuple_like() {\n@@ -215,7 +215,7 @@ pub fn change_constructor_variant_tuple_like() {\n #[cfg(not(cfail1))]\n #[rustc_clean(\n     cfg=\"cfail2\",\n-    except=\"HirBody,optimized_mir,mir_built,TypeckTables\"\n+    except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\"\n )]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_constructor_variant_tuple_like() {\n@@ -232,8 +232,8 @@ pub mod change_constructor_path_indirectly_tuple_like {\n \n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"FnSignature,Hir,HirBody,optimized_mir,mir_built,\\\n-                TypeckTables\"\n+        except=\"fn_sig,Hir,HirBody,optimized_mir,mir_built,\\\n+                typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn function() -> TheEnum {\n@@ -251,7 +251,7 @@ pub mod change_constructor_variant_indirectly_tuple_like {\n     #[cfg(not(cfail1))]\n     use super::Enum2::Tuple2 as Variant;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,TypeckTables\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn function() -> Enum2 {\n         Variant(0, 1, 2)\n@@ -278,7 +278,7 @@ pub fn change_constructor_path_c_like() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_constructor_path_c_like() {\n     let _ = Clike2::B;\n@@ -309,8 +309,8 @@ pub mod change_constructor_path_indirectly_c_like {\n \n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"FnSignature,Hir,HirBody,optimized_mir,mir_built,\\\n-                TypeckTables\"\n+        except=\"fn_sig,Hir,HirBody,optimized_mir,mir_built,\\\n+                typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn function() -> TheEnum {"}, {"sha": "503cb8732ef70ca72af773b2c60c651b132b4faf", "filename": "src/test/incremental/hashes/for_loops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -71,7 +71,7 @@ pub fn change_iteration_variable_pattern() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_iteration_variable_pattern() {\n     let mut _x = 0;\n@@ -116,7 +116,7 @@ pub fn add_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_break() {\n     let mut _x = 0;"}, {"sha": "7850291fc565ab789cfc4cfae746f583cdff33a5", "filename": "src/test/incremental/hashes/function_interfaces.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -24,7 +24,7 @@ pub fn add_parameter() {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, HirBody, mir_built, optimized_mir, TypeckTables, FnSignature\")]\n+              except = \"Hir, HirBody, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn add_parameter(p: i32) {}\n \n@@ -47,7 +47,7 @@ pub fn type_of_parameter(p: i32) {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, HirBody, mir_built, optimized_mir, TypeckTables, FnSignature\")]\n+              except = \"Hir, HirBody, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn type_of_parameter(p: i64) {}\n \n@@ -59,7 +59,7 @@ pub fn type_of_parameter_ref(p: &i32) {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, HirBody, mir_built, optimized_mir, TypeckTables, FnSignature\")]\n+              except = \"Hir, HirBody, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn type_of_parameter_ref(p: &mut i32) {}\n \n@@ -71,7 +71,7 @@ pub fn order_of_parameters(p1: i32, p2: i64) {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, HirBody, mir_built, optimized_mir, TypeckTables, FnSignature\")]\n+              except = \"Hir, HirBody, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn order_of_parameters(p2: i64, p1: i32) {}\n \n@@ -83,7 +83,7 @@ pub fn make_unsafe() {}\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg = \"cfail2\",\n-              except = \"Hir, HirBody, mir_built, optimized_mir, TypeckTables, FnSignature\")]\n+              except = \"Hir, HirBody, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub unsafe fn make_unsafe() {}\n \n@@ -94,7 +94,7 @@ pub unsafe fn make_unsafe() {}\n pub fn make_extern() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, mir_built, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, mir_built, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub extern \"C\" fn make_extern() {}\n \n@@ -105,7 +105,7 @@ pub extern \"C\" fn make_extern() {}\n pub extern \"C\" fn make_intrinsic() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub extern \"rust-intrinsic\" fn make_intrinsic() {}\n \n@@ -258,7 +258,7 @@ pub fn return_impl_trait() -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub fn return_impl_trait() -> impl Clone {\n     0\n@@ -292,7 +292,7 @@ pub mod change_return_type_indirectly {\n     use super::ReferencedType2 as ReturnType;\n \n     #[rustc_clean(cfg = \"cfail2\",\n-                  except = \"Hir, HirBody, mir_built, optimized_mir, TypeckTables, FnSignature\")]\n+                  except = \"Hir, HirBody, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n     #[rustc_clean(cfg = \"cfail3\")]\n     pub fn indirect_return_type() -> ReturnType {\n         ReturnType {}\n@@ -309,7 +309,7 @@ pub mod change_parameter_type_indirectly {\n     use super::ReferencedType2 as ParameterType;\n \n     #[rustc_clean(cfg = \"cfail2\",\n-                  except = \"Hir, HirBody, mir_built, optimized_mir, TypeckTables, FnSignature\")]\n+                  except = \"Hir, HirBody, mir_built, optimized_mir, typeck_tables_of, fn_sig\")]\n     #[rustc_clean(cfg = \"cfail3\")]\n     pub fn indirect_parameter_type(p: ParameterType) {}\n }"}, {"sha": "fba7869af42f25f1b3aa669da1d099a29bfd1cf3", "filename": "src/test/incremental/hashes/if_expressions.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Fif_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Fif_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fif_expressions.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -25,7 +25,7 @@ pub fn change_condition(x: bool) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_condition(x: bool) -> u32 {\n     if !x {\n@@ -94,7 +94,7 @@ pub fn add_else_branch(x: bool) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_else_branch(x: bool) -> u32 {\n     let mut ret = 1;\n@@ -120,7 +120,7 @@ pub fn change_condition_if_let(x: Option<u32>) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_condition_if_let(x: Option<u32>) -> u32 {\n     if let Some(_) = x {\n@@ -143,7 +143,7 @@ pub fn change_then_branch_if_let(x: Option<u32>) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_then_branch_if_let(x: Option<u32>) -> u32 {\n     if let Some(x) = x {\n@@ -191,7 +191,7 @@ pub fn add_else_branch_if_let(x: Option<u32>) -> u32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_else_branch_if_let(x: Option<u32>) -> u32 {\n     let mut ret = 1;"}, {"sha": "268c37508a73c0a62605ff76d77604627ab330cb", "filename": "src/test/incremental/hashes/inherent_impls.rs", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -23,7 +23,7 @@ impl Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,AssociatedItemDefIds\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,associated_item_def_ids\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail3\")]\n@@ -42,7 +42,7 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,TypeckTables\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn method_body() {\n         println!(\"Hello, world!\");\n@@ -63,7 +63,7 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,TypeckTables\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     #[inline]\n     pub fn method_body_inlined() {\n@@ -82,7 +82,7 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"AssociatedItems,Hir,HirBody\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"associated_item,Hir,HirBody\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     fn method_privacy() { }\n }\n@@ -114,7 +114,7 @@ impl Foo {\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,HirBody,FnSignature,TypeckTables,optimized_mir,mir_built\"\n+        except=\"Hir,HirBody,fn_sig,typeck_tables_of,optimized_mir,mir_built\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn method_selfmutness(&mut self) { }\n@@ -129,7 +129,7 @@ impl Foo {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,AssociatedItemDefIds\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,associated_item_def_ids\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n     #[rustc_clean(cfg=\"cfail2\")]\n@@ -154,7 +154,7 @@ impl Foo {\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,HirBody,FnSignature,TypeckTables,optimized_mir,mir_built\"\n+        except=\"Hir,HirBody,fn_sig,typeck_tables_of,optimized_mir,mir_built\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn add_method_parameter(&self, _: i32) { }\n@@ -191,7 +191,7 @@ impl Foo {\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,HirBody,FnSignature,optimized_mir,mir_built,TypeckTables\")]\n+        except=\"Hir,HirBody,fn_sig,optimized_mir,mir_built,typeck_tables_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn change_method_return_type(&self) -> u8 { 0 }\n }\n@@ -245,7 +245,7 @@ impl Foo {\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,HirBody,FnSignature,TypeckTables,optimized_mir,mir_built\"\n+        except=\"Hir,HirBody,fn_sig,typeck_tables_of,optimized_mir,mir_built\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub unsafe fn make_method_unsafe(&self) { }\n@@ -263,7 +263,7 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,mir_built,FnSignature,TypeckTables\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,mir_built,fn_sig,typeck_tables_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub extern fn make_method_extern(&self) { }\n }\n@@ -280,7 +280,7 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,FnSignature,TypeckTables\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,fn_sig,typeck_tables_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub extern \"system\" fn change_method_calling_convention(&self) { }\n }\n@@ -297,15 +297,15 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    // Warning: Note that `TypeckTables` are coming up clean here.\n+    // Warning: Note that `typeck_tables_of` are coming up clean here.\n     // The addition or removal of lifetime parameters that don't\n     // appear in the arguments or fn body in any way does not, in\n-    // fact, affect the `TypeckTables` in any semantic way (at least\n+    // fact, affect the `typeck_tables_of` in any semantic way (at least\n     // as of this writing). **However,** altering the order of\n-    // lowering **can** cause it appear to affect the `TypeckTables`:\n+    // lowering **can** cause it appear to affect the `typeck_tables_of`:\n     // if we lower generics before the body, then the `HirId` for\n     // things in the body will be affected. So if you start to see\n-    // `TypeckTables` appear dirty, that might be the cause. -nmatsakis\n+    // `typeck_tables_of` appear dirty, that might be the cause. -nmatsakis\n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn add_lifetime_parameter_to_method<'a>(&self) { }\n@@ -323,14 +323,14 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    // Warning: Note that `TypeckTables` are coming up clean here.\n+    // Warning: Note that `typeck_tables_of` are coming up clean here.\n     // The addition or removal of type parameters that don't appear in\n     // the arguments or fn body in any way does not, in fact, affect\n-    // the `TypeckTables` in any semantic way (at least as of this\n+    // the `typeck_tables_of` in any semantic way (at least as of this\n     // writing). **However,** altering the order of lowering **can**\n-    // cause it appear to affect the `TypeckTables`: if we lower\n+    // cause it appear to affect the `typeck_tables_of`: if we lower\n     // generics before the body, then the `HirId` for things in the\n-    // body will be affected. So if you start to see `TypeckTables`\n+    // body will be affected. So if you start to see `typeck_tables_of`\n     // appear dirty, that might be the cause. -nmatsakis\n     #[rustc_clean(\n         cfg=\"cfail2\",\n@@ -354,7 +354,7 @@ impl Foo {\n impl Foo {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,HirBody,generics_of,predicates_of,type_of,TypeckTables\"\n+        except=\"Hir,HirBody,generics_of,predicates_of,type_of,typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn add_lifetime_bound_to_lifetime_param_of_method<'a, 'b: 'a>(&self) { }\n@@ -372,14 +372,14 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    // Warning: Note that `TypeckTables` are coming up clean here.\n+    // Warning: Note that `typeck_tables_of` are coming up clean here.\n     // The addition or removal of bounds that don't appear in the\n     // arguments or fn body in any way does not, in fact, affect the\n-    // `TypeckTables` in any semantic way (at least as of this\n+    // `typeck_tables_of` in any semantic way (at least as of this\n     // writing). **However,** altering the order of lowering **can**\n-    // cause it appear to affect the `TypeckTables`: if we lower\n+    // cause it appear to affect the `typeck_tables_of`: if we lower\n     // generics before the body, then the `HirId` for things in the\n-    // body will be affected. So if you start to see `TypeckTables`\n+    // body will be affected. So if you start to see `typeck_tables_of`\n     // appear dirty, that might be the cause. -nmatsakis\n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,generics_of,predicates_of,\\\n                                         type_of\")]\n@@ -399,14 +399,14 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    // Warning: Note that `TypeckTables` are coming up clean here.\n+    // Warning: Note that `typeck_tables_of` are coming up clean here.\n     // The addition or removal of bounds that don't appear in the\n     // arguments or fn body in any way does not, in fact, affect the\n-    // `TypeckTables` in any semantic way (at least as of this\n+    // `typeck_tables_of` in any semantic way (at least as of this\n     // writing). **However,** altering the order of lowering **can**\n-    // cause it appear to affect the `TypeckTables`: if we lower\n+    // cause it appear to affect the `typeck_tables_of`: if we lower\n     // generics before the body, then the `HirId` for things in the\n-    // body will be affected. So if you start to see `TypeckTables`\n+    // body will be affected. So if you start to see `typeck_tables_of`\n     // appear dirty, that might be the cause. -nmatsakis\n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,predicates_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n@@ -447,7 +447,7 @@ impl Bar<u32> {\n impl<T> Bar<T> {\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"generics_of,FnSignature,TypeckTables,type_of,optimized_mir,mir_built\"\n+        except=\"generics_of,fn_sig,typeck_tables_of,type_of,optimized_mir,mir_built\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn add_type_parameter_to_impl(&self) { }\n@@ -465,7 +465,7 @@ impl Bar<u32> {\n #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Bar<u64> {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"FnSignature,optimized_mir,mir_built,TypeckTables\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"fn_sig,optimized_mir,mir_built,typeck_tables_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn change_impl_self_type(&self) { }\n }"}, {"sha": "e016b92a9ebdf6951a6e691643f3eaffae33d8a9", "filename": "src/test/incremental/hashes/let_expressions.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -38,7 +38,7 @@ pub fn add_type() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,TypeckTables,mir_built,optimized_mir\")]\n+    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_type() {\n     let _x: u32 = 2u32;\n@@ -54,7 +54,7 @@ pub fn change_type() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,TypeckTables,mir_built,optimized_mir\")]\n+    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_type() {\n     let _x: u8 = 2;\n@@ -70,7 +70,7 @@ pub fn change_mutability_of_reference_type() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,TypeckTables,mir_built,optimized_mir\")]\n+    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_mutability_of_reference_type() {\n     let _x: &mut u64;\n@@ -86,7 +86,7 @@ pub fn change_mutability_of_slot() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,TypeckTables,mir_built,optimized_mir\")]\n+    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_mutability_of_slot() {\n     let _x: u64 = 0;\n@@ -102,7 +102,7 @@ pub fn change_simple_binding_to_pattern() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,TypeckTables,mir_built,optimized_mir\")]\n+    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_simple_binding_to_pattern() {\n     let (_a, _b) = (0u8, 'x');\n@@ -134,7 +134,7 @@ pub fn add_ref_in_pattern() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,TypeckTables,mir_built,optimized_mir\")]\n+    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_ref_in_pattern() {\n     let (ref _a, _b) = (1u8, 'y');\n@@ -150,7 +150,7 @@ pub fn add_amp_in_pattern() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,TypeckTables,mir_built,optimized_mir\")]\n+    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_amp_in_pattern() {\n     let (&_a, _b) = (&1u8, 'y');\n@@ -166,7 +166,7 @@ pub fn change_mutability_of_binding_in_pattern() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,TypeckTables,mir_built,optimized_mir\")]\n+    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_mutability_of_binding_in_pattern() {\n     let (mut _a, _b) = (99u8, 'q');\n@@ -182,7 +182,7 @@ pub fn add_initializer() {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,TypeckTables,mir_built,optimized_mir\")]\n+    except=\"HirBody,typeck_tables_of,mir_built,optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_initializer() {\n     let _x: i16 = 3i16;"}, {"sha": "c04bdd43a9528b2622eb783fef174c135707c4ae", "filename": "src/test/incremental/hashes/loop_expressions.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Floop_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Floop_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Floop_expressions.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -47,7 +47,7 @@ pub fn add_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_break() {\n     let mut _x = 0;\n@@ -118,7 +118,7 @@ pub fn change_break_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_break_label() {\n     let mut _x = 0;\n@@ -168,7 +168,7 @@ pub fn change_continue_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_continue_label() {\n     let mut _x = 0;\n@@ -193,7 +193,7 @@ pub fn change_continue_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_continue_to_break() {\n     let mut _x = 0;"}, {"sha": "02f2cd6634daf2e430d0ad5e72be3b92e285e9e7", "filename": "src/test/incremental/hashes/match_expressions.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Fmatch_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Fmatch_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fmatch_expressions.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -26,7 +26,7 @@ pub fn add_arm(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir,TypeckTables\")]\n+    except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_arm(x: u32) -> u32 {\n     match x {\n@@ -75,7 +75,7 @@ pub fn add_guard_clause(x: u32, y: bool) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir,TypeckTables\")]\n+    except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_guard_clause(x: u32, y: bool) -> u32 {\n     match x {\n@@ -99,7 +99,7 @@ pub fn change_guard_clause(x: u32, y: bool) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir,TypeckTables\")]\n+    except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_guard_clause(x: u32, y: bool) -> u32 {\n     match x {\n@@ -123,7 +123,7 @@ pub fn add_at_binding(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir,TypeckTables\")]\n+    except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_at_binding(x: u32) -> u32 {\n     match x {\n@@ -170,7 +170,7 @@ pub fn change_simple_name_to_pattern(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir,TypeckTables\")]\n+    except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_simple_name_to_pattern(x: u32) -> u32 {\n     match (x, x & 1) {\n@@ -216,7 +216,7 @@ pub fn change_mutability_of_binding_in_pattern(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir,TypeckTables\")]\n+    except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_mutability_of_binding_in_pattern(x: u32) -> u32 {\n     match (x, x & 1) {\n@@ -238,7 +238,7 @@ pub fn add_ref_to_binding_in_pattern(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir,TypeckTables\")]\n+    except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_ref_to_binding_in_pattern(x: u32) -> u32 {\n     match (x, x & 1) {\n@@ -260,7 +260,7 @@ pub fn add_amp_to_binding_in_pattern(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-except=\"HirBody,mir_built,optimized_mir,TypeckTables\")]\n+except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_amp_to_binding_in_pattern(x: u32) -> u32 {\n     match (&x, x & 1) {\n@@ -307,7 +307,7 @@ pub fn add_alternative_to_arm(x: u32) -> u32 {\n \n #[cfg(not(cfail1))]\n #[rustc_clean(cfg=\"cfail2\",\n-    except=\"HirBody,mir_built,optimized_mir,TypeckTables\")]\n+    except=\"HirBody,mir_built,optimized_mir,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_alternative_to_arm(x: u32) -> u32 {\n     match x {"}, {"sha": "e478ff96c32768bf8c60ad3182f8a0acc98df25e", "filename": "src/test/incremental/hashes/struct_constructors.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_constructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_constructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_constructors.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -54,7 +54,7 @@ pub fn change_field_order_regular_struct() -> RegularStruct {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_field_order_regular_struct() -> RegularStruct {\n     RegularStruct {\n@@ -82,7 +82,7 @@ pub fn add_field_regular_struct() -> RegularStruct {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_field_regular_struct() -> RegularStruct {\n     let struct1 = RegularStruct {\n@@ -117,7 +117,7 @@ pub fn change_field_label_regular_struct() -> RegularStruct {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_field_label_regular_struct() -> RegularStruct {\n     let struct1 = RegularStruct {\n@@ -152,7 +152,7 @@ pub fn change_constructor_path_regular_struct() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_constructor_path_regular_struct() {\n     let _ = RegularStruct2 {\n@@ -173,7 +173,7 @@ pub mod change_constructor_path_indirectly_regular_struct {\n \n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"FnSignature,Hir,HirBody,optimized_mir,mir_built,TypeckTables\"\n+        except=\"fn_sig,Hir,HirBody,optimized_mir,mir_built,typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn function() -> Struct {\n@@ -213,7 +213,7 @@ pub fn change_constructor_path_tuple_struct() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_constructor_path_tuple_struct() {\n     let _ = TupleStruct2(0, 1, 2);\n@@ -230,7 +230,7 @@ pub mod change_constructor_path_indirectly_tuple_struct {\n \n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"FnSignature,Hir,HirBody,optimized_mir,mir_built,TypeckTables\"\n+        except=\"fn_sig,Hir,HirBody,optimized_mir,mir_built,typeck_tables_of\"\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub fn function() -> Struct {"}, {"sha": "8c53ae6a03854e04b3ed962df18c666d1588aacd", "filename": "src/test/incremental/hashes/unary_and_binary_exprs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Funary_and_binary_exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Funary_and_binary_exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Funary_and_binary_exprs.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -81,7 +81,7 @@ pub fn var_deref(x: &i32, y: &i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built,TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn var_deref(x: &i32, y: &i32) -> i32 {\n     *y\n@@ -368,7 +368,7 @@ pub fn type_cast(a: u8) -> u64 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(except=\"HirBody,optimized_mir,mir_built,TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_clean(except=\"HirBody,optimized_mir,mir_built,typeck_tables_of\", cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn type_cast(a: u8) -> u64 {\n     let b = a as u32;"}, {"sha": "2d48707561c2903bc470d55a74e5d0aa6c4687d8", "filename": "src/test/incremental/hashes/while_let_loops.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -70,7 +70,7 @@ pub fn add_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_break() {\n     let mut _x = 0;\n@@ -141,7 +141,7 @@ pub fn change_break_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_break_label() {\n     let mut _x = 0;\n@@ -191,7 +191,7 @@ pub fn change_continue_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_continue_label() {\n     let mut _x = 0;"}, {"sha": "79a3bc9b20504250da6a06475fc8edcf0d3b65d6", "filename": "src/test/incremental/hashes/while_loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_loops.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -70,7 +70,7 @@ pub fn add_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir, typeck_tables_of\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn add_break() {\n     let mut _x = 0;"}, {"sha": "e4d8c56752c7889335fc004caa008543f39099ae", "filename": "src/test/incremental/hello_world.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhello_world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fhello_world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhello_world.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -21,7 +21,7 @@ mod x {\n mod y {\n     use x;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"rpass2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n     pub fn yyyy() {\n         x::xxxx();\n     }\n@@ -30,7 +30,7 @@ mod y {\n mod z {\n     use y;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"rpass2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n     pub fn z() {\n         y::yyyy();\n     }"}, {"sha": "9dfd2ae2511b15b009f79b3d9552fe3f742ddf30", "filename": "src/test/incremental/ich_method_call_trait_scope.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fich_method_call_trait_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fich_method_call_trait_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fich_method_call_trait_scope.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -28,14 +28,14 @@ mod mod3 {\n \n     #[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n     #[rustc_clean(label=\"HirBody\", cfg=\"rpass2\")]\n-    #[rustc_dirty(label=\"TypeckTables\", cfg=\"rpass2\")]\n+    #[rustc_dirty(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n     fn bar() {\n         ().method();\n     }\n \n     #[rustc_clean(label=\"Hir\", cfg=\"rpass2\")]\n     #[rustc_clean(label=\"HirBody\", cfg=\"rpass2\")]\n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"rpass2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n     fn baz() {\n         22; // no method call, traits in scope don't matter\n     }"}, {"sha": "81b84ba741dc87e190e773b19032837d700c6e09", "filename": "src/test/incremental/rlib_cross_crate/b.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Frlib_cross_crate%2Fb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Frlib_cross_crate%2Fb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Frlib_cross_crate%2Fb.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -12,15 +12,15 @@\n \n extern crate a;\n \n-#[rustc_dirty(label=\"TypeckTables\", cfg=\"rpass2\")]\n-#[rustc_clean(label=\"TypeckTables\", cfg=\"rpass3\")]\n+#[rustc_dirty(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass3\")]\n pub fn use_X() -> u32 {\n     let x: a::X = 22;\n     x as u32\n }\n \n-#[rustc_clean(label=\"TypeckTables\", cfg=\"rpass2\")]\n-#[rustc_clean(label=\"TypeckTables\", cfg=\"rpass3\")]\n+#[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass3\")]\n pub fn use_Y() {\n     let x: a::Y = 'c';\n }"}, {"sha": "c39d4145b586f13808f86a56e7add59c6dccb4ab", "filename": "src/test/incremental/string_constant.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fstring_constant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fstring_constant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fstring_constant.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -28,7 +28,7 @@ pub mod x {\n pub mod y {\n     use x;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"optimized_mir\", cfg=\"cfail2\")]\n     pub fn y() {\n         x::x();\n@@ -38,7 +38,7 @@ pub mod y {\n pub mod z {\n     use y;\n \n-    #[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"optimized_mir\", cfg=\"cfail2\")]\n     pub fn z() {\n         y::y();"}, {"sha": "d2e1e7decf54e8d6448ac5a9a16743c0ff5b8f70", "filename": "src/test/incremental/struct_add_field.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fstruct_add_field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fstruct_add_field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fstruct_add_field.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -21,17 +21,17 @@ pub struct Y {\n     pub y: char\n }\n \n-#[rustc_dirty(label=\"TypeckTables\", cfg=\"rpass2\")]\n+#[rustc_dirty(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn use_X(x: X) -> u32 {\n     x.x as u32\n }\n \n-#[rustc_dirty(label=\"TypeckTables\", cfg=\"rpass2\")]\n+#[rustc_dirty(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn use_EmbedX(embed: EmbedX) -> u32 {\n     embed.x.x as u32\n }\n \n-#[rustc_clean(label=\"TypeckTables\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn use_Y() {\n     let x: Y = Y { y: 'c' };\n }"}, {"sha": "68356f703bcf8e7b2ae6cf2eab2acbe65ea459d1", "filename": "src/test/incremental/struct_change_field_name.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fstruct_change_field_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fstruct_change_field_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fstruct_change_field_name.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -24,21 +24,21 @@ pub struct Y {\n     pub y: char\n }\n \n-#[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n pub fn use_X() -> u32 {\n     let x: X = X { x: 22 };\n     //[cfail2]~^ ERROR struct `X` has no field named `x`\n     x.x as u32\n     //[cfail2]~^ ERROR no field `x` on type `X`\n }\n \n-#[rustc_dirty(label=\"TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_dirty(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n pub fn use_EmbedX(embed: EmbedX) -> u32 {\n     embed.x.x as u32\n     //[cfail2]~^ ERROR no field `x` on type `X`\n }\n \n-#[rustc_clean(label=\"TypeckTables\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"typeck_tables_of\", cfg=\"cfail2\")]\n pub fn use_Y() {\n     let x: Y = Y { y: 'c' };\n }"}, {"sha": "308ec84fa72effa56ae57252c3b26db767c913b1", "filename": "src/test/incremental/struct_change_field_type.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fstruct_change_field_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fstruct_change_field_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fstruct_change_field_type.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -24,19 +24,19 @@ pub struct Y {\n     pub y: char\n }\n \n-#[rustc_dirty(label=\"TypeckTables\", cfg=\"rpass2\")]\n+#[rustc_dirty(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn use_X() -> u32 {\n     let x: X = X { x: 22 };\n     x.x as u32\n }\n \n-#[rustc_dirty(label=\"TypeckTables\", cfg=\"rpass2\")]\n+#[rustc_dirty(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn use_EmbedX(x: EmbedX) -> u32 {\n     let x: X = X { x: 22 };\n     x.x as u32\n }\n \n-#[rustc_clean(label=\"TypeckTables\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn use_Y() {\n     let x: Y = Y { y: 'c' };\n }"}, {"sha": "9d84c2cf773b8cccb19315cbc64c0b8da20912ad", "filename": "src/test/incremental/struct_change_field_type_cross_crate/b.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fstruct_change_field_type_cross_crate%2Fb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fstruct_change_field_type_cross_crate%2Fb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fstruct_change_field_type_cross_crate%2Fb.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -8,18 +8,18 @@ extern crate a;\n \n use a::*;\n \n-#[rustc_dirty(label=\"TypeckTables\", cfg=\"rpass2\")]\n+#[rustc_dirty(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn use_X() -> u32 {\n     let x: X = X { x: 22 };\n     x.x as u32\n }\n \n-#[rustc_dirty(label=\"TypeckTables\", cfg=\"rpass2\")]\n+#[rustc_dirty(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn use_EmbedX(embed: EmbedX) -> u32 {\n     embed.x.x as u32\n }\n \n-#[rustc_clean(label=\"TypeckTables\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn use_Y() {\n     let x: Y = Y { y: 'c' };\n }"}, {"sha": "bbded1da2161999e9e813c8b2aaf406f2e4500b1", "filename": "src/test/incremental/struct_change_nothing.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fstruct_change_nothing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fstruct_change_nothing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fstruct_change_nothing.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -24,19 +24,19 @@ pub struct Y {\n     pub y: char\n }\n \n-#[rustc_clean(label=\"TypeckTables\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn use_X() -> u32 {\n     let x: X = X { x: 22 };\n     x.x as u32\n }\n \n-#[rustc_clean(label=\"TypeckTables\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn use_EmbedX(x: EmbedX) -> u32 {\n     let x: X = X { x: 22 };\n     x.x as u32\n }\n \n-#[rustc_clean(label=\"TypeckTables\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn use_Y() {\n     let x: Y = Y { y: 'c' };\n }"}, {"sha": "4c4028bbe5bdda2ea14ef79f1ce0344f5d9202e6", "filename": "src/test/incremental/struct_remove_field.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fstruct_remove_field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Fstruct_remove_field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fstruct_remove_field.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -25,17 +25,17 @@ pub struct Y {\n     pub y: char\n }\n \n-#[rustc_dirty(label=\"TypeckTables\", cfg=\"rpass2\")]\n+#[rustc_dirty(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn use_X(x: X) -> u32 {\n     x.x as u32\n }\n \n-#[rustc_dirty(label=\"TypeckTables\", cfg=\"rpass2\")]\n+#[rustc_dirty(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn use_EmbedX(embed: EmbedX) -> u32 {\n     embed.x.x as u32\n }\n \n-#[rustc_clean(label=\"TypeckTables\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n pub fn use_Y() {\n     let x: Y = Y { y: 'c' };\n }"}, {"sha": "cef2e4bab12d722653dc408011748ed985b80ca4", "filename": "src/test/incremental/type_alias_cross_crate/b.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Ftype_alias_cross_crate%2Fb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fincremental%2Ftype_alias_cross_crate%2Fb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Ftype_alias_cross_crate%2Fb.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -6,15 +6,15 @@\n \n extern crate a;\n \n-#[rustc_dirty(label=\"TypeckTables\", cfg=\"rpass2\")]\n-#[rustc_clean(label=\"TypeckTables\", cfg=\"rpass3\")]\n+#[rustc_dirty(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass3\")]\n pub fn use_X() -> u32 {\n     let x: a::X = 22;\n     x as u32\n }\n \n-#[rustc_clean(label=\"TypeckTables\", cfg=\"rpass2\")]\n-#[rustc_clean(label=\"TypeckTables\", cfg=\"rpass3\")]\n+#[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass2\")]\n+#[rustc_clean(label=\"typeck_tables_of\", cfg=\"rpass3\")]\n pub fn use_Y() {\n     let x: a::Y = 'c';\n }"}, {"sha": "bcf7e3e6608eaa810d00124f4e54954ce68b461d", "filename": "src/test/ui/dep-graph/dep-graph-assoc-type-codegen.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-assoc-type-codegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-assoc-type-codegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-assoc-type-codegen.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -25,7 +25,7 @@ mod x {\n mod y {\n     use Foo;\n \n-    #[rustc_then_this_would_need(TypeckTables)] //~ ERROR OK\n+    #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR OK\n     pub fn use_char_assoc() {\n         // Careful here: in the representation, <char as Foo>::T gets\n         // normalized away, so at a certain point we had no edge to"}, {"sha": "a603d71596ba627c0ef636ab1e8a6417a316bba0", "filename": "src/test/ui/dep-graph/dep-graph-assoc-type-codegen.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-assoc-type-codegen.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-assoc-type-codegen.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-assoc-type-codegen.stderr?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -1,8 +1,8 @@\n error: OK\n   --> $DIR/dep-graph-assoc-type-codegen.rs:28:5\n    |\n-LL |     #[rustc_then_this_would_need(TypeckTables)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(typeck_tables_of)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "18b4252a06b8443889501c3ceeb0ed1d100ab509", "filename": "src/test/ui/dep-graph/dep-graph-caller-callee.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-caller-callee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-caller-callee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-caller-callee.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -17,7 +17,7 @@ mod y {\n     use x;\n \n     // These dependencies SHOULD exist:\n-    #[rustc_then_this_would_need(TypeckTables)] //~ ERROR OK\n+    #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR OK\n     pub fn y() {\n         x::x();\n     }\n@@ -28,7 +28,7 @@ mod z {\n \n     // These are expected to yield errors, because changes to `x`\n     // affect the BODY of `y`, but not its signature.\n-    #[rustc_then_this_would_need(TypeckTables)] //~ ERROR no path\n+    #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR no path\n     pub fn z() {\n         y::y();\n     }"}, {"sha": "de041e600672d47b8050ee5482ad56e187686efe", "filename": "src/test/ui/dep-graph/dep-graph-caller-callee.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-caller-callee.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-caller-callee.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-caller-callee.stderr?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -1,14 +1,14 @@\n error: OK\n   --> $DIR/dep-graph-caller-callee.rs:20:5\n    |\n-LL |     #[rustc_then_this_would_need(TypeckTables)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(typeck_tables_of)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: no path from `x::x` to `TypeckTables`\n+error: no path from `x::x` to `typeck_tables_of`\n   --> $DIR/dep-graph-caller-callee.rs:31:5\n    |\n-LL |     #[rustc_then_this_would_need(TypeckTables)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(typeck_tables_of)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "8b78d39ecae332ba72d50fb9e542cc5a9d0803e2", "filename": "src/test/ui/dep-graph/dep-graph-struct-signature.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-struct-signature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-struct-signature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-struct-signature.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -25,34 +25,34 @@ mod signatures {\n     use WillChange;\n \n     #[rustc_then_this_would_need(type_of)] //~ ERROR no path\n-    #[rustc_then_this_would_need(AssociatedItems)] //~ ERROR no path\n-    #[rustc_then_this_would_need(TraitDefOfItem)] //~ ERROR no path\n+    #[rustc_then_this_would_need(associated_item)] //~ ERROR no path\n+    #[rustc_then_this_would_need(trait_def)] //~ ERROR no path\n     trait Bar {\n-        #[rustc_then_this_would_need(FnSignature)] //~ ERROR OK\n+        #[rustc_then_this_would_need(fn_sig)] //~ ERROR OK\n         fn do_something(x: WillChange);\n     }\n \n-    #[rustc_then_this_would_need(FnSignature)] //~ ERROR OK\n-    #[rustc_then_this_would_need(TypeckTables)] //~ ERROR OK\n+    #[rustc_then_this_would_need(fn_sig)] //~ ERROR OK\n+    #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR OK\n     fn some_fn(x: WillChange) { }\n \n-    #[rustc_then_this_would_need(FnSignature)] //~ ERROR OK\n-    #[rustc_then_this_would_need(TypeckTables)] //~ ERROR OK\n+    #[rustc_then_this_would_need(fn_sig)] //~ ERROR OK\n+    #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR OK\n     fn new_foo(x: u32, y: u32) -> WillChange {\n         WillChange { x: x, y: y }\n     }\n \n     #[rustc_then_this_would_need(type_of)] //~ ERROR OK\n     impl WillChange {\n-        #[rustc_then_this_would_need(FnSignature)] //~ ERROR OK\n-        #[rustc_then_this_would_need(TypeckTables)] //~ ERROR OK\n+        #[rustc_then_this_would_need(fn_sig)] //~ ERROR OK\n+        #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR OK\n         fn new(x: u32, y: u32) -> WillChange { loop { } }\n     }\n \n     #[rustc_then_this_would_need(type_of)] //~ ERROR OK\n     impl WillChange {\n-        #[rustc_then_this_would_need(FnSignature)] //~ ERROR OK\n-        #[rustc_then_this_would_need(TypeckTables)] //~ ERROR OK\n+        #[rustc_then_this_would_need(fn_sig)] //~ ERROR OK\n+        #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR OK\n         fn method(&self, x: u32) { }\n     }\n \n@@ -73,14 +73,14 @@ mod invalid_signatures {\n \n     #[rustc_then_this_would_need(type_of)] //~ ERROR no path\n     trait A {\n-        #[rustc_then_this_would_need(FnSignature)] //~ ERROR no path\n+        #[rustc_then_this_would_need(fn_sig)] //~ ERROR no path\n         fn do_something_else_twice(x: WontChange);\n     }\n \n-    #[rustc_then_this_would_need(FnSignature)] //~ ERROR no path\n+    #[rustc_then_this_would_need(fn_sig)] //~ ERROR no path\n     fn b(x: WontChange) { }\n \n-    #[rustc_then_this_would_need(FnSignature)] //~ ERROR no path from `WillChange`\n-    #[rustc_then_this_would_need(TypeckTables)] //~ ERROR no path from `WillChange`\n+    #[rustc_then_this_would_need(fn_sig)] //~ ERROR no path from `WillChange`\n+    #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR no path from `WillChange`\n     fn c(x: u32) { }\n }"}, {"sha": "2e00e5a2cbd2f07144d38e7858d342f9e3a2f09d", "filename": "src/test/ui/dep-graph/dep-graph-struct-signature.stderr", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-struct-signature.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-struct-signature.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-struct-signature.stderr?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -4,41 +4,41 @@ error: no path from `WillChange` to `type_of`\n LL |     #[rustc_then_this_would_need(type_of)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: no path from `WillChange` to `AssociatedItems`\n+error: no path from `WillChange` to `associated_item`\n   --> $DIR/dep-graph-struct-signature.rs:28:5\n    |\n-LL |     #[rustc_then_this_would_need(AssociatedItems)]\n+LL |     #[rustc_then_this_would_need(associated_item)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: no path from `WillChange` to `TraitDefOfItem`\n+error: no path from `WillChange` to `trait_def`\n   --> $DIR/dep-graph-struct-signature.rs:29:5\n    |\n-LL |     #[rustc_then_this_would_need(TraitDefOfItem)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(trait_def)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: OK\n   --> $DIR/dep-graph-struct-signature.rs:35:5\n    |\n-LL |     #[rustc_then_this_would_need(FnSignature)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(fn_sig)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: OK\n   --> $DIR/dep-graph-struct-signature.rs:36:5\n    |\n-LL |     #[rustc_then_this_would_need(TypeckTables)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(typeck_tables_of)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: OK\n   --> $DIR/dep-graph-struct-signature.rs:39:5\n    |\n-LL |     #[rustc_then_this_would_need(FnSignature)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(fn_sig)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: OK\n   --> $DIR/dep-graph-struct-signature.rs:40:5\n    |\n-LL |     #[rustc_then_this_would_need(TypeckTables)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(typeck_tables_of)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: OK\n   --> $DIR/dep-graph-struct-signature.rs:45:5\n@@ -76,59 +76,59 @@ error: no path from `WillChange` to `type_of`\n LL |     #[rustc_then_this_would_need(type_of)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: no path from `WillChange` to `FnSignature`\n+error: no path from `WillChange` to `fn_sig`\n   --> $DIR/dep-graph-struct-signature.rs:80:5\n    |\n-LL |     #[rustc_then_this_would_need(FnSignature)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(fn_sig)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: no path from `WillChange` to `FnSignature`\n+error: no path from `WillChange` to `fn_sig`\n   --> $DIR/dep-graph-struct-signature.rs:83:5\n    |\n-LL |     #[rustc_then_this_would_need(FnSignature)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(fn_sig)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: no path from `WillChange` to `TypeckTables`\n+error: no path from `WillChange` to `typeck_tables_of`\n   --> $DIR/dep-graph-struct-signature.rs:84:5\n    |\n-LL |     #[rustc_then_this_would_need(TypeckTables)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(typeck_tables_of)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: OK\n   --> $DIR/dep-graph-struct-signature.rs:31:9\n    |\n-LL |         #[rustc_then_this_would_need(FnSignature)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |         #[rustc_then_this_would_need(fn_sig)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: no path from `WillChange` to `FnSignature`\n+error: no path from `WillChange` to `fn_sig`\n   --> $DIR/dep-graph-struct-signature.rs:76:9\n    |\n-LL |         #[rustc_then_this_would_need(FnSignature)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |         #[rustc_then_this_would_need(fn_sig)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: OK\n   --> $DIR/dep-graph-struct-signature.rs:47:9\n    |\n-LL |         #[rustc_then_this_would_need(FnSignature)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |         #[rustc_then_this_would_need(fn_sig)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: OK\n   --> $DIR/dep-graph-struct-signature.rs:48:9\n    |\n-LL |         #[rustc_then_this_would_need(TypeckTables)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |         #[rustc_then_this_would_need(typeck_tables_of)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: OK\n   --> $DIR/dep-graph-struct-signature.rs:54:9\n    |\n-LL |         #[rustc_then_this_would_need(FnSignature)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |         #[rustc_then_this_would_need(fn_sig)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: OK\n   --> $DIR/dep-graph-struct-signature.rs:55:9\n    |\n-LL |         #[rustc_then_this_would_need(TypeckTables)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |         #[rustc_then_this_would_need(typeck_tables_of)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 22 previous errors\n "}, {"sha": "38622a754ddb2cb339542757677d440b0082bedc", "filename": "src/test/ui/dep-graph/dep-graph-trait-impl-two-traits-same-method.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl-two-traits-same-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl-two-traits-same-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl-two-traits-same-method.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -29,7 +29,7 @@ mod x {\n mod y {\n     use {Foo, Bar};\n \n-    #[rustc_then_this_would_need(TypeckTables)] //~ ERROR OK\n+    #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR OK\n     pub fn with_char() {\n         char::method('a');\n     }\n@@ -38,7 +38,7 @@ mod y {\n mod z {\n     use y;\n \n-    #[rustc_then_this_would_need(TypeckTables)] //~ ERROR no path\n+    #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR no path\n     pub fn z() {\n         y::with_char();\n     }"}, {"sha": "3384fd7b4acf570583964d1d6069a36971fed979", "filename": "src/test/ui/dep-graph/dep-graph-trait-impl-two-traits-same-method.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl-two-traits-same-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl-two-traits-same-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl-two-traits-same-method.stderr?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -1,14 +1,14 @@\n error: OK\n   --> $DIR/dep-graph-trait-impl-two-traits-same-method.rs:32:5\n    |\n-LL |     #[rustc_then_this_would_need(TypeckTables)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(typeck_tables_of)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: no path from `x::<impl Foo for u32>` to `TypeckTables`\n+error: no path from `x::<impl Foo for u32>` to `typeck_tables_of`\n   --> $DIR/dep-graph-trait-impl-two-traits-same-method.rs:41:5\n    |\n-LL |     #[rustc_then_this_would_need(TypeckTables)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(typeck_tables_of)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "82306b6539c155263abd6eb158b8399eb82ceb63", "filename": "src/test/ui/dep-graph/dep-graph-trait-impl-two-traits.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl-two-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl-two-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl-two-traits.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -28,7 +28,7 @@ mod x {\n mod y {\n     use {Foo, Bar};\n \n-    #[rustc_then_this_would_need(TypeckTables)] //~ ERROR no path\n+    #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR no path\n     pub fn call_bar() {\n         char::bar('a');\n     }\n@@ -37,7 +37,7 @@ mod y {\n mod z {\n     use y;\n \n-    #[rustc_then_this_would_need(TypeckTables)] //~ ERROR no path\n+    #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR no path\n     pub fn z() {\n         y::call_bar();\n     }"}, {"sha": "d8a1f05dcaa7920143370e70dc097f51fdf2cb54", "filename": "src/test/ui/dep-graph/dep-graph-trait-impl-two-traits.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl-two-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl-two-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl-two-traits.stderr?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -1,14 +1,14 @@\n-error: no path from `x::<impl Foo for char>` to `TypeckTables`\n+error: no path from `x::<impl Foo for char>` to `typeck_tables_of`\n   --> $DIR/dep-graph-trait-impl-two-traits.rs:31:5\n    |\n-LL |     #[rustc_then_this_would_need(TypeckTables)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(typeck_tables_of)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: no path from `x::<impl Foo for char>` to `TypeckTables`\n+error: no path from `x::<impl Foo for char>` to `typeck_tables_of`\n   --> $DIR/dep-graph-trait-impl-two-traits.rs:40:5\n    |\n-LL |     #[rustc_then_this_would_need(TypeckTables)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(typeck_tables_of)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "e4483b9f71ddb22a95cb50d09eb6afd2655902c3", "filename": "src/test/ui/dep-graph/dep-graph-trait-impl.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -24,22 +24,22 @@ mod x {\n mod y {\n     use Foo;\n \n-    #[rustc_then_this_would_need(TypeckTables)] //~ ERROR OK\n+    #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR OK\n     pub fn with_char() {\n         char::method('a');\n     }\n \n-    #[rustc_then_this_would_need(TypeckTables)] //~ ERROR OK\n+    #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR OK\n     pub fn take_foo_with_char() {\n         take_foo::<char>('a');\n     }\n \n-    #[rustc_then_this_would_need(TypeckTables)] //~ ERROR OK\n+    #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR OK\n     pub fn with_u32() {\n         u32::method(22);\n     }\n \n-    #[rustc_then_this_would_need(TypeckTables)] //~ ERROR OK\n+    #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR OK\n     pub fn take_foo_with_u32() {\n         take_foo::<u32>(22);\n     }\n@@ -52,7 +52,7 @@ mod z {\n \n     // These are expected to yield errors, because changes to `x`\n     // affect the BODY of `y`, but not its signature.\n-    #[rustc_then_this_would_need(TypeckTables)] //~ ERROR no path\n+    #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR no path\n     pub fn z() {\n         y::with_char();\n         y::with_u32();"}, {"sha": "ca9676a9478e4c826f9d34fb2131db629657a0b6", "filename": "src/test/ui/dep-graph/dep-graph-trait-impl.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-trait-impl.stderr?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -1,32 +1,32 @@\n error: OK\n   --> $DIR/dep-graph-trait-impl.rs:27:5\n    |\n-LL |     #[rustc_then_this_would_need(TypeckTables)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(typeck_tables_of)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: OK\n   --> $DIR/dep-graph-trait-impl.rs:32:5\n    |\n-LL |     #[rustc_then_this_would_need(TypeckTables)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(typeck_tables_of)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: OK\n   --> $DIR/dep-graph-trait-impl.rs:37:5\n    |\n-LL |     #[rustc_then_this_would_need(TypeckTables)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(typeck_tables_of)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: OK\n   --> $DIR/dep-graph-trait-impl.rs:42:5\n    |\n-LL |     #[rustc_then_this_would_need(TypeckTables)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(typeck_tables_of)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: no path from `x::<impl Foo for char>` to `TypeckTables`\n+error: no path from `x::<impl Foo for char>` to `typeck_tables_of`\n   --> $DIR/dep-graph-trait-impl.rs:55:5\n    |\n-LL |     #[rustc_then_this_would_need(TypeckTables)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(typeck_tables_of)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 5 previous errors\n "}, {"sha": "2d4a18f2818b57d71bfe8a78d0f175ec016177cf", "filename": "src/test/ui/dep-graph/dep-graph-type-alias.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-type-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-type-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-type-alias.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -32,24 +32,24 @@ enum Enum {\n \n #[rustc_then_this_would_need(type_of)] //~ ERROR no path\n trait Trait {\n-    #[rustc_then_this_would_need(FnSignature)] //~ ERROR OK\n+    #[rustc_then_this_would_need(fn_sig)] //~ ERROR OK\n     fn method(&self, _: TypeAlias);\n }\n \n struct SomeType;\n \n #[rustc_then_this_would_need(type_of)] //~ ERROR no path\n impl SomeType {\n-    #[rustc_then_this_would_need(FnSignature)] //~ ERROR OK\n-    #[rustc_then_this_would_need(TypeckTables)] //~ ERROR OK\n+    #[rustc_then_this_would_need(fn_sig)] //~ ERROR OK\n+    #[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR OK\n     fn method(&self, _: TypeAlias) {}\n }\n \n #[rustc_then_this_would_need(type_of)] //~ ERROR OK\n type TypeAlias2 = TypeAlias;\n \n-#[rustc_then_this_would_need(FnSignature)] //~ ERROR OK\n-#[rustc_then_this_would_need(TypeckTables)] //~ ERROR OK\n+#[rustc_then_this_would_need(fn_sig)] //~ ERROR OK\n+#[rustc_then_this_would_need(typeck_tables_of)] //~ ERROR OK\n fn function(_: TypeAlias) {\n \n }"}, {"sha": "393e4badc160847447f08c3608a7eadb45a94118", "filename": "src/test/ui/dep-graph/dep-graph-type-alias.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-type-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-type-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-type-alias.stderr?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -43,32 +43,32 @@ LL | #[rustc_then_this_would_need(type_of)]\n error: OK\n   --> $DIR/dep-graph-type-alias.rs:51:1\n    |\n-LL | #[rustc_then_this_would_need(FnSignature)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #[rustc_then_this_would_need(fn_sig)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: OK\n   --> $DIR/dep-graph-type-alias.rs:52:1\n    |\n-LL | #[rustc_then_this_would_need(TypeckTables)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #[rustc_then_this_would_need(typeck_tables_of)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: OK\n   --> $DIR/dep-graph-type-alias.rs:35:5\n    |\n-LL |     #[rustc_then_this_would_need(FnSignature)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(fn_sig)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: OK\n   --> $DIR/dep-graph-type-alias.rs:43:5\n    |\n-LL |     #[rustc_then_this_would_need(FnSignature)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(fn_sig)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: OK\n   --> $DIR/dep-graph-type-alias.rs:44:5\n    |\n-LL |     #[rustc_then_this_would_need(TypeckTables)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[rustc_then_this_would_need(typeck_tables_of)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 12 previous errors\n "}, {"sha": "95645687307a37f07fa3527ddb78baee46e7924e", "filename": "src/test/ui/dep-graph/dep-graph-variance-alias.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-variance-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-variance-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-variance-alias.rs?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -16,7 +16,7 @@ struct Foo<T> {\n #[rustc_if_this_changed(Krate)]\n type TypeAlias<T> = Foo<T>;\n \n-#[rustc_then_this_would_need(ItemVariances)] //~ ERROR OK\n+#[rustc_then_this_would_need(variances_of)] //~ ERROR OK\n struct Use<T> {\n     x: TypeAlias<T>\n }"}, {"sha": "554ff455a2073580156b905e8ed63021bd50bdbf", "filename": "src/test/ui/dep-graph/dep-graph-variance-alias.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-variance-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45580684825c1855a4be5a7b4cd28525b24e7322/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-variance-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdep-graph%2Fdep-graph-variance-alias.stderr?ref=45580684825c1855a4be5a7b4cd28525b24e7322", "patch": "@@ -1,8 +1,8 @@\n error: OK\n   --> $DIR/dep-graph-variance-alias.rs:19:1\n    |\n-LL | #[rustc_then_this_would_need(ItemVariances)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #[rustc_then_this_would_need(variances_of)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}]}