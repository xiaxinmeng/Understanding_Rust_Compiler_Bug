{"sha": "f698505177eb1853b3d905bbe1005140acd50d53", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2OTg1MDUxNzdlYjE4NTNiM2Q5MDViYmUxMDA1MTQwYWNkNTBkNTM=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-17T15:14:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-17T15:14:00Z"}, "message": "Rollup merge of #79130 - lcnr:extend-tes, r=varkor\n\nextend macro braces test\n\nr? `@varkor`", "tree": {"sha": "ce8406ee4a726bc8db7c864518f3d8ea16ea8c6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce8406ee4a726bc8db7c864518f3d8ea16ea8c6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f698505177eb1853b3d905bbe1005140acd50d53", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfs+i4CRBK7hj4Ov3rIwAAdHIIAGwCpAebCTJSl24kLApc50zH\n7cCfjwl+Jb7aapEm6Rkm1yDQPf625PhTSrhDDfesaIb+pnBMTozhqqYS0ivMz80Z\nz6PkSr5Xp16pB9LflTKJ8NsZUtM1GELWMddvT97F+Mhj1kDQ4D80ooOqRZmYK8Os\nmJph+LBqp1C7BWlhBKeI8BjUlf01uM0y89Al//MqIf2/z1tfadV3TKeoB/nCs1D0\n5KpnVTfPEE5c8TOKQ9RnTa8wamtB/qYt/RCX6EV7FppDsgBi7judjVk1OPPGk/EV\nqDVgRz0jgF1YK5ryawAiRKN6qZtIX1IUlUAQHiP7sfgMyJHbSwTvFTECiatwkR0=\n=jZDh\n-----END PGP SIGNATURE-----\n", "payload": "tree ce8406ee4a726bc8db7c864518f3d8ea16ea8c6e\nparent ca38bd4230c80651348eda0964d92ea379c4e1a7\nparent 5f2a627f8959ac4a2b836ddb32b38dea9f77737e\nauthor Mara Bos <m-ou.se@m-ou.se> 1605626040 +0100\ncommitter GitHub <noreply@github.com> 1605626040 +0100\n\nRollup merge of #79130 - lcnr:extend-tes, r=varkor\n\nextend macro braces test\n\nr? `@varkor`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f698505177eb1853b3d905bbe1005140acd50d53", "html_url": "https://github.com/rust-lang/rust/commit/f698505177eb1853b3d905bbe1005140acd50d53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f698505177eb1853b3d905bbe1005140acd50d53/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca38bd4230c80651348eda0964d92ea379c4e1a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca38bd4230c80651348eda0964d92ea379c4e1a7", "html_url": "https://github.com/rust-lang/rust/commit/ca38bd4230c80651348eda0964d92ea379c4e1a7"}, {"sha": "5f2a627f8959ac4a2b836ddb32b38dea9f77737e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f2a627f8959ac4a2b836ddb32b38dea9f77737e", "html_url": "https://github.com/rust-lang/rust/commit/5f2a627f8959ac4a2b836ddb32b38dea9f77737e"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "e5b67f61a25b7463c315ebb2fb29d51c003b9b83", "filename": "src/test/ui/const-generics/macro_rules-braces.full.stderr", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f698505177eb1853b3d905bbe1005140acd50d53/src%2Ftest%2Fui%2Fconst-generics%2Fmacro_rules-braces.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f698505177eb1853b3d905bbe1005140acd50d53/src%2Ftest%2Fui%2Fconst-generics%2Fmacro_rules-braces.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmacro_rules-braces.full.stderr?ref=f698505177eb1853b3d905bbe1005140acd50d53", "patch": "@@ -9,6 +9,17 @@ help: enclose the `const` expression in braces\n LL |     let _: baz!({ N });\n    |                 ^   ^\n \n+error: expressions must be enclosed in braces to be used as const generic arguments\n+  --> $DIR/macro_rules-braces.rs:54:17\n+   |\n+LL |     let _: baz!(10 + 7);\n+   |                 ^^^^^^\n+   |\n+help: enclose the `const` expression in braces\n+   |\n+LL |     let _: baz!({ 10 + 7 });\n+   |                 ^        ^\n+\n error: constant expression depends on a generic parameter\n   --> $DIR/macro_rules-braces.rs:10:13\n    |\n@@ -57,5 +68,5 @@ LL |     let _: biz!({ N });\n    = note: this may fail depending on what value the parameter takes\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 6 previous errors\n "}, {"sha": "a4ef732017dd531448afbc3773fb60e830a01abd", "filename": "src/test/ui/const-generics/macro_rules-braces.min.stderr", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f698505177eb1853b3d905bbe1005140acd50d53/src%2Ftest%2Fui%2Fconst-generics%2Fmacro_rules-braces.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f698505177eb1853b3d905bbe1005140acd50d53/src%2Ftest%2Fui%2Fconst-generics%2Fmacro_rules-braces.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmacro_rules-braces.min.stderr?ref=f698505177eb1853b3d905bbe1005140acd50d53", "patch": "@@ -9,6 +9,17 @@ help: enclose the `const` expression in braces\n LL |     let _: baz!({ N });\n    |                 ^   ^\n \n+error: expressions must be enclosed in braces to be used as const generic arguments\n+  --> $DIR/macro_rules-braces.rs:54:17\n+   |\n+LL |     let _: baz!(10 + 7);\n+   |                 ^^^^^^\n+   |\n+help: enclose the `const` expression in braces\n+   |\n+LL |     let _: baz!({ 10 + 7 });\n+   |                 ^        ^\n+\n error: generic parameters may not be used in const operations\n   --> $DIR/macro_rules-braces.rs:31:20\n    |\n@@ -41,5 +52,5 @@ LL |     let _: biz!({ N });\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 6 previous errors\n "}, {"sha": "bc67d464f11bb0170c8cd045225e9b52bb6e75c2", "filename": "src/test/ui/const-generics/macro_rules-braces.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f698505177eb1853b3d905bbe1005140acd50d53/src%2Ftest%2Fui%2Fconst-generics%2Fmacro_rules-braces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f698505177eb1853b3d905bbe1005140acd50d53/src%2Ftest%2Fui%2Fconst-generics%2Fmacro_rules-braces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmacro_rules-braces.rs?ref=f698505177eb1853b3d905bbe1005140acd50d53", "patch": "@@ -36,6 +36,26 @@ fn test<const N: usize>() {\n     let _: baz!({{ N }}); //[min]~ ERROR generic parameters may not\n     let _: biz!(N);\n     let _: biz!({ N }); //[min]~ ERROR generic parameters may not\n+    let _: foo!(3);\n+    let _: foo!({ 3 });\n+    let _: foo!({{ 3 }});\n+    let _: bar!(3);\n+    let _: bar!({ 3 });\n+    let _: baz!(3);\n+    let _: baz!({ 3 });\n+    let _: baz!({{ 3 }});\n+    let _: biz!(3);\n+    let _: biz!({ 3 });\n+    let _: foo!(10 + 7);\n+    let _: foo!({ 10 + 7 });\n+    let _: foo!({{ 10 + 7 }});\n+    let _: bar!(10 + 7);\n+    let _: bar!({ 10 + 7 });\n+    let _: baz!(10 + 7); //~ ERROR expressions must be enclosed in braces\n+    let _: baz!({ 10 + 7 });\n+    let _: baz!({{ 10 + 7 }});\n+    let _: biz!(10 + 7);\n+    let _: biz!({ 10 + 7 });\n }\n \n fn main() {"}]}