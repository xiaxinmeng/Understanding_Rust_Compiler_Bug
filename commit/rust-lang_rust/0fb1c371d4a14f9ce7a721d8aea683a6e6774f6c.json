{"sha": "0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c", "node_id": "C_kwDOAAsO6NoAKDBmYjFjMzcxZDRhMTRmOWNlN2E3MjFkOGFlYTY4M2E2ZTY3NzRmNmM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-06T13:04:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-06T13:04:18Z"}, "message": "Auto merge of #91279 - scottmcm:small-refactor, r=nagisa\n\nSmall mir-opt refactor\n\nHopefully-non-controversial changes from some not-ready-yet work that I'd figured I'd submit on their own.", "tree": {"sha": "3dc1b51c056329110731a9da6e766e494302bb8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dc1b51c056329110731a9da6e766e494302bb8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c", "html_url": "https://github.com/rust-lang/rust/commit/0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc9326d83d0d8368057ca8ff21c5260a4286f7ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc9326d83d0d8368057ca8ff21c5260a4286f7ab", "html_url": "https://github.com/rust-lang/rust/commit/bc9326d83d0d8368057ca8ff21c5260a4286f7ab"}, {"sha": "b215a32af361c0ac4a6670fa7878bcdc6ea12bbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/b215a32af361c0ac4a6670fa7878bcdc6ea12bbd", "html_url": "https://github.com/rust-lang/rust/commit/b215a32af361c0ac4a6670fa7878bcdc6ea12bbd"}], "stats": {"total": 34, "additions": 11, "deletions": 23}, "files": [{"sha": "d4530883b6a102bc44ad24f3bcb16949ad51d424", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c", "patch": "@@ -1519,6 +1519,7 @@ impl Statement<'_> {\n     }\n \n     /// Changes a statement to a nop and returns the original statement.\n+    #[must_use = \"If you don't need the statement, use `make_nop` instead\"]\n     pub fn replace_nop(&mut self) -> Self {\n         Statement {\n             source_info: self.source_info,"}, {"sha": "d52b6a8bc75872d743b38391d18e42fec9ce579c", "filename": "compiler/rustc_middle/src/mir/terminator.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fterminator.rs?ref=0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c", "patch": "@@ -78,6 +78,13 @@ impl SwitchTargets {\n     pub fn all_targets_mut(&mut self) -> &mut [BasicBlock] {\n         &mut self.targets\n     }\n+\n+    /// Finds the `BasicBlock` to which this `SwitchInt` will branch given the\n+    /// specific value.  This cannot fail, as it'll return the `otherwise`\n+    /// branch if there's not a specific match for the value.\n+    pub fn target_for_value(&self, value: u128) -> BasicBlock {\n+        self.iter().find_map(|(v, t)| (v == value).then_some(t)).unwrap_or_else(|| self.otherwise())\n+    }\n }\n \n pub struct SwitchTargetsIter<'a> {"}, {"sha": "0b5b911e9a5c8be93aa84d02a755d11e3da3faa0", "filename": "compiler/rustc_mir_transform/src/const_goto.rs", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_goto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_goto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_goto.rs?ref=0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c", "patch": "@@ -83,20 +83,7 @@ impl<'a, 'tcx> Visitor<'tcx> for ConstGotoOptimizationFinder<'a, 'tcx> {\n                     // Now find which value in the Switch matches the const value.\n                     let const_value =\n                         _const.literal.try_eval_bits(self.tcx, self.param_env, switch_ty)?;\n-                    let found_value_idx_option = targets\n-                        .iter()\n-                        .enumerate()\n-                        .find(|(_, (value, _))| const_value == *value)\n-                        .map(|(idx, _)| idx);\n-\n-                    let target_to_use_in_goto =\n-                        if let Some(found_value_idx) = found_value_idx_option {\n-                            targets.iter().nth(found_value_idx).unwrap().1\n-                        } else {\n-                            // If we did not find the const value in values, it must be the otherwise case\n-                            targets.otherwise()\n-                        };\n-\n+                    let target_to_use_in_goto = targets.target_for_value(const_value);\n                     self.optimizations.push(OptimizationToApply {\n                         bb_with_goto: location.block,\n                         target_to_use_in_goto,"}, {"sha": "3bbae5b8976ccde862a084291b64948a56de8315", "filename": "compiler/rustc_mir_transform/src/simplify_branches.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_branches.rs?ref=0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c", "patch": "@@ -33,15 +33,8 @@ impl<'tcx> MirPass<'tcx> for SimplifyConstCondition {\n                 } => {\n                     let constant = c.literal.try_eval_bits(tcx, param_env, switch_ty);\n                     if let Some(constant) = constant {\n-                        let otherwise = targets.otherwise();\n-                        let mut ret = TerminatorKind::Goto { target: otherwise };\n-                        for (v, t) in targets.iter() {\n-                            if v == constant {\n-                                ret = TerminatorKind::Goto { target: t };\n-                                break;\n-                            }\n-                        }\n-                        ret\n+                        let target = targets.target_for_value(constant);\n+                        TerminatorKind::Goto { target }\n                     } else {\n                         continue;\n                     }"}]}