{"sha": "3480986408b2a9ea07a3eaf849942ac3cb797b5d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0ODA5ODY0MDhiMmE5ZWEwN2EzZWFmODQ5OTQyYWMzY2I3OTdiNWQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-20T22:33:52Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-20T22:33:52Z"}, "message": "core: Minor doc tweakage", "tree": {"sha": "4ef6c3a236af16bd7887849d6a33e583a5608a6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ef6c3a236af16bd7887849d6a33e583a5608a6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3480986408b2a9ea07a3eaf849942ac3cb797b5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3480986408b2a9ea07a3eaf849942ac3cb797b5d", "html_url": "https://github.com/rust-lang/rust/commit/3480986408b2a9ea07a3eaf849942ac3cb797b5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3480986408b2a9ea07a3eaf849942ac3cb797b5d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bd02b113c02c1b3eea33cc339d71697a316d412", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bd02b113c02c1b3eea33cc339d71697a316d412", "html_url": "https://github.com/rust-lang/rust/commit/0bd02b113c02c1b3eea33cc339d71697a316d412"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "bc0f4c62af72710a360f58e09469e2b91b93f3d2", "filename": "src/libcore/at_vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3480986408b2a9ea07a3eaf849942ac3cb797b5d/src%2Flibcore%2Fat_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3480986408b2a9ea07a3eaf849942ac3cb797b5d/src%2Flibcore%2Fat_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fat_vec.rs?ref=3480986408b2a9ea07a3eaf849942ac3cb797b5d", "patch": "@@ -1,4 +1,4 @@\n-//! Shared Vectors\n+//! Managed vectors\n \n use ptr::addr_of;\n "}, {"sha": "fe1e10af7155399731217ad2fc378b4ffbc4271e", "filename": "src/libcore/box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3480986408b2a9ea07a3eaf849942ac3cb797b5d/src%2Flibcore%2Fbox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3480986408b2a9ea07a3eaf849942ac3cb797b5d/src%2Flibcore%2Fbox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbox.rs?ref=3480986408b2a9ea07a3eaf849942ac3cb797b5d", "patch": "@@ -1,4 +1,4 @@\n-//! Operations on shared box types\n+//! Operations on managed box types\n \n // NB: transitionary, de-mode-ing.\n #[forbid(deprecated_mode)];"}, {"sha": "aa9a558edc79260796d1770a3011edf58214e695", "filename": "src/libcore/char.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3480986408b2a9ea07a3eaf849942ac3cb797b5d/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3480986408b2a9ea07a3eaf849942ac3cb797b5d/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=3480986408b2a9ea07a3eaf849942ac3cb797b5d", "patch": "@@ -69,7 +69,7 @@ pure fn is_uppercase(c: char) -> bool {\n }\n \n /**\n- * Indicates whether a character is whitespace, defined in\n+ * Indicates whether a character is whitespace. Whitespace is defined in\n  * terms of the Unicode General Categories 'Zs', 'Zl', 'Zp'\n  * additional 'Cc'-category control codes in the range [0x09, 0x0d]\n  */\n@@ -81,9 +81,9 @@ pure fn is_whitespace(c: char) -> bool {\n }\n \n /**\n- * Indicates whether a character is alphanumeric, defined\n- * in terms of the Unicode General Categories 'Nd',\n- * 'Nl', 'No' and the Derived Core Property 'Alphabetic'.\n+ * Indicates whether a character is alphanumeric. Alphanumericness is\n+ * defined in terms of the Unicode General Categories 'Nd', 'Nl', 'No'\n+ * and the Derived Core Property 'Alphabetic'.\n  */\n pure fn is_alphanumeric(c: char) -> bool {\n     return unicode::derived_property::Alphabetic(c) ||\n@@ -107,10 +107,6 @@ pure fn is_digit(c: char) -> bool {\n /**\n  * Convert a char to the corresponding digit.\n  *\n- * # Safety note\n- *\n- * This function returns none if `c` is not a valid char\n- *\n  * # Return value\n  *\n  * If `c` is between '0' and '9', the corresponding value"}]}