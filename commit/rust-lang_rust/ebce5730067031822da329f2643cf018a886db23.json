{"sha": "ebce5730067031822da329f2643cf018a886db23", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViY2U1NzMwMDY3MDMxODIyZGEzMjlmMjY0M2NmMDE4YTg4NmRiMjM=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-06-18T17:45:01Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-06-18T17:45:01Z"}, "message": "Refactor: Replace NodeSet with HirIdSet\n\nThis saves us one HirId -> NodeId conversion.", "tree": {"sha": "db3af7e1e7bfd80c04aa5f1cf7df22ef09bc0b8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db3af7e1e7bfd80c04aa5f1cf7df22ef09bc0b8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebce5730067031822da329f2643cf018a886db23", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEEj4U0bmbiMSg/mWqvgqphyqETl+YFAl0JI0oQHGRldkBwaGFu\nc2NoLm5ldAAKCRCCqmHKoROX5p2ND/9aHUO3ATqN0Q72kd1sHaRCXAUvMp0gIoZ4\nSyO20evOfmOJiXoO9m4va529Jp/EL0uBRH/HoUN0va2PuelOEiGR8LWoWQnAqw5a\nSB2ui31N4LaTYgYVlwbq50fxqBYLHIrcvhLcTfFGC+9/FOIzF03WTgn6esX309NF\n3LWvckATrwn/f7ChDrbJg1ZeyU8H/G2D8IQLGS3bGRY/6SHRfbDoWh7TjdhEHWsb\ni00WBciU+AqN/v9YXsqfEkDJrLIxGJm96Cad+9P5lqtDbfVcmDuzzrL0PT9SBLBt\nzb2FrDPHocNzziWgR3P+NnWPxAy6GL8t7NZO1QjNZLWYtJhx+QAL8Rc9fddQYbr8\n7Z/sSVImdB17gsN5B6SXzX32XyWjAn0Ry9+DukPirrzFQcL7zWjU30v0Qwlvgvkl\nVWivFu/T7qyUzAFbn3/iancXpmmkPJOFWSArzYF+48GXsUsKX0SFt7cTUAdnw67U\nKMPe3kN0gMZeebvNZYlO4pT6E1NSTVCYmwRva42SkS4riPWexaMFTGgeE4oIRZ4z\nHFSsIpC8qeNIikG3iSD2I135yUeGOqBDm0zLDyoV7zrN7i13wPXo6jvaisQ2rkRr\n2i5PcISPok2qMMcCf0947HFt8wfA7gVhT5756x/uVKTp4qMuYO2NOZXP+zJ+Fiuu\nsaoWLnSx5w==\n=ptA5\n-----END PGP SIGNATURE-----", "payload": "tree db3af7e1e7bfd80c04aa5f1cf7df22ef09bc0b8b\nparent 868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9\nauthor Philipp Hansch <dev@phansch.net> 1560879901 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1560879901 +0200\n\nRefactor: Replace NodeSet with HirIdSet\n\nThis saves us one HirId -> NodeId conversion.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebce5730067031822da329f2643cf018a886db23", "html_url": "https://github.com/rust-lang/rust/commit/ebce5730067031822da329f2643cf018a886db23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebce5730067031822da329f2643cf018a886db23/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9", "html_url": "https://github.com/rust-lang/rust/commit/868f168c1c5fa9f19c922f3b0ba5be3980f6b0a9"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "68d357a75721173f62a7eae11c23d7647fa49e2d", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ebce5730067031822da329f2643cf018a886db23/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebce5730067031822da329f2643cf018a886db23/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=ebce5730067031822da329f2643cf018a886db23", "patch": "@@ -6,7 +6,7 @@ use rustc::hir;\n use rustc::hir::def_id::DefId;\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc::ty::{self, Ty};\n-use rustc::util::nodemap::NodeSet;\n+use rustc::util::nodemap::HirIdSet;\n use rustc::{declare_tool_lint, impl_lint_pass};\n use rustc_errors::Applicability;\n use syntax::source_map::Span;\n@@ -86,7 +86,7 @@ declare_clippy_lint! {\n \n #[derive(Clone, Default)]\n pub struct NewWithoutDefault {\n-    impling_types: Option<NodeSet>,\n+    impling_types: Option<HirIdSet>,\n }\n \n impl_lint_pass!(NewWithoutDefault => [NEW_WITHOUT_DEFAULT]);\n@@ -128,11 +128,11 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NewWithoutDefault {\n                                 if let Some(default_trait_id) = get_trait_def_id(cx, &paths::DEFAULT_TRAIT);\n                                 then {\n                                     if self.impling_types.is_none() {\n-                                        let mut impls = NodeSet::default();\n+                                        let mut impls = HirIdSet::default();\n                                         cx.tcx.for_each_impl(default_trait_id, |d| {\n                                             if let Some(ty_def) = cx.tcx.type_of(d).ty_adt_def() {\n-                                                if let Some(node_id) = cx.tcx.hir().as_local_node_id(ty_def.did) {\n-                                                    impls.insert(node_id);\n+                                                if let Some(hir_id) = cx.tcx.hir().as_local_hir_id(ty_def.did) {\n+                                                    impls.insert(hir_id);\n                                                 }\n                                             }\n                                         });\n@@ -147,8 +147,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NewWithoutDefault {\n                                         if self_def.did.is_local();\n                                         then {\n                                             let self_id = cx.tcx.hir().local_def_id_to_hir_id(self_def.did.to_local());\n-                                            let node_id = cx.tcx.hir().hir_to_node_id(self_id);\n-                                            if impling_types.contains(&node_id) {\n+                                            if impling_types.contains(&self_id) {\n                                                 return;\n                                             }\n                                         }"}]}