{"sha": "1545f4e2a323eb869b13f36bd05cc91ff21d5161", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1NDVmNGUyYTMyM2ViODY5YjEzZjM2YmQwNWNjOTFmZjIxZDUxNjE=", "commit": {"author": {"name": "Sean Gillespie", "email": "sean@swgillespie.me", "date": "2017-03-14T01:42:23Z"}, "committer": {"name": "Sean Gillespie", "email": "sean@swgillespie.me", "date": "2017-03-14T01:42:23Z"}, "message": "std: remove a workaround for privacy limitations that isn't necessary anymore", "tree": {"sha": "bbe9c733cd10f59efea9df1e918d08b21cafad98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbe9c733cd10f59efea9df1e918d08b21cafad98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1545f4e2a323eb869b13f36bd05cc91ff21d5161", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1545f4e2a323eb869b13f36bd05cc91ff21d5161", "html_url": "https://github.com/rust-lang/rust/commit/1545f4e2a323eb869b13f36bd05cc91ff21d5161", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1545f4e2a323eb869b13f36bd05cc91ff21d5161/comments", "author": {"login": "swgillespie", "id": 1871912, "node_id": "MDQ6VXNlcjE4NzE5MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1871912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swgillespie", "html_url": "https://github.com/swgillespie", "followers_url": "https://api.github.com/users/swgillespie/followers", "following_url": "https://api.github.com/users/swgillespie/following{/other_user}", "gists_url": "https://api.github.com/users/swgillespie/gists{/gist_id}", "starred_url": "https://api.github.com/users/swgillespie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swgillespie/subscriptions", "organizations_url": "https://api.github.com/users/swgillespie/orgs", "repos_url": "https://api.github.com/users/swgillespie/repos", "events_url": "https://api.github.com/users/swgillespie/events{/privacy}", "received_events_url": "https://api.github.com/users/swgillespie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "swgillespie", "id": 1871912, "node_id": "MDQ6VXNlcjE4NzE5MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1871912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swgillespie", "html_url": "https://github.com/swgillespie", "followers_url": "https://api.github.com/users/swgillespie/followers", "following_url": "https://api.github.com/users/swgillespie/following{/other_user}", "gists_url": "https://api.github.com/users/swgillespie/gists{/gist_id}", "starred_url": "https://api.github.com/users/swgillespie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swgillespie/subscriptions", "organizations_url": "https://api.github.com/users/swgillespie/orgs", "repos_url": "https://api.github.com/users/swgillespie/repos", "events_url": "https://api.github.com/users/swgillespie/events{/privacy}", "received_events_url": "https://api.github.com/users/swgillespie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd182c4010b5aee72d070b15e90c98cb0fdc3776", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd182c4010b5aee72d070b15e90c98cb0fdc3776", "html_url": "https://github.com/rust-lang/rust/commit/fd182c4010b5aee72d070b15e90c98cb0fdc3776"}], "stats": {"total": 18, "additions": 4, "deletions": 14}, "files": [{"sha": "6c791cd336ded6b20ff19a5fb2715cb958f48206", "filename": "src/libstd/rt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1545f4e2a323eb869b13f36bd05cc91ff21d5161/src%2Flibstd%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1545f4e2a323eb869b13f36bd05cc91ff21d5161/src%2Flibstd%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt.rs?ref=1545f4e2a323eb869b13f36bd05cc91ff21d5161", "patch": "@@ -34,7 +34,7 @@ fn lang_start(main: *const u8, argc: isize, argv: *const *const u8) -> isize {\n     use panic;\n     use sys;\n     use sys_common;\n-    use sys_common::thread_info::{self, NewThread};\n+    use sys_common::thread_info;\n     use thread::Thread;\n \n     sys::init();\n@@ -47,7 +47,7 @@ fn lang_start(main: *const u8, argc: isize, argv: *const *const u8) -> isize {\n         // created. Note that this isn't necessary in general for new threads,\n         // but we just do this to name the main thread and to give it correct\n         // info about the stack bounds.\n-        let thread: Thread = NewThread::new(Some(\"main\".to_owned()));\n+        let thread = Thread::new(Some(\"main\".to_owned()));\n         thread_info::set(main_guard, thread);\n \n         // Store our args if necessary in a squirreled away location"}, {"sha": "5ed48ee45587190e42a047427d4b3015ac012908", "filename": "src/libstd/sys_common/thread_info.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1545f4e2a323eb869b13f36bd05cc91ff21d5161/src%2Flibstd%2Fsys_common%2Fthread_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1545f4e2a323eb869b13f36bd05cc91ff21d5161/src%2Flibstd%2Fsys_common%2Fthread_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fthread_info.rs?ref=1545f4e2a323eb869b13f36bd05cc91ff21d5161", "patch": "@@ -31,7 +31,7 @@ impl ThreadInfo {\n             if c.borrow().is_none() {\n                 *c.borrow_mut() = Some(ThreadInfo {\n                     stack_guard: None,\n-                    thread: NewThread::new(None),\n+                    thread: Thread::new(None),\n                 })\n             }\n             Some(f(c.borrow_mut().as_mut().unwrap()))\n@@ -54,8 +54,3 @@ pub fn set(stack_guard: Option<usize>, thread: Thread) {\n         thread: thread,\n     }));\n }\n-\n-// a hack to get around privacy restrictions; implemented by `std::thread`\n-pub trait NewThread {\n-    fn new(name: Option<String>) -> Self;\n-}"}, {"sha": "fa4cc276ee5df8e0063c0d23c6f337d55e83c527", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1545f4e2a323eb869b13f36bd05cc91ff21d5161/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1545f4e2a323eb869b13f36bd05cc91ff21d5161/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=1545f4e2a323eb869b13f36bd05cc91ff21d5161", "patch": "@@ -745,7 +745,7 @@ pub struct Thread {\n \n impl Thread {\n     // Used only internally to construct a thread object without spawning\n-    fn new(name: Option<String>) -> Thread {\n+    pub(crate) fn new(name: Option<String>) -> Thread {\n         let cname = name.map(|n| {\n             CString::new(n).expect(\"thread name may not contain interior null bytes\")\n         });\n@@ -858,11 +858,6 @@ impl fmt::Debug for Thread {\n     }\n }\n \n-// a hack to get around privacy restrictions\n-impl thread_info::NewThread for Thread {\n-    fn new(name: Option<String>) -> Thread { Thread::new(name) }\n-}\n-\n ////////////////////////////////////////////////////////////////////////////////\n // JoinHandle\n ////////////////////////////////////////////////////////////////////////////////"}]}