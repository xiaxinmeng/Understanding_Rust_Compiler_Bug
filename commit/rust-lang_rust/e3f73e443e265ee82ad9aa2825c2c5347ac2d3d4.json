{"sha": "e3f73e443e265ee82ad9aa2825c2c5347ac2d3d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzZjczZTQ0M2UyNjVlZTgyYWQ5YWEyODI1YzJjNTM0N2FjMmQzZDQ=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lindsey@rockstargirl.org", "date": "2012-06-15T04:04:53Z"}, "committer": {"name": "Lindsey Kuper", "email": "lindsey@rockstargirl.org", "date": "2012-06-15T04:04:53Z"}, "message": "Tests for #1425 (xfail'd for now)", "tree": {"sha": "a130839130abe4e5b4c7550f526f5926ab2e54e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a130839130abe4e5b4c7550f526f5926ab2e54e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3f73e443e265ee82ad9aa2825c2c5347ac2d3d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3f73e443e265ee82ad9aa2825c2c5347ac2d3d4", "html_url": "https://github.com/rust-lang/rust/commit/e3f73e443e265ee82ad9aa2825c2c5347ac2d3d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3f73e443e265ee82ad9aa2825c2c5347ac2d3d4/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77e6573929702731bc0bd2c41724e6a587c7f268", "url": "https://api.github.com/repos/rust-lang/rust/commits/77e6573929702731bc0bd2c41724e6a587c7f268", "html_url": "https://github.com/rust-lang/rust/commit/77e6573929702731bc0bd2c41724e6a587c7f268"}], "stats": {"total": 153, "additions": 153, "deletions": 0}, "files": [{"sha": "2e868e160fae02eb17e1eff1d8c457b087c31042", "filename": "src/test/compile-fail/integer-literal-suffix-inference.rs", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/e3f73e443e265ee82ad9aa2825c2c5347ac2d3d4/src%2Ftest%2Fcompile-fail%2Finteger-literal-suffix-inference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3f73e443e265ee82ad9aa2825c2c5347ac2d3d4/src%2Ftest%2Fcompile-fail%2Finteger-literal-suffix-inference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finteger-literal-suffix-inference.rs?ref=e3f73e443e265ee82ad9aa2825c2c5347ac2d3d4", "patch": "@@ -0,0 +1,91 @@\n+// xfail-test\n+fn main() {\n+\n+    // the smallest positive values that need these types\n+    let a8: i8 = 8;\n+    let a16: i16 = 128;\n+    let a32: i32 = 32_768;\n+    let a64: i64 = 2_147_483_648;\n+\n+    // the smallest negative values that need these types\n+    let c8: i8 = -9;\n+    let c16: i16 = -129;\n+    let c32: i32 = -32_769;\n+    let c64: i64 = -2_147_483_649;\n+\n+    fn id_i8(n: i8) -> i8 { n }\n+    fn id_i16(n: i16) -> i16 { n }\n+    fn id_i32(n: i32) -> i32 { n }\n+    fn id_i64(n: i64) -> i64 { n }\n+\n+    // the smallest values that need these types\n+    let b8: u8 = 16;\n+    let b16: u16 = 256;\n+    let b32: u32 = 65_536;\n+    let b64: u64 = 4_294_967_296;\n+\n+    fn id_u8(n: u8) -> u8 { n }\n+    fn id_u16(n: u16) -> u16 { n }\n+    fn id_u32(n: u32) -> u32 { n }\n+    fn id_u64(n: u64) -> u64 { n }\n+\n+    id_i8(a8); // ok\n+    id_i8(a16); //! ERROR mismatched types: expected `i8` but found `i16`\n+    id_i8(a32); //! ERROR mismatched types: expected `i8` but found `i32`\n+    id_i8(a64); //! ERROR mismatched types: expected `i8` but found `i64`\n+\n+    id_i16(a8); //! ERROR mismatched types: expected `i16` but found `i8`\n+    id_i16(a16); // ok\n+    id_i16(a32); //! ERROR mismatched types: expected `i16` but found `i32`\n+    id_i16(a64); //! ERROR mismatched types: expected `i16` but found `i64`\n+\n+    id_i32(a8); //! ERROR mismatched types: expected `i32` but found `i8`\n+    id_i32(a16); //! ERROR mismatched types: expected `i32` but found `i16`\n+    id_i32(a32); // ok\n+    id_i32(a64); //! ERROR mismatched types: expected `i32` but found `i64`\n+\n+    id_i64(a8); //! ERROR mismatched types: expected `i64` but found `i8`\n+    id_i64(a16); //! ERROR mismatched types: expected `i64` but found `i16`\n+    id_i64(a32); //! ERROR mismatched types: expected `i64` but found `i32`\n+    id_i64(a64); // ok\n+\n+    id_i8(c8); // ok\n+    id_i8(c16); //! ERROR mismatched types: expected `i8` but found `i16`\n+    id_i8(c32); //! ERROR mismatched types: expected `i8` but found `i32`\n+    id_i8(c64); //! ERROR mismatched types: expected `i8` but found `i64`\n+\n+    id_i16(c8); //! ERROR mismatched types: expected `i16` but found `i8`\n+    id_i16(c16); // ok\n+    id_i16(c32); //! ERROR mismatched types: expected `i16` but found `i32`\n+    id_i16(c64); //! ERROR mismatched types: expected `i16` but found `i64`\n+\n+    id_i32(c8); //! ERROR mismatched types: expected `i32` but found `i8`\n+    id_i32(c16); //! ERROR mismatched types: expected `i32` but found `i16`\n+    id_i32(c32); // ok\n+    id_i32(c64); //! ERROR mismatched types: expected `i32` but found `i64`\n+\n+    id_i64(a8); //! ERROR mismatched types: expected `i64` but found `i8`\n+    id_i64(a16); //! ERROR mismatched types: expected `i64` but found `i16`\n+    id_i64(a32); //! ERROR mismatched types: expected `i64` but found `i32`\n+    id_i64(a64); // ok\n+\n+    id_u8(b8); // ok\n+    id_u8(b16); //! ERROR mismatched types: expected `u8` but found `u16`\n+    id_u8(b32); //! ERROR mismatched types: expected `u8` but found `u32`\n+    id_u8(b64); //! ERROR mismatched types: expected `u8` but found `u64`\n+\n+    id_u16(b8); //! ERROR mismatched types: expected `u16` but found `u8`\n+    id_u16(b16); // ok\n+    id_u16(b32); //! ERROR mismatched types: expected `u16` but found `u32`\n+    id_u16(b64); //! ERROR mismatched types: expected `u16` but found `u64`\n+\n+    id_u32(b8); //! ERROR mismatched types: expected `u32` but found `u8`\n+    id_u32(b16); //! ERROR mismatched types: expected `u32` but found `u16`\n+    id_u32(b32); // ok\n+    id_u32(b64); //! ERROR mismatched types: expected `u32` but found `u64`\n+\n+    id_u64(b8); //! ERROR mismatched types: expected `u64` but found `u8`\n+    id_u64(b16); //! ERROR mismatched types: expected `u64` but found `u16`\n+    id_u64(b32); //! ERROR mismatched types: expected `u64` but found `u32`\n+    id_u64(b64); // ok\n+}"}, {"sha": "cc3b4cb150f807b628a57935a1213705a68a2ea9", "filename": "src/test/run-pass/integer-literal-suffix-inference.rs", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/e3f73e443e265ee82ad9aa2825c2c5347ac2d3d4/src%2Ftest%2Frun-pass%2Finteger-literal-suffix-inference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3f73e443e265ee82ad9aa2825c2c5347ac2d3d4/src%2Ftest%2Frun-pass%2Finteger-literal-suffix-inference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finteger-literal-suffix-inference.rs?ref=e3f73e443e265ee82ad9aa2825c2c5347ac2d3d4", "patch": "@@ -0,0 +1,62 @@\n+// xfail-test\n+fn main() {\n+\n+    // The commented-out lines are ones that fail currently.  I'm\n+    // working on figuring out why (#1425). -- lkuper\n+\n+    fn id_i8(n: i8) -> i8 { n }\n+    fn id_i16(n: i16) -> i16 { n }\n+    fn id_i32(n: i32) -> i32 { n }\n+    fn id_i64(n: i64) -> i64 { n }\n+\n+    fn id_uint(n: uint) -> uint { n }\n+    fn id_u8(n: u8) -> u8 { n }\n+    fn id_u16(n: u16) -> u16 { n }\n+    fn id_u32(n: u32) -> u32 { n }\n+    fn id_u64(n: u64) -> u64 { n }\n+\n+    let _i: i8 = -128;\n+    let j = -128;\n+    // id_i8(j);\n+    id_i8(-128);\n+\n+    let _i: i16 = -32_768;\n+    let j = -32_768;\n+    // id_i16(j);\n+    id_i16(-32_768);\n+\n+    let _i: i32 = -2_147_483_648;\n+    let j = -2_147_483_648;\n+    // id_i32(j);\n+    id_i32(-2_147_483_648);\n+\n+    let _i: i64 = -9_223_372_036_854_775_808;\n+    let j = -9_223_372_036_854_775_808;\n+    // id_i64(j);\n+    id_i64(-9_223_372_036_854_775_808);\n+\n+    let _i: uint = 1;\n+    let j = 1;\n+    id_uint(j);\n+    id_uint(1);\n+\n+    let _i: u8 = 255;\n+    let j = 255;\n+    id_u8(j);\n+    id_u8(255);\n+\n+    let _i: u16 = 65_535;\n+    let j = 65_535;\n+    id_u16(j);\n+    id_u16(65_535);\n+\n+    let _i: u32 = 4_294_967_295;\n+    let j = 4_294_967_295;\n+    id_u32(j);\n+    id_u32(4_294_967_295);\n+\n+    let _i: u64 = 18_446_744_073_709_551_615;\n+    let j = 18_446_744_073_709_551_615;\n+    id_u64(j);\n+    id_u64(18_446_744_073_709_551_615);\n+}"}]}