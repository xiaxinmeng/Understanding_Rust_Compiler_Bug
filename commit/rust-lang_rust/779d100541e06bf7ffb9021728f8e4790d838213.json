{"sha": "779d100541e06bf7ffb9021728f8e4790d838213", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3OWQxMDA1NDFlMDZiZjdmZmI5MDIxNzI4ZjhlNDc5MGQ4MzgyMTM=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2014-07-19T06:54:57Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-29T22:43:12Z"}, "message": "librustc: Typeck & record the count expr in TyFixedLengthVec.", "tree": {"sha": "2f734d870a4b1638796348f42d0e74c43e4d4ab2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f734d870a4b1638796348f42d0e74c43e4d4ab2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/779d100541e06bf7ffb9021728f8e4790d838213", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/779d100541e06bf7ffb9021728f8e4790d838213", "html_url": "https://github.com/rust-lang/rust/commit/779d100541e06bf7ffb9021728f8e4790d838213", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/779d100541e06bf7ffb9021728f8e4790d838213/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26ca10d2d7d4d11c2299ad5a5ad8419ab10066c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/26ca10d2d7d4d11c2299ad5a5ad8419ab10066c4", "html_url": "https://github.com/rust-lang/rust/commit/26ca10d2d7d4d11c2299ad5a5ad8419ab10066c4"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "5e7426f3ae749ccddeba3f06a56c000c71409e5b", "filename": "src/librustc/middle/typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/779d100541e06bf7ffb9021728f8e4790d838213/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/779d100541e06bf7ffb9021728f8e4790d838213/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs?ref=779d100541e06bf7ffb9021728f8e4790d838213", "patch": "@@ -877,6 +877,7 @@ pub fn ast_ty_to_ty<AC:AstConv, RS:RegionScope>(\n                 }\n             }\n             ast::TyFixedLengthVec(ty, e) => {\n+                typeck::write_ty_to_tcx(tcx, e.id, ty::mk_uint());\n                 match const_eval::eval_const_expr_partial(tcx, &*e) {\n                     Ok(ref r) => {\n                         match *r {"}, {"sha": "bbb6e162ecb992e9ff7ebabbbe9976dc074f047d", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/779d100541e06bf7ffb9021728f8e4790d838213/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/779d100541e06bf7ffb9021728f8e4790d838213/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=779d100541e06bf7ffb9021728f8e4790d838213", "patch": "@@ -430,6 +430,18 @@ impl<'a> Visitor<()> for GatherLocalsVisitor<'a> {\n         self.fcx.with_region_lb(b.id, || visit::walk_block(self, b, ()));\n     }\n \n+    // Since an expr occurs as part of the type fixed size arrays we\n+    // need to record the type for that node\n+    fn visit_ty(&mut self, t: &ast::Ty, _: ()) {\n+        match t.node {\n+            ast::TyFixedLengthVec(ref ty, ref count_expr) => {\n+                self.visit_ty(&**ty, ());\n+                check_expr_with_hint(self.fcx, &**count_expr, ty::mk_uint());\n+            }\n+            _ => visit::walk_ty(self, t, ())\n+        }\n+    }\n+\n     // Don't descend into fns and items\n     fn visit_fn(&mut self, _: &visit::FnKind, _: &ast::FnDecl,\n                 _: &ast::Block, _: Span, _: ast::NodeId, _: ()) { }\n@@ -3444,6 +3456,12 @@ fn check_expr_with_unifier(fcx: &FnCtxt,\n         }\n       }\n       ast::ExprCast(ref e, ref t) => {\n+        match t.node {\n+            ast::TyFixedLengthVec(_, ref count_expr) => {\n+                check_expr_with_hint(fcx, &**count_expr, ty::mk_uint());\n+            }\n+            _ => {}\n+        }\n         check_cast(fcx, &**e, &**t, id, expr.span);\n       }\n       ast::ExprVec(ref args) => {"}, {"sha": "d94ac103ceb731ed37f18d15a5e80f5c5c68fcfb", "filename": "src/librustc/middle/typeck/check/writeback.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/779d100541e06bf7ffb9021728f8e4790d838213/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/779d100541e06bf7ffb9021728f8e4790d838213/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs?ref=779d100541e06bf7ffb9021728f8e4790d838213", "patch": "@@ -181,8 +181,14 @@ impl<'cx> Visitor<()> for WritebackCx<'cx> {\n         visit::walk_local(self, l, ());\n     }\n \n-    fn visit_ty(&mut self, _t: &ast::Ty, _: ()) {\n-        // ignore\n+    fn visit_ty(&mut self, t: &ast::Ty, _: ()) {\n+        match t.node {\n+            ast::TyFixedLengthVec(ref ty, ref count_expr) => {\n+                self.visit_ty(&**ty, ());\n+                write_ty_to_tcx(self.tcx(), count_expr.id, ty::mk_uint());\n+            }\n+            _ => visit::walk_ty(self, t, ())\n+        }\n     }\n }\n "}]}