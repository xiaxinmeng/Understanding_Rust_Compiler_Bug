{"sha": "8b4d22cb25bd49ac29eaa2960b559b7eee06d197", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiNGQyMmNiMjViZDQ5YWMyOWVhYTI5NjBiNTU5YjdlZWUwNmQxOTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-28T06:02:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-28T06:02:45Z"}, "message": "Auto merge of #67598 - jumbatm:issue67557_simd_shuffle, r=oli-obk\n\nFix ICE / miscompilation when inlining simd shuffle intrinsic in MIR.\n\nCloses #67557.\n\nr? @oli-obk", "tree": {"sha": "42860753218df60cbb0e0a50ed497d352f02cc2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42860753218df60cbb0e0a50ed497d352f02cc2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b4d22cb25bd49ac29eaa2960b559b7eee06d197", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b4d22cb25bd49ac29eaa2960b559b7eee06d197", "html_url": "https://github.com/rust-lang/rust/commit/8b4d22cb25bd49ac29eaa2960b559b7eee06d197", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b4d22cb25bd49ac29eaa2960b559b7eee06d197/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a087ad3a924be12343bb035bf9b63ed81f650bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a087ad3a924be12343bb035bf9b63ed81f650bf", "html_url": "https://github.com/rust-lang/rust/commit/3a087ad3a924be12343bb035bf9b63ed81f650bf"}, {"sha": "dca0a339dce46db80ce45e2d24ab29c3ec93270a", "url": "https://api.github.com/repos/rust-lang/rust/commits/dca0a339dce46db80ce45e2d24ab29c3ec93270a", "html_url": "https://github.com/rust-lang/rust/commit/dca0a339dce46db80ce45e2d24ab29c3ec93270a"}], "stats": {"total": 74, "additions": 71, "deletions": 3}, "files": [{"sha": "a89b170c649f6ac6dd9ddc6ab669d455bd72b8fe", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8b4d22cb25bd49ac29eaa2960b559b7eee06d197/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b4d22cb25bd49ac29eaa2960b559b7eee06d197/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=8b4d22cb25bd49ac29eaa2960b559b7eee06d197", "patch": "@@ -618,14 +618,17 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                                 if let mir::PlaceRef {\n                                     base:\n                                         &PlaceBase::Static(box Static {\n-                                            kind: StaticKind::Promoted(promoted, _),\n+                                            kind: StaticKind::Promoted(promoted, substs),\n                                             ty,\n-                                            def_id: _,\n+                                            def_id,\n                                         }),\n                                     projection: &[],\n                                 } = place.as_ref()\n                                 {\n-                                    let c = bx.tcx().const_eval_promoted(self.instance, promoted);\n+                                    let c = bx.tcx().const_eval_promoted(\n+                                        Instance::new(def_id, self.monomorphize(&substs)),\n+                                        promoted,\n+                                    );\n                                     let (llval, ty) = self.simd_shuffle_indices(\n                                         &bx,\n                                         terminator.source_info.span,"}, {"sha": "4c09ae25c5f3ea9e500c6ab7c2a6bafc419383e5", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-inlining-issue67557-ice.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/8b4d22cb25bd49ac29eaa2960b559b7eee06d197/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b4d22cb25bd49ac29eaa2960b559b7eee06d197/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557-ice.rs?ref=8b4d22cb25bd49ac29eaa2960b559b7eee06d197", "patch": "@@ -0,0 +1,25 @@\n+// This used to cause an ICE for an internal index out of range due to simd_shuffle_indices being\n+// passed the wrong Instance, causing issues with inlining. See #67557.\n+//\n+// run-pass\n+// compile-flags: -Zmir-opt-level=3\n+#![feature(platform_intrinsics, repr_simd)]\n+\n+extern \"platform-intrinsic\" {\n+    fn simd_shuffle2<T, U>(x: T, y: T, idx: [u32; 2]) -> U;\n+}\n+\n+#[repr(simd)]\n+#[derive(Debug, PartialEq)]\n+struct Simd2(u8, u8);\n+\n+fn main() {\n+    unsafe {\n+        let _: Simd2 = inline_me();\n+    }\n+}\n+\n+#[inline(always)]\n+unsafe fn inline_me() -> Simd2 {\n+    simd_shuffle2(Simd2(10, 11), Simd2(12, 13), [0, 3])\n+}"}, {"sha": "7a0d955686bb6d4c2bc1cbefda9bd957cb5c49a2", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-inlining-issue67557.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/8b4d22cb25bd49ac29eaa2960b559b7eee06d197/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b4d22cb25bd49ac29eaa2960b559b7eee06d197/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557.rs?ref=8b4d22cb25bd49ac29eaa2960b559b7eee06d197", "patch": "@@ -0,0 +1,40 @@\n+// This used to cause assert_10_13 to unexpectingly fail, due to simd_shuffle_indices being passed\n+// the wrong Instance, causing issues with inlining. See #67557.\n+//\n+// run-pass\n+// compile-flags: -Zmir-opt-level=3\n+#![feature(platform_intrinsics, repr_simd)]\n+\n+extern \"platform-intrinsic\" {\n+    fn simd_shuffle2<T, U>(x: T, y: T, idx: [u32; 2]) -> U;\n+}\n+\n+#[repr(simd)]\n+#[derive(Debug, PartialEq)]\n+struct Simd2(u8, u8);\n+\n+fn main() {\n+    unsafe {\n+        let p_res: Simd2 = simd_shuffle2(Simd2(10, 11), Simd2(12, 13), [0, 1]);\n+        let a_res: Simd2 = inline_me();\n+\n+        assert_10_11(p_res);\n+        assert_10_13(a_res);\n+    }\n+}\n+\n+#[inline(never)]\n+fn assert_10_11(x: Simd2) {\n+    assert_eq!(x, Simd2(10, 11));\n+}\n+\n+#[inline(never)]\n+fn assert_10_13(x: Simd2) {\n+    assert_eq!(x, Simd2(10, 13));\n+}\n+\n+\n+#[inline(always)]\n+unsafe fn inline_me() -> Simd2 {\n+    simd_shuffle2(Simd2(10, 11), Simd2(12, 13), [0, 3])\n+}"}]}