{"sha": "1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "node_id": "C_kwDOAAsO6NoAKDExMThkOTRiZGZiMDI3NWVkMWZhOGE0OThiYjJmM2VhMWVkNjBjM2I", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-05T22:17:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-05T22:17:31Z"}, "message": "Auto merge of #2335 - RalfJung:rustup, r=RalfJung\n\nrustup", "tree": {"sha": "64961818e6bd20eb305d92ea0f921c28ae766dba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64961818e6bd20eb305d92ea0f921c28ae766dba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "html_url": "https://github.com/rust-lang/rust/commit/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35399c6a5d62e2a3ea2bf52ff1b78b7280eeff20", "url": "https://api.github.com/repos/rust-lang/rust/commits/35399c6a5d62e2a3ea2bf52ff1b78b7280eeff20", "html_url": "https://github.com/rust-lang/rust/commit/35399c6a5d62e2a3ea2bf52ff1b78b7280eeff20"}, {"sha": "f3f4bafa1bc670a0b1f6b182407a5b5ddabd5008", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3f4bafa1bc670a0b1f6b182407a5b5ddabd5008", "html_url": "https://github.com/rust-lang/rust/commit/f3f4bafa1bc670a0b1f6b182407a5b5ddabd5008"}], "stats": {"total": 133, "additions": 69, "deletions": 64}, "files": [{"sha": "bc4489ab57ca48f9b2efc4844b4a9b51c83f1e20", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1 +1 @@\n-4045ce641a9eede71cc12031a2cd71692b273890\n+41ad4d9b2dbb895666337d162eda52619a6056db"}, {"sha": "18b9a074c7c3bb85a48da037d8ed20c710e4ae65", "filename": "src/machine.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -541,6 +541,11 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'mir, 'tcx> {\n         ecx.machine.enforce_abi\n     }\n \n+    #[inline(always)]\n+    fn check_binop_checks_overflow(ecx: &MiriEvalContext<'mir, 'tcx>) -> bool {\n+        ecx.tcx.sess.overflow_checks()\n+    }\n+\n     #[inline(always)]\n     fn find_mir_or_eval_fn(\n         ecx: &mut MiriEvalContext<'mir, 'tcx>,"}, {"sha": "a435b0a69578c02ade895800844eebcb83dc7bcd", "filename": "tests/fail/backtrace/bad-backtrace-ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fbacktrace%2Fbad-backtrace-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fbacktrace%2Fbad-backtrace-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fbacktrace%2Fbad-backtrace-ptr.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -4,6 +4,6 @@ extern \"Rust\" {\n \n fn main() {\n     unsafe {\n-        miri_resolve_frame(std::ptr::null_mut(), 0); //~ ERROR null pointer is not a valid pointer for this operation\n+        miri_resolve_frame(std::ptr::null_mut(), 0); //~ ERROR null pointer is a dangling pointer\n     }\n }"}, {"sha": "72755afb34a7c61217f9614f5dcb621128043dd7", "filename": "tests/fail/backtrace/bad-backtrace-ptr.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fbacktrace%2Fbad-backtrace-ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fbacktrace%2Fbad-backtrace-ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fbacktrace%2Fbad-backtrace-ptr.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: null pointer is not a valid pointer for this operation\n+error: Undefined Behavior: out-of-bounds pointer use: null pointer is a dangling pointer (it has no provenance)\n   --> $DIR/bad-backtrace-ptr.rs:LL:CC\n    |\n LL |         miri_resolve_frame(std::ptr::null_mut(), 0);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ null pointer is not a valid pointer for this operation\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds pointer use: null pointer is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "31b52da774b0c4ac026751de0d0e4c889dc2139f", "filename": "tests/fail/dangling_pointers/deref-invalid-ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fderef-invalid-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fderef-invalid-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdangling_pointers%2Fderef-invalid-ptr.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -3,5 +3,5 @@\n \n fn main() {\n     let x = 16usize as *const u32;\n-    let _y = unsafe { &*x as *const u32 }; //~ ERROR is not a valid pointer\n+    let _y = unsafe { &*x as *const u32 }; //~ ERROR is a dangling pointer\n }"}, {"sha": "68003284994eb24ba01e377154848eada093421f", "filename": "tests/fail/dangling_pointers/deref-invalid-ptr.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fderef-invalid-ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fderef-invalid-ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdangling_pointers%2Fderef-invalid-ptr.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: dereferencing pointer failed: 0x10 is not a valid pointer\n+error: Undefined Behavior: dereferencing pointer failed: 0x10[noalloc] is a dangling pointer (it has no provenance)\n   --> $DIR/deref-invalid-ptr.rs:LL:CC\n    |\n LL |     let _y = unsafe { &*x as *const u32 };\n-   |                       ^^^ dereferencing pointer failed: 0x10 is not a valid pointer\n+   |                       ^^^ dereferencing pointer failed: 0x10[noalloc] is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "dad6de85e002ddf388ae942d0caf855feec952c8", "filename": "tests/fail/dangling_pointers/null_pointer_deref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,5 +1,5 @@\n #[allow(deref_nullptr)]\n fn main() {\n-    let x: i32 = unsafe { *std::ptr::null() }; //~ ERROR null pointer is not a valid pointer\n+    let x: i32 = unsafe { *std::ptr::null() }; //~ ERROR null pointer is a dangling pointer\n     panic!(\"this should never print: {}\", x);\n }"}, {"sha": "fbb922c4c113c3ce78ad109deaff9cdb79bee8ac", "filename": "tests/fail/dangling_pointers/null_pointer_deref.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: dereferencing pointer failed: null pointer is not a valid pointer\n+error: Undefined Behavior: dereferencing pointer failed: null pointer is a dangling pointer (it has no provenance)\n   --> $DIR/null_pointer_deref.rs:LL:CC\n    |\n LL |     let x: i32 = unsafe { *std::ptr::null() };\n-   |                           ^^^^^^^^^^^^^^^^^ dereferencing pointer failed: null pointer is not a valid pointer\n+   |                           ^^^^^^^^^^^^^^^^^ dereferencing pointer failed: null pointer is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "21b0ce37d8dff3ec300feccc1b66b60be7807ab4", "filename": "tests/fail/dangling_pointers/null_pointer_deref_zst.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref_zst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref_zst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref_zst.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -3,6 +3,6 @@\n \n #[allow(deref_nullptr)]\n fn main() {\n-    let x: () = unsafe { *std::ptr::null() }; //~ ERROR dereferencing pointer failed: null pointer is not a valid pointer\n+    let x: () = unsafe { *std::ptr::null() }; //~ ERROR dereferencing pointer failed: null pointer is a dangling pointer\n     panic!(\"this should never print: {:?}\", x);\n }"}, {"sha": "40b8d0899b13ce40f0e4ae8b4005aedffb480b69", "filename": "tests/fail/dangling_pointers/null_pointer_deref_zst.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref_zst.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref_zst.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_deref_zst.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: dereferencing pointer failed: null pointer is not a valid pointer\n+error: Undefined Behavior: dereferencing pointer failed: null pointer is a dangling pointer (it has no provenance)\n   --> $DIR/null_pointer_deref_zst.rs:LL:CC\n    |\n LL |     let x: () = unsafe { *std::ptr::null() };\n-   |                          ^^^^^^^^^^^^^^^^^ dereferencing pointer failed: null pointer is not a valid pointer\n+   |                          ^^^^^^^^^^^^^^^^^ dereferencing pointer failed: null pointer is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "c7255baf6642d8615ff32fa1974a079e7872a7ca", "filename": "tests/fail/dangling_pointers/null_pointer_write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,4 +1,4 @@\n #[allow(deref_nullptr)]\n fn main() {\n-    unsafe { *std::ptr::null_mut() = 0i32 }; //~ ERROR null pointer is not a valid pointer\n+    unsafe { *std::ptr::null_mut() = 0i32 }; //~ ERROR null pointer is a dangling pointer\n }"}, {"sha": "a5bf59e26d25b5c009829415df2081839af098d8", "filename": "tests/fail/dangling_pointers/null_pointer_write.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: dereferencing pointer failed: null pointer is not a valid pointer\n+error: Undefined Behavior: dereferencing pointer failed: null pointer is a dangling pointer (it has no provenance)\n   --> $DIR/null_pointer_write.rs:LL:CC\n    |\n LL |     unsafe { *std::ptr::null_mut() = 0i32 };\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereferencing pointer failed: null pointer is not a valid pointer\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereferencing pointer failed: null pointer is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "60e2d7c663e07b390fb84eb4734fe5177ba2e9ff", "filename": "tests/fail/dangling_pointers/null_pointer_write_zst.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write_zst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write_zst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write_zst.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,6 +1,6 @@\n // Some optimizations remove ZST accesses, thus masking this UB.\n // compile-flags: -Zmir-opt-level=0\n-// error-pattern: memory access failed: null pointer is not a valid pointer\n+// error-pattern: memory access failed: null pointer is a dangling pointer\n \n #[allow(deref_nullptr)]\n fn main() {"}, {"sha": "0535aaa3e2d16b948bf3c8e09a34d2e797fe6a77", "filename": "tests/fail/dangling_pointers/null_pointer_write_zst.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write_zst.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write_zst.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdangling_pointers%2Fnull_pointer_write_zst.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: memory access failed: null pointer is not a valid pointer\n+error: Undefined Behavior: memory access failed: null pointer is a dangling pointer (it has no provenance)\n   --> RUSTLIB/core/src/ptr/mod.rs:LL:CC\n    |\n LL |         copy_nonoverlapping(&src as *const T, dst, 1);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ memory access failed: null pointer is not a valid pointer\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ memory access failed: null pointer is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "64ed37d15113437447a846d5f89bec2f922d81ba", "filename": "tests/fail/dangling_pointers/storage_dead_dangling.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fstorage_dead_dangling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fstorage_dead_dangling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdangling_pointers%2Fstorage_dead_dangling.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -10,7 +10,7 @@ fn fill(v: &mut i32) {\n }\n \n fn evil() {\n-    unsafe { &mut *(LEAK as *mut i32) }; //~ ERROR is not a valid pointer\n+    unsafe { &mut *(LEAK as *mut i32) }; //~ ERROR is a dangling pointer\n }\n \n fn main() {"}, {"sha": "25c12feaa82d15d0244dc74c670dd4d9a645538b", "filename": "tests/fail/dangling_pointers/storage_dead_dangling.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fstorage_dead_dangling.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fstorage_dead_dangling.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdangling_pointers%2Fstorage_dead_dangling.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: dereferencing pointer failed: $HEX is not a valid pointer\n+error: Undefined Behavior: dereferencing pointer failed: $HEX[noalloc] is a dangling pointer (it has no provenance)\n   --> $DIR/storage_dead_dangling.rs:LL:CC\n    |\n LL |     unsafe { &mut *(LEAK as *mut i32) };\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^ dereferencing pointer failed: $HEX is not a valid pointer\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^ dereferencing pointer failed: $HEX[noalloc] is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "9f6b370c050f459f8edd54132093dbaf1ab1771c", "filename": "tests/fail/dangling_pointers/wild_pointer_deref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fwild_pointer_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fwild_pointer_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdangling_pointers%2Fwild_pointer_deref.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -2,6 +2,6 @@\n \n fn main() {\n     let p = 44 as *const i32;\n-    let x = unsafe { *p }; //~ ERROR is not a valid pointer\n+    let x = unsafe { *p }; //~ ERROR is a dangling pointer\n     panic!(\"this should never print: {}\", x);\n }"}, {"sha": "571bbcef6595ce11415c45f67ac1e378e426e67d", "filename": "tests/fail/dangling_pointers/wild_pointer_deref.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fwild_pointer_deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fdangling_pointers%2Fwild_pointer_deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdangling_pointers%2Fwild_pointer_deref.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: dereferencing pointer failed: 0x2c is not a valid pointer\n+error: Undefined Behavior: dereferencing pointer failed: 0x2c[noalloc] is a dangling pointer (it has no provenance)\n   --> $DIR/wild_pointer_deref.rs:LL:CC\n    |\n LL |     let x = unsafe { *p };\n-   |                      ^^ dereferencing pointer failed: 0x2c is not a valid pointer\n+   |                      ^^ dereferencing pointer failed: 0x2c[noalloc] is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "e287533ffc742be6b1e75e077b42bc019c0add7b", "filename": "tests/fail/function_pointers/cast_int_to_fn_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Ffunction_pointers%2Fcast_int_to_fn_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Ffunction_pointers%2Fcast_int_to_fn_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Ffunction_pointers%2Fcast_int_to_fn_ptr.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -4,5 +4,5 @@\n fn main() {\n     let g = unsafe { std::mem::transmute::<usize, fn(i32)>(42) };\n \n-    g(42) //~ ERROR not a valid pointer\n+    g(42) //~ ERROR is a dangling pointer\n }"}, {"sha": "3d4acbe6f09ae260f9206c03bfb46489e3308952", "filename": "tests/fail/function_pointers/cast_int_to_fn_ptr.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Ffunction_pointers%2Fcast_int_to_fn_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Ffunction_pointers%2Fcast_int_to_fn_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Ffunction_pointers%2Fcast_int_to_fn_ptr.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: 0x2a is not a valid pointer\n+error: Undefined Behavior: out-of-bounds pointer use: 0x2a[noalloc] is a dangling pointer (it has no provenance)\n   --> $DIR/cast_int_to_fn_ptr.rs:LL:CC\n    |\n LL |     g(42)\n-   |     ^^^^^ 0x2a is not a valid pointer\n+   |     ^^^^^ out-of-bounds pointer use: 0x2a[noalloc] is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "237e517f2875aab43aefe783f1fab5a583c9bd46", "filename": "tests/fail/intrinsics/copy_null.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fcopy_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fcopy_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fcopy_null.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -10,6 +10,6 @@ fn main() {\n     let ptr = &mut data[0] as *mut u16;\n     // Even copying 0 elements from NULL should error.\n     unsafe {\n-        copy_nonoverlapping(std::ptr::null(), ptr, 0); //~ ERROR: memory access failed: null pointer is not a valid pointer\n+        copy_nonoverlapping(std::ptr::null(), ptr, 0); //~ ERROR: memory access failed: null pointer is a dangling pointer\n     }\n }"}, {"sha": "d7725064832e4b6b30f5384038f33ff7c6ff8e54", "filename": "tests/fail/intrinsics/copy_null.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fcopy_null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fcopy_null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fcopy_null.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: memory access failed: null pointer is not a valid pointer\n+error: Undefined Behavior: memory access failed: null pointer is a dangling pointer (it has no provenance)\n   --> $DIR/copy_null.rs:LL:CC\n    |\n LL |         copy_nonoverlapping(std::ptr::null(), ptr, 0);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ memory access failed: null pointer is not a valid pointer\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ memory access failed: null pointer is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "789e9d1f6cbed608a3cf7753eeba632cd22d1e25", "filename": "tests/fail/intrinsics/out_of_bounds_ptr_1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fout_of_bounds_ptr_1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fout_of_bounds_ptr_1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fout_of_bounds_ptr_1.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: pointer arithmetic failed: ALLOC has size 4, so pointer to 5 bytes starting at offset 0 is out-of-bounds\n+error: Undefined Behavior: out-of-bounds pointer arithmetic: ALLOC has size 4, so pointer to 5 bytes starting at offset 0 is out-of-bounds\n   --> RUSTLIB/core/src/ptr/const_ptr.rs:LL:CC\n    |\n LL |         unsafe { intrinsics::offset(self, count) }\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ pointer arithmetic failed: ALLOC has size 4, so pointer to 5 bytes starting at offset 0 is out-of-bounds\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds pointer arithmetic: ALLOC has size 4, so pointer to 5 bytes starting at offset 0 is out-of-bounds\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "973bf043e155c4bf27997a881d968fbb75d5612e", "filename": "tests/fail/intrinsics/out_of_bounds_ptr_3.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fout_of_bounds_ptr_3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fout_of_bounds_ptr_3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fout_of_bounds_ptr_3.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: pointer arithmetic failed: ALLOC has size 4, so pointer to 1 byte starting at offset -1 is out-of-bounds\n+error: Undefined Behavior: out-of-bounds pointer arithmetic: ALLOC has size 4, so pointer to 1 byte starting at offset -1 is out-of-bounds\n   --> RUSTLIB/core/src/ptr/const_ptr.rs:LL:CC\n    |\n LL |         unsafe { intrinsics::offset(self, count) }\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ pointer arithmetic failed: ALLOC has size 4, so pointer to 1 byte starting at offset -1 is out-of-bounds\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds pointer arithmetic: ALLOC has size 4, so pointer to 1 byte starting at offset -1 is out-of-bounds\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "4098d6b0ced2d192b00eded9a703e7c052fb25a2", "filename": "tests/fail/intrinsics/ptr_offset_0_plus_0.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fptr_offset_0_plus_0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fptr_offset_0_plus_0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fptr_offset_0_plus_0.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: pointer arithmetic failed: null pointer is not a valid pointer\n+// error-pattern: null pointer is a dangling pointer\n // compile-flags: -Zmiri-permissive-provenance\n \n fn main() {"}, {"sha": "cb9b02c840519d181dbd29cd6988c59eeb5a70bd", "filename": "tests/fail/intrinsics/ptr_offset_0_plus_0.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fptr_offset_0_plus_0.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fptr_offset_0_plus_0.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fptr_offset_0_plus_0.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: pointer arithmetic failed: null pointer is not a valid pointer\n+error: Undefined Behavior: out-of-bounds pointer arithmetic: null pointer is a dangling pointer (it has no provenance)\n   --> RUSTLIB/core/src/ptr/mut_ptr.rs:LL:CC\n    |\n LL |         unsafe { intrinsics::offset(self, count) as *mut T }\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ pointer arithmetic failed: null pointer is not a valid pointer\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds pointer arithmetic: null pointer is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "817a8b9801b78dc59cd92e551eb5d28333bd3f12", "filename": "tests/fail/intrinsics/ptr_offset_int_plus_int.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_int.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: is not a valid pointer\n+// error-pattern: is a dangling pointer\n // compile-flags: -Zmiri-permissive-provenance\n \n fn main() {"}, {"sha": "e92b0a32166523869ec7c6e6fc7e692348f95b06", "filename": "tests/fail/intrinsics/ptr_offset_int_plus_int.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_int.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_int.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_int.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: pointer arithmetic failed: 0x1 is not a valid pointer\n+error: Undefined Behavior: out-of-bounds pointer arithmetic: 0x1[noalloc] is a dangling pointer (it has no provenance)\n   --> RUSTLIB/core/src/ptr/mut_ptr.rs:LL:CC\n    |\n LL |         unsafe { intrinsics::offset(self, count) as *mut T }\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ pointer arithmetic failed: 0x1 is not a valid pointer\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds pointer arithmetic: 0x1[noalloc] is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "ed6370bf7f17806aebd7d3fcd583dea927f649f8", "filename": "tests/fail/intrinsics/ptr_offset_int_plus_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_ptr.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: is not a valid pointer\n+// error-pattern: is a dangling pointer\n // compile-flags: -Zmiri-permissive-provenance\n \n fn main() {"}, {"sha": "47eac678e2efc85c3015b3b83faf316ebe811923", "filename": "tests/fail/intrinsics/ptr_offset_int_plus_ptr.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fptr_offset_int_plus_ptr.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: pointer arithmetic failed: 0x1 is not a valid pointer\n+error: Undefined Behavior: out-of-bounds pointer arithmetic: 0x1[noalloc] is a dangling pointer (it has no provenance)\n   --> RUSTLIB/core/src/ptr/mut_ptr.rs:LL:CC\n    |\n LL |         unsafe { intrinsics::offset(self, count) as *mut T }\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ pointer arithmetic failed: 0x1 is not a valid pointer\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds pointer arithmetic: 0x1[noalloc] is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "767ed2fc3c45e8b866af5cf812fe092bc088ea6d", "filename": "tests/fail/intrinsics/ptr_offset_ptr_plus_0.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fptr_offset_ptr_plus_0.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fptr_offset_ptr_plus_0.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fptr_offset_ptr_plus_0.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: pointer arithmetic failed: ALLOC has size 4, so pointer at offset 32 is out-of-bounds\n+error: Undefined Behavior: out-of-bounds pointer arithmetic: ALLOC has size 4, so pointer at offset 32 is out-of-bounds\n   --> RUSTLIB/core/src/ptr/mut_ptr.rs:LL:CC\n    |\n LL |         unsafe { intrinsics::offset(self, count) as *mut T }\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ pointer arithmetic failed: ALLOC has size 4, so pointer at offset 32 is out-of-bounds\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds pointer arithmetic: ALLOC has size 4, so pointer at offset 32 is out-of-bounds\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "81b155da44c33e5e59be68fa169a0304c7fbed56", "filename": "tests/fail/intrinsics/write_bytes_null.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fwrite_bytes_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fwrite_bytes_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fwrite_bytes_null.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -6,5 +6,5 @@ extern \"rust-intrinsic\" {\n }\n \n fn main() {\n-    unsafe { write_bytes::<u8>(std::ptr::null_mut(), 0, 0) }; //~ ERROR memory access failed: null pointer is not a valid pointer\n+    unsafe { write_bytes::<u8>(std::ptr::null_mut(), 0, 0) }; //~ ERROR memory access failed: null pointer is a dangling pointer\n }"}, {"sha": "8fd866aa8b325fe7cfc3d45cf6cb6d27e6ef6f08", "filename": "tests/fail/intrinsics/write_bytes_null.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fwrite_bytes_null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fintrinsics%2Fwrite_bytes_null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fwrite_bytes_null.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: memory access failed: null pointer is not a valid pointer\n+error: Undefined Behavior: memory access failed: null pointer is a dangling pointer (it has no provenance)\n   --> $DIR/write_bytes_null.rs:LL:CC\n    |\n LL |     unsafe { write_bytes::<u8>(std::ptr::null_mut(), 0, 0) };\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ memory access failed: null pointer is not a valid pointer\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ memory access failed: null pointer is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "5b7e9442d7c073996f634cb5c5b64ba6121e5665", "filename": "tests/fail/provenance/provenance_transmute.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fprovenance%2Fprovenance_transmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fprovenance%2Fprovenance_transmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fprovenance%2Fprovenance_transmute.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: dereferencing pointer failed: $HEX is not a valid pointer\n+error: Undefined Behavior: dereferencing pointer failed: $HEX[noalloc] is a dangling pointer (it has no provenance)\n   --> $DIR/provenance_transmute.rs:LL:CC\n    |\n LL |         let _val = *left_ptr;\n-   |                    ^^^^^^^^^ dereferencing pointer failed: $HEX is not a valid pointer\n+   |                    ^^^^^^^^^ dereferencing pointer failed: $HEX[noalloc] is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "f5ea7718c78ae6594103f81f965cef6a1b6bca99", "filename": "tests/fail/provenance/ptr_int_unexposed.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fprovenance%2Fptr_int_unexposed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fprovenance%2Fptr_int_unexposed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fprovenance%2Fptr_int_unexposed.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: dereferencing pointer failed: $HEX is not a valid pointer\n+error: Undefined Behavior: dereferencing pointer failed: $HEX[noalloc] is a dangling pointer (it has no provenance)\n   --> $DIR/ptr_int_unexposed.rs:LL:CC\n    |\n LL |     assert_eq!(unsafe { *ptr }, 3);\n-   |                         ^^^^ dereferencing pointer failed: $HEX is not a valid pointer\n+   |                         ^^^^ dereferencing pointer failed: $HEX[noalloc] is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "be5666b2efadd3c5023a64b5b7c6b212656c8056", "filename": "tests/fail/provenance/ptr_invalid.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fprovenance%2Fptr_invalid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fprovenance%2Fptr_invalid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fprovenance%2Fptr_invalid.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -5,5 +5,5 @@ fn main() {\n     let x = 42;\n     let xptr = &x as *const i32;\n     let xptr_invalid = std::ptr::invalid::<i32>(xptr.expose_addr());\n-    let _val = unsafe { *xptr_invalid }; //~ ERROR is not a valid pointer\n+    let _val = unsafe { *xptr_invalid }; //~ ERROR is a dangling pointer\n }"}, {"sha": "02bfef3ae73f232f43636ccb515b715c8a1893d4", "filename": "tests/fail/provenance/ptr_invalid.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fprovenance%2Fptr_invalid.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fprovenance%2Fptr_invalid.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fprovenance%2Fptr_invalid.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: dereferencing pointer failed: $HEX is not a valid pointer\n+error: Undefined Behavior: dereferencing pointer failed: $HEX[noalloc] is a dangling pointer (it has no provenance)\n   --> $DIR/ptr_invalid.rs:LL:CC\n    |\n LL |     let _val = unsafe { *xptr_invalid };\n-   |                         ^^^^^^^^^^^^^ dereferencing pointer failed: $HEX is not a valid pointer\n+   |                         ^^^^^^^^^^^^^ dereferencing pointer failed: $HEX[noalloc] is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "08fb57a6569ce89e734f5913af4a0c282455c619", "filename": "tests/fail/provenance/ptr_invalid_offset.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fprovenance%2Fptr_invalid_offset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fprovenance%2Fptr_invalid_offset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fprovenance%2Fptr_invalid_offset.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -Zmiri-strict-provenance\n-// error-pattern: not a valid pointer\n+// error-pattern: is a dangling pointer\n #![feature(strict_provenance)]\n \n fn main() {"}, {"sha": "df73689deae8d009b03f8c986d6617ca74ae033f", "filename": "tests/fail/provenance/ptr_invalid_offset.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fprovenance%2Fptr_invalid_offset.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fprovenance%2Fptr_invalid_offset.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fprovenance%2Fptr_invalid_offset.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: pointer arithmetic failed: $HEX is not a valid pointer\n+error: Undefined Behavior: out-of-bounds pointer arithmetic: $HEX[noalloc] is a dangling pointer (it has no provenance)\n   --> RUSTLIB/core/src/ptr/const_ptr.rs:LL:CC\n    |\n LL |         unsafe { intrinsics::offset(self, count) }\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ pointer arithmetic failed: $HEX is not a valid pointer\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds pointer arithmetic: $HEX[noalloc] is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "946e3e8e66640d66e739b627deb1ab99df275e1a", "filename": "tests/fail/stacked_borrows/issue-miri-1050-1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fstacked_borrows%2Fissue-miri-1050-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fstacked_borrows%2Fissue-miri-1050-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fstacked_borrows%2Fissue-miri-1050-1.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: ALLOC has size 2, so pointer to 4 bytes starting at offset 0 is out-of-bounds\n+error: Undefined Behavior: out-of-bounds pointer use: ALLOC has size 2, so pointer to 4 bytes starting at offset 0 is out-of-bounds\n   --> RUSTLIB/alloc/src/boxed.rs:LL:CC\n    |\n LL |         Box(unsafe { Unique::new_unchecked(raw) }, alloc)\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ALLOC has size 2, so pointer to 4 bytes starting at offset 0 is out-of-bounds\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds pointer use: ALLOC has size 2, so pointer to 4 bytes starting at offset 0 is out-of-bounds\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "2a969686d4da959fa2f20b34a466b1055383d434", "filename": "tests/fail/stacked_borrows/issue-miri-1050-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fstacked_borrows%2Fissue-miri-1050-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fstacked_borrows%2Fissue-miri-1050-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fstacked_borrows%2Fissue-miri-1050-2.rs?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: is not a valid pointer\n+// error-pattern: is a dangling pointer\n use std::ptr::NonNull;\n \n fn main() {"}, {"sha": "33ac311766775a8fa698caa55f2c3148c4dbe4f1", "filename": "tests/fail/stacked_borrows/issue-miri-1050-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fstacked_borrows%2Fissue-miri-1050-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b/tests%2Ffail%2Fstacked_borrows%2Fissue-miri-1050-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fstacked_borrows%2Fissue-miri-1050-2.stderr?ref=1118d94bdfb0275ed1fa8a498bb2f3ea1ed60c3b", "patch": "@@ -1,8 +1,8 @@\n-error: Undefined Behavior: 0x4 is not a valid pointer\n+error: Undefined Behavior: out-of-bounds pointer use: 0x4[noalloc] is a dangling pointer (it has no provenance)\n   --> RUSTLIB/alloc/src/boxed.rs:LL:CC\n    |\n LL |         Box(unsafe { Unique::new_unchecked(raw) }, alloc)\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ 0x4 is not a valid pointer\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds pointer use: 0x4[noalloc] is a dangling pointer (it has no provenance)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}]}