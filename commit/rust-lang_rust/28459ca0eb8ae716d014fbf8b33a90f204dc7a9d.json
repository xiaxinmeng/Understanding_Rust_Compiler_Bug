{"sha": "28459ca0eb8ae716d014fbf8b33a90f204dc7a9d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4NDU5Y2EwZWI4YWU3MTZkMDE0ZmJmOGIzM2E5MGYyMDRkYzdhOWQ=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-06-28T20:07:05Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-06-28T20:07:52Z"}, "message": "Handle lazy binops properly in typestate\n\nThe typestate analysis now reflects that the second operand of a\nlogical and or or may not be evaluated.", "tree": {"sha": "60add1ddba3293b4d6e2f874dded3c1494fbb830", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60add1ddba3293b4d6e2f874dded3c1494fbb830"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28459ca0eb8ae716d014fbf8b33a90f204dc7a9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28459ca0eb8ae716d014fbf8b33a90f204dc7a9d", "html_url": "https://github.com/rust-lang/rust/commit/28459ca0eb8ae716d014fbf8b33a90f204dc7a9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28459ca0eb8ae716d014fbf8b33a90f204dc7a9d/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7c4c19d4bea6d84f63709218146f7be76d5c9f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7c4c19d4bea6d84f63709218146f7be76d5c9f2", "html_url": "https://github.com/rust-lang/rust/commit/a7c4c19d4bea6d84f63709218146f7be76d5c9f2"}], "stats": {"total": 51, "additions": 44, "deletions": 7}, "files": [{"sha": "7e97a11d166c5e1876eafab22fb8fef8585478b6", "filename": "src/comp/middle/tstate/pre_post_conditions.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/28459ca0eb8ae716d014fbf8b33a90f204dc7a9d/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28459ca0eb8ae716d014fbf8b33a90f204dc7a9d/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs?ref=28459ca0eb8ae716d014fbf8b33a90f204dc7a9d", "patch": "@@ -434,10 +434,19 @@ fn find_pre_post_expr(&fn_ctxt fcx, @expr e) {\n             find_pre_post_expr(fcx, ternary_to_if(e));\n         }\n         case (expr_binary(?bop, ?l, ?r)) {\n-            /* *unless* bop is lazy (e.g. and, or)? \n-               FIXME */\n-\n-            find_pre_post_exprs(fcx, [l, r], e.id);\n+            if (lazy_binop(bop)) {\n+                find_pre_post_expr(fcx, l);\n+                find_pre_post_expr(fcx, r);\n+                auto overall_pre = seq_preconds(fcx,\n+                   [expr_pp(fcx.ccx, l), expr_pp(fcx.ccx, r)]);\n+                set_precondition(node_id_to_ts_ann(fcx.ccx, e.id),\n+                                 overall_pre);\n+                set_postcondition(node_id_to_ts_ann(fcx.ccx, e.id),\n+                                  expr_postcond(fcx.ccx, l));\n+            }\n+            else {\n+                find_pre_post_exprs(fcx, [l, r], e.id);\n+            }\n         }\n         case (expr_send(?l, ?r)) {\n             find_pre_post_exprs(fcx, [l, r], e.id);"}, {"sha": "91ea1a2c01fd1931b6feb5fa5ce06079100fdb1e", "filename": "src/comp/middle/tstate/states.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28459ca0eb8ae716d014fbf8b33a90f204dc7a9d/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28459ca0eb8ae716d014fbf8b33a90f204dc7a9d/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs?ref=28459ca0eb8ae716d014fbf8b33a90f204dc7a9d", "patch": "@@ -420,8 +420,18 @@ fn find_pre_post_state_expr(&fn_ctxt fcx, &prestate pres, @expr e) -> bool {\n             ret find_pre_post_state_expr(fcx, pres, ternary_to_if(e));\n         }\n         case (expr_binary(?bop, ?l, ?r)) {\n-            /* FIXME: what if bop is lazy? */\n-            ret find_pre_post_state_two(fcx, pres, l, r, e.id, oper_pure);\n+            if (lazy_binop(bop)) {\n+                auto changed = find_pre_post_state_expr(fcx, pres, l);\n+                changed |= find_pre_post_state_expr(fcx,\n+                              expr_poststate(fcx.ccx, l), r);\n+                ret changed\n+                    | set_prestate_ann(fcx.ccx, e.id, pres)\n+                    | set_poststate_ann(fcx.ccx, e.id,\n+                                        expr_poststate(fcx.ccx, l));\n+            }\n+            else {\n+                ret find_pre_post_state_two(fcx, pres, l, r, e.id, oper_pure);\n+            }\n         }\n         case (expr_send(?l, ?r)) {\n             ret find_pre_post_state_two(fcx, pres, l, r, e.id, oper_pure);\n@@ -507,7 +517,7 @@ fn find_pre_post_state_expr(&fn_ctxt fcx, &prestate pres, @expr e) -> bool {\n                 find_pre_post_state_expr(fcx, pres, val);\n             auto e_post = expr_poststate(fcx.ccx, val);\n             auto a_post;\n-            if (vec::len[arm](alts) > 0u) {\n+            if (vec::len(alts) > 0u) {\n                 a_post = false_postcond(num_constrs);\n                 for (arm an_alt in alts) {\n                     changed |= find_pre_post_state_block"}, {"sha": "7fa9c5435570f62931c5dc335b853f56cc808fb3", "filename": "src/test/compile-fail/and-init.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/28459ca0eb8ae716d014fbf8b33a90f204dc7a9d/src%2Ftest%2Fcompile-fail%2Fand-init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28459ca0eb8ae716d014fbf8b33a90f204dc7a9d/src%2Ftest%2Fcompile-fail%2Fand-init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fand-init.rs?ref=28459ca0eb8ae716d014fbf8b33a90f204dc7a9d", "patch": "@@ -0,0 +1,9 @@\n+// xfail-stage0\n+// error-pattern: Unsatisfied precondition constraint (for example, init(i\n+\n+fn main() {\n+  let int i;\n+\n+  log (false && {i = 5; true});\n+  log i;\n+}\n\\ No newline at end of file"}, {"sha": "aec1b49e6cadd86618672fd3b9a371aef4db74f5", "filename": "src/test/compile-fail/or-init.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/28459ca0eb8ae716d014fbf8b33a90f204dc7a9d/src%2Ftest%2Fcompile-fail%2For-init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28459ca0eb8ae716d014fbf8b33a90f204dc7a9d/src%2Ftest%2Fcompile-fail%2For-init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2For-init.rs?ref=28459ca0eb8ae716d014fbf8b33a90f204dc7a9d", "patch": "@@ -0,0 +1,9 @@\n+// xfail-stage0\n+// error-pattern: Unsatisfied precondition constraint (for example, init(i\n+\n+fn main() {\n+  let int i;\n+\n+  log (false || {i = 5; true});\n+  log i;\n+}\n\\ No newline at end of file"}]}