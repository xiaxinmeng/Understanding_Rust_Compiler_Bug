{"sha": "72e99f57c5118430361d23ed8e8815c1dd7271a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyZTk5ZjU3YzUxMTg0MzAzNjFkMjNlZDhlODgxNWMxZGQ3MjcxYTU=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2019-06-12T01:57:48Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2019-06-13T04:32:51Z"}, "message": "Deprecate ONCE_INIT\n\nOnce::new() has been a stable const fn for a while now.\n\nCloses #61746", "tree": {"sha": "0682ccd73686fb8b24aad5ce2d6ba44d23227fa0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0682ccd73686fb8b24aad5ce2d6ba44d23227fa0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72e99f57c5118430361d23ed8e8815c1dd7271a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72e99f57c5118430361d23ed8e8815c1dd7271a5", "html_url": "https://github.com/rust-lang/rust/commit/72e99f57c5118430361d23ed8e8815c1dd7271a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72e99f57c5118430361d23ed8e8815c1dd7271a5/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f3656ce9a2212fad872605b7a4ee103a155e9f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f3656ce9a2212fad872605b7a4ee103a155e9f3", "html_url": "https://github.com/rust-lang/rust/commit/5f3656ce9a2212fad872605b7a4ee103a155e9f3"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "395270f5bb53aeb08b3b8c9efc83d1b53bd0c194", "filename": "src/librustc_metadata/dynamic_lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e99f57c5118430361d23ed8e8815c1dd7271a5/src%2Flibrustc_metadata%2Fdynamic_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e99f57c5118430361d23ed8e8815c1dd7271a5/src%2Flibrustc_metadata%2Fdynamic_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdynamic_lib.rs?ref=72e99f57c5118430361d23ed8e8815c1dd7271a5", "patch": "@@ -161,8 +161,8 @@ mod dl {\n     pub fn check_for_errors_in<T, F>(f: F) -> Result<T, String> where\n         F: FnOnce() -> T,\n     {\n-        use std::sync::{Mutex, Once, ONCE_INIT};\n-        static INIT: Once = ONCE_INIT;\n+        use std::sync::{Mutex, Once};\n+        static INIT: Once = Once::new();\n         static mut LOCK: *mut Mutex<()> = 0 as *mut _;\n         unsafe {\n             INIT.call_once(|| {"}, {"sha": "fd6e46fd61dc581d7c331de0aecba4c16a6ece5f", "filename": "src/libstd/sync/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/72e99f57c5118430361d23ed8e8815c1dd7271a5/src%2Flibstd%2Fsync%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e99f57c5118430361d23ed8e8815c1dd7271a5/src%2Flibstd%2Fsync%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmod.rs?ref=72e99f57c5118430361d23ed8e8815c1dd7271a5", "patch": "@@ -163,6 +163,7 @@ pub use self::condvar::{Condvar, WaitTimeoutResult};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use self::mutex::{Mutex, MutexGuard};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[allow(deprecated)]\n pub use self::once::{Once, OnceState, ONCE_INIT};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use crate::sys_common::poison::{PoisonError, TryLockError, TryLockResult, LockResult};"}, {"sha": "e529b8c4227fa7a1d4c6c5ca14f0cb070529380e", "filename": "src/libstd/sync/once.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/72e99f57c5118430361d23ed8e8815c1dd7271a5/src%2Flibstd%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e99f57c5118430361d23ed8e8815c1dd7271a5/src%2Flibstd%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fonce.rs?ref=72e99f57c5118430361d23ed8e8815c1dd7271a5", "patch": "@@ -115,6 +115,11 @@ pub struct OnceState {\n /// static START: Once = ONCE_INIT;\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[rustc_deprecated(\n+    since = \"1.38.0\",\n+    reason = \"the `new` function is now preferred\",\n+    suggestion = \"Once::new()\",\n+)]\n pub const ONCE_INIT: Once = Once::new();\n \n // Four states that a Once can be in, encoded into the lower bits of `state` in"}, {"sha": "2e2b480e0660225e07e6764e2108aa41ead777f7", "filename": "src/test/run-pass/issues/issue-39367.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e99f57c5118430361d23ed8e8815c1dd7271a5/src%2Ftest%2Frun-pass%2Fissues%2Fissue-39367.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e99f57c5118430361d23ed8e8815c1dd7271a5/src%2Ftest%2Frun-pass%2Fissues%2Fissue-39367.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-39367.rs?ref=72e99f57c5118430361d23ed8e8815c1dd7271a5", "patch": "@@ -11,13 +11,13 @@ fn arena() -> &'static ArenaSet<Vec<u8>> {\n         ArenaSet(vec![], &Z)\n     }\n     unsafe {\n-        use std::sync::{Once, ONCE_INIT};\n+        use std::sync::Once;\n         fn require_sync<T: Sync>(_: &T) { }\n         unsafe fn __stability() -> &'static ArenaSet<Vec<u8>> {\n             use std::mem::transmute;\n             static mut DATA: *const ArenaSet<Vec<u8>> = 0 as *const ArenaSet<Vec<u8>>;\n \n-            static mut ONCE: Once = ONCE_INIT;\n+            static mut ONCE: Once = Once::new();\n             ONCE.call_once(|| {\n                 DATA = transmute\n                     ::<Box<ArenaSet<Vec<u8>>>, *const ArenaSet<Vec<u8>>>"}]}