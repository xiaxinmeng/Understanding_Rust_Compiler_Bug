{"sha": "a64bb6623c0732e2b3f7f371f375dc70b58629b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2NGJiNjYyM2MwNzMyZTJiM2Y3ZjM3MWYzNzVkYzcwYjU4NjI5Yjc=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-06T23:32:48Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-09T16:44:51Z"}, "message": "regex: Convert statics to constants\n\nThis require a bit of finesse to work around the changes with libunicode, but\nnothing too major!", "tree": {"sha": "585f90a03e2bfcfa6595232a522dc11bf90b075b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/585f90a03e2bfcfa6595232a522dc11bf90b075b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a64bb6623c0732e2b3f7f371f375dc70b58629b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a64bb6623c0732e2b3f7f371f375dc70b58629b7", "html_url": "https://github.com/rust-lang/rust/commit/a64bb6623c0732e2b3f7f371f375dc70b58629b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a64bb6623c0732e2b3f7f371f375dc70b58629b7/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abb1b2a309acfca78e89e6dac574f94a0ce4d916", "url": "https://api.github.com/repos/rust-lang/rust/commits/abb1b2a309acfca78e89e6dac574f94a0ce4d916", "html_url": "https://github.com/rust-lang/rust/commit/abb1b2a309acfca78e89e6dac574f94a0ce4d916"}], "stats": {"total": 63, "additions": 39, "deletions": 24}, "files": [{"sha": "1d1d1a0e9c5cab3668f09052cdff7d8187d392aa", "filename": "src/libregex/parse.rs", "status": "modified", "additions": 37, "deletions": 22, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/a64bb6623c0732e2b3f7f371f375dc70b58629b7/src%2Flibregex%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a64bb6623c0732e2b3f7f371f375dc70b58629b7/src%2Flibregex%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex%2Fparse.rs?ref=a64bb6623c0732e2b3f7f371f375dc70b58629b7", "patch": "@@ -162,12 +162,12 @@ impl BuildAst {\n /// expression.\n pub type Flags = u8;\n \n-pub static FLAG_EMPTY:      u8 = 0;\n-pub static FLAG_NOCASE:     u8 = 1 << 0; // i\n-pub static FLAG_MULTI:      u8 = 1 << 1; // m\n-pub static FLAG_DOTNL:      u8 = 1 << 2; // s\n-pub static FLAG_SWAP_GREED: u8 = 1 << 3; // U\n-pub static FLAG_NEGATED:    u8 = 1 << 4; // char class or not word boundary\n+pub const FLAG_EMPTY:      u8 = 0;\n+pub const FLAG_NOCASE:     u8 = 1 << 0; // i\n+pub const FLAG_MULTI:      u8 = 1 << 1; // m\n+pub const FLAG_DOTNL:      u8 = 1 << 2; // s\n+pub const FLAG_SWAP_GREED: u8 = 1 << 3; // U\n+pub const FLAG_NEGATED:    u8 = 1 << 4; // char class or not word boundary\n \n struct Parser<'a> {\n     // The input, parsed only as a sequence of UTF8 code points.\n@@ -1025,7 +1025,7 @@ fn find_class(classes: NamedClasses, name: &str) -> Option<Vec<(char, char)>> {\n }\n \n type Class = &'static [(char, char)];\n-type NamedClasses = &'static [(&'static str, Class)];\n+type NamedClasses = &'static [(&'static str, &'static Class)];\n \n static ASCII_CLASSES: NamedClasses = &[\n     // Classes must be in alphabetical order so that bsearch works.\n@@ -1044,19 +1044,34 @@ static ASCII_CLASSES: NamedClasses = &[\n     // [:word:]       word characters (== [0-9A-Za-z_])\n     // [:xdigit:]     hex digit (== [0-9A-Fa-f])\n     // Taken from: http://golang.org/pkg/regex/syntax/\n-    (\"alnum\", &[('0', '9'), ('A', 'Z'), ('a', 'z')]),\n-    (\"alpha\", &[('A', 'Z'), ('a', 'z')]),\n-    (\"ascii\", &[('\\x00', '\\x7F')]),\n-    (\"blank\", &[(' ', ' '), ('\\t', '\\t')]),\n-    (\"cntrl\", &[('\\x00', '\\x1F'), ('\\x7F', '\\x7F')]),\n-    (\"digit\", &[('0', '9')]),\n-    (\"graph\", &[('!', '~')]),\n-    (\"lower\", &[('a', 'z')]),\n-    (\"print\", &[(' ', '~')]),\n-    (\"punct\", &[('!', '/'), (':', '@'), ('[', '`'), ('{', '~')]),\n-    (\"space\", &[('\\t', '\\t'), ('\\n', '\\n'), ('\\x0B', '\\x0B'), ('\\x0C', '\\x0C'),\n-                ('\\r', '\\r'), (' ', ' ')]),\n-    (\"upper\", &[('A', 'Z')]),\n-    (\"word\", &[('0', '9'), ('A', 'Z'), ('a', 'z'), ('_', '_')]),\n-    (\"xdigit\", &[('0', '9'), ('A', 'F'), ('a', 'f')]),\n+    (\"alnum\", &ALNUM),\n+    (\"alpha\", &ALPHA),\n+    (\"ascii\", &ASCII),\n+    (\"blank\", &BLANK),\n+    (\"cntrl\", &CNTRL),\n+    (\"digit\", &DIGIT),\n+    (\"graph\", &GRAPH),\n+    (\"lower\", &LOWER),\n+    (\"print\", &PRINT),\n+    (\"punct\", &PUNCT),\n+    (\"space\", &SPACE),\n+    (\"upper\", &UPPER),\n+    (\"word\", &WORD),\n+    (\"xdigit\", &XDIGIT),\n ];\n+\n+static ALNUM: Class = &[('0', '9'), ('A', 'Z'), ('a', 'z')];\n+static ALPHA: Class = &[('A', 'Z'), ('a', 'z')];\n+static ASCII: Class = &[('\\x00', '\\x7F')];\n+static BLANK: Class = &[(' ', ' '), ('\\t', '\\t')];\n+static CNTRL: Class = &[('\\x00', '\\x1F'), ('\\x7F', '\\x7F')];\n+static DIGIT: Class = &[('0', '9')];\n+static GRAPH: Class = &[('!', '~')];\n+static LOWER: Class = &[('a', 'z')];\n+static PRINT: Class = &[(' ', '~')];\n+static PUNCT: Class = &[('!', '/'), (':', '@'), ('[', '`'), ('{', '~')];\n+static SPACE: Class = &[('\\t', '\\t'), ('\\n', '\\n'), ('\\x0B', '\\x0B'),\n+                        ('\\x0C', '\\x0C'), ('\\r', '\\r'), (' ', ' ')];\n+static UPPER: Class = &[('A', 'Z')];\n+static WORD: Class = &[('0', '9'), ('A', 'Z'), ('a', 'z'), ('_', '_')];\n+static XDIGIT: Class = &[('0', '9'), ('A', 'F'), ('a', 'f')];"}, {"sha": "eebe9b85e3b9daaf070898df0ef56cf5ec990b41", "filename": "src/libregex/re.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a64bb6623c0732e2b3f7f371f375dc70b58629b7/src%2Flibregex%2Fre.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a64bb6623c0732e2b3f7f371f375dc70b58629b7/src%2Flibregex%2Fre.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex%2Fre.rs?ref=a64bb6623c0732e2b3f7f371f375dc70b58629b7", "patch": "@@ -128,7 +128,7 @@ pub struct ExNative {\n     #[doc(hidden)]\n     pub original: &'static str,\n     #[doc(hidden)]\n-    pub names: &'static [Option<&'static str>],\n+    pub names: &'static &'static [Option<&'static str>],\n     #[doc(hidden)]\n     pub prog: fn(MatchKind, &str, uint, uint) -> Vec<Option<uint>>\n }"}, {"sha": "c48b35a49808c047f0abdf8d91686f317b9e301b", "filename": "src/libregex_macros/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a64bb6623c0732e2b3f7f371f375dc70b58629b7/src%2Flibregex_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a64bb6623c0732e2b3f7f371f375dc70b58629b7/src%2Flibregex_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex_macros%2Flib.rs?ref=a64bb6623c0732e2b3f7f371f375dc70b58629b7", "patch": "@@ -324,7 +324,7 @@ fn exec<'t>(which: ::regex::native::MatchKind, input: &'t str,\n \n ::regex::native::Native(::regex::native::ExNative {\n     original: $regex,\n-    names: CAP_NAMES,\n+    names: &CAP_NAMES,\n     prog: exec,\n })\n         })"}]}