{"sha": "e6cf6a7bfe98a421cd7304688fa4937764e43bb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2Y2Y2YTdiZmU5OGE0MjFjZDczMDQ2ODhmYTQ5Mzc3NjRlNDNiYjM=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-04-24T17:22:52Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-04-24T17:22:52Z"}, "message": "Take a single root node in range_search\n\nThe unsafe code can be justified within range_search, as it makes sure to not\noverlap the returned references, but from the callers perspective it's an\nentirely safe algorithm and there's no need for the caller to know about the\nduplication.", "tree": {"sha": "1b060b5d529d249a15724d5048ae1e098a087ec5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b060b5d529d249a15724d5048ae1e098a087ec5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6cf6a7bfe98a421cd7304688fa4937764e43bb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6cf6a7bfe98a421cd7304688fa4937764e43bb3", "html_url": "https://github.com/rust-lang/rust/commit/e6cf6a7bfe98a421cd7304688fa4937764e43bb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6cf6a7bfe98a421cd7304688fa4937764e43bb3/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b958790b336738540d027d645718713849638d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b958790b336738540d027d645718713849638d7", "html_url": "https://github.com/rust-lang/rust/commit/0b958790b336738540d027d645718713849638d7"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "8d0cd191c2a9041683d1e4fc10b8a9da64672512", "filename": "src/liballoc/collections/btree/map.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e6cf6a7bfe98a421cd7304688fa4937764e43bb3/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6cf6a7bfe98a421cd7304688fa4937764e43bb3/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs?ref=e6cf6a7bfe98a421cd7304688fa4937764e43bb3", "patch": "@@ -1034,9 +1034,7 @@ impl<K: Ord, V> BTreeMap<K, V> {\n         R: RangeBounds<T>,\n     {\n         if let Some(root) = &self.root {\n-            let root1 = root.as_ref();\n-            let root2 = root.as_ref();\n-            let (f, b) = range_search(root1, root2, range);\n+            let (f, b) = range_search(root.as_ref(), range);\n \n             Range { front: Some(f), back: Some(b) }\n         } else {\n@@ -1082,9 +1080,7 @@ impl<K: Ord, V> BTreeMap<K, V> {\n         R: RangeBounds<T>,\n     {\n         if let Some(root) = &mut self.root {\n-            let root1 = root.as_mut();\n-            let root2 = unsafe { ptr::read(&root1) };\n-            let (f, b) = range_search(root1, root2, range);\n+            let (f, b) = range_search(root.as_mut(), range);\n \n             RangeMut { front: Some(f), back: Some(b), _marker: PhantomData }\n         } else {\n@@ -2043,8 +2039,7 @@ where\n }\n \n fn range_search<BorrowType, K, V, Q: ?Sized, R: RangeBounds<Q>>(\n-    root1: NodeRef<BorrowType, K, V, marker::LeafOrInternal>,\n-    root2: NodeRef<BorrowType, K, V, marker::LeafOrInternal>,\n+    root: NodeRef<BorrowType, K, V, marker::LeafOrInternal>,\n     range: R,\n ) -> (\n     Handle<NodeRef<BorrowType, K, V, marker::Leaf>, marker::Edge>,\n@@ -2064,8 +2059,10 @@ where\n         _ => {}\n     };\n \n-    let mut min_node = root1;\n-    let mut max_node = root2;\n+    // We duplicate the root NodeRef here -- we will never access it in a way\n+    // that overlaps references obtained from the root.\n+    let mut min_node = unsafe { ptr::read(&root) };\n+    let mut max_node = root;\n     let mut min_found = false;\n     let mut max_found = false;\n "}]}