{"sha": "139d10924112b7cb1b681e1e30af3384f6da89e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzOWQxMDkyNDExMmI3Y2IxYjY4MWUxZTMwYWYzMzg0ZjZkYTg5ZTU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-11-17T17:34:25Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-11-18T10:58:40Z"}, "message": "Add a couple more tests + address review comments", "tree": {"sha": "0f9d957189438a784f6740e5b9c45b13c8265bce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f9d957189438a784f6740e5b9c45b13c8265bce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/139d10924112b7cb1b681e1e30af3384f6da89e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/139d10924112b7cb1b681e1e30af3384f6da89e5", "html_url": "https://github.com/rust-lang/rust/commit/139d10924112b7cb1b681e1e30af3384f6da89e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/139d10924112b7cb1b681e1e30af3384f6da89e5/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59464709f70f8079dc9e642a2111d847ea8a9536", "url": "https://api.github.com/repos/rust-lang/rust/commits/59464709f70f8079dc9e642a2111d847ea8a9536", "html_url": "https://github.com/rust-lang/rust/commit/59464709f70f8079dc9e642a2111d847ea8a9536"}], "stats": {"total": 166, "additions": 161, "deletions": 5}, "files": [{"sha": "9e5036b6e500e25d43b0fd51926247596f2adf77", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=139d10924112b7cb1b681e1e30af3384f6da89e5", "patch": "@@ -192,6 +192,7 @@ impl<'a, 'crateloader> Resolver<'a, 'crateloader> {\n                                       ident.name == keywords::SelfValue.name() {\n                                 // FIXME: Implement these with renaming requirements so that e.g.\n                                 // `use super;` doesn't work, but `use super as name;` does.\n+                                // Fall through here to get an error from `early_resolve_...`.\n                             }\n                         }\n \n@@ -940,7 +941,12 @@ impl<'a, 'b:'a, 'c: 'b> ImportResolver<'a, 'b, 'c> {\n                     }\n                 }\n                 Err(..) => {\n-                    assert!(result[ns].get().is_err());\n+                    // FIXME: This assert may fire if public glob is later shadowed by a private\n+                    // single import (see test `issue-55884-2.rs`). In theory single imports should\n+                    // always block globs, even if they are not yet resolved, so that this kind of\n+                    // self-inconsistent resolution never happens.\n+                    // Reenable the assert when the issue is fixed.\n+                    // assert!(result[ns].get().is_err());\n                 }\n             }\n         });"}, {"sha": "ac12ed9c81c77c29aaccf50a660477767152e295", "filename": "src/test/ui/imports/auxiliary/glob-conflict.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Fimports%2Fauxiliary%2Fglob-conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Fimports%2Fauxiliary%2Fglob-conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fauxiliary%2Fglob-conflict.rs?ref=139d10924112b7cb1b681e1e30af3384f6da89e5", "patch": "@@ -0,0 +1,9 @@\n+mod m1 {\n+    pub fn f() {}\n+}\n+mod m2 {\n+    pub fn f(_: u8) {}\n+}\n+\n+pub use m1::*;\n+pub use m2::*;"}, {"sha": "e02148b19f786e52bdbf359efa65d997867ed873", "filename": "src/test/ui/imports/glob-conflict-cross-crate.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Fimports%2Fglob-conflict-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Fimports%2Fglob-conflict-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fglob-conflict-cross-crate.rs?ref=139d10924112b7cb1b681e1e30af3384f6da89e5", "patch": "@@ -0,0 +1,7 @@\n+// aux-build:glob-conflict.rs\n+\n+extern crate glob_conflict;\n+\n+fn main() {\n+    glob_conflict::f(); //~ ERROR cannot find function `f` in module `glob_conflict`\n+}"}, {"sha": "f64637fd6f625c9cc83591b8375a7ff1f29ea75f", "filename": "src/test/ui/imports/glob-conflict-cross-crate.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Fimports%2Fglob-conflict-cross-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Fimports%2Fglob-conflict-cross-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fglob-conflict-cross-crate.stderr?ref=139d10924112b7cb1b681e1e30af3384f6da89e5", "patch": "@@ -0,0 +1,9 @@\n+error[E0425]: cannot find function `f` in module `glob_conflict`\n+  --> $DIR/glob-conflict-cross-crate.rs:6:20\n+   |\n+LL |     glob_conflict::f(); //~ ERROR cannot find function `f` in module `glob_conflict`\n+   |                    ^ not found in `glob_conflict`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0425`."}, {"sha": "21744aa5d7bfa51b73a2ccf7f9dc7fff7409a31b", "filename": "src/test/ui/imports/issue-55884-1.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Fimports%2Fissue-55884-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Fimports%2Fissue-55884-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-55884-1.rs?ref=139d10924112b7cb1b681e1e30af3384f6da89e5", "patch": "@@ -0,0 +1,21 @@\n+mod m {\n+    mod m1 {\n+        pub struct S {}\n+    }\n+    mod m2 {\n+        // Note this derive, it makes this struct macro-expanded,\n+        // so it doesn't appear in time to participate in the initial resolution of `use m::S`,\n+        // only in the later validation pass.\n+        #[derive(Default)]\n+        pub struct S {}\n+    }\n+\n+    // Create a glob vs glob ambiguity\n+    pub use self::m1::*;\n+    pub use self::m2::*;\n+}\n+\n+fn main() {\n+    use m::S; //~ ERROR `S` is ambiguous\n+    let s = S {};\n+}"}, {"sha": "477e859d0815ee774297fadda28bdfaa3464b049", "filename": "src/test/ui/imports/issue-55884-1.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Fimports%2Fissue-55884-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Fimports%2Fissue-55884-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-55884-1.stderr?ref=139d10924112b7cb1b681e1e30af3384f6da89e5", "patch": "@@ -0,0 +1,22 @@\n+error[E0659]: `S` is ambiguous (glob import vs glob import in the same module)\n+  --> $DIR/issue-55884-1.rs:19:12\n+   |\n+LL |     use m::S; //~ ERROR `S` is ambiguous\n+   |            ^ ambiguous name\n+   |\n+note: `S` could refer to the struct imported here\n+  --> $DIR/issue-55884-1.rs:14:13\n+   |\n+LL |     pub use self::m1::*;\n+   |             ^^^^^^^^^^^\n+   = help: consider adding an explicit import of `S` to disambiguate\n+note: `S` could also refer to the struct imported here\n+  --> $DIR/issue-55884-1.rs:15:13\n+   |\n+LL |     pub use self::m2::*;\n+   |             ^^^^^^^^^^^\n+   = help: consider adding an explicit import of `S` to disambiguate\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0659`."}, {"sha": "1b4f652c9fc2f1acf060f0224a074885a03a6e4a", "filename": "src/test/ui/imports/issue-55884-2.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.rs?ref=139d10924112b7cb1b681e1e30af3384f6da89e5", "patch": "@@ -0,0 +1,14 @@\n+mod options {\n+    pub struct ParseOptions {}\n+}\n+\n+mod parser {\n+    pub use options::*;\n+    // Private single import shadows public glob import, but arrives too late for initial\n+    // resolution of `use parser::ParseOptions` because it depends on that resolution itself.\n+    use ParseOptions;\n+}\n+\n+pub use parser::ParseOptions; //~ ERROR struct `ParseOptions` is private\n+\n+fn main() {}"}, {"sha": "f8a6cb4a580909b95d4b5905ba5b48b629181ec2", "filename": "src/test/ui/imports/issue-55884-2.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-55884-2.stderr?ref=139d10924112b7cb1b681e1e30af3384f6da89e5", "patch": "@@ -0,0 +1,9 @@\n+error[E0603]: struct `ParseOptions` is private\n+  --> $DIR/issue-55884-2.rs:12:17\n+   |\n+LL | pub use parser::ParseOptions; //~ ERROR struct `ParseOptions` is private\n+   |                 ^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0603`."}, {"sha": "0d4aefff9316c6954fa379ccb5f917dcbf02a30b", "filename": "src/test/ui/rust-2018/local-path-suggestions-2018.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Frust-2018%2Flocal-path-suggestions-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Frust-2018%2Flocal-path-suggestions-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Flocal-path-suggestions-2018.rs?ref=139d10924112b7cb1b681e1e30af3384f6da89e5", "patch": "@@ -19,7 +19,7 @@ mod foo {\n }\n \n mod bazz {\n-    use foo::Bar;\n+    use foo::Bar; //~ ERROR unresolved import `foo`\n \n     fn baz() {\n         let x: Bar = 22;\n@@ -28,6 +28,6 @@ mod bazz {\n \n use foo::Bar;\n \n-use foobar::Baz;\n+use foobar::Baz; //~ ERROR unresolved import `foobar`\n \n fn main() { }"}, {"sha": "a445a4c612bb997cbc119e3bd2005451ccbebd57", "filename": "src/test/ui/rust-2018/local-path-suggestions-2018.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Frust-2018%2Flocal-path-suggestions-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Frust-2018%2Flocal-path-suggestions-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Flocal-path-suggestions-2018.stderr?ref=139d10924112b7cb1b681e1e30af3384f6da89e5", "patch": "@@ -1,15 +1,15 @@\n error[E0432]: unresolved import `foo`\n   --> $DIR/local-path-suggestions-2018.rs:22:9\n    |\n-LL |     use foo::Bar;\n+LL |     use foo::Bar; //~ ERROR unresolved import `foo`\n    |         ^^^ did you mean `crate::foo`?\n    |\n    = note: `use` statements changed in Rust 2018; read more at <https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html>\n \n error[E0432]: unresolved import `foobar`\n   --> $DIR/local-path-suggestions-2018.rs:31:5\n    |\n-LL | use foobar::Baz;\n+LL | use foobar::Baz; //~ ERROR unresolved import `foobar`\n    |     ^^^^^^ did you mean `baz::foobar`?\n \n error: aborting due to 2 previous errors"}, {"sha": "3228d799083fb228c255d26b1325cebe3498612d", "filename": "src/test/ui/rust-2018/uniform-paths/deadlock.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fdeadlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fdeadlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fdeadlock.rs?ref=139d10924112b7cb1b681e1e30af3384f6da89e5", "patch": "@@ -0,0 +1,7 @@\n+// edition:2018\n+// compile-flags:--extern foo --extern bar\n+\n+use foo::bar; //~ ERROR unresolved import\n+use bar::foo;\n+\n+fn main() {}"}, {"sha": "8bbc8f33039b946c9a76f0e24f2a38614422a06d", "filename": "src/test/ui/rust-2018/uniform-paths/deadlock.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fdeadlock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fdeadlock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fdeadlock.stderr?ref=139d10924112b7cb1b681e1e30af3384f6da89e5", "patch": "@@ -0,0 +1,9 @@\n+error[E0432]: unresolved import\n+  --> $DIR/deadlock.rs:4:5\n+   |\n+LL | use foo::bar; //~ ERROR unresolved import\n+   |     ^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0432`."}, {"sha": "536cc25e35ac1b4b4516a482e93d3c3b90015b0b", "filename": "src/test/ui/rust-2018/uniform-paths/issue-54390.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fissue-54390.rs", "raw_url": "https://github.com/rust-lang/rust/raw/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fissue-54390.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fissue-54390.rs?ref=139d10924112b7cb1b681e1e30af3384f6da89e5", "patch": "@@ -0,0 +1,11 @@\n+// edition:2018\n+\n+#![deny(unused)]\n+\n+use std::fmt;\n+\n+// No \"unresolved import\" + \"unused import\" combination here.\n+use fmt::Write; //~ ERROR imports can only refer to extern crate names\n+                //~| ERROR unused import: `fmt::Write`\n+\n+fn main() {}"}, {"sha": "8f86698c9c11a16e57ca83bab3a7f1a542736ed3", "filename": "src/test/ui/rust-2018/uniform-paths/issue-54390.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fissue-54390.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/139d10924112b7cb1b681e1e30af3384f6da89e5/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fissue-54390.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fissue-54390.stderr?ref=139d10924112b7cb1b681e1e30af3384f6da89e5", "patch": "@@ -0,0 +1,32 @@\n+error[E0658]: imports can only refer to extern crate names passed with `--extern` on stable channel (see issue #53130)\n+  --> $DIR/issue-54390.rs:8:5\n+   |\n+LL | use std::fmt;\n+   |     -------- not an extern crate passed with `--extern`\n+...\n+LL | use fmt::Write; //~ ERROR imports can only refer to extern crate names\n+   |     ^^^\n+   |\n+   = help: add #![feature(uniform_paths)] to the crate attributes to enable\n+note: this import refers to the module imported here\n+  --> $DIR/issue-54390.rs:5:5\n+   |\n+LL | use std::fmt;\n+   |     ^^^^^^^^\n+\n+error: unused import: `fmt::Write`\n+  --> $DIR/issue-54390.rs:8:5\n+   |\n+LL | use fmt::Write; //~ ERROR imports can only refer to extern crate names\n+   |     ^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/issue-54390.rs:3:9\n+   |\n+LL | #![deny(unused)]\n+   |         ^^^^^^\n+   = note: #[deny(unused_imports)] implied by #[deny(unused)]\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}]}