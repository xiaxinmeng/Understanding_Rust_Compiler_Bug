{"sha": "fb8eff95e2ae88206867366971e02cbb7d95b62d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiOGVmZjk1ZTJhZTg4MjA2ODY3MzY2OTcxZTAyY2JiN2Q5NWI2MmQ=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-01-06T16:26:29Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-01-06T16:26:29Z"}, "message": "Add the boilerplate for folding view items.", "tree": {"sha": "c4e48c6a8b59c4a68f21a542fa152db18b5a7b9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4e48c6a8b59c4a68f21a542fa152db18b5a7b9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb8eff95e2ae88206867366971e02cbb7d95b62d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb8eff95e2ae88206867366971e02cbb7d95b62d", "html_url": "https://github.com/rust-lang/rust/commit/fb8eff95e2ae88206867366971e02cbb7d95b62d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb8eff95e2ae88206867366971e02cbb7d95b62d/comments", "author": null, "committer": null, "parents": [{"sha": "62c79fb216335f9d7abccd1f08d9803a702baa42", "url": "https://api.github.com/repos/rust-lang/rust/commits/62c79fb216335f9d7abccd1f08d9803a702baa42", "html_url": "https://github.com/rust-lang/rust/commit/62c79fb216335f9d7abccd1f08d9803a702baa42"}], "stats": {"total": 66, "additions": 65, "deletions": 1}, "files": [{"sha": "70f6e47012a8b6516686b76bd32f6d29a7aea61e", "filename": "src/comp/middle/fold.rs", "status": "modified", "additions": 65, "deletions": 1, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/fb8eff95e2ae88206867366971e02cbb7d95b62d/src%2Fcomp%2Fmiddle%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb8eff95e2ae88206867366971e02cbb7d95b62d/src%2Fcomp%2Fmiddle%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ffold.rs?ref=fb8eff95e2ae88206867366971e02cbb7d95b62d", "patch": "@@ -19,6 +19,8 @@ import front.ast.expr;\n import front.ast.stmt;\n import front.ast.block;\n import front.ast.item;\n+import front.ast.view_item;\n+import front.ast.meta_item;\n import front.ast.arg;\n import front.ast.pat;\n import front.ast.decl;\n@@ -203,6 +205,14 @@ type ast_fold[ENV] =\n          vec[ast.ty_param] ty_params,\n          def_id id, ann a) -> @item)              fold_item_obj,\n \n+     // View Item folds.\n+     (fn(&ENV e, &span sp, ident ident,\n+         vec[@meta_item] meta_items,\n+         def_id id) -> @view_item)                fold_view_item_use,\n+\n+     (fn(&ENV e, &span sp, vec[ident] idents,\n+         def_id id) -> @view_item)                fold_view_item_import,\n+\n      // Additional nodes.\n      (fn(&ENV e, &span sp,\n          &ast.block_) -> block)                   fold_block,\n@@ -223,6 +233,7 @@ type ast_fold[ENV] =\n      // Env updates.\n      (fn(&ENV e, @ast.crate c) -> ENV) update_env_for_crate,\n      (fn(&ENV e, @item i) -> ENV) update_env_for_item,\n+     (fn(&ENV e, @view_item i) -> ENV) update_env_for_view_item,\n      (fn(&ENV e, &block b) -> ENV) update_env_for_block,\n      (fn(&ENV e, @stmt s) -> ENV) update_env_for_stmt,\n      (fn(&ENV e, @decl i) -> ENV) update_env_for_decl,\n@@ -683,6 +694,30 @@ fn fold_obj[ENV](&ENV env, ast_fold[ENV] fld, &ast._obj ob) -> ast._obj {\n     ret fld.fold_obj(env, fields, meths);\n }\n \n+fn fold_view_item[ENV](&ENV env, ast_fold[ENV] fld, @view_item vi)\n+    -> @view_item {\n+\n+    let ENV env_ = fld.update_env_for_view_item(env, vi);\n+\n+    if (!fld.keep_going(env_)) {\n+        ret vi;\n+    }\n+\n+    alt (vi.node) {\n+        case (ast.view_item_use(?ident, ?meta_items, ?def_id)) {\n+            // FIXME: what other folding should be done in here?\n+            ret fld.fold_view_item_use(env_, vi.span, ident, meta_items,\n+                                       def_id);\n+        }\n+        case (ast.view_item_import(?idents, ?def_id)) {\n+            // FIXME: what other folding should be done in here?\n+            ret fld.fold_view_item_import(env_, vi.span, idents, def_id);\n+        }\n+    }\n+\n+    fail;\n+}\n+\n fn fold_item[ENV](&ENV env, ast_fold[ENV] fld, @item i) -> @item {\n \n     let ENV env_ = fld.update_env_for_item(env, i);\n@@ -742,13 +777,19 @@ fn fold_item[ENV](&ENV env, ast_fold[ENV] fld, @item i) -> @item {\n \n fn fold_mod[ENV](&ENV e, ast_fold[ENV] fld, &ast._mod m) -> ast._mod {\n \n+    let vec[@view_item] view_items = vec();\n     let vec[@item] items = vec();\n+    auto index = m.index;\n \n     for (@item i in m.items) {\n         append[@item](items, fold_item[ENV](e, fld, i));\n     }\n \n-    ret fld.fold_mod(e, rec(items=items with m));\n+    for (@view_item vi in m.view_items) {\n+        append[@view_item](view_items, fold_view_item[ENV](e, fld, vi));\n+    }\n+\n+    ret fld.fold_mod(e, rec(view_items=view_items, items=items, index=index));\n  }\n \n fn fold_crate[ENV](&ENV env, ast_fold[ENV] fld, @ast.crate c) -> @ast.crate {\n@@ -1036,6 +1077,18 @@ fn identity_fold_item_obj[ENV](&ENV e, &span sp, ident i,\n     ret @respan(sp, ast.item_obj(i, ob, ty_params, id, a));\n }\n \n+// View Item folds.\n+\n+fn identity_fold_view_item_use[ENV](&ENV e, &span sp, ident i,\n+                                    vec[@meta_item] meta_items,\n+                                    def_id id) -> @view_item {\n+    ret @respan(sp, ast.view_item_use(i, meta_items, id));\n+}\n+\n+fn identity_fold_view_item_import[ENV](&ENV e, &span sp, vec[ident] is,\n+                                       def_id id) -> @view_item {\n+    ret @respan(sp, ast.view_item_import(is, id));\n+}\n \n // Additional identities.\n \n@@ -1076,6 +1129,10 @@ fn identity_update_env_for_item[ENV](&ENV e, @item i) -> ENV {\n     ret e;\n }\n \n+fn identity_update_env_for_view_item[ENV](&ENV e, @view_item i) -> ENV {\n+    ret e;\n+}\n+\n fn identity_update_env_for_block[ENV](&ENV e, &block b) -> ENV {\n     ret e;\n }\n@@ -1176,6 +1233,11 @@ fn new_identity_fold[ENV]() -> ast_fold[ENV] {\n          fold_item_tag  = bind identity_fold_item_tag[ENV](_,_,_,_,_,_),\n          fold_item_obj  = bind identity_fold_item_obj[ENV](_,_,_,_,_,_,_),\n \n+         fold_view_item_use =\n+             bind identity_fold_view_item_use[ENV](_,_,_,_,_),\n+         fold_view_item_import =\n+             bind identity_fold_view_item_import[ENV](_,_,_,_),\n+\n          fold_block = bind identity_fold_block[ENV](_,_,_),\n          fold_fn = bind identity_fold_fn[ENV](_,_,_,_,_),\n          fold_mod = bind identity_fold_mod[ENV](_,_),\n@@ -1184,6 +1246,8 @@ fn new_identity_fold[ENV]() -> ast_fold[ENV] {\n \n          update_env_for_crate = bind identity_update_env_for_crate[ENV](_,_),\n          update_env_for_item = bind identity_update_env_for_item[ENV](_,_),\n+         update_env_for_view_item =\n+             bind identity_update_env_for_view_item[ENV](_,_),\n          update_env_for_block = bind identity_update_env_for_block[ENV](_,_),\n          update_env_for_stmt = bind identity_update_env_for_stmt[ENV](_,_),\n          update_env_for_decl = bind identity_update_env_for_decl[ENV](_,_),"}]}