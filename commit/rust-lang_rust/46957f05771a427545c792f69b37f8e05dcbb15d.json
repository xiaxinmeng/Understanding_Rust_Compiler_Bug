{"sha": "46957f05771a427545c792f69b37f8e05dcbb15d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2OTU3ZjA1NzcxYTQyNzU0NWM3OTJmNjliMzdmOGUwNWRjYmIxNWQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-10-06T01:10:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-06T01:10:34Z"}, "message": "Auto merge of #36893 - apasel422:issue-32114, r=alexcrichton\n\nRestore `DISCONNECTED` state in `oneshot::Packet::send`\n\nCloses #32114\n\nI'm not sure if this is the best approach, but the current action of swapping `DISCONNECTED` with `DATA` seems wrong. Additionally, it is strange that the `send` method (and others in the `oneshot` module) takes `&mut self` despite performing atomic operations, as this requires extra discipline to avoid data races and lets us use methods like `AtomicUsize::get_mut` instead of methods that require a memory ordering.", "tree": {"sha": "3a5c600d8991777c6679b71a597e0d1b9f9819e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a5c600d8991777c6679b71a597e0d1b9f9819e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46957f05771a427545c792f69b37f8e05dcbb15d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46957f05771a427545c792f69b37f8e05dcbb15d", "html_url": "https://github.com/rust-lang/rust/commit/46957f05771a427545c792f69b37f8e05dcbb15d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46957f05771a427545c792f69b37f8e05dcbb15d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3210fd5c20ffc6da420eb00e60bdc8704577fd3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3210fd5c20ffc6da420eb00e60bdc8704577fd3b", "html_url": "https://github.com/rust-lang/rust/commit/3210fd5c20ffc6da420eb00e60bdc8704577fd3b"}, {"sha": "fb90e4c7b69dec797d036dc0aac802d9b2a18198", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb90e4c7b69dec797d036dc0aac802d9b2a18198", "html_url": "https://github.com/rust-lang/rust/commit/fb90e4c7b69dec797d036dc0aac802d9b2a18198"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "6d37f1605901accd91c7203687e4e239cb399b4f", "filename": "src/libstd/sync/mpsc/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/46957f05771a427545c792f69b37f8e05dcbb15d/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46957f05771a427545c792f69b37f8e05dcbb15d/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs?ref=46957f05771a427545c792f69b37f8e05dcbb15d", "patch": "@@ -1940,6 +1940,13 @@ mod tests {\n         // wait for the child thread to exit before we exit\n         rx2.recv().unwrap();\n     }\n+\n+    #[test]\n+    fn issue_32114() {\n+        let (tx, _) = channel();\n+        let _ = tx.send(123);\n+        assert_eq!(tx.send(123), Err(SendError(123)));\n+    }\n }\n \n #[cfg(all(test, not(target_os = \"emscripten\")))]"}, {"sha": "767e9f96ac8e493f603147498d2a3bb8a12c2831", "filename": "src/libstd/sync/mpsc/oneshot.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46957f05771a427545c792f69b37f8e05dcbb15d/src%2Flibstd%2Fsync%2Fmpsc%2Foneshot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46957f05771a427545c792f69b37f8e05dcbb15d/src%2Flibstd%2Fsync%2Fmpsc%2Foneshot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Foneshot.rs?ref=46957f05771a427545c792f69b37f8e05dcbb15d", "patch": "@@ -113,6 +113,8 @@ impl<T> Packet<T> {\n             // Couldn't send the data, the port hung up first. Return the data\n             // back up the stack.\n             DISCONNECTED => {\n+                self.state.swap(DISCONNECTED, Ordering::SeqCst);\n+                self.upgrade = NothingSent;\n                 Err(self.data.take().unwrap())\n             }\n "}]}