{"sha": "410b52958da4434c2638da15e6c6c9a7ef665761", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxMGI1Mjk1OGRhNDQzNGMyNjM4ZGExNWU2YzZjOWE3ZWY2NjU3NjE=", "commit": {"author": {"name": "Blitzerr", "email": "rusty.blitzerr@gmail.com", "date": "2018-12-19T04:54:35Z"}, "committer": {"name": "Blitzerr", "email": "rusty.blitzerr@gmail.com", "date": "2019-01-09T01:57:22Z"}, "message": "Creating the vector using with_capacity to avoid re-allocation later on (#56905)", "tree": {"sha": "76489a144c9696a4c818be7a8eab454c26c5b66c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76489a144c9696a4c818be7a8eab454c26c5b66c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/410b52958da4434c2638da15e6c6c9a7ef665761", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/410b52958da4434c2638da15e6c6c9a7ef665761", "html_url": "https://github.com/rust-lang/rust/commit/410b52958da4434c2638da15e6c6c9a7ef665761", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/410b52958da4434c2638da15e6c6c9a7ef665761/comments", "author": {"login": "blitzerr", "id": 28721905, "node_id": "MDQ6VXNlcjI4NzIxOTA1", "avatar_url": "https://avatars.githubusercontent.com/u/28721905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blitzerr", "html_url": "https://github.com/blitzerr", "followers_url": "https://api.github.com/users/blitzerr/followers", "following_url": "https://api.github.com/users/blitzerr/following{/other_user}", "gists_url": "https://api.github.com/users/blitzerr/gists{/gist_id}", "starred_url": "https://api.github.com/users/blitzerr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blitzerr/subscriptions", "organizations_url": "https://api.github.com/users/blitzerr/orgs", "repos_url": "https://api.github.com/users/blitzerr/repos", "events_url": "https://api.github.com/users/blitzerr/events{/privacy}", "received_events_url": "https://api.github.com/users/blitzerr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "blitzerr", "id": 28721905, "node_id": "MDQ6VXNlcjI4NzIxOTA1", "avatar_url": "https://avatars.githubusercontent.com/u/28721905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blitzerr", "html_url": "https://github.com/blitzerr", "followers_url": "https://api.github.com/users/blitzerr/followers", "following_url": "https://api.github.com/users/blitzerr/following{/other_user}", "gists_url": "https://api.github.com/users/blitzerr/gists{/gist_id}", "starred_url": "https://api.github.com/users/blitzerr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blitzerr/subscriptions", "organizations_url": "https://api.github.com/users/blitzerr/orgs", "repos_url": "https://api.github.com/users/blitzerr/repos", "events_url": "https://api.github.com/users/blitzerr/events{/privacy}", "received_events_url": "https://api.github.com/users/blitzerr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47db51eecee943dc2af1adc467d1ff47685e6d09", "url": "https://api.github.com/repos/rust-lang/rust/commits/47db51eecee943dc2af1adc467d1ff47685e6d09", "html_url": "https://github.com/rust-lang/rust/commit/47db51eecee943dc2af1adc467d1ff47685e6d09"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "2a50f63b7925bd281eb1bf4f8c444621064c13e3", "filename": "src/librustc_typeck/check/upvar.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/410b52958da4434c2638da15e6c6c9a7ef665761/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/410b52958da4434c2638da15e6c6c9a7ef665761/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs?ref=410b52958da4434c2638da15e6c6c9a7ef665761", "patch": "@@ -122,7 +122,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         };\n \n         self.tcx.with_freevars(closure_node_id, |freevars| {\n-            let mut freevar_list: Vec<ty::UpvarId> = Vec::new();\n+            let mut freevar_list: Vec<ty::UpvarId> = Vec::with_capacity(freevars.len());\n             for freevar in freevars {\n                 let upvar_id = ty::UpvarId {\n                     var_path: ty::UpvarPath {\n@@ -131,6 +131,8 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     closure_expr_id: LocalDefId::from_def_id(closure_def_id),\n                 };\n                 debug!(\"seed upvar_id {:?}\", upvar_id);\n+                // Adding the upvar Id to the list of Upvars, which will be added\n+                // to the map for the closure at the end of the for loop.\n                 freevar_list.push(upvar_id);\n \n                 let capture_kind = match capture_clause {\n@@ -151,6 +153,9 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     .upvar_capture_map\n                     .insert(upvar_id, capture_kind);\n             }\n+            // Add the vector of freevars to the map keyed with the closure id.\n+            // This gives us an easier access to them without having to call\n+            // with_freevars again..\n             self.tables\n                 .borrow_mut()\n                 .upvar_list"}]}