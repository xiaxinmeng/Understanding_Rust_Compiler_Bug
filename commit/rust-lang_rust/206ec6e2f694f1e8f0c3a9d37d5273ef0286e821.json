{"sha": "206ec6e2f694f1e8f0c3a9d37d5273ef0286e821", "node_id": "C_kwDOAAsO6NoAKDIwNmVjNmUyZjY5NGYxZThmMGMzYTlkMzdkNTI3M2VmMDI4NmU4MjE", "commit": {"author": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2022-01-21T16:11:00Z"}, "committer": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2022-06-06T14:15:53Z"}, "message": "Move syncing doc to book", "tree": {"sha": "5c57af90a0253c86362e114af8144c8a02380f09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c57af90a0253c86362e114af8144c8a02380f09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/206ec6e2f694f1e8f0c3a9d37d5273ef0286e821", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmKeDBkACgkQHKDfKvWd\naKWhIxAAzlVOLbTmR/lFEk9qvmti1C5cPLW3FIwXm2KixYVGK5vStDwjdZ4xgQTg\nMLepcqc0pJOFVXZsO4ntKmFH+W4P1kUUDcUPW21HKt8J4qd965dvp5aRhL+pEWnL\na9I+4ucKFfvMVIFbJhmV8DMbhfU6Ut7EZ8MRNvP9oxubHFV0amH43MJ7vwJbYrFR\ncDWmcSrRRVGQtrXGuIb/soyXCHoAO72pSBWHqF86NGKCkGLwlf++6EvMRyJ8zni1\nAln4+qva/LkMoKHMNoO+h7uYhcWwmGaMvYsPuPt+kKyoPOQzp0dfDwpU8GRk8lXL\nmmZo87RJvwszx2UdSo29lkZX4E7JQbhp8/8P9uQEmoxZtE6E1fATIt3UpfkoBiPy\ngkONP+DozVzGIX8NaAKXtY5eI+Ynj3MEPZ55hC381UMAt1n1u2BDaiw+XJ5QmC+r\n9uwdHio/3g7xLqWjFaPEsjkVyqKdq8TAAhlZmUAerCP82yBzFQz4tsxc58eNYPVa\nkcmL6gF/JQreh3mBTzVWhyrhz2nPP1frO7FnlpJ3Ps0acuWw0ywguCx66YikraYF\nmIU7Ddl5xmIAPg6R4hvEua6RhoWKhDd4V9qKAyMo6CMwN2e9IPFvsuK6L8uPiK4C\n73FGroY5Iz72NiLYuNzcXlZOKUKwAa5nPMZlltbadh2DXZa29aw=\n=nJs/\n-----END PGP SIGNATURE-----", "payload": "tree 5c57af90a0253c86362e114af8144c8a02380f09\nparent af385799e0d5483170973a79110bdb1ce2949579\nauthor flip1995 <philipp.krones@embecosm.com> 1642781460 +0100\ncommitter Philipp Krones <hello@philkrones.com> 1654524953 +0200\n\nMove syncing doc to book\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/206ec6e2f694f1e8f0c3a9d37d5273ef0286e821", "html_url": "https://github.com/rust-lang/rust/commit/206ec6e2f694f1e8f0c3a9d37d5273ef0286e821", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/206ec6e2f694f1e8f0c3a9d37d5273ef0286e821/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af385799e0d5483170973a79110bdb1ce2949579", "url": "https://api.github.com/repos/rust-lang/rust/commits/af385799e0d5483170973a79110bdb1ce2949579", "html_url": "https://github.com/rust-lang/rust/commit/af385799e0d5483170973a79110bdb1ce2949579"}], "stats": {"total": 251, "additions": 126, "deletions": 125}, "files": [{"sha": "85eb82a646c228695ac8a58c502707e4fdc4a615", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 0, "deletions": 125, "changes": 125, "blob_url": "https://github.com/rust-lang/rust/blob/206ec6e2f694f1e8f0c3a9d37d5273ef0286e821/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/206ec6e2f694f1e8f0c3a9d37d5273ef0286e821/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=206ec6e2f694f1e8f0c3a9d37d5273ef0286e821", "patch": "@@ -21,11 +21,6 @@ All contributors are expected to follow the [Rust Code of Conduct].\n     - [IntelliJ Rust](#intellij-rust)\n     - [Rust Analyzer](#rust-analyzer)\n   - [How Clippy works](#how-clippy-works)\n-  - [Syncing changes between Clippy and `rust-lang/rust`](#syncing-changes-between-clippy-and-rust-langrust)\n-    - [Patching git-subtree to work with big repos](#patching-git-subtree-to-work-with-big-repos)\n-    - [Performing the sync from `rust-lang/rust` to Clippy](#performing-the-sync-from-rust-langrust-to-clippy)\n-    - [Performing the sync from Clippy to `rust-lang/rust`](#performing-the-sync-from-clippy-to-rust-langrust)\n-    - [Defining remotes](#defining-remotes)\n   - [Issue and PR triage](#issue-and-pr-triage)\n   - [Bors and Homu](#bors-and-homu)\n   - [Contributions](#contributions)\n@@ -205,126 +200,6 @@ That's why the `else_if_without_else` example uses the `register_early_pass` fun\n [early_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/trait.EarlyLintPass.html\n [late_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/trait.LateLintPass.html\n \n-## Syncing changes between Clippy and [`rust-lang/rust`]\n-\n-Clippy currently gets built with a pinned nightly version.\n-\n-In the `rust-lang/rust` repository, where rustc resides, there's a copy of Clippy\n-that compiler hackers modify from time to time to adapt to changes in the unstable\n-API of the compiler.\n-\n-We need to sync these changes back to this repository periodically, and the changes\n-made to this repository in the meantime also need to be synced to the `rust-lang/rust` repository.\n-\n-To avoid flooding the `rust-lang/rust` PR queue, this two-way sync process is done\n-in a bi-weekly basis if there's no urgent changes. This is done starting on the day of\n-the Rust stable release and then every other week. That way we guarantee that we keep\n-this repo up to date with the latest compiler API, and every feature in Clippy is available\n-for 2 weeks in nightly, before it can get to beta. For reference, the first sync\n-following this cadence was performed the 2020-08-27.\n-\n-This process is described in detail in the following sections. For general information\n-about `subtree`s in the Rust repository see [Rust's `CONTRIBUTING.md`][subtree].\n-\n-### Patching git-subtree to work with big repos\n-\n-Currently, there's a bug in `git-subtree` that prevents it from working properly\n-with the [`rust-lang/rust`] repo. There's an open PR to fix that, but it's stale.\n-Before continuing with the following steps, we need to manually apply that fix to\n-our local copy of `git-subtree`.\n-\n-You can get the patched version of `git-subtree` from [here][gitgitgadget-pr].\n-Put this file under `/usr/lib/git-core` (taking a backup of the previous file)\n-and make sure it has the proper permissions:\n-\n-```bash\n-sudo cp --backup /path/to/patched/git-subtree.sh /usr/lib/git-core/git-subtree\n-sudo chmod --reference=/usr/lib/git-core/git-subtree~ /usr/lib/git-core/git-subtree\n-sudo chown --reference=/usr/lib/git-core/git-subtree~ /usr/lib/git-core/git-subtree\n-```\n-\n-_Note:_ The first time running `git subtree push` a cache has to be built. This\n-involves going through the complete Clippy history once. For this you have to\n-increase the stack limit though, which you can do with `ulimit -s 60000`.\n-Make sure to run the `ulimit` command from the same session you call git subtree.\n-\n-_Note:_ If you are a Debian user, `dash` is the shell used by default for scripts instead of `sh`.\n-This shell has a hardcoded recursion limit set to 1000. In order to make this process work,\n-you need to force the script to run `bash` instead. You can do this by editing the first\n-line of the `git-subtree` script and changing `sh` to `bash`.\n-\n-### Performing the sync from [`rust-lang/rust`] to Clippy\n-\n-Here is a TL;DR version of the sync process (all of the following commands have\n-to be run inside the `rust` directory):\n-\n-1. Clone the [`rust-lang/rust`] repository or make sure it is up to date.\n-2. Checkout the commit from the latest available nightly. You can get it using `rustup check`.\n-3. Sync the changes to the rust-copy of Clippy to your Clippy fork:\n-    ```bash\n-    # Make sure to change `your-github-name` to your github name in the following command. Also be\n-    # sure to either use a net-new branch, e.g. `sync-from-rust`, or delete the branch beforehand\n-    # because changes cannot be fast forwarded\n-    git subtree push -P src/tools/clippy git@github.com:your-github-name/rust-clippy sync-from-rust\n-    ```\n-\n-    _Note:_ This will directly push to the remote repository. You can also push\n-    to your local copy by replacing the remote address with `/path/to/rust-clippy`\n-    directory.\n-\n-    _Note:_ Most of the time you have to create a merge commit in the\n-    `rust-clippy` repo (this has to be done in the Clippy repo, not in the\n-    rust-copy of Clippy):\n-    ```bash\n-    git fetch origin && git fetch upstream\n-    git checkout sync-from-rust\n-    git merge upstream/master\n-    ```\n-4. Open a PR to `rust-lang/rust-clippy` and wait for it to get merged (to\n-   accelerate the process ping the `@rust-lang/clippy` team in your PR and/or\n-   ~~annoy~~ ask them in the [Zulip] stream.)\n-\n-### Performing the sync from Clippy to [`rust-lang/rust`]\n-\n-All of the following commands have to be run inside the `rust` directory.\n-\n-1. Make sure Clippy itself is up-to-date by following the steps outlined in the previous\n-section if necessary.\n-\n-2. Sync the `rust-lang/rust-clippy` master to the rust-copy of Clippy:\n-    ```bash\n-    git checkout -b sync-from-clippy\n-    git subtree pull -P src/tools/clippy https://github.com/rust-lang/rust-clippy master\n-    ```\n-3. Open a PR to [`rust-lang/rust`]\n-\n-### Defining remotes\n-\n-You may want to define remotes, so you don't have to type out the remote\n-addresses on every sync. You can do this with the following commands (these\n-commands still have to be run inside the `rust` directory):\n-\n-```bash\n-# Set clippy-upstream remote for pulls\n-$ git remote add clippy-upstream https://github.com/rust-lang/rust-clippy\n-# Make sure to not push to the upstream repo\n-$ git remote set-url --push clippy-upstream DISABLED\n-# Set clippy-origin remote to your fork for pushes\n-$ git remote add clippy-origin git@github.com:your-github-name/rust-clippy\n-# Set a local remote\n-$ git remote add clippy-local /path/to/rust-clippy\n-```\n-\n-You can then sync with the remote names from above, e.g.:\n-\n-```bash\n-$ git subtree push -P src/tools/clippy clippy-local sync-from-rust\n-```\n-\n-[gitgitgadget-pr]: https://github.com/gitgitgadget/git/pull/493\n-[subtree]: https://rustc-dev-guide.rust-lang.org/contributing.html#external-dependencies-subtree\n-[`rust-lang/rust`]: https://github.com/rust-lang/rust\n-\n ## Issue and PR triage\n \n Clippy is following the [Rust triage procedure][triage] for issues and pull"}, {"sha": "200b0cb29ff4e953cd5d327e54282eeedf2c48ff", "filename": "book/src/SUMMARY.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/206ec6e2f694f1e8f0c3a9d37d5273ef0286e821/book%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/206ec6e2f694f1e8f0c3a9d37d5273ef0286e821/book%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/book%2Fsrc%2FSUMMARY.md?ref=206ec6e2f694f1e8f0c3a9d37d5273ef0286e821", "patch": "@@ -22,6 +22,7 @@\n     - [Adding Lints](development/adding_lints.md)\n     - [Common Tools](development/common_tools_writing_lints.md)\n - [Infrastructure](infrastructure/README.md)\n+    - [Syncing changes between Clippy and rust-lang/rust](infrastructure/sync.md)\n     - [Backporting Changes](infrastructure/backport.md)\n     - [Updating the Changelog](infrastructure/changelog_update.md)\n     - [Release a New Version](infrastructure/release.md)"}, {"sha": "981e63cfddae61bd0b355c4d904fbdf4e03c0485", "filename": "book/src/infrastructure/sync.md", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/rust-lang/rust/blob/206ec6e2f694f1e8f0c3a9d37d5273ef0286e821/book%2Fsrc%2Finfrastructure%2Fsync.md", "raw_url": "https://github.com/rust-lang/rust/raw/206ec6e2f694f1e8f0c3a9d37d5273ef0286e821/book%2Fsrc%2Finfrastructure%2Fsync.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/book%2Fsrc%2Finfrastructure%2Fsync.md?ref=206ec6e2f694f1e8f0c3a9d37d5273ef0286e821", "patch": "@@ -0,0 +1,125 @@\n+# Syncing changes between Clippy and [`rust-lang/rust`]\n+\n+Clippy currently gets built with a pinned nightly version.\n+\n+In the `rust-lang/rust` repository, where rustc resides, there's a copy of\n+Clippy that compiler hackers modify from time to time to adapt to changes in the\n+unstable API of the compiler.\n+\n+We need to sync these changes back to this repository periodically, and the\n+changes made to this repository in the meantime also need to be synced to the\n+`rust-lang/rust` repository.\n+\n+To avoid flooding the `rust-lang/rust` PR queue, this two-way sync process is\n+done in a bi-weekly basis if there's no urgent changes. This is done starting on\n+the day of the Rust stable release and then every other week. That way we\n+guarantee that we keep this repo up to date with the latest compiler API, and\n+every feature in Clippy is available for 2 weeks in nightly, before it can get\n+to beta. For reference, the first sync following this cadence was performed the\n+2020-08-27.\n+\n+This process is described in detail in the following sections. For general\n+information about `subtree`s in the Rust repository see [Rust's\n+`CONTRIBUTING.md`][subtree].\n+\n+## Patching git-subtree to work with big repos\n+\n+Currently, there's a bug in `git-subtree` that prevents it from working properly\n+with the [`rust-lang/rust`] repo. There's an open PR to fix that, but it's\n+stale. Before continuing with the following steps, we need to manually apply\n+that fix to our local copy of `git-subtree`.\n+\n+You can get the patched version of `git-subtree` from [here][gitgitgadget-pr].\n+Put this file under `/usr/lib/git-core` (making a backup of the previous file)\n+and make sure it has the proper permissions:\n+\n+```bash\n+sudo cp --backup /path/to/patched/git-subtree.sh /usr/lib/git-core/git-subtree\n+sudo chmod --reference=/usr/lib/git-core/git-subtree~ /usr/lib/git-core/git-subtree\n+sudo chown --reference=/usr/lib/git-core/git-subtree~ /usr/lib/git-core/git-subtree\n+```\n+\n+> _Note:_ The first time running `git subtree push` a cache has to be built.\n+> This involves going through the complete Clippy history once. For this you\n+> have to increase the stack limit though, which you can do with `ulimit -s\n+> 60000`. Make sure to run the `ulimit` command from the same session you call\n+> git subtree.\n+\n+> _Note:_ If you are a Debian user, `dash` is the shell used by default for\n+> scripts instead of `sh`. This shell has a hardcoded recursion limit set to\n+> 1000. In order to make this process work, you need to force the script to run\n+> `bash` instead. You can do this by editing the first line of the `git-subtree`\n+> script and changing `sh` to `bash`.\n+\n+## Performing the sync from [`rust-lang/rust`] to Clippy\n+\n+Here is a TL;DR version of the sync process (all of the following commands have\n+to be run inside the `rust` directory):\n+\n+1. Clone the [`rust-lang/rust`] repository or make sure it is up to date.\n+2. Checkout the commit from the latest available nightly. You can get it using\n+   `rustup check`.\n+3. Sync the changes to the rust-copy of Clippy to your Clippy fork:\n+    ```bash\n+    # Make sure to change `your-github-name` to your github name in the following command. Also be\n+    # sure to either use a net-new branch, e.g. `sync-from-rust`, or delete the branch beforehand\n+    # because changes cannot be fast forwarded and you have to run this command again.\n+    git subtree push -P src/tools/clippy git@github.com:your-github-name/rust-clippy sync-from-rust\n+    ```\n+\n+    > _Note:_ This will directly push to the remote repository. You can also\n+    > push to your local copy by replacing the remote address with\n+    > `/path/to/rust-clippy` directory.\n+\n+    > _Note:_ Most of the time you have to create a merge commit in the\n+    > `rust-clippy` repo (this has to be done in the Clippy repo, not in the\n+    > rust-copy of Clippy):\n+    ```bash\n+    git fetch upstream  # assuming upstream is the rust-lang/rust remote\n+    git checkout sync-from-rust\n+    git merge upstream/master\n+    ```\n+4. Open a PR to `rust-lang/rust-clippy` and wait for it to get merged (to\n+   accelerate the process ping the `@rust-lang/clippy` team in your PR and/or\n+   ask them in the [Zulip] stream.)\n+\n+[Zulip]: https://rust-lang.zulipchat.com/#narrow/stream/clippy\n+\n+## Performing the sync from Clippy to [`rust-lang/rust`]\n+\n+All of the following commands have to be run inside the `rust` directory.\n+\n+1. Make sure you have checked out the latest `master` of `rust-lang/rust`.\n+2. Sync the `rust-lang/rust-clippy` master to the rust-copy of Clippy:\n+    ```bash\n+    git checkout -b sync-from-clippy\n+    git subtree pull -P src/tools/clippy https://github.com/rust-lang/rust-clippy master\n+    ```\n+3. Open a PR to [`rust-lang/rust`]\n+\n+## Defining remotes\n+\n+You may want to define remotes, so you don't have to type out the remote\n+addresses on every sync. You can do this with the following commands (these\n+commands still have to be run inside the `rust` directory):\n+\n+```bash\n+# Set clippy-upstream remote for pulls\n+$ git remote add clippy-upstream https://github.com/rust-lang/rust-clippy\n+# Make sure to not push to the upstream repo\n+$ git remote set-url --push clippy-upstream DISABLED\n+# Set clippy-origin remote to your fork for pushes\n+$ git remote add clippy-origin git@github.com:your-github-name/rust-clippy\n+# Set a local remote\n+$ git remote add clippy-local /path/to/rust-clippy\n+```\n+\n+You can then sync with the remote names from above, e.g.:\n+\n+```bash\n+$ git subtree push -P src/tools/clippy clippy-local sync-from-rust\n+```\n+\n+[gitgitgadget-pr]: https://github.com/gitgitgadget/git/pull/493\n+[subtree]: https://rustc-dev-guide.rust-lang.org/contributing.html#external-dependencies-subtree\n+[`rust-lang/rust`]: https://github.com/rust-lang/rust"}]}