{"sha": "4a88d9349945bcf1257245e985c8a3387485d149", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhODhkOTM0OTk0NWJjZjEyNTcyNDVlOTg1YzhhMzM4NzQ4NWQxNDk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-01-28T14:08:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-28T14:08:54Z"}, "message": "Merge #7474\n\n7474: Make logger-based debugging more pleasant r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "24c652859d30afdf198883e7f0cbe15f609682b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24c652859d30afdf198883e7f0cbe15f609682b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a88d9349945bcf1257245e985c8a3387485d149", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgEsV2CRBK7hj4Ov3rIwAAdHIIAF/7ZBotFUI7pHiLU60GeMyj\nMVDIhPDfmcIH6KbO8KSMhRmfYgAirQEJNI9G+t5vvOPt0ZEdq/hyJitawIC56CB+\npQy2TqOqCGgiBG3ZMdS46pDNN1YaQDkQ2LfUgyWWSPPU9DnIkT/2eey+b7+02pJ1\nBiunO20JplkC9NSvynGvsRv205/vmyAxzHqpT8hFS1QBDpq4FuCCiEXeT3092Gsh\nAaB5kO7yBJlevvEpmx8pRjsobzjy4YX5C8T2aGHZEtqqSgLytWP2+eYfp4xTA/O9\nHEWWpnHdvJEtqhgryOfhiyj5GzEk2bHhsw6o+1DotJOejZFEST6V0sF4iqSmzF4=\n=KdEL\n-----END PGP SIGNATURE-----\n", "payload": "tree 24c652859d30afdf198883e7f0cbe15f609682b6\nparent a3f5e7db557436a4e22cf4bcc66eaa5bc3661978\nparent 4b59c3a538f27238b0466898f1b4ac69d1f9e778\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1611842934 +0000\ncommitter GitHub <noreply@github.com> 1611842934 +0000\n\nMerge #7474\n\n7474: Make logger-based debugging more pleasant r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a88d9349945bcf1257245e985c8a3387485d149", "html_url": "https://github.com/rust-lang/rust/commit/4a88d9349945bcf1257245e985c8a3387485d149", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a88d9349945bcf1257245e985c8a3387485d149/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3f5e7db557436a4e22cf4bcc66eaa5bc3661978", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3f5e7db557436a4e22cf4bcc66eaa5bc3661978", "html_url": "https://github.com/rust-lang/rust/commit/a3f5e7db557436a4e22cf4bcc66eaa5bc3661978"}, {"sha": "4b59c3a538f27238b0466898f1b4ac69d1f9e778", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b59c3a538f27238b0466898f1b4ac69d1f9e778", "html_url": "https://github.com/rust-lang/rust/commit/4b59c3a538f27238b0466898f1b4ac69d1f9e778"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "e04208006fe6f63142b8be15e3ef7f36c573562c", "filename": "crates/flycheck/src/lib.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4a88d9349945bcf1257245e985c8a3387485d149/crates%2Fflycheck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a88d9349945bcf1257245e985c8a3387485d149/crates%2Fflycheck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fflycheck%2Fsrc%2Flib.rs?ref=4a88d9349945bcf1257245e985c8a3387485d149", "patch": "@@ -76,7 +76,6 @@ impl FlycheckHandle {\n     }\n }\n \n-#[derive(Debug)]\n pub enum Message {\n     /// Request adding a diagnostic with fixes included to a file\n     AddDiagnostic { workspace_root: PathBuf, diagnostic: Diagnostic },\n@@ -89,6 +88,21 @@ pub enum Message {\n     },\n }\n \n+impl fmt::Debug for Message {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        match self {\n+            Message::AddDiagnostic { workspace_root, diagnostic } => f\n+                .debug_struct(\"AddDiagnostic\")\n+                .field(\"workspace_root\", workspace_root)\n+                .field(\"diagnostic_code\", &diagnostic.code.as_ref().map(|it| &it.code))\n+                .finish(),\n+            Message::Progress { id, progress } => {\n+                f.debug_struct(\"Progress\").field(\"id\", id).field(\"progress\", progress).finish()\n+            }\n+        }\n+    }\n+}\n+\n #[derive(Debug)]\n pub enum Progress {\n     DidStart,"}, {"sha": "559f4e7bf6ea3c09d6ba0dcb4671679c76b94160", "filename": "crates/project_model/src/workspace.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4a88d9349945bcf1257245e985c8a3387485d149/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a88d9349945bcf1257245e985c8a3387485d149/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fworkspace.rs?ref=4a88d9349945bcf1257245e985c8a3387485d149", "patch": "@@ -51,6 +51,7 @@ pub enum ProjectWorkspace {\n \n impl fmt::Debug for ProjectWorkspace {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        // Make sure this isn't too verbose.\n         match self {\n             ProjectWorkspace::Cargo { cargo, sysroot, rustc, rustc_cfg } => f\n                 .debug_struct(\"Cargo\")\n@@ -60,15 +61,15 @@ impl fmt::Debug for ProjectWorkspace {\n                     \"n_rustc_compiler_crates\",\n                     &rustc.as_ref().map_or(0, |rc| rc.packages().len()),\n                 )\n-                .field(\"rustc_cfg\", rustc_cfg)\n+                .field(\"n_rustc_cfg\", &rustc_cfg.len())\n                 .finish(),\n             ProjectWorkspace::Json { project, sysroot, rustc_cfg } => {\n                 let mut debug_struct = f.debug_struct(\"Json\");\n                 debug_struct.field(\"n_crates\", &project.n_crates());\n                 if let Some(sysroot) = sysroot {\n                     debug_struct.field(\"n_sysroot_crates\", &sysroot.crates().len());\n                 }\n-                debug_struct.field(\"rustc_cfg\", rustc_cfg);\n+                debug_struct.field(\"n_rustc_cfg\", &rustc_cfg.len());\n                 debug_struct.finish()\n             }\n         }"}, {"sha": "ef73099cfae1f2dee9b5072772d9f9e459e5a81b", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a88d9349945bcf1257245e985c8a3387485d149/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a88d9349945bcf1257245e985c8a3387485d149/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=4a88d9349945bcf1257245e985c8a3387485d149", "patch": "@@ -103,10 +103,10 @@ impl GlobalState {\n         self.fetch_workspaces_queue.request_op()\n     }\n     pub(crate) fn fetch_workspaces_if_needed(&mut self) {\n-        log::info!(\"will fetch workspaces\");\n         if !self.fetch_workspaces_queue.should_start_op() {\n             return;\n         }\n+        log::info!(\"will fetch workspaces\");\n \n         self.task_pool.handle.spawn_with_sender({\n             let linked_projects = self.config.linked_projects();"}]}