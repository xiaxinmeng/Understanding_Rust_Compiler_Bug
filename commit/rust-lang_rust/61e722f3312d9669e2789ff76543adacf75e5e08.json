{"sha": "61e722f3312d9669e2789ff76543adacf75e5e08", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxZTcyMmYzMzEyZDk2NjllMjc4OWZmNzY1NDNhZGFjZjc1ZTVlMDg=", "commit": {"author": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2020-10-12T23:05:35Z"}, "committer": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2020-10-13T02:30:17Z"}, "message": "Use Option::unwrap_or instead of open-coding it", "tree": {"sha": "a37364df4fa5d2e299679430ca2d2a98a7183758", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a37364df4fa5d2e299679430ca2d2a98a7183758"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61e722f3312d9669e2789ff76543adacf75e5e08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61e722f3312d9669e2789ff76543adacf75e5e08", "html_url": "https://github.com/rust-lang/rust/commit/61e722f3312d9669e2789ff76543adacf75e5e08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61e722f3312d9669e2789ff76543adacf75e5e08/comments", "author": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3ab6f05846951bed41d4b0661ac0735aebf3687", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3ab6f05846951bed41d4b0661ac0735aebf3687", "html_url": "https://github.com/rust-lang/rust/commit/f3ab6f05846951bed41d4b0661ac0735aebf3687"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "ba9081bb8a69593b28e3a3aa6e31ae268cbfb79f", "filename": "compiler/rustc_ast_pretty/src/pp.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/61e722f3312d9669e2789ff76543adacf75e5e08/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61e722f3312d9669e2789ff76543adacf75e5e08/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs?ref=61e722f3312d9669e2789ff76543adacf75e5e08", "patch": "@@ -491,12 +491,9 @@ impl Printer {\n     }\n \n     fn get_top(&mut self) -> PrintStackElem {\n-        match self.print_stack.last() {\n-            Some(el) => *el,\n-            None => {\n-                PrintStackElem { offset: 0, pbreak: PrintStackBreak::Broken(Breaks::Inconsistent) }\n-            }\n-        }\n+        *self.print_stack.last().unwrap_or({\n+            &PrintStackElem { offset: 0, pbreak: PrintStackBreak::Broken(Breaks::Inconsistent) }\n+        })\n     }\n \n     fn print_begin(&mut self, b: BeginToken, l: isize) {"}]}