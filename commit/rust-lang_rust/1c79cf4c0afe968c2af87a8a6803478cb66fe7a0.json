{"sha": "1c79cf4c0afe968c2af87a8a6803478cb66fe7a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjNzljZjRjMGFmZTk2OGMyYWY4N2E4YTY4MDM0NzhjYjY2ZmU3YTA=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-17T17:41:13Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-17T17:41:13Z"}, "message": "[OPT] Use RETURN_PLACE instead of fn_sig.output() to get return layout", "tree": {"sha": "8b38895bb0a2687e4c1809e8898b51b98c4cc24c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b38895bb0a2687e4c1809e8898b51b98c4cc24c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c79cf4c0afe968c2af87a8a6803478cb66fe7a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c79cf4c0afe968c2af87a8a6803478cb66fe7a0", "html_url": "https://github.com/rust-lang/rust/commit/1c79cf4c0afe968c2af87a8a6803478cb66fe7a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c79cf4c0afe968c2af87a8a6803478cb66fe7a0/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86cdd1909b9727e0874233a3876a2228c3c4c6e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/86cdd1909b9727e0874233a3876a2228c3c4c6e1", "html_url": "https://github.com/rust-lang/rust/commit/86cdd1909b9727e0874233a3876a2228c3c4c6e1"}], "stats": {"total": 23, "additions": 7, "deletions": 16}, "files": [{"sha": "c33bb249f256c13f7480ad6eb1edd99a9ca0cef8", "filename": "src/abi/mod.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1c79cf4c0afe968c2af87a8a6803478cb66fe7a0/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c79cf4c0afe968c2af87a8a6803478cb66fe7a0/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=1c79cf4c0afe968c2af87a8a6803478cb66fe7a0", "patch": "@@ -260,17 +260,6 @@ impl<'tcx, B: Backend + 'static> FunctionCx<'_, 'tcx, B> {\n             _ => unreachable!(),\n         }\n     }\n-\n-    fn self_sig(&self) -> FnSig<'tcx> {\n-        self.tcx.normalize_erasing_late_bound_regions(\n-            ParamEnv::reveal_all(),\n-            &fn_sig_for_fn_abi(self.tcx, self.instance),\n-        )\n-    }\n-\n-    fn return_layout(&self) -> TyLayout<'tcx> {\n-        self.layout_of(self.self_sig().output())\n-    }\n }\n \n fn local_place<'tcx>("}, {"sha": "9286787d8b6d5c7c7274b4854c1bfb603e315137", "filename": "src/abi/returning.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1c79cf4c0afe968c2af87a8a6803478cb66fe7a0/src%2Fabi%2Freturning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c79cf4c0afe968c2af87a8a6803478cb66fe7a0/src%2Fabi%2Freturning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Freturning.rs?ref=1c79cf4c0afe968c2af87a8a6803478cb66fe7a0", "patch": "@@ -1,15 +1,17 @@\n use crate::abi::pass_mode::*;\n use crate::prelude::*;\n \n+fn return_layout<'a, 'tcx>(fx: &mut FunctionCx<'a, 'tcx, impl Backend>) -> TyLayout<'tcx> {\n+    fx.layout_of(fx.monomorphize(&fx.mir.local_decls[RETURN_PLACE].ty))\n+}\n+\n pub fn codegen_return_param(\n     fx: &mut FunctionCx<impl Backend>,\n     ssa_analyzed: &rustc_index::vec::IndexVec<Local, crate::analyze::SsaKind>,\n     start_ebb: Ebb,\n ) {\n-    let ret_layout = fx.return_layout();\n-    let output_pass_mode = get_pass_mode(fx.tcx, fx.return_layout());\n-\n-    let ret_param = match output_pass_mode {\n+    let ret_layout = return_layout(fx);\n+    let ret_param = match get_pass_mode(fx.tcx, ret_layout) {\n         PassMode::NoPass => {\n             fx.local_map\n                 .insert(RETURN_PLACE, CPlace::no_place(ret_layout));\n@@ -85,7 +87,7 @@ pub fn codegen_with_call_return_arg<'tcx, B: Backend, T>(\n }\n \n pub fn codegen_return(fx: &mut FunctionCx<impl Backend>) {\n-    match get_pass_mode(fx.tcx, fx.return_layout()) {\n+    match get_pass_mode(fx.tcx, return_layout(fx)) {\n         PassMode::NoPass | PassMode::ByRef => {\n             fx.bcx.ins().return_(&[]);\n         }"}]}