{"sha": "2073ea5c07ea5a83d17fb7d08f67cc55e1010aaf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwNzNlYTVjMDdlYTVhODNkMTdmYjdkMDhmNjdjYzU1ZTEwMTBhYWY=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-11-27T17:03:41Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-12-23T18:35:22Z"}, "message": "bootstrap: convert miri to use Tarball", "tree": {"sha": "c0d0110da415db680c55550882893dbcbcfef4da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0d0110da415db680c55550882893dbcbcfef4da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2073ea5c07ea5a83d17fb7d08f67cc55e1010aaf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl/jjfoACgkQPgar6Auq\n8Zyfuw//ZkIpIQ9cvQLjDd2HuUZDP8ho9oglvDqesJMEnfKk3YvlghjqsnZQDTVZ\niMWyv+6GPKyvimISshs57cjuAm9iFK5ggMVolXPlQvTa8s229qplgkdxPomjKYNj\n/WCqHHjfYaE970hwvtZ1t/cVHCXC20qhitOFVUU3wVZGng/TJV3DHwZzvCYFXudw\nzz+gemOjI+lfOYWd/3pKEdiK2OorAj4+ZmIEREiV6JSEsVG0KlbA0rq2Kk054GHI\nbOOa5M7xEPkocojvbfMi2rOjCSq2yERz4cXRTuzwPua06HOaJELtqcLHzDVALDBK\niHQ+jF5anUVey4WnUHfS+wyCsx4KmD+5N5cII+kqEAsd4l9aEBazVWOGsrgRXDn3\nG8tnyUmRxaCzS4GQCL51/b0eNktFUiCC9iun0dxrv6HV0NSjpfIqM+gkuJ5SOzWV\ndA7R+F5E6YUBqPK8+Gl6biPxqQ128GuhJHzhUgUtzm2KFaSbz9xlgtybp21Ld9dC\nWWxvJUEsm+ZWBxxRM1Io0HdQ7V53obFBdCjWBZS+LHz7twEMQpyYVyYN8dR2DSE6\nU9pFBkp4VPdkAmBaJezBt//eRcGOY65+qJYKx9Yk+GxZH/PJGWHQp0v/MIvKt8Zp\nea7nHbkc3YkWHnGTFv4DuM2Q5gPII8c18mJ1VLqTgdWS6GfJomQ=\n=LsRe\n-----END PGP SIGNATURE-----", "payload": "tree c0d0110da415db680c55550882893dbcbcfef4da\nparent 32afb3c436eb3909a636fd4fce20a1ba03cc88ec\nauthor Pietro Albini <pietro@pietroalbini.org> 1606496621 +0100\ncommitter Pietro Albini <pietro@pietroalbini.org> 1608748522 +0100\n\nbootstrap: convert miri to use Tarball\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2073ea5c07ea5a83d17fb7d08f67cc55e1010aaf", "html_url": "https://github.com/rust-lang/rust/commit/2073ea5c07ea5a83d17fb7d08f67cc55e1010aaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2073ea5c07ea5a83d17fb7d08f67cc55e1010aaf/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32afb3c436eb3909a636fd4fce20a1ba03cc88ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/32afb3c436eb3909a636fd4fce20a1ba03cc88ec", "html_url": "https://github.com/rust-lang/rust/commit/32afb3c436eb3909a636fd4fce20a1ba03cc88ec"}], "stats": {"total": 65, "additions": 14, "deletions": 51}, "files": [{"sha": "a884e7ee2cc4a5d484e6d536d64365c58e829826", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 7, "deletions": 51, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/2073ea5c07ea5a83d17fb7d08f67cc55e1010aaf/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2073ea5c07ea5a83d17fb7d08f67cc55e1010aaf/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=2073ea5c07ea5a83d17fb7d08f67cc55e1010aaf", "patch": "@@ -1303,19 +1303,6 @@ impl Step for Miri {\n         let target = self.target;\n         assert!(builder.config.extended);\n \n-        let src = builder.src.join(\"src/tools/miri\");\n-        let release_num = builder.release_num(\"miri\");\n-        let name = pkgname(builder, \"miri\");\n-        let version = builder.miri_info.version(builder, &release_num);\n-\n-        let tmp = tmpdir(builder);\n-        let image = tmp.join(\"miri-image\");\n-        drop(fs::remove_dir_all(&image));\n-        builder.create_dir(&image);\n-\n-        // Prepare the image directory\n-        // We expect miri to build, because we've exited this step above if tool\n-        // state for miri isn't testing.\n         let miri = builder\n             .ensure(tool::Miri { compiler, target, extra_features: Vec::new() })\n             .or_else(|| {\n@@ -1329,44 +1316,13 @@ impl Step for Miri {\n                 None\n             })?;\n \n-        builder.install(&miri, &image.join(\"bin\"), 0o755);\n-        builder.install(&cargomiri, &image.join(\"bin\"), 0o755);\n-        let doc = image.join(\"share/doc/miri\");\n-        builder.install(&src.join(\"README.md\"), &doc, 0o644);\n-        builder.install(&src.join(\"LICENSE-APACHE\"), &doc, 0o644);\n-        builder.install(&src.join(\"LICENSE-MIT\"), &doc, 0o644);\n-\n-        // Prepare the overlay\n-        let overlay = tmp.join(\"miri-overlay\");\n-        drop(fs::remove_dir_all(&overlay));\n-        t!(fs::create_dir_all(&overlay));\n-        builder.install(&src.join(\"README.md\"), &overlay, 0o644);\n-        builder.install(&src.join(\"LICENSE-APACHE\"), &doc, 0o644);\n-        builder.install(&src.join(\"LICENSE-MIT\"), &doc, 0o644);\n-        builder.create(&overlay.join(\"version\"), &version);\n-\n-        // Generate the installer tarball\n-        let mut cmd = rust_installer(builder);\n-        cmd.arg(\"generate\")\n-            .arg(\"--product-name=Rust\")\n-            .arg(\"--rel-manifest-dir=rustlib\")\n-            .arg(\"--success-message=miri-ready-to-serve.\")\n-            .arg(\"--image-dir\")\n-            .arg(&image)\n-            .arg(\"--work-dir\")\n-            .arg(&tmpdir(builder))\n-            .arg(\"--output-dir\")\n-            .arg(&distdir(builder))\n-            .arg(\"--non-installed-overlay\")\n-            .arg(&overlay)\n-            .arg(format!(\"--package-name={}-{}\", name, target.triple))\n-            .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n-            .arg(\"--component-name=miri-preview\");\n-\n-        builder.info(&format!(\"Dist miri stage{} ({})\", compiler.stage, target));\n-        let _time = timeit(builder);\n-        builder.run(&mut cmd);\n-        Some(distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target.triple)))\n+        let mut tarball = Tarball::new(builder, \"miri\", &target.triple);\n+        tarball.set_overlay(OverlayKind::Miri);\n+        tarball.is_preview(true);\n+        tarball.add_file(miri, \"bin\", 0o755);\n+        tarball.add_file(cargomiri, \"bin\", 0o755);\n+        tarball.add_legal_and_readme_to(\"share/doc/miri\");\n+        Some(tarball.generate())\n     }\n }\n "}, {"sha": "0e705a93902e81d5d2470e9ec9f4ae65bf128e74", "filename": "src/bootstrap/tarball.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2073ea5c07ea5a83d17fb7d08f67cc55e1010aaf/src%2Fbootstrap%2Ftarball.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2073ea5c07ea5a83d17fb7d08f67cc55e1010aaf/src%2Fbootstrap%2Ftarball.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftarball.rs?ref=2073ea5c07ea5a83d17fb7d08f67cc55e1010aaf", "patch": "@@ -10,6 +10,7 @@ pub(crate) enum OverlayKind {\n     LLVM,\n     Cargo,\n     Clippy,\n+    Miri,\n }\n \n impl OverlayKind {\n@@ -30,6 +31,11 @@ impl OverlayKind {\n                 \"src/tools/clippy/LICENSE-APACHE\",\n                 \"src/tools/clippy/LICENSE-MIT\",\n             ],\n+            OverlayKind::Miri => &[\n+                \"src/tools/miri/README.md\",\n+                \"src/tools/miri/LICENSE-APACHE\",\n+                \"src/tools/miri/LICENSE-MIT\",\n+            ],\n         }\n     }\n \n@@ -43,6 +49,7 @@ impl OverlayKind {\n             OverlayKind::Clippy => {\n                 builder.clippy_info.version(builder, &builder.release_num(\"clippy\"))\n             }\n+            OverlayKind::Miri => builder.miri_info.version(builder, &builder.release_num(\"miri\")),\n         }\n     }\n }"}]}