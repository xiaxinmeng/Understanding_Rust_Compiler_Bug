{"sha": "5c2dec038c21de940b6080203d8e4281a7f2c912", "node_id": "C_kwDOAAsO6NoAKDVjMmRlYzAzOGMyMWRlOTQwYjYwODAyMDNkOGU0MjgxYTdmMmM5MTI", "commit": {"author": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-08-27T19:39:23Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-08-27T21:26:46Z"}, "message": "Add used function attribute from inline asm", "tree": {"sha": "7d5ed4c9cffed52c1c8a988b064ae8a6f249beb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d5ed4c9cffed52c1c8a988b064ae8a6f249beb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c2dec038c21de940b6080203d8e4281a7f2c912", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c2dec038c21de940b6080203d8e4281a7f2c912", "html_url": "https://github.com/rust-lang/rust/commit/5c2dec038c21de940b6080203d8e4281a7f2c912", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c2dec038c21de940b6080203d8e4281a7f2c912/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4626b3ca07c4fcdce1d96840567005e294e5ecc", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4626b3ca07c4fcdce1d96840567005e294e5ecc", "html_url": "https://github.com/rust-lang/rust/commit/b4626b3ca07c4fcdce1d96840567005e294e5ecc"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "10d2542f8b5adc2d86831a6721c0dc2ac9bbe373", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c2dec038c21de940b6080203d8e4281a7f2c912/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/5c2dec038c21de940b6080203d8e4281a7f2c912/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=5c2dec038c21de940b6080203d8e4281a7f2c912", "patch": "@@ -41,15 +41,15 @@ dependencies = [\n [[package]]\n name = \"gccjit\"\n version = \"1.0.0\"\n-source = \"git+https://github.com/antoyo/gccjit.rs#1a60fe3918a5b3b0983c1ea09f4b9445001a6468\"\n+source = \"git+https://github.com/antoyo/gccjit.rs#f30cc2bd330f4fda3d625f305bdfd7e523e2d8f8\"\n dependencies = [\n  \"gccjit_sys\",\n ]\n \n [[package]]\n name = \"gccjit_sys\"\n version = \"0.0.1\"\n-source = \"git+https://github.com/antoyo/gccjit.rs#1a60fe3918a5b3b0983c1ea09f4b9445001a6468\"\n+source = \"git+https://github.com/antoyo/gccjit.rs#f30cc2bd330f4fda3d625f305bdfd7e523e2d8f8\"\n dependencies = [\n  \"libc 0.1.12\",\n ]"}, {"sha": "eb37488a6c5cba9bfafba64ef7488838516ed4a0", "filename": "src/asm.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5c2dec038c21de940b6080203d8e4281a7f2c912/src%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c2dec038c21de940b6080203d8e4281a7f2c912/src%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fasm.rs?ref=5c2dec038c21de940b6080203d8e4281a7f2c912", "patch": "@@ -718,6 +718,8 @@ impl<'gcc, 'tcx> AsmMethods<'tcx> for CodegenCx<'gcc, 'tcx> {\n                         }\n \n                         GlobalAsmOperandRef::SymFn { instance } => {\n+                            let function = self.rvalue_as_function(get_fn(self, instance));\n+                            self.add_used_function(function);\n                             // TODO(@Amanieu): Additional mangling is needed on\n                             // some targets to add a leading underscore (Mach-O)\n                             // or byte count suffixes (x86 Windows).\n@@ -726,6 +728,7 @@ impl<'gcc, 'tcx> AsmMethods<'tcx> for CodegenCx<'gcc, 'tcx> {\n                         }\n \n                         GlobalAsmOperandRef::SymStatic { def_id } => {\n+                            // TODO(antoyo): set the global variable as used.\n                             // TODO(@Amanieu): Additional mangling is needed on\n                             // some targets to add a leading underscore (Mach-O).\n                             let instance = Instance::mono(self.tcx, def_id);"}, {"sha": "9307d280f61ccf725e878bd4ba0d869abd8404c5", "filename": "src/consts.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5c2dec038c21de940b6080203d8e4281a7f2c912/src%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c2dec038c21de940b6080203d8e4281a7f2c912/src%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconsts.rs?ref=5c2dec038c21de940b6080203d8e4281a7f2c912", "patch": "@@ -1,4 +1,6 @@\n-use gccjit::{GlobalKind, LValue, RValue, ToRValue, Type};\n+#[cfg(feature = \"master\")]\n+use gccjit::FnAttribute;\n+use gccjit::{Function, GlobalKind, LValue, RValue, ToRValue, Type};\n use rustc_codegen_ssa::traits::{BaseTypeMethods, ConstMethods, DerivedTypeMethods, StaticMethods};\n use rustc_hir as hir;\n use rustc_hir::Node;\n@@ -159,12 +161,19 @@ impl<'gcc, 'tcx> StaticMethods for CodegenCx<'gcc, 'tcx> {\n         // TODO(antoyo)\n     }\n \n-    fn add_compiler_used_global(&self, _global: RValue<'gcc>) {\n-        // TODO(antoyo)\n+    fn add_compiler_used_global(&self, global: RValue<'gcc>) {\n+        // NOTE: seems like GCC does not make the distinction between compiler.used and used.\n+        self.add_used_global(global);\n     }\n }\n \n impl<'gcc, 'tcx> CodegenCx<'gcc, 'tcx> {\n+    #[cfg_attr(not(feature=\"master\"), allow(unused_variables))]\n+    pub fn add_used_function(&self, function: Function<'gcc>) {\n+        #[cfg(feature = \"master\")]\n+        function.add_attribute(FnAttribute::Used);\n+    }\n+\n     pub fn static_addr_of_mut(&self, cv: RValue<'gcc>, align: Align, kind: Option<&str>) -> RValue<'gcc> {\n         let global =\n             match kind {"}]}