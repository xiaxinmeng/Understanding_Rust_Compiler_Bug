{"sha": "0d724ea572a5dd26acbbf2eb4538eabe454fb894", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkNzI0ZWE1NzJhNWRkMjZhY2JiZjJlYjQ1MzhlYWJlNDU0ZmI4OTQ=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2018-12-25T13:48:54Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2018-12-25T14:16:42Z"}, "message": "Improve parsing of incomplete field accesses in preparation for field completion\n\nWe need to be able to get the receiver even if there is no field name yet, and\ncurrently \"a.\" wouldn't get parsed as a field name at all. This seems to help.", "tree": {"sha": "077ffa2bda1405af9a91ea9c7ad61f9cb1fc0098", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/077ffa2bda1405af9a91ea9c7ad61f9cb1fc0098"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d724ea572a5dd26acbbf2eb4538eabe454fb894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d724ea572a5dd26acbbf2eb4538eabe454fb894", "html_url": "https://github.com/rust-lang/rust/commit/0d724ea572a5dd26acbbf2eb4538eabe454fb894", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d724ea572a5dd26acbbf2eb4538eabe454fb894/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55c941cd9fb90c9340f01981e113aabd058b185b", "url": "https://api.github.com/repos/rust-lang/rust/commits/55c941cd9fb90c9340f01981e113aabd058b185b", "html_url": "https://github.com/rust-lang/rust/commit/55c941cd9fb90c9340f01981e113aabd058b185b"}], "stats": {"total": 54, "additions": 45, "deletions": 9}, "files": [{"sha": "2d1f174912c62cfd65bfc41d4c3141d305295231", "filename": "crates/ra_syntax/src/grammar/expressions.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0d724ea572a5dd26acbbf2eb4538eabe454fb894/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d724ea572a5dd26acbbf2eb4538eabe454fb894/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=0d724ea572a5dd26acbbf2eb4538eabe454fb894", "patch": "@@ -283,14 +283,10 @@ fn postfix_expr(\n             // }\n             L_PAREN if allow_calls => call_expr(p, lhs),\n             L_BRACK if allow_calls => index_expr(p, lhs),\n-            DOT if p.nth(1) == IDENT => {\n-                if p.nth(2) == L_PAREN || p.nth(2) == COLONCOLON {\n-                    method_call_expr(p, lhs)\n-                } else {\n-                    field_expr(p, lhs)\n-                }\n+            DOT if p.nth(1) == IDENT && (p.nth(2) == L_PAREN || p.nth(2) == COLONCOLON) => {\n+                method_call_expr(p, lhs)\n             }\n-            DOT if p.nth(1) == INT_NUMBER => field_expr(p, lhs),\n+            DOT => field_expr(p, lhs),\n             // test postfix_range\n             // fn foo() { let x = 1..; }\n             DOTDOT | DOTDOTEQ if !EXPR_FIRST.contains(p.nth(1)) => {\n@@ -355,13 +351,15 @@ fn method_call_expr(p: &mut Parser, lhs: CompletedMarker) -> CompletedMarker {\n //     x.0.bar;\n // }\n fn field_expr(p: &mut Parser, lhs: CompletedMarker) -> CompletedMarker {\n-    assert!(p.at(DOT) && (p.nth(1) == IDENT || p.nth(1) == INT_NUMBER));\n+    assert!(p.at(DOT));\n     let m = lhs.precede(p);\n     p.bump();\n     if p.at(IDENT) {\n         name_ref(p)\n-    } else {\n+    } else if p.at(INT_NUMBER) {\n         p.bump()\n+    } else {\n+        p.error(\"expected field name or number\")\n     }\n     m.complete(p, FIELD_EXPR)\n }"}, {"sha": "a7cdc17bb112a9ddb3d5c4b69a51c48178673a6e", "filename": "crates/ra_syntax/tests/data/parser/err/0029_field_completion.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0d724ea572a5dd26acbbf2eb4538eabe454fb894/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0029_field_completion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d724ea572a5dd26acbbf2eb4538eabe454fb894/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0029_field_completion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0029_field_completion.rs?ref=0d724ea572a5dd26acbbf2eb4538eabe454fb894", "patch": "@@ -0,0 +1,3 @@\n+fn foo(a: A) {\n+    a.\n+}"}, {"sha": "fd2a3f37b74f3876d16db23d270c258f2ae65420", "filename": "crates/ra_syntax/tests/data/parser/err/0029_field_completion.txt", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/0d724ea572a5dd26acbbf2eb4538eabe454fb894/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0029_field_completion.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0d724ea572a5dd26acbbf2eb4538eabe454fb894/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0029_field_completion.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0029_field_completion.txt?ref=0d724ea572a5dd26acbbf2eb4538eabe454fb894", "patch": "@@ -0,0 +1,35 @@\n+SOURCE_FILE@[0; 24)\n+  FN_DEF@[0; 23)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 12)\n+      L_PAREN@[6; 7)\n+      PARAM@[7; 11)\n+        BIND_PAT@[7; 8)\n+          NAME@[7; 8)\n+            IDENT@[7; 8) \"a\"\n+        COLON@[8; 9)\n+        WHITESPACE@[9; 10)\n+        PATH_TYPE@[10; 11)\n+          PATH@[10; 11)\n+            PATH_SEGMENT@[10; 11)\n+              NAME_REF@[10; 11)\n+                IDENT@[10; 11) \"A\"\n+      R_PAREN@[11; 12)\n+    WHITESPACE@[12; 13)\n+    BLOCK@[13; 23)\n+      L_CURLY@[13; 14)\n+      WHITESPACE@[14; 19)\n+      FIELD_EXPR@[19; 21)\n+        PATH_EXPR@[19; 20)\n+          PATH@[19; 20)\n+            PATH_SEGMENT@[19; 20)\n+              NAME_REF@[19; 20)\n+                IDENT@[19; 20) \"a\"\n+        DOT@[20; 21)\n+        err: `expected field name or number`\n+      WHITESPACE@[21; 22)\n+      R_CURLY@[22; 23)\n+  WHITESPACE@[23; 24)"}]}