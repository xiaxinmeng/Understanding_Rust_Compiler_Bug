{"sha": "a61178d2186b8d9ca324231ab03368819be0ff6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2MTE3OGQyMTg2YjhkOWNhMzI0MjMxYWIwMzM2ODgxOWJlMGZmNmU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-09-14T10:12:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-14T10:12:08Z"}, "message": "Merge #5985\n\n5985: Make MergeBehaviour configurable r=jonas-schievink a=Veykril\n\nThis should make the newly implemented `MergeBehaviour` for import insertion configurable as roughly outlined in https://github.com/rust-analyzer/rust-analyzer/pull/5935#issuecomment-685834257. For the config name and the like I just picked what came to mind so that might be up for bikeshedding.\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "c9169fd4a7a1dd40cd7cee9e41456a0e17fdbb09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9169fd4a7a1dd40cd7cee9e41456a0e17fdbb09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a61178d2186b8d9ca324231ab03368819be0ff6e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfX0H4CRBK7hj4Ov3rIwAAdHIIAGmtN7wM/VliQ0J7X0fj5MZc\nmOQW2XSIF3ivLXd5yHrOWoT+p4FEvgmsrarDyx130SFxvIVQy8CuheBNNbCbs+zU\n3RdYAOtpN305uz+21753ZmvMpJ1UF2xepIupQpVe1ZqrVU7APnHM0iEjLJcOta40\n8JqOLZv4sgikk6UUGsQvlG/2WNDOnRQ6Q0m2wwZqEKfSF5eLFCUAq3LAP8iHXmAB\nRK6R++pbaJEX3kxb5B7V3MpJ2mtTVFWYR46rFULFRo5eruZ2VTMKrLp2FYyrpkVK\nrnm/244BhHZ9ia1qX/bFyWuwTtNS/qPg76D8Ah1SFPLmOzPu97oqTclPn7u9jqs=\n=1fs5\n-----END PGP SIGNATURE-----\n", "payload": "tree c9169fd4a7a1dd40cd7cee9e41456a0e17fdbb09\nparent 0d03fe6ef57d3956e92382e0e1f1a916015191cb\nparent adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1600078328 +0000\ncommitter GitHub <noreply@github.com> 1600078328 +0000\n\nMerge #5985\n\n5985: Make MergeBehaviour configurable r=jonas-schievink a=Veykril\n\nThis should make the newly implemented `MergeBehaviour` for import insertion configurable as roughly outlined in https://github.com/rust-analyzer/rust-analyzer/pull/5935#issuecomment-685834257. For the config name and the like I just picked what came to mind so that might be up for bikeshedding.\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a61178d2186b8d9ca324231ab03368819be0ff6e", "html_url": "https://github.com/rust-lang/rust/commit/a61178d2186b8d9ca324231ab03368819be0ff6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a61178d2186b8d9ca324231ab03368819be0ff6e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d03fe6ef57d3956e92382e0e1f1a916015191cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d03fe6ef57d3956e92382e0e1f1a916015191cb", "html_url": "https://github.com/rust-lang/rust/commit/0d03fe6ef57d3956e92382e0e1f1a916015191cb"}, {"sha": "adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0", "html_url": "https://github.com/rust-lang/rust/commit/adc4c6b9d7fd91827c4cf383a1e95dc7e27138e0"}], "stats": {"total": 82, "additions": 65, "deletions": 17}, "files": [{"sha": "adf02edabe7b8e6eb0ab6d10c43abeb1ec5a3154", "filename": "crates/assists/src/assist_config.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a61178d2186b8d9ca324231ab03368819be0ff6e/crates%2Fassists%2Fsrc%2Fassist_config.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a61178d2186b8d9ca324231ab03368819be0ff6e/crates%2Fassists%2Fsrc%2Fassist_config.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fassist_config.rs?ref=a61178d2186b8d9ca324231ab03368819be0ff6e", "patch": "@@ -4,12 +4,13 @@\n //! module, and we use to statically check that we only produce snippet\n //! assists if we are allowed to.\n \n-use crate::AssistKind;\n+use crate::{utils::MergeBehaviour, AssistKind};\n \n #[derive(Clone, Debug, PartialEq, Eq)]\n pub struct AssistConfig {\n     pub snippet_cap: Option<SnippetCap>,\n     pub allowed: Option<Vec<AssistKind>>,\n+    pub insert_use: InsertUseConfig,\n }\n \n impl AssistConfig {\n@@ -25,6 +26,21 @@ pub struct SnippetCap {\n \n impl Default for AssistConfig {\n     fn default() -> Self {\n-        AssistConfig { snippet_cap: Some(SnippetCap { _private: () }), allowed: None }\n+        AssistConfig {\n+            snippet_cap: Some(SnippetCap { _private: () }),\n+            allowed: None,\n+            insert_use: InsertUseConfig::default(),\n+        }\n+    }\n+}\n+\n+#[derive(Clone, Copy, Debug, PartialEq, Eq)]\n+pub struct InsertUseConfig {\n+    pub merge: Option<MergeBehaviour>,\n+}\n+\n+impl Default for InsertUseConfig {\n+    fn default() -> Self {\n+        InsertUseConfig { merge: Some(MergeBehaviour::Full) }\n     }\n }"}, {"sha": "b5eb2c7226eee0efce5b9eec7cba1eb5e5dff110", "filename": "crates/assists/src/handlers/auto_import.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a61178d2186b8d9ca324231ab03368819be0ff6e/crates%2Fassists%2Fsrc%2Fhandlers%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a61178d2186b8d9ca324231ab03368819be0ff6e/crates%2Fassists%2Fsrc%2Fhandlers%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fauto_import.rs?ref=a61178d2186b8d9ca324231ab03368819be0ff6e", "patch": "@@ -14,10 +14,7 @@ use syntax::{\n     SyntaxNode,\n };\n \n-use crate::{\n-    utils::{insert_use, MergeBehaviour},\n-    AssistContext, AssistId, AssistKind, Assists, GroupLabel,\n-};\n+use crate::{utils::insert_use, AssistContext, AssistId, AssistKind, Assists, GroupLabel};\n \n // Assist: auto_import\n //\n@@ -60,7 +57,7 @@ pub(crate) fn auto_import(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n                 let new_syntax = insert_use(\n                     &scope,\n                     make::path_from_text(&import.to_string()),\n-                    Some(MergeBehaviour::Full),\n+                    ctx.config.insert_use.merge,\n                 );\n                 builder.replace(syntax.text_range(), new_syntax.to_string())\n             },"}, {"sha": "3ea50f375c1923d595bd587f66a4d84ea44a1174", "filename": "crates/assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a61178d2186b8d9ca324231ab03368819be0ff6e/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a61178d2186b8d9ca324231ab03368819be0ff6e/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=a61178d2186b8d9ca324231ab03368819be0ff6e", "patch": "@@ -10,9 +10,7 @@ use syntax::{\n };\n \n use crate::{\n-    assist_context::AssistBuilder,\n-    utils::{insert_use, MergeBehaviour},\n-    AssistContext, AssistId, AssistKind, Assists,\n+    assist_context::AssistBuilder, utils::insert_use, AssistContext, AssistId, AssistKind, Assists,\n };\n use ast::make;\n use insert_use::ImportScope;\n@@ -117,7 +115,7 @@ fn insert_import(\n         let new_syntax = insert_use(\n             &scope,\n             make::path_from_text(&mod_path.to_string()),\n-            Some(MergeBehaviour::Full),\n+            ctx.config.insert_use.merge,\n         );\n         // FIXME: this will currently panic as multiple imports will have overlapping text ranges\n         builder.replace(syntax.text_range(), new_syntax.to_string())"}, {"sha": "e48407fcc3696711e7ea54a62ef1603771c43d2e", "filename": "crates/assists/src/handlers/replace_qualified_name_with_use.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a61178d2186b8d9ca324231ab03368819be0ff6e/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a61178d2186b8d9ca324231ab03368819be0ff6e/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs?ref=a61178d2186b8d9ca324231ab03368819be0ff6e", "patch": "@@ -2,7 +2,7 @@ use syntax::{algo::SyntaxRewriter, ast, match_ast, AstNode, SyntaxNode, TextRang\n use test_utils::mark;\n \n use crate::{\n-    utils::{insert_use, ImportScope, MergeBehaviour},\n+    utils::{insert_use, ImportScope},\n     AssistContext, AssistId, AssistKind, Assists,\n };\n use ast::make;\n@@ -60,7 +60,7 @@ pub(crate) fn replace_qualified_name_with_use(\n                 let new_syntax = insert_use(\n                     import_scope,\n                     make::path_from_text(path_to_import),\n-                    Some(MergeBehaviour::Full),\n+                    ctx.config.insert_use.merge,\n                 );\n                 builder.replace(syntax.text_range(), new_syntax.to_string())\n             }"}, {"sha": "b0511ceb680798873231dceaefa01dbd63759e06", "filename": "crates/assists/src/utils.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a61178d2186b8d9ca324231ab03368819be0ff6e/crates%2Fassists%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a61178d2186b8d9ca324231ab03368819be0ff6e/crates%2Fassists%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Futils.rs?ref=a61178d2186b8d9ca324231ab03368819be0ff6e", "patch": "@@ -16,7 +16,8 @@ use syntax::{\n \n use crate::assist_config::SnippetCap;\n \n-pub(crate) use insert_use::{insert_use, ImportScope, MergeBehaviour};\n+pub use insert_use::MergeBehaviour;\n+pub(crate) use insert_use::{insert_use, ImportScope};\n \n pub(crate) fn unwrap_trivial_block(block: ast::BlockExpr) -> ast::Expr {\n     extract_trivial_expression(&block)"}, {"sha": "6d110aaaf728973db3edd39511b3ad4bfc81f8f1", "filename": "crates/assists/src/utils/insert_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a61178d2186b8d9ca324231ab03368819be0ff6e/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a61178d2186b8d9ca324231ab03368819be0ff6e/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs?ref=a61178d2186b8d9ca324231ab03368819be0ff6e", "patch": "@@ -236,7 +236,7 @@ fn common_prefix(lhs: &ast::Path, rhs: &ast::Path) -> Option<(ast::Path, ast::Pa\n }\n \n /// What type of merges are allowed.\n-#[derive(Copy, Clone, PartialEq, Eq)]\n+#[derive(Copy, Clone, Debug, PartialEq, Eq)]\n pub enum MergeBehaviour {\n     /// Merge everything together creating deeply nested imports.\n     Full,"}, {"sha": "3b97e087f88335a30ca69c80f3662c38761c3d90", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a61178d2186b8d9ca324231ab03368819be0ff6e/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a61178d2186b8d9ca324231ab03368819be0ff6e/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=a61178d2186b8d9ca324231ab03368819be0ff6e", "patch": "@@ -81,7 +81,9 @@ pub use crate::{\n     },\n };\n \n-pub use assists::{Assist, AssistConfig, AssistId, AssistKind, ResolvedAssist};\n+pub use assists::{\n+    utils::MergeBehaviour, Assist, AssistConfig, AssistId, AssistKind, ResolvedAssist,\n+};\n pub use base_db::{\n     Canceled, CrateGraph, CrateId, Edition, FileId, FilePosition, FileRange, SourceRoot,\n     SourceRootId,"}, {"sha": "1a74286f5367b0b966fb081366635f428ddeb893", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a61178d2186b8d9ca324231ab03368819be0ff6e/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a61178d2186b8d9ca324231ab03368819be0ff6e/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=a61178d2186b8d9ca324231ab03368819be0ff6e", "patch": "@@ -10,7 +10,10 @@\n use std::{ffi::OsString, path::PathBuf};\n \n use flycheck::FlycheckConfig;\n-use ide::{AssistConfig, CompletionConfig, DiagnosticsConfig, HoverConfig, InlayHintsConfig};\n+use ide::{\n+    AssistConfig, CompletionConfig, DiagnosticsConfig, HoverConfig, InlayHintsConfig,\n+    MergeBehaviour,\n+};\n use lsp_types::ClientCapabilities;\n use project_model::{CargoConfig, ProjectJson, ProjectJsonData, ProjectManifest};\n use rustc_hash::FxHashSet;\n@@ -263,6 +266,12 @@ impl Config {\n         self.completion.add_call_parenthesis = data.completion_addCallParenthesis;\n         self.completion.add_call_argument_snippets = data.completion_addCallArgumentSnippets;\n \n+        self.assist.insert_use.merge = match data.assist_importMergeBehaviour {\n+            MergeBehaviourDef::None => None,\n+            MergeBehaviourDef::Full => Some(MergeBehaviour::Full),\n+            MergeBehaviourDef::Last => Some(MergeBehaviour::Last),\n+        };\n+\n         self.call_info_full = data.callInfo_full;\n \n         self.lens = LensConfig {\n@@ -370,6 +379,14 @@ enum ManifestOrProjectJson {\n     ProjectJson(ProjectJsonData),\n }\n \n+#[derive(Deserialize)]\n+#[serde(rename_all = \"lowercase\")]\n+enum MergeBehaviourDef {\n+    None,\n+    Full,\n+    Last,\n+}\n+\n macro_rules! config_data {\n     (struct $name:ident { $($field:ident: $ty:ty = $default:expr,)*}) => {\n         #[allow(non_snake_case)]\n@@ -393,6 +410,8 @@ macro_rules! config_data {\n \n config_data! {\n     struct ConfigData {\n+        assist_importMergeBehaviour: MergeBehaviourDef = MergeBehaviourDef::None,\n+\n         callInfo_full: bool = true,\n \n         cargo_autoreload: bool           = true,"}, {"sha": "86a70a89a7371152900c24d860de37e24155b53b", "filename": "editors/code/package.json", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a61178d2186b8d9ca324231ab03368819be0ff6e/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/a61178d2186b8d9ca324231ab03368819be0ff6e/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=a61178d2186b8d9ca324231ab03368819be0ff6e", "patch": "@@ -626,6 +626,21 @@\n                     },\n                     \"description\": \"List of warnings that should be displayed with hint severity.\\nThe warnings will be indicated by faded text or three dots in code and will not show up in the problems panel.\",\n                     \"default\": []\n+                },\n+                \"rust-analyzer.assist.importMergeBehaviour\": {\n+                    \"type\": \"string\",\n+                    \"enum\": [\n+                        \"none\",\n+                        \"full\",\n+                        \"last\"\n+                    ],\n+                    \"enumDescriptions\": [\n+                        \"No merging\",\n+                        \"Merge all layers of the import trees\",\n+                        \"Only merge the last layer of the import trees\"\n+                    ],\n+                    \"default\": \"full\",\n+                    \"description\": \"The strategy to use when inserting new imports or merging imports.\"\n                 }\n             }\n         },"}]}