{"sha": "bd27985457d4afc7c0a6218e8e1c30fdf359e48c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkMjc5ODU0NTdkNGFmYzdjMGE2MjE4ZThlMWMzMGZkZjM1OWU0OGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-27T07:46:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-27T07:46:15Z"}, "message": "Auto merge of #22853 - FlaPer87:snap, r=alexcrichton\n\nr? @alexcrichton\r\n \r\ncc @nikomatsakis @pnkfelix", "tree": {"sha": "48d11916edb31ce27696ca2c2cbf123a062d2c48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48d11916edb31ce27696ca2c2cbf123a062d2c48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd27985457d4afc7c0a6218e8e1c30fdf359e48c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd27985457d4afc7c0a6218e8e1c30fdf359e48c", "html_url": "https://github.com/rust-lang/rust/commit/bd27985457d4afc7c0a6218e8e1c30fdf359e48c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd27985457d4afc7c0a6218e8e1c30fdf359e48c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd077d5decbc3e462a9fe2feb1a0af0486897acb", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd077d5decbc3e462a9fe2feb1a0af0486897acb", "html_url": "https://github.com/rust-lang/rust/commit/dd077d5decbc3e462a9fe2feb1a0af0486897acb"}, {"sha": "9d0d72345df8e9b2b27899f70f0d7b7222524948", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d0d72345df8e9b2b27899f70f0d7b7222524948", "html_url": "https://github.com/rust-lang/rust/commit/9d0d72345df8e9b2b27899f70f0d7b7222524948"}], "stats": {"total": 70, "additions": 9, "deletions": 61}, "files": [{"sha": "117b829fdff9b5bf79ed6e4d686cfa45239b21b4", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bd27985457d4afc7c0a6218e8e1c30fdf359e48c/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd27985457d4afc7c0a6218e8e1c30fdf359e48c/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=bd27985457d4afc7c0a6218e8e1c30fdf359e48c", "patch": "@@ -110,10 +110,7 @@ pub trait Write {\n /// traits.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Formatter<'a> {\n-    #[cfg(not(stage0))]\n     flags: u32,\n-    #[cfg(stage0)]\n-    flags: usize,\n     fill: char,\n     align: rt::v1::Alignment,\n     width: Option<usize>,\n@@ -159,13 +156,6 @@ impl<'a> ArgumentV1<'a> {\n         }\n     }\n \n-    #[cfg(stage0)]\n-    #[doc(hidden)]\n-    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn from_uint(x: &uint) -> ArgumentV1 {\n-        ArgumentV1::new(x, ArgumentV1::show_usize)\n-    }\n-    #[cfg(not(stage0))]\n     #[doc(hidden)]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn from_usize(x: &usize) -> ArgumentV1 {\n@@ -605,14 +595,9 @@ impl<'a> Formatter<'a> {\n         write(self.buf, fmt)\n     }\n \n-    #[cfg(not(stage0))]\n     /// Flags for formatting (packed version of rt::Flag)\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn flags(&self) -> u32 { self.flags }\n-    #[cfg(stage0)]\n-    /// Flags for formatting (packed version of rt::Flag)\n-    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn flags(&self) -> usize { self.flags }\n \n     /// Character used as 'fill' whenever there is alignment\n     #[unstable(feature = \"core\", reason = \"method was just created\")]"}, {"sha": "7f6dea905dafd45ec351f20d8e1a21de91356e29", "filename": "src/libcore/fmt/rt/v1.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd27985457d4afc7c0a6218e8e1c30fdf359e48c/src%2Flibcore%2Ffmt%2Frt%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd27985457d4afc7c0a6218e8e1c30fdf359e48c/src%2Flibcore%2Ffmt%2Frt%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Frt%2Fv1.rs?ref=bd27985457d4afc7c0a6218e8e1c30fdf359e48c", "patch": "@@ -32,10 +32,6 @@ pub struct FormatSpec {\n     pub fill: char,\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub align: Alignment,\n-    #[cfg(stage0)]\n-    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub flags: usize,\n-    #[cfg(not(stage0))]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub flags: u32,\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "94ca9ec37b49b515523e2e6ed713e1df3c6074cb", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bd27985457d4afc7c0a6218e8e1c30fdf359e48c/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd27985457d4afc7c0a6218e8e1c30fdf359e48c/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=bd27985457d4afc7c0a6218e8e1c30fdf359e48c", "patch": "@@ -15,9 +15,6 @@ macro_rules! panic {\n         panic!(\"explicit panic\")\n     );\n     ($msg:expr) => ({\n-        #[cfg(stage0)]\n-        static _MSG_FILE_LINE: (&'static str, &'static str, usize) = ($msg, file!(), line!());\n-        #[cfg(not(stage0))]\n         static _MSG_FILE_LINE: (&'static str, &'static str, u32) = ($msg, file!(), line!());\n         ::core::panicking::panic(&_MSG_FILE_LINE)\n     });\n@@ -26,9 +23,6 @@ macro_rules! panic {\n         // used inside a dead function. Just `#[allow(dead_code)]` is\n         // insufficient, since the user may have\n         // `#[forbid(dead_code)]` and which cannot be overridden.\n-        #[cfg(stage0)]\n-        static _FILE_LINE: (&'static str, usize) = (file!(), line!());\n-        #[cfg(not(stage0))]\n         static _FILE_LINE: (&'static str, u32) = (file!(), line!());\n         ::core::panicking::panic_fmt(format_args!($fmt, $($arg)*), &_FILE_LINE)\n     });"}, {"sha": "c1c8ac9cc1fa789441485d917af8e5b558c59f2d", "filename": "src/libcore/panicking.rs", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/bd27985457d4afc7c0a6218e8e1c30fdf359e48c/src%2Flibcore%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd27985457d4afc7c0a6218e8e1c30fdf359e48c/src%2Flibcore%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpanicking.rs?ref=bd27985457d4afc7c0a6218e8e1c30fdf359e48c", "patch": "@@ -34,49 +34,20 @@ use fmt;\n \n #[cold] #[inline(never)] // this is the slow path, always\n #[lang=\"panic\"]\n-#[cfg(stage0)]\n-pub fn panic(expr_file_line: &(&'static str, &'static str, usize)) -> ! {\n-    let (expr, file, line) = *expr_file_line;\n-    panic_fmt(format_args!(\"{}\", expr), &(file, line))\n-}\n-#[cold] #[inline(never)] // this is the slow path, always\n-#[lang=\"panic\"]\n-#[cfg(not(stage0))]\n pub fn panic(expr_file_line: &(&'static str, &'static str, u32)) -> ! {\n     let (expr, file, line) = *expr_file_line;\n     panic_fmt(format_args!(\"{}\", expr), &(file, line))\n }\n \n #[cold] #[inline(never)]\n #[lang=\"panic_bounds_check\"]\n-#[cfg(stage0)]\n-fn panic_bounds_check(file_line: &(&'static str, usize),\n-                     index: usize, len: usize) -> ! {\n-    panic_fmt(format_args!(\"index out of bounds: the len is {} but the index is {}\",\n-                           len, index), file_line)\n-}\n-#[cold] #[inline(never)]\n-#[lang=\"panic_bounds_check\"]\n-#[cfg(not(stage0))]\n fn panic_bounds_check(file_line: &(&'static str, u32),\n                      index: usize, len: usize) -> ! {\n     panic_fmt(format_args!(\"index out of bounds: the len is {} but the index is {}\",\n                            len, index), file_line)\n }\n \n #[cold] #[inline(never)]\n-#[cfg(stage0)]\n-pub fn panic_fmt(fmt: fmt::Arguments, file_line: &(&'static str, usize)) -> ! {\n-    #[allow(improper_ctypes)]\n-    extern {\n-        #[lang = \"panic_fmt\"]\n-        fn panic_impl(fmt: fmt::Arguments, file: &'static str, line: uint) -> !;\n-    }\n-    let (file, line) = *file_line;\n-    unsafe { panic_impl(fmt, file, line as uint) }\n-}\n-#[cold] #[inline(never)]\n-#[cfg(not(stage0))]\n pub fn panic_fmt(fmt: fmt::Arguments, file_line: &(&'static str, u32)) -> ! {\n     #[allow(improper_ctypes)]\n     extern {"}, {"sha": "4a9a9bd40600b73d736244b022a68a46cab331fb", "filename": "src/liblog/macros.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bd27985457d4afc7c0a6218e8e1c30fdf359e48c/src%2Fliblog%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd27985457d4afc7c0a6218e8e1c30fdf359e48c/src%2Fliblog%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblog%2Fmacros.rs?ref=bd27985457d4afc7c0a6218e8e1c30fdf359e48c", "patch": "@@ -50,13 +50,6 @@\n #[macro_export]\n macro_rules! log {\n     ($lvl:expr, $($arg:tt)+) => ({\n-        #[cfg(stage0)]\n-        static LOC: ::log::LogLocation = ::log::LogLocation {\n-            line: line!() as u32,\n-            file: file!(),\n-            module_path: module_path!(),\n-        };\n-        #[cfg(not(stage0))]\n         static LOC: ::log::LogLocation = ::log::LogLocation {\n             line: line!(),\n             file: file!(),"}, {"sha": "318f66b946585d6cbd44f6760ab8e0e56f54d62b", "filename": "src/snapshots.txt", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bd27985457d4afc7c0a6218e8e1c30fdf359e48c/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/bd27985457d4afc7c0a6218e8e1c30fdf359e48c/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=bd27985457d4afc7c0a6218e8e1c30fdf359e48c", "patch": "@@ -1,3 +1,12 @@\n+S 2015-02-25 880fb89\n+  freebsd-x86_64 f4cbe4227739de986444211f8ee8d74745ab8f7f\n+  linux-i386 3278ebbce8cb269acc0614dac5ddac07eab6a99c\n+  linux-x86_64 72287d0d88de3e5a53bae78ac0d958e1a7637d73\n+  macos-i386 33b366b5287427a340a0aa6ed886d5ff4edf6a76\n+  macos-x86_64 914bf9baa32081a9d5633f1d06f4d382cd71504e\n+  winnt-i386 d58b415b9d8629cb6c4952f1f6611a526a38323f\n+  winnt-x86_64 2cb1dcc563d2ac6deada054de15748f5dd599c7e\n+\n S 2015-02-19 522d09d\n   freebsd-x86_64 7ea14ef85a25bca70a310a2cd660b356cf61abc7\n   linux-i386 26e3caa1ce1c482b9941a6bdc64b3e65d036c200"}]}