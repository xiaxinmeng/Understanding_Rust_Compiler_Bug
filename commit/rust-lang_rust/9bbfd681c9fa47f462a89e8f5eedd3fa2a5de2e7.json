{"sha": "9bbfd681c9fa47f462a89e8f5eedd3fa2a5de2e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliYmZkNjgxYzlmYTQ3ZjQ2MmE4OWU4ZjVlZWRkM2ZhMmE1ZGUyZTc=", "commit": {"author": {"name": "James Miller", "email": "james@aatch.net", "date": "2015-01-20T20:35:24Z"}, "committer": {"name": "James Miller", "email": "james@aatch.net", "date": "2015-01-20T20:35:24Z"}, "message": "Add assumptions that the pointer is non-null", "tree": {"sha": "b51262f21894bebd7d976bb54f3e6ea33010f5be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b51262f21894bebd7d976bb54f3e6ea33010f5be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9bbfd681c9fa47f462a89e8f5eedd3fa2a5de2e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9bbfd681c9fa47f462a89e8f5eedd3fa2a5de2e7", "html_url": "https://github.com/rust-lang/rust/commit/9bbfd681c9fa47f462a89e8f5eedd3fa2a5de2e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9bbfd681c9fa47f462a89e8f5eedd3fa2a5de2e7/comments", "author": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a729a404945de10f99e2530a5c28952996532b29", "url": "https://api.github.com/repos/rust-lang/rust/commits/a729a404945de10f99e2530a5c28952996532b29", "html_url": "https://github.com/rust-lang/rust/commit/a729a404945de10f99e2530a5c28952996532b29"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "837d709e882092b36d809cb13c338f714f832b35", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9bbfd681c9fa47f462a89e8f5eedd3fa2a5de2e7/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bbfd681c9fa47f462a89e8f5eedd3fa2a5de2e7/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=9bbfd681c9fa47f462a89e8f5eedd3fa2a5de2e7", "patch": "@@ -933,12 +933,26 @@ trait RcBoxPtr<T> {\n \n impl<T> RcBoxPtr<T> for Rc<T> {\n     #[inline(always)]\n-    fn inner(&self) -> &RcBox<T> { unsafe { &(**self._ptr) } }\n+    fn inner(&self) -> &RcBox<T> {\n+        unsafe {\n+            // Safe to assume this here, as if it weren't true, we'd be breaking\n+            // the contract anyway\n+            assume(!self._ptr.is_null());\n+            &(**self._ptr)\n+        }\n+    }\n }\n \n impl<T> RcBoxPtr<T> for Weak<T> {\n     #[inline(always)]\n-    fn inner(&self) -> &RcBox<T> { unsafe { &(**self._ptr) } }\n+    fn inner(&self) -> &RcBox<T> {\n+        unsafe {\n+            // Safe to assume this here, as if it weren't true, we'd be breaking\n+            // the contract anyway\n+            assume(!self._ptr.is_null());\n+            &(**self._ptr)\n+        }\n+    }\n }\n \n #[cfg(test)]"}]}