{"sha": "b714150487253d85f1a3cfa2e34818ed0647ac91", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3MTQxNTA0ODcyNTNkODVmMWEzY2ZhMmUzNDgxOGVkMDY0N2FjOTE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-01T00:05:50Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-01T19:14:32Z"}, "message": "Remove more functions from std::str. Issue #855", "tree": {"sha": "721dbd2c1ad1eefd1d51dd933a7d4c803a76c20e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/721dbd2c1ad1eefd1d51dd933a7d4c803a76c20e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b714150487253d85f1a3cfa2e34818ed0647ac91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b714150487253d85f1a3cfa2e34818ed0647ac91", "html_url": "https://github.com/rust-lang/rust/commit/b714150487253d85f1a3cfa2e34818ed0647ac91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b714150487253d85f1a3cfa2e34818ed0647ac91/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b22640a1f0faa109a255c268858d874587698d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b22640a1f0faa109a255c268858d874587698d5", "html_url": "https://github.com/rust-lang/rust/commit/6b22640a1f0faa109a255c268858d874587698d5"}], "stats": {"total": 60, "additions": 30, "deletions": 30}, "files": [{"sha": "47366e4a5cb6443a12c39925a882711cc0153c40", "filename": "src/lib/str.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b714150487253d85f1a3cfa2e34818ed0647ac91/src%2Flib%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b714150487253d85f1a3cfa2e34818ed0647ac91/src%2Flib%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fstr.rs?ref=b714150487253d85f1a3cfa2e34818ed0647ac91", "patch": "@@ -3,25 +3,25 @@ import rustrt::sbuf;\n import uint::le;\n export sbuf;\n // export rustrt;\n-export eq;\n-export lteq;\n+// export eq;\n+// export lteq;\n // export hash;\n // export is_utf8;\n // export is_ascii;\n export alloc;\n-export byte_len;\n+// export byte_len;\n export buf;\n // export bytes;\n // export unsafe_from_byte;\n // export str_from_cstr;\n // export str_from_buf;\n // export push_utf8_bytes;\n-export from_char;\n+// export from_char;\n // export from_chars;\n // export utf8_char_width;\n // export char_range_at;\n-export char_at;\n-export char_len;\n+// export char_at;\n+// export char_len;\n // export to_chars;\n // export push_char;\n // export pop_char;\n@@ -30,10 +30,10 @@ export char_len;\n // export refcount;\n // export index;\n // export rindex;\n-export find;\n+// export find;\n // export starts_with;\n // export ends_with;\n-export substr;\n+// export substr;\n // export slice;\n // export shift_byte;\n // export pop_byte;\n@@ -42,7 +42,7 @@ export substr;\n // export split;\n // export concat;\n // export connect;\n-export to_upper;\n+// export to_upper;\n // export safe_slice;\n export unsafe_from_bytes;\n // export is_empty;"}, {"sha": "a53c88aa829e8f42330a9cf12467fffb32871329", "filename": "src/test/run-pass/spawn-types.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b714150487253d85f1a3cfa2e34818ed0647ac91/src%2Ftest%2Frun-pass%2Fspawn-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b714150487253d85f1a3cfa2e34818ed0647ac91/src%2Ftest%2Frun-pass%2Fspawn-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn-types.rs?ref=b714150487253d85f1a3cfa2e34818ed0647ac91", "patch": "@@ -6,15 +6,15 @@\n \n use std;\n \n-import std::str;\n+import std::istr;\n import std::comm;\n import std::task;\n \n type ctx = comm::chan<int>;\n \n-fn iotask(cx: ctx, ip: str) { assert (str::eq(ip, \"localhost\")); }\n+fn iotask(cx: ctx, ip: -istr) { assert (istr::eq(ip, ~\"localhost\")); }\n \n fn main() {\n     let p = comm::port::<int>();\n-    task::spawn(bind iotask(comm::chan(p), \"localhost\"));\n+    task::spawn(bind iotask(comm::chan(p), ~\"localhost\"));\n }"}, {"sha": "565197e9fe38951f18ae2f8475348cc30e9a0949", "filename": "src/test/run-pass/str-append.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b714150487253d85f1a3cfa2e34818ed0647ac91/src%2Ftest%2Frun-pass%2Fstr-append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b714150487253d85f1a3cfa2e34818ed0647ac91/src%2Ftest%2Frun-pass%2Fstr-append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstr-append.rs?ref=b714150487253d85f1a3cfa2e34818ed0647ac91", "patch": "@@ -2,25 +2,25 @@\n \n // -*- rust -*-\n use std;\n-import std::str;\n+import std::istr;\n \n fn test1() {\n-    let s: str = \"hello\";\n-    s += \"world\";\n+    let s: istr = ~\"hello\";\n+    s += ~\"world\";\n     log s;\n     assert (s[9] == 'd' as u8);\n }\n \n fn test2() {\n     // This tests for issue #163\n \n-    let ff: str = \"abc\";\n-    let a: str = ff + \"ABC\" + ff;\n-    let b: str = \"ABC\" + ff + \"ABC\";\n+    let ff: istr = ~\"abc\";\n+    let a: istr = ff + ~\"ABC\" + ff;\n+    let b: istr = ~\"ABC\" + ff + ~\"ABC\";\n     log a;\n     log b;\n-    assert (str::eq(a, \"abcABCabc\"));\n-    assert (str::eq(b, \"ABCabcABC\"));\n+    assert (istr::eq(a, ~\"abcABCabc\"));\n+    assert (istr::eq(b, ~\"ABCabcABC\"));\n }\n \n fn main() { test1(); test2(); }"}, {"sha": "1710c8679102696abdda8f16daaa6ec8a8f8fb19", "filename": "src/test/run-pass/str-multiline.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b714150487253d85f1a3cfa2e34818ed0647ac91/src%2Ftest%2Frun-pass%2Fstr-multiline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b714150487253d85f1a3cfa2e34818ed0647ac91/src%2Ftest%2Frun-pass%2Fstr-multiline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstr-multiline.rs?ref=b714150487253d85f1a3cfa2e34818ed0647ac91", "patch": "@@ -2,16 +2,16 @@\n \n // -*- rust -*-\n use std;\n-import std::str;\n+import std::istr;\n \n fn main() {\n-    let a: str = \"this \\\n+    let a: istr = ~\"this \\\n is a test\";\n-    let b: str =\n-        \"this \\\n+    let b: istr =\n+        ~\"this \\\n                is \\\n                another \\\n                test\";\n-    assert (str::eq(a, \"this is a test\"));\n-    assert (str::eq(b, \"this is another test\"));\n+    assert (istr::eq(a, ~\"this is a test\"));\n+    assert (istr::eq(b, ~\"this is another test\"));\n }"}, {"sha": "e4cdcbd2e64bcc3c8b82356823424c5735058a22", "filename": "src/test/run-pass/string-self-append.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b714150487253d85f1a3cfa2e34818ed0647ac91/src%2Ftest%2Frun-pass%2Fstring-self-append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b714150487253d85f1a3cfa2e34818ed0647ac91/src%2Ftest%2Frun-pass%2Fstring-self-append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstring-self-append.rs?ref=b714150487253d85f1a3cfa2e34818ed0647ac91", "patch": "@@ -1,14 +1,14 @@\n use std;\n-import std::str;\n+import std::istr;\n \n fn main() {\n     // Make sure we properly handle repeated self-appends.\n-    let a: str = \"A\";\n+    let a: istr = ~\"A\";\n     let i = 20;\n     let expected_len = 1u;\n     while i > 0 {\n-        log_err str::byte_len(a);\n-        assert (str::byte_len(a) == expected_len);\n+        log_err istr::byte_len(a);\n+        assert (istr::byte_len(a) == expected_len);\n         a += a;\n         i -= 1;\n         expected_len *= 2u;"}]}