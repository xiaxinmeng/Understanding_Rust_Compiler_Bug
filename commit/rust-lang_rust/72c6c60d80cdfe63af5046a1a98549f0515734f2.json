{"sha": "72c6c60d80cdfe63af5046a1a98549f0515734f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyYzZjNjBkODBjZGZlNjNhZjUwNDZhMWE5ODU0OWYwNTE1NzM0ZjI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-25T02:21:40Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-25T02:21:40Z"}, "message": "Add intrinsic calling convention.", "tree": {"sha": "6e2691b393b095badc6ff4f309a9ca18263599e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e2691b393b095badc6ff4f309a9ca18263599e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72c6c60d80cdfe63af5046a1a98549f0515734f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72c6c60d80cdfe63af5046a1a98549f0515734f2", "html_url": "https://github.com/rust-lang/rust/commit/72c6c60d80cdfe63af5046a1a98549f0515734f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72c6c60d80cdfe63af5046a1a98549f0515734f2/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c483808e0ff9836bc1cda0ce95d77c8b7d3be91c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c483808e0ff9836bc1cda0ce95d77c8b7d3be91c", "html_url": "https://github.com/rust-lang/rust/commit/c483808e0ff9836bc1cda0ce95d77c8b7d3be91c"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "3d23a94569a08f1df17779a0f6d87553452bc4d5", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/72c6c60d80cdfe63af5046a1a98549f0515734f2/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/72c6c60d80cdfe63af5046a1a98549f0515734f2/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=72c6c60d80cdfe63af5046a1a98549f0515734f2", "patch": "@@ -4525,10 +4525,12 @@ let trans_visitor\n                              [| Asm.WORD (word_ty_mach, Asm.IMM 0L) |]))\n   in\n \n-  let trans_required_fn (fnid:node_id) (blockid:node_id) : unit =\n+  let trans_real_required_fn\n+      (fnid:node_id)\n+      (blockid:node_id) : unit =\n+    let (ilib, conv) = Hashtbl.find cx.ctxt_required_items fnid in\n     trans_frame_entry fnid;\n     emit (Il.Enter (Hashtbl.find cx.ctxt_block_fixups blockid));\n-    let (ilib, conv) = Hashtbl.find cx.ctxt_required_items fnid in\n     let lib_num =\n       htab_search_or_add cx.ctxt_required_lib_num ilib\n         (fun _ -> Hashtbl.length cx.ctxt_required_lib_num)\n@@ -4655,6 +4657,12 @@ let trans_visitor\n             \"Trans.required_rust_fn on unexpected form of require library\"\n   in\n \n+  let trans_required_fn (fnid:node_id) (blockid:node_id) : unit =\n+    if fn_is_intrinsic cx fnid\n+    then ()\n+    else trans_real_required_fn fnid blockid\n+  in\n+\n   let trans_tag\n       (n:Ast.ident)\n       (tagid:node_id)"}, {"sha": "7a6f9b8e85add6f967b5ce7d4a837a38f9ccd69b", "filename": "src/boot/me/transutil.ml", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/72c6c60d80cdfe63af5046a1a98549f0515734f2/src%2Fboot%2Fme%2Ftransutil.ml", "raw_url": "https://github.com/rust-lang/rust/raw/72c6c60d80cdfe63af5046a1a98549f0515734f2/src%2Fboot%2Fme%2Ftransutil.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftransutil.ml?ref=72c6c60d80cdfe63af5046a1a98549f0515734f2", "patch": "@@ -225,6 +225,28 @@ let iter_rec_slots\n     (Array.map snd entries) f curr_iso\n ;;\n \n+let intrinsic_name (cx:ctxt) (fnid:node_id) : string =\n+  match Hashtbl.find cx.ctxt_all_item_names fnid with\n+      Ast.NAME_base (Ast.BASE_ident id) -> id\n+    | Ast.NAME_base (Ast.BASE_app (id, _)) -> id\n+    | Ast.NAME_ext (_, Ast.COMP_ident id) -> id\n+    | Ast.NAME_ext (_, Ast.COMP_app (id, _)) -> id\n+    | _ -> err (Some fnid) \"unexpected name for intrinsic fn\"\n+;;\n+\n+let fn_is_intrinsic (cx:ctxt) (fnid:node_id) : bool =\n+  let (_, conv) = Hashtbl.find cx.ctxt_required_items fnid in\n+    conv = CONV_intrinsic\n+;;\n+\n+let lval_is_intrinsic (cx:ctxt) (lval:Ast.lval) : bool =\n+  let item = lval_item cx lval in\n+    match item.node.Ast.decl_item with\n+        Ast.MOD_ITEM_fn _\n+          when Hashtbl.mem cx.ctxt_required_items item.id ->\n+            fn_is_intrinsic cx item.id\n+      | _ -> false\n+;;\n \n \n "}, {"sha": "ad7848773985c2e815ab72e67575b08c1b761318", "filename": "src/boot/util/common.ml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72c6c60d80cdfe63af5046a1a98549f0515734f2/src%2Fboot%2Futil%2Fcommon.ml", "raw_url": "https://github.com/rust-lang/rust/raw/72c6c60d80cdfe63af5046a1a98549f0515734f2/src%2Fboot%2Futil%2Fcommon.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Futil%2Fcommon.ml?ref=72c6c60d80cdfe63af5046a1a98549f0515734f2", "patch": "@@ -105,6 +105,7 @@ type ty_param_idx = int\n type nabi_conv =\n     CONV_rust\n   | CONV_cdecl\n+  | CONV_intrinsic\n ;;\n \n type nabi = { nabi_indirect: bool;\n@@ -115,6 +116,7 @@ let string_to_conv (a:string) : nabi_conv option =\n   match a with\n       \"cdecl\" -> Some CONV_cdecl\n     | \"rust\" -> Some CONV_rust\n+    | \"intrinsic\" -> Some CONV_intrinsic\n     | _ -> None\n \n (* FIXME: remove this when native items go away. *)"}]}