{"sha": "8289bf2994cc0522616275594cd2bd1a8d10d4b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyODliZjI5OTRjYzA1MjI2MTYyNzU1OTRjZDJiZDFhOGQxMGQ0YjQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-21T18:32:52Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-21T18:32:52Z"}, "message": "use `pat_ty_adjusted` from `expr_use_visitor` to type of arguments", "tree": {"sha": "57dd67b9ff7cc23c239e575c0e31c4139fd302c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57dd67b9ff7cc23c239e575c0e31c4139fd302c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8289bf2994cc0522616275594cd2bd1a8d10d4b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8289bf2994cc0522616275594cd2bd1a8d10d4b4", "html_url": "https://github.com/rust-lang/rust/commit/8289bf2994cc0522616275594cd2bd1a8d10d4b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8289bf2994cc0522616275594cd2bd1a8d10d4b4/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81fedd58b40828744423340cb13a032b8ab43a88", "url": "https://api.github.com/repos/rust-lang/rust/commits/81fedd58b40828744423340cb13a032b8ab43a88", "html_url": "https://github.com/rust-lang/rust/commit/81fedd58b40828744423340cb13a032b8ab43a88"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "8ef45a966da85647992a661820e2af1c2aeb6a23", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8289bf2994cc0522616275594cd2bd1a8d10d4b4/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8289bf2994cc0522616275594cd2bd1a8d10d4b4/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=8289bf2994cc0522616275594cd2bd1a8d10d4b4", "patch": "@@ -313,7 +313,8 @@ impl<'a, 'gcx, 'tcx> ExprUseVisitor<'a, 'gcx, 'tcx> {\n         debug!(\"consume_body(body={:?})\", body);\n \n         for arg in &body.arguments {\n-            let arg_ty = return_if_err!(self.mc.node_ty(arg.pat.hir_id));\n+            let arg_ty = return_if_err!(self.mc.pat_ty_adjusted(&arg.pat));\n+            debug!(\"consume_body: arg_ty = {:?}\", arg_ty);\n \n             let fn_body_scope_r =\n                 self.tcx().mk_region(ty::ReScope(region::Scope::Node(body.value.hir_id.local_id)));"}, {"sha": "597872ef45de047aade45f0ca805cbe8b5104acc", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8289bf2994cc0522616275594cd2bd1a8d10d4b4/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8289bf2994cc0522616275594cd2bd1a8d10d4b4/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=8289bf2994cc0522616275594cd2bd1a8d10d4b4", "patch": "@@ -517,7 +517,7 @@ impl<'a, 'gcx, 'tcx> MemCategorizationContext<'a, 'gcx, 'tcx> {\n     ///   implicit deref patterns attached (e.g., it is really\n     ///   `&Some(x)`). In that case, we return the \"outermost\" type\n     ///   (e.g., `&Option<T>).\n-    fn pat_ty_adjusted(&self, pat: &hir::Pat) -> McResult<Ty<'tcx>> {\n+    pub fn pat_ty_adjusted(&self, pat: &hir::Pat) -> McResult<Ty<'tcx>> {\n         // Check for implicit `&` types wrapping the pattern; note\n         // that these are never attached to binding patterns, so\n         // actually this is somewhat \"disjoint\" from the code below"}, {"sha": "79454b635263c8618162dad4396894aa1cc7adbc", "filename": "src/test/ui/borrowck/issue-51415.nll.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8289bf2994cc0522616275594cd2bd1a8d10d4b4/src%2Ftest%2Fui%2Fborrowck%2Fissue-51415.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8289bf2994cc0522616275594cd2bd1a8d10d4b4/src%2Ftest%2Fui%2Fborrowck%2Fissue-51415.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-51415.nll.stderr?ref=8289bf2994cc0522616275594cd2bd1a8d10d4b4", "patch": "@@ -0,0 +1,9 @@\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/issue-51415.rs:16:47\n+   |\n+LL |     let opt = a.iter().enumerate().find(|(_, &s)| {\n+   |                                               ^ cannot move out of borrowed content\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0507`."}, {"sha": "9067a50a8476d17aa5cb6c59108f2257c780b639", "filename": "src/test/ui/borrowck/issue-51415.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8289bf2994cc0522616275594cd2bd1a8d10d4b4/src%2Ftest%2Fui%2Fborrowck%2Fissue-51415.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8289bf2994cc0522616275594cd2bd1a8d10d4b4/src%2Ftest%2Fui%2Fborrowck%2Fissue-51415.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-51415.rs?ref=8289bf2994cc0522616275594cd2bd1a8d10d4b4", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Regression test for #51415: match default bindings were failing to\n+// see the \"move out\" implied by `&s` below.\n+\n+fn main() {\n+    let a = vec![String::from(\"a\")];\n+    let opt = a.iter().enumerate().find(|(_, &s)| {\n+        //~^ ERROR cannot move out\n+        *s == String::from(\"d\")\n+    }).map(|(i, _)| i);\n+    println!(\"{:?}\", opt);\n+}"}, {"sha": "b4b0bc7594305af98f6ac62b395a473007a836d6", "filename": "src/test/ui/borrowck/issue-51415.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8289bf2994cc0522616275594cd2bd1a8d10d4b4/src%2Ftest%2Fui%2Fborrowck%2Fissue-51415.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8289bf2994cc0522616275594cd2bd1a8d10d4b4/src%2Ftest%2Fui%2Fborrowck%2Fissue-51415.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-51415.stderr?ref=8289bf2994cc0522616275594cd2bd1a8d10d4b4", "patch": "@@ -0,0 +1,12 @@\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/issue-51415.rs:16:46\n+   |\n+LL |     let opt = a.iter().enumerate().find(|(_, &s)| {\n+   |                                              ^-\n+   |                                              ||\n+   |                                              |hint: to prevent move, use `ref s` or `ref mut s`\n+   |                                              cannot move out of borrowed content\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0507`."}]}