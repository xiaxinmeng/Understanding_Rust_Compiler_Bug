{"sha": "8ec9b2a0acc5cde19236d777cb197d19f863bd8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlYzliMmEwYWNjNWNkZTE5MjM2ZDc3N2NiMTk3ZDE5Zjg2M2JkOGE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-03-15T15:22:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-15T15:22:56Z"}, "message": "Rollup merge of #83113 - osa1:refactor_try_index_step, r=jonas-schievink\n\nMinor refactoring in try_index_step\n\nMerges `if-let` and `if x.is_some() { ... }` blocks", "tree": {"sha": "28d51f8884a11ca5f1b1401890fdc9cb65008ad6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28d51f8884a11ca5f1b1401890fdc9cb65008ad6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ec9b2a0acc5cde19236d777cb197d19f863bd8a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgT3vQCRBK7hj4Ov3rIwAAdHIIAEF1Hh0vXgFdFHhQ2xDRuKZ0\njBA0r8yohCmfdeAhuyG4j0Q+7oCp1O4W1fUzuH37TsiYq616O0ALyoZZTnZHeKJw\nE9a3ugOr5zLgy3FdJNhlhi/L6UF27ZsnTsdwRSHQLF1EZJKlT5S6RJfiePWe63Xs\ngh8YdWuIoujjtsTXqyNN1Iz9+5b1qTQFLVyo+Y99Gc6o71TUb+lIN6B/zCBKkwAu\nOeb/odt2X4hNTJI2fj3WvxnTtTFKXcjk/wBXPlxv47AQoBa+WO3CI5Lr+nH3l972\nAuQsOxSPxDhXycdcHNMFizS69klnSqKUYZtT+CLtlbsCR2v7GTZgAAlt1gY4RBY=\n=aic5\n-----END PGP SIGNATURE-----\n", "payload": "tree 28d51f8884a11ca5f1b1401890fdc9cb65008ad6\nparent 194472c9e366ecf4aff77de50d8fdc26cf94c74c\nparent 14038c7df25d38b2f5b6790604374e1a33a01fe5\nauthor Dylan DPC <dylan.dpc@gmail.com> 1615821776 +0100\ncommitter GitHub <noreply@github.com> 1615821776 +0100\n\nRollup merge of #83113 - osa1:refactor_try_index_step, r=jonas-schievink\n\nMinor refactoring in try_index_step\n\nMerges `if-let` and `if x.is_some() { ... }` blocks\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ec9b2a0acc5cde19236d777cb197d19f863bd8a", "html_url": "https://github.com/rust-lang/rust/commit/8ec9b2a0acc5cde19236d777cb197d19f863bd8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ec9b2a0acc5cde19236d777cb197d19f863bd8a/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "194472c9e366ecf4aff77de50d8fdc26cf94c74c", "url": "https://api.github.com/repos/rust-lang/rust/commits/194472c9e366ecf4aff77de50d8fdc26cf94c74c", "html_url": "https://github.com/rust-lang/rust/commit/194472c9e366ecf4aff77de50d8fdc26cf94c74c"}, {"sha": "14038c7df25d38b2f5b6790604374e1a33a01fe5", "url": "https://api.github.com/repos/rust-lang/rust/commits/14038c7df25d38b2f5b6790604374e1a33a01fe5", "html_url": "https://github.com/rust-lang/rust/commit/14038c7df25d38b2f5b6790604374e1a33a01fe5"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "a2adbdddc40fe323c878a8b8e1b68d4b618cf944", "filename": "compiler/rustc_mir_build/src/build/expr/into.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8ec9b2a0acc5cde19236d777cb197d19f863bd8a/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ec9b2a0acc5cde19236d777cb197d19f863bd8a/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Finto.rs?ref=8ec9b2a0acc5cde19236d777cb197d19f863bd8a", "patch": "@@ -427,7 +427,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                 block.unit()\n             }\n             ExprKind::Index { .. } | ExprKind::Deref { .. } | ExprKind::Field { .. } => {\n-                debug_assert!(Category::of(&expr.kind) == Some(Category::Place));\n+                debug_assert_eq!(Category::of(&expr.kind), Some(Category::Place));\n \n                 // Create a \"fake\" temporary variable so that we check that the\n                 // value is Sized. Usually, this is caught in type checking, but\n@@ -436,8 +436,6 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                     this.local_decls.push(LocalDecl::new(expr.ty, expr.span));\n                 }\n \n-                debug_assert!(Category::of(&expr.kind) == Some(Category::Place));\n-\n                 let place = unpack!(block = this.as_place(block, expr));\n                 let rvalue = Rvalue::Use(this.consume_by_copy_or_move(place));\n                 this.cfg.push_assign(block, source_info, destination, rvalue);"}, {"sha": "5bd385107ca391be958e6b7d426a8fc0595957b7", "filename": "compiler/rustc_typeck/src/check/place_op.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8ec9b2a0acc5cde19236d777cb197d19f863bd8a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fplace_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ec9b2a0acc5cde19236d777cb197d19f863bd8a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fplace_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fplace_op.rs?ref=8ec9b2a0acc5cde19236d777cb197d19f863bd8a", "patch": "@@ -103,9 +103,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             let method =\n                 self.try_overloaded_place_op(expr.span, self_ty, &[input_ty], PlaceOp::Index);\n \n-            let result = method.map(|ok| {\n+            if let Some(result) = method {\n                 debug!(\"try_index_step: success, using overloaded indexing\");\n-                let method = self.register_infer_ok_obligations(ok);\n+                let method = self.register_infer_ok_obligations(result);\n \n                 let mut adjustments = self.adjust_steps(autoderef);\n                 if let ty::Ref(region, _, hir::Mutability::Not) = method.sig.inputs()[0].kind() {\n@@ -128,10 +128,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 self.apply_adjustments(base_expr, adjustments);\n \n                 self.write_method_call(expr.hir_id, method);\n-                (input_ty, self.make_overloaded_place_return_type(method).ty)\n-            });\n-            if result.is_some() {\n-                return result;\n+\n+                return Some((input_ty, self.make_overloaded_place_return_type(method).ty));\n             }\n         }\n "}]}