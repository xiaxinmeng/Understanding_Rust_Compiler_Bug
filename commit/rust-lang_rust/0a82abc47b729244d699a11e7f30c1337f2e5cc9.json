{"sha": "0a82abc47b729244d699a11e7f30c1337f2e5cc9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhODJhYmM0N2I3MjkyNDRkNjk5YTExZTdmMzBjMTMzN2YyZTVjYzk=", "commit": {"author": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-13T22:52:23Z"}, "committer": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-15T22:14:21Z"}, "message": "Test patterns in tuples", "tree": {"sha": "dbf181a78d4e7274904d14777c2ca1d7bfa77d76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbf181a78d4e7274904d14777c2ca1d7bfa77d76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a82abc47b729244d699a11e7f30c1337f2e5cc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a82abc47b729244d699a11e7f30c1337f2e5cc9", "html_url": "https://github.com/rust-lang/rust/commit/0a82abc47b729244d699a11e7f30c1337f2e5cc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a82abc47b729244d699a11e7f30c1337f2e5cc9/comments", "author": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cf4e14ac021647165071b883e0bbcc863909191", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cf4e14ac021647165071b883e0bbcc863909191", "html_url": "https://github.com/rust-lang/rust/commit/6cf4e14ac021647165071b883e0bbcc863909191"}], "stats": {"total": 320, "additions": 249, "deletions": 71}, "files": [{"sha": "67e8b4a0e952b9143c54604cedc0715b39c26586", "filename": "src/test/ui/suggestions/dont-suggest-ref.rs", "status": "modified", "additions": 36, "deletions": 6, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/0a82abc47b729244d699a11e7f30c1337f2e5cc9/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a82abc47b729244d699a11e7f30c1337f2e5cc9/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.rs?ref=0a82abc47b729244d699a11e7f30c1337f2e5cc9", "patch": "@@ -45,7 +45,7 @@ pub fn main() {\n     let vs = &vx;\n     let vsm = &mut vec![X(Y)];\n \n-    // --------\n+    // -------- move from Either/X place --------\n \n     let X(_t) = *s;\n     //~^ ERROR cannot move\n@@ -175,7 +175,7 @@ pub fn main() {\n         // FIXME: should suggest removing `ref mut` too\n     }\n \n-    // --------\n+    // -------- move from &Either/&X place --------\n \n     let &X(_t) = s;\n     //~^ ERROR cannot move\n@@ -263,7 +263,37 @@ pub fn main() {\n     //~| HELP consider removing the `&mut`\n     //~| SUGGESTION X(_t)\n \n-    // --------\n+    // -------- move from tuple of &Either/&X (no suggestions) --------\n+\n+    let (&X(_t),) = (&x.clone(),);\n+    //~^ ERROR cannot move\n+    if let (&Either::One(_t),) = (&e.clone(),) { }\n+    //~^ ERROR cannot move\n+    while let (&Either::One(_t),) = (&e.clone(),) { }\n+    //~^ ERROR cannot move\n+    match (&e.clone(),) {\n+        //~^ ERROR cannot move\n+        (&Either::One(_t),)\n+        | (&Either::Two(_t),) => (),\n+    }\n+    fn f3((&X(_t),): (&X,)) { }\n+    //~^ ERROR cannot move\n+\n+    let (&mut X(_t),) = (&mut xm.clone(),);\n+    //~^ ERROR cannot move\n+    if let (&mut Either::One(_t),) = (&mut em.clone(),) { }\n+    //~^ ERROR cannot move\n+    while let (&mut Either::One(_t),) = (&mut em.clone(),) { }\n+    //~^ ERROR cannot move\n+    match (&mut em.clone(),) {\n+        //~^ ERROR cannot move\n+        (&mut Either::One(_t),) => (),\n+        (&mut Either::Two(_t),) => (),\n+    }\n+    fn f4((&mut X(_t),): (&mut X,)) { }\n+    //~^ ERROR cannot move\n+\n+    // -------- move from &Either/&X value --------\n \n     let &X(_t) = &x;\n     //~^ ERROR cannot move\n@@ -342,7 +372,7 @@ pub fn main() {\n         Either::Two(_t) => (),\n     }\n \n-    // --------\n+    // -------- test for duplicate suggestions --------\n \n     let &(X(_t), X(_u)) = &(x.clone(), x.clone());\n     //~^ ERROR cannot move\n@@ -391,7 +421,7 @@ pub fn main() {\n         (Either::Two(_t), Either::One(_u)) => (),\n         _ => (),\n     }\n-    fn f3(&(X(_t), X(_u)): &(X, X)) { }\n+    fn f5(&(X(_t), X(_u)): &(X, X)) { }\n     //~^ ERROR cannot move\n     //~| HELP consider removing the `&`\n     //~| SUGGESTION (X(_t), X(_u))\n@@ -451,7 +481,7 @@ pub fn main() {\n         (Either::Two(_t), Either::One(_u)) => (),\n         _ => (),\n     }\n-    fn f4(&mut (X(_t), X(_u)): &mut (X, X)) { }\n+    fn f6(&mut (X(_t), X(_u)): &mut (X, X)) { }\n     //~^ ERROR cannot move\n     //~| HELP consider removing the `&mut`\n     //~| SUGGESTION (X(_t), X(_u))"}, {"sha": "00fe78d9164744493feb68b3ee31c425c8b5dc4e", "filename": "src/test/ui/suggestions/dont-suggest-ref.stderr", "status": "modified", "additions": 213, "deletions": 65, "changes": 278, "blob_url": "https://github.com/rust-lang/rust/blob/0a82abc47b729244d699a11e7f30c1337f2e5cc9/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0a82abc47b729244d699a11e7f30c1337f2e5cc9/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr?ref=0a82abc47b729244d699a11e7f30c1337f2e5cc9", "patch": "@@ -598,7 +598,125 @@ LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:268:18\n+  --> $DIR/dont-suggest-ref.rs:268:21\n+   |\n+LL |     let (&X(_t),) = (&x.clone(),);\n+   |             --      ^^^^^^^^^^^^^ cannot move out of borrowed content\n+   |             |\n+   |             data moved here\n+   |\n+note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:268:13\n+   |\n+LL |     let (&X(_t),) = (&x.clone(),);\n+   |             ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:270:34\n+   |\n+LL |     if let (&Either::One(_t),) = (&e.clone(),) { }\n+   |                          --      ^^^^^^^^^^^^^ cannot move out of borrowed content\n+   |                          |\n+   |                          data moved here\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:270:26\n+   |\n+LL |     if let (&Either::One(_t),) = (&e.clone(),) { }\n+   |                          ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:272:37\n+   |\n+LL |     while let (&Either::One(_t),) = (&e.clone(),) { }\n+   |                             --      ^^^^^^^^^^^^^ cannot move out of borrowed content\n+   |                             |\n+   |                             data moved here\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:272:29\n+   |\n+LL |     while let (&Either::One(_t),) = (&e.clone(),) { }\n+   |                             ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:274:11\n+   |\n+LL |     match (&e.clone(),) {\n+   |           ^^^^^^^^^^^^^ cannot move out of borrowed content\n+LL |         //~^ ERROR cannot move\n+LL |         (&Either::One(_t),)\n+   |                       -- data moved here\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:276:23\n+   |\n+LL |         (&Either::One(_t),)\n+   |                       ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:282:25\n+   |\n+LL |     let (&mut X(_t),) = (&mut xm.clone(),);\n+   |                 --      ^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+   |                 |\n+   |                 data moved here\n+   |\n+note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:282:17\n+   |\n+LL |     let (&mut X(_t),) = (&mut xm.clone(),);\n+   |                 ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:284:38\n+   |\n+LL |     if let (&mut Either::One(_t),) = (&mut em.clone(),) { }\n+   |                              --      ^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+   |                              |\n+   |                              data moved here\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:284:30\n+   |\n+LL |     if let (&mut Either::One(_t),) = (&mut em.clone(),) { }\n+   |                              ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:286:41\n+   |\n+LL |     while let (&mut Either::One(_t),) = (&mut em.clone(),) { }\n+   |                                 --      ^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+   |                                 |\n+   |                                 data moved here\n+   |\n+note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:286:33\n+   |\n+LL |     while let (&mut Either::One(_t),) = (&mut em.clone(),) { }\n+   |                                 ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:288:11\n+   |\n+LL |     match (&mut em.clone(),) {\n+   |           ^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+LL |         //~^ ERROR cannot move\n+LL |         (&mut Either::One(_t),) => (),\n+   |                           -- data moved here\n+LL |         (&mut Either::Two(_t),) => (),\n+   |                           -- ... and here\n+   |\n+note: move occurs because these variables have types that don't implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:290:27\n+   |\n+LL |         (&mut Either::One(_t),) => (),\n+   |                           ^^\n+LL |         (&mut Either::Two(_t),) => (),\n+   |                           ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:298:18\n    |\n LL |     let &X(_t) = &x;\n    |         ------   ^^ cannot move out of borrowed content\n@@ -607,13 +725,13 @@ LL |     let &X(_t) = &x;\n    |         help: consider removing the `&`: `X(_t)`\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:268:12\n+  --> $DIR/dont-suggest-ref.rs:298:12\n    |\n LL |     let &X(_t) = &x;\n    |            ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:272:31\n+  --> $DIR/dont-suggest-ref.rs:302:31\n    |\n LL |     if let &Either::One(_t) = &e { }\n    |            ----------------   ^^ cannot move out of borrowed content\n@@ -622,13 +740,13 @@ LL |     if let &Either::One(_t) = &e { }\n    |            help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:272:25\n+  --> $DIR/dont-suggest-ref.rs:302:25\n    |\n LL |     if let &Either::One(_t) = &e { }\n    |                         ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:276:34\n+  --> $DIR/dont-suggest-ref.rs:306:34\n    |\n LL |     while let &Either::One(_t) = &e { }\n    |               ----------------   ^^ cannot move out of borrowed content\n@@ -637,13 +755,13 @@ LL |     while let &Either::One(_t) = &e { }\n    |               help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:276:28\n+  --> $DIR/dont-suggest-ref.rs:306:28\n    |\n LL |     while let &Either::One(_t) = &e { }\n    |                            ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:280:11\n+  --> $DIR/dont-suggest-ref.rs:310:11\n    |\n LL |     match &e {\n    |           ^^ cannot move out of borrowed content\n@@ -655,13 +773,13 @@ LL |         &Either::One(_t)\n    |         help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:282:22\n+  --> $DIR/dont-suggest-ref.rs:312:22\n    |\n LL |         &Either::One(_t)\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:288:11\n+  --> $DIR/dont-suggest-ref.rs:318:11\n    |\n LL |     match &e {\n    |           ^^ cannot move out of borrowed content\n@@ -673,13 +791,13 @@ LL |         &Either::One(_t) => (),\n    |         help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:290:22\n+  --> $DIR/dont-suggest-ref.rs:320:22\n    |\n LL |         &Either::One(_t) => (),\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:295:11\n+  --> $DIR/dont-suggest-ref.rs:325:11\n    |\n LL |     match &e {\n    |           ^^ cannot move out of borrowed content\n@@ -691,13 +809,13 @@ LL |         &Either::One(_t) => (),\n    |         help: consider removing the `&`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:297:22\n+  --> $DIR/dont-suggest-ref.rs:327:22\n    |\n LL |         &Either::One(_t) => (),\n    |                      ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:303:22\n+  --> $DIR/dont-suggest-ref.rs:333:22\n    |\n LL |     let &mut X(_t) = &mut xm;\n    |         ----------   ^^^^^^^ cannot move out of borrowed content\n@@ -706,13 +824,13 @@ LL |     let &mut X(_t) = &mut xm;\n    |         help: consider removing the `&mut`: `X(_t)`\n    |\n note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:303:16\n+  --> $DIR/dont-suggest-ref.rs:333:16\n    |\n LL |     let &mut X(_t) = &mut xm;\n    |                ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:307:35\n+  --> $DIR/dont-suggest-ref.rs:337:35\n    |\n LL |     if let &mut Either::One(_t) = &mut em { }\n    |            --------------------   ^^^^^^^ cannot move out of borrowed content\n@@ -721,13 +839,13 @@ LL |     if let &mut Either::One(_t) = &mut em { }\n    |            help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:307:29\n+  --> $DIR/dont-suggest-ref.rs:337:29\n    |\n LL |     if let &mut Either::One(_t) = &mut em { }\n    |                             ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:311:38\n+  --> $DIR/dont-suggest-ref.rs:341:38\n    |\n LL |     while let &mut Either::One(_t) = &mut em { }\n    |               --------------------   ^^^^^^^ cannot move out of borrowed content\n@@ -736,13 +854,13 @@ LL |     while let &mut Either::One(_t) = &mut em { }\n    |               help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:311:32\n+  --> $DIR/dont-suggest-ref.rs:341:32\n    |\n LL |     while let &mut Either::One(_t) = &mut em { }\n    |                                ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:315:11\n+  --> $DIR/dont-suggest-ref.rs:345:11\n    |\n LL |     match &mut em {\n    |           ^^^^^^^ cannot move out of borrowed content\n@@ -754,13 +872,13 @@ LL |         &mut Either::One(_t)\n    |         help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:317:26\n+  --> $DIR/dont-suggest-ref.rs:347:26\n    |\n LL |         &mut Either::One(_t)\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:323:11\n+  --> $DIR/dont-suggest-ref.rs:353:11\n    |\n LL |     match &mut em {\n    |           ^^^^^^^ cannot move out of borrowed content\n@@ -772,13 +890,13 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:325:26\n+  --> $DIR/dont-suggest-ref.rs:355:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:330:11\n+  --> $DIR/dont-suggest-ref.rs:360:11\n    |\n LL |     match &mut em {\n    |           ^^^^^^^ cannot move out of borrowed content\n@@ -790,13 +908,13 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:332:26\n+  --> $DIR/dont-suggest-ref.rs:362:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:337:11\n+  --> $DIR/dont-suggest-ref.rs:367:11\n    |\n LL |     match &mut em {\n    |           ^^^^^^^ cannot move out of borrowed content\n@@ -808,13 +926,13 @@ LL |         &mut Either::One(_t) => (),\n    |         help: consider removing the `&mut`: `Either::One(_t)`\n    |\n note: move occurs because `_t` has type `X`, which does not implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:339:26\n+  --> $DIR/dont-suggest-ref.rs:369:26\n    |\n LL |         &mut Either::One(_t) => (),\n    |                          ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:347:27\n+  --> $DIR/dont-suggest-ref.rs:377:27\n    |\n LL |     let &(X(_t), X(_u)) = &(x.clone(), x.clone());\n    |         ---------------   ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -824,13 +942,13 @@ LL |     let &(X(_t), X(_u)) = &(x.clone(), x.clone());\n    |         help: consider removing the `&`: `(X(_t), X(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:347:13\n+  --> $DIR/dont-suggest-ref.rs:377:13\n    |\n LL |     let &(X(_t), X(_u)) = &(x.clone(), x.clone());\n    |             ^^     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:351:50\n+  --> $DIR/dont-suggest-ref.rs:381:50\n    |\n LL |     if let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n    |            -----------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -840,13 +958,13 @@ LL |     if let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) {\n    |            help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:351:26\n+  --> $DIR/dont-suggest-ref.rs:381:26\n    |\n LL |     if let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n    |                          ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:355:53\n+  --> $DIR/dont-suggest-ref.rs:385:53\n    |\n LL |     while let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n    |               -----------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -856,13 +974,13 @@ LL |     while let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone())\n    |               help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:355:29\n+  --> $DIR/dont-suggest-ref.rs:385:29\n    |\n LL |     while let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n    |                             ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:359:11\n+  --> $DIR/dont-suggest-ref.rs:389:11\n    |\n LL |     match &(e.clone(), e.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -876,7 +994,7 @@ LL |         &(Either::Two(_t), Either::One(_u)) => (),\n    |                       -- ... and here  -- ... and here\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:361:23\n+  --> $DIR/dont-suggest-ref.rs:391:23\n    |\n LL |         &(Either::One(_t), Either::Two(_u)) => (),\n    |                       ^^               ^^\n@@ -893,7 +1011,7 @@ LL |         (Either::Two(_t), Either::One(_u)) => (),\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:369:11\n+  --> $DIR/dont-suggest-ref.rs:399:11\n    |\n LL |     match &(e.clone(), e.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -906,13 +1024,13 @@ LL |         &(Either::One(_t), Either::Two(_u))\n    |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:371:23\n+  --> $DIR/dont-suggest-ref.rs:401:23\n    |\n LL |         &(Either::One(_t), Either::Two(_u))\n    |                       ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:378:11\n+  --> $DIR/dont-suggest-ref.rs:408:11\n    |\n LL |     match &(e.clone(), e.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -925,13 +1043,13 @@ LL |         &(Either::One(_t), Either::Two(_u)) => (),\n    |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:380:23\n+  --> $DIR/dont-suggest-ref.rs:410:23\n    |\n LL |         &(Either::One(_t), Either::Two(_u)) => (),\n    |                       ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:386:11\n+  --> $DIR/dont-suggest-ref.rs:416:11\n    |\n LL |     match &(e.clone(), e.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -944,13 +1062,13 @@ LL |         &(Either::One(_t), Either::Two(_u)) => (),\n    |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:388:23\n+  --> $DIR/dont-suggest-ref.rs:418:23\n    |\n LL |         &(Either::One(_t), Either::Two(_u)) => (),\n    |                       ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:399:31\n+  --> $DIR/dont-suggest-ref.rs:429:31\n    |\n LL |     let &mut (X(_t), X(_u)) = &mut (xm.clone(), xm.clone());\n    |         -------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -960,13 +1078,13 @@ LL |     let &mut (X(_t), X(_u)) = &mut (xm.clone(), xm.clone());\n    |         help: consider removing the `&mut`: `(X(_t), X(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:399:17\n+  --> $DIR/dont-suggest-ref.rs:429:17\n    |\n LL |     let &mut (X(_t), X(_u)) = &mut (xm.clone(), xm.clone());\n    |                 ^^     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:403:54\n+  --> $DIR/dont-suggest-ref.rs:433:54\n    |\n LL |     if let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n    |            ---------------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -976,13 +1094,13 @@ LL |     if let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.c\n    |            help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:403:30\n+  --> $DIR/dont-suggest-ref.rs:433:30\n    |\n LL |     if let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n    |                              ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:407:57\n+  --> $DIR/dont-suggest-ref.rs:437:57\n    |\n LL |     while let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n    |               ---------------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -992,13 +1110,13 @@ LL |     while let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), e\n    |               help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:407:33\n+  --> $DIR/dont-suggest-ref.rs:437:33\n    |\n LL |     while let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n    |                                 ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:411:11\n+  --> $DIR/dont-suggest-ref.rs:441:11\n    |\n LL |     match &mut (em.clone(), em.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -1012,7 +1130,7 @@ LL |         &mut (Either::Two(_t), Either::One(_u)) => (),\n    |                           -- ... and here  -- ... and here\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:413:27\n+  --> $DIR/dont-suggest-ref.rs:443:27\n    |\n LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |                           ^^               ^^\n@@ -1029,7 +1147,7 @@ LL |         (Either::Two(_t), Either::One(_u)) => (),\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:421:11\n+  --> $DIR/dont-suggest-ref.rs:451:11\n    |\n LL |     match &mut (em.clone(), em.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -1042,13 +1160,13 @@ LL |         &mut (Either::One(_t), Either::Two(_u))\n    |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:423:27\n+  --> $DIR/dont-suggest-ref.rs:453:27\n    |\n LL |         &mut (Either::One(_t), Either::Two(_u))\n    |                           ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:430:11\n+  --> $DIR/dont-suggest-ref.rs:460:11\n    |\n LL |     match &mut (em.clone(), em.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -1061,13 +1179,13 @@ LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:432:27\n+  --> $DIR/dont-suggest-ref.rs:462:27\n    |\n LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |                           ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:438:11\n+  --> $DIR/dont-suggest-ref.rs:468:11\n    |\n LL |     match &mut (em.clone(), em.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -1080,13 +1198,13 @@ LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:440:27\n+  --> $DIR/dont-suggest-ref.rs:470:27\n    |\n LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |                           ^^               ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:446:11\n+  --> $DIR/dont-suggest-ref.rs:476:11\n    |\n LL |     match &mut (em.clone(), em.clone()) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n@@ -1099,7 +1217,7 @@ LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:448:27\n+  --> $DIR/dont-suggest-ref.rs:478:27\n    |\n LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |                           ^^               ^^\n@@ -1137,9 +1255,39 @@ LL |     fn f2(&mut X(_t): &mut X) { }\n    |                  ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:394:11\n+  --> $DIR/dont-suggest-ref.rs:279:11\n+   |\n+LL |     fn f3((&X(_t),): (&X,)) { }\n+   |           ^^^^--^^^\n+   |           |   |\n+   |           |   data moved here\n+   |           cannot move out of borrowed content\n+   |\n+note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:279:15\n+   |\n+LL |     fn f3((&X(_t),): (&X,)) { }\n+   |               ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:293:11\n+   |\n+LL |     fn f4((&mut X(_t),): (&mut X,)) { }\n+   |           ^^^^^^^^--^^^\n+   |           |       |\n+   |           |       data moved here\n+   |           cannot move out of borrowed content\n+   |\n+note: move occurs because `_t` has type `Y`, which does not implement the `Copy` trait\n+  --> $DIR/dont-suggest-ref.rs:293:19\n+   |\n+LL |     fn f4((&mut X(_t),): (&mut X,)) { }\n+   |                   ^^\n+\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/dont-suggest-ref.rs:424:11\n    |\n-LL |     fn f3(&(X(_t), X(_u)): &(X, X)) { }\n+LL |     fn f5(&(X(_t), X(_u)): &(X, X)) { }\n    |           ^^^^--^^^^^--^^\n    |           |   |      |\n    |           |   |      ... and here\n@@ -1148,15 +1296,15 @@ LL |     fn f3(&(X(_t), X(_u)): &(X, X)) { }\n    |           help: consider removing the `&`: `(X(_t), X(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:394:15\n+  --> $DIR/dont-suggest-ref.rs:424:15\n    |\n-LL |     fn f3(&(X(_t), X(_u)): &(X, X)) { }\n+LL |     fn f5(&(X(_t), X(_u)): &(X, X)) { }\n    |               ^^     ^^\n \n error[E0507]: cannot move out of borrowed content\n-  --> $DIR/dont-suggest-ref.rs:454:11\n+  --> $DIR/dont-suggest-ref.rs:484:11\n    |\n-LL |     fn f4(&mut (X(_t), X(_u)): &mut (X, X)) { }\n+LL |     fn f6(&mut (X(_t), X(_u)): &mut (X, X)) { }\n    |           ^^^^^^^^--^^^^^--^^\n    |           |       |      |\n    |           |       |      ... and here\n@@ -1165,11 +1313,11 @@ LL |     fn f4(&mut (X(_t), X(_u)): &mut (X, X)) { }\n    |           help: consider removing the `&mut`: `(X(_t), X(_u))`\n    |\n note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/dont-suggest-ref.rs:454:19\n+  --> $DIR/dont-suggest-ref.rs:484:19\n    |\n-LL |     fn f4(&mut (X(_t), X(_u)): &mut (X, X)) { }\n+LL |     fn f6(&mut (X(_t), X(_u)): &mut (X, X)) { }\n    |                   ^^     ^^\n \n-error: aborting due to 67 previous errors\n+error: aborting due to 77 previous errors\n \n For more information about this error, try `rustc --explain E0507`."}]}