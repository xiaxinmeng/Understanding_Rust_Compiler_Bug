{"sha": "5c410385fc2780238864e3e090fc4cff37b5c3fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNDEwMzg1ZmMyNzgwMjM4ODY0ZTNlMDkwZmM0Y2ZmMzdiNWMzZmI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-29T13:05:14Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-29T13:05:14Z"}, "message": "optimization: cancel backlog in onEnter", "tree": {"sha": "1fd5fccfa797b2f185d0f1c8b061c4e5fba26020", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fd5fccfa797b2f185d0f1c8b061c4e5fba26020"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c410385fc2780238864e3e090fc4cff37b5c3fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c410385fc2780238864e3e090fc4cff37b5c3fb", "html_url": "https://github.com/rust-lang/rust/commit/5c410385fc2780238864e3e090fc4cff37b5c3fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c410385fc2780238864e3e090fc4cff37b5c3fb/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c9a1cb3dd941b3f2f608a0633f620478bce0c68", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c9a1cb3dd941b3f2f608a0633f620478bce0c68", "html_url": "https://github.com/rust-lang/rust/commit/2c9a1cb3dd941b3f2f608a0633f620478bce0c68"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "d29ba94e77998d47222eb211eb1971854c7cfb89", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5c410385fc2780238864e3e090fc4cff37b5c3fb/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c410385fc2780238864e3e090fc4cff37b5c3fb/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=5c410385fc2780238864e3e090fc4cff37b5c3fb", "patch": "@@ -1,7 +1,7 @@\n mod handlers;\n mod subscriptions;\n \n-use std::{fmt, path::PathBuf, sync::Arc, time::Instant};\n+use std::{fmt, path::PathBuf, sync::Arc, time::Instant, any::TypeId};\n \n use crossbeam_channel::{select, unbounded, Receiver, RecvError, Sender};\n use failure::{bail, format_err};\n@@ -447,14 +447,14 @@ struct PoolDispatcher<'a> {\n     req: Option<RawRequest>,\n     res: Option<u64>,\n     pool: &'a ThreadPool,\n-    world: &'a ServerWorldState,\n+    world: &'a mut ServerWorldState,\n     sender: &'a Sender<Task>,\n }\n \n impl<'a> PoolDispatcher<'a> {\n     fn on<R>(&mut self, f: fn(ServerWorld, R::Params) -> Result<R::Result>) -> Result<&mut Self>\n     where\n-        R: req::Request,\n+        R: req::Request + 'static,\n         R::Params: DeserializeOwned + Send + 'static,\n         R::Result: Serialize + 'static,\n     {\n@@ -464,6 +464,15 @@ impl<'a> PoolDispatcher<'a> {\n         };\n         match req.cast::<R>() {\n             Ok((id, params)) => {\n+                // Real time requests block user typing, so we should react quickly to them.\n+                // Currently this means that we try to cancel background jobs if we don't have\n+                // a spare thread.\n+                let is_real_time = TypeId::of::<R>() == TypeId::of::<req::JoinLines>()\n+                    || TypeId::of::<R>() == TypeId::of::<req::OnEnter>();\n+                if self.pool.queued_count() > 0 && is_real_time {\n+                    self.world.cancel_requests();\n+                }\n+\n                 let world = self.world.snapshot();\n                 let sender = self.sender.clone();\n                 self.pool.execute(move || {"}, {"sha": "7eb4d3e563f15e0d56ad86b68a15586f6ac41bd1", "filename": "crates/ra_lsp_server/src/server_world.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c410385fc2780238864e3e090fc4cff37b5c3fb/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c410385fc2780238864e3e090fc4cff37b5c3fb/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs?ref=5c410385fc2780238864e3e090fc4cff37b5c3fb", "patch": "@@ -149,6 +149,10 @@ impl ServerWorldState {\n         self.analysis_host.apply_change(change);\n     }\n \n+    pub fn cancel_requests(&mut self) {\n+        self.analysis_host.apply_change(AnalysisChange::new());\n+    }\n+\n     pub fn snapshot(&self) -> ServerWorld {\n         ServerWorld {\n             workspaces: Arc::clone(&self.workspaces),"}]}