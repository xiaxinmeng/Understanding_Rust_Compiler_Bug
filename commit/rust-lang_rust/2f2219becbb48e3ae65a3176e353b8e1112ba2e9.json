{"sha": "2f2219becbb48e3ae65a3176e353b8e1112ba2e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMjIxOWJlY2JiNDhlM2FlNjVhMzE3NmUzNTNiOGUxMTEyYmEyZTk=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-06-13T04:26:54Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-06-13T04:26:54Z"}, "message": "Simplify compiletest.", "tree": {"sha": "889bad51dd383f434ed93c4f440941ea017da910", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/889bad51dd383f434ed93c4f440941ea017da910"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f2219becbb48e3ae65a3176e353b8e1112ba2e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f2219becbb48e3ae65a3176e353b8e1112ba2e9", "html_url": "https://github.com/rust-lang/rust/commit/2f2219becbb48e3ae65a3176e353b8e1112ba2e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f2219becbb48e3ae65a3176e353b8e1112ba2e9/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82daebc5ce112553c6acb20ccf553fa3b16bb567", "url": "https://api.github.com/repos/rust-lang/rust/commits/82daebc5ce112553c6acb20ccf553fa3b16bb567", "html_url": "https://github.com/rust-lang/rust/commit/82daebc5ce112553c6acb20ccf553fa3b16bb567"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "76b5b5f6e9638efe8628730e5b1574d3704002a7", "filename": "tests/compiletest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f2219becbb48e3ae65a3176e353b8e1112ba2e9/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f2219becbb48e3ae65a3176e353b8e1112ba2e9/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=2f2219becbb48e3ae65a3176e353b8e1112ba2e9", "patch": "@@ -23,7 +23,7 @@ fn run_mode(mode: &'static str) {\n     for &target in targets {\n         let mut config = compiletest::default_config();\n         config.host_rustcflags = Some(sysroot_flag.clone());\n-        config.mode = mode.parse().ok().expect(\"Invalid mode\");\n+        config.mode = mode.parse().expect(\"Invalid mode\");\n         config.run_lib_path = format!(\"{}/lib/rustlib/{}/lib\", sysroot, target);\n         config.rustc_path = \"target/debug/miri\".into();\n         config.src_base = PathBuf::from(format!(\"tests/{}\", mode));"}]}