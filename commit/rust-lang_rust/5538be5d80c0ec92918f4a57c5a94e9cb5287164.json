{"sha": "5538be5d80c0ec92918f4a57c5a94e9cb5287164", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1MzhiZTVkODBjMGVjOTI5MThmNGE1N2M1YTk0ZTljYjUyODcxNjQ=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-08-30T21:32:57Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-08-31T20:55:15Z"}, "message": "x.py clippy: don't run with --all-targets by default\n\nthis caused a lot of noise because benchmarks and tests were also checked", "tree": {"sha": "2b8ad1dbc66a8054c7e2ac35a778e4aa79d4627e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b8ad1dbc66a8054c7e2ac35a778e4aa79d4627e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5538be5d80c0ec92918f4a57c5a94e9cb5287164", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5538be5d80c0ec92918f4a57c5a94e9cb5287164", "html_url": "https://github.com/rust-lang/rust/commit/5538be5d80c0ec92918f4a57c5a94e9cb5287164", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5538be5d80c0ec92918f4a57c5a94e9cb5287164/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a84708edca7c275cb99ad080317fbc7637516d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a84708edca7c275cb99ad080317fbc7637516d8", "html_url": "https://github.com/rust-lang/rust/commit/0a84708edca7c275cb99ad080317fbc7637516d8"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "f5fad4b4136849c8f023eda32bb9d71365f7e1b1", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5538be5d80c0ec92918f4a57c5a94e9cb5287164/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5538be5d80c0ec92918f4a57c5a94e9cb5287164/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=5538be5d80c0ec92918f4a57c5a94e9cb5287164", "patch": "@@ -107,6 +107,11 @@ impl Step for Std {\n             add_to_sysroot(&builder, &libdir, &hostdir, &libstd_stamp(builder, compiler, target));\n         }\n \n+        // don't run on std twice with x.py clippy\n+        if builder.kind == Kind::Clippy {\n+            return;\n+        }\n+\n         // Then run cargo again, once we've put the rmeta files for the library\n         // crates into the sysroot. This is needed because e.g., core's tests\n         // depend on `libtest` -- Cargo presumes it will exist, but it doesn't\n@@ -120,6 +125,7 @@ impl Step for Std {\n             target,\n             cargo_subcommand(builder.kind),\n         );\n+\n         cargo.arg(\"--all-targets\");\n         std_cargo(builder, target, compiler.stage, &mut cargo);\n \n@@ -192,7 +198,12 @@ impl Step for Rustc {\n             cargo_subcommand(builder.kind),\n         );\n         rustc_cargo(builder, &mut cargo, target);\n-        cargo.arg(\"--all-targets\");\n+\n+        // For ./x.py clippy, don't run with --all-targets because\n+        // linting tests and benchmarks can produce very noisy results\n+        if builder.kind != Kind::Clippy {\n+            cargo.arg(\"--all-targets\");\n+        }\n \n         // Explicitly pass -p for all compiler krates -- this will force cargo\n         // to also check the tests/benches/examples for these crates, rather\n@@ -313,7 +324,12 @@ macro_rules! tool_check_step {\n                     $source_type,\n                     &[],\n                 );\n-                cargo.arg(\"--all-targets\");\n+\n+                // For ./x.py clippy, don't run with --all-targets because\n+                // linting tests and benchmarks can produce very noisy results\n+                if builder.kind != Kind::Clippy {\n+                    cargo.arg(\"--all-targets\");\n+                }\n \n                 // Enable internal lints for clippy and rustdoc\n                 // NOTE: this doesn't enable lints for any other tools unless they explicitly add `#![warn(rustc::internal)]`"}]}