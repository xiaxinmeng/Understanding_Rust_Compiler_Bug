{"sha": "dc34ea092976ab9a87e68f1b255b4afbe31a9475", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMzRlYTA5Mjk3NmFiOWE4N2U2OGYxYjI1NWI0YWZiZTMxYTk0NzU=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2017-05-25T21:07:30Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2017-05-25T21:07:45Z"}, "message": "Fix merge conflicts.", "tree": {"sha": "cb0aa7938c2695e6b2cfef2fb7693261a3c28f9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb0aa7938c2695e6b2cfef2fb7693261a3c28f9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc34ea092976ab9a87e68f1b255b4afbe31a9475", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc34ea092976ab9a87e68f1b255b4afbe31a9475", "html_url": "https://github.com/rust-lang/rust/commit/dc34ea092976ab9a87e68f1b255b4afbe31a9475", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc34ea092976ab9a87e68f1b255b4afbe31a9475/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d940d543df812ef4b2b3378db2315365f7a62836", "url": "https://api.github.com/repos/rust-lang/rust/commits/d940d543df812ef4b2b3378db2315365f7a62836", "html_url": "https://github.com/rust-lang/rust/commit/d940d543df812ef4b2b3378db2315365f7a62836"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5ea3eaa88d7726b6acea1174e48e53e77cb800d2", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc34ea092976ab9a87e68f1b255b4afbe31a9475/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc34ea092976ab9a87e68f1b255b4afbe31a9475/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=dc34ea092976ab9a87e68f1b255b4afbe31a9475", "patch": "@@ -447,7 +447,7 @@ fn build_module(cx: &DocContext, did: DefId) -> clean::Module {\n             let def_id = item.def.def_id();\n             if cx.tcx.sess.cstore.visibility(def_id) == ty::Visibility::Public {\n                 if !visited.insert(def_id) { continue }\n-                if let Some(i) = try_inline(cx, item.def, item.name) {\n+                if let Some(i) = try_inline(cx, item.def, item.ident.name) {\n                     items.extend(i)\n                 }\n             }"}]}