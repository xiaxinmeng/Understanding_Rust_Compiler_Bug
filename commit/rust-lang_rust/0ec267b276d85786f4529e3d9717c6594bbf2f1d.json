{"sha": "0ec267b276d85786f4529e3d9717c6594bbf2f1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlYzI2N2IyNzZkODU3ODZmNDUyOWUzZDk3MTdjNjU5NGJiZjJmMWQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-27T01:12:07Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-27T02:12:32Z"}, "message": "std: Demode more of list and treemap", "tree": {"sha": "054628d25357f6774bba2f836a67176289514054", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/054628d25357f6774bba2f836a67176289514054"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ec267b276d85786f4529e3d9717c6594bbf2f1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ec267b276d85786f4529e3d9717c6594bbf2f1d", "html_url": "https://github.com/rust-lang/rust/commit/0ec267b276d85786f4529e3d9717c6594bbf2f1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ec267b276d85786f4529e3d9717c6594bbf2f1d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5424f21d5dd054e57113ca7814b813ba2d09fa15", "url": "https://api.github.com/repos/rust-lang/rust/commits/5424f21d5dd054e57113ca7814b813ba2d09fa15", "html_url": "https://github.com/rust-lang/rust/commit/5424f21d5dd054e57113ca7814b813ba2d09fa15"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "fbe9a2ddae6513ffd91f3fb7ab7cab5a76009b17", "filename": "src/libstd/arena.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ec267b276d85786f4529e3d9717c6594bbf2f1d/src%2Flibstd%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ec267b276d85786f4529e3d9717c6594bbf2f1d/src%2Flibstd%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Farena.rs?ref=0ec267b276d85786f4529e3d9717c6594bbf2f1d", "patch": "@@ -63,7 +63,7 @@ struct Arena {\n         unsafe {\n             destroy_chunk(&self.head);\n             for list::each(self.chunks) |chunk| {\n-                if !chunk.is_pod { destroy_chunk(&chunk); }\n+                if !chunk.is_pod { destroy_chunk(chunk); }\n             }\n         }\n     }"}, {"sha": "d8f7edada6a20b1a7858ca8f379385676734e571", "filename": "src/libstd/list.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0ec267b276d85786f4529e3d9717c6594bbf2f1d/src%2Flibstd%2Flist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ec267b276d85786f4529e3d9717c6594bbf2f1d/src%2Flibstd%2Flist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flist.rs?ref=0ec267b276d85786f4529e3d9717c6594bbf2f1d", "patch": "@@ -59,7 +59,7 @@ fn find<T: Copy>(ls: @List<T>, f: fn((&T)) -> bool) -> Option<T> {\n /// Returns true if a list contains an element with the given value\n fn has<T: Copy Eq>(ls: @List<T>, +elt: T) -> bool {\n     for each(ls) |e| {\n-        if e == elt { return true; }\n+        if *e == elt { return true; }\n     }\n     return false;\n }\n@@ -135,11 +135,11 @@ fn iter<T>(l: @List<T>, f: fn((&T))) {\n }\n \n /// Iterate over a list\n-fn each<T>(l: @List<T>, f: fn(T) -> bool) {\n+fn each<T>(l: @List<T>, f: fn((&T)) -> bool) {\n     let mut cur = l;\n     loop {\n         cur = match *cur {\n-          Cons(hd, tl) => {\n+          Cons(ref hd, tl) => {\n             if !f(hd) { return; }\n             tl\n           }"}, {"sha": "7fe8b145ed7a4b095200cde959b3106ee3be8672", "filename": "src/libstd/treemap.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0ec267b276d85786f4529e3d9717c6594bbf2f1d/src%2Flibstd%2Ftreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ec267b276d85786f4529e3d9717c6594bbf2f1d/src%2Flibstd%2Ftreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftreemap.rs?ref=0ec267b276d85786f4529e3d9717c6594bbf2f1d", "patch": "@@ -73,13 +73,13 @@ fn find<K: Copy Eq Ord, V: Copy>(m: &const TreeEdge<K, V>, +k: K)\n }\n \n /// Visit all pairs in the map in order.\n-fn traverse<K, V: Copy>(m: &const TreeEdge<K, V>, f: fn(K, V)) {\n+fn traverse<K, V: Copy>(m: &const TreeEdge<K, V>, f: fn((&K), (&V))) {\n     match copy *m {\n       None => (),\n       Some(node) => {\n         traverse(&const node.left, f);\n         // copy of value is req'd as f() requires an immutable ptr\n-        f(node.key, copy node.value);\n+        f(&node.key, &copy node.value);\n         traverse(&const node.right, f);\n       }\n     }\n@@ -130,7 +130,7 @@ mod tests {\n         fn t(n: @mut int, +k: int, +_v: ()) {\n             assert (*n == k); *n += 1;\n         }\n-        traverse(m, |x,y| t(n, x, y));\n+        traverse(m, |x,y| t(n, *x, *y));\n     }\n \n     #[test]"}, {"sha": "c642f12cf62dfbb3b9ae662a51f145132a590d8b", "filename": "src/rustc/middle/typeck/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ec267b276d85786f4529e3d9717c6594bbf2f1d/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ec267b276d85786f4529e3d9717c6594bbf2f1d/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs?ref=0ec267b276d85786f4529e3d9717c6594bbf2f1d", "patch": "@@ -181,7 +181,7 @@ impl isr_alist: get_and_find_region {\n \n     fn find(br: ty::bound_region) -> Option<ty::region> {\n         for list::each(self) |isr| {\n-            let (isr_br, isr_r) = isr;\n+            let (isr_br, isr_r) = *isr;\n             if isr_br == br { return Some(isr_r); }\n         }\n         return None;"}]}