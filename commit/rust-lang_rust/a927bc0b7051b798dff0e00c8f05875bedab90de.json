{"sha": "a927bc0b7051b798dff0e00c8f05875bedab90de", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MjdiYzBiNzA1MWI3OThkZmYwZTAwYzhmMDU4NzViZWRhYjkwZGU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-10-22T09:23:54Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-10-22T09:23:54Z"}, "message": "Merge pull request #405 from sanxiyn/needless-update\n\nNew lint for struct update that has no effect", "tree": {"sha": "399194d5287b7560c63532bac521d9e4df95d490", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/399194d5287b7560c63532bac521d9e4df95d490"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a927bc0b7051b798dff0e00c8f05875bedab90de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a927bc0b7051b798dff0e00c8f05875bedab90de", "html_url": "https://github.com/rust-lang/rust/commit/a927bc0b7051b798dff0e00c8f05875bedab90de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a927bc0b7051b798dff0e00c8f05875bedab90de/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1555a9f8afd786d1a71c24b8b981584655a64161", "url": "https://api.github.com/repos/rust-lang/rust/commits/1555a9f8afd786d1a71c24b8b981584655a64161", "html_url": "https://github.com/rust-lang/rust/commit/1555a9f8afd786d1a71c24b8b981584655a64161"}, {"sha": "d843257643637facfa7308c2c85e677442298738", "url": "https://api.github.com/repos/rust-lang/rust/commits/d843257643637facfa7308c2c85e677442298738", "html_url": "https://github.com/rust-lang/rust/commit/d843257643637facfa7308c2c85e677442298738"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "3e56e86328751c8297cfe4677204b4c2601e70b3", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a927bc0b7051b798dff0e00c8f05875bedab90de/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/a927bc0b7051b798dff0e00c8f05875bedab90de/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=a927bc0b7051b798dff0e00c8f05875bedab90de", "patch": "@@ -6,7 +6,7 @@ A collection of lints to catch common mistakes and improve your Rust code.\n [Jump to usage instructions](#usage)\n \n ##Lints\n-There are 67 lints included in this crate:\n+There are 68 lints included in this crate:\n \n name                                                                                                   | default | meaning\n -------------------------------------------------------------------------------------------------------|---------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n@@ -45,6 +45,7 @@ name\n [needless_lifetimes](https://github.com/Manishearth/rust-clippy/wiki#needless_lifetimes)               | warn    | using explicit lifetimes for references in function arguments when elision rules would allow omitting them\n [needless_range_loop](https://github.com/Manishearth/rust-clippy/wiki#needless_range_loop)             | warn    | for-looping over a range of indices where an iterator over items would do\n [needless_return](https://github.com/Manishearth/rust-clippy/wiki#needless_return)                     | warn    | using a return statement like `return expr;` where an expression would suffice\n+[needless_update](https://github.com/Manishearth/rust-clippy/wiki#needless_update)                     | warn    | using `{ ..base }` when there are no missing fields\n [non_ascii_literal](https://github.com/Manishearth/rust-clippy/wiki#non_ascii_literal)                 | allow   | using any literal non-ASCII chars in a string literal; suggests using the \\\\u escape instead\n [nonsensical_open_options](https://github.com/Manishearth/rust-clippy/wiki#nonsensical_open_options)   | warn    | nonsensical combination of options for opening a file\n [option_unwrap_used](https://github.com/Manishearth/rust-clippy/wiki#option_unwrap_used)               | allow   | using `Option.unwrap()`, which should at least get a better message using `expect()`"}, {"sha": "d5d27e5e2afa0b055aaae98317ce84649bd662c6", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a927bc0b7051b798dff0e00c8f05875bedab90de/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a927bc0b7051b798dff0e00c8f05875bedab90de/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=a927bc0b7051b798dff0e00c8f05875bedab90de", "patch": "@@ -51,6 +51,7 @@ pub mod mutex_atomic;\n pub mod zero_div_zero;\n pub mod open_options;\n pub mod needless_features;\n+pub mod needless_update;\n \n mod reexport {\n     pub use syntax::ast::{Name, Ident, NodeId};\n@@ -96,6 +97,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n     reg.register_late_lint_pass(box zero_div_zero::ZeroDivZeroPass);\n     reg.register_late_lint_pass(box mutex_atomic::MutexAtomic);\n     reg.register_late_lint_pass(box needless_features::NeedlessFeaturesPass);\n+    reg.register_late_lint_pass(box needless_update::NeedlessUpdatePass);\n \n     reg.register_lint_group(\"clippy_pedantic\", vec![\n         methods::OPTION_UNWRAP_USED,\n@@ -155,6 +157,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n         needless_bool::NEEDLESS_BOOL,\n         needless_features::UNSTABLE_AS_MUT_SLICE,\n         needless_features::UNSTABLE_AS_SLICE,\n+        needless_update::NEEDLESS_UPDATE,\n         open_options::NONSENSICAL_OPEN_OPTIONS,\n         precedence::PRECEDENCE,\n         ptr_arg::PTR_ARG,"}, {"sha": "c65d0c9e7d3a12d9fb0e304c399b336357ea9e40", "filename": "src/needless_update.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/a927bc0b7051b798dff0e00c8f05875bedab90de/src%2Fneedless_update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a927bc0b7051b798dff0e00c8f05875bedab90de/src%2Fneedless_update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fneedless_update.rs?ref=a927bc0b7051b798dff0e00c8f05875bedab90de", "patch": "@@ -0,0 +1,35 @@\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::middle::ty::TyStruct;\n+use rustc_front::hir::{Expr, ExprStruct};\n+\n+use utils::span_lint;\n+\n+declare_lint! {\n+    pub NEEDLESS_UPDATE,\n+    Warn,\n+    \"using `{ ..base }` when there are no missing fields\"\n+}\n+\n+#[derive(Copy, Clone)]\n+pub struct NeedlessUpdatePass;\n+\n+impl LintPass for NeedlessUpdatePass {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(NEEDLESS_UPDATE)\n+    }\n+}\n+\n+impl LateLintPass for NeedlessUpdatePass {\n+    fn check_expr(&mut self, cx: &LateContext, expr: &Expr) {\n+        if let ExprStruct(_, ref fields, Some(ref base)) = expr.node {\n+            let ty = cx.tcx.expr_ty(expr);\n+            if let TyStruct(def, _) = ty.sty {\n+                if fields.len() == def.struct_variant().fields.len() {\n+                    span_lint(cx, NEEDLESS_UPDATE, base.span,\n+                              \"struct update has no effect, all the fields \\\n+                              in the struct have already been specified\");\n+                }\n+            }\n+        }\n+    }\n+}"}, {"sha": "55438d9d90aa5f205fe86afc8435a2aca2fdd285", "filename": "tests/compile-fail/needless_update.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a927bc0b7051b798dff0e00c8f05875bedab90de/tests%2Fcompile-fail%2Fneedless_update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a927bc0b7051b798dff0e00c8f05875bedab90de/tests%2Fcompile-fail%2Fneedless_update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fneedless_update.rs?ref=a927bc0b7051b798dff0e00c8f05875bedab90de", "patch": "@@ -0,0 +1,16 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+\n+#![deny(needless_update)]\n+\n+struct S {\n+    pub a: i32,\n+    pub b: i32,\n+}\n+\n+fn main() {\n+    let base = S { a: 0, b: 0 };\n+    S { ..base }; // no error\n+    S { a: 1, ..base }; // no error\n+    S { a: 1, b: 1, ..base }; //~ERROR struct update has no effect\n+}"}]}