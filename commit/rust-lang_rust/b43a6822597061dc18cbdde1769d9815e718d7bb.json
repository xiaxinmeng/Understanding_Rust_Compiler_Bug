{"sha": "b43a6822597061dc18cbdde1769d9815e718d7bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0M2E2ODIyNTk3MDYxZGMxOGNiZGRlMTc2OWQ5ODE1ZTcxOGQ3YmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-03T15:14:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-03T15:14:09Z"}, "message": "Auto merge of #65759 - tmiasko:ui, r=petrochenkov\n\nValidate error patterns and error annotation in ui tests when present\n\nPreviously, when compilation succeeded, neither error patterns nor error\nannotation would be validated. Additionally, when compilation failed,\nonly error patterns would be validated if both error patterns and error\nannotation were present.\n\nNow both error patterns and error annotation are validated when present,\nregardless of compilation status. Furthermore, for test that should run,\nthe error patterns are matched against executable output, which is what\nsome of tests already expect to happen, and when #65506 is merged even\nmore ui tests will.\n\nFixes #56277", "tree": {"sha": "1adb3fbb50de2a2d756d96d99577acafca17ff58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1adb3fbb50de2a2d756d96d99577acafca17ff58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b43a6822597061dc18cbdde1769d9815e718d7bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b43a6822597061dc18cbdde1769d9815e718d7bb", "html_url": "https://github.com/rust-lang/rust/commit/b43a6822597061dc18cbdde1769d9815e718d7bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b43a6822597061dc18cbdde1769d9815e718d7bb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b072926712c5856016c0d1ad0411a4767b4a9bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b072926712c5856016c0d1ad0411a4767b4a9bf", "html_url": "https://github.com/rust-lang/rust/commit/8b072926712c5856016c0d1ad0411a4767b4a9bf"}, {"sha": "cfa2a2632ad5efc1cc099d661672042be8776500", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfa2a2632ad5efc1cc099d661672042be8776500", "html_url": "https://github.com/rust-lang/rust/commit/cfa2a2632ad5efc1cc099d661672042be8776500"}], "stats": {"total": 551, "additions": 283, "deletions": 268}, "files": [{"sha": "7b74be7a95482f80d6fcac00d7162d87c0c581ef", "filename": "src/test/ui-fulldeps/lint-group-plugin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui-fulldeps%2Flint-group-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui-fulldeps%2Flint-group-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-group-plugin.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -3,7 +3,7 @@\n // ignore-stage1\n \n #![feature(plugin)]\n-#![plugin(lint_group_plugin_test)]\n+#![plugin(lint_group_plugin_test)] //~ WARNING use of deprecated attribute\n #![allow(dead_code)]\n \n fn lintme() { } //~ WARNING item is named 'lintme'"}, {"sha": "66057eea6bcf7bd11b6ee5d1af8605165fa95583", "filename": "src/test/ui-fulldeps/lint-plugin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui-fulldeps%2Flint-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui-fulldeps%2Flint-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -2,7 +2,7 @@\n // aux-build:lint-plugin-test.rs\n // ignore-stage1\n #![feature(plugin)]\n-#![plugin(lint_plugin_test)]\n+#![plugin(lint_plugin_test)] //~ WARNING use of deprecated attribute\n #![allow(dead_code)]\n \n fn lintme() { } //~ WARNING item is named 'lintme'"}, {"sha": "cd635c6a722023ff75256a071b7ac5ba703a0919", "filename": "src/test/ui/conditional-compilation/cfg-attr-multi-true.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-true.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -17,5 +17,5 @@ impl MustUseDeprecated { //~ warning: use of deprecated item\n \n fn main() {\n     MustUseDeprecated::new(); //~ warning: use of deprecated item\n-    //| warning: unused `MustUseDeprecated` that must be used\n+    //~| warning: unused `MustUseDeprecated` that must be used\n }"}, {"sha": "0fbd0bbcbaebd4972f84b5bc640b5613cd558675", "filename": "src/test/ui/const-generics/cannot-infer-type-for-const-param.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fcannot-infer-type-for-const-param.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -8,6 +8,5 @@\n struct Foo<const NUM_BYTES: usize>(pub [u8; NUM_BYTES]);\n \n fn main() {\n-    let _ = Foo::<3>([1, 2, 3]); //~ ERROR type annotations needed\n-    //~^ ERROR mismatched types\n+    let _ = Foo::<3>([1, 2, 3]);\n }"}, {"sha": "4e5e4d045c8f226c9e661621613828735072f9c9", "filename": "src/test/ui/const-generics/issues/issue-62187-encountered-polymorphic-const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62187-encountered-polymorphic-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62187-encountered-polymorphic-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62187-encountered-polymorphic-const.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -12,5 +12,5 @@ impl<const L: usize> BitLen for [u8; L] {\n }\n \n fn main() {\n-    let foo = <[u8; 2]>::BIT_LEN;\n+    let foo = <[u8; 2]>::BIT_LEN; //~ WARN unused variable\n }"}, {"sha": "c3eea2e7b8ad6629d04fb8e56aadacc548cfbb80", "filename": "src/test/ui/continue-after-missing-main.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fcontinue-after-missing-main.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fcontinue-after-missing-main.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcontinue-after-missing-main.nll.stderr?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -3,8 +3,8 @@ error[E0601]: `main` function not found in crate `continue_after_missing_main`\n    |\n LL | / #![allow(dead_code)]\n LL | |\n-LL | | // error-pattern:`main` function not found in crate\n-LL | |\n+LL | | struct Tableau<'a, MP> {\n+LL | |     provider: &'a MP,\n ...  |\n LL | |\n LL | | }"}, {"sha": "55796408e9d79ab1278398049bfe9fde0bb23fa2", "filename": "src/test/ui/continue-after-missing-main.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fcontinue-after-missing-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fcontinue-after-missing-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcontinue-after-missing-main.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -1,6 +1,4 @@\n-#![allow(dead_code)]\n-\n-// error-pattern:`main` function not found in crate\n+#![allow(dead_code)] //~ ERROR `main` function not found in crate\n \n struct Tableau<'a, MP> {\n     provider: &'a MP,"}, {"sha": "64d34cb6a19475eac1de3a6cf1a356ddb3c72201", "filename": "src/test/ui/continue-after-missing-main.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fcontinue-after-missing-main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fcontinue-after-missing-main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcontinue-after-missing-main.stderr?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -3,15 +3,15 @@ error[E0601]: `main` function not found in crate `continue_after_missing_main`\n    |\n LL | / #![allow(dead_code)]\n LL | |\n-LL | | // error-pattern:`main` function not found in crate\n-LL | |\n+LL | | struct Tableau<'a, MP> {\n+LL | |     provider: &'a MP,\n ...  |\n LL | |\n LL | | }\n    | |_^ consider adding a `main` function to `$DIR/continue-after-missing-main.rs`\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/continue-after-missing-main.rs:30:56\n+  --> $DIR/continue-after-missing-main.rs:28:56\n    |\n LL |     tableau: Tableau<'data_provider, AdaptedMatrixProvider<'original_data, MP>>,\n    |              ------------------------------------------------------------------ these two types are declared with different lifetimes..."}, {"sha": "0b4c8f3952fcd0f630ed485f823daae8df20b043", "filename": "src/test/ui/derive-uninhabited-enum-38885.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fderive-uninhabited-enum-38885.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fderive-uninhabited-enum-38885.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderive-uninhabited-enum-38885.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -10,7 +10,7 @@ enum Void {}\n #[derive(Debug)]\n enum Foo {\n     Bar(u8),\n-    Void(Void), //~ WARN never used\n+    Void(Void), //~ WARN never constructed\n }\n \n fn main() {"}, {"sha": "0d804f012bcc3dec031460a641b2d03799bf73c3", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-builtin-attrs.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -38,6 +38,7 @@\n // Exception, a gated and deprecated attribute.\n \n #![plugin_registrar] //~ WARN unused attribute\n+//~| WARN use of deprecated attribute\n \n // UNGATED WHITE-LISTED BUILT-IN ATTRIBUTES\n \n@@ -90,7 +91,7 @@\n #![crate_id = \"10\"] //~ WARN use of deprecated attribute\n \n // FIXME(#44232) we should warn that this isn't used.\n-#![feature(rust1)]\n+#![feature(rust1)] //~ WARN no longer requires an attribute to enable\n \n #![no_start] //~ WARN use of deprecated attribute\n \n@@ -215,20 +216,25 @@ mod macro_export {\n \n #[plugin_registrar]\n //~^ WARN unused attribute\n+//~| WARN use of deprecated attribute\n mod plugin_registrar {\n     mod inner { #![plugin_registrar] }\n     //~^ WARN unused attribute\n+    //~| WARN use of deprecated attribute\n \n     // for `fn f()` case, see gated-plugin_registrar.rs\n \n     #[plugin_registrar] struct S;\n     //~^ WARN unused attribute\n+    //~| WARN use of deprecated attribute\n \n     #[plugin_registrar] type T = S;\n     //~^ WARN unused attribute\n+    //~| WARN use of deprecated attribute\n \n     #[plugin_registrar] impl S { }\n     //~^ WARN unused attribute\n+    //~| WARN use of deprecated attribute\n }\n \n #[main]"}, {"sha": "9ce90d89d22d224a1290d8245267b0abc65e3a8e", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 201, "deletions": 201, "changes": 402, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -1,5 +1,5 @@\n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:44:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:45:9\n    |\n LL | #![warn(x5400)]\n    |         ^^^^^\n@@ -11,209 +11,209 @@ LL | #![warn(unused_attributes, unknown_lints)]\n    |                            ^^^^^^^^^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:45:10\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:46:10\n    |\n LL | #![allow(x5300)]\n    |          ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:46:11\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:47:11\n    |\n LL | #![forbid(x5200)]\n    |           ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:47:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:48:9\n    |\n LL | #![deny(x5100)]\n    |         ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:104:8\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:105:8\n    |\n LL | #[warn(x5400)]\n    |        ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:107:25\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:108:25\n    |\n LL |     mod inner { #![warn(x5400)] }\n    |                         ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:110:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:111:12\n    |\n LL |     #[warn(x5400)] fn f() { }\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:113:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:114:12\n    |\n LL |     #[warn(x5400)] struct S;\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:116:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:117:12\n    |\n LL |     #[warn(x5400)] type T = S;\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:119:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:120:12\n    |\n LL |     #[warn(x5400)] impl S { }\n    |            ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:123:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:124:9\n    |\n LL | #[allow(x5300)]\n    |         ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:126:26\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:127:26\n    |\n LL |     mod inner { #![allow(x5300)] }\n    |                          ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:129:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:130:13\n    |\n LL |     #[allow(x5300)] fn f() { }\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:132:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:133:13\n    |\n LL |     #[allow(x5300)] struct S;\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:135:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:136:13\n    |\n LL |     #[allow(x5300)] type T = S;\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:138:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:139:13\n    |\n LL |     #[allow(x5300)] impl S { }\n    |             ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:142:10\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:143:10\n    |\n LL | #[forbid(x5200)]\n    |          ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:145:27\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:146:27\n    |\n LL |     mod inner { #![forbid(x5200)] }\n    |                           ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:148:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:149:14\n    |\n LL |     #[forbid(x5200)] fn f() { }\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:151:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:152:14\n    |\n LL |     #[forbid(x5200)] struct S;\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:154:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:155:14\n    |\n LL |     #[forbid(x5200)] type T = S;\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:157:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:158:14\n    |\n LL |     #[forbid(x5200)] impl S { }\n    |              ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:161:8\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:162:8\n    |\n LL | #[deny(x5100)]\n    |        ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:164:25\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:165:25\n    |\n LL |     mod inner { #![deny(x5100)] }\n    |                         ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:167:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:168:12\n    |\n LL |     #[deny(x5100)] fn f() { }\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:170:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:171:12\n    |\n LL |     #[deny(x5100)] struct S;\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:173:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:174:12\n    |\n LL |     #[deny(x5100)] type T = S;\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:176:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:177:12\n    |\n LL |     #[deny(x5100)] impl S { }\n    |            ^^^^^\n \n warning: macro_escape is a deprecated synonym for macro_use\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:460:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:466:1\n    |\n LL | #[macro_escape]\n    | ^^^^^^^^^^^^^^^\n \n warning: macro_escape is a deprecated synonym for macro_use\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:463:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:469:17\n    |\n LL |     mod inner { #![macro_escape] }\n    |                 ^^^^^^^^^^^^^^^^\n    |\n    = help: consider an outer attribute, `#[macro_use]` mod ...\n \n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:219:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:221:17\n    |\n LL |     mod inner { #![plugin_registrar] }\n    |                 ^^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:224:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:227:5\n    |\n LL |     #[plugin_registrar] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n \n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:227:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:231:5\n    |\n LL |     #[plugin_registrar] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n \n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:230:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:235:5\n    |\n LL |     #[plugin_registrar] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n \n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:216:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:217:1\n    |\n LL | #[plugin_registrar]\n    | ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n@@ -225,27 +225,27 @@ LL | #![plugin_registrar]\n    | ^^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n \n warning: use of deprecated attribute `crate_id`: no longer used.\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:90:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:91:1\n    |\n LL | #![crate_id = \"10\"]\n    | ^^^^^^^^^^^^^^^^^^^ help: remove this attribute\n \n warning: use of deprecated attribute `no_start`: no longer used.\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:95:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:96:1\n    |\n LL | #![no_start]\n    | ^^^^^^^^^^^^ help: remove this attribute\n \n warning: the feature `rust1` has been stable since 1.0.0 and no longer requires an attribute to enable\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:93:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:94:12\n    |\n LL | #![feature(rust1)]\n    |            ^^^^^\n    |\n    = note: `#[warn(stable_features)]` on by default\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:184:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:185:5\n    |\n LL |     #[macro_use] fn f() { }\n    |     ^^^^^^^^^^^^\n@@ -257,913 +257,913 @@ LL | #![warn(unused_attributes, unknown_lints)]\n    |         ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:187:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:188:5\n    |\n LL |     #[macro_use] struct S;\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:190:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:191:5\n    |\n LL |     #[macro_use] type T = S;\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:193:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:194:5\n    |\n LL |     #[macro_use] impl S { }\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:200:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:201:17\n    |\n LL |     mod inner { #![macro_export] }\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:203:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:204:5\n    |\n LL |     #[macro_export] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:206:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:207:5\n    |\n LL |     #[macro_export] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:209:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:210:5\n    |\n LL |     #[macro_export] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:212:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:213:5\n    |\n LL |     #[macro_export] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:197:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:198:1\n    |\n LL | #[macro_export]\n    | ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:219:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:221:17\n    |\n LL |     mod inner { #![plugin_registrar] }\n    |                 ^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:224:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:227:5\n    |\n LL |     #[plugin_registrar] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:227:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:231:5\n    |\n LL |     #[plugin_registrar] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:230:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:235:5\n    |\n LL |     #[plugin_registrar] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:216:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:217:1\n    |\n LL | #[plugin_registrar]\n    | ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:237:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:243:17\n    |\n LL |     mod inner { #![main] }\n    |                 ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:242:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:248:5\n    |\n LL |     #[main] struct S;\n    |     ^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:245:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:251:5\n    |\n LL |     #[main] type T = S;\n    |     ^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:248:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:254:5\n    |\n LL |     #[main] impl S { }\n    |     ^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:234:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:240:1\n    |\n LL | #[main]\n    | ^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:255:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:261:17\n    |\n LL |     mod inner { #![start] }\n    |                 ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:260:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:266:5\n    |\n LL |     #[start] struct S;\n    |     ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:263:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:269:5\n    |\n LL |     #[start] type T = S;\n    |     ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:266:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:272:5\n    |\n LL |     #[start] impl S { }\n    |     ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:252:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:258:1\n    |\n LL | #[start]\n    | ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:319:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:325:5\n    |\n LL |     #[path = \"3800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:322:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:328:5\n    |\n LL |     #[path = \"3800\"]  struct S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:325:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:331:5\n    |\n LL |     #[path = \"3800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:328:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:334:5\n    |\n LL |     #[path = \"3800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:335:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:341:17\n    |\n LL |     mod inner { #![automatically_derived] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:338:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:344:5\n    |\n LL |     #[automatically_derived] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:341:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:347:5\n    |\n LL |     #[automatically_derived] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:344:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:350:5\n    |\n LL |     #[automatically_derived] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:347:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:353:5\n    |\n LL |     #[automatically_derived] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:332:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:338:1\n    |\n LL | #[automatically_derived]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:367:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:373:17\n    |\n LL |     mod inner { #![no_link] }\n    |                 ^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:370:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:376:5\n    |\n LL |     #[no_link] fn f() { }\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:373:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:379:5\n    |\n LL |     #[no_link] struct S;\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:376:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:382:5\n    |\n LL |     #[no_link]type T = S;\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:379:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:385:5\n    |\n LL |     #[no_link] impl S { }\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:364:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:370:1\n    |\n LL | #[no_link]\n    | ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:386:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:392:17\n    |\n LL |     mod inner { #![should_panic] }\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:389:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:395:5\n    |\n LL |     #[should_panic] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:392:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:398:5\n    |\n LL |     #[should_panic] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:395:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:401:5\n    |\n LL |     #[should_panic] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:398:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:404:5\n    |\n LL |     #[should_panic] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:383:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:389:1\n    |\n LL | #[should_panic]\n    | ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:405:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:411:17\n    |\n LL |     mod inner { #![ignore] }\n    |                 ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:408:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:414:5\n    |\n LL |     #[ignore] fn f() { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:411:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:417:5\n    |\n LL |     #[ignore] struct S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:414:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:420:5\n    |\n LL |     #[ignore] type T = S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:417:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:423:5\n    |\n LL |     #[ignore] impl S { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:402:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:408:1\n    |\n LL | #[ignore]\n    | ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:424:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:430:17\n    |\n LL |     mod inner { #![no_implicit_prelude] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:427:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:433:5\n    |\n LL |     #[no_implicit_prelude] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:430:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:436:5\n    |\n LL |     #[no_implicit_prelude] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:433:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:439:5\n    |\n LL |     #[no_implicit_prelude] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:436:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:442:5\n    |\n LL |     #[no_implicit_prelude] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:421:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:427:1\n    |\n LL | #[no_implicit_prelude]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:443:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:449:17\n    |\n LL |     mod inner { #![reexport_test_harness_main=\"2900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:446:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:452:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:449:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:455:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:452:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:458:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:455:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:461:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:440:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:446:1\n    |\n LL | #[reexport_test_harness_main = \"2900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:466:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:472:5\n    |\n LL |     #[macro_escape] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:469:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:475:5\n    |\n LL |     #[macro_escape] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:472:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:478:5\n    |\n LL |     #[macro_escape] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:475:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:481:5\n    |\n LL |     #[macro_escape] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:483:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:489:17\n    |\n LL |     mod inner { #![no_std] }\n    |                 ^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:483:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:489:17\n    |\n LL |     mod inner { #![no_std] }\n    |                 ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:487:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:493:5\n    |\n LL |     #[no_std] fn f() { }\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:487:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:493:5\n    |\n LL |     #[no_std] fn f() { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:491:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:497:5\n    |\n LL |     #[no_std] struct S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:491:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:497:5\n    |\n LL |     #[no_std] struct S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:495:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:501:5\n    |\n LL |     #[no_std] type T = S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:495:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:501:5\n    |\n LL |     #[no_std] type T = S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:499:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:505:5\n    |\n LL |     #[no_std] impl S { }\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:499:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:505:5\n    |\n LL |     #[no_std] impl S { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:479:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:485:1\n    |\n LL | #[no_std]\n    | ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:479:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:485:1\n    |\n LL | #[no_std]\n    | ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:638:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:644:17\n    |\n LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:638:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:644:17\n    |\n LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:642:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:648:5\n    |\n LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:642:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:648:5\n    |\n LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:646:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:652:5\n    |\n LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:646:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:652:5\n    |\n LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:650:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:656:5\n    |\n LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:650:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:656:5\n    |\n LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:654:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:660:5\n    |\n LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:654:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:660:5\n    |\n LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:634:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:640:1\n    |\n LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:634:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:640:1\n    |\n LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:663:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:669:17\n    |\n LL |     mod inner { #![crate_type=\"0800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:663:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:669:17\n    |\n LL |     mod inner { #![crate_type=\"0800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:667:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:673:5\n    |\n LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:667:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:673:5\n    |\n LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:671:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:677:5\n    |\n LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:671:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:677:5\n    |\n LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:675:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:681:5\n    |\n LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:675:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:681:5\n    |\n LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:679:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:5\n    |\n LL |     #[crate_type = \"0800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:679:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:5\n    |\n LL |     #[crate_type = \"0800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:659:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:665:1\n    |\n LL | #[crate_type = \"0800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:659:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:665:1\n    |\n LL | #[crate_type = \"0800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:688:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:694:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:688:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:694:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:692:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:698:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:692:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:698:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:696:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:702:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:696:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:702:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:700:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:706:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:700:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:706:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:704:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:710:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:704:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:710:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:684:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:690:1\n    |\n LL | #[feature(x0600)]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:684:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:690:1\n    |\n LL | #[feature(x0600)]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:714:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:720:17\n    |\n LL |     mod inner { #![no_main] }\n    |                 ^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:714:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:720:17\n    |\n LL |     mod inner { #![no_main] }\n    |                 ^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:718:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:724:5\n    |\n LL |     #[no_main] fn f() { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:718:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:724:5\n    |\n LL |     #[no_main] fn f() { }\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:722:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:728:5\n    |\n LL |     #[no_main] struct S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:722:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:728:5\n    |\n LL |     #[no_main] struct S;\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:726:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:732:5\n    |\n LL |     #[no_main] type T = S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:726:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:732:5\n    |\n LL |     #[no_main] type T = S;\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:730:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:736:5\n    |\n LL |     #[no_main] impl S { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:730:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:736:5\n    |\n LL |     #[no_main] impl S { }\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:710:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:716:1\n    |\n LL | #[no_main]\n    | ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:710:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:716:1\n    |\n LL | #[no_main]\n    | ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:752:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:758:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:752:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:758:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:756:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:762:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:756:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:762:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:760:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:766:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:760:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:766:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:764:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:770:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:764:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:770:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:768:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:774:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:768:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:774:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:748:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:754:1\n    |\n LL | #[recursion_limit=\"0200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:748:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:754:1\n    |\n LL | #[recursion_limit=\"0200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:777:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:783:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:777:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:783:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:781:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:787:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:781:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:787:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:785:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:791:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:785:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:791:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:789:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:795:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:789:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:795:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:793:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:799:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:793:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:799:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:773:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:779:1\n    |\n LL | #[type_length_limit=\"0100\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:773:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:779:1\n    |\n LL | #[type_length_limit=\"0100\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -1175,61 +1175,61 @@ LL | #![plugin_registrar]\n    | ^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:49:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:50:1\n    |\n LL | #![macro_export]\n    | ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:52:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:53:1\n    |\n LL | #![main]\n    | ^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:53:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:54:1\n    |\n LL | #![start]\n    | ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:56:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:57:1\n    |\n LL | #![repr()]\n    | ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:58:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:59:1\n    |\n LL | #![path = \"3800\"]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:59:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:60:1\n    |\n LL | #![automatically_derived]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:61:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:62:1\n    |\n LL | #![no_link]\n    | ^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:63:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:64:1\n    |\n LL | #![should_panic]\n    | ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:64:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:65:1\n    |\n LL | #![ignore]\n    | ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:70:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:71:1\n    |\n LL | #![proc_macro_derive()]\n    | ^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "e50ca5f54d19550121ad22bb551d51964a2c36be", "filename": "src/test/ui/huge-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fhuge-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fhuge-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhuge-struct.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -47,6 +47,6 @@ struct S1M<T> { val: S1k<S1k<T>> }\n \n fn main() {\n     let fat: Option<S1M<S1M<S1M<u32>>>> = None;\n-    //~^ ERROR the type `S32<S1M<S1M<u32>>>` is too big for the current architecture\n+    //~^ ERROR is too big for the current architecture\n \n }"}, {"sha": "157eb3863203ae62d72f40e6b8e8ec9122106498", "filename": "src/test/ui/if/if-let.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fif%2Fif-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fif%2Fif-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fif%2Fif-let.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -4,6 +4,8 @@ fn macros() {\n     macro_rules! foo{\n         ($p:pat, $e:expr, $b:block) => {{\n             if let $p = $e $b\n+            //~^ WARN irrefutable if-let\n+            //~| WARN irrefutable if-let\n         }}\n     }\n     macro_rules! bar{\n@@ -12,10 +14,10 @@ fn macros() {\n         }}\n     }\n \n-    foo!(a, 1, { //~ WARN irrefutable if-let\n+    foo!(a, 1, {\n         println!(\"irrefutable pattern\");\n     });\n-    bar!(a, 1, { //~ WARN irrefutable if-let\n+    bar!(a, 1, {\n         println!(\"irrefutable pattern\");\n     });\n }"}, {"sha": "83ab234cf04eab45e06933f4acf61e372b727db2", "filename": "src/test/ui/if/if-let.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fif%2Fif-let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fif%2Fif-let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fif%2Fif-let.stderr?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -23,15 +23,15 @@ LL | |     });\n    | |_______- in this macro invocation\n \n warning: irrefutable if-let pattern\n-  --> $DIR/if-let.rs:24:5\n+  --> $DIR/if-let.rs:26:5\n    |\n LL | /     if let a = 1 {\n LL | |         println!(\"irrefutable pattern\");\n LL | |     }\n    | |_____^\n \n warning: irrefutable if-let pattern\n-  --> $DIR/if-let.rs:28:5\n+  --> $DIR/if-let.rs:30:5\n    |\n LL | /     if let a = 1 {\n LL | |         println!(\"irrefutable pattern\");\n@@ -43,7 +43,7 @@ LL | |     }\n    | |_____^\n \n warning: irrefutable if-let pattern\n-  --> $DIR/if-let.rs:38:12\n+  --> $DIR/if-let.rs:40:12\n    |\n LL |       } else if let a = 1 {\n    |  ____________^\n@@ -52,7 +52,7 @@ LL | |     }\n    | |_____^\n \n warning: irrefutable if-let pattern\n-  --> $DIR/if-let.rs:44:12\n+  --> $DIR/if-let.rs:46:12\n    |\n LL |       } else if let a = 1 {\n    |  ____________^"}, {"sha": "ef705946ad4443584af2dbfe722110acd1687187", "filename": "src/test/ui/issues/issue-54943-3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fissues%2Fissue-54943-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fissues%2Fissue-54943-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54943-3.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -15,7 +15,6 @@ fn bar<'a>() {\n     return;\n \n     let _x = foo::<Vec<_>>(Vec::<&'a u32>::new());\n-    //~^ ERROR the type `&'a u32` does not fulfill the required lifetime [E0477]\n }\n \n fn main() {}"}, {"sha": "fa9f012c9262ca21575d80209543a4a60f971e1d", "filename": "src/test/ui/lint/reasons.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Flint%2Freasons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Flint%2Freasons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Freasons.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -28,6 +28,8 @@ impl fmt::Debug for CheaterDetectionMechanism {\n \n fn main() {\n     let Social_exchange_psychology = CheaterDetectionMechanism {};\n-    //~^ WARN should have a snake case name such as\n+    //~^ WARN should have a snake case name\n+    //~| NOTE #[warn(non_snake_case)]` implied by `#[warn(nonstandard_style)]\n     //~| NOTE people shouldn't have to change their usual style habits\n+    //~| HELP convert the identifier to snake case\n }"}, {"sha": "79ffc82d32963ba83c50d40fe620802815cd6f29", "filename": "src/test/ui/lint/type-overflow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Flint%2Ftype-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Flint%2Ftype-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Ftype-overflow.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -2,7 +2,7 @@\n #![warn(overflowing_literals)]\n \n fn main() {\n-    let error = 255i8; //~WARNING literal out of range for i8\n+    let error = 255i8; //~WARNING literal out of range for `i8`\n \n     let ok = 0b1000_0001; // should be ok -> i32\n     let ok = 0b0111_1111i8; // should be ok -> 127i8"}, {"sha": "3b00424d2f3fa1c996e912420b0e17f1a9c0fe38", "filename": "src/test/ui/lint/use-redundant.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Flint%2Fuse-redundant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Flint%2Fuse-redundant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fuse-redundant.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -1,7 +1,7 @@\n // build-pass (FIXME(62277): could be check-pass?)\n #![warn(unused_imports)]\n \n-use crate::foo::Bar; //~ WARNING first import\n+use crate::foo::Bar;\n \n mod foo {\n     pub type Bar = i32;\n@@ -14,14 +14,14 @@ fn baz() -> Bar {\n mod m1 { pub struct S {} }\n mod m2 { pub struct S {} }\n \n-use m1::*;\n-use m2::*;\n+use m1::*; //~ WARNING unused import\n+use m2::*; //~ WARNING unused import\n \n fn main() {\n-    use crate::foo::Bar; //~ WARNING redundant import\n+    use crate::foo::Bar; //~ WARNING imported redundantly\n     let _a: Bar = 3;\n     baz();\n \n-    use m1::S; //~ WARNING redundant import\n+    use m1::S;\n     let _s = S {};\n }"}, {"sha": "1eca8c739040c64a939c48b8e4feb61d544d2f22", "filename": "src/test/ui/malformed/malformed-regressions.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-regressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-regressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-regressions.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -1,8 +1,18 @@\n // build-pass (FIXME(62277): could be check-pass?)\n \n-#[doc] //~ WARN attribute must be of the form\n-#[ignore()] //~ WARN attribute must be of the form\n-#[inline = \"\"] //~ WARN attribute must be of the form\n-#[link] //~ WARN attribute must be of the form\n-#[link = \"\"] //~ WARN attribute must be of the form\n+#[doc]\n+//~^ WARN attribute must be of the form\n+//~| WARN this was previously accepted\n+#[ignore()]\n+//~^ WARN attribute must be of the form\n+//~| WARN this was previously accepted\n+#[inline = \"\"]\n+//~^ WARN attribute must be of the form\n+//~| WARN this was previously accepted\n+#[link]\n+//~^WARN attribute must be of the form\n+//~| WARN this was previously accepted\n+#[link = \"\"]\n+//~^ WARN attribute must be of the form\n+//~| WARN this was previously accepted\n fn main() {}"}, {"sha": "8f4e952338f8cb4cf9d25b7d53972c41a07c5f86", "filename": "src/test/ui/malformed/malformed-regressions.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-regressions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-regressions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-regressions.stderr?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -9,7 +9,7 @@ LL | #[doc]\n    = note: for more information, see issue #57571 <https://github.com/rust-lang/rust/issues/57571>\n \n warning: attribute must be of the form `#[ignore]` or `#[ignore = \"reason\"]`\n-  --> $DIR/malformed-regressions.rs:4:1\n+  --> $DIR/malformed-regressions.rs:6:1\n    |\n LL | #[ignore()]\n    | ^^^^^^^^^^^\n@@ -18,7 +18,7 @@ LL | #[ignore()]\n    = note: for more information, see issue #57571 <https://github.com/rust-lang/rust/issues/57571>\n \n warning: attribute must be of the form `#[inline]` or `#[inline(always|never)]`\n-  --> $DIR/malformed-regressions.rs:5:1\n+  --> $DIR/malformed-regressions.rs:9:1\n    |\n LL | #[inline = \"\"]\n    | ^^^^^^^^^^^^^^\n@@ -27,7 +27,7 @@ LL | #[inline = \"\"]\n    = note: for more information, see issue #57571 <https://github.com/rust-lang/rust/issues/57571>\n \n warning: attribute must be of the form `#[link(name = \"...\", /*opt*/ kind = \"dylib|static|...\", /*opt*/ cfg = \"...\")]`\n-  --> $DIR/malformed-regressions.rs:6:1\n+  --> $DIR/malformed-regressions.rs:12:1\n    |\n LL | #[link]\n    | ^^^^^^^\n@@ -36,7 +36,7 @@ LL | #[link]\n    = note: for more information, see issue #57571 <https://github.com/rust-lang/rust/issues/57571>\n \n warning: attribute must be of the form `#[link(name = \"...\", /*opt*/ kind = \"dylib|static|...\", /*opt*/ cfg = \"...\")]`\n-  --> $DIR/malformed-regressions.rs:7:1\n+  --> $DIR/malformed-regressions.rs:15:1\n    |\n LL | #[link = \"\"]\n    | ^^^^^^^^^^^^"}, {"sha": "0d7d2c0ed3fa9402eaf9c808572292fba19e3cb7", "filename": "src/test/ui/never_type/adjust_never.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fnever_type%2Fadjust_never.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fnever_type%2Fadjust_never.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fadjust_never.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -1,7 +1,6 @@\n // Test that a variable of type ! can coerce to another type.\n \n-// run-fail\n-// error-pattern:explicit\n+// check-pass\n \n #![feature(never_type)]\n "}, {"sha": "9d355817ee80dc459ad86ebfce4f4a79d3d194ff", "filename": "src/test/ui/never_type/call-fn-never-arg.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fnever_type%2Fcall-fn-never-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fnever_type%2Fcall-fn-never-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fcall-fn-never-arg.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -1,7 +1,6 @@\n // Test that we can use a ! for an argument of type !\n \n-// run-fail\n-// error-pattern:wowzers!\n+// check-pass\n \n #![feature(never_type)]\n #![allow(unreachable_code)]"}, {"sha": "0139ebe4640be6f3d91c0562290813cee17d9bae", "filename": "src/test/ui/never_type/cast-never.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fnever_type%2Fcast-never.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fnever_type%2Fcast-never.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fcast-never.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -1,7 +1,6 @@\n // Test that we can explicitly cast ! to another type\n \n-// run-fail\n-// error-pattern:explicit\n+// check-pass\n \n #![feature(never_type)]\n "}, {"sha": "3bb917c931635299e302860d646009d68d97b207", "filename": "src/test/ui/never_type/never-associated-type.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fnever_type%2Fnever-associated-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fnever_type%2Fnever-associated-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fnever-associated-type.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -1,7 +1,6 @@\n // Test that we can use ! as an associated type.\n \n-// run-fail\n-// error-pattern:kapow!\n+// check-pass\n \n #![feature(never_type)]\n "}, {"sha": "13cd59e6aa9f138e6982af760e32cfe9ecf51eb8", "filename": "src/test/ui/never_type/never-type-arg.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fnever_type%2Fnever-type-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fnever_type%2Fnever-type-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fnever-type-arg.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -1,7 +1,6 @@\n // Test that we can use ! as an argument to a trait impl.\n \n-// run-fail\n-// error-pattern:oh no!\n+// check-pass\n \n #![feature(never_type)]\n "}, {"sha": "349ba11a7cdffd096166f47a9f1be5080c2b8fbb", "filename": "src/test/ui/pattern/usefulness/issue-43253.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-43253.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-43253.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fissue-43253.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -32,14 +32,14 @@ fn main() {\n \n     match 10 {\n         1..10 => {},\n-        8..=9 => {}, //~ WARNING multiple patterns covering the same range\n+        8..=9 => {}, //~ WARNING unreachable pattern\n         _ => {},\n     }\n \n     match 10 {\n         5..7 => {},\n         6 => {}, //~ WARNING unreachable pattern\n-        1..10 => {}, //~ WARNING multiple patterns covering the same range\n+        1..10 => {},\n         9..=9 => {}, //~ WARNING unreachable pattern\n         6 => {}, //~ WARNING unreachable pattern\n         _ => {},"}, {"sha": "0d59f44584c99c1eb2b2eb290b7dd2f51697aa29", "filename": "src/test/ui/regions/regions-outlives-nominal-type-struct-region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fregions%2Fregions-outlives-nominal-type-struct-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fregions%2Fregions-outlives-nominal-type-struct-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-outlives-nominal-type-struct-region.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -13,7 +13,7 @@ mod variant_struct_region {\n         x: &'a i32,\n     }\n     struct Bar<'a,'b> {\n-        f: &'a Foo<'b> //~ ERROR reference has a longer lifetime\n+        f: &'a Foo<'b>\n     }\n }\n "}, {"sha": "cf0d96ba7ed4a3c03669621f7836e33cf4b6843e", "filename": "src/test/ui/regions/regions-outlives-nominal-type-struct-type-rev.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fregions%2Fregions-outlives-nominal-type-struct-type-rev.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fregions%2Fregions-outlives-nominal-type-struct-type-rev.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-outlives-nominal-type-struct-type-rev.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -13,7 +13,7 @@ mod rev_variant_struct_type {\n         x: fn(T)\n     }\n     struct Bar<'a,'b> {\n-        f: &'a Foo<&'b i32> //~ ERROR reference has a longer lifetime\n+        f: &'a Foo<&'b i32>\n     }\n }\n "}, {"sha": "069fc5dd0085abd6cad9a20831215715e3dc41b8", "filename": "src/test/ui/regions/regions-outlives-nominal-type-struct-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fregions%2Fregions-outlives-nominal-type-struct-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fregions%2Fregions-outlives-nominal-type-struct-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-outlives-nominal-type-struct-type.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -13,7 +13,7 @@ mod variant_struct_type {\n         x: T\n     }\n     struct Bar<'a,'b> {\n-        f: &'a Foo<&'b i32> //~ ERROR reference has a longer lifetime\n+        f: &'a Foo<&'b i32>\n     }\n }\n "}, {"sha": "dd5551d28441dff26a833527ed9e263f6c50c424", "filename": "src/test/ui/simd/simd-intrinsic-float-minmax.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fsimd%2Fsimd-intrinsic-float-minmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fsimd%2Fsimd-intrinsic-float-minmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fsimd-intrinsic-float-minmax.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -1,7 +1,6 @@\n // run-pass\n // ignore-emscripten\n // min-llvm-version 7.0\n-// error-pattern: panicked\n \n // Test that the simd_f{min,max} intrinsics produce the correct results.\n "}, {"sha": "cfbf7565cb6c82d7b8b298f29b835afa795570f3", "filename": "src/test/ui/while-let.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fwhile-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fwhile-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwhile-let.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -5,6 +5,8 @@ fn macros() {\n     macro_rules! foo{\n         ($p:pat, $e:expr, $b:block) => {{\n             while let $p = $e $b\n+            //~^ WARN irrefutable while-let\n+            //~| WARN irrefutable while-let\n         }}\n     }\n     macro_rules! bar{\n@@ -13,10 +15,10 @@ fn macros() {\n         }}\n     }\n \n-    foo!(_a, 1, { //~ WARN irrefutable while-let\n+    foo!(_a, 1, {\n         println!(\"irrefutable pattern\");\n     });\n-    bar!(_a, 1, { //~ WARN irrefutable while-let\n+    bar!(_a, 1, {\n         println!(\"irrefutable pattern\");\n     });\n }"}, {"sha": "172874ad5fc5c603ea1c3c33585770bf21e3bba6", "filename": "src/test/ui/while-let.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fwhile-let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftest%2Fui%2Fwhile-let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwhile-let.stderr?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -23,7 +23,7 @@ LL | |     });\n    | |_______- in this macro invocation\n \n warning: irrefutable while-let pattern\n-  --> $DIR/while-let.rs:25:5\n+  --> $DIR/while-let.rs:27:5\n    |\n LL | /     while let _a = 1 {\n LL | |         println!(\"irrefutable pattern\");"}, {"sha": "a9acc9733c19ead03713f28cd0ab2f5ce448a8cc", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43a6822597061dc18cbdde1769d9815e718d7bb/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=b43a6822597061dc18cbdde1769d9815e718d7bb", "patch": "@@ -3137,21 +3137,24 @@ impl<'test> TestCx<'test> {\n                     self.fatal_proc_rec(\"test run succeeded!\", &proc_res);\n                 }\n             }\n+            if !self.props.error_patterns.is_empty() {\n+                // \"// error-pattern\" comments\n+                self.check_error_patterns(&proc_res.stderr, &proc_res);\n+            }\n         }\n \n         debug!(\"run_ui_test: explicit={:?} config.compare_mode={:?} expected_errors={:?} \\\n                proc_res.status={:?} props.error_patterns={:?}\",\n                explicit, self.config.compare_mode, expected_errors, proc_res.status,\n                self.props.error_patterns);\n         if !explicit && self.config.compare_mode.is_none() {\n-            if !proc_res.status.success() {\n-                if !self.props.error_patterns.is_empty() {\n-                    // \"// error-pattern\" comments\n-                    self.check_error_patterns(&proc_res.stderr, &proc_res);\n-                } else {\n-                    // \"//~ERROR comments\"\n-                    self.check_expected_errors(expected_errors, &proc_res);\n-                }\n+            if !self.should_run() && !self.props.error_patterns.is_empty() {\n+                // \"// error-pattern\" comments\n+                self.check_error_patterns(&proc_res.stderr, &proc_res);\n+            }\n+            if !expected_errors.is_empty() {\n+                // \"//~ERROR comments\"\n+                self.check_expected_errors(expected_errors, &proc_res);\n             }\n         }\n "}]}