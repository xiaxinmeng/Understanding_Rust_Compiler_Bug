{"sha": "7c40338ba13aa38c8ba4442f92d50155ad9f6ddd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNDAzMzhiYTEzYWEzOGM4YmE0NDQyZjkyZDUwMTU1YWQ5ZjZkZGQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-05-11T12:22:05Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-05-11T12:22:23Z"}, "message": "Implement imported_main feature\n\nFixes #1164", "tree": {"sha": "dd8dfb8c2d9ac48ecd5a222128cf6f3501bccc50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd8dfb8c2d9ac48ecd5a222128cf6f3501bccc50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c40338ba13aa38c8ba4442f92d50155ad9f6ddd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c40338ba13aa38c8ba4442f92d50155ad9f6ddd", "html_url": "https://github.com/rust-lang/rust/commit/7c40338ba13aa38c8ba4442f92d50155ad9f6ddd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c40338ba13aa38c8ba4442f92d50155ad9f6ddd/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4663ed7bd9ae04dea5beb6d852a37837f00d4a23", "url": "https://api.github.com/repos/rust-lang/rust/commits/4663ed7bd9ae04dea5beb6d852a37837f00d4a23", "html_url": "https://github.com/rust-lang/rust/commit/4663ed7bd9ae04dea5beb6d852a37837f00d4a23"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "99c15a26fe53f6deffc81ae31180c64ba639cec8", "filename": "src/driver/aot.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7c40338ba13aa38c8ba4442f92d50155ad9f6ddd/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c40338ba13aa38c8ba4442f92d50155ad9f6ddd/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=7c40338ba13aa38c8ba4442f92d50155ad9f6ddd", "patch": "@@ -134,7 +134,13 @@ fn module_codegen(\n             }\n         }\n     }\n-    crate::main_shim::maybe_create_entry_wrapper(tcx, &mut module, &mut cx.unwind_context, false);\n+    crate::main_shim::maybe_create_entry_wrapper(\n+        tcx,\n+        &mut module,\n+        &mut cx.unwind_context,\n+        false,\n+        cgu.is_primary(),\n+    );\n \n     let debug_context = cx.debug_context;\n     let unwind_context = cx.unwind_context;"}, {"sha": "fac48401a7eed2f060bfd4991ced3489db1acd81", "filename": "src/driver/jit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7c40338ba13aa38c8ba4442f92d50155ad9f6ddd/src%2Fdriver%2Fjit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c40338ba13aa38c8ba4442f92d50155ad9f6ddd/src%2Fdriver%2Fjit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fjit.rs?ref=7c40338ba13aa38c8ba4442f92d50155ad9f6ddd", "patch": "@@ -45,6 +45,7 @@ fn create_jit_module<'tcx>(\n         &mut jit_module,\n         &mut cx.unwind_context,\n         true,\n+        true,\n     );\n \n     (jit_module, cx)"}, {"sha": "f231e791abddde474c285d672e7484ac5c47e154", "filename": "src/main_shim.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7c40338ba13aa38c8ba4442f92d50155ad9f6ddd/src%2Fmain_shim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c40338ba13aa38c8ba4442f92d50155ad9f6ddd/src%2Fmain_shim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain_shim.rs?ref=7c40338ba13aa38c8ba4442f92d50155ad9f6ddd", "patch": "@@ -14,6 +14,7 @@ pub(crate) fn maybe_create_entry_wrapper(\n     module: &mut impl Module,\n     unwind_context: &mut UnwindContext,\n     is_jit: bool,\n+    is_primary_cgu: bool,\n ) {\n     let (main_def_id, is_main_fn) = match tcx.entry_fn(LOCAL_CRATE) {\n         Some((def_id, entry_ty)) => (\n@@ -26,8 +27,12 @@ pub(crate) fn maybe_create_entry_wrapper(\n         None => return,\n     };\n \n-    let instance = Instance::mono(tcx, main_def_id).polymorphize(tcx);\n-    if !is_jit && module.get_name(&*tcx.symbol_name(instance).name).is_none() {\n+    if main_def_id.is_local() {\n+        let instance = Instance::mono(tcx, main_def_id).polymorphize(tcx);\n+        if !is_jit && module.get_name(&*tcx.symbol_name(instance).name).is_none() {\n+            return;\n+        }\n+    } else if !is_primary_cgu {\n         return;\n     }\n "}]}