{"sha": "6c366ade0087db292b9a1eee71b6a20653a4d0e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjMzY2YWRlMDA4N2RiMjkyYjlhMWVlZTcxYjZhMjA2NTNhNGQwZTk=", "commit": {"author": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-08-12T14:31:00Z"}, "committer": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-08-12T16:20:28Z"}, "message": "Clean up", "tree": {"sha": "d14cf6d19f252d919278b8c06edbe172349a84ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d14cf6d19f252d919278b8c06edbe172349a84ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c366ade0087db292b9a1eee71b6a20653a4d0e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c366ade0087db292b9a1eee71b6a20653a4d0e9", "html_url": "https://github.com/rust-lang/rust/commit/6c366ade0087db292b9a1eee71b6a20653a4d0e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c366ade0087db292b9a1eee71b6a20653a4d0e9/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de074fe6368aca7435256925ee749f5664d49b69", "url": "https://api.github.com/repos/rust-lang/rust/commits/de074fe6368aca7435256925ee749f5664d49b69", "html_url": "https://github.com/rust-lang/rust/commit/de074fe6368aca7435256925ee749f5664d49b69"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "91c705afb78d70333cf69cc5fde4440fd034d554", "filename": "crates/hir_ty/src/display.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c366ade0087db292b9a1eee71b6a20653a4d0e9/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c366ade0087db292b9a1eee71b6a20653a4d0e9/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs?ref=6c366ade0087db292b9a1eee71b6a20653a4d0e9", "patch": "@@ -377,7 +377,7 @@ impl HirDisplay for Ty {\n                 }\n \n                 // FIXME: all this just to decide whether to use parentheses...\n-                let conains_impl_fn = |bounds: &[QuantifiedWhereClause]| {\n+                let contains_impl_fn = |bounds: &[QuantifiedWhereClause]| {\n                     bounds.iter().any(|bound| {\n                         if let WhereClause::Implemented(trait_ref) = bound.skip_binders() {\n                             let trait_ = trait_ref.hir_trait_id();\n@@ -390,7 +390,7 @@ impl HirDisplay for Ty {\n                 let (preds_to_print, has_impl_fn_pred) = match t.kind(&Interner) {\n                     TyKind::Dyn(dyn_ty) if dyn_ty.bounds.skip_binders().interned().len() > 1 => {\n                         let bounds = dyn_ty.bounds.skip_binders().interned();\n-                        (bounds.len(), conains_impl_fn(bounds))\n+                        (bounds.len(), contains_impl_fn(bounds))\n                     }\n                     TyKind::Alias(AliasTy::Opaque(OpaqueTy {\n                         opaque_ty_id,\n@@ -435,7 +435,7 @@ impl HirDisplay for Ty {\n                                 }\n                             }\n \n-                            (len, conains_impl_fn(bounds.skip_binders()))\n+                            (len, contains_impl_fn(bounds.skip_binders()))\n                         } else {\n                             (0, false)\n                         }"}, {"sha": "0f5859c433f2bf50ef1f51d8205cd6ce37e6535a", "filename": "crates/hir_ty/src/infer/coerce.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c366ade0087db292b9a1eee71b6a20653a4d0e9/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c366ade0087db292b9a1eee71b6a20653a4d0e9/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs?ref=6c366ade0087db292b9a1eee71b6a20653a4d0e9", "patch": "@@ -578,7 +578,6 @@ impl<'a> InferenceContext<'a> {\n             Solution::Ambig(Guidance::Definite(subst)) => {\n                 canonicalized.apply_solution(&mut self.table, subst)\n             }\n-            // FIXME: should we accept ambiguous results here?\n             _ => return Err(TypeError),\n         };\n         let unsize ="}, {"sha": "582a5eb21dab35865c79606694aab75eacd13659", "filename": "crates/hir_ty/src/lower.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6c366ade0087db292b9a1eee71b6a20653a4d0e9/crates%2Fhir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c366ade0087db292b9a1eee71b6a20653a4d0e9/crates%2Fhir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flower.rs?ref=6c366ade0087db292b9a1eee71b6a20653a4d0e9", "patch": "@@ -881,8 +881,6 @@ impl<'a> TyLoweringContext<'a> {\n         cov_mark::hit!(lower_rpit);\n         let self_ty =\n             TyKind::BoundVar(BoundVar::new(DebruijnIndex::INNERMOST, 0)).intern(&Interner);\n-        // XXX(iDawer): Can shifting mess with unsized_types? For now I better reinsure.\n-        let outer_unsized_types = self.unsized_types.replace(Default::default());\n         let predicates = self.with_shifted_in(DebruijnIndex::ONE, |ctx| {\n             let mut predicates: Vec<_> = bounds\n                 .iter()\n@@ -907,7 +905,6 @@ impl<'a> TyLoweringContext<'a> {\n             }\n             predicates\n         });\n-        self.unsized_types.replace(outer_unsized_types);\n \n         ReturnTypeImplTrait { bounds: crate::make_only_type_binders(1, predicates) }\n     }"}, {"sha": "716a054be85ea6eeaa67def9c209b98e9e67e87d", "filename": "crates/ide_assists/src/handlers/generate_function.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6c366ade0087db292b9a1eee71b6a20653a4d0e9/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c366ade0087db292b9a1eee71b6a20653a4d0e9/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs?ref=6c366ade0087db292b9a1eee71b6a20653a4d0e9", "patch": "@@ -747,7 +747,7 @@ fn bar(worble: ()) ${0:-> ()} {\n         check_assist(\n             generate_function,\n             r#\"\n-#[lang = \"sized\"] trait Sized {}\n+//- minicore: sized\n trait Foo {}\n fn foo() -> impl Foo {\n     todo!()\n@@ -757,7 +757,6 @@ fn baz() {\n }\n \"#,\n             r#\"\n-#[lang = \"sized\"] trait Sized {}\n trait Foo {}\n fn foo() -> impl Foo {\n     todo!()"}]}