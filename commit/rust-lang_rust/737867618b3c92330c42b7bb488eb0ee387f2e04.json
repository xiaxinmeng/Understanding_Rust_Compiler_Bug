{"sha": "737867618b3c92330c42b7bb488eb0ee387f2e04", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczNzg2NzYxOGIzYzkyMzMwYzQyYjdiYjQ4OGViMGVlMzg3ZjJlMDQ=", "commit": {"author": {"name": "Ramon de C Valle", "email": "rcvalle@users.noreply.github.com", "date": "2021-01-20T04:08:30Z"}, "committer": {"name": "Ramon de C Valle", "email": "rcvalle@users.noreply.github.com", "date": "2021-01-20T05:32:39Z"}, "message": "Fix sysroot option not being honored across rustc\n\nChange link_sanitizer_runtime() to check if the sanitizer library exists\nin the specified/session sysroot, and if it doesn't exist, use the\ndefault sysroot.", "tree": {"sha": "54f4078bd29815f0fefedc0ffd542fc63e051380", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54f4078bd29815f0fefedc0ffd542fc63e051380"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/737867618b3c92330c42b7bb488eb0ee387f2e04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/737867618b3c92330c42b7bb488eb0ee387f2e04", "html_url": "https://github.com/rust-lang/rust/commit/737867618b3c92330c42b7bb488eb0ee387f2e04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/737867618b3c92330c42b7bb488eb0ee387f2e04/comments", "author": {"login": "rcvalle", "id": 3988004, "node_id": "MDQ6VXNlcjM5ODgwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3988004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcvalle", "html_url": "https://github.com/rcvalle", "followers_url": "https://api.github.com/users/rcvalle/followers", "following_url": "https://api.github.com/users/rcvalle/following{/other_user}", "gists_url": "https://api.github.com/users/rcvalle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcvalle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcvalle/subscriptions", "organizations_url": "https://api.github.com/users/rcvalle/orgs", "repos_url": "https://api.github.com/users/rcvalle/repos", "events_url": "https://api.github.com/users/rcvalle/events{/privacy}", "received_events_url": "https://api.github.com/users/rcvalle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rcvalle", "id": 3988004, "node_id": "MDQ6VXNlcjM5ODgwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3988004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcvalle", "html_url": "https://github.com/rcvalle", "followers_url": "https://api.github.com/users/rcvalle/followers", "following_url": "https://api.github.com/users/rcvalle/following{/other_user}", "gists_url": "https://api.github.com/users/rcvalle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcvalle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcvalle/subscriptions", "organizations_url": "https://api.github.com/users/rcvalle/orgs", "repos_url": "https://api.github.com/users/rcvalle/repos", "events_url": "https://api.github.com/users/rcvalle/events{/privacy}", "received_events_url": "https://api.github.com/users/rcvalle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe531d5a5f1404281e3fb237daaf87b8180bd13d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe531d5a5f1404281e3fb237daaf87b8180bd13d", "html_url": "https://github.com/rust-lang/rust/commit/fe531d5a5f1404281e3fb237daaf87b8180bd13d"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "175094b129c8fe586104294ce89a3e3e1b052259", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/737867618b3c92330c42b7bb488eb0ee387f2e04/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/737867618b3c92330c42b7bb488eb0ee387f2e04/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=737867618b3c92330c42b7bb488eb0ee387f2e04", "patch": "@@ -887,9 +887,22 @@ fn link_sanitizers(sess: &Session, crate_type: CrateType, linker: &mut dyn Linke\n }\n \n fn link_sanitizer_runtime(sess: &Session, linker: &mut dyn Linker, name: &str) {\n-    let default_sysroot = filesearch::get_or_default_sysroot();\n-    let default_tlib =\n-        filesearch::make_target_lib_path(&default_sysroot, sess.opts.target_triple.triple());\n+    fn find_sanitizer_runtime(sess: &Session, filename: &String) -> PathBuf {\n+        let session_tlib =\n+            filesearch::make_target_lib_path(&sess.sysroot, sess.opts.target_triple.triple());\n+        let path = session_tlib.join(&filename);\n+        if path.exists() {\n+            return session_tlib;\n+        } else {\n+            let default_sysroot = filesearch::get_or_default_sysroot();\n+            let default_tlib = filesearch::make_target_lib_path(\n+                &default_sysroot,\n+                sess.opts.target_triple.triple(),\n+            );\n+            return default_tlib;\n+        }\n+    }\n+\n     let channel = option_env!(\"CFG_RELEASE_CHANNEL\")\n         .map(|channel| format!(\"-{}\", channel))\n         .unwrap_or_default();\n@@ -900,18 +913,19 @@ fn link_sanitizer_runtime(sess: &Session, linker: &mut dyn Linker, name: &str) {\n             // LLVM will link to `@rpath/*.dylib`, so we need to specify an\n             // rpath to the library as well (the rpath should be absolute, see\n             // PR #41352 for details).\n-            let libname = format!(\"rustc{}_rt.{}\", channel, name);\n-            let rpath = default_tlib.to_str().expect(\"non-utf8 component in path\");\n+            let filename = format!(\"rustc{}_rt.{}\", channel, name);\n+            let path = find_sanitizer_runtime(&sess, &filename);\n+            let rpath = path.to_str().expect(\"non-utf8 component in path\");\n             linker.args(&[\"-Wl,-rpath\", \"-Xlinker\", rpath]);\n-            linker.link_dylib(Symbol::intern(&libname));\n+            linker.link_dylib(Symbol::intern(&filename));\n         }\n         \"aarch64-fuchsia\"\n         | \"aarch64-unknown-linux-gnu\"\n         | \"x86_64-fuchsia\"\n         | \"x86_64-unknown-freebsd\"\n         | \"x86_64-unknown-linux-gnu\" => {\n             let filename = format!(\"librustc{}_rt.{}.a\", channel, name);\n-            let path = default_tlib.join(&filename);\n+            let path = find_sanitizer_runtime(&sess, &filename).join(&filename);\n             linker.link_whole_rlib(&path);\n         }\n         _ => {}"}]}