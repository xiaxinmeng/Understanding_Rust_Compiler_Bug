{"sha": "382f1bceb4e2a0496171f52d114a98ff8a86f9b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4MmYxYmNlYjRlMmEwNDk2MTcxZjUyZDExNGE5OGZmOGE4NmY5Yjc=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-09-30T21:08:07Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-10-02T13:36:00Z"}, "message": "core: remove raw::GcBox.", "tree": {"sha": "da16d223a789c24fdf4fd7d0117d541fe20b0643", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da16d223a789c24fdf4fd7d0117d541fe20b0643"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/382f1bceb4e2a0496171f52d114a98ff8a86f9b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/382f1bceb4e2a0496171f52d114a98ff8a86f9b7", "html_url": "https://github.com/rust-lang/rust/commit/382f1bceb4e2a0496171f52d114a98ff8a86f9b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/382f1bceb4e2a0496171f52d114a98ff8a86f9b7/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84a4a07bbd66f9b1a05591d2c1a4964944c47d83", "url": "https://api.github.com/repos/rust-lang/rust/commits/84a4a07bbd66f9b1a05591d2c1a4964944c47d83", "html_url": "https://github.com/rust-lang/rust/commit/84a4a07bbd66f9b1a05591d2c1a4964944c47d83"}], "stats": {"total": 40, "additions": 0, "deletions": 40}, "files": [{"sha": "c31d746d8f2a76b11ed2fff06d729e7aa177da7a", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/382f1bceb4e2a0496171f52d114a98ff8a86f9b7/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/382f1bceb4e2a0496171f52d114a98ff8a86f9b7/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=382f1bceb4e2a0496171f52d114a98ff8a86f9b7", "patch": "@@ -92,7 +92,6 @@ pub use boxed as owned;\n \n pub mod heap;\n pub mod libc_heap;\n-pub mod util;\n \n // Primitive types using the heaps above\n "}, {"sha": "d5f0d25fb01f92a9e64fd85127ffd66ae2806e99", "filename": "src/liballoc/util.rs", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/84a4a07bbd66f9b1a05591d2c1a4964944c47d83/src%2Fliballoc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a4a07bbd66f9b1a05591d2c1a4964944c47d83/src%2Fliballoc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Futil.rs?ref=84a4a07bbd66f9b1a05591d2c1a4964944c47d83", "patch": "@@ -1,30 +0,0 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![doc(hidden)]\n-\n-use core::mem;\n-use core::raw;\n-\n-#[inline]\n-#[deprecated]\n-pub fn get_box_size(body_size: uint, body_align: uint) -> uint {\n-    let header_size = mem::size_of::<raw::GcBox<()>>();\n-    let total_size = align_to(header_size, body_align) + body_size;\n-    total_size\n-}\n-\n-// Rounds size to the next alignment. Alignment is required to be a power of\n-// two.\n-#[inline]\n-fn align_to(size: uint, align: uint) -> uint {\n-    assert!(align != 0);\n-    (size + align - 1) & !(align - 1)\n-}"}, {"sha": "a62e2ecdca0328d9e22b392b7dd7904acbdb986d", "filename": "src/libcore/raw.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/382f1bceb4e2a0496171f52d114a98ff8a86f9b7/src%2Flibcore%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/382f1bceb4e2a0496171f52d114a98ff8a86f9b7/src%2Flibcore%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fraw.rs?ref=382f1bceb4e2a0496171f52d114a98ff8a86f9b7", "patch": "@@ -20,15 +20,6 @@\n \n use mem;\n \n-/// The representation of `std::gc::Gc`.\n-pub struct GcBox<T> {\n-    pub ref_count: uint,\n-    pub drop_glue: fn(ptr: *mut u8),\n-    pub prev: *mut GcBox<T>,\n-    pub next: *mut GcBox<T>,\n-    pub data: T,\n-}\n-\n /// The representation of a Rust slice\n pub struct Slice<T> {\n     pub data: *const T,"}]}