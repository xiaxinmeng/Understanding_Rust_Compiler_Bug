{"sha": "69e0b10150a3a426e7796841156e788c3866b27c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5ZTBiMTAxNTBhM2E0MjZlNzc5Njg0MTE1NmU3ODhjMzg2NmIyN2M=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-13T00:17:41Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-13T00:53:32Z"}, "message": "Return absolute paths in find_path if crate start is ambiguous", "tree": {"sha": "af927b7eb6389ff98d12235e048cb5ff485fe71c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af927b7eb6389ff98d12235e048cb5ff485fe71c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69e0b10150a3a426e7796841156e788c3866b27c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69e0b10150a3a426e7796841156e788c3866b27c", "html_url": "https://github.com/rust-lang/rust/commit/69e0b10150a3a426e7796841156e788c3866b27c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69e0b10150a3a426e7796841156e788c3866b27c/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77f0c92fd8311bccc001ddaf9eb72662d35e9836", "url": "https://api.github.com/repos/rust-lang/rust/commits/77f0c92fd8311bccc001ddaf9eb72662d35e9836", "html_url": "https://github.com/rust-lang/rust/commit/77f0c92fd8311bccc001ddaf9eb72662d35e9836"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "ee52794aa876c2935860ec8068f013cbc00d1544", "filename": "crates/hir_def/src/find_path.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/69e0b10150a3a426e7796841156e788c3866b27c/crates%2Fhir_def%2Fsrc%2Ffind_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69e0b10150a3a426e7796841156e788c3866b27c/crates%2Fhir_def%2Fsrc%2Ffind_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Ffind_path.rs?ref=69e0b10150a3a426e7796841156e788c3866b27c", "patch": "@@ -5,10 +5,10 @@ use std::iter;\n use hir_expand::name::{known, AsName, Name};\n use rustc_hash::FxHashSet;\n \n-use crate::nameres::DefMap;\n use crate::{\n     db::DefDatabase,\n     item_scope::ItemInNs,\n+    nameres::DefMap,\n     path::{ModPath, PathKind},\n     visibility::Visibility,\n     ModuleDefId, ModuleId,\n@@ -134,7 +134,16 @@ fn find_path_inner(\n     for (name, def_id) in root_def_map.extern_prelude() {\n         if item == ItemInNs::Types(*def_id) {\n             let name = scope_name.unwrap_or_else(|| name.clone());\n-            return Some(ModPath::from_segments(PathKind::Plain, vec![name]));\n+\n+            let name_already_occupied_in_type_ns = def_map\n+                .with_ancestor_maps(db, from.local_id, &mut |def_map, local_id| {\n+                    def_map[local_id].scope.get(&name).take_types().filter(|&id| id != *def_id)\n+                })\n+                .is_some();\n+            return Some(ModPath::from_segments(\n+                if name_already_occupied_in_type_ns { PathKind::Abs } else { PathKind::Plain },\n+                vec![name],\n+            ));\n         }\n     }\n "}, {"sha": "506cc292c4124b89cf65a3bfe9a399d9077ff009", "filename": "crates/ide_assists/src/handlers/auto_import.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/69e0b10150a3a426e7796841156e788c3866b27c/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69e0b10150a3a426e7796841156e788c3866b27c/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fauto_import.rs?ref=69e0b10150a3a426e7796841156e788c3866b27c", "patch": "@@ -966,6 +966,32 @@ mod bar {\n         println!(\"Hallo\");\n     }\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn uses_abs_path_with_extern_crate_clash() {\n+        check_assist(\n+            auto_import,\n+            r#\"\n+//- /main.rs crate:main deps:foo\n+mod foo {}\n+\n+const _: () = {\n+    Foo$0\n+};\n+//- /foo.rs crate:foo\n+pub struct Foo\n+\"#,\n+            r#\"\n+use ::foo::Foo;\n+\n+mod foo {}\n+\n+const _: () = {\n+    Foo\n+};\n \"#,\n         );\n     }"}]}