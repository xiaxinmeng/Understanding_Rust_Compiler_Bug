{"sha": "c37e8fae57862383fad43f3201a28b1fb8249904", "node_id": "C_kwDOAAsO6NoAKGMzN2U4ZmFlNTc4NjIzODNmYWQ0M2YzMjAxYTI4YjFmYjgyNDk5MDQ", "commit": {"author": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2022-10-30T20:50:08Z"}, "committer": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2022-11-15T17:30:07Z"}, "message": "generalize str.contains() tests to a range of haystack sizes\n\nThe Big-O is cubic, but this is only called with ~70 chars so it's still fast enough", "tree": {"sha": "f9e28b2eb3b8838cffbedb86f59ff31831780d77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9e28b2eb3b8838cffbedb86f59ff31831780d77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c37e8fae57862383fad43f3201a28b1fb8249904", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c37e8fae57862383fad43f3201a28b1fb8249904", "html_url": "https://github.com/rust-lang/rust/commit/c37e8fae57862383fad43f3201a28b1fb8249904", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c37e8fae57862383fad43f3201a28b1fb8249904/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d4a8482b93313be4d6e8dc62030860fa2fc46ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d4a8482b93313be4d6e8dc62030860fa2fc46ef", "html_url": "https://github.com/rust-lang/rust/commit/3d4a8482b93313be4d6e8dc62030860fa2fc46ef"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "9689196ef21ac78d537ebb9926a249bd3fd331f6", "filename": "library/alloc/tests/str.rs", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c37e8fae57862383fad43f3201a28b1fb8249904/library%2Falloc%2Ftests%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c37e8fae57862383fad43f3201a28b1fb8249904/library%2Falloc%2Ftests%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fstr.rs?ref=c37e8fae57862383fad43f3201a28b1fb8249904", "patch": "@@ -1590,11 +1590,27 @@ fn test_bool_from_str() {\n     assert_eq!(\"not even a boolean\".parse::<bool>().ok(), None);\n }\n \n-fn check_contains_all_substrings(s: &str) {\n-    assert!(s.contains(\"\"));\n-    for i in 0..s.len() {\n-        for j in i + 1..=s.len() {\n-            assert!(s.contains(&s[i..j]));\n+fn check_contains_all_substrings(haystack: &str) {\n+    let mut modified_needle = String::new();\n+\n+    for i in 0..haystack.len() {\n+        // check different haystack lengths since we special-case short haystacks.\n+        let haystack = &haystack[0..i];\n+        assert!(haystack.contains(\"\"));\n+        for j in 0..haystack.len() {\n+            for k in j + 1..=haystack.len() {\n+                let needle = &haystack[j..k];\n+                assert!(haystack.contains(needle));\n+                modified_needle.clear();\n+                modified_needle.push_str(needle);\n+                modified_needle.replace_range(0..1, \"\\0\");\n+                assert!(!haystack.contains(&modified_needle));\n+\n+                modified_needle.clear();\n+                modified_needle.push_str(needle);\n+                modified_needle.replace_range(needle.len() - 1..needle.len(), \"\\0\");\n+                assert!(!haystack.contains(&modified_needle));\n+            }\n         }\n     }\n }"}]}