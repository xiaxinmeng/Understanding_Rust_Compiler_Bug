{"sha": "e6664c06813b25c2edd923a8a69d57ae98b6083f", "node_id": "C_kwDOAAsO6NoAKGU2NjY0YzA2ODEzYjI1YzJlZGQ5MjNhOGE2OWQ1N2FlOThiNjA4M2Y", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-04-21T18:05:24Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-04-21T18:05:45Z"}, "message": "rustdoc: remove unnecessary binding", "tree": {"sha": "9593c88498a3678816fd4a2ee8aa50eb5d4417ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9593c88498a3678816fd4a2ee8aa50eb5d4417ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6664c06813b25c2edd923a8a69d57ae98b6083f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6664c06813b25c2edd923a8a69d57ae98b6083f", "html_url": "https://github.com/rust-lang/rust/commit/e6664c06813b25c2edd923a8a69d57ae98b6083f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6664c06813b25c2edd923a8a69d57ae98b6083f/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b728c1f85dec11fd0e64ad89c7149e119134971", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b728c1f85dec11fd0e64ad89c7149e119134971", "html_url": "https://github.com/rust-lang/rust/commit/2b728c1f85dec11fd0e64ad89c7149e119134971"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "22aec623335e80bcfa0111d0ff0bed881c7f7e05", "filename": "src/librustdoc/html/render/type_layout.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e6664c06813b25c2edd923a8a69d57ae98b6083f/src%2Flibrustdoc%2Fhtml%2Frender%2Ftype_layout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6664c06813b25c2edd923a8a69d57ae98b6083f/src%2Flibrustdoc%2Fhtml%2Frender%2Ftype_layout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Ftype_layout.rs?ref=e6664c06813b25c2edd923a8a69d57ae98b6083f", "patch": "@@ -56,7 +56,7 @@ pub(crate) fn document_type_layout<'a, 'cx: 'a>(\n                     } else {\n                         span_bug!(cx.tcx().def_span(ty_def_id), \"tag is neither niche nor int\")\n                     };\n-                let variants = variants\n+                variants\n                     .iter_enumerated()\n                     .map(|(variant_idx, variant_layout)| {\n                         let Adt(adt, _) = type_layout.ty.kind() else {\n@@ -68,12 +68,11 @@ pub(crate) fn document_type_layout<'a, 'cx: 'a>(\n                         let size = variant_layout.size.bytes() - tag_size;\n                         let type_layout_size = TypeLayoutSize { is_unsized, is_uninhabited, size };\n                         (name, type_layout_size)\n-                    }).collect();\n-                variants\n+                    })\n+                    .collect()\n             } else {\n                 Vec::new()\n-            }\n-        ;\n+            };\n \n         let type_layout_size = tcx.layout_of(param_env.and(ty)).map(|layout| {\n             let is_unsized = layout.abi.is_unsized();"}]}