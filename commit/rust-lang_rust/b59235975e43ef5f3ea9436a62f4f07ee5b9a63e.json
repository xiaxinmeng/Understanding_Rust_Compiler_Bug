{"sha": "b59235975e43ef5f3ea9436a62f4f07ee5b9a63e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1OTIzNTk3NWU0M2VmNWYzZWE5NDM2YTYyZjRmMDdlZTViOWE2M2U=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-09T06:58:48Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-11T06:42:26Z"}, "message": "lints: move a comment", "tree": {"sha": "80ff54024acb2f714aa4461060437f6fe5a525d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80ff54024acb2f714aa4461060437f6fe5a525d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b59235975e43ef5f3ea9436a62f4f07ee5b9a63e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b59235975e43ef5f3ea9436a62f4f07ee5b9a63e", "html_url": "https://github.com/rust-lang/rust/commit/b59235975e43ef5f3ea9436a62f4f07ee5b9a63e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b59235975e43ef5f3ea9436a62f4f07ee5b9a63e/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f58db203623b89e6c9e68d4b9ccb000031825cc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f58db203623b89e6c9e68d4b9ccb000031825cc4", "html_url": "https://github.com/rust-lang/rust/commit/f58db203623b89e6c9e68d4b9ccb000031825cc4"}], "stats": {"total": 46, "additions": 21, "deletions": 25}, "files": [{"sha": "6e3382dee9aae21c91c61c3d03c819d760ba82b0", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b59235975e43ef5f3ea9436a62f4f07ee5b9a63e/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59235975e43ef5f3ea9436a62f4f07ee5b9a63e/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=b59235975e43ef5f3ea9436a62f4f07ee5b9a63e", "patch": "@@ -1,9 +1,25 @@\n-//! # Lints in the Rust compiler\n+//! Lints, aka compiler warnings.\n //!\n-//! This currently only contains the definitions and implementations\n-//! of most of the lints that `rustc` supports directly, it does not\n-//! contain the infrastructure for defining/registering lints. That is\n-//! available in `rustc::lint` and `rustc_driver::plugin` respectively.\n+//! A 'lint' check is a kind of miscellaneous constraint that a user _might_\n+//! want to enforce, but might reasonably want to permit as well, on a\n+//! module-by-module basis. They contrast with static constraints enforced by\n+//! other phases of the compiler, which are generally required to hold in order\n+//! to compile the program at all.\n+//!\n+//! Most lints can be written as `LintPass` instances. These run after\n+//! all other analyses. The `LintPass`es built into rustc are defined\n+//! within `rustc_session::lint::builtin`,\n+//! which has further comments on how to add such a lint.\n+//! rustc can also load user-defined lint plugins via the plugin mechanism.\n+//!\n+//! Some of rustc's lints are defined elsewhere in the compiler and work by\n+//! calling `add_lint()` on the overall `Session` object. This works when\n+//! it happens before the main lint pass, which emits the lints stored by\n+//! `add_lint()`. To emit lints after the main lint pass (from codegen, for\n+//! example) requires more effort. See `emit_lint` and `GatherNodeLevels`\n+//! in `context.rs`.\n+//!\n+//! Some code also exists in `rustc_session::lint`, `rustc::lint`.\n //!\n //! ## Note\n //!"}, {"sha": "7e5d670767ad80de22d057a4efa63ba194456a2d", "filename": "src/librustc_lint/passes.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b59235975e43ef5f3ea9436a62f4f07ee5b9a63e/src%2Flibrustc_lint%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59235975e43ef5f3ea9436a62f4f07ee5b9a63e/src%2Flibrustc_lint%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fpasses.rs?ref=b59235975e43ef5f3ea9436a62f4f07ee5b9a63e", "patch": "@@ -1,23 +1,3 @@\n-//! Lints, aka compiler warnings.\n-//!\n-//! A 'lint' check is a kind of miscellaneous constraint that a user _might_\n-//! want to enforce, but might reasonably want to permit as well, on a\n-//! module-by-module basis. They contrast with static constraints enforced by\n-//! other phases of the compiler, which are generally required to hold in order\n-//! to compile the program at all.\n-//!\n-//! Most lints can be written as `LintPass` instances. These run after\n-//! all other analyses. The `LintPass`es built into rustc are defined\n-//! within `builtin.rs`, which has further comments on how to add such a lint.\n-//! rustc can also load user-defined lint plugins via the plugin mechanism.\n-//!\n-//! Some of rustc's lints are defined elsewhere in the compiler and work by\n-//! calling `add_lint()` on the overall `Session` object. This works when\n-//! it happens before the main lint pass, which emits the lints stored by\n-//! `add_lint()`. To emit lints after the main lint pass (from codegen, for\n-//! example) requires more effort. See `emit_lint` and `GatherNodeLevels`\n-//! in `context.rs`.\n-\n use crate::context::{EarlyContext, LateContext};\n \n use rustc_data_structures::sync;"}]}