{"sha": "bcb90528c06e1e350c77bca5ff2c0929d7f5c8c3", "node_id": "C_kwDOAAsO6NoAKGJjYjkwNTI4YzA2ZTFlMzUwYzc3YmNhNWZmMmMwOTI5ZDdmNWM4YzM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-27T17:49:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-27T17:49:56Z"}, "message": "Auto merge of #107372 - JohnTitor:rollup-zkl2ges, r=JohnTitor\n\nRollup of 9 pull requests\n\nSuccessful merges:\n\n - #106806 (Replace format flags u32 by enums and bools.)\n - #107194 (Remove dependency on slice_internals feature in rustc_ast)\n - #107234 (Revisit fix_is_ci_llvm_available logic)\n - #107316 (Update snap from `1.0.1` to `1.1.0`)\n - #107321 (solver comments + remove `TyCtxt::evaluate_goal`)\n - #107332 (Fix wording from `rustbuild` to `bootstrap`)\n - #107347 (reduce rightward-drift)\n - #107352 (compiler: Fix E0587 explanation)\n - #107357 (Fix infinite loop in rustdoc get_all_import_attributes function)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "da2339ff4200ae2d036ed0b65868a1467e5ac7d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da2339ff4200ae2d036ed0b65868a1467e5ac7d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcb90528c06e1e350c77bca5ff2c0929d7f5c8c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcb90528c06e1e350c77bca5ff2c0929d7f5c8c3", "html_url": "https://github.com/rust-lang/rust/commit/bcb90528c06e1e350c77bca5ff2c0929d7f5c8c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcb90528c06e1e350c77bca5ff2c0929d7f5c8c3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afb586fa1f20a9e444cf861370bf0bc60fd49c78", "url": "https://api.github.com/repos/rust-lang/rust/commits/afb586fa1f20a9e444cf861370bf0bc60fd49c78", "html_url": "https://github.com/rust-lang/rust/commit/afb586fa1f20a9e444cf861370bf0bc60fd49c78"}, {"sha": "b64a20930c57009da999bc280327d63d7ce8e987", "url": "https://api.github.com/repos/rust-lang/rust/commits/b64a20930c57009da999bc280327d63d7ce8e987", "html_url": "https://github.com/rust-lang/rust/commit/b64a20930c57009da999bc280327d63d7ce8e987"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "659063b97e74a3559907622019f3ad85c4e38a5c", "filename": "clippy_utils/src/macros.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bcb90528c06e1e350c77bca5ff2c0929d7f5c8c3/clippy_utils%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcb90528c06e1e350c77bca5ff2c0929d7f5c8c3/clippy_utils%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fmacros.rs?ref=bcb90528c06e1e350c77bca5ff2c0929d7f5c8c3", "patch": "@@ -711,8 +711,8 @@ pub struct FormatSpec<'tcx> {\n     pub fill: Option<char>,\n     /// Optionally specified alignment.\n     pub align: Alignment,\n-    /// Packed version of various flags provided, see [`rustc_parse_format::Flag`].\n-    pub flags: u32,\n+    /// Whether all flag options are set to default (no flags specified).\n+    pub no_flags: bool,\n     /// Represents either the maximum width or the integer precision.\n     pub precision: Count<'tcx>,\n     /// The minimum width, will be padded according to `width`/`align`\n@@ -728,7 +728,7 @@ impl<'tcx> FormatSpec<'tcx> {\n         Some(Self {\n             fill: spec.fill,\n             align: spec.align,\n-            flags: spec.flags,\n+            no_flags: spec.sign.is_none() && !spec.alternate && !spec.zero_pad && spec.debug_hex.is_none(),\n             precision: Count::new(\n                 FormatParamUsage::Precision,\n                 spec.precision,\n@@ -773,7 +773,7 @@ impl<'tcx> FormatSpec<'tcx> {\n         self.width.is_implied()\n             && self.precision.is_implied()\n             && self.align == Alignment::AlignUnknown\n-            && self.flags == 0\n+            && self.no_flags\n     }\n }\n "}]}