{"sha": "ae4803a750cc415a3b8a69a68cec73400a5e27bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNDgwM2E3NTBjYzQxNWEzYjhhNjlhNjhjZWM3MzQwMGE1ZTI3YmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-14T13:14:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-14T13:14:18Z"}, "message": "Auto merge of #43175 - tlively:wasm-split-bots, r=alexcrichton\n\nSplit old and experimental wasm builders\n\n#42784 introduced configuration errors in the wasm builder by mixing different versions of the tools. This PR separates the wasm32-unknown-emscripten and wasm32-experimental-emscripten builders to resolve these errors.", "tree": {"sha": "b9a616a52723bb3d257234e2ba6448a50cdb282f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9a616a52723bb3d257234e2ba6448a50cdb282f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae4803a750cc415a3b8a69a68cec73400a5e27bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae4803a750cc415a3b8a69a68cec73400a5e27bf", "html_url": "https://github.com/rust-lang/rust/commit/ae4803a750cc415a3b8a69a68cec73400a5e27bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae4803a750cc415a3b8a69a68cec73400a5e27bf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20f77c6dfd49aac98f217a313ce399644f56ab54", "url": "https://api.github.com/repos/rust-lang/rust/commits/20f77c6dfd49aac98f217a313ce399644f56ab54", "html_url": "https://github.com/rust-lang/rust/commit/20f77c6dfd49aac98f217a313ce399644f56ab54"}, {"sha": "3bf8116280f96cf1440cc5c47870257078daf3de", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bf8116280f96cf1440cc5c47870257078daf3de", "html_url": "https://github.com/rust-lang/rust/commit/3bf8116280f96cf1440cc5c47870257078daf3de"}], "stats": {"total": 100, "additions": 71, "deletions": 29}, "files": [{"sha": "4e337883165bde37cc16efda240a06d0087b8dbf", "filename": "src/ci/docker/disabled/wasm32-exp/Dockerfile", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/ae4803a750cc415a3b8a69a68cec73400a5e27bf/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32-exp%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ae4803a750cc415a3b8a69a68cec73400a5e27bf/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32-exp%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32-exp%2FDockerfile?ref=ae4803a750cc415a3b8a69a68cec73400a5e27bf", "patch": "@@ -0,0 +1,42 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python \\\n+  git \\\n+  cmake \\\n+  sudo \\\n+  gdb \\\n+  xz-utils \\\n+  jq \\\n+  bzip2\n+\n+# dumb-init\n+COPY scripts/dumb-init.sh /scripts/\n+RUN sh /scripts/dumb-init.sh\n+\n+# emscripten\n+COPY scripts/emscripten-wasm.sh /scripts/\n+COPY disabled/wasm32-exp/node.sh /usr/local/bin/node\n+RUN bash /scripts/emscripten-wasm.sh\n+\n+# cache\n+COPY scripts/sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh\n+\n+# env\n+ENV PATH=/wasm-install/emscripten:/wasm-install/bin:$PATH\n+ENV EM_CONFIG=/root/.emscripten\n+\n+ENV TARGETS=wasm32-experimental-emscripten\n+\n+ENV RUST_CONFIGURE_ARGS --target=$TARGETS --experimental-targets=WebAssembly\n+\n+ENV SCRIPT python2.7 ../x.py test --target $TARGETS\n+\n+# init\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]"}, {"sha": "dfa7f221ffa2022ae0b235b2e4d0ba3c579688f6", "filename": "src/ci/docker/disabled/wasm32-exp/node.sh", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ae4803a750cc415a3b8a69a68cec73400a5e27bf/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32-exp%2Fnode.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ae4803a750cc415a3b8a69a68cec73400a5e27bf/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32-exp%2Fnode.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32-exp%2Fnode.sh?ref=ae4803a750cc415a3b8a69a68cec73400a5e27bf", "patch": "@@ -0,0 +1,18 @@\n+#!/bin/bash\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+path=\"$(dirname $1)\"\n+file=\"$(basename $1)\"\n+\n+shift\n+\n+cd \"$path\"\n+exec /node-v8.0.0-linux-x64/bin/node \"$file\" \"$@\""}, {"sha": "60b15d7afb47dacd1331dda90eca8300a32d1559", "filename": "src/ci/docker/disabled/wasm32/Dockerfile", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ae4803a750cc415a3b8a69a68cec73400a5e27bf/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ae4803a750cc415a3b8a69a68cec73400a5e27bf/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32%2FDockerfile?ref=ae4803a750cc415a3b8a69a68cec73400a5e27bf", "patch": "@@ -11,15 +11,14 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   cmake \\\n   sudo \\\n   gdb \\\n-  xz-utils \\\n-  jq \\\n-  bzip2\n+  xz-utils\n \n COPY scripts/dumb-init.sh /scripts/\n RUN sh /scripts/dumb-init.sh\n \n-COPY scripts/emscripten-wasm.sh /scripts/\n-RUN bash /scripts/emscripten-wasm.sh\n+# emscripten\n+COPY scripts/emscripten.sh /scripts/\n+RUN bash /scripts/emscripten.sh\n COPY disabled/wasm32/node.sh /usr/local/bin/node\n \n COPY scripts/sccache.sh /scripts/\n@@ -32,9 +31,9 @@ ENV EMSCRIPTEN=/emsdk-portable/emscripten/1.37.13/\n ENV BINARYEN_ROOT=/emsdk-portable/clang/e1.37.13_64bit/binaryen/\n ENV EM_CONFIG=/emsdk-portable/.emscripten\n \n-ENV TARGETS=wasm32-unknown-emscripten,wasm32-experimental-emscripten\n+ENV TARGETS=wasm32-unknown-emscripten\n \n-ENV RUST_CONFIGURE_ARGS --target=$TARGETS --experimental-targets=WebAssembly\n+ENV RUST_CONFIGURE_ARGS --target=$TARGETS\n \n ENV SCRIPT python2.7 ../x.py test --target $TARGETS\n "}, {"sha": "0e7da45907fcc61059844e18f3a9d22df92b70f3", "filename": "src/ci/docker/scripts/emscripten-wasm.sh", "status": "modified", "additions": 5, "deletions": 22, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ae4803a750cc415a3b8a69a68cec73400a5e27bf/src%2Fci%2Fdocker%2Fscripts%2Femscripten-wasm.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ae4803a750cc415a3b8a69a68cec73400a5e27bf/src%2Fci%2Fdocker%2Fscripts%2Femscripten-wasm.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Femscripten-wasm.sh?ref=ae4803a750cc415a3b8a69a68cec73400a5e27bf", "patch": "@@ -27,11 +27,6 @@ exit 1\n   set -x\n }\n \n-# Download emsdk\n-cd /\n-curl -L https://s3.amazonaws.com/mozilla-games/emscripten/releases/emsdk-portable.tar.gz | \\\n-    tar -xz\n-\n # Download last known good emscripten from WebAssembly waterfall\n BUILD=$(curl -L https://storage.googleapis.com/wasm-llvm/builds/linux/lkgr.json | \\\n     jq '.build | tonumber')\n@@ -43,22 +38,10 @@ cd /\n curl -L https://nodejs.org/dist/v8.0.0/node-v8.0.0-linux-x64.tar.xz | \\\n     tar -xJ\n \n-cd /emsdk-portable\n-./emsdk update\n-hide_output ./emsdk install sdk-1.37.13-64bit\n-./emsdk activate sdk-1.37.13-64bit\n-\n # Make emscripten use wasm-ready node and LLVM tools\n-echo \"NODE_JS='/node-v8.0.0-linux-x64/bin/node'\" >> /root/.emscripten\n+echo \"EMSCRIPTEN_ROOT = '/wasm-install/emscripten'\" >> /root/.emscripten\n+echo \"NODE_JS='/usr/local/bin/node'\" >> /root/.emscripten\n echo \"LLVM_ROOT='/wasm-install/bin'\" >> /root/.emscripten\n-\n-# Make emsdk usable by any user\n-cp /root/.emscripten /emsdk-portable\n-chmod a+rxw -R /emsdk-portable\n-\n-# Compile and cache libc\n-source ./emsdk_env.sh\n-echo \"main(){}\" > a.c\n-HOME=/emsdk-portable/ emcc a.c\n-HOME=/emsdk-portable/ emcc -s WASM=1 a.c\n-rm -f a.*\n+echo \"BINARYEN_ROOT = '/wasm-install'\" >> /root/.emscripten\n+echo \"COMPILER_ENGINE = NODE_JS\" >> /root/.emscripten\n+echo \"JS_ENGINES = [NODE_JS]\" >> /root/.emscripten"}]}