{"sha": "0d755ff6723284bfb0f9e9b3d1ab932ae10c97d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkNzU1ZmY2NzIzMjg0YmZiMGY5ZTliM2QxYWI5MzJhZTEwYzk3ZDM=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-29T19:01:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-29T19:01:33Z"}, "message": "Rollup merge of #65539 - traxys:fix_62334, r=petrochenkov\n\nresolve: Turn the \"non-empty glob must import something\" error into a lint\n\nThis fixes #62334 by changing the error to a lint warning the glob. I changed the test but I'm very unsure of what I did as I do not know how to correctly check for the warning", "tree": {"sha": "9f0302ad8b0e6bf62e686509be93687bfe667ed5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f0302ad8b0e6bf62e686509be93687bfe667ed5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d755ff6723284bfb0f9e9b3d1ab932ae10c97d3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJduIyOCRBK7hj4Ov3rIwAAdHIIABgh22Em9HKVZPnCytTLxf60\nRBx/COLYos+mzhCrt/F5HH/rQzV2byKfZ55hvj90qHlMkMLYilXyVPHSu/zd51/4\nsVMZlXLVR6rJX6ZfeeeRgdlEyMGmtvt5M+wGnmy4RjfbKZf52pR1Ecyd+4p4ezIV\nOaq1QTbizr7WjI1QGiLL5KJxS9sfKvXUW8ARM24BtowqCaye4ExS7xOKdqz99HFx\nVYUAPRRcuA70Aol5CQ9QEM+oVEPgAqMUersMh33QXklDMlGZZZquD/WWiv15Xfqg\nFa12Fjod6M81fDCBZprFsJ0Araw82Q17mYpPshgRhb6wAg0geDznzz5l6ABmvJs=\n=wzTf\n-----END PGP SIGNATURE-----\n", "payload": "tree 9f0302ad8b0e6bf62e686509be93687bfe667ed5\nparent 3f50a0dec89d1ae06b83ab4a1d9df0fadf5d6458\nparent ed8585ffb5a6d82cb12eff263cd0466ef3f79e36\nauthor Tyler Mandry <tmandry@gmail.com> 1572375693 -0700\ncommitter GitHub <noreply@github.com> 1572375693 -0700\n\nRollup merge of #65539 - traxys:fix_62334, r=petrochenkov\n\nresolve: Turn the \"non-empty glob must import something\" error into a lint\n\nThis fixes #62334 by changing the error to a lint warning the glob. I changed the test but I'm very unsure of what I did as I do not know how to correctly check for the warning\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d755ff6723284bfb0f9e9b3d1ab932ae10c97d3", "html_url": "https://github.com/rust-lang/rust/commit/0d755ff6723284bfb0f9e9b3d1ab932ae10c97d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d755ff6723284bfb0f9e9b3d1ab932ae10c97d3/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f50a0dec89d1ae06b83ab4a1d9df0fadf5d6458", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f50a0dec89d1ae06b83ab4a1d9df0fadf5d6458", "html_url": "https://github.com/rust-lang/rust/commit/3f50a0dec89d1ae06b83ab4a1d9df0fadf5d6458"}, {"sha": "ed8585ffb5a6d82cb12eff263cd0466ef3f79e36", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed8585ffb5a6d82cb12eff263cd0466ef3f79e36", "html_url": "https://github.com/rust-lang/rust/commit/ed8585ffb5a6d82cb12eff263cd0466ef3f79e36"}], "stats": {"total": 42, "additions": 27, "deletions": 15}, "files": [{"sha": "03ff8ba7dc158660cc1011f6a126cd9f445fe1bb", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0d755ff6723284bfb0f9e9b3d1ab932ae10c97d3/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d755ff6723284bfb0f9e9b3d1ab932ae10c97d3/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=0d755ff6723284bfb0f9e9b3d1ab932ae10c97d3", "patch": "@@ -977,8 +977,9 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n                 if !is_prelude &&\n                    max_vis.get() != ty::Visibility::Invisible && // Allow empty globs.\n                    !max_vis.get().is_at_least(directive.vis.get(), &*self) {\n-                    let msg = \"A non-empty glob must import something with the glob's visibility\";\n-                    self.r.session.span_err(directive.span, msg);\n+                    let msg =\n+                    \"glob import doesn't reexport anything because no candidate is public enough\";\n+                    self.r.session.buffer_lint(UNUSED_IMPORTS, directive.id, directive.span, msg);\n                 }\n                 return None;\n             }"}, {"sha": "d76cc41be4e5558bb1eae991c8edb866fef9a4b5", "filename": "src/test/ui/imports/reexports.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0d755ff6723284bfb0f9e9b3d1ab932ae10c97d3/src%2Ftest%2Fui%2Fimports%2Freexports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d755ff6723284bfb0f9e9b3d1ab932ae10c97d3/src%2Ftest%2Fui%2Fimports%2Freexports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Freexports.rs?ref=0d755ff6723284bfb0f9e9b3d1ab932ae10c97d3", "patch": "@@ -1,16 +1,21 @@\n+#![warn(unused_imports)]\n+\n mod a {\n     fn foo() {}\n     mod foo {}\n \n     mod a {\n         pub use super::foo; //~ ERROR cannot be re-exported\n-        pub use super::*; //~ ERROR must import something with the glob's visibility\n+        pub use super::*;\n+        //~^ WARNING glob import doesn't reexport anything because no candidate is public enough\n     }\n }\n \n mod b {\n     pub fn foo() {}\n-    mod foo { pub struct S; }\n+    mod foo {\n+        pub struct S;\n+    }\n \n     pub mod a {\n         pub use super::foo; // This is OK since the value `foo` is visible enough."}, {"sha": "4388e2c276b8ebbda2cc938f14eee86f1ce75251", "filename": "src/test/ui/imports/reexports.stderr", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/0d755ff6723284bfb0f9e9b3d1ab932ae10c97d3/src%2Ftest%2Fui%2Fimports%2Freexports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d755ff6723284bfb0f9e9b3d1ab932ae10c97d3/src%2Ftest%2Fui%2Fimports%2Freexports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Freexports.stderr?ref=0d755ff6723284bfb0f9e9b3d1ab932ae10c97d3", "patch": "@@ -1,34 +1,40 @@\n error[E0364]: `foo` is private, and cannot be re-exported\n-  --> $DIR/reexports.rs:6:17\n+  --> $DIR/reexports.rs:8:17\n    |\n LL |         pub use super::foo;\n    |                 ^^^^^^^^^^\n    |\n note: consider marking `foo` as `pub` in the imported module\n-  --> $DIR/reexports.rs:6:17\n+  --> $DIR/reexports.rs:8:17\n    |\n LL |         pub use super::foo;\n    |                 ^^^^^^^^^^\n \n-error: A non-empty glob must import something with the glob's visibility\n-  --> $DIR/reexports.rs:7:17\n-   |\n-LL |         pub use super::*;\n-   |                 ^^^^^^^^\n-\n error[E0603]: module `foo` is private\n-  --> $DIR/reexports.rs:28:15\n+  --> $DIR/reexports.rs:33:15\n    |\n LL |     use b::a::foo::S;\n    |               ^^^\n \n error[E0603]: module `foo` is private\n-  --> $DIR/reexports.rs:29:15\n+  --> $DIR/reexports.rs:34:15\n    |\n LL |     use b::b::foo::S as T;\n    |               ^^^\n \n-error: aborting due to 4 previous errors\n+warning: glob import doesn't reexport anything because no candidate is public enough\n+  --> $DIR/reexports.rs:9:17\n+   |\n+LL |         pub use super::*;\n+   |                 ^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/reexports.rs:1:9\n+   |\n+LL | #![warn(unused_imports)]\n+   |         ^^^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n \n Some errors have detailed explanations: E0364, E0603.\n For more information about an error, try `rustc --explain E0364`."}]}