{"sha": "6b52a1162eff2469c0da88300577863e5cc0c78f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiNTJhMTE2MmVmZjI0NjljMGRhODgzMDA1Nzc4NjNlNWNjMGM3OGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-28T08:47:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-28T08:47:29Z"}, "message": "Auto merge of #42931 - arielb1:statement-visitor, r=eddyb\n\nre-add the call to `super_statement` in EraseRegions\n\nThe move gathering code is sensitive to type-equality - that is rather\nun-robust and I plan to fix it eventually, but that's a more invasive\nchange. And we want to fix the visitor anyway.\n\nFixes #42903.\n\nr? @eddyb", "tree": {"sha": "a76bffcb21a36e526d1e466b98c157bf06df0855", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a76bffcb21a36e526d1e466b98c157bf06df0855"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b52a1162eff2469c0da88300577863e5cc0c78f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b52a1162eff2469c0da88300577863e5cc0c78f", "html_url": "https://github.com/rust-lang/rust/commit/6b52a1162eff2469c0da88300577863e5cc0c78f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b52a1162eff2469c0da88300577863e5cc0c78f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bc89416388f0a852f6e48542bf2fc021682fcb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bc89416388f0a852f6e48542bf2fc021682fcb5", "html_url": "https://github.com/rust-lang/rust/commit/5bc89416388f0a852f6e48542bf2fc021682fcb5"}, {"sha": "71abfa7b913d79c7ff5a3cc32e2988d1aac86480", "url": "https://api.github.com/repos/rust-lang/rust/commits/71abfa7b913d79c7ff5a3cc32e2988d1aac86480", "html_url": "https://github.com/rust-lang/rust/commit/71abfa7b913d79c7ff5a3cc32e2988d1aac86480"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "eb283df869f127197e6a3948cca892ba9cde32b2", "filename": "src/librustc_mir/transform/erase_regions.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6b52a1162eff2469c0da88300577863e5cc0c78f/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b52a1162eff2469c0da88300577863e5cc0c78f/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs?ref=6b52a1162eff2469c0da88300577863e5cc0c78f", "patch": "@@ -67,12 +67,13 @@ impl<'a, 'tcx> MutVisitor<'tcx> for EraseRegionsVisitor<'a, 'tcx> {\n     }\n \n     fn visit_statement(&mut self,\n-                       _block: BasicBlock,\n+                       block: BasicBlock,\n                        statement: &mut Statement<'tcx>,\n-                       _location: Location) {\n+                       location: Location) {\n         if let StatementKind::EndRegion(_) = statement.kind {\n             statement.kind = StatementKind::Nop;\n         }\n+        self.super_statement(block, statement, location);\n     }\n }\n "}, {"sha": "bdcd3eecc696a6ffdc35805aeedc9ce21cdb3101", "filename": "src/test/run-pass/dynamic-drop.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6b52a1162eff2469c0da88300577863e5cc0c78f/src%2Ftest%2Frun-pass%2Fdynamic-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b52a1162eff2469c0da88300577863e5cc0c78f/src%2Ftest%2Frun-pass%2Fdynamic-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdynamic-drop.rs?ref=6b52a1162eff2469c0da88300577863e5cc0c78f", "patch": "@@ -106,6 +106,18 @@ fn struct_dynamic_drop(a: &Allocator, c0: bool, c1: bool, c: bool) {\n     }\n }\n \n+fn field_assignment(a: &Allocator, c0: bool) {\n+    let mut x = (TwoPtrs(a.alloc(), a.alloc()), a.alloc());\n+\n+    x.1 = a.alloc();\n+    x.1 = a.alloc();\n+\n+    let f = (x.0).0;\n+    if c0 {\n+        (x.0).0 = f;\n+    }\n+}\n+\n fn assignment2(a: &Allocator, c0: bool, c1: bool) {\n     let mut _v = a.alloc();\n     let mut _w = a.alloc();\n@@ -207,5 +219,8 @@ fn main() {\n     run_test(|a| struct_dynamic_drop(a, true, true, false));\n     run_test(|a| struct_dynamic_drop(a, true, true, true));\n \n+    run_test(|a| field_assignment(a, false));\n+    run_test(|a| field_assignment(a, true));\n+\n     run_test_nopanic(|a| union1(a));\n }"}]}