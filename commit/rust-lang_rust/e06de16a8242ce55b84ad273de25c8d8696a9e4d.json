{"sha": "e06de16a8242ce55b84ad273de25c8d8696a9e4d", "node_id": "C_kwDOAAsO6NoAKGUwNmRlMTZhODI0MmNlNTViODRhZDI3M2RlMjVjOGQ4Njk2YTllNGQ", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-11-19T23:03:22Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-04-06T08:34:17Z"}, "message": "Add miri tests for terminate terminator", "tree": {"sha": "ac67e485ca88bda9487555bc899198f0405624f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac67e485ca88bda9487555bc899198f0405624f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e06de16a8242ce55b84ad273de25c8d8696a9e4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e06de16a8242ce55b84ad273de25c8d8696a9e4d", "html_url": "https://github.com/rust-lang/rust/commit/e06de16a8242ce55b84ad273de25c8d8696a9e4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e06de16a8242ce55b84ad273de25c8d8696a9e4d/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a9d710d999e629c064908076420635096eb39de", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a9d710d999e629c064908076420635096eb39de", "html_url": "https://github.com/rust-lang/rust/commit/2a9d710d999e629c064908076420635096eb39de"}], "stats": {"total": 62, "additions": 58, "deletions": 4}, "files": [{"sha": "f4931659fc82ad906dfda10553f84b087af1abdf", "filename": "src/tools/miri/tests/fail/terminate-terminator.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e06de16a8242ce55b84ad273de25c8d8696a9e4d/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fterminate-terminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e06de16a8242ce55b84ad273de25c8d8696a9e4d/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fterminate-terminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fterminate-terminator.rs?ref=e06de16a8242ce55b84ad273de25c8d8696a9e4d", "patch": "@@ -0,0 +1,27 @@\n+//@compile-flags: -Zmir-opt-level=3\n+// Enable MIR inlining to ensure that `TerminatorKind::Terminate` is generated\n+// instead of just `UnwindAction::Terminate`.\n+\n+#![feature(c_unwind)]\n+\n+struct Foo;\n+\n+impl Drop for Foo {\n+    fn drop(&mut self) {}\n+}\n+\n+#[inline(always)]\n+fn has_cleanup() {\n+    //~^ ERROR: panic in a function that cannot unwind\n+    // FIXME(nbdd0121): The error should be reported at the call site.\n+    let _f = Foo;\n+    panic!();\n+}\n+\n+extern \"C\" fn panic_abort() {\n+    has_cleanup();\n+}\n+\n+fn main() {\n+    panic_abort();\n+}"}, {"sha": "3befd83007bfd0e59e56d49ed272ca0db1ce9585", "filename": "src/tools/miri/tests/fail/terminate-terminator.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e06de16a8242ce55b84ad273de25c8d8696a9e4d/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fterminate-terminator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e06de16a8242ce55b84ad273de25c8d8696a9e4d/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fterminate-terminator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fterminate-terminator.stderr?ref=e06de16a8242ce55b84ad273de25c8d8696a9e4d", "patch": "@@ -0,0 +1,27 @@\n+thread 'main' panicked at 'explicit panic', $DIR/terminate-terminator.rs:LL:CC\n+note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n+error: abnormal termination: panic in a function that cannot unwind\n+  --> $DIR/terminate-terminator.rs:LL:CC\n+   |\n+LL | / fn has_cleanup() {\n+LL | |\n+LL | |     // FIXME(nbdd0121): The error should be reported at the call site.\n+LL | |     let _f = Foo;\n+LL | |     panic!();\n+LL | | }\n+   | |_^ panic in a function that cannot unwind\n+...\n+LL |       has_cleanup();\n+   |       ------------- in this inlined function call\n+   |\n+   = note: inside `panic_abort` at $DIR/terminate-terminator.rs:LL:CC\n+note: inside `main`\n+  --> $DIR/terminate-terminator.rs:LL:CC\n+   |\n+LL |     panic_abort();\n+   |     ^^^^^^^^^^^^^\n+\n+note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n+\n+error: aborting due to previous error\n+"}, {"sha": "876b9a9ab0abc154b70a137e49dd9678fe755fa7", "filename": "src/tools/miri/tests/fail/unwind-action-terminate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e06de16a8242ce55b84ad273de25c8d8696a9e4d/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funwind-action-terminate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e06de16a8242ce55b84ad273de25c8d8696a9e4d/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funwind-action-terminate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funwind-action-terminate.rs?ref=e06de16a8242ce55b84ad273de25c8d8696a9e4d", "previous_filename": "src/tools/miri/tests/fail/abort-terminator.rs"}, {"sha": "52a1879cb5fef81d3bdf84fac2e44bb633629b73", "filename": "src/tools/miri/tests/fail/unwind-action-terminate.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e06de16a8242ce55b84ad273de25c8d8696a9e4d/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funwind-action-terminate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e06de16a8242ce55b84ad273de25c8d8696a9e4d/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funwind-action-terminate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Funwind-action-terminate.stderr?ref=e06de16a8242ce55b84ad273de25c8d8696a9e4d", "patch": "@@ -1,17 +1,17 @@\n-thread 'main' panicked at 'explicit panic', $DIR/abort-terminator.rs:LL:CC\n+thread 'main' panicked at 'explicit panic', $DIR/unwind-action-terminate.rs:LL:CC\n note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n error: abnormal termination: panic in a function that cannot unwind\n-  --> $DIR/abort-terminator.rs:LL:CC\n+  --> $DIR/unwind-action-terminate.rs:LL:CC\n    |\n LL | / extern \"C\" fn panic_abort() {\n LL | |\n LL | |     panic!()\n LL | | }\n    | |_^ panic in a function that cannot unwind\n    |\n-   = note: inside `panic_abort` at $DIR/abort-terminator.rs:LL:CC\n+   = note: inside `panic_abort` at $DIR/unwind-action-terminate.rs:LL:CC\n note: inside `main`\n-  --> $DIR/abort-terminator.rs:LL:CC\n+  --> $DIR/unwind-action-terminate.rs:LL:CC\n    |\n LL |     panic_abort();\n    |     ^^^^^^^^^^^^^", "previous_filename": "src/tools/miri/tests/fail/abort-terminator.stderr"}]}