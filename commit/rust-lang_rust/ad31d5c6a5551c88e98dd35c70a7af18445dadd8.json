{"sha": "ad31d5c6a5551c88e98dd35c70a7af18445dadd8", "node_id": "C_kwDOAAsO6NoAKGFkMzFkNWM2YTU1NTFjODhlOThkZDM1YzcwYTdhZjE4NDQ1ZGFkZDg", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-07-22T06:23:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-22T06:23:39Z"}, "message": "Rollup merge of #98174 - Kixunil:rename_ptr_as_mut_const_to_cast, r=scottmcm\n\nRename `<*{mut,const} T>::as_{const,mut}` to `cast_`\n\nThis renames the methods to use the `cast_` prefix instead of `as_` to\nmake it more readable and avoid confusion with `<*mut T>::as_mut()`\nwhich is `unsafe` and returns a reference.\n\nSorry, didn't notice ACP process exists, opened https://github.com/rust-lang/libs-team/issues/51\n\nSee #92675", "tree": {"sha": "a81f25b6055b037dcf0852eaba79573ae7cbbfd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a81f25b6055b037dcf0852eaba79573ae7cbbfd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad31d5c6a5551c88e98dd35c70a7af18445dadd8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi2kJrCRBK7hj4Ov3rIwAAvMwIABHJQxJoQ4FZsS6J1IoPs5/g\noLXAdbnU5FOMFg7AVf4wGXcr9LGKL6OUcwnCLBgtStncL8waHChi7RiHuCMrVet0\nKtoy4AGKBjiB9kdh2G5YmpxFH3JUfAlDBsccmRwyryVu0GDLqBxGrqAL5OW39sdf\nYSaqivn3Mfe5tlM5E5RWY6FFQ4irRucV+maf60ACzYBPDWSo3PnqNKb2eYeha4Q0\nV2YGBHjlvkCkvLj7MdMwxprg9Ad6eMihpTtE00P8ywLC/gLTCdd+Eh9WpN3jHd1j\nJHXi1LzmdozLBn6jn4JjkiBkRpTDrcITyXZ1ZbpeDOR3llF3qS1UOON3NUt5WwQ=\n=ayxA\n-----END PGP SIGNATURE-----\n", "payload": "tree a81f25b6055b037dcf0852eaba79573ae7cbbfd3\nparent aa0189170057a6b56f445f05b9840caf6f260212\nparent eb5acc9b9b520092cc667a810a18498b28d052ab\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1658471019 +0530\ncommitter GitHub <noreply@github.com> 1658471019 +0530\n\nRollup merge of #98174 - Kixunil:rename_ptr_as_mut_const_to_cast, r=scottmcm\n\nRename `<*{mut,const} T>::as_{const,mut}` to `cast_`\n\nThis renames the methods to use the `cast_` prefix instead of `as_` to\nmake it more readable and avoid confusion with `<*mut T>::as_mut()`\nwhich is `unsafe` and returns a reference.\n\nSorry, didn't notice ACP process exists, opened https://github.com/rust-lang/libs-team/issues/51\n\nSee #92675\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad31d5c6a5551c88e98dd35c70a7af18445dadd8", "html_url": "https://github.com/rust-lang/rust/commit/ad31d5c6a5551c88e98dd35c70a7af18445dadd8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad31d5c6a5551c88e98dd35c70a7af18445dadd8/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa0189170057a6b56f445f05b9840caf6f260212", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa0189170057a6b56f445f05b9840caf6f260212", "html_url": "https://github.com/rust-lang/rust/commit/aa0189170057a6b56f445f05b9840caf6f260212"}, {"sha": "eb5acc9b9b520092cc667a810a18498b28d052ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb5acc9b9b520092cc667a810a18498b28d052ab", "html_url": "https://github.com/rust-lang/rust/commit/eb5acc9b9b520092cc667a810a18498b28d052ab"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "55f781ce0222a3d634cf0c72fa30d512c7e128fb", "filename": "library/core/src/ptr/const_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ad31d5c6a5551c88e98dd35c70a7af18445dadd8/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad31d5c6a5551c88e98dd35c70a7af18445dadd8/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs?ref=ad31d5c6a5551c88e98dd35c70a7af18445dadd8", "patch": "@@ -97,7 +97,7 @@ impl<T: ?Sized> *const T {\n     /// refactored.\n     #[unstable(feature = \"ptr_const_cast\", issue = \"92675\")]\n     #[rustc_const_unstable(feature = \"ptr_const_cast\", issue = \"92675\")]\n-    pub const fn as_mut(self) -> *mut T {\n+    pub const fn cast_mut(self) -> *mut T {\n         self as _\n     }\n "}, {"sha": "27e8b20b3c52d23b2832abf086044d606d5b0eb9", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ad31d5c6a5551c88e98dd35c70a7af18445dadd8/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad31d5c6a5551c88e98dd35c70a7af18445dadd8/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=ad31d5c6a5551c88e98dd35c70a7af18445dadd8", "patch": "@@ -96,11 +96,13 @@ impl<T: ?Sized> *mut T {\n     /// refactored.\n     ///\n     /// While not strictly required (`*mut T` coerces to `*const T`), this is provided for symmetry\n-    /// with `as_mut()` on `*const T` and may have documentation value if used instead of implicit\n+    /// with [`cast_mut`] on `*const T` and may have documentation value if used instead of implicit\n     /// coercion.\n+    ///\n+    /// [`cast_mut`]: #method.cast_mut\n     #[unstable(feature = \"ptr_const_cast\", issue = \"92675\")]\n     #[rustc_const_unstable(feature = \"ptr_const_cast\", issue = \"92675\")]\n-    pub const fn as_const(self) -> *const T {\n+    pub const fn cast_const(self) -> *const T {\n         self as _\n     }\n \n@@ -289,7 +291,7 @@ impl<T: ?Sized> *mut T {\n     /// For the mutable counterpart see [`as_mut`].\n     ///\n     /// [`as_uninit_ref`]: #method.as_uninit_ref-1\n-    /// [`as_mut`]: #method.as_mut-1\n+    /// [`as_mut`]: #method.as_mut\n     ///\n     /// # Safety\n     ///"}]}