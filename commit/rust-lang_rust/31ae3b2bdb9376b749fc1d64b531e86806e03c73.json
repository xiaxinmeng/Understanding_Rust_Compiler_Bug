{"sha": "31ae3b2bdb9376b749fc1d64b531e86806e03c73", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxYWUzYjJiZGI5Mzc2Yjc0OWZjMWQ2NGI1MzFlODY4MDZlMDNjNzM=", "commit": {"author": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2021-04-28T14:18:52Z"}, "committer": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2021-04-28T14:18:52Z"}, "message": "Add HAS_RE_LATE_BOUND if there are bound vars", "tree": {"sha": "167b4e70edad00d0c4696c4a90232290e3bc34e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/167b4e70edad00d0c4696c4a90232290e3bc34e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31ae3b2bdb9376b749fc1d64b531e86806e03c73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31ae3b2bdb9376b749fc1d64b531e86806e03c73", "html_url": "https://github.com/rust-lang/rust/commit/31ae3b2bdb9376b749fc1d64b531e86806e03c73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31ae3b2bdb9376b749fc1d64b531e86806e03c73/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1919b3f22706fee0b2c6ac3d42316545900b7734", "url": "https://api.github.com/repos/rust-lang/rust/commits/1919b3f22706fee0b2c6ac3d42316545900b7734", "html_url": "https://github.com/rust-lang/rust/commit/1919b3f22706fee0b2c6ac3d42316545900b7734"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "92288c89827447ef0f6158b9450da7822c127952", "filename": "compiler/rustc_middle/src/ty/flags.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/31ae3b2bdb9376b749fc1d64b531e86806e03c73/compiler%2Frustc_middle%2Fsrc%2Fty%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31ae3b2bdb9376b749fc1d64b531e86806e03c73/compiler%2Frustc_middle%2Fsrc%2Fty%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fflags.rs?ref=31ae3b2bdb9376b749fc1d64b531e86806e03c73", "patch": "@@ -59,6 +59,10 @@ impl FlagComputation {\n     {\n         let mut computation = FlagComputation::new();\n \n+        if !value.bound_vars().is_empty() {\n+            computation.flags = computation.flags | TypeFlags::HAS_RE_LATE_BOUND;\n+        }\n+\n         f(&mut computation, value.skip_binder());\n \n         self.add_flags(computation.flags);"}, {"sha": "c496a3556c84e2b1647afd42d2b6250b6ceae2fc", "filename": "src/test/ui/lifetimes/issue-83737-erasing-bound-vars.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/31ae3b2bdb9376b749fc1d64b531e86806e03c73/src%2Ftest%2Fui%2Flifetimes%2Fissue-83737-erasing-bound-vars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31ae3b2bdb9376b749fc1d64b531e86806e03c73/src%2Ftest%2Fui%2Flifetimes%2Fissue-83737-erasing-bound-vars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fissue-83737-erasing-bound-vars.rs?ref=31ae3b2bdb9376b749fc1d64b531e86806e03c73", "patch": "@@ -0,0 +1,14 @@\n+// build-pass\n+// compile-flags: --edition 2018\n+// compile-flags: --crate-type rlib\n+\n+use std::future::Future;\n+\n+async fn handle<F>(slf: &F)\n+where\n+    F: Fn(&()) -> Box<dyn for<'a> Future<Output = ()> + Unpin>,\n+{\n+    (slf)(&()).await;\n+}\n+\n+fn main() {}"}, {"sha": "df8368da0a09a0a1fcab45e6ffce638f487492cf", "filename": "src/test/ui/lifetimes/issue-84604.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/31ae3b2bdb9376b749fc1d64b531e86806e03c73/src%2Ftest%2Fui%2Flifetimes%2Fissue-84604.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31ae3b2bdb9376b749fc1d64b531e86806e03c73/src%2Ftest%2Fui%2Flifetimes%2Fissue-84604.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fissue-84604.rs?ref=31ae3b2bdb9376b749fc1d64b531e86806e03c73", "patch": "@@ -0,0 +1,9 @@\n+// run-pass\n+// compile-flags: -Zsymbol-mangling-version=v0\n+\n+pub fn f<T: ?Sized>() {}\n+pub trait Frob<T: ?Sized> {}\n+fn main() {\n+    f::<dyn Frob<str>>();\n+    f::<dyn for<'a> Frob<str>>();\n+}"}]}