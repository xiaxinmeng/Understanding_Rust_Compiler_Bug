{"sha": "1fd22fc34e52fa2c59b5acad216732cf774a87be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmZDIyZmMzNGU1MmZhMmM1OWI1YWNhZDIxNjczMmNmNzc0YTg3YmU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-09-15T23:30:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-15T23:30:44Z"}, "message": "Rollup merge of #76689 - jyn514:update-pulldown, r=GuillaumeGomez\n\nUpgrade to pulldown-cmark 0.8.0\n\nThanks to marcusklaas' hard work in https://github.com/raphlinus/pulldown-cmark/pull/469, this fixes a lot of rustdoc bugs!\n\n- Get rid of unnecessary `RefCell`\n- Fix duplicate warnings for broken implicit reference link\n- Remove unnecessary copy of links\n\nCloses https://github.com/rust-lang/rust/issues/73264, closes https://github.com/rust-lang/rust/issues/76687.\nr? @euclio\n\nI'm not sure if the switch away from `locate` fixes any open bugs - euclio mentioned some in https://github.com/raphlinus/pulldown-cmark/issues/165, but I didn't see any related issues open for rustdoc. Let me know if I missed one.", "tree": {"sha": "e5b13e9923b71f9066385c71cb5875e52759537c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5b13e9923b71f9066385c71cb5875e52759537c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fd22fc34e52fa2c59b5acad216732cf774a87be", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfYU6kCRBK7hj4Ov3rIwAAdHIIAGgF0R7QDLyfEOy4EEo6Qmbz\n8wk4VHI29efFNXrSmfFJzJOLaiy79wA8TW/r7eM9cKBB1unk0ehGrRc4GDbzOJFs\nv0WqSF2ZzKwlMI6KqJs2zp8Jq9D4ilNvFd6vw3+V0cMyaVQ3Vz0Q8D7ktuRwmVCQ\nNYmg6fYQLJEliStJO+trWHyaCTfevnS87tzXb6z4pTz2T5UcrUkGeux11k8iJXJd\nudQ8LjyOkwHZ5Z55JADTe7HMFjUumbd2P/iFTSzNe7hfGtQl+rifh7GaXqyNrpvU\ndh0t/hVFZwWy/kYqVIpYEQ4dwC+1fjVmnXgyDJg9kiey6fUrJbap6mScaJCl5mc=\n=le/t\n-----END PGP SIGNATURE-----\n", "payload": "tree e5b13e9923b71f9066385c71cb5875e52759537c\nparent 69ac07608e5f6b2e7608108a0665ead8df5da88e\nparent 6f2e1c65933702186cc681a3772862afa77dd632\nauthor Dylan DPC <dylan.dpc@gmail.com> 1600212644 +0200\ncommitter GitHub <noreply@github.com> 1600212644 +0200\n\nRollup merge of #76689 - jyn514:update-pulldown, r=GuillaumeGomez\n\nUpgrade to pulldown-cmark 0.8.0\n\nThanks to marcusklaas' hard work in https://github.com/raphlinus/pulldown-cmark/pull/469, this fixes a lot of rustdoc bugs!\n\n- Get rid of unnecessary `RefCell`\n- Fix duplicate warnings for broken implicit reference link\n- Remove unnecessary copy of links\n\nCloses https://github.com/rust-lang/rust/issues/73264, closes https://github.com/rust-lang/rust/issues/76687.\nr? @euclio\n\nI'm not sure if the switch away from `locate` fixes any open bugs - euclio mentioned some in https://github.com/raphlinus/pulldown-cmark/issues/165, but I didn't see any related issues open for rustdoc. Let me know if I missed one.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fd22fc34e52fa2c59b5acad216732cf774a87be", "html_url": "https://github.com/rust-lang/rust/commit/1fd22fc34e52fa2c59b5acad216732cf774a87be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fd22fc34e52fa2c59b5acad216732cf774a87be/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69ac07608e5f6b2e7608108a0665ead8df5da88e", "url": "https://api.github.com/repos/rust-lang/rust/commits/69ac07608e5f6b2e7608108a0665ead8df5da88e", "html_url": "https://github.com/rust-lang/rust/commit/69ac07608e5f6b2e7608108a0665ead8df5da88e"}, {"sha": "6f2e1c65933702186cc681a3772862afa77dd632", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f2e1c65933702186cc681a3772862afa77dd632", "html_url": "https://github.com/rust-lang/rust/commit/6f2e1c65933702186cc681a3772862afa77dd632"}], "stats": {"total": 72, "additions": 52, "deletions": 20}, "files": [{"sha": "d3f777bc663ddd250b9d13cf6f2ea5d0bbf33a0c", "filename": "Cargo.lock", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1fd22fc34e52fa2c59b5acad216732cf774a87be/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/1fd22fc34e52fa2c59b5acad216732cf774a87be/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=1fd22fc34e52fa2c59b5acad216732cf774a87be", "patch": "@@ -534,7 +534,7 @@ dependencies = [\n  \"if_chain\",\n  \"itertools 0.9.0\",\n  \"lazy_static\",\n- \"pulldown-cmark\",\n+ \"pulldown-cmark 0.7.2\",\n  \"quine-mc_cluskey\",\n  \"quote\",\n  \"regex-syntax\",\n@@ -1853,7 +1853,7 @@ dependencies = [\n  \"log\",\n  \"memchr\",\n  \"open\",\n- \"pulldown-cmark\",\n+ \"pulldown-cmark 0.7.2\",\n  \"regex\",\n  \"serde\",\n  \"serde_derive\",\n@@ -2511,6 +2511,17 @@ dependencies = [\n  \"unicase\",\n ]\n \n+[[package]]\n+name = \"pulldown-cmark\"\n+version = \"0.8.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"ffade02495f22453cd593159ea2f59827aae7f53fa8323f756799b670881dcf8\"\n+dependencies = [\n+ \"bitflags\",\n+ \"memchr\",\n+ \"unicase\",\n+]\n+\n [[package]]\n name = \"punycode\"\n version = \"0.4.1\"\n@@ -4122,7 +4133,7 @@ dependencies = [\n  \"expect-test\",\n  \"itertools 0.9.0\",\n  \"minifier\",\n- \"pulldown-cmark\",\n+ \"pulldown-cmark 0.8.0\",\n  \"rustc-rayon\",\n  \"serde\",\n  \"serde_json\","}, {"sha": "a40a44fe27da3edb9aace137a22d08ed93c4239a", "filename": "src/librustdoc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1fd22fc34e52fa2c59b5acad216732cf774a87be/src%2Flibrustdoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/1fd22fc34e52fa2c59b5acad216732cf774a87be/src%2Flibrustdoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2FCargo.toml?ref=1fd22fc34e52fa2c59b5acad216732cf774a87be", "patch": "@@ -8,7 +8,7 @@ edition = \"2018\"\n path = \"lib.rs\"\n \n [dependencies]\n-pulldown-cmark = { version = \"0.7\", default-features = false }\n+pulldown-cmark = { version = \"0.8\", default-features = false }\n minifier = \"0.0.33\"\n rayon = { version = \"0.3.0\", package = \"rustc-rayon\" }\n serde = { version = \"1.0\", features = [\"derive\"] }"}, {"sha": "6c0f1c02ac6da77d48c602932c30957d4742b8ff", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/1fd22fc34e52fa2c59b5acad216732cf774a87be/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fd22fc34e52fa2c59b5acad216732cf774a87be/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=1fd22fc34e52fa2c59b5acad216732cf774a87be", "patch": "@@ -27,7 +27,6 @@ use rustc_session::lint;\n use rustc_span::edition::Edition;\n use rustc_span::Span;\n use std::borrow::Cow;\n-use std::cell::RefCell;\n use std::collections::VecDeque;\n use std::default::Default;\n use std::fmt::Write;\n@@ -39,7 +38,7 @@ use crate::doctest;\n use crate::html::highlight;\n use crate::html::toc::TocBuilder;\n \n-use pulldown_cmark::{html, CodeBlockKind, CowStr, Event, Options, Parser, Tag};\n+use pulldown_cmark::{html, BrokenLink, CodeBlockKind, CowStr, Event, Options, Parser, Tag};\n \n #[cfg(test)]\n mod tests;\n@@ -931,15 +930,17 @@ impl Markdown<'_> {\n         if md.is_empty() {\n             return String::new();\n         }\n-        let replacer = |_: &str, s: &str| {\n-            if let Some(link) = links.iter().find(|link| &*link.original_text == s) {\n-                Some((link.href.clone(), link.new_text.clone()))\n+        let mut replacer = |broken_link: BrokenLink<'_>| {\n+            if let Some(link) =\n+                links.iter().find(|link| &*link.original_text == broken_link.reference)\n+            {\n+                Some((link.href.as_str().into(), link.new_text.as_str().into()))\n             } else {\n                 None\n             }\n         };\n \n-        let p = Parser::new_with_broken_link_callback(md, opts(), Some(&replacer));\n+        let p = Parser::new_with_broken_link_callback(md, opts(), Some(&mut replacer));\n \n         let mut s = String::with_capacity(md.len() * 3 / 2);\n \n@@ -1009,9 +1010,11 @@ impl MarkdownSummaryLine<'_> {\n             return String::new();\n         }\n \n-        let replacer = |_: &str, s: &str| {\n-            if let Some(link) = links.iter().find(|link| &*link.original_text == s) {\n-                Some((link.href.clone(), link.new_text.clone()))\n+        let mut replacer = |broken_link: BrokenLink<'_>| {\n+            if let Some(link) =\n+                links.iter().find(|link| &*link.original_text == broken_link.reference)\n+            {\n+                Some((link.href.as_str().into(), link.new_text.as_str().into()))\n             } else {\n                 None\n             }\n@@ -1020,7 +1023,7 @@ impl MarkdownSummaryLine<'_> {\n         let p = Parser::new_with_broken_link_callback(\n             md,\n             Options::ENABLE_STRIKETHROUGH,\n-            Some(&replacer),\n+            Some(&mut replacer),\n         );\n \n         let mut s = String::new();\n@@ -1067,7 +1070,7 @@ pub fn markdown_links(md: &str) -> Vec<(String, Option<Range<usize>>)> {\n     }\n \n     let mut links = vec![];\n-    let shortcut_links = RefCell::new(vec![]);\n+    let mut shortcut_links = vec![];\n \n     {\n         let locate = |s: &str| unsafe {\n@@ -1084,11 +1087,13 @@ pub fn markdown_links(md: &str) -> Vec<(String, Option<Range<usize>>)> {\n             }\n         };\n \n-        let push = |_: &str, s: &str| {\n-            shortcut_links.borrow_mut().push((s.to_owned(), locate(s)));\n+        let mut push = |link: BrokenLink<'_>| {\n+            // FIXME: use `link.span` instead of `locate`\n+            // (doing it now includes the `[]` as well as the text)\n+            shortcut_links.push((link.reference.to_owned(), locate(link.reference)));\n             None\n         };\n-        let p = Parser::new_with_broken_link_callback(md, opts(), Some(&push));\n+        let p = Parser::new_with_broken_link_callback(md, opts(), Some(&mut push));\n \n         // There's no need to thread an IdMap through to here because\n         // the IDs generated aren't going to be emitted anywhere.\n@@ -1106,8 +1111,7 @@ pub fn markdown_links(md: &str) -> Vec<(String, Option<Range<usize>>)> {\n         }\n     }\n \n-    let mut shortcut_links = shortcut_links.into_inner();\n-    links.extend(shortcut_links.drain(..));\n+    links.append(&mut shortcut_links);\n \n     links\n }"}, {"sha": "a01211c4f32b1b8479e37c37cf476be43a6c1339", "filename": "src/test/rustdoc-ui/intra-link-double-anchor.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1fd22fc34e52fa2c59b5acad216732cf774a87be/src%2Ftest%2Frustdoc-ui%2Fintra-link-double-anchor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fd22fc34e52fa2c59b5acad216732cf774a87be/src%2Ftest%2Frustdoc-ui%2Fintra-link-double-anchor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-link-double-anchor.rs?ref=1fd22fc34e52fa2c59b5acad216732cf774a87be", "patch": "@@ -0,0 +1,7 @@\n+// check-pass\n+\n+// regression test for #73264\n+// should only give one error\n+/// docs [label][with#anchor#error]\n+//~^ WARNING multiple anchors\n+pub struct S;"}, {"sha": "3282ec8b79379d75b9b0a686471491857ccd6f95", "filename": "src/test/rustdoc-ui/intra-link-double-anchor.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1fd22fc34e52fa2c59b5acad216732cf774a87be/src%2Ftest%2Frustdoc-ui%2Fintra-link-double-anchor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1fd22fc34e52fa2c59b5acad216732cf774a87be/src%2Ftest%2Frustdoc-ui%2Fintra-link-double-anchor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-link-double-anchor.stderr?ref=1fd22fc34e52fa2c59b5acad216732cf774a87be", "patch": "@@ -0,0 +1,10 @@\n+warning: `with#anchor#error` contains multiple anchors\n+  --> $DIR/intra-link-double-anchor.rs:5:18\n+   |\n+LL | /// docs [label][with#anchor#error]\n+   |                  ^^^^^^^^^^^^^^^^^ contains invalid anchor\n+   |\n+   = note: `#[warn(broken_intra_doc_links)]` on by default\n+\n+warning: 1 warning emitted\n+"}]}