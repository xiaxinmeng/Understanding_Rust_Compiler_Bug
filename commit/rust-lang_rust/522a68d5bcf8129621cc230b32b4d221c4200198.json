{"sha": "522a68d5bcf8129621cc230b32b4d221c4200198", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyMmE2OGQ1YmNmODEyOTYyMWNjMjMwYjMyYjRkMjIxYzQyMDAxOTg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-27T23:19:38Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-03T22:01:58Z"}, "message": "libsyntax: De-`@mut` the resolve table", "tree": {"sha": "b81b1abb31911bcd40e6353084810347b2581ece", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b81b1abb31911bcd40e6353084810347b2581ece"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/522a68d5bcf8129621cc230b32b4d221c4200198", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/522a68d5bcf8129621cc230b32b4d221c4200198", "html_url": "https://github.com/rust-lang/rust/commit/522a68d5bcf8129621cc230b32b4d221c4200198", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/522a68d5bcf8129621cc230b32b4d221c4200198/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ed6f3e78ffacab3e9beabde0016c9d66a8e3f13", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ed6f3e78ffacab3e9beabde0016c9d66a8e3f13", "html_url": "https://github.com/rust-lang/rust/commit/8ed6f3e78ffacab3e9beabde0016c9d66a8e3f13"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "0ed5a24fef8a118fd7d3d60c605b0dd97ba90ce8", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/522a68d5bcf8129621cc230b32b4d221c4200198/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/522a68d5bcf8129621cc230b32b4d221c4200198/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=522a68d5bcf8129621cc230b32b4d221c4200198", "patch": "@@ -17,6 +17,7 @@ use parse::token;\n use visit::Visitor;\n use visit;\n \n+use std::cell::RefCell;\n use std::hashmap::HashMap;\n use std::u32;\n use std::local_data;\n@@ -799,20 +800,22 @@ fn idx_push<T>(vec: &mut ~[T], val: T) -> u32 {\n \n /// Resolve a syntax object to a name, per MTWT.\n pub fn mtwt_resolve(id : Ident) -> Name {\n-    resolve_internal(id, get_sctable(), get_resolve_table())\n+    let resolve_table = get_resolve_table();\n+    let mut resolve_table = resolve_table.borrow_mut();\n+    resolve_internal(id, get_sctable(), resolve_table.get())\n }\n \n // FIXME #8215: must be pub for testing\n pub type ResolveTable = HashMap<(Name,SyntaxContext),Name>;\n \n // okay, I admit, putting this in TLS is not so nice:\n // fetch the SCTable from TLS, create one if it doesn't yet exist.\n-pub fn get_resolve_table() -> @mut ResolveTable {\n-    local_data_key!(resolve_table_key: @@mut ResolveTable)\n+pub fn get_resolve_table() -> @RefCell<ResolveTable> {\n+    local_data_key!(resolve_table_key: @@RefCell<ResolveTable>)\n     match local_data::get(resolve_table_key, |k| k.map(|k| *k)) {\n         None => {\n-            let new_table = @@mut HashMap::new();\n-            local_data::set(resolve_table_key,new_table);\n+            let new_table = @@RefCell::new(HashMap::new());\n+            local_data::set(resolve_table_key, new_table);\n             *new_table\n         },\n         Some(intr) => *intr"}]}