{"sha": "288e7caf19b415007787f47424c9e00913cb7803", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4OGU3Y2FmMTliNDE1MDA3Nzg3ZjQ3NDI0YzllMDA5MTNjYjc4MDM=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2016-09-06T03:08:21Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2016-09-06T03:08:21Z"}, "message": "show `self` suggestion when items are in the block", "tree": {"sha": "d3d2e000b50bbbf4799265a55f68ba5d2ff4cd97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3d2e000b50bbbf4799265a55f68ba5d2ff4cd97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/288e7caf19b415007787f47424c9e00913cb7803", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/288e7caf19b415007787f47424c9e00913cb7803", "html_url": "https://github.com/rust-lang/rust/commit/288e7caf19b415007787f47424c9e00913cb7803", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/288e7caf19b415007787f47424c9e00913cb7803/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41ee2e9124245071dbc890b8617fd6c75391477f", "url": "https://api.github.com/repos/rust-lang/rust/commits/41ee2e9124245071dbc890b8617fd6c75391477f", "html_url": "https://github.com/rust-lang/rust/commit/41ee2e9124245071dbc890b8617fd6c75391477f"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "90c17866583a769e8d3f1a9d54862fe130c9ba03", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/288e7caf19b415007787f47424c9e00913cb7803/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/288e7caf19b415007787f47424c9e00913cb7803/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=288e7caf19b415007787f47424c9e00913cb7803", "patch": "@@ -588,18 +588,16 @@ impl<'a, 'b:'a> ImportResolver<'a, 'b> {\n             Success(module) => module,\n             Indeterminate => return Indeterminate,\n             Failed(err) => {\n-                let self_module = self.current_module.clone();\n+                let self_module = self.module_map[&self.current_module.normal_ancestor_id.unwrap()];\n \n                 let resolve_from_self_result = self.resolve_module_path_from_root(\n                     &self_module, &module_path, 0, Some(span));\n \n-                return match resolve_from_self_result {\n-                    Success(_) => {\n-                        let msg = format!(\"Did you mean `self::{}`?\",\n-                                          &names_to_string(module_path));\n-                        Failed(Some((span, msg)))\n-                    },\n-                    _ => Failed(err),\n+                return if let Success(_) = resolve_from_self_result {\n+                    let msg = format!(\"Did you mean `self::{}`?\", &names_to_string(module_path));\n+                    Failed(Some((span, msg)))\n+                } else {\n+                    Failed(err)\n                 };\n             },\n         };"}, {"sha": "0a9a437569730367b17de8bed377d0b8c17d9e64", "filename": "src/test/compile-fail/unresolved-import.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/288e7caf19b415007787f47424c9e00913cb7803/src%2Ftest%2Fcompile-fail%2Funresolved-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/288e7caf19b415007787f47424c9e00913cb7803/src%2Ftest%2Fcompile-fail%2Funresolved-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funresolved-import.rs?ref=288e7caf19b415007787f47424c9e00913cb7803", "patch": "@@ -44,3 +44,14 @@ mod m {\n     use MyEnum::*; //~ ERROR unresolved import `MyEnum::*` [E0432]\n                    //~^ Did you mean `self::MyEnum`?\n }\n+\n+mod items {\n+    enum Enum {\n+        Variant\n+    }\n+\n+    use Enum::*; //~ ERROR unresolved import `Enum::*` [E0432]\n+                 //~^ Did you mean `self::Enum`?\n+\n+    fn item() {}\n+}"}]}