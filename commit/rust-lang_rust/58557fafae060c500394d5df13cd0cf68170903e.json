{"sha": "58557fafae060c500394d5df13cd0cf68170903e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4NTU3ZmFmYWUwNjBjNTAwMzk0ZDVkZjEzY2QwY2Y2ODE3MDkwM2U=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-06T15:19:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-06T15:19:48Z"}, "message": "Auto merge of #45369 - fintelia:patch-1, r=BurntSushi\n\nImplement is_empty() for BufReader\n\nSimple implementation of `is_empty` method for BufReader so it is possible to tell whether there is any data in its buffer.\n\nI didn't know correct stability annotation to place on the function. Presumably there is no reason to place this feature behind a feature flag, but I wasn't sure how to tag it as an unstable feature without that.\n\nCC: #45323", "tree": {"sha": "6b03d624afaf8c98b85f7e24834b93c92183538f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b03d624afaf8c98b85f7e24834b93c92183538f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58557fafae060c500394d5df13cd0cf68170903e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58557fafae060c500394d5df13cd0cf68170903e", "html_url": "https://github.com/rust-lang/rust/commit/58557fafae060c500394d5df13cd0cf68170903e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58557fafae060c500394d5df13cd0cf68170903e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74be072068737ae3ef30be66e34c1569cf652652", "url": "https://api.github.com/repos/rust-lang/rust/commits/74be072068737ae3ef30be66e34c1569cf652652", "html_url": "https://github.com/rust-lang/rust/commit/74be072068737ae3ef30be66e34c1569cf652652"}, {"sha": "df4b78160cff6ba121df35b99d6c42a3dd1de62d", "url": "https://api.github.com/repos/rust-lang/rust/commits/df4b78160cff6ba121df35b99d6c42a3dd1de62d", "html_url": "https://github.com/rust-lang/rust/commit/df4b78160cff6ba121df35b99d6c42a3dd1de62d"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "6d3fbc9d268222d3407b3e4cc8c3bbf43478da01", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/58557fafae060c500394d5df13cd0cf68170903e/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58557fafae060c500394d5df13cd0cf68170903e/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=58557fafae060c500394d5df13cd0cf68170903e", "patch": "@@ -147,6 +147,31 @@ impl<R: Read> BufReader<R> {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn get_mut(&mut self) -> &mut R { &mut self.inner }\n \n+    /// Returns `true` if there are no bytes in the internal buffer.\n+    ///\n+    /// # Examples\n+    /// ```\n+    /// # #![feature(bufreader_is_empty)]\n+    /// use std::io::BufReader;\n+    /// use std::io::BufRead;\n+    /// use std::fs::File;\n+    ///\n+    /// # fn foo() -> std::io::Result<()> {\n+    /// let f1 = File::open(\"log.txt\")?;\n+    /// let mut reader = BufReader::new(f1);\n+    /// assert!(reader.is_empty());\n+    ///\n+    /// if reader.fill_buf()?.len() > 0 {\n+    ///     assert!(!reader.is_empty());\n+    /// }\n+    /// # Ok(())\n+    /// # }\n+    /// ```\n+    #[unstable(feature = \"bufreader_is_empty\", issue = \"45323\", reason = \"recently added\")]\n+    pub fn is_empty(&self) -> bool {\n+        self.pos == self.cap\n+    }\n+\n     /// Unwraps this `BufReader`, returning the underlying reader.\n     ///\n     /// Note that any leftover data in the internal buffer is lost."}]}