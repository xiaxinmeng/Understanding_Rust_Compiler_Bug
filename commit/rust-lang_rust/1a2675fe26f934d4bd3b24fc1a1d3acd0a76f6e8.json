{"sha": "1a2675fe26f934d4bd3b24fc1a1d3acd0a76f6e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhMjY3NWZlMjZmOTM0ZDRiZDNiMjRmYzFhMWQzYWNkMGE3NmY2ZTg=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-02-15T15:07:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-15T15:07:11Z"}, "message": "Rollup merge of #82141 - jrvanwhy:issue-82052, r=sanxiyn\n\n32-bit ARM: Emit `lr` instead of `r14` when specified as an `asm!` output register.\n\nOn 32-bit ARM platforms, the register `r14` has the alias `lr`. When used as an output register in `asm!`, rustc canonicalizes the name to `r14`. LLVM only knows the register by the name `lr`, and rejects it. This changes rustc's LLVM code generation to output `lr` instead.\n\ncloses #82052\n\nr? ``@nagisa``", "tree": {"sha": "a964e743d5857301ffa09d4daeacfadc34d9ff1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a964e743d5857301ffa09d4daeacfadc34d9ff1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a2675fe26f934d4bd3b24fc1a1d3acd0a76f6e8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgKo4fCRBK7hj4Ov3rIwAAdHIIACVfkQGknkG6WI6cpmYFciHY\nTxRmc+XVPTWHV1deAWqq09dHRh9gt8nDTfc7yOH6nFs4KI52dUGXql3EOwUjqwUH\ncS71TtI7NaDVgk/BkhwWV5uEBjM11h60dHkGynNIjEENmqY4m9+AlMZUvSsGCUOD\nC5thA3VenGNMV5qs5LnVc6+8W9qRXE+8CBm9XxYMHwBLh4lnRQ80GnMUHFIwRNAi\nRb6DZUfvbGv3yZxsMbPtw4AIQHoTDsw3w6LeRbjkmNLYv8HLzmbR/9xSZgWwGhII\nR0f3tE14ooiLRxlwx7mRTcznZRg58dzxJcP17Tdx90v8OI3QE8bQ/Tlx0HwVLQw=\n=dhHo\n-----END PGP SIGNATURE-----\n", "payload": "tree a964e743d5857301ffa09d4daeacfadc34d9ff1f\nparent 1ee4a7bba6e3f8ee873f7690fd3096758fe0cd78\nparent fd21eb18e96db98ff4f354f51d91051cf1533433\nauthor Jonas Schievink <jonasschievink@gmail.com> 1613401631 +0100\ncommitter GitHub <noreply@github.com> 1613401631 +0100\n\nRollup merge of #82141 - jrvanwhy:issue-82052, r=sanxiyn\n\n32-bit ARM: Emit `lr` instead of `r14` when specified as an `asm!` output register.\n\nOn 32-bit ARM platforms, the register `r14` has the alias `lr`. When used as an output register in `asm!`, rustc canonicalizes the name to `r14`. LLVM only knows the register by the name `lr`, and rejects it. This changes rustc's LLVM code generation to output `lr` instead.\n\ncloses #82052\n\nr? ``@nagisa``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a2675fe26f934d4bd3b24fc1a1d3acd0a76f6e8", "html_url": "https://github.com/rust-lang/rust/commit/1a2675fe26f934d4bd3b24fc1a1d3acd0a76f6e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a2675fe26f934d4bd3b24fc1a1d3acd0a76f6e8/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ee4a7bba6e3f8ee873f7690fd3096758fe0cd78", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ee4a7bba6e3f8ee873f7690fd3096758fe0cd78", "html_url": "https://github.com/rust-lang/rust/commit/1ee4a7bba6e3f8ee873f7690fd3096758fe0cd78"}, {"sha": "fd21eb18e96db98ff4f354f51d91051cf1533433", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd21eb18e96db98ff4f354f51d91051cf1533433", "html_url": "https://github.com/rust-lang/rust/commit/fd21eb18e96db98ff4f354f51d91051cf1533433"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "4aa25aae74760d03de57248d1abd8745c09ae0f4", "filename": "compiler/rustc_codegen_llvm/src/asm.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1a2675fe26f934d4bd3b24fc1a1d3acd0a76f6e8/compiler%2Frustc_codegen_llvm%2Fsrc%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a2675fe26f934d4bd3b24fc1a1d3acd0a76f6e8/compiler%2Frustc_codegen_llvm%2Fsrc%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fasm.rs?ref=1a2675fe26f934d4bd3b24fc1a1d3acd0a76f6e8", "patch": "@@ -487,6 +487,9 @@ fn reg_to_llvm(reg: InlineAsmRegOrRegClass, layout: Option<&TyAndLayout<'tcx>>)\n             } else if reg == InlineAsmReg::AArch64(AArch64InlineAsmReg::x30) {\n                 // LLVM doesn't recognize x30\n                 \"{lr}\".to_string()\n+            } else if reg == InlineAsmReg::Arm(ArmInlineAsmReg::r14) {\n+                // LLVM doesn't recognize r14\n+                \"{lr}\".to_string()\n             } else {\n                 format!(\"{{{}}}\", reg.name())\n             }"}, {"sha": "09901a7a39c0874fd0a391cc833851756df6953e", "filename": "src/test/assembly/asm/arm-types.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1a2675fe26f934d4bd3b24fc1a1d3acd0a76f6e8/src%2Ftest%2Fassembly%2Fasm%2Farm-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a2675fe26f934d4bd3b24fc1a1d3acd0a76f6e8/src%2Ftest%2Fassembly%2Fasm%2Farm-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fassembly%2Fasm%2Farm-types.rs?ref=1a2675fe26f934d4bd3b24fc1a1d3acd0a76f6e8", "patch": "@@ -91,6 +91,15 @@ pub unsafe fn sym_static() {\n     asm!(\"adr r0, {}\", sym extern_static);\n }\n \n+// Regression test for #82052.\n+// CHECK-LABEL: issue_82052\n+// CHECK: push {{.*}}lr\n+// CHECK: @APP\n+// CHECK: @NO_APP\n+pub unsafe fn issue_82052() {\n+    asm!(\"\", out(\"r14\") _);\n+}\n+\n macro_rules! check {\n     ($func:ident $ty:ident $class:ident $mov:literal) => {\n         #[no_mangle]"}]}