{"sha": "8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2MzVhNWNhNDQ2OWU4YmI3NWNiMWNmNmE0MTEwOWIzNTJkY2ZiMmI=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-09-23T02:22:38Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2020-09-23T05:45:18Z"}, "message": "deps: bump rustc-ap to v679", "tree": {"sha": "adedfcfcc55c5e2945a55bdfb873f2747d26ccbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adedfcfcc55c5e2945a55bdfb873f2747d26ccbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b", "html_url": "https://github.com/rust-lang/rust/commit/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ba373f822eea6bdb4f3672d93bfa94092bfa255", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ba373f822eea6bdb4f3672d93bfa94092bfa255", "html_url": "https://github.com/rust-lang/rust/commit/9ba373f822eea6bdb4f3672d93bfa94092bfa255"}], "stats": {"total": 232, "additions": 139, "deletions": 93}, "files": [{"sha": "cf043471bf98140b1fc6f0de4e71b1ae141f3ba7", "filename": "Cargo.lock", "status": "modified", "additions": 103, "deletions": 65, "changes": 168, "blob_url": "https://github.com/rust-lang/rust/blob/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b", "patch": "@@ -229,6 +229,15 @@ dependencies = [\n  \"bitflags\",\n ]\n \n+[[package]]\n+name = \"cloudabi\"\n+version = \"0.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"4344512281c643ae7638bbabc3af17a11307803ec8f0fcad9fae512a8bf36467\"\n+dependencies = [\n+ \"bitflags\",\n+]\n+\n [[package]]\n name = \"constant_time_eq\"\n version = \"0.1.4\"\n@@ -511,6 +520,15 @@ dependencies = [\n  \"hashbrown\",\n ]\n \n+[[package]]\n+name = \"instant\"\n+version = \"0.1.7\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"63312a18f7ea8760cdd0a7c5aac1a619752a246b833545e3e36d1f81f7cd9e66\"\n+dependencies = [\n+ \"cfg-if\",\n+]\n+\n [[package]]\n name = \"itertools\"\n version = \"0.8.0\"\n@@ -520,6 +538,15 @@ dependencies = [\n  \"either\",\n ]\n \n+[[package]]\n+name = \"itertools\"\n+version = \"0.9.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"284f18f85651fe11e8a991b2adb42cb078325c996ed026d994719efcfca1d54b\"\n+dependencies = [\n+ \"either\",\n+]\n+\n [[package]]\n name = \"itoa\"\n version = \"0.4.4\"\n@@ -545,9 +572,9 @@ checksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n \n [[package]]\n name = \"libc\"\n-version = \"0.2.66\"\n+version = \"0.2.77\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d515b1f41455adea1313a4a2ac8a8a477634fbae63cc6100e3aebb207ce61558\"\n+checksum = \"f2f96b10ec2560088a8e76961b00d47107b3a625fecb76dedb29ee7ccbf98235\"\n \n [[package]]\n name = \"lock_api\"\n@@ -558,6 +585,15 @@ dependencies = [\n  \"scopeguard\",\n ]\n \n+[[package]]\n+name = \"lock_api\"\n+version = \"0.4.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"28247cc5a5be2f05fbcd76dd0cf2c7d3b5400cb978a28042abcd4fa0b3f8261c\"\n+dependencies = [\n+ \"scopeguard\",\n+]\n+\n [[package]]\n name = \"log\"\n version = \"0.4.8\"\n@@ -651,19 +687,20 @@ version = \"0.9.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"f842b1982eb6c2fe34036a4fbfb06dd185a3f5c8edfaacdf7d1ea10b07de6252\"\n dependencies = [\n- \"lock_api\",\n+ \"lock_api 0.3.4\",\n  \"parking_lot_core 0.6.2\",\n  \"rustc_version\",\n ]\n \n [[package]]\n name = \"parking_lot\"\n-version = \"0.10.2\"\n+version = \"0.11.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d3a704eb390aafdc107b0e392f56a82b668e3a71366993b5340f5833fd62505e\"\n+checksum = \"a4893845fa2ca272e647da5d0e46660a314ead9c2fdd9a883aabc32e481a8733\"\n dependencies = [\n- \"lock_api\",\n- \"parking_lot_core 0.7.2\",\n+ \"instant\",\n+ \"lock_api 0.4.1\",\n+ \"parking_lot_core 0.8.0\",\n ]\n \n [[package]]\n@@ -673,7 +710,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"b876b1b9e7ac6e1a74a6da34d25c42e17e8862aa409cbbbdcfc8d86c6f3bc62b\"\n dependencies = [\n  \"cfg-if\",\n- \"cloudabi\",\n+ \"cloudabi 0.0.3\",\n  \"libc\",\n  \"redox_syscall\",\n  \"rustc_version\",\n@@ -683,15 +720,16 @@ dependencies = [\n \n [[package]]\n name = \"parking_lot_core\"\n-version = \"0.7.2\"\n+version = \"0.8.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d58c7c768d4ba344e3e8d72518ac13e259d7c7ade24167003b8488e10b6740a3\"\n+checksum = \"c361aa727dd08437f2f1447be8b59a33b0edd15e0fcee698f935613d9efbca9b\"\n dependencies = [\n  \"cfg-if\",\n- \"cloudabi\",\n+ \"cloudabi 0.1.0\",\n+ \"instant\",\n  \"libc\",\n  \"redox_syscall\",\n- \"smallvec 1.2.0\",\n+ \"smallvec 1.4.2\",\n  \"winapi\",\n ]\n \n@@ -822,7 +860,7 @@ version = \"0.1.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"7b75f676a1e053fc562eafbb47838d67c84801e38fc1ba459e8f180deabd5071\"\n dependencies = [\n- \"cloudabi\",\n+ \"cloudabi 0.0.3\",\n  \"fuchsia-cprng\",\n  \"libc\",\n  \"rand_core 0.4.2\",\n@@ -897,19 +935,19 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_arena\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"baa951ccfe33e3d46ad7b2922ddb935583e9e98029f428681b98afd74cc042b7\"\n+checksum = \"e8e941a8fc3878a111d2bbfe78e39522d884136f0b412b12592195f26f653476\"\n dependencies = [\n  \"rustc-ap-rustc_data_structures\",\n- \"smallvec 1.2.0\",\n+ \"smallvec 1.4.2\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_ast\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ffa7b3cf87d6249653c00f2fd338adf4e72c8bc617870dda9dfd421aba197a66\"\n+checksum = \"3b58b6b035710df7f339a2bf86f6dafa876efd95439540970e24609e33598ca6\"\n dependencies = [\n  \"bitflags\",\n  \"rustc-ap-rustc_data_structures\",\n@@ -918,17 +956,17 @@ dependencies = [\n  \"rustc-ap-rustc_macros\",\n  \"rustc-ap-rustc_serialize\",\n  \"rustc-ap-rustc_span\",\n- \"smallvec 1.2.0\",\n+ \"smallvec 1.4.2\",\n  \"tracing\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_ast_passes\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"3be435169657440d6287b07a929c9fcc6db04c8c4fc835e0ab5b0fa945a8c028\"\n+checksum = \"3d379a900d6a1f098490d92ab83e87487dcee2e4ec3f04c3ac4512b5117b64e2\"\n dependencies = [\n- \"itertools\",\n+ \"itertools 0.9.0\",\n  \"rustc-ap-rustc_ast\",\n  \"rustc-ap-rustc_ast_pretty\",\n  \"rustc-ap-rustc_attr\",\n@@ -943,9 +981,9 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_ast_pretty\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"38779f1e954d46303e72be59bb32033d920698ef55c3039266fef349d870fb9d\"\n+checksum = \"658d925c0da9e3c5cddc5e54f4fa8c03b41aff1fc6dc5e41837c1118ad010ac0\"\n dependencies = [\n  \"rustc-ap-rustc_ast\",\n  \"rustc-ap-rustc_span\",\n@@ -955,9 +993,9 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_attr\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"24b419c0ae11c46e86b27e3ae0f5ee9ff2418870c6307f6fed30b02fe727526a\"\n+checksum = \"3f387037534f34c148aed753622677500e42d190a095670e7ac3fffc09811a59\"\n dependencies = [\n  \"rustc-ap-rustc_ast\",\n  \"rustc-ap-rustc_ast_pretty\",\n@@ -974,9 +1012,9 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_data_structures\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a1cf84a72b8aa2e6fe4172c2246d707969217d4da1e7a689e12db80d8d5b63d9\"\n+checksum = \"14ffd17a37e00d77926a0713f191c59ff3aeb2b551a024c7cfffce14bab79be8\"\n dependencies = [\n  \"bitflags\",\n  \"cfg-if\",\n@@ -986,15 +1024,15 @@ dependencies = [\n  \"jobserver\",\n  \"libc\",\n  \"measureme\",\n- \"parking_lot 0.10.2\",\n+ \"parking_lot 0.11.0\",\n  \"rustc-ap-rustc_graphviz\",\n  \"rustc-ap-rustc_index\",\n  \"rustc-ap-rustc_macros\",\n  \"rustc-ap-rustc_serialize\",\n  \"rustc-hash\",\n  \"rustc-rayon\",\n  \"rustc-rayon-core\",\n- \"smallvec 1.2.0\",\n+ \"smallvec 1.4.2\",\n  \"stable_deref_trait\",\n  \"stacker\",\n  \"tempfile\",\n@@ -1004,9 +1042,9 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_errors\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"bd08b5d165336da31dfbf5fb1b829eec0bb8516c6e4b755ee659d297d22c5dba\"\n+checksum = \"2b3263ddcfa9eb911e54a4e8088878dd9fd10e00d8b99b01033ba4a2733fe91d\"\n dependencies = [\n  \"annotate-snippets 0.8.0\",\n  \"atty\",\n@@ -1023,9 +1061,9 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_expand\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"603bb89221349eb78ae87d4f5680a62e4b98f30ce0effbef3b694b91643eeff9\"\n+checksum = \"e1ab7e68cede8a2273fd8b8623002ce9dc832e061dfc3330e9bcc1fc2a722d73\"\n dependencies = [\n  \"rustc-ap-rustc_ast\",\n  \"rustc-ap-rustc_ast_passes\",\n@@ -1040,37 +1078,37 @@ dependencies = [\n  \"rustc-ap-rustc_serialize\",\n  \"rustc-ap-rustc_session\",\n  \"rustc-ap-rustc_span\",\n- \"smallvec 1.2.0\",\n+ \"smallvec 1.4.2\",\n  \"tracing\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_feature\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"4056fa564cd0ec3a0456f69d863682863bcdc5f303bf4bf24886d82456c0ceca\"\n+checksum = \"eea2dc95421bc19bbd4d939399833a882c46b684283b4267ad1fcf982fc043d9\"\n dependencies = [\n  \"rustc-ap-rustc_data_structures\",\n  \"rustc-ap-rustc_span\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_fs_util\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"626f3dc6ad181fa202994261d86e45db844fc5f30915d42df49d8ce270ed2543\"\n+checksum = \"1e44c1804f09635f83f6cf1e04c2e92f8aeb7b4e850ac6c53d373dab02c13053\"\n \n [[package]]\n name = \"rustc-ap-rustc_graphviz\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"0615d11907c251a58e48e695653fb50a9c8efafddaeedfeb3291806bf9ae6127\"\n+checksum = \"dc491f2b9be6e928f6df6b287549b8d50c48e8eff8638345155f40fa2cfb785d\"\n \n [[package]]\n name = \"rustc-ap-rustc_index\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c365a380a861aabebde64b519fd3766c978009baae7e4244d1f55c5b4cb509ae\"\n+checksum = \"fa73f3fed413cdb6290738a10267da17b9ae8e02087334778b9a8c9491c5efc0\"\n dependencies = [\n  \"arrayvec 0.5.1\",\n  \"rustc-ap-rustc_macros\",\n@@ -1079,18 +1117,18 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_lexer\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"3a4ceff9b806d9d7176a31a1d5e2bcb3d98b26b51f6abd136d76ce1d2825233a\"\n+checksum = \"e993881244a92f3b44cf43c8f22ae2ca5cefe4f55a34e2b65b72ee66fe5ad077\"\n dependencies = [\n  \"unicode-xid\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_macros\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b0f520638ea4f2c80aa56347a3019d79b09bb4de80efb4dfbdc029cdd89a1ad4\"\n+checksum = \"4effe366556e1d75344764adf4d54cba7c2fad33dbd07588e96d0853831ddc7c\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -1100,9 +1138,9 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_parse\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"169d79f505ffd2c892c0def471eeb5f40c4ae25fff99f1ec3c46868ba47be3a8\"\n+checksum = \"0342675835251571471d3dca9ea1576a853a8dfa1f4b0084db283c861223cb60\"\n dependencies = [\n  \"bitflags\",\n  \"rustc-ap-rustc_ast\",\n@@ -1113,26 +1151,26 @@ dependencies = [\n  \"rustc-ap-rustc_lexer\",\n  \"rustc-ap-rustc_session\",\n  \"rustc-ap-rustc_span\",\n- \"smallvec 1.2.0\",\n+ \"smallvec 1.4.2\",\n  \"tracing\",\n  \"unicode-normalization\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_serialize\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"5b8c16fb186e7130223b1528ee6ea5b11acdcc185f86774f1c44b5b40c0964f2\"\n+checksum = \"438255ed968d73bf6573aa18d3b8d33c0a85ecdfd14160ef09ff813938e0606c\"\n dependencies = [\n  \"indexmap\",\n- \"smallvec 1.2.0\",\n+ \"smallvec 1.4.2\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_session\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"67bf5f3b6619c58f8ac45ca1f2fcc740494e958975565662e984d665a8fc462b\"\n+checksum = \"7d61ff76dede8eb827f6805754900d1097a7046f938f950231b62b448f55bf78\"\n dependencies = [\n  \"bitflags\",\n  \"getopts\",\n@@ -1151,9 +1189,9 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_span\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"8ca3c82f0bb52a333385d21b6725e9e426625a754d104102e80eed42dca1b114\"\n+checksum = \"1c267f15c3cfc82a8a441d2bf86bcccf299d1eb625822468e3d8ee6f7c5a1c89\"\n dependencies = [\n  \"cfg-if\",\n  \"md-5\",\n@@ -1170,9 +1208,9 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_target\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"12c36eadab721da7d7e949cfe3043decde13fa9b91a57a309fdb6f1857646cc1\"\n+checksum = \"8b1b4b266c4d44aac0f7f83b6741d8f0545b03d1ce32f3b5254f2014225cb96c\"\n dependencies = [\n  \"bitflags\",\n  \"rustc-ap-rustc_data_structures\",\n@@ -1257,7 +1295,7 @@ dependencies = [\n  \"env_logger\",\n  \"getopts\",\n  \"ignore\",\n- \"itertools\",\n+ \"itertools 0.8.0\",\n  \"lazy_static\",\n  \"log\",\n  \"regex\",\n@@ -1306,9 +1344,9 @@ checksum = \"ea6a9290e3c9cf0f18145ef7ffa62d68ee0bf5fcd651017e586dc7fd5da448c2\"\n \n [[package]]\n name = \"scopeguard\"\n-version = \"1.0.0\"\n+version = \"1.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b42e15e59b18a828bbf5c58ea01debb36b9b096346de35d941dcb89009f24a0d\"\n+checksum = \"d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd\"\n \n [[package]]\n name = \"semver\"\n@@ -1377,9 +1415,9 @@ checksum = \"ab606a9c5e214920bb66c458cd7be8ef094f813f20fe77a54cc7dbfff220d4b7\"\n \n [[package]]\n name = \"smallvec\"\n-version = \"1.2.0\"\n+version = \"1.4.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"5c2fb2ec9bcd216a5b0d0ccf31ab17b5ed1d627960edff65bbe95d3ce221cefc\"\n+checksum = \"fbee7696b84bbf3d89a1c2eccff0850e3047ed46bfcd2e92c29a2d074d57e252\"\n \n [[package]]\n name = \"stable_deref_trait\"\n@@ -1606,7 +1644,7 @@ version = \"0.1.12\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"5479532badd04e128284890390c1e876ef7a993d0570b3597ae43dfa1d59afa4\"\n dependencies = [\n- \"smallvec 1.2.0\",\n+ \"smallvec 1.4.2\",\n ]\n \n [[package]]"}, {"sha": "07edeb6b7ece13ce19483dccc53005a78e39f431", "filename": "Cargo.toml", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b", "patch": "@@ -66,36 +66,36 @@ rustc-workspace-hack = \"1.0.0\"\n \n [dependencies.rustc_ast]\n package = \"rustc-ap-rustc_ast\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n \n [dependencies.rustc_ast_pretty]\n package = \"rustc-ap-rustc_ast_pretty\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n \n [dependencies.rustc_attr]\n package = \"rustc-ap-rustc_attr\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n \n [dependencies.rustc_data_structures]\n package = \"rustc-ap-rustc_data_structures\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n \n [dependencies.rustc_errors]\n package = \"rustc-ap-rustc_errors\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n \n [dependencies.rustc_expand]\n package = \"rustc-ap-rustc_expand\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n \n [dependencies.rustc_parse]\n package = \"rustc-ap-rustc_parse\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n \n [dependencies.rustc_session]\n package = \"rustc-ap-rustc_session\"\n-version = \"678.0.0\"\n+version = \"679.0.0\"\n \n [dependencies.rustc_span]\n package = \"rustc-ap-rustc_span\"\n-version = \"678.0.0\"\n+version = \"679.0.0\""}, {"sha": "fe632323aa4f1812b8a7597176b82ee0a08420bb", "filename": "src/closures.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b/src%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b/src%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fclosures.rs?ref=8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b", "patch": "@@ -150,10 +150,12 @@ fn rewrite_closure_with_block(\n             id: ast::NodeId::root(),\n             kind: ast::StmtKind::Expr(ptr::P(body.clone())),\n             span: body.span,\n+            tokens: None,\n         }],\n         id: ast::NodeId::root(),\n         rules: ast::BlockCheckMode::Default,\n         span: body.span,\n+        tokens: None,\n     };\n     let block = crate::expr::rewrite_block_with_visitor(\n         context,"}, {"sha": "0b3d844ea140a1dac00ca6b9afc7d4f28375b17e", "filename": "src/imports.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b", "patch": "@@ -4,7 +4,6 @@ use std::fmt;\n \n use rustc_ast::ast::{self, UseTreeKind};\n use rustc_span::{\n-    source_map,\n     symbol::{self, sym},\n     BytePos, Span, DUMMY_SP,\n };\n@@ -509,16 +508,16 @@ impl UseTree {\n     fn same_visibility(&self, other: &UseTree) -> bool {\n         match (&self.visibility, &other.visibility) {\n             (\n-                Some(source_map::Spanned {\n-                    node: ast::VisibilityKind::Inherited,\n+                Some(ast::Visibility {\n+                    kind: ast::VisibilityKind::Inherited,\n                     ..\n                 }),\n                 None,\n             )\n             | (\n                 None,\n-                Some(source_map::Spanned {\n-                    node: ast::VisibilityKind::Inherited,\n+                Some(ast::Visibility {\n+                    kind: ast::VisibilityKind::Inherited,\n                     ..\n                 }),\n             )"}, {"sha": "415c21450d6d7f6bfcce1b2395dc0d33f4117780", "filename": "src/items.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b", "patch": "@@ -6,7 +6,7 @@ use std::cmp::{max, min, Ordering};\n use regex::Regex;\n use rustc_ast::visit;\n use rustc_ast::{ast, ptr};\n-use rustc_span::{source_map, symbol, BytePos, Span, DUMMY_SP};\n+use rustc_span::{symbol, BytePos, Span, DUMMY_SP};\n \n use crate::attr::filter_inline_attrs;\n use crate::comment::{\n@@ -31,9 +31,10 @@ use crate::utils::*;\n use crate::vertical::rewrite_with_alignment;\n use crate::visitor::FmtVisitor;\n \n-const DEFAULT_VISIBILITY: ast::Visibility = source_map::Spanned {\n-    node: ast::VisibilityKind::Inherited,\n+const DEFAULT_VISIBILITY: ast::Visibility = ast::Visibility {\n+    kind: ast::VisibilityKind::Inherited,\n     span: DUMMY_SP,\n+    tokens: None,\n };\n \n fn type_annotation_separator(config: &Config) -> &str {\n@@ -125,7 +126,7 @@ impl Rewrite for ast::Local {\n // FIXME format modules in this style\n #[allow(dead_code)]\n struct Item<'a> {\n-    keyword: &'static str,\n+    unsafety: ast::Unsafe,\n     abi: Cow<'static, str>,\n     vis: Option<&'a ast::Visibility>,\n     body: Vec<BodyElement<'a>>,\n@@ -135,7 +136,7 @@ struct Item<'a> {\n impl<'a> Item<'a> {\n     fn from_foreign_mod(fm: &'a ast::ForeignMod, span: Span, config: &Config) -> Item<'a> {\n         Item {\n-            keyword: \"\",\n+            unsafety: fm.unsafety,\n             abi: format_extern(\n                 ast::Extern::from_abi(fm.abi),\n                 config.force_explicit_abi(),\n@@ -254,6 +255,7 @@ impl<'a> FnSig<'a> {\n \n impl<'a> FmtVisitor<'a> {\n     fn format_item(&mut self, item: &Item<'_>) {\n+        self.buffer.push_str(format_unsafety(item.unsafety));\n         self.buffer.push_str(&item.abi);\n \n         let snippet = self.snippet(item.span);\n@@ -1367,7 +1369,7 @@ pub(crate) fn format_struct_struct(\n }\n \n fn get_bytepos_after_visibility(vis: &ast::Visibility, default_span: Span) -> BytePos {\n-    match vis.node {\n+    match vis.kind {\n         ast::VisibilityKind::Crate(..) | ast::VisibilityKind::Restricted { .. } => vis.span.hi(),\n         _ => default_span.lo(),\n     }"}, {"sha": "711dfc80c2c3da2c864c6aa8e3d0058094997057", "filename": "src/syntux/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b/src%2Fsyntux%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b/src%2Fsyntux%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntux%2Fparser.rs?ref=8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b", "patch": "@@ -118,7 +118,7 @@ impl<'a> Parser<'a> {\n     ) -> Result<(ast::Mod, Vec<ast::Attribute>), ParserError> {\n         let result = catch_unwind(AssertUnwindSafe(|| {\n             let mut parser = new_parser_from_file(sess.inner(), &path, Some(span));\n-            match parser.parse_mod(&TokenKind::Eof) {\n+            match parser.parse_mod(&TokenKind::Eof, ast::Unsafe::No) {\n                 Ok(result) => Some(result),\n                 Err(mut e) => {\n                     e.cancel();"}, {"sha": "a8427cf9babf397d98e3dc297d3f57012ead45bf", "filename": "src/utils.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b", "patch": "@@ -38,11 +38,11 @@ pub(crate) fn extra_offset(text: &str, shape: Shape) -> usize {\n }\n \n pub(crate) fn is_same_visibility(a: &Visibility, b: &Visibility) -> bool {\n-    match (&a.node, &b.node) {\n+    match (&a.kind, &b.kind) {\n         (\n             VisibilityKind::Restricted { path: p, .. },\n             VisibilityKind::Restricted { path: q, .. },\n-        ) => pprust::path_to_string(p) == pprust::path_to_string(q),\n+        ) => pprust::path_to_string(&p) == pprust::path_to_string(&q),\n         (VisibilityKind::Public, VisibilityKind::Public)\n         | (VisibilityKind::Inherited, VisibilityKind::Inherited)\n         | (\n@@ -62,7 +62,7 @@ pub(crate) fn format_visibility(\n     context: &RewriteContext<'_>,\n     vis: &Visibility,\n ) -> Cow<'static, str> {\n-    match vis.node {\n+    match vis.kind {\n         VisibilityKind::Public => Cow::from(\"pub \"),\n         VisibilityKind::Inherited => Cow::from(\"\"),\n         VisibilityKind::Crate(CrateSugar::PubCrate) => Cow::from(\"pub(crate) \"),"}, {"sha": "e0e1c1354c64f9dd90493b539731095114459e1b", "filename": "src/visitor.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=8635a5ca4469e8bb75cb1cf6a41109b352dcfb2b", "patch": "@@ -2,7 +2,7 @@ use std::cell::{Cell, RefCell};\n use std::rc::Rc;\n \n use rustc_ast::{ast, attr::HasAttrs, token::DelimToken, visit};\n-use rustc_span::{symbol, BytePos, Pos, Span};\n+use rustc_span::{symbol, BytePos, Pos, Span, DUMMY_SP};\n \n use crate::attr::*;\n use crate::comment::{rewrite_comment, CodeCharKind, CommentCodeSlices};\n@@ -25,8 +25,8 @@ use crate::spanned::Spanned;\n use crate::stmt::Stmt;\n use crate::syntux::session::ParseSess;\n use crate::utils::{\n-    self, contains_skip, count_newlines, depr_skip_annotation, inner_attributes, last_line_width,\n-    mk_sp, ptr_vec_to_ref_vec, rewrite_ident, stmt_expr,\n+    self, contains_skip, count_newlines, depr_skip_annotation, format_unsafety, inner_attributes,\n+    last_line_width, mk_sp, ptr_vec_to_ref_vec, rewrite_ident, stmt_expr,\n };\n use crate::{ErrorKind, FormatReport, FormattingError};\n \n@@ -603,7 +603,11 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n             }\n             ast::AssocItemKind::Fn(defaultness, ref sig, ref generics, Some(ref body)) => {\n                 let inner_attrs = inner_attributes(&ti.attrs);\n-                let vis = rustc_span::source_map::dummy_spanned(ast::VisibilityKind::Inherited);\n+                let vis = ast::Visibility {\n+                    kind: ast::VisibilityKind::Inherited,\n+                    span: DUMMY_SP,\n+                    tokens: None,\n+                };\n                 let fn_ctxt = visit::FnCtxt::Assoc(visit::AssocCtxt::Trait);\n                 self.visit_fn(\n                     visit::FnKind::Fn(fn_ctxt, ti.ident, sig, &vis, Some(body)),\n@@ -902,6 +906,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n     ) {\n         let vis_str = utils::format_visibility(&self.get_context(), vis);\n         self.push_str(&*vis_str);\n+        self.push_str(format_unsafety(m.unsafety));\n         self.push_str(\"mod \");\n         // Calling `to_owned()` to work around borrow checker.\n         let ident_str = rewrite_ident(&self.get_context(), ident).to_owned();"}]}