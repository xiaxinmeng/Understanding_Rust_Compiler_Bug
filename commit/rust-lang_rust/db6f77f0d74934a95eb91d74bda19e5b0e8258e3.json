{"sha": "db6f77f0d74934a95eb91d74bda19e5b0e8258e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNmY3N2YwZDc0OTM0YTk1ZWI5MWQ3NGJkYTE5ZTViMGU4MjU4ZTM=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-06-29T14:31:43Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-07-06T20:56:03Z"}, "message": "Add arm ids for -Zunpretty=hir,identified", "tree": {"sha": "56ec65c1a901bc6a8074fafe634537c36eab493d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56ec65c1a901bc6a8074fafe634537c36eab493d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db6f77f0d74934a95eb91d74bda19e5b0e8258e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db6f77f0d74934a95eb91d74bda19e5b0e8258e3", "html_url": "https://github.com/rust-lang/rust/commit/db6f77f0d74934a95eb91d74bda19e5b0e8258e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db6f77f0d74934a95eb91d74bda19e5b0e8258e3/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "254f2014954bd66da206232490824975c0c662f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/254f2014954bd66da206232490824975c0c662f1", "html_url": "https://github.com/rust-lang/rust/commit/254f2014954bd66da206232490824975c0c662f1"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "6817107635a606cd33e0c8fc0d00a33f1a63c0ff", "filename": "src/librustc/hir/print.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/db6f77f0d74934a95eb91d74bda19e5b0e8258e3/src%2Flibrustc%2Fhir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db6f77f0d74934a95eb91d74bda19e5b0e8258e3/src%2Flibrustc%2Fhir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fprint.rs?ref=db6f77f0d74934a95eb91d74bda19e5b0e8258e3", "patch": "@@ -27,6 +27,7 @@ pub enum AnnNode<'a> {\n     SubItem(hir::HirId),\n     Expr(&'a hir::Expr),\n     Pat(&'a hir::Pat),\n+    Arm(&'a hir::Arm),\n }\n \n pub enum Nested {\n@@ -1821,6 +1822,7 @@ impl<'a> State<'a> {\n             self.s.space();\n         }\n         self.cbox(indent_unit);\n+        self.ann.pre(self, AnnNode::Arm(arm));\n         self.ibox(0);\n         self.print_outer_attributes(&arm.attrs);\n         let mut first = true;\n@@ -1865,6 +1867,7 @@ impl<'a> State<'a> {\n                 self.s.word(\",\");\n             }\n         }\n+        self.ann.post(self, AnnNode::Arm(arm));\n         self.end() // close enclosing cbox\n     }\n "}, {"sha": "f1f9f3f71e4a3b1ab8d658490a3f6877d9d2c1bc", "filename": "src/librustc_borrowck/dataflow.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/db6f77f0d74934a95eb91d74bda19e5b0e8258e3/src%2Flibrustc_borrowck%2Fdataflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db6f77f0d74934a95eb91d74bda19e5b0e8258e3/src%2Flibrustc_borrowck%2Fdataflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdataflow.rs?ref=db6f77f0d74934a95eb91d74bda19e5b0e8258e3", "patch": "@@ -109,7 +109,8 @@ impl<'tcx, O: DataFlowOperator> pprust::PpAnn for DataFlowContext<'tcx, O> {\n             pprust::AnnNode::Block(blk) => blk.hir_id.local_id,\n             pprust::AnnNode::Item(_) |\n             pprust::AnnNode::SubItem(_) => return,\n-            pprust::AnnNode::Pat(pat) => pat.hir_id.local_id\n+            pprust::AnnNode::Pat(pat) => pat.hir_id.local_id,\n+            pprust::AnnNode::Arm(arm) => arm.hir_id.local_id,\n         };\n \n         if !self.has_bitset_for_local_id(id) {"}, {"sha": "fc55d5ac3559ab30514bb8fd193cb9d3709b0847", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/db6f77f0d74934a95eb91d74bda19e5b0e8258e3/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db6f77f0d74934a95eb91d74bda19e5b0e8258e3/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=db6f77f0d74934a95eb91d74bda19e5b0e8258e3", "patch": "@@ -387,28 +387,28 @@ impl<'hir> pprust_hir::PpAnn for IdentifiedAnnotation<'hir> {\n             pprust_hir::AnnNode::Name(_) => {},\n             pprust_hir::AnnNode::Item(item) => {\n                 s.s.space();\n-                s.synth_comment(format!(\"hir_id: {} hir local_id: {}\",\n-                                        item.hir_id, item.hir_id.local_id.as_u32()))\n+                s.synth_comment(format!(\"hir_id: {}\", item.hir_id));\n             }\n             pprust_hir::AnnNode::SubItem(id) => {\n                 s.s.space();\n-                s.synth_comment(id.to_string())\n+                s.synth_comment(id.to_string());\n             }\n             pprust_hir::AnnNode::Block(blk) => {\n                 s.s.space();\n-                s.synth_comment(format!(\"block hir_id: {} hir local_id: {}\",\n-                                        blk.hir_id, blk.hir_id.local_id.as_u32()))\n+                s.synth_comment(format!(\"block hir_id: {}\", blk.hir_id));\n             }\n             pprust_hir::AnnNode::Expr(expr) => {\n                 s.s.space();\n-                s.synth_comment(format!(\"expr hir_id: {} hir local_id: {}\",\n-                                        expr.hir_id, expr.hir_id.local_id.as_u32()));\n-                s.pclose()\n+                s.synth_comment(format!(\"expr hir_id: {}\", expr.hir_id));\n+                s.pclose();\n             }\n             pprust_hir::AnnNode::Pat(pat) => {\n                 s.s.space();\n-                s.synth_comment(format!(\"pat hir_id: {} hir local_id: {}\",\n-                                        pat.hir_id, pat.hir_id.local_id.as_u32()))\n+                s.synth_comment(format!(\"pat hir_id: {}\", pat.hir_id));\n+            }\n+            pprust_hir::AnnNode::Arm(arm) => {\n+                s.s.space();\n+                s.synth_comment(format!(\"arm hir_id: {}\", arm.hir_id));\n             }\n         }\n     }"}]}