{"sha": "6e5951c7343cc1addecffb7de97b89c15a7030dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNTk1MWM3MzQzY2MxYWRkZWNmZmI3ZGU5N2I4OWMxNWE3MDMwZGQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-25T13:10:33Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-28T09:01:35Z"}, "message": "Remove unused type", "tree": {"sha": "2c45132292c75ed942ba9ad4066139b7659888ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c45132292c75ed942ba9ad4066139b7659888ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e5951c7343cc1addecffb7de97b89c15a7030dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e5951c7343cc1addecffb7de97b89c15a7030dd", "html_url": "https://github.com/rust-lang/rust/commit/6e5951c7343cc1addecffb7de97b89c15a7030dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e5951c7343cc1addecffb7de97b89c15a7030dd/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57e190c85024de27f1c8df8936e0b610a96908f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/57e190c85024de27f1c8df8936e0b610a96908f5", "html_url": "https://github.com/rust-lang/rust/commit/57e190c85024de27f1c8df8936e0b610a96908f5"}], "stats": {"total": 18, "additions": 0, "deletions": 18}, "files": [{"sha": "c39422d21c060a415c03c9437976197b1dd01cc3", "filename": "src/librustc/middle/const_val.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6e5951c7343cc1addecffb7de97b89c15a7030dd/src%2Flibrustc%2Fmiddle%2Fconst_val.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e5951c7343cc1addecffb7de97b89c15a7030dd/src%2Flibrustc%2Fmiddle%2Fconst_val.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_val.rs?ref=6e5951c7343cc1addecffb7de97b89c15a7030dd", "patch": "@@ -15,11 +15,9 @@ use ty::query::TyCtxtAt;\n use mir::interpret::ConstValue;\n use errors::DiagnosticBuilder;\n \n-use graphviz::IntoCow;\n use syntax_pos::Span;\n use syntax::ast;\n \n-use std::borrow::Cow;\n use rustc_data_structures::sync::Lrc;\n \n pub type EvalResult<'tcx> = Result<&'tcx ty::Const<'tcx>, ConstEvalErr<'tcx>>;\n@@ -43,22 +41,6 @@ pub struct FrameInfo {\n     pub lint_root: Option<ast::NodeId>,\n }\n \n-#[derive(Clone, Debug)]\n-pub enum ConstEvalErrDescription<'a, 'tcx: 'a> {\n-    Simple(Cow<'a, str>),\n-    Backtrace(&'a ::mir::interpret::EvalError<'tcx>, &'a [FrameInfo]),\n-}\n-\n-impl<'a, 'tcx> ConstEvalErrDescription<'a, 'tcx> {\n-    /// Return a one-line description of the error, for lints and such\n-    pub fn into_oneline(self) -> Cow<'a, str> {\n-        match self {\n-            ConstEvalErrDescription::Simple(simple) => simple,\n-            ConstEvalErrDescription::Backtrace(miri, _) => format!(\"{}\", miri).into_cow(),\n-        }\n-    }\n-}\n-\n impl<'a, 'gcx, 'tcx> ConstEvalErr<'tcx> {\n     pub fn struct_error(&self,\n         tcx: TyCtxtAt<'a, 'gcx, 'tcx>,"}]}