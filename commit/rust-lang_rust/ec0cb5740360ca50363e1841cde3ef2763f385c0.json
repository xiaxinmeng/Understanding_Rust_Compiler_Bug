{"sha": "ec0cb5740360ca50363e1841cde3ef2763f385c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMGNiNTc0MDM2MGNhNTAzNjNlMTg0MWNkZTNlZjI3NjNmMzg1YzA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-15T07:57:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-15T07:57:30Z"}, "message": "Rollup merge of #73336 - lzutao:pattern-group, r=sfackler\n\nGroup `Pattern::strip_*` method together", "tree": {"sha": "f1e07bc7de69a68693ced7d13d4657b36eb01bbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1e07bc7de69a68693ced7d13d4657b36eb01bbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec0cb5740360ca50363e1841cde3ef2763f385c0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe5ynqCRBK7hj4Ov3rIwAAdHIIAFPC2h/UCAEoVKv9/xuAtZ+v\nvNoX84G9RYPZv1Xp3SoldOwjgVCXvJBljKous5EOxgFBZNKZn0tm97FHXTGg0Me/\nvanN5o8R7nPNgE7xY0WaY7H1u5yNxRYmtqB+xS5jN8K6bTr2ue/8lh8M2e6mt/c5\nQTu296FIbIZsbhS7FTPq7dPszz1Us+2tX0EYgYZQSWNJLUiRbkNaIn8qVwsjcUor\n+VCHs4oo4slR94R0GVKNiyHD38LpI0E2+LlObjA0R3efEyL10MPTCh6jS2oEIBn2\nzqXXUUPccneBMnDCh6qZ7RNar7vuMaMH1qzN/XcLIEVPXxECaIJ6niPzWMeP0do=\n=ZvZH\n-----END PGP SIGNATURE-----\n", "payload": "tree f1e07bc7de69a68693ced7d13d4657b36eb01bbb\nparent 5193c5d60881e19afdfbab98cbc7ba6b7607ee18\nparent d82dd43387fef192714047ec0169ecd15f8b250a\nauthor Ralf Jung <post@ralfj.de> 1592207850 +0200\ncommitter GitHub <noreply@github.com> 1592207850 +0200\n\nRollup merge of #73336 - lzutao:pattern-group, r=sfackler\n\nGroup `Pattern::strip_*` method together\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec0cb5740360ca50363e1841cde3ef2763f385c0", "html_url": "https://github.com/rust-lang/rust/commit/ec0cb5740360ca50363e1841cde3ef2763f385c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec0cb5740360ca50363e1841cde3ef2763f385c0/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5193c5d60881e19afdfbab98cbc7ba6b7607ee18", "url": "https://api.github.com/repos/rust-lang/rust/commits/5193c5d60881e19afdfbab98cbc7ba6b7607ee18", "html_url": "https://github.com/rust-lang/rust/commit/5193c5d60881e19afdfbab98cbc7ba6b7607ee18"}, {"sha": "d82dd43387fef192714047ec0169ecd15f8b250a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d82dd43387fef192714047ec0169ecd15f8b250a", "html_url": "https://github.com/rust-lang/rust/commit/d82dd43387fef192714047ec0169ecd15f8b250a"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "14f1f293d40d68716fd09e8ba5c6dd04db715114", "filename": "src/libcore/str/pattern.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ec0cb5740360ca50363e1841cde3ef2763f385c0/src%2Flibcore%2Fstr%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0cb5740360ca50363e1841cde3ef2763f385c0/src%2Flibcore%2Fstr%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fpattern.rs?ref=ec0cb5740360ca50363e1841cde3ef2763f385c0", "patch": "@@ -69,7 +69,7 @@ use crate::slice::memchr;\n /// |--------------------------|-------------------------------------------|\n /// | `&str`                   | is substring                              |\n /// | `char`                   | is contained in string                    |\n-/// | `&[char]                 | any char in slice is contained in string  |\n+/// | `&[char]`                | any char in slice is contained in string  |\n /// | `F: FnMut(char) -> bool` | `F` returns `true` for a char in string   |\n /// | `&&str`                  | is substring                              |\n /// | `&String`                | is substring                              |\n@@ -117,6 +117,15 @@ pub trait Pattern<'a>: Sized {\n         matches!(self.into_searcher(haystack).next(), SearchStep::Match(0, _))\n     }\n \n+    /// Checks whether the pattern matches at the back of the haystack\n+    #[inline]\n+    fn is_suffix_of(self, haystack: &'a str) -> bool\n+    where\n+        Self::Searcher: ReverseSearcher<'a>,\n+    {\n+        matches!(self.into_searcher(haystack).next_back(), SearchStep::Match(_, j) if haystack.len() == j)\n+    }\n+\n     /// Removes the pattern from the front of haystack, if it matches.\n     #[inline]\n     fn strip_prefix_of(self, haystack: &'a str) -> Option<&'a str> {\n@@ -133,15 +142,6 @@ pub trait Pattern<'a>: Sized {\n         }\n     }\n \n-    /// Checks whether the pattern matches at the back of the haystack\n-    #[inline]\n-    fn is_suffix_of(self, haystack: &'a str) -> bool\n-    where\n-        Self::Searcher: ReverseSearcher<'a>,\n-    {\n-        matches!(self.into_searcher(haystack).next_back(), SearchStep::Match(_, j) if haystack.len() == j)\n-    }\n-\n     /// Removes the pattern from the back of haystack, if it matches.\n     #[inline]\n     fn strip_suffix_of(self, haystack: &'a str) -> Option<&'a str>"}]}