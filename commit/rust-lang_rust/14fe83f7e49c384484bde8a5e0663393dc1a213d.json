{"sha": "14fe83f7e49c384484bde8a5e0663393dc1a213d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZmU4M2Y3ZTQ5YzM4NDQ4NGJkZThhNWUwNjYzMzkzZGMxYTIxM2Q=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-06-02T08:59:10Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-06-02T18:30:18Z"}, "message": "Update rustdoc tests", "tree": {"sha": "50db3f64f13e66241b9973fe73f72b2364668db4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50db3f64f13e66241b9973fe73f72b2364668db4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14fe83f7e49c384484bde8a5e0663393dc1a213d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14fe83f7e49c384484bde8a5e0663393dc1a213d", "html_url": "https://github.com/rust-lang/rust/commit/14fe83f7e49c384484bde8a5e0663393dc1a213d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14fe83f7e49c384484bde8a5e0663393dc1a213d/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fab6814ff3033108a2f4a1b16bf51ad8ffd0e36f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fab6814ff3033108a2f4a1b16bf51ad8ffd0e36f", "html_url": "https://github.com/rust-lang/rust/commit/fab6814ff3033108a2f4a1b16bf51ad8ffd0e36f"}], "stats": {"total": 194, "additions": 100, "deletions": 94}, "files": [{"sha": "9f95d9a994b17c93a1ef7e746caba2327db6ebb9", "filename": "src/test/rustdoc/async-fn.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fasync-fn.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -77,12 +77,12 @@ struct AsyncFdReadyGuard<'a, T> { x: &'a T }\n \n impl Foo {\n     // @has async_fn/struct.Foo.html\n-    // @has - '//div[@class=\"method\"]' 'pub async fn complicated_lifetimes( &self, context: &impl Bar) -> impl Iterator<Item = &usize>'\n+    // @has - '//div[@class=\"method has-srclink\"]' 'pub async fn complicated_lifetimes( &self, context: &impl Bar) -> impl Iterator<Item = &usize>'\n     pub async fn complicated_lifetimes(&self, context: &impl Bar) -> impl Iterator<Item = &usize> {}\n     // taken from `tokio` as an example of a method that was particularly bad before\n-    // @has - '//div[@class=\"method\"]' \"pub async fn readable<T>(&self) -> Result<AsyncFdReadyGuard<'_, T>, ()>\"\n+    // @has - '//div[@class=\"method has-srclink\"]' \"pub async fn readable<T>(&self) -> Result<AsyncFdReadyGuard<'_, T>, ()>\"\n     pub async fn readable<T>(&self) -> Result<AsyncFdReadyGuard<'_, T>, ()> {}\n-    // @has - '//div[@class=\"method\"]' \"pub async fn mut_self(&mut self)\"\n+    // @has - '//div[@class=\"method has-srclink\"]' \"pub async fn mut_self(&mut self)\"\n     pub async fn mut_self(&mut self) {}\n }\n "}, {"sha": "28eba849ace072df369e2abdccd1556b1da4fec9", "filename": "src/test/rustdoc/const-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fconst-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fconst-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-fn.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -8,7 +8,7 @@ pub const fn bar() -> usize {\n }\n \n // @has foo/struct.Foo.html\n-// @has - '//*[@class=\"method\"]' 'const fn new()'\n+// @has - '//*[@class=\"method has-srclink\"]' 'const fn new()'\n pub struct Foo(usize);\n \n impl Foo {"}, {"sha": "626a9e2b2109e86b03c9b5d3f87c15ad0667fc8a", "filename": "src/test/rustdoc/const-generics/const-generic-slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-generic-slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-generic-slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-generic-slice.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -6,7 +6,7 @@ pub trait Array {\n }\n \n // @has foo/trait.Array.html\n-// @has - '//div[@class=\"impl\"]' 'impl<T, const N: usize> Array for [T; N]'\n+// @has - '//div[@class=\"impl has-srclink\"]' 'impl<T, const N: usize> Array for [T; N]'\n impl <T, const N: usize> Array for [T; N] {\n     type Item = T;\n }"}, {"sha": "4f15418650c2d69b49ec2f71f1d235b92e50de62", "filename": "src/test/rustdoc/doc-assoc-item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fdoc-assoc-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fdoc-assoc-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdoc-assoc-item.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -8,7 +8,7 @@ pub trait Bar {\n     fn foo(foo: Self::Fuu);\n }\n \n-// @has doc_assoc_item/struct.Foo.html '//*[@class=\"impl\"]' 'impl<T: Bar<Fuu = u32>> Foo<T>'\n+// @has doc_assoc_item/struct.Foo.html '//*[@class=\"impl has-srclink\"]' 'impl<T: Bar<Fuu = u32>> Foo<T>'\n impl<T: Bar<Fuu = u32>> Foo<T> {\n     pub fn new(t: T) -> Foo<T> {\n         Foo {"}, {"sha": "15c3444606c158f13edc549c47edee2be004b821", "filename": "src/test/rustdoc/duplicate_impls/issue-33054.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fduplicate_impls%2Fissue-33054.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fduplicate_impls%2Fissue-33054.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fduplicate_impls%2Fissue-33054.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -1,8 +1,8 @@\n // @has issue_33054/impls/struct.Foo.html\n // @has - '//code' 'impl Foo'\n // @has - '//code' 'impl Bar for Foo'\n-// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]' 1\n-// @count - '//*[@id=\"main\"]/details/summary/*[@class=\"impl\"]' 1\n+// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl has-srclink\"]' 1\n+// @count - '//*[@id=\"main\"]/details/summary/*[@class=\"impl has-srclink\"]' 1\n // @has issue_33054/impls/bar/trait.Bar.html\n // @has - '//code' 'impl Bar for Foo'\n // @count - '//*[@class=\"struct\"]' 1"}, {"sha": "e4039eecb71323f8e1e30861604b3967cf5d4d47", "filename": "src/test/rustdoc/impl-parts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fimpl-parts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fimpl-parts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fimpl-parts.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -5,7 +5,7 @@ pub auto trait AnAutoTrait {}\n \n pub struct Foo<T> { field: T }\n \n-// @has impl_parts/struct.Foo.html '//*[@class=\"impl\"]//code' \\\n+// @has impl_parts/struct.Foo.html '//*[@class=\"impl has-srclink\"]//code' \\\n //     \"impl<T: Clone> !AnAutoTrait for Foo<T> where T: Sync,\"\n // @has impl_parts/trait.AnAutoTrait.html '//*[@class=\"item-list\"]//code' \\\n //     \"impl<T: Clone> !AnAutoTrait for Foo<T> where T: Sync,\""}, {"sha": "390f0b845e00b905e552283a6accb7c214d3589b", "filename": "src/test/rustdoc/inline_cross/issue-31948-1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-31948-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-31948-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-31948-1.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -5,8 +5,8 @@\n extern crate rustdoc_nonreachable_impls;\n \n // @has issue_31948_1/struct.Wobble.html\n-// @has - '//*[@class=\"impl\"]//code' 'Bark for'\n-// @has - '//*[@class=\"impl\"]//code' 'Woof for'\n+// @has - '//*[@class=\"impl has-srclink\"]//code' 'Bark for'\n+// @has - '//*[@class=\"impl has-srclink\"]//code' 'Woof for'\n // @!has - '//*[@class=\"impl\"]//code' 'Bar for'\n // @!has - '//*[@class=\"impl\"]//code' 'Qux for'\n pub use rustdoc_nonreachable_impls::hidden::Wobble;"}, {"sha": "013e777440f1a83bbb3ca8459f67c9f2f91ccc87", "filename": "src/test/rustdoc/inline_cross/issue-31948-2.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-31948-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-31948-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-31948-2.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -5,9 +5,9 @@\n extern crate rustdoc_nonreachable_impls;\n \n // @has issue_31948_2/struct.Wobble.html\n-// @has - '//*[@class=\"impl\"]//code' 'Qux for'\n-// @has - '//*[@class=\"impl\"]//code' 'Bark for'\n-// @has - '//*[@class=\"impl\"]//code' 'Woof for'\n+// @has - '//*[@class=\"impl has-srclink\"]//code' 'Qux for'\n+// @has - '//*[@class=\"impl has-srclink\"]//code' 'Bark for'\n+// @has - '//*[@class=\"impl has-srclink\"]//code' 'Woof for'\n // @!has - '//*[@class=\"impl\"]//code' 'Bar for'\n pub use rustdoc_nonreachable_impls::hidden::Wobble;\n "}, {"sha": "82dcc2d2cc3efcdd3e692221a7a441626604349d", "filename": "src/test/rustdoc/inline_cross/issue-31948.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-31948.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-31948.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-31948.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -5,9 +5,9 @@\n extern crate rustdoc_nonreachable_impls;\n \n // @has issue_31948/struct.Foo.html\n-// @has - '//*[@class=\"impl\"]//code' 'Bark for'\n-// @has - '//*[@class=\"impl\"]//code' 'Woof for'\n-// @!has - '//*[@class=\"impl\"]//code' 'Bar for'\n+// @has - '//*[@class=\"impl has-srclink\"]//code' 'Bark for'\n+// @has - '//*[@class=\"impl has-srclink\"]//code' 'Woof for'\n+// @!has - '//*[@class=\"impl has-srclink\"]//code' 'Bar for'\n // @!has - '//*[@class=\"impl\"]//code' 'Qux for'\n pub use rustdoc_nonreachable_impls::Foo;\n "}, {"sha": "43ce13fd9b18524e2033b8e5d6b6d2e76bfdb76b", "filename": "src/test/rustdoc/issue-21474.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-21474.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-21474.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-21474.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -7,5 +7,5 @@ mod inner {\n pub trait Blah { }\n \n // @count issue_21474/struct.What.html \\\n-//        '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]' 1\n+//        '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl has-srclink\"]' 1\n pub struct What;"}, {"sha": "1777744c0fcb608a12d124dad91a91b3efc0ebe9", "filename": "src/test/rustdoc/issue-33302.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-33302.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-33302.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-33302.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -23,23 +23,23 @@ macro_rules! make {\n         }\n \n         // @has issue_33302/struct.S.html \\\n-        //        '//div[@class=\"impl\"]' 'impl T<[i32; 16]> for S'\n+        //        '//div[@class=\"impl has-srclink\"]' 'impl T<[i32; 16]> for S'\n         // @has - '//*[@id=\"associatedconstant.C\"]' 'const C: [i32; 16]'\n         // @has - '//*[@id=\"associatedconstant.D\"]' 'const D: i32'\n         impl T<[i32; ($n * $n)]> for S {\n             const C: [i32; ($n * $n)] = [0; ($n * $n)];\n         }\n \n         // @has issue_33302/struct.S.html \\\n-        //        '//div[@class=\"impl\"]' 'impl T<[i32; 16]> for S'\n+        //        '//div[@class=\"impl has-srclink\"]' 'impl T<[i32; 16]> for S'\n         // @has - '//*[@id=\"associatedconstant.C-1\"]' 'const C: (i32,)'\n         // @has - '//*[@id=\"associatedconstant.D-1\"]' 'const D: i32'\n         impl T<(i32,)> for S {\n             const C: (i32,) = ($n,);\n         }\n \n         // @has issue_33302/struct.S.html \\\n-        //        '//div[@class=\"impl\"]' 'impl T<(i32, i32)> for S'\n+        //        '//div[@class=\"impl has-srclink\"]' 'impl T<(i32, i32)> for S'\n         // @has - '//*[@id=\"associatedconstant.C-2\"]' 'const C: (i32, i32)'\n         // @has - '//*[@id=\"associatedconstant.D-2\"]' 'const D: i32'\n         impl T<(i32, i32)> for S {"}, {"sha": "86479e6fb2e51a67ef6f2143e67dc8930c3822cf", "filename": "src/test/rustdoc/issue-45584.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-45584.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-45584.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-45584.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -4,12 +4,12 @@ pub trait Bar<T, U> {}\n \n // @has 'foo/struct.Foo1.html'\n pub struct Foo1;\n-// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]' 1\n-// @has - '//*[@class=\"impl\"]' \"impl Bar<Foo1, &'static Foo1> for Foo1\"\n+// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl has-srclink\"]' 1\n+// @has - '//*[@class=\"impl has-srclink\"]' \"impl Bar<Foo1, &'static Foo1> for Foo1\"\n impl Bar<Foo1, &'static Foo1> for Foo1 {}\n \n // @has 'foo/struct.Foo2.html'\n pub struct Foo2;\n-// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]' 1\n-// @has - '//*[@class=\"impl\"]' \"impl Bar<&'static Foo2, Foo2> for u8\"\n+// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl has-srclink\"]' 1\n+// @has - '//*[@class=\"impl has-srclink\"]' \"impl Bar<&'static Foo2, Foo2> for u8\"\n impl Bar<&'static Foo2, Foo2> for u8 {}"}, {"sha": "69774aa351f173fc5e395d246fc44e8ff7aabc72", "filename": "src/test/rustdoc/issue-50159.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-50159.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-50159.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-50159.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -14,7 +14,7 @@ impl<B, C> Signal2 for B where B: Signal<Item = C> {\n // @has - '//code' 'impl<B> Send for Switch<B> where <B as Signal>::Item: Send'\n // @has - '//code' 'impl<B> Sync for Switch<B> where <B as Signal>::Item: Sync'\n // @count - '//*[@id=\"implementations-list\"]//*[@class=\"impl\"]' 0\n-// @count - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]' 5\n+// @count - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]' 5\n pub struct Switch<B: Signal> {\n     pub inner: <B as Signal2>::Item2,\n }"}, {"sha": "e01dae6c7f183ca81782a7d0721873de1355002d", "filename": "src/test/rustdoc/issue-51236.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-51236.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-51236.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-51236.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -7,8 +7,8 @@ pub mod traits {\n }\n \n // @has issue_51236/struct.Owned.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> Send for \\\n-// Owned<T> where <T as Owned<'static>>::Reader: Send\"\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<T> Send for Owned<T> where <T as Owned<'static>>::Reader: Send\"\n pub struct Owned<T> where T: for<'a> ::traits::Owned<'a> {\n     marker: PhantomData<<T as ::traits::Owned<'static>>::Reader>,\n }"}, {"sha": "0b1f2f2c93f19eda621672dc73d2bfbf0726481f", "filename": "src/test/rustdoc/issue-53812.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-53812.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-53812.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-53812.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -13,9 +13,9 @@ macro_rules! array_impls {\n }\n \n // @has issue_53812/trait.MyIterator.html\n-// @has - '//*[@id=\"implementors-list\"]/div[@class=\"impl\"][1]' 'MyStruct<[T; 0]>'\n-// @has - '//*[@id=\"implementors-list\"]/div[@class=\"impl\"][2]' 'MyStruct<[T; 1]>'\n-// @has - '//*[@id=\"implementors-list\"]/div[@class=\"impl\"][3]' 'MyStruct<[T; 2]>'\n-// @has - '//*[@id=\"implementors-list\"]/div[@class=\"impl\"][4]' 'MyStruct<[T; 3]>'\n-// @has - '//*[@id=\"implementors-list\"]/div[@class=\"impl\"][5]' 'MyStruct<[T; 10]>'\n+// @has - '//*[@id=\"implementors-list\"]/div[@class=\"impl has-srclink\"][1]' 'MyStruct<[T; 0]>'\n+// @has - '//*[@id=\"implementors-list\"]/div[@class=\"impl has-srclink\"][2]' 'MyStruct<[T; 1]>'\n+// @has - '//*[@id=\"implementors-list\"]/div[@class=\"impl has-srclink\"][3]' 'MyStruct<[T; 2]>'\n+// @has - '//*[@id=\"implementors-list\"]/div[@class=\"impl has-srclink\"][4]' 'MyStruct<[T; 3]>'\n+// @has - '//*[@id=\"implementors-list\"]/div[@class=\"impl has-srclink\"][5]' 'MyStruct<[T; 10]>'\n array_impls! { 10 3 2 1 0 }"}, {"sha": "5a94d36ed70d067f3acacc10111cccd6f4daf324", "filename": "src/test/rustdoc/issue-54705.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-54705.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-54705.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-54705.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -3,11 +3,11 @@ pub trait ScopeHandle<'scope> {}\n \n \n // @has issue_54705/struct.ScopeFutureContents.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<'scope, S> \\\n-// Send for ScopeFutureContents<'scope, S> where S: Sync\"\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<'scope, S> Send for ScopeFutureContents<'scope, S> where S: Sync\"\n //\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<'scope, S> \\\n-// Sync for ScopeFutureContents<'scope, S> where S: Sync\"\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<'scope, S> Sync for ScopeFutureContents<'scope, S> where S: Sync\"\n pub struct ScopeFutureContents<'scope, S>\n     where S: ScopeHandle<'scope>,\n {"}, {"sha": "b664733487b3defb952ec1ce4658ca6f3f1ab14d", "filename": "src/test/rustdoc/issue-55321.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-55321.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-55321.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-55321.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -1,16 +1,18 @@\n #![feature(negative_impls)]\n \n // @has issue_55321/struct.A.html\n-// @has - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]//code' \"impl !Send for A\"\n-// @has - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]//code' \"impl !Sync for A\"\n+// @has - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl !Send for A\"\n+// @has - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl !Sync for A\"\n pub struct A();\n \n impl !Send for A {}\n impl !Sync for A {}\n \n // @has issue_55321/struct.B.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> !Send for \\\n-// B<T>\"\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> !Sync for \\\n-// B<T>\"\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<T> !Send for B<T>\"\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<T> !Sync for B<T>\"\n pub struct B<T: ?Sized>(A, Box<T>);"}, {"sha": "977596e0b90884e6bcfa622ee77fff74e0558180", "filename": "src/test/rustdoc/issue-56822.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-56822.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-56822.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-56822.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -17,8 +17,8 @@ impl<'a, T> MyTrait for Inner<'a, T> {\n }\n \n // @has issue_56822/struct.Parser.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<'a> Send for \\\n-// Parser<'a>\"\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<'a> Send for Parser<'a>\"\n pub struct Parser<'a> {\n     field: <Wrapper<Inner<'a, u8>> as MyTrait>::Output\n }"}, {"sha": "e0417f1a4f4b8c9df243d30e126e8d2f1d10e45b", "filename": "src/test/rustdoc/issue-60726.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-60726.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-60726.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-60726.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -26,10 +26,10 @@ where\n {}\n \n // @has issue_60726/struct.IntoIter.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> !Send for \\\n-// IntoIter<T>\"\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> !Sync for \\\n-// IntoIter<T>\"\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<T> !Send for IntoIter<T>\"\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<T> !Sync for IntoIter<T>\"\n pub struct IntoIter<T>{\n     hello:DynTrait<FooInterface<T>>,\n }"}, {"sha": "a90e0fea09223064332aa8a094898249a7e9308a", "filename": "src/test/rustdoc/issue-76501.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-76501.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-76501.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-76501.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -8,7 +8,8 @@ pub const fn bloop() -> i32 {\n pub struct Struct {}\n \n impl Struct {\n-    // @has 'issue_76501/struct.Struct.html' '//*[@class=\"method\"]' 'pub const fn blurp() -> i32'\n+    // @has 'issue_76501/struct.Struct.html' '//*[@class=\"method has-srclink\"]' \\\n+    // 'pub const fn blurp() -> i32'\n     /// A useless function that always returns 1.\n     pub const fn blurp() -> i32 {\n         1"}, {"sha": "2e4bec2544c9d6fd3a655f8de100293487bc63da", "filename": "src/test/rustdoc/issue-78673.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-78673.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fissue-78673.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-78673.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -7,17 +7,17 @@ pub trait AnAmazingTrait {}\n impl<T: Something> AnAmazingTrait for T {}\n \n // @has 'issue_78673/struct.MyStruct.html'\n-// @has  - '//*[@class=\"impl\"]' 'AnAmazingTrait for MyStruct'\n-// @!has - '//*[@class=\"impl\"]' 'AnAmazingTrait for T'\n+// @has  - '//*[@class=\"impl has-srclink\"]' 'AnAmazingTrait for MyStruct'\n+// @!has - '//*[@class=\"impl has-srclink\"]' 'AnAmazingTrait for T'\n pub struct MyStruct;\n \n impl AnAmazingTrait for MyStruct {}\n \n // generic structs may have _both_ specific and blanket impls that apply\n \n // @has 'issue_78673/struct.AnotherStruct.html'\n-// @has - '//*[@class=\"impl\"]' 'AnAmazingTrait for AnotherStruct<()>'\n-// @has - '//*[@class=\"impl\"]' 'AnAmazingTrait for T'\n+// @has - '//*[@class=\"impl has-srclink\"]' 'AnAmazingTrait for AnotherStruct<()>'\n+// @has - '//*[@class=\"impl has-srclink\"]' 'AnAmazingTrait for T'\n pub struct AnotherStruct<T>(T);\n \n impl<T: Something> Something for AnotherStruct<T> {}"}, {"sha": "f3ea6995839174fce43e40925fd7a4dd2a64ee09", "filename": "src/test/rustdoc/mut-params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fmut-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fmut-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmut-params.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -5,7 +5,7 @@\n \n pub struct Foo;\n \n-// @count foo/struct.Foo.html '//*[@class=\"impl-items\"]//*[@class=\"method\"]' 2\n+// @count foo/struct.Foo.html '//*[@class=\"impl-items\"]//*[@class=\"method has-srclink\"]' 2\n // @!has - '//*[@class=\"impl-items\"]//*[@class=\"method\"]' 'mut'\n impl Foo {\n     pub fn foo(mut self) {}"}, {"sha": "ee65a7d5f3902a0ecb07555c44ea6a5e4cf15df0", "filename": "src/test/rustdoc/negative-impl.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fnegative-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fnegative-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fnegative-impl.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -5,8 +5,10 @@ pub struct Alpha;\n // @matches negative_impl/struct.Bravo.html '//pre' \"pub struct Bravo<B>\"\n pub struct Bravo<B>(B);\n \n-// @matches negative_impl/struct.Alpha.html '//*[@class=\"impl\"]//code' \"impl !Send for Alpha\"\n+// @matches negative_impl/struct.Alpha.html '//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl !Send for Alpha\"\n impl !Send for Alpha {}\n \n-// @matches negative_impl/struct.Bravo.html '//*[@class=\"impl\"]//code' \"impl<B> !Send for Bravo<B>\"\n+// @matches negative_impl/struct.Bravo.html '//*[@class=\"impl has-srclink\"]//code' \"\\\n+// impl<B> !Send for Bravo<B>\"\n impl<B> !Send for Bravo<B> {}"}, {"sha": "fa7de0aff6a228fdff94fec796f9424e467ae6a9", "filename": "src/test/rustdoc/pub-method.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fpub-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fpub-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fpub-method.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -10,8 +10,8 @@ pub fn bar() -> usize {\n }\n \n // @has foo/struct.Foo.html\n-// @has - '//*[@class=\"method\"]' 'pub fn new()'\n-// @has - '//*[@class=\"method\"]' 'fn not_pub()'\n+// @has - '//*[@class=\"method has-srclink\"]' 'pub fn new()'\n+// @has - '//*[@class=\"method has-srclink\"]' 'fn not_pub()'\n pub struct Foo(usize);\n \n impl Foo {"}, {"sha": "943596a0c851815959646259adedf269d2dab269", "filename": "src/test/rustdoc/synthetic_auto/basic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fbasic.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -1,8 +1,8 @@\n // @has basic/struct.Foo.html\n // @has - '//code' 'impl<T> Send for Foo<T> where T: Send'\n // @has - '//code' 'impl<T> Sync for Foo<T> where T: Sync'\n-// @count - '//*[@id=\"implementations-list\"]//*[@class=\"impl\"]' 0\n-// @count - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]' 5\n+// @count - '//*[@id=\"implementations-list\"]//*[@class=\"impl has-srclink\"]' 0\n+// @count - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]' 5\n pub struct Foo<T> {\n     field: T,\n }"}, {"sha": "0213142266feb4d9caa367b9d607a46fe3f96e37", "filename": "src/test/rustdoc/synthetic_auto/complex.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fcomplex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fcomplex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fcomplex.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -20,8 +20,8 @@ mod foo {\n }\n \n // @has complex/struct.NotOuter.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<'a, T, K: \\\n-// ?Sized> Send for Outer<'a, T, K> where K: for<'b> Fn((&'b bool, &'a u8)) \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<'a, T, K: ?Sized> Send for Outer<'a, T, K> where K: for<'b> Fn((&'b bool, &'a u8)) \\\n // -> &'b i8, T: MyTrait<'a>, <T as MyTrait<'a>>::MyItem: Copy, 'a: 'static\"\n \n pub use foo::{Foo, Inner as NotInner, MyTrait as NotMyTrait, Outer as NotOuter};"}, {"sha": "c2e9b6f404677442129cb83a49e44c64d1a29557", "filename": "src/test/rustdoc/synthetic_auto/lifetimes.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Flifetimes.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -9,11 +9,11 @@ where\n {}\n \n // @has lifetimes/struct.Foo.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<'c, K> Send \\\n-// for Foo<'c, K> where K: for<'b> Fn(&'b bool) -> &'c u8, 'c: 'static\"\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<'c, K> Send for Foo<'c, K> where K: for<'b> Fn(&'b bool) -> &'c u8, 'c: 'static\"\n //\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<'c, K> Sync \\\n-// for Foo<'c, K> where K: Sync\"\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<'c, K> Sync for Foo<'c, K> where K: Sync\"\n pub struct Foo<'c, K: 'c> {\n     inner_field: Inner<'c, K>,\n }"}, {"sha": "91fe6c351c5fcaf07c7268ddabeef7819983f6fb", "filename": "src/test/rustdoc/synthetic_auto/manual.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fmanual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fmanual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fmanual.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -1,12 +1,12 @@\n // @has manual/struct.Foo.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' 'impl<T> Sync for \\\n-// Foo<T> where T: Sync'\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// 'impl<T> Sync for Foo<T> where T: Sync'\n //\n-// @has - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]//code' \\\n+// @has - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n // 'impl<T> Send for Foo<T>'\n //\n-// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl\"]' 1\n-// @count - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]' 4\n+// @count - '//*[@id=\"trait-implementations-list\"]//*[@class=\"impl has-srclink\"]' 1\n+// @count - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]' 4\n pub struct Foo<T> {\n     field: T,\n }"}, {"sha": "16b36b56b68076058d7df5eb04f9df9531ac2d43", "filename": "src/test/rustdoc/synthetic_auto/negative.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fnegative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fnegative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fnegative.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -3,11 +3,11 @@ pub struct Inner<T: Copy> {\n }\n \n // @has negative/struct.Outer.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> !Send for \\\n-// Outer<T>\"\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<T> !Send for Outer<T>\"\n //\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> \\\n-// !Sync for Outer<T>\"\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<T> !Sync for Outer<T>\"\n pub struct Outer<T: Copy> {\n     inner_field: Inner<T>,\n }"}, {"sha": "a6cf5890dcab458c41465d2c9aeabb71d1caff05", "filename": "src/test/rustdoc/synthetic_auto/nested.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fnested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fnested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fnested.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -9,10 +9,10 @@ where\n }\n \n // @has nested/struct.Foo.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' 'impl<T> Send for \\\n-// Foo<T> where T: Copy'\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// 'impl<T> Send for Foo<T> where T: Copy'\n //\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \\\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n // 'impl<T> Sync for Foo<T> where T: Sync'\n pub struct Foo<T> {\n     inner_field: Inner<T>,"}, {"sha": "5c744e3eb3c9423a98672c61acfd16ec393e827b", "filename": "src/test/rustdoc/synthetic_auto/no-redundancy.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fno-redundancy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fno-redundancy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fno-redundancy.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -9,8 +9,8 @@ where\n }\n \n // @has no_redundancy/struct.Outer.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> Send for \\\n-// Outer<T> where T: Copy + Send\"\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<T> Send for Outer<T> where T: Copy + Send\"\n pub struct Outer<T> {\n     inner_field: Inner<T>,\n }"}, {"sha": "baf9924b1ae66465fc954790596ca8f99e47cb29", "filename": "src/test/rustdoc/synthetic_auto/project.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fproject.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -23,11 +23,12 @@ where\n }\n \n // @has project/struct.Foo.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<'c, K> Send \\\n-// for Foo<'c, K> where K: MyTrait<MyItem = bool>, 'c: 'static\"\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<'c, K> Send for Foo<'c, K> where K: MyTrait<MyItem = bool>, 'c: 'static\"\n //\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<'c, K> Sync \\\n-// for Foo<'c, K> where K: MyTrait, <K as MyTrait>::MyItem: OtherTrait, 'c: 'static,\"\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<'c, K> Sync for Foo<'c, K> where K: MyTrait, <K as MyTrait>::MyItem: OtherTrait, \\\n+// 'c: 'static,\"\n pub struct Foo<'c, K: 'c> {\n     inner_field: Inner<'c, K>,\n }"}, {"sha": "e96187e2c9632a3d1c15731b914258413b386d0a", "filename": "src/test/rustdoc/synthetic_auto/self-referential.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fself-referential.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fself-referential.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fself-referential.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -23,7 +23,7 @@ impl<T> Pattern for Wrapper<T> {\n \n \n // @has self_referential/struct.WriteAndThen.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<P1> Send for \\\n-// WriteAndThen<P1>  where  <P1 as Pattern>::Value: Send\"\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<P1> Send for WriteAndThen<P1>  where  <P1 as Pattern>::Value: Send\"\n pub struct WriteAndThen<P1>(pub P1::Value,pub <Constrain<P1, Wrapper<P1::Value>> as Pattern>::Value)\n     where P1: Pattern;"}, {"sha": "fc732a08ed404732984e8c74dd574f71e32297c8", "filename": "src/test/rustdoc/synthetic_auto/static-region.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fstatic-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fstatic-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsynthetic_auto%2Fstatic-region.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -3,8 +3,8 @@ pub trait OwnedTrait<'a> {\n }\n \n // @has static_region/struct.Owned.html\n-// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl\"]//code' \"impl<T> Send for \\\n-// Owned<T> where <T as OwnedTrait<'static>>::Reader: Send\"\n+// @has - '//*[@id=\"synthetic-implementations-list\"]//*[@class=\"impl has-srclink\"]//code' \\\n+// \"impl<T> Send for Owned<T> where <T as OwnedTrait<'static>>::Reader: Send\"\n pub struct Owned<T> where T: OwnedTrait<'static> {\n     marker: <T as OwnedTrait<'static>>::Reader,\n }"}, {"sha": "21a7fdda7691df8e833723f325823ae118b407d0", "filename": "src/test/rustdoc/typedef.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Ftypedef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Ftypedef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftypedef.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -9,8 +9,8 @@ impl MyStruct {\n }\n \n // @has typedef/type.MyAlias.html\n-// @has - '//*[@class=\"impl\"]//code' 'impl MyAlias'\n-// @has - '//*[@class=\"impl\"]//code' 'impl MyTrait for MyAlias'\n+// @has - '//*[@class=\"impl has-srclink\"]//code' 'impl MyAlias'\n+// @has - '//*[@class=\"impl has-srclink\"]//code' 'impl MyTrait for MyAlias'\n // @has - 'Alias docstring'\n // @has - '//*[@class=\"sidebar\"]//p[@class=\"location\"]' 'Type Definition MyAlias'\n // @has - '//*[@class=\"sidebar\"]//a[@href=\"#implementations\"]' 'Methods'"}, {"sha": "f204a27d7d3c1908d0b576021f3bbe5086a45565", "filename": "src/test/rustdoc/where.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fwhere.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14fe83f7e49c384484bde8a5e0663393dc1a213d/src%2Ftest%2Frustdoc%2Fwhere.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhere.rs?ref=14fe83f7e49c384484bde8a5e0663393dc1a213d", "patch": "@@ -11,23 +11,23 @@ pub fn charlie<C>() where C: MyTrait {}\n \n pub struct Delta<D>(D);\n \n-// @has foo/struct.Delta.html '//*[@class=\"impl\"]//code' \\\n+// @has foo/struct.Delta.html '//*[@class=\"impl has-srclink\"]//code' \\\n //          \"impl<D> Delta<D> where D: MyTrait\"\n impl<D> Delta<D> where D: MyTrait {\n     pub fn delta() {}\n }\n \n pub struct Echo<E>(E);\n \n-// @has foo/struct.Echo.html '//*[@class=\"impl\"]//code' \\\n+// @has foo/struct.Echo.html '//*[@class=\"impl has-srclink\"]//code' \\\n //          \"impl<E> MyTrait for Echo<E> where E: MyTrait\"\n // @has foo/trait.MyTrait.html '//*[@id=\"implementors-list\"]//code' \\\n //          \"impl<E> MyTrait for Echo<E> where E: MyTrait\"\n impl<E> MyTrait for Echo<E> where E: MyTrait {}\n \n pub enum Foxtrot<F> { Foxtrot1(F) }\n \n-// @has foo/enum.Foxtrot.html '//*[@class=\"impl\"]//code' \\\n+// @has foo/enum.Foxtrot.html '//*[@class=\"impl has-srclink\"]//code' \\\n //          \"impl<F> MyTrait for Foxtrot<F> where F: MyTrait\"\n // @has foo/trait.MyTrait.html '//*[@id=\"implementors-list\"]//code' \\\n //          \"impl<F> MyTrait for Foxtrot<F> where F: MyTrait\""}]}