{"sha": "d20f54bb1a873a16681c687a58b7946dc6924913", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMGY1NGJiMWE4NzNhMTY2ODFjNjg3YTU4Yjc5NDZkYzY5MjQ5MTM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-05T17:42:43Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-05T17:42:43Z"}, "message": "Add some benchmarks", "tree": {"sha": "9b38a1335085ca67caac07717419a7adb78c4691", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b38a1335085ca67caac07717419a7adb78c4691"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d20f54bb1a873a16681c687a58b7946dc6924913", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d20f54bb1a873a16681c687a58b7946dc6924913", "html_url": "https://github.com/rust-lang/rust/commit/d20f54bb1a873a16681c687a58b7946dc6924913", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d20f54bb1a873a16681c687a58b7946dc6924913/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e4cad8a205276bdaf577a81b6af5102fbc2ee15", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e4cad8a205276bdaf577a81b6af5102fbc2ee15", "html_url": "https://github.com/rust-lang/rust/commit/4e4cad8a205276bdaf577a81b6af5102fbc2ee15"}], "stats": {"total": 103, "additions": 99, "deletions": 4}, "files": [{"sha": "9ee74793c72dba138316264d0a91c8927d6603c3", "filename": ".travis.yml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d20f54bb1a873a16681c687a58b7946dc6924913/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/d20f54bb1a873a16681c687a58b7946dc6924913/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=d20f54bb1a873a16681c687a58b7946dc6924913", "patch": "@@ -8,6 +8,7 @@ rust:\n script:\n   - rustup component add rust-src\n   - cargo install xargo || echo \"Skipping xargo install\"\n+  - cargo install hyperfine || echo \"Skipping hyperfine install\"\n   - ./prepare_libcore.sh\n   - ./build.sh\n "}, {"sha": "acb9bbc92d70fd1dbcbae3076416d96c6e0c3fbb", "filename": "build.sh", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d20f54bb1a873a16681c687a58b7946dc6924913/build.sh", "raw_url": "https://github.com/rust-lang/rust/raw/d20f54bb1a873a16681c687a58b7946dc6924913/build.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build.sh?ref=d20f54bb1a873a16681c687a58b7946dc6924913", "patch": "@@ -48,13 +48,29 @@ SHOULD_RUN=1 $RUSTC --crate-type bin example/mini_core_hello_world.rs --cfg jit\n echo \"[AOT] mini_core_hello_world\"\n build_example_bin mini_core_hello_world example/mini_core_hello_world.rs\n \n-echo \"[BUILD] core\"\n-time $RUSTC target/libcore/src/libcore/lib.rs --crate-type lib --crate-name core -Cincremental=target/incremental_core\n-\n pushd xargo\n rm -r ~/.xargo/HOST || true\n rm -r target || true\n-time xargo build --color always\n+time xargo build\n popd\n \n+$RUSTC --sysroot ~/.xargo/HOST example/alloc_example.rs --crate-type bin\n+# TODO linux linker doesn't accept duplicate definitions\n+#gcc -Wl,--gc-sections target/out/alloc_example ~/.xargo/HOST/lib/rustlib/*/lib/libcore-*.rlib ~/.xargo/HOST/lib/rustlib/*/lib/liballoc-*.rlib ~/.xargo/HOST/lib/rustlib/*/lib/liballoc_system-*.rlib -o target/out/alloc_example_exe\n+#hyperfine ./target/out/alloc_example_exe\n+\n+$RUSTC --sysroot ~/.xargo/HOST example/mod_bench.rs --crate-type bin\n+gcc -Wl,--gc-sections target/out/mod_bench -lc -o target/out/mod_bench_exe\n+\n+$RUSTC --sysroot ~/.xargo/HOST example/mod_bench.rs --crate-type bin -Zmir-opt-level=3 --crate-name mod_bench_inline\n+gcc -Wl,--gc-sections target/out/mod_bench_inline -lc -o target/out/mod_bench_inline_exe\n+\n+rustc example/mod_bench.rs --crate-type bin -Copt-level=0 -o target/out/mod_bench_llvm_0 -Cpanic=abort\n+rustc example/mod_bench.rs --crate-type bin -Copt-level=1 -o target/out/mod_bench_llvm_1 -Cpanic=abort\n+rustc example/mod_bench.rs --crate-type bin -Copt-level=2 -o target/out/mod_bench_llvm_2 -Cpanic=abort\n+rustc example/mod_bench.rs --crate-type bin -Copt-level=3 -o target/out/mod_bench_llvm_3 -Cpanic=abort\n+echo\n+echo \"[Bench] mod_bench\"\n+hyperfine ./target/out/mod_bench{,_inline}_exe ./target/out/mod_bench_llvm_*\n+\n cat target/out/log.txt | sort | uniq -c"}, {"sha": "06746ab1f76e92ec35e656bd91397ebc2c4e83e5", "filename": "example/alloc_example.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/d20f54bb1a873a16681c687a58b7946dc6924913/example%2Falloc_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d20f54bb1a873a16681c687a58b7946dc6924913/example%2Falloc_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Falloc_example.rs?ref=d20f54bb1a873a16681c687a58b7946dc6924913", "patch": "@@ -0,0 +1,41 @@\n+#![feature(start, box_syntax, alloc_system, core_intrinsics, alloc, alloc_error_handler)]\n+#![no_std]\n+\n+extern crate alloc;\n+extern crate alloc_system;\n+\n+use alloc::prelude::*;\n+\n+use alloc_system::System;\n+\n+#[global_allocator]\n+static ALLOC: System = System;\n+\n+#[link(name = \"c\")]\n+extern \"C\" {\n+    fn puts(s: *const u8);\n+}\n+\n+#[panic_handler]\n+fn panic_handler(_: &core::panic::PanicInfo) -> ! {\n+    unsafe {\n+        core::intrinsics::abort();\n+    }\n+}\n+\n+#[alloc_error_handler]\n+fn alloc_error_handler(_: alloc::alloc::Layout) -> ! {\n+    unsafe {\n+        core::intrinsics::abort();\n+    }\n+}\n+\n+#[start]\n+fn main(_argc: isize, _argv: *const *const u8) -> isize {\n+    let world: Box<&str> = box \"Hello World!\\0\";\n+    unsafe {\n+        puts(*world as *const str as *const u8);\n+    }\n+\n+    0\n+}"}, {"sha": "2e2b0052dee8b7ff84a9c1381f7d5e566671d39f", "filename": "example/mod_bench.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/d20f54bb1a873a16681c687a58b7946dc6924913/example%2Fmod_bench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d20f54bb1a873a16681c687a58b7946dc6924913/example%2Fmod_bench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Fmod_bench.rs?ref=d20f54bb1a873a16681c687a58b7946dc6924913", "patch": "@@ -0,0 +1,37 @@\n+#![feature(start, box_syntax, core_intrinsics, lang_items)]\n+#![no_std]\n+\n+#[link(name = \"c\")]\n+extern {}\n+\n+#[panic_handler]\n+fn panic_handler(_: &core::panic::PanicInfo) -> ! {\n+    unsafe {\n+        core::intrinsics::abort();\n+    }\n+}\n+\n+#[lang=\"eh_personality\"]\n+fn eh_personality(){}\n+\n+// Required for rustc_codegen_llvm\n+#[no_mangle]\n+unsafe extern \"C\" fn _Unwind_Resume() {\n+    core::intrinsics::unreachable();\n+}\n+\n+#[start]\n+fn main(_argc: isize, _argv: *const *const u8) -> isize {\n+    for i in 2..100_000_000 {\n+        black_box((i + 1) % i);\n+    }\n+\n+    0\n+}\n+\n+#[inline(never)]\n+fn black_box(i: u32) {\n+    if i != 1 {\n+        unsafe { core::intrinsics::abort(); }\n+    }\n+}"}]}