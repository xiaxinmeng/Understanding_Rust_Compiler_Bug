{"sha": "51a73eb4fbbf2ec74c6a86942780fc2600811540", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxYTczZWI0ZmJiZjJlYzc0YzZhODY5NDI3ODBmYzI2MDA4MTE1NDA=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-12-31T13:28:36Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-01-10T23:33:27Z"}, "message": "Avoid a duplicate hash map lookup", "tree": {"sha": "152fee1d76f11333ddd68d8ba38c3633888276f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/152fee1d76f11333ddd68d8ba38c3633888276f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51a73eb4fbbf2ec74c6a86942780fc2600811540", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51a73eb4fbbf2ec74c6a86942780fc2600811540", "html_url": "https://github.com/rust-lang/rust/commit/51a73eb4fbbf2ec74c6a86942780fc2600811540", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51a73eb4fbbf2ec74c6a86942780fc2600811540/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4beeadda3c137c8c8d66ba6b1bb3fb0be9b37b86", "url": "https://api.github.com/repos/rust-lang/rust/commits/4beeadda3c137c8c8d66ba6b1bb3fb0be9b37b86", "html_url": "https://github.com/rust-lang/rust/commit/4beeadda3c137c8c8d66ba6b1bb3fb0be9b37b86"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "e85e842031dbb0ede4b7ad70edd25213048134ec", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/51a73eb4fbbf2ec74c6a86942780fc2600811540/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51a73eb4fbbf2ec74c6a86942780fc2600811540/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=51a73eb4fbbf2ec74c6a86942780fc2600811540", "patch": "@@ -227,10 +227,7 @@ impl<'tcx> InliningMap<'tcx> {\n         }\n     }\n \n-    fn record_accesses(&mut self, source: MonoItem<'tcx>, new_targets: &[(MonoItem<'tcx>, bool)])\n-    {\n-        assert!(!self.index.contains_key(&source));\n-\n+    fn record_accesses(&mut self, source: MonoItem<'tcx>, new_targets: &[(MonoItem<'tcx>, bool)]) {\n         let start_index = self.targets.len();\n         let new_items_count = new_targets.len();\n         let new_items_count_total = new_items_count + self.targets.len();\n@@ -246,7 +243,7 @@ impl<'tcx> InliningMap<'tcx> {\n         }\n \n         let end_index = self.targets.len();\n-        self.index.insert(source, (start_index, end_index));\n+        assert!(self.index.insert(source, (start_index, end_index)).is_none());\n     }\n \n     // Internally iterate over all items referenced by `source` which will be"}]}