{"sha": "74f3cca85ab870614f314c6180e2fbb883ad4fe3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0ZjNjY2E4NWFiODcwNjE0ZjMxNGM2MTgwZTJmYmI4ODNhZDRmZTM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-13T17:13:15Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-13T17:14:12Z"}, "message": "internal: refactor remove this semicolon diagnostics", "tree": {"sha": "69f0f7aac85ae2fe0a6907a956b94b0bd434ea7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69f0f7aac85ae2fe0a6907a956b94b0bd434ea7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74f3cca85ab870614f314c6180e2fbb883ad4fe3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74f3cca85ab870614f314c6180e2fbb883ad4fe3", "html_url": "https://github.com/rust-lang/rust/commit/74f3cca85ab870614f314c6180e2fbb883ad4fe3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74f3cca85ab870614f314c6180e2fbb883ad4fe3/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d391ec981562785ec92ce3afe950972c523f925", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d391ec981562785ec92ce3afe950972c523f925", "html_url": "https://github.com/rust-lang/rust/commit/8d391ec981562785ec92ce3afe950972c523f925"}], "stats": {"total": 154, "additions": 71, "deletions": 83}, "files": [{"sha": "b144bb33506cad2da5ac9725ef08448e48970587", "filename": "crates/hir/src/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/74f3cca85ab870614f314c6180e2fbb883ad4fe3/crates%2Fhir%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74f3cca85ab870614f314c6180e2fbb883ad4fe3/crates%2Fhir%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdiagnostics.rs?ref=74f3cca85ab870614f314c6180e2fbb883ad4fe3", "patch": "@@ -39,6 +39,7 @@ diagnostics![\n     MissingFields,\n     MissingUnsafe,\n     NoSuchField,\n+    RemoveThisSemicolon,\n     UnimplementedBuiltinMacro,\n     UnresolvedExternCrate,\n     UnresolvedImport,\n@@ -153,26 +154,7 @@ pub struct MismatchedArgCount {\n \n #[derive(Debug)]\n pub struct RemoveThisSemicolon {\n-    pub file: HirFileId,\n-    pub expr: AstPtr<ast::Expr>,\n-}\n-\n-impl Diagnostic for RemoveThisSemicolon {\n-    fn code(&self) -> DiagnosticCode {\n-        DiagnosticCode(\"remove-this-semicolon\")\n-    }\n-\n-    fn message(&self) -> String {\n-        \"Remove this semicolon\".to_string()\n-    }\n-\n-    fn display_source(&self) -> InFile<SyntaxNodePtr> {\n-        InFile { file_id: self.file, value: self.expr.clone().into() }\n-    }\n-\n-    fn as_any(&self) -> &(dyn Any + Send + 'static) {\n-        self\n-    }\n+    pub expr: InFile<AstPtr<ast::Expr>>,\n }\n \n // Diagnostic: missing-ok-or-some-in-tail-expr"}, {"sha": "cb9bf60b817ea9687a5fe8290947c27f028a1f96", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/74f3cca85ab870614f314c6180e2fbb883ad4fe3/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74f3cca85ab870614f314c6180e2fbb883ad4fe3/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=74f3cca85ab870614f314c6180e2fbb883ad4fe3", "patch": "@@ -1184,10 +1184,7 @@ impl Function {\n                 }\n                 BodyValidationDiagnostic::RemoveThisSemicolon { expr } => {\n                     match source_map.expr_syntax(expr) {\n-                        Ok(source_ptr) => sink.push(RemoveThisSemicolon {\n-                            file: source_ptr.file_id,\n-                            expr: source_ptr.value,\n-                        }),\n+                        Ok(expr) => acc.push(RemoveThisSemicolon { expr }.into()),\n                         Err(SyntheticSyntax) => (),\n                     }\n                 }"}, {"sha": "3ced08f303a67e074cbd63bcef926f58115c560e", "filename": "crates/ide/src/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/74f3cca85ab870614f314c6180e2fbb883ad4fe3/crates%2Fide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74f3cca85ab870614f314c6180e2fbb883ad4fe3/crates%2Fide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics.rs?ref=74f3cca85ab870614f314c6180e2fbb883ad4fe3", "patch": "@@ -11,6 +11,7 @@ mod mismatched_arg_count;\n mod missing_fields;\n mod missing_unsafe;\n mod no_such_field;\n+mod remove_this_semicolon;\n mod unimplemented_builtin_macro;\n mod unresolved_extern_crate;\n mod unresolved_import;\n@@ -165,9 +166,6 @@ pub(crate) fn diagnostics(\n         .on::<hir::diagnostics::MissingOkOrSomeInTailExpr, _>(|d| {\n             res.borrow_mut().push(diagnostic_with_fix(d, &sema, resolve));\n         })\n-        .on::<hir::diagnostics::RemoveThisSemicolon, _>(|d| {\n-            res.borrow_mut().push(diagnostic_with_fix(d, &sema, resolve));\n-        })\n         .on::<hir::diagnostics::IncorrectCase, _>(|d| {\n             res.borrow_mut().push(warning_with_fix(d, &sema, resolve));\n         })\n@@ -223,10 +221,11 @@ pub(crate) fn diagnostics(\n         let d = match diag {\n             AnyDiagnostic::BreakOutsideOfLoop(d) => break_outside_of_loop::break_outside_of_loop(&ctx, &d),\n             AnyDiagnostic::MacroError(d) => macro_error::macro_error(&ctx, &d),\n+            AnyDiagnostic::MismatchedArgCount(d) => mismatched_arg_count::mismatched_arg_count(&ctx, &d),\n             AnyDiagnostic::MissingFields(d) => missing_fields::missing_fields(&ctx, &d),\n             AnyDiagnostic::MissingUnsafe(d) => missing_unsafe::missing_unsafe(&ctx, &d),\n-            AnyDiagnostic::MismatchedArgCount(d) => mismatched_arg_count::mismatched_arg_count(&ctx, &d),\n             AnyDiagnostic::NoSuchField(d) => no_such_field::no_such_field(&ctx, &d),\n+            AnyDiagnostic::RemoveThisSemicolon(d) => remove_this_semicolon::remove_this_semicolon(&ctx, &d),\n             AnyDiagnostic::UnimplementedBuiltinMacro(d) => unimplemented_builtin_macro::unimplemented_builtin_macro(&ctx, &d),\n             AnyDiagnostic::UnresolvedExternCrate(d) => unresolved_extern_crate::unresolved_extern_crate(&ctx, &d),\n             AnyDiagnostic::UnresolvedImport(d) => unresolved_import::unresolved_import(&ctx, &d),\n@@ -838,16 +837,6 @@ fn x(a: S) {\n         )\n     }\n \n-    #[test]\n-    fn missing_semicolon() {\n-        check_diagnostics(\n-            r#\"\n-                fn test() -> i32 { 123; }\n-                                 //^^^ Remove this semicolon\n-            \"#,\n-        );\n-    }\n-\n     #[test]\n     fn import_extern_crate_clash_with_inner_item() {\n         // This is more of a resolver test, but doesn't really work with the hir_def testsuite."}, {"sha": "70f17881ec9d17acdde397497dc43d6fab232471", "filename": "crates/ide/src/diagnostics/fixes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74f3cca85ab870614f314c6180e2fbb883ad4fe3/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74f3cca85ab870614f314c6180e2fbb883ad4fe3/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs?ref=74f3cca85ab870614f314c6180e2fbb883ad4fe3", "patch": "@@ -1,8 +1,6 @@\n //! Provides a way to attach fixes to the diagnostics.\n //! The same module also has all curret custom fixes for the diagnostics implemented.\n mod change_case;\n-mod create_field;\n-mod remove_semicolon;\n mod replace_with_find_map;\n mod wrap_tail_expr;\n "}, {"sha": "8b137891791fe96927ad78e64b0aad7bded08bdc", "filename": "crates/ide/src/diagnostics/fixes/create_field.rs", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8d391ec981562785ec92ce3afe950972c523f925/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes%2Fcreate_field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d391ec981562785ec92ce3afe950972c523f925/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes%2Fcreate_field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes%2Fcreate_field.rs?ref=8d391ec981562785ec92ce3afe950972c523f925", "patch": "@@ -1 +0,0 @@\n-"}, {"sha": "f1724d47918c35be20ff0d7fc9fecc759cf43110", "filename": "crates/ide/src/diagnostics/fixes/remove_semicolon.rs", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/8d391ec981562785ec92ce3afe950972c523f925/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes%2Fremove_semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d391ec981562785ec92ce3afe950972c523f925/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes%2Fremove_semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes%2Fremove_semicolon.rs?ref=8d391ec981562785ec92ce3afe950972c523f925", "patch": "@@ -1,41 +0,0 @@\n-use hir::{db::AstDatabase, diagnostics::RemoveThisSemicolon, Semantics};\n-use ide_assists::{Assist, AssistResolveStrategy};\n-use ide_db::{source_change::SourceChange, RootDatabase};\n-use syntax::{ast, AstNode};\n-use text_edit::TextEdit;\n-\n-use crate::diagnostics::{fix, DiagnosticWithFixes};\n-\n-impl DiagnosticWithFixes for RemoveThisSemicolon {\n-    fn fixes(\n-        &self,\n-        sema: &Semantics<RootDatabase>,\n-        _resolve: &AssistResolveStrategy,\n-    ) -> Option<Vec<Assist>> {\n-        let root = sema.db.parse_or_expand(self.file)?;\n-\n-        let semicolon = self\n-            .expr\n-            .to_node(&root)\n-            .syntax()\n-            .parent()\n-            .and_then(ast::ExprStmt::cast)\n-            .and_then(|expr| expr.semicolon_token())?\n-            .text_range();\n-\n-        let edit = TextEdit::delete(semicolon);\n-        let source_change = SourceChange::from_text_edit(self.file.original_file(sema.db), edit);\n-\n-        Some(vec![fix(\"remove_semicolon\", \"Remove this semicolon\", source_change, semicolon)])\n-    }\n-}\n-\n-#[cfg(test)]\n-mod tests {\n-    use crate::diagnostics::tests::check_fix;\n-\n-    #[test]\n-    fn remove_semicolon() {\n-        check_fix(r#\"fn f() -> i32 { 92$0; }\"#, r#\"fn f() -> i32 { 92 }\"#);\n-    }\n-}"}, {"sha": "edc63c2468cd37b2b8c9cac5d2dc77c5cb98f3bf", "filename": "crates/ide/src/diagnostics/no_such_field.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74f3cca85ab870614f314c6180e2fbb883ad4fe3/crates%2Fide%2Fsrc%2Fdiagnostics%2Fno_such_field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74f3cca85ab870614f314c6180e2fbb883ad4fe3/crates%2Fide%2Fsrc%2Fdiagnostics%2Fno_such_field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Fno_such_field.rs?ref=74f3cca85ab870614f314c6180e2fbb883ad4fe3", "patch": "@@ -17,7 +17,7 @@ use crate::{\n pub(super) fn no_such_field(ctx: &DiagnosticsContext<'_>, d: &hir::NoSuchField) -> Diagnostic {\n     Diagnostic::new(\n         \"no-such-field\",\n-        \"no such field\".to_string(),\n+        \"no such field\",\n         ctx.sema.diagnostics_display_range(d.field.clone().map(|it| it.into())).range,\n     )\n     .with_fixes(fixes(ctx, d))"}, {"sha": "814cb0f8c280b4127c91327d5057b737f66ccd8d", "filename": "crates/ide/src/diagnostics/remove_this_semicolon.rs", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/74f3cca85ab870614f314c6180e2fbb883ad4fe3/crates%2Fide%2Fsrc%2Fdiagnostics%2Fremove_this_semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74f3cca85ab870614f314c6180e2fbb883ad4fe3/crates%2Fide%2Fsrc%2Fdiagnostics%2Fremove_this_semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Fremove_this_semicolon.rs?ref=74f3cca85ab870614f314c6180e2fbb883ad4fe3", "patch": "@@ -0,0 +1,64 @@\n+use hir::db::AstDatabase;\n+use ide_db::source_change::SourceChange;\n+use syntax::{ast, AstNode};\n+use text_edit::TextEdit;\n+\n+use crate::{\n+    diagnostics::{fix, Diagnostic, DiagnosticsContext},\n+    Assist,\n+};\n+\n+// Diagnostic: remove-this-semicolon\n+//\n+// This diagnostic is triggered when there's an erroneous `;` at the end of the block.\n+pub(super) fn remove_this_semicolon(\n+    ctx: &DiagnosticsContext<'_>,\n+    d: &hir::RemoveThisSemicolon,\n+) -> Diagnostic {\n+    Diagnostic::new(\n+        \"remove-this-semicolon\",\n+        \"remove this semicolon\",\n+        ctx.sema.diagnostics_display_range(d.expr.clone().map(|it| it.into())).range,\n+    )\n+    .with_fixes(fixes(ctx, d))\n+}\n+\n+fn fixes(ctx: &DiagnosticsContext<'_>, d: &hir::RemoveThisSemicolon) -> Option<Vec<Assist>> {\n+    let root = ctx.sema.db.parse_or_expand(d.expr.file_id)?;\n+\n+    let semicolon = d\n+        .expr\n+        .value\n+        .to_node(&root)\n+        .syntax()\n+        .parent()\n+        .and_then(ast::ExprStmt::cast)\n+        .and_then(|expr| expr.semicolon_token())?\n+        .text_range();\n+\n+    let edit = TextEdit::delete(semicolon);\n+    let source_change =\n+        SourceChange::from_text_edit(d.expr.file_id.original_file(ctx.sema.db), edit);\n+\n+    Some(vec![fix(\"remove_semicolon\", \"Remove this semicolon\", source_change, semicolon)])\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    use crate::diagnostics::tests::{check_diagnostics, check_fix};\n+\n+    #[test]\n+    fn missing_semicolon() {\n+        check_diagnostics(\n+            r#\"\n+fn test() -> i32 { 123; }\n+                 //^^^ remove this semicolon\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn remove_semicolon() {\n+        check_fix(r#\"fn f() -> i32 { 92$0; }\"#, r#\"fn f() -> i32 { 92 }\"#);\n+    }\n+}"}]}