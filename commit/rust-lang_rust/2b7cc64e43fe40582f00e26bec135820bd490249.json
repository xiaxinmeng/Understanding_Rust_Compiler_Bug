{"sha": "2b7cc64e43fe40582f00e26bec135820bd490249", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiN2NjNjRlNDNmZTQwNTgyZjAwZTI2YmVjMTM1ODIwYmQ0OTAyNDk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-25T04:18:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-25T04:18:12Z"}, "message": "Rollup merge of #65763 - ObsidianMinor:diag/65642, r=varkor\n\nChanged APIT with explicit generic args span to specific arg spans\n\nFixes #65642.", "tree": {"sha": "5a2d14834edff80071a63e36b48a0f314ab3f4a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a2d14834edff80071a63e36b48a0f314ab3f4a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b7cc64e43fe40582f00e26bec135820bd490249", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdsneECRBK7hj4Ov3rIwAAdHIIAIlxFReTyK9UW5nMk5lwM0Gm\ndKcKG7MqsfMs6sEVOIk205ZK1rwd6fxtxaoh5wjRRXPxHkOqiyov4MlkqkK+e7Dv\nTV406+yVZ/51BNUliugCAGQWHmVT2hs+tbiOBtk83Q/E/RDIRZTh1J8nKtxrdbGJ\n2NnhBF9EaJeCJi/GQsnvHcuskADjK2yb7xD1vgv2S5bjeUm5r4mfXWEiF9CH6IHx\nuYw+WlkMuCsLlvSevt2RpzM30IWbu4REudF81WFYAbQ9w/GMwQCrcFBm2FrAq191\nKl6CUuDhboZMfaZLkrtZ5JBd/8iCLF3wtS4I2XXys7okeM6Ftv8zbHDy+HacJOA=\n=PhbR\n-----END PGP SIGNATURE-----\n", "payload": "tree 5a2d14834edff80071a63e36b48a0f314ab3f4a6\nparent 8b9661bbb0cd6d77511f2394affc146ff57c465f\nparent 4cfcb770844333a6c7e1ebddc8d30770098bdfd7\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1571977092 +0200\ncommitter GitHub <noreply@github.com> 1571977092 +0200\n\nRollup merge of #65763 - ObsidianMinor:diag/65642, r=varkor\n\nChanged APIT with explicit generic args span to specific arg spans\n\nFixes #65642.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b7cc64e43fe40582f00e26bec135820bd490249", "html_url": "https://github.com/rust-lang/rust/commit/2b7cc64e43fe40582f00e26bec135820bd490249", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b7cc64e43fe40582f00e26bec135820bd490249/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b9661bbb0cd6d77511f2394affc146ff57c465f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b9661bbb0cd6d77511f2394affc146ff57c465f", "html_url": "https://github.com/rust-lang/rust/commit/8b9661bbb0cd6d77511f2394affc146ff57c465f"}, {"sha": "4cfcb770844333a6c7e1ebddc8d30770098bdfd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cfcb770844333a6c7e1ebddc8d30770098bdfd7", "html_url": "https://github.com/rust-lang/rust/commit/4cfcb770844333a6c7e1ebddc8d30770098bdfd7"}], "stats": {"total": 43, "additions": 29, "deletions": 14}, "files": [{"sha": "aa05a08686a995974bdac75589f57c09ead049a9", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/2b7cc64e43fe40582f00e26bec135820bd490249/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b7cc64e43fe40582f00e26bec135820bd490249/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=2b7cc64e43fe40582f00e26bec135820bd490249", "patch": "@@ -215,7 +215,6 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n     /// Report error if there is an explicit type parameter when using `impl Trait`.\n     fn check_impl_trait(\n         tcx: TyCtxt<'_>,\n-        span: Span,\n         seg: &hir::PathSegment,\n         generics: &ty::Generics,\n     ) -> bool {\n@@ -228,14 +227,28 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         });\n \n         if explicit && impl_trait {\n+            let spans =\n+                seg.generic_args().args\n+                    .iter()\n+                    .filter_map(|arg|\n+                        match arg {\n+                            GenericArg::Type(_) => Some(arg.span()),\n+                            _ => None\n+                        })\n+                    .collect::<Vec<_>>();\n+\n             let mut err = struct_span_err! {\n                 tcx.sess,\n-                span,\n+                spans.clone(),\n                 E0632,\n                 \"cannot provide explicit generic arguments when `impl Trait` is \\\n-                 used in argument position\"\n+                used in argument position\"\n             };\n \n+            for span in spans {\n+                err.span_label(span, \"explicit generic argument not allowed\");\n+            }\n+\n             err.emit();\n         }\n \n@@ -254,7 +267,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         let empty_args = P(hir::GenericArgs {\n             args: HirVec::new(), bindings: HirVec::new(), parenthesized: false,\n         });\n-        let suppress_mismatch = Self::check_impl_trait(tcx, span, seg, &def);\n+        let suppress_mismatch = Self::check_impl_trait(tcx, seg, &def);\n         Self::check_generic_arg_count(\n             tcx,\n             span,"}, {"sha": "8f05ab3c4940c30e22f0f170108907dbeb31e65e", "filename": "src/test/ui/impl-trait/issues/universal-issue-48703.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2b7cc64e43fe40582f00e26bec135820bd490249/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-issue-48703.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b7cc64e43fe40582f00e26bec135820bd490249/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-issue-48703.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-issue-48703.stderr?ref=2b7cc64e43fe40582f00e26bec135820bd490249", "patch": "@@ -1,8 +1,8 @@\n error[E0632]: cannot provide explicit generic arguments when `impl Trait` is used in argument position\n-  --> $DIR/universal-issue-48703.rs:8:5\n+  --> $DIR/universal-issue-48703.rs:8:11\n    |\n LL |     foo::<String>('a');\n-   |     ^^^^^^^^^^^^^\n+   |           ^^^^^^ explicit generic argument not allowed\n \n error: aborting due to previous error\n "}, {"sha": "c980e9463e48ae383b377412b67cfaac37976414", "filename": "src/test/ui/impl-trait/issues/universal-turbofish-in-method-issue-50950.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2b7cc64e43fe40582f00e26bec135820bd490249/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-turbofish-in-method-issue-50950.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b7cc64e43fe40582f00e26bec135820bd490249/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-turbofish-in-method-issue-50950.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Funiversal-turbofish-in-method-issue-50950.stderr?ref=2b7cc64e43fe40582f00e26bec135820bd490249", "patch": "@@ -1,8 +1,10 @@\n error[E0632]: cannot provide explicit generic arguments when `impl Trait` is used in argument position\n-  --> $DIR/universal-turbofish-in-method-issue-50950.rs:14:9\n+  --> $DIR/universal-turbofish-in-method-issue-50950.rs:14:24\n    |\n LL |     evt.handle_event::<TestEvent, fn(TestEvent)>(|_evt| {\n-   |         ^^^^^^^^^^^^\n+   |                        ^^^^^^^^^  ^^^^^^^^^^^^^ explicit generic argument not allowed\n+   |                        |\n+   |                        explicit generic argument not allowed\n \n error: aborting due to previous error\n "}, {"sha": "951d7edb7f523ec14cbd3ad24f921b9d963fe8a5", "filename": "src/test/ui/synthetic-param.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2b7cc64e43fe40582f00e26bec135820bd490249/src%2Ftest%2Fui%2Fsynthetic-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b7cc64e43fe40582f00e26bec135820bd490249/src%2Ftest%2Fui%2Fsynthetic-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsynthetic-param.stderr?ref=2b7cc64e43fe40582f00e26bec135820bd490249", "patch": "@@ -1,20 +1,20 @@\n error[E0632]: cannot provide explicit generic arguments when `impl Trait` is used in argument position\n-  --> $DIR/synthetic-param.rs:20:5\n+  --> $DIR/synthetic-param.rs:20:12\n    |\n LL |     func::<u8>(42);\n-   |     ^^^^^^^^^^\n+   |            ^^ explicit generic argument not allowed\n \n error[E0632]: cannot provide explicit generic arguments when `impl Trait` is used in argument position\n-  --> $DIR/synthetic-param.rs:23:5\n+  --> $DIR/synthetic-param.rs:23:17\n    |\n LL |     Foo::func::<u8>(42);\n-   |     ^^^^^^^^^^^^^^^\n+   |                 ^^ explicit generic argument not allowed\n \n error[E0632]: cannot provide explicit generic arguments when `impl Trait` is used in argument position\n-  --> $DIR/synthetic-param.rs:26:5\n+  --> $DIR/synthetic-param.rs:26:23\n    |\n LL |     Bar::<i8>::func::<u8>(42);\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n+   |                       ^^ explicit generic argument not allowed\n \n error: aborting due to 3 previous errors\n "}]}