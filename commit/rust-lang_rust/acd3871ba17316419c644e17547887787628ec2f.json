{"sha": "acd3871ba17316419c644e17547887787628ec2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZDM4NzFiYTE3MzE2NDE5YzY0NGUxNzU0Nzg4Nzc4NzYyOGVjMmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-10T21:02:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-10T21:02:24Z"}, "message": "Auto merge of #50331 - MartinHusemann:master, r=Kimundi\n\nMap the stack guard page with max protection on NetBSD\n\nOn NetBSD the initial mmap() protection of a mapping can not be made\nless restrictive with mprotect().\n\nSo when mapping a stack guard page, use the maximum protection\nwe ever want to use, then mprotect() it to the permission we\nwant it to have initially.\n\nFixes #50313", "tree": {"sha": "b1557c8e01f5bdb3556bfcdc10ef5e73563edace", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1557c8e01f5bdb3556bfcdc10ef5e73563edace"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acd3871ba17316419c644e17547887787628ec2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acd3871ba17316419c644e17547887787628ec2f", "html_url": "https://github.com/rust-lang/rust/commit/acd3871ba17316419c644e17547887787628ec2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acd3871ba17316419c644e17547887787628ec2f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e3caa23f99816caf3c2fb69ff5c88b512fb1b38", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e3caa23f99816caf3c2fb69ff5c88b512fb1b38", "html_url": "https://github.com/rust-lang/rust/commit/9e3caa23f99816caf3c2fb69ff5c88b512fb1b38"}, {"sha": "244e24a312925779f6c62ce7d6b315fa2c120a7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/244e24a312925779f6c62ce7d6b315fa2c120a7c", "html_url": "https://github.com/rust-lang/rust/commit/244e24a312925779f6c62ce7d6b315fa2c120a7c"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "7fdecc9c0c026aab31787f19f6b7ed3d512706f5", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/acd3871ba17316419c644e17547887787628ec2f/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acd3871ba17316419c644e17547887787628ec2f/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=acd3871ba17316419c644e17547887787628ec2f", "patch": "@@ -326,13 +326,22 @@ pub mod guard {\n             // Reallocate the last page of the stack.\n             // This ensures SIGBUS will be raised on\n             // stack overflow.\n-            let result = mmap(stackaddr, PAGE_SIZE, PROT_NONE,\n+            // Systems which enforce strict PAX MPROTECT do not allow\n+            // to mprotect() a mapping with less restrictive permissions\n+            // than the initial mmap() used, so we mmap() here with\n+            // read/write permissions and only then mprotect() it to\n+            // no permissions at all. See issue #50313.\n+            let result = mmap(stackaddr, PAGE_SIZE, PROT_READ | PROT_WRITE,\n                               MAP_PRIVATE | MAP_ANON | MAP_FIXED, -1, 0);\n-\n             if result != stackaddr || result == MAP_FAILED {\n                 panic!(\"failed to allocate a guard page\");\n             }\n \n+            let result = mprotect(stackaddr, PAGE_SIZE, PROT_NONE);\n+            if result != 0 {\n+                panic!(\"failed to protect the guard page\");\n+            }\n+\n             let guardaddr = stackaddr as usize;\n             let offset = if cfg!(target_os = \"freebsd\") {\n                 2"}]}