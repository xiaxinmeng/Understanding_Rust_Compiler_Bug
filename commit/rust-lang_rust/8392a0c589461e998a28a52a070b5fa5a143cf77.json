{"sha": "8392a0c589461e998a28a52a070b5fa5a143cf77", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzOTJhMGM1ODk0NjFlOTk4YTI4YTUyYTA3MGI1ZmE1YTE0M2NmNzc=", "commit": {"author": {"name": "Christian Poveda", "email": "git@christianpoveda.xyz", "date": "2020-03-07T20:33:27Z"}, "committer": {"name": "Christian Poveda", "email": "git@christianpoveda.xyz", "date": "2020-03-08T15:16:31Z"}, "message": "only expose environ on linux", "tree": {"sha": "be508e80afb01c5508cf918afb0bd52bafe0b177", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be508e80afb01c5508cf918afb0bd52bafe0b177"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8392a0c589461e998a28a52a070b5fa5a143cf77", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQRsB8A/3NrzTlMMjT0nUl7150IKUAUCXmUMUAAKCRAnUl7150IK\nUGc5AP9UxdSVXWgFdXeBW1wiPDfv0m2BwB2xI/w0ablzYrw7FQD9EXJE0/nsothv\nhOAblofNAyfA1prdVbdFv7ArQDL3Mws=\n=z+X0\n-----END PGP SIGNATURE-----", "payload": "tree be508e80afb01c5508cf918afb0bd52bafe0b177\nparent 18a71ef7b36fa8ed2031b69e414261e086fd711c\nauthor Christian Poveda <git@christianpoveda.xyz> 1583613207 -0500\ncommitter Christian Poveda <git@christianpoveda.xyz> 1583680591 -0500\n\nonly expose environ on linux\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8392a0c589461e998a28a52a070b5fa5a143cf77", "html_url": "https://github.com/rust-lang/rust/commit/8392a0c589461e998a28a52a070b5fa5a143cf77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8392a0c589461e998a28a52a070b5fa5a143cf77/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18a71ef7b36fa8ed2031b69e414261e086fd711c", "url": "https://api.github.com/repos/rust-lang/rust/commits/18a71ef7b36fa8ed2031b69e414261e086fd711c", "html_url": "https://github.com/rust-lang/rust/commit/18a71ef7b36fa8ed2031b69e414261e086fd711c"}], "stats": {"total": 51, "additions": 26, "deletions": 25}, "files": [{"sha": "a82c40a99e011bcd57971e6e113df2bde7eb914a", "filename": "src/eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8392a0c589461e998a28a52a070b5fa5a143cf77/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8392a0c589461e998a28a52a070b5fa5a143cf77/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=8392a0c589461e998a28a52a070b5fa5a143cf77", "patch": "@@ -77,8 +77,8 @@ pub fn create_ecx<'mir, 'tcx: 'mir>(\n         ),\n     );\n     // Complete initialization.\n-    MemoryExtra::init_extern_statics(&mut ecx)?;\n     EnvVars::init(&mut ecx, config.excluded_env_vars)?;\n+    MemoryExtra::init_extern_statics(&mut ecx)?;\n \n     // Setup first stack-frame\n     let main_instance = ty::Instance::mono(tcx, main_id);"}, {"sha": "d21ff328975735763ffa64d438345fa649059709", "filename": "src/machine.rs", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8392a0c589461e998a28a52a070b5fa5a143cf77/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8392a0c589461e998a28a52a070b5fa5a143cf77/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=8392a0c589461e998a28a52a070b5fa5a143cf77", "patch": "@@ -112,29 +112,23 @@ impl<'tcx> MemoryExtra<'tcx> {\n     ) -> InterpResult<'tcx> {\n         let target_os = this.tcx.sess.target.target.target_os.as_str();\n         match target_os {\n-            \"linux\" | \"macos\" => {\n-                if target_os == \"linux\" {\n-                    // \"__cxa_thread_atexit_impl\"\n-                    // This should be all-zero, pointer-sized.\n-                    let layout = this.layout_of(this.tcx.types.usize)?;\n-                    let place = this.allocate(layout, MiriMemoryKind::Machine.into());\n-                    this.write_scalar(Scalar::from_machine_usize(0, &*this.tcx), place.into())?;\n-                    this.memory\n-                        .extra\n-                        .extern_statics\n-                        .insert(Symbol::intern(\"__cxa_thread_atexit_impl\"), place.ptr.assert_ptr().alloc_id)\n-                        .unwrap_none();\n-                }\n-                // \"environ\"\n+            \"linux\" => {\n+                // \"__cxa_thread_atexit_impl\"\n+                // This should be all-zero, pointer-sized.\n                 let layout = this.layout_of(this.tcx.types.usize)?;\n                 let place = this.allocate(layout, MiriMemoryKind::Machine.into());\n                 this.write_scalar(Scalar::from_machine_usize(0, &*this.tcx), place.into())?;\n                 this.memory\n                     .extra\n                     .extern_statics\n-                    .insert(Symbol::intern(\"environ\"), place.ptr.assert_ptr().alloc_id)\n+                    .insert(Symbol::intern(\"__cxa_thread_atexit_impl\"), place.ptr.assert_ptr().alloc_id)\n+                    .unwrap_none();\n+                // \"environ\"\n+                this.memory\n+                    .extra\n+                    .extern_statics\n+                    .insert(Symbol::intern(\"environ\"), this.memory.extra.environ.unwrap().ptr.assert_ptr().alloc_id)\n                     .unwrap_none();\n-                this.memory.extra.environ = Some(place);\n             }\n             _ => {} // No \"extern statics\" supported on this platform\n         }"}, {"sha": "aaecbebc360320c92855c8961c33a748e0dd2eb0", "filename": "src/shims/env.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8392a0c589461e998a28a52a070b5fa5a143cf77/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8392a0c589461e998a28a52a070b5fa5a143cf77/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=8392a0c589461e998a28a52a070b5fa5a143cf77", "patch": "@@ -30,6 +30,11 @@ impl EnvVars {\n                 }\n             }\n         }\n+        // Initialize the `environ` static\n+        let layout = ecx.layout_of(ecx.tcx.types.usize)?;\n+        let place = ecx.allocate(layout, MiriMemoryKind::Machine.into());\n+        ecx.write_scalar(Scalar::from_machine_usize(0, &*ecx.tcx), place.into())?;\n+        ecx.memory.extra.environ = Some(place);\n         ecx.update_environ()\n     }\n }\n@@ -156,12 +161,12 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     }\n \n     /// Updates the `environ` static. It should not be called before\n-    /// `MemoryExtra::init_extern_statics`.\n+    /// `EnvVars::init`.\n     fn update_environ(&mut self) -> InterpResult<'tcx> {\n         let this = self.eval_context_mut();\n         // Deallocate the old environ value.\n         let old_vars_ptr = this.read_scalar(this.memory.extra.environ.unwrap().into())?.not_undef()?;\n-        // The pointer itself can be null because `MemoryExtra::init_extern_statics` only\n+        // The pointer itself can be null because `EnvVars::init` only\n         // initializes the place for the static but not the static itself.\n         if !this.is_null(old_vars_ptr)? {\n             this.memory.deallocate(this.force_ptr(old_vars_ptr)?, None, MiriMemoryKind::Machine.into())?;"}, {"sha": "c5c6423e8501ee09687605fbc73fb349c7214029", "filename": "src/shims/foreign_items/posix/macos.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8392a0c589461e998a28a52a070b5fa5a143cf77/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8392a0c589461e998a28a52a070b5fa5a143cf77/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs?ref=8392a0c589461e998a28a52a070b5fa5a143cf77", "patch": "@@ -41,10 +41,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 let result = this.macos_fstat(args[0], args[1])?;\n                 this.write_scalar(Scalar::from_int(result, dest.layout.size), dest)?;\n             }\n-            // Environment related shims\n-            \"_NSGetEnviron\" => {\n-                this.write_scalar(this.memory.extra.environ.unwrap().ptr, dest)?;\n-            }\n+\n             // The only reason this is not in the `posix` module is because the `linux` item has a\n             // different name.\n             \"opendir$INODE64\" => {\n@@ -59,6 +56,11 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 this.write_scalar(Scalar::from_int(result, dest.layout.size), dest)?;\n             }\n \n+            // Environment related shims\n+            \"_NSGetEnviron\" => {\n+                this.write_scalar(this.memory.extra.environ.unwrap().ptr, dest)?;\n+            }\n+\n             // Time related shims\n             \"gettimeofday\" => {\n                 let result = this.gettimeofday(args[0], args[1])?;"}, {"sha": "6131613fc00bb9e1e4e4ed6b8f6f9b00e4e3118e", "filename": "tests/compile-fail/environ-gets-deallocated.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8392a0c589461e998a28a52a070b5fa5a143cf77/tests%2Fcompile-fail%2Fenviron-gets-deallocated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8392a0c589461e998a28a52a070b5fa5a143cf77/tests%2Fcompile-fail%2Fenviron-gets-deallocated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fenviron-gets-deallocated.rs?ref=8392a0c589461e998a28a52a070b5fa5a143cf77", "patch": "@@ -3,9 +3,9 @@\n #[cfg(target_os=\"linux\")]\n fn get_environ() -> *const *const u8 {\n   extern \"C\" {\n-    static environ: *const *const u8;\n+    static mut environ: *const *const u8;\n   }\n-  environ\n+  unsafe { environ }\n }\n \n #[cfg(target_os=\"macos\")]"}]}