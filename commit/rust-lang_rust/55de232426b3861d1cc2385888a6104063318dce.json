{"sha": "55de232426b3861d1cc2385888a6104063318dce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1ZGUyMzI0MjZiMzg2MWQxY2MyMzg1ODg4YTYxMDQwNjMzMThkY2U=", "commit": {"author": {"name": "Tycho Sci", "email": "tychosci@gmail.com", "date": "2012-05-03T07:48:03Z"}, "committer": {"name": "Tycho Sci", "email": "tychosci@gmail.com", "date": "2012-05-03T08:01:33Z"}, "message": "vim: Highlight identifiers", "tree": {"sha": "0c435155a3fdf85bd9563b327cc39ab4b7f860fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c435155a3fdf85bd9563b327cc39ab4b7f860fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55de232426b3861d1cc2385888a6104063318dce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55de232426b3861d1cc2385888a6104063318dce", "html_url": "https://github.com/rust-lang/rust/commit/55de232426b3861d1cc2385888a6104063318dce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55de232426b3861d1cc2385888a6104063318dce/comments", "author": {"login": "tychosci", "id": 1026254, "node_id": "MDQ6VXNlcjEwMjYyNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1026254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tychosci", "html_url": "https://github.com/tychosci", "followers_url": "https://api.github.com/users/tychosci/followers", "following_url": "https://api.github.com/users/tychosci/following{/other_user}", "gists_url": "https://api.github.com/users/tychosci/gists{/gist_id}", "starred_url": "https://api.github.com/users/tychosci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tychosci/subscriptions", "organizations_url": "https://api.github.com/users/tychosci/orgs", "repos_url": "https://api.github.com/users/tychosci/repos", "events_url": "https://api.github.com/users/tychosci/events{/privacy}", "received_events_url": "https://api.github.com/users/tychosci/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tychosci", "id": 1026254, "node_id": "MDQ6VXNlcjEwMjYyNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1026254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tychosci", "html_url": "https://github.com/tychosci", "followers_url": "https://api.github.com/users/tychosci/followers", "following_url": "https://api.github.com/users/tychosci/following{/other_user}", "gists_url": "https://api.github.com/users/tychosci/gists{/gist_id}", "starred_url": "https://api.github.com/users/tychosci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tychosci/subscriptions", "organizations_url": "https://api.github.com/users/tychosci/orgs", "repos_url": "https://api.github.com/users/tychosci/repos", "events_url": "https://api.github.com/users/tychosci/events{/privacy}", "received_events_url": "https://api.github.com/users/tychosci/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "358dc595382e4f09c4553813f2a12fd8acf1a632", "url": "https://api.github.com/repos/rust-lang/rust/commits/358dc595382e4f09c4553813f2a12fd8acf1a632", "html_url": "https://github.com/rust-lang/rust/commit/358dc595382e4f09c4553813f2a12fd8acf1a632"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "3e248f4c983d48f44614ddfedccae4c59485bcdb", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/55de232426b3861d1cc2385888a6104063318dce/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/55de232426b3861d1cc2385888a6104063318dce/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=55de232426b3861d1cc2385888a6104063318dce", "patch": "@@ -15,11 +15,17 @@ if !exists(\"main_syntax\")\n endif\n \n syn keyword   rustKeyword     alt as assert be bind break\n-syn keyword   rustKeyword     check claim cont const copy do else enum export fail\n-syn keyword   rustKeyword     fn for if iface impl import in inline lambda let log\n+syn keyword   rustKeyword     check claim cont const copy do else export fail\n+syn keyword   rustKeyword     for if impl import in inline lambda let log\n syn keyword   rustKeyword     loop mod mut mutable native note of prove pure\n-syn keyword   rustKeyword     resource ret self syntax to type unchecked\n+syn keyword   rustKeyword     ret self syntax to unchecked\n syn keyword   rustKeyword     unsafe use while with\n+\" FIXME: Scoped impl's name is also fallen in this category\n+syn keyword   rustKeyword     mod iface resource class enum type nextgroup=rustIdentifier skipwhite\n+syn keyword   rustKeyword     fn nextgroup=rustFuncName skipwhite\n+\n+syn match     rustIdentifier  \"\\%([^[:cntrl:][:space:][:punct:][:digit:]]\\|_\\)\\%([^[:cntrl:][:punct:][:space:]]\\|_\\)*\" display contained\n+syn match     rustFuncName    \"\\%([^[:cntrl:][:space:][:punct:][:digit:]]\\|_\\)\\%([^[:cntrl:][:punct:][:space:]]\\|_\\)*\" display contained\n \n \" Reserved words\n syn keyword   rustKeyword     m32 m64 m128 f80 f16 f128 class trait\n@@ -59,6 +65,8 @@ hi def link rustNumber        Number\n hi def link rustBoolean       Boolean\n hi def link rustFloat         Float\n hi def link rustKeyword       Keyword\n+hi def link rustIdentifier    Identifier\n+hi def link rustFuncName      Function\n hi def link rustComment       Comment\n hi def link rustMacro         Macro\n hi def link rustType          Type"}]}