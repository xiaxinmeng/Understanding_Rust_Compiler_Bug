{"sha": "4068ff4d8a97cfdd21c717748e75a4839923e231", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNjhmZjRkOGE5N2NmZGQyMWM3MTc3NDhlNzVhNDgzOTkyM2UyMzE=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-02-05T09:42:33Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-02-06T18:15:01Z"}, "message": "Improve help message in needless_continue", "tree": {"sha": "ecee626670cbdcfccd5d51be63ad71b8f775d2b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecee626670cbdcfccd5d51be63ad71b8f775d2b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4068ff4d8a97cfdd21c717748e75a4839923e231", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl48V6UACgkQaTCGhp1Q\nZjc5gg//T8rG3YztgIZC8lzbuFsN3r6Fxi0ehSX0GreZOco2LGqpGq9TH8qMrG2g\nX975/xbd2Rw2xEaMy7iwmyBuXygeOfmLgCfXST0ZzpuYfNVCBtKNJ7sfuLMuC43n\nyDGSj8anW08Jmvxu793FeTRno7+m8hehRkudZlydBuu3ju74MiTgH34tKGlUNFpt\nAXRr4N0j0xTEYla67K9tYW3rTXXSSSBDUWio/L/8g1eu2ZJcsQNM6TV6udFhDfA4\nLfThuFsfsDFf/bNJGOV5NDCB+tsfjUbDh1LRPGAitkclXMc7PYKcyIqvd7xic44K\nQ2xO8wCBTN7GV6VYXeaQqZf52HIQc8DzwgyFJ76keMoSWRUHaF3qQF6sJfBXoHh/\nEL9RI9JbsEJUkyJ3tfO7RPsZWSE4j3zZydVHefQ30yWAv3NVSABBHXVM2tUnrfLp\nTl8uKGEiL/OEPGQZKz1Q5tAn2u1yXw84sodEnG3hqow3p9rYfmOCcMN4ZM1L3H5V\nLiK71eZldhaXjZ+MdwLxIh5j+9kk7cMCTpQ4obBEk0Lp4FvfajY7vOMrKh95biYi\nFKbkIVPlOp5gRaqstWkOG/uv3Yq6xE7O94nDmnEUhiZebLFlRPWI5GtxQVySkjLJ\nIPe9Z2o+u+IizZnNllcZy+EFDL2c4rS2Elw1NxxxoKYZvph9ZDg=\n=mRfu\n-----END PGP SIGNATURE-----", "payload": "tree ecee626670cbdcfccd5d51be63ad71b8f775d2b2\nparent c7979d35151b07809393a0d05b401222126916d5\nauthor flip1995 <hello@philkrones.com> 1580895753 +0100\ncommitter flip1995 <hello@philkrones.com> 1581012901 +0100\n\nImprove help message in needless_continue\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4068ff4d8a97cfdd21c717748e75a4839923e231", "html_url": "https://github.com/rust-lang/rust/commit/4068ff4d8a97cfdd21c717748e75a4839923e231", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4068ff4d8a97cfdd21c717748e75a4839923e231/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7979d35151b07809393a0d05b401222126916d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7979d35151b07809393a0d05b401222126916d5", "html_url": "https://github.com/rust-lang/rust/commit/c7979d35151b07809393a0d05b401222126916d5"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "45e5fdd5ce82f92533cd022fd82d35bf651df9cd", "filename": "clippy_lints/src/needless_continue.rs", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4068ff4d8a97cfdd21c717748e75a4839923e231/clippy_lints%2Fsrc%2Fneedless_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4068ff4d8a97cfdd21c717748e75a4839923e231/clippy_lints%2Fsrc%2Fneedless_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_continue.rs?ref=4068ff4d8a97cfdd21c717748e75a4839923e231", "patch": "@@ -312,16 +312,16 @@ fn suggestion_snippet_for_continue_inside_if<'a>(ctx: &EarlyContext<'_>, data: &\n     let cond_code = snippet(ctx, data.if_cond.span, \"..\");\n \n     let continue_code = snippet_block(ctx, data.if_block.span, \"..\", Some(data.if_expr.span));\n-    // region B\n+\n     let else_code = snippet_block(ctx, data.else_expr.span, \"..\", Some(data.if_expr.span));\n \n     let indent_if = indent_of(ctx, data.if_expr.span).unwrap_or(0);\n     format!(\n-        \"{}if {} {} {}\",\n-        \" \".repeat(indent_if),\n+        \"{indent}if {} {}\\n{indent}{}\",\n         cond_code,\n         continue_code,\n         else_code,\n+        indent = \" \".repeat(indent_if),\n     )\n }\n \n@@ -389,9 +389,9 @@ fn check_and_warn<'a>(ctx: &EarlyContext<'_>, expr: &'a ast::Expr) {\n     });\n }\n \n-/// Eats at `s` from the end till a closing brace `}` is encountered, and then\n-/// continues eating till a non-whitespace character is found.\n-/// e.g., the string\n+/// Eats at `s` from the end till a closing brace `}` is encountered, and then continues eating\n+/// till a non-whitespace character is found.  e.g., the string. If no closing `}` is present, the\n+/// string will be preserved.\n ///\n /// ```rust\n /// {\n@@ -405,20 +405,21 @@ fn check_and_warn<'a>(ctx: &EarlyContext<'_>, expr: &'a ast::Expr) {\n ///     {\n ///         let x = 5;\n /// ```\n-///\n-/// NOTE: when there is no closing brace in `s`, `s` is _not_ preserved, i.e.,\n-/// an empty string will be returned in that case.\n #[must_use]\n fn erode_from_back(s: &str) -> String {\n-    let mut ret = String::from(s);\n+    let mut ret = s.to_string();\n     while ret.pop().map_or(false, |c| c != '}') {}\n     while let Some(c) = ret.pop() {\n         if !c.is_whitespace() {\n             ret.push(c);\n             break;\n         }\n     }\n-    ret\n+    if ret.is_empty() {\n+        s.to_string()\n+    } else {\n+        ret\n+    }\n }\n \n fn span_of_first_expr_in_block(block: &ast::Block) -> Option<Span> {\n@@ -428,6 +429,7 @@ fn span_of_first_expr_in_block(block: &ast::Block) -> Option<Span> {\n #[cfg(test)]\n mod test {\n     use super::erode_from_back;\n+\n     #[test]\n     #[rustfmt::skip]\n     fn test_erode_from_back() {\n@@ -453,7 +455,7 @@ mod test {\n let x = 5;\n let y = something();\n \";\n-        let expected = \"\";\n+        let expected = input;\n         let got = erode_from_back(input);\n         assert_eq!(expected, got);\n     }"}, {"sha": "8d6a37df9601afcd1fdf9094a442b4422cf0c6fc", "filename": "tests/ui/needless_continue.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4068ff4d8a97cfdd21c717748e75a4839923e231/tests%2Fui%2Fneedless_continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4068ff4d8a97cfdd21c717748e75a4839923e231/tests%2Fui%2Fneedless_continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_continue.stderr?ref=4068ff4d8a97cfdd21c717748e75a4839923e231", "patch": "@@ -48,7 +48,8 @@ LL | |         }\n    = help: consider dropping the `else` clause\n                    if (zero!(i % 2) || nonzero!(i % 5)) && i % 3 != 0 {\n                        continue;\n-                   } {\n+                   }\n+                   {\n                        println!(\"Blabber\");\n                        println!(\"Jabber\");\n                    }\n@@ -89,7 +90,8 @@ LL | |                 }\n    = help: consider dropping the `else` clause\n                            if condition() {\n                                continue; // should lint here\n-                           } {\n+                           }\n+                           {\n                                println!(\"bar-5\");\n                            }\n "}]}