{"sha": "6a7800508b155e96ed358ff861315c9d70110235", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNzgwMDUwOGIxNTVlOTZlZDM1OGZmODYxMzE1YzlkNzAxMTAyMzU=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-10-13T16:04:09Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-10-13T16:04:09Z"}, "message": "Make trans_anon_obj properly thread its bcx\n\nCloses #893\n\nUnfortunately, anon objs are still so broken as to be useless\n(fields don't work).", "tree": {"sha": "673bfdd7ba7abc4b7b4e42ed7e4dc8c76ceb2a51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/673bfdd7ba7abc4b7b4e42ed7e4dc8c76ceb2a51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a7800508b155e96ed358ff861315c9d70110235", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a7800508b155e96ed358ff861315c9d70110235", "html_url": "https://github.com/rust-lang/rust/commit/6a7800508b155e96ed358ff861315c9d70110235", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a7800508b155e96ed358ff861315c9d70110235/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4c91fdf654957cddcbae279d7e113aa4237bb79", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4c91fdf654957cddcbae279d7e113aa4237bb79", "html_url": "https://github.com/rust-lang/rust/commit/e4c91fdf654957cddcbae279d7e113aa4237bb79"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "f2212b1a5fa4f422cf305bed84f368dda7dc9a8b", "filename": "src/comp/middle/trans_objects.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6a7800508b155e96ed358ff861315c9d70110235/src%2Fcomp%2Fmiddle%2Ftrans_objects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a7800508b155e96ed358ff861315c9d70110235/src%2Fcomp%2Fmiddle%2Ftrans_objects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_objects.rs?ref=6a7800508b155e96ed358ff861315c9d70110235", "patch": "@@ -367,16 +367,10 @@ fn trans_anon_obj(bcx: @block_ctxt, sp: span, anon_obj: ast::anon_obj,\n             // If inner_obj (the object being extended) exists, translate it.\n             // Translating inner_obj returns a ValueRef (pointer to a 2-word\n             // value) wrapped in a result.\n-            let inner_obj_val: result = trans_temp_expr(bcx, e);\n-\n             check type_is_tup_like(bcx, body_ty);\n-            let body_inner_obj =\n-                GEP_tup_like(bcx, body_ty, body,\n-                             [0, abi::obj_body_elt_inner_obj]);\n-            bcx = body_inner_obj.bcx;\n-            bcx =\n-                copy_val(bcx, INIT, body_inner_obj.val, inner_obj_val.val,\n-                         inner_obj_ty);\n+            let {bcx: cx, val: body_inner_obj} = GEP_tup_like\n+                (bcx, body_ty, body, [0, abi::obj_body_elt_inner_obj]);\n+            bcx = trans_expr(cx, e, save_in(body_inner_obj));\n           }\n         }\n         revoke_clean(bcx, box);"}]}