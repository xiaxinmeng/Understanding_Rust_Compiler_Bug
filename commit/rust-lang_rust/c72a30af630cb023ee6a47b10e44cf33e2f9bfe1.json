{"sha": "c72a30af630cb023ee6a47b10e44cf33e2f9bfe1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3MmEzMGFmNjMwY2IwMjNlZTZhNDdiMTBlNDRjZjMzZTJmOWJmZTE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-09-17T20:35:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-17T20:35:02Z"}, "message": "Merge #10268\n\n10268: intenral: simplify parser r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "804637cf8e32d4d5f131016b9f1b7f0b2e453226", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/804637cf8e32d4d5f131016b9f1b7f0b2e453226"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c72a30af630cb023ee6a47b10e44cf33e2f9bfe1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhRPv2CRBK7hj4Ov3rIwAAI1sIAKCYg/CXc3oBTYBkU3eNnaxD\n2j3E8eOnb7FopwTwDx4uigKqjFjj15ZNrwhanyNj7nrZQSaKeQ8HRzgMsgO5JHZR\nHw5s7pFQpqUP84UMvXJ1N9MWgVsFqAHiKvIhVLcTDXmjACcz67uHs2rF1AjoHvcw\n4sdVJffEX77N1k871v+BKeO9a+7EReyuu+jQc5h8G8PrrWOFvD40QavkeBrZSbZL\n4GLyoDpWce1RVGdSMP9psnqozFbVPzV9Z2mAIzrq0ue+lHHTp/buEOolXufcirZr\nAHSXhtTFcRGqWn0vZpuCEWWd2cpRiJDKNKzf6vjhWpND3BooxMO+ztRyd4a6e4o=\n=fyPD\n-----END PGP SIGNATURE-----\n", "payload": "tree 804637cf8e32d4d5f131016b9f1b7f0b2e453226\nparent 4badd2faf8092870a0ecc920856b169eefc5f15c\nparent 4d2956e7751182a14dcc5f45ebc351a3e71118c7\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1631910902 +0000\ncommitter GitHub <noreply@github.com> 1631910902 +0000\n\nMerge #10268\n\n10268: intenral: simplify parser r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c72a30af630cb023ee6a47b10e44cf33e2f9bfe1", "html_url": "https://github.com/rust-lang/rust/commit/c72a30af630cb023ee6a47b10e44cf33e2f9bfe1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c72a30af630cb023ee6a47b10e44cf33e2f9bfe1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4badd2faf8092870a0ecc920856b169eefc5f15c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4badd2faf8092870a0ecc920856b169eefc5f15c", "html_url": "https://github.com/rust-lang/rust/commit/4badd2faf8092870a0ecc920856b169eefc5f15c"}, {"sha": "4d2956e7751182a14dcc5f45ebc351a3e71118c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d2956e7751182a14dcc5f45ebc351a3e71118c7", "html_url": "https://github.com/rust-lang/rust/commit/4d2956e7751182a14dcc5f45ebc351a3e71118c7"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "23f0cc0153a9a37e200979b756bafb13790f7892", "filename": "crates/parser/src/grammar.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c72a30af630cb023ee6a47b10e44cf33e2f9bfe1/crates%2Fparser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c72a30af630cb023ee6a47b10e44cf33e2f9bfe1/crates%2Fparser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar.rs?ref=c72a30af630cb023ee6a47b10e44cf33e2f9bfe1", "patch": "@@ -166,22 +166,16 @@ fn opt_visibility(p: &mut Parser) -> bool {\n                     // struct B(pub (super::A));\n                     // struct B(pub (crate::A,));\n                     T![crate] | T![self] | T![super] | T![ident] if p.nth(2) != T![:] => {\n-                        p.bump_any();\n-                        let path_m = p.start();\n-                        let path_segment_m = p.start();\n-                        let name_ref_m = p.start();\n-                        p.bump_any();\n-                        name_ref_m.complete(p, NAME_REF);\n-                        path_segment_m.complete(p, PATH_SEGMENT);\n-                        path_m.complete(p, PATH);\n+                        p.bump(T!['(']);\n+                        paths::use_path(p);\n                         p.expect(T![')']);\n                     }\n                     // test crate_visibility_in\n                     // pub(in super::A) struct S;\n                     // pub(in crate) struct S;\n                     T![in] => {\n-                        p.bump_any();\n-                        p.bump_any();\n+                        p.bump(T!['(']);\n+                        p.bump(T![in]);\n                         paths::use_path(p);\n                         p.expect(T![')']);\n                     }"}]}