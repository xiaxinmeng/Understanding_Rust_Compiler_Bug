{"sha": "ed79c31f0929059cb1933a52b0d6a154497fd206", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkNzljMzFmMDkyOTA1OWNiMTkzM2E1MmIwZDZhMTU0NDk3ZmQyMDY=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-08T19:37:58Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-14T09:12:09Z"}, "message": "Tidy no longer fails when there are no files or subdirectories in a test directory.", "tree": {"sha": "5dbbe71268f5d99985dcc204db99b0f0998bacce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dbbe71268f5d99985dcc204db99b0f0998bacce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed79c31f0929059cb1933a52b0d6a154497fd206", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAltynOoACgkQAXYLT59T\n8VSA+hAAgSDV51rFSFtJCRrz8+WkRrKsirzGPkQegAuzzxzMWY0bNLgXoqCLjdR0\nsxnlzGiarIfaNQmzIbXkkcig+S3luYS0LmskSBnwhalQUbqDgZgDvlEu6TUfUTQe\nF9z157PI0EYeqRyWypRvvKgsdBY7F/hIOKwhRUtssEQMW9X4PHjhpMZ1RCzAx9EA\n1ePgQHLU6hjhUob65xv92fTcL1H7Z6RZKWIBPH2RYb6jobmUW8oHuDP3Wghs1GGC\n/iodO6oL5qALummHF5t/KqgXbkEv/bIEDag2t3h6EikNqnlionq40gwkSbjB4w/X\nlLCddWhv38yLKfMhhX9cVmxfoDh9Hy2FR2Iu/FtibtdBshBJ/LXMhf096Agiv6iU\nDU9kpCD6vydXHpII0k8mTPszGkqHFbn0uJnNi2ot6GawK6yPRQ0dbOuTdG/og0cO\npWOAT2Vfiw71EQndDmvFX8sOJePi1iXaIs1602CiC2bWspQbvLI/r2i51EgTJlkw\nCkV9ETPnPUVFHtIj8CVHGI8TU7qGTH+ekUqRQ3mAr/ADaJxIm5dI8IutPZai8J1N\nw/j59jH67tDMuOMY7pOAeG9bj1zWWGnIvSy2nLh1qbKLNIWA2vsWtx+G/PXWg6ss\ntZYXfAsGhvJIOE+Pgp+wSg0s50RGR0q1cYlx0xnubfKGREZ86cA=\n=yJq+\n-----END PGP SIGNATURE-----", "payload": "tree 5dbbe71268f5d99985dcc204db99b0f0998bacce\nparent 3fc7ab237314a4ce85e612b4ce590c27f1425291\nauthor David Wood <david@davidtw.co> 1533757078 +0200\ncommitter David Wood <david@davidtw.co> 1534237929 +0200\n\nTidy no longer fails when there are no files or subdirectories in a test directory.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed79c31f0929059cb1933a52b0d6a154497fd206", "html_url": "https://github.com/rust-lang/rust/commit/ed79c31f0929059cb1933a52b0d6a154497fd206", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed79c31f0929059cb1933a52b0d6a154497fd206/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fc7ab237314a4ce85e612b4ce590c27f1425291", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fc7ab237314a4ce85e612b4ce590c27f1425291", "html_url": "https://github.com/rust-lang/rust/commit/3fc7ab237314a4ce85e612b4ce590c27f1425291"}], "stats": {"total": 116, "additions": 107, "deletions": 9}, "files": [{"sha": "fa82efa353384acd66a686043f9a7ff731fe0561", "filename": "src/test/ui/borrowck/borrowck-feature-nll-overrides-migrate.edition.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ed79c31f0929059cb1933a52b0d6a154497fd206/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-feature-nll-overrides-migrate.edition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ed79c31f0929059cb1933a52b0d6a154497fd206/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-feature-nll-overrides-migrate.edition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-feature-nll-overrides-migrate.edition.stderr?ref=ed79c31f0929059cb1933a52b0d6a154497fd206", "patch": "@@ -0,0 +1,9 @@\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/borrowck-feature-nll-overrides-migrate.rs:32:17\n+   |\n+LL |                 (|| { let bar = foo; bar.take() })();\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0507`."}, {"sha": "fa82efa353384acd66a686043f9a7ff731fe0561", "filename": "src/test/ui/borrowck/borrowck-feature-nll-overrides-migrate.zflag.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ed79c31f0929059cb1933a52b0d6a154497fd206/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-feature-nll-overrides-migrate.zflag.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ed79c31f0929059cb1933a52b0d6a154497fd206/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-feature-nll-overrides-migrate.zflag.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-feature-nll-overrides-migrate.zflag.stderr?ref=ed79c31f0929059cb1933a52b0d6a154497fd206", "patch": "@@ -0,0 +1,9 @@\n+error[E0507]: cannot move out of borrowed content\n+  --> $DIR/borrowck-feature-nll-overrides-migrate.rs:32:17\n+   |\n+LL |                 (|| { let bar = foo; bar.take() })();\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0507`."}, {"sha": "f5a9db364065fab0b5da3b2f8589ec7f3e92f155", "filename": "src/test/ui/borrowck/borrowck-migrate-to-nll.edition.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ed79c31f0929059cb1933a52b0d6a154497fd206/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.edition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ed79c31f0929059cb1933a52b0d6a154497fd206/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.edition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.edition.stderr?ref=ed79c31f0929059cb1933a52b0d6a154497fd206", "patch": "@@ -0,0 +1,24 @@\n+warning[E0507]: cannot move out of borrowed content\n+  --> $DIR/borrowck-migrate-to-nll.rs:35:17\n+   |\n+LL |                 (|| { let bar = foo; bar.take() })();\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+   |\n+   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n+           It represents potential unsoundness in your code.\n+           This warning will become a hard error in the future.\n+\n+warning[E0507]: cannot move out of `foo`, as it is immutable for the pattern guard\n+  --> $DIR/borrowck-migrate-to-nll.rs:35:17\n+   |\n+LL |                 (|| { let bar = foo; bar.take() })();\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                 |\n+   |                 cannot move out of `foo`, as it is immutable for the pattern guard\n+   |                 cannot move\n+   |\n+   = note: variables bound in patterns are immutable until the end of the pattern guard\n+   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n+           It represents potential unsoundness in your code.\n+           This warning will become a hard error in the future.\n+"}, {"sha": "f5a9db364065fab0b5da3b2f8589ec7f3e92f155", "filename": "src/test/ui/borrowck/borrowck-migrate-to-nll.zflag.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ed79c31f0929059cb1933a52b0d6a154497fd206/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.zflag.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ed79c31f0929059cb1933a52b0d6a154497fd206/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.zflag.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.zflag.stderr?ref=ed79c31f0929059cb1933a52b0d6a154497fd206", "patch": "@@ -0,0 +1,24 @@\n+warning[E0507]: cannot move out of borrowed content\n+  --> $DIR/borrowck-migrate-to-nll.rs:35:17\n+   |\n+LL |                 (|| { let bar = foo; bar.take() })();\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+   |\n+   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n+           It represents potential unsoundness in your code.\n+           This warning will become a hard error in the future.\n+\n+warning[E0507]: cannot move out of `foo`, as it is immutable for the pattern guard\n+  --> $DIR/borrowck-migrate-to-nll.rs:35:17\n+   |\n+LL |                 (|| { let bar = foo; bar.take() })();\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                 |\n+   |                 cannot move out of `foo`, as it is immutable for the pattern guard\n+   |                 cannot move\n+   |\n+   = note: variables bound in patterns are immutable until the end of the pattern guard\n+   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n+           It represents potential unsoundness in your code.\n+           This warning will become a hard error in the future.\n+"}, {"sha": "db7cedffd8f725d82b01d241814a7b4dd9a06cd1", "filename": "src/test/ui/borrowck/issue-45983.migrate.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ed79c31f0929059cb1933a52b0d6a154497fd206/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.migrate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ed79c31f0929059cb1933a52b0d6a154497fd206/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.migrate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.migrate.stderr?ref=ed79c31f0929059cb1933a52b0d6a154497fd206", "patch": "@@ -0,0 +1,12 @@\n+error: borrowed data cannot be stored outside of its closure\n+  --> $DIR/issue-45983.rs:36:27\n+   |\n+LL |     let x = None;\n+   |         - borrowed data cannot be stored into here...\n+LL |     give_any(|y| x = Some(y));\n+   |              ---          ^ cannot be stored outside of its closure\n+   |              |\n+   |              ...because it cannot outlive this closure\n+\n+error: aborting due to previous error\n+"}, {"sha": "f870c09d6e52ce6352ef7d9c1fdc138ed764c40d", "filename": "src/test/ui/obsolete-in-place/bad.bad.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ed79c31f0929059cb1933a52b0d6a154497fd206/src%2Ftest%2Fui%2Fobsolete-in-place%2Fbad.bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ed79c31f0929059cb1933a52b0d6a154497fd206/src%2Ftest%2Fui%2Fobsolete-in-place%2Fbad.bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobsolete-in-place%2Fbad.bad.stderr?ref=ed79c31f0929059cb1933a52b0d6a154497fd206", "patch": "@@ -0,0 +1,18 @@\n+error: emplacement syntax is obsolete (for now, anyway)\n+  --> $DIR/bad.rs:19:5\n+   |\n+LL |     x <- y; //[bad]~ ERROR emplacement syntax is obsolete\n+   |     ^^^^^^\n+   |\n+   = note: for more information, see <https://github.com/rust-lang/rust/issues/27779#issuecomment-378416911>\n+\n+error: emplacement syntax is obsolete (for now, anyway)\n+  --> $DIR/bad.rs:20:5\n+   |\n+LL |     in(foo) { bar }; //[bad]~ ERROR emplacement syntax is obsolete\n+   |     ^^^^^^^^^^^^^^^\n+   |\n+   = note: for more information, see <https://github.com/rust-lang/rust/issues/27779#issuecomment-378416911>\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "85254c6abb599f5de090e35608ebb3dfddf5813d", "filename": "src/tools/tidy/src/lib.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ed79c31f0929059cb1933a52b0d6a154497fd206/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed79c31f0929059cb1933a52b0d6a154497fd206/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs?ref=ed79c31f0929059cb1933a52b0d6a154497fd206", "patch": "@@ -89,16 +89,18 @@ fn walk_many(paths: &[&Path], skip: &mut dyn FnMut(&Path) -> bool, f: &mut dyn F\n }\n \n fn walk(path: &Path, skip: &mut dyn FnMut(&Path) -> bool, f: &mut dyn FnMut(&Path)) {\n-    for entry in t!(fs::read_dir(path), path) {\n-        let entry = t!(entry);\n-        let kind = t!(entry.file_type());\n-        let path = entry.path();\n-        if kind.is_dir() {\n-            if !skip(&path) {\n-                walk(&path, skip, f);\n+    if let Ok(dir) = fs::read_dir(path) {\n+        for entry in dir {\n+            let entry = t!(entry);\n+            let kind = t!(entry.file_type());\n+            let path = entry.path();\n+            if kind.is_dir() {\n+                if !skip(&path) {\n+                    walk(&path, skip, f);\n+                }\n+            } else {\n+                f(&path);\n             }\n-        } else {\n-            f(&path);\n         }\n     }\n }"}]}