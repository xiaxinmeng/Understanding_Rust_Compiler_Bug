{"sha": "dd52066f74795d7640e2931be31466f5a131b26e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNTIwNjZmNzQ3OTVkNzY0MGUyOTMxYmUzMTQ2NmY1YTEzMWIyNmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-05T08:00:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-05T08:00:50Z"}, "message": "Auto merge of #6547 - camsteffen:curse-outdated, r=phansch\n\nCurse outdated test output\n\nchangelog: internal\n\nChange `cargo dev bless` to only include test output that was generated since the last build of clippy. This is especially useful when running tests with `TESTNAME=...`. The feature may be disabled by `cargo dev bless --ignore-timestamp`.", "tree": {"sha": "fe0c1177b82a74dbb5fea26ac947e5d2e0b0b780", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe0c1177b82a74dbb5fea26ac947e5d2e0b0b780"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd52066f74795d7640e2931be31466f5a131b26e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd52066f74795d7640e2931be31466f5a131b26e", "html_url": "https://github.com/rust-lang/rust/commit/dd52066f74795d7640e2931be31466f5a131b26e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd52066f74795d7640e2931be31466f5a131b26e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "976850b69b6a76930c59c3a5a228b623abe9210b", "url": "https://api.github.com/repos/rust-lang/rust/commits/976850b69b6a76930c59c3a5a228b623abe9210b", "html_url": "https://github.com/rust-lang/rust/commit/976850b69b6a76930c59c3a5a228b623abe9210b"}, {"sha": "cbbb188ea9f0795d5ffe8b25734fbe644d40d964", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbbb188ea9f0795d5ffe8b25734fbe644d40d964", "html_url": "https://github.com/rust-lang/rust/commit/cbbb188ea9f0795d5ffe8b25734fbe644d40d964"}], "stats": {"total": 50, "additions": 40, "deletions": 10}, "files": [{"sha": "b877806946cfeb0435b5d348368ff3505e2cb414", "filename": "clippy_dev/src/bless.rs", "status": "modified", "additions": 29, "deletions": 7, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/dd52066f74795d7640e2931be31466f5a131b26e/clippy_dev%2Fsrc%2Fbless.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd52066f74795d7640e2931be31466f5a131b26e/clippy_dev%2Fsrc%2Fbless.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fbless.rs?ref=dd52066f74795d7640e2931be31466f5a131b26e", "patch": "@@ -5,7 +5,7 @@ use std::env;\n use std::ffi::OsStr;\n use std::fs;\n use std::lazy::SyncLazy;\n-use std::path::PathBuf;\n+use std::path::{Path, PathBuf};\n use walkdir::WalkDir;\n \n use crate::clippy_project_root;\n@@ -16,7 +16,15 @@ pub static CARGO_TARGET_DIR: SyncLazy<PathBuf> = SyncLazy::new(|| match env::var\n     None => env::current_dir().unwrap().join(\"target\"),\n });\n \n-pub fn bless() {\n+static CLIPPY_BUILD_TIME: SyncLazy<Option<std::time::SystemTime>> = SyncLazy::new(|| {\n+    let profile = env::var(\"PROFILE\").unwrap_or_else(|_| \"debug\".to_string());\n+    let mut path = PathBuf::from(&**CARGO_TARGET_DIR);\n+    path.push(profile);\n+    path.push(\"cargo-clippy\");\n+    fs::metadata(path).ok()?.modified().ok()\n+});\n+\n+pub fn bless(ignore_timestamp: bool) {\n     let test_suite_dirs = [\n         clippy_project_root().join(\"tests\").join(\"ui\"),\n         clippy_project_root().join(\"tests\").join(\"ui-internal\"),\n@@ -30,15 +38,18 @@ pub fn bless() {\n             .filter(|f| f.path().extension() == Some(OsStr::new(\"rs\")))\n             .for_each(|f| {\n                 let test_name = f.path().strip_prefix(test_suite_dir).unwrap();\n-\n-                update_reference_file(f.path().with_extension(\"stdout\"), test_name.with_extension(\"stdout\"));\n-                update_reference_file(f.path().with_extension(\"stderr\"), test_name.with_extension(\"stderr\"));\n-                update_reference_file(f.path().with_extension(\"fixed\"), test_name.with_extension(\"fixed\"));\n+                for &ext in &[\"stdout\", \"stderr\", \"fixed\"] {\n+                    update_reference_file(\n+                        f.path().with_extension(ext),\n+                        test_name.with_extension(ext),\n+                        ignore_timestamp,\n+                    );\n+                }\n             });\n     }\n }\n \n-fn update_reference_file(reference_file_path: PathBuf, test_name: PathBuf) {\n+fn update_reference_file(reference_file_path: PathBuf, test_name: PathBuf, ignore_timestamp: bool) {\n     let test_output_path = build_dir().join(test_name);\n     let relative_reference_file_path = reference_file_path.strip_prefix(clippy_project_root()).unwrap();\n \n@@ -48,6 +59,11 @@ fn update_reference_file(reference_file_path: PathBuf, test_name: PathBuf) {\n         return;\n     }\n \n+    // If the test output was not updated since the last clippy build, it may be outdated\n+    if !ignore_timestamp && !updated_since_clippy_build(&test_output_path).unwrap_or(true) {\n+        return;\n+    }\n+\n     let test_output_file = fs::read(&test_output_path).expect(\"Unable to read test output file\");\n     let reference_file = fs::read(&reference_file_path).unwrap_or_default();\n \n@@ -67,6 +83,12 @@ fn update_reference_file(reference_file_path: PathBuf, test_name: PathBuf) {\n     }\n }\n \n+fn updated_since_clippy_build(path: &Path) -> Option<bool> {\n+    let clippy_build_time = (*CLIPPY_BUILD_TIME)?;\n+    let modified = fs::metadata(path).ok()?.modified().ok()?;\n+    Some(modified >= clippy_build_time)\n+}\n+\n fn build_dir() -> PathBuf {\n     let profile = env::var(\"PROFILE\").unwrap_or_else(|_| \"debug\".to_string());\n     let mut path = PathBuf::new();"}, {"sha": "2ea56c42fafd62316adc779fa60b5922b70ced30", "filename": "clippy_dev/src/main.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/dd52066f74795d7640e2931be31466f5a131b26e/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd52066f74795d7640e2931be31466f5a131b26e/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=dd52066f74795d7640e2931be31466f5a131b26e", "patch": "@@ -7,8 +7,8 @@ fn main() {\n     let matches = get_clap_config();\n \n     match matches.subcommand() {\n-        (\"bless\", Some(_)) => {\n-            bless::bless();\n+        (\"bless\", Some(matches)) => {\n+            bless::bless(matches.is_present(\"ignore-timestamp\"));\n         },\n         (\"fmt\", Some(matches)) => {\n             fmt::run(matches.is_present(\"check\"), matches.is_present(\"verbose\"));\n@@ -47,7 +47,15 @@ fn main() {\n \n fn get_clap_config<'a>() -> ArgMatches<'a> {\n     App::new(\"Clippy developer tooling\")\n-        .subcommand(SubCommand::with_name(\"bless\").about(\"bless the test output changes\"))\n+        .subcommand(\n+            SubCommand::with_name(\"bless\")\n+                .about(\"bless the test output changes\")\n+                .arg(\n+                    Arg::with_name(\"ignore-timestamp\")\n+                        .long(\"ignore-timestamp\")\n+                        .help(\"Include files updated before clippy was built\"),\n+                ),\n+        )\n         .subcommand(\n             SubCommand::with_name(\"fmt\")\n                 .about(\"Run rustfmt on all projects and tests\")"}]}