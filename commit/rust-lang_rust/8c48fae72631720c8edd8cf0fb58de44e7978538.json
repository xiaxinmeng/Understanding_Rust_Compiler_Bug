{"sha": "8c48fae72631720c8edd8cf0fb58de44e7978538", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNDhmYWU3MjYzMTcyMGM4ZWRkOGNmMGZiNThkZTQ0ZTc5Nzg1Mzg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-19T01:12:58Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-19T01:12:58Z"}, "message": "rustc: Do pointer casts when casting native types", "tree": {"sha": "eff988bd5761a3bef9d2f35694de946f170e7343", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eff988bd5761a3bef9d2f35694de946f170e7343"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c48fae72631720c8edd8cf0fb58de44e7978538", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c48fae72631720c8edd8cf0fb58de44e7978538", "html_url": "https://github.com/rust-lang/rust/commit/8c48fae72631720c8edd8cf0fb58de44e7978538", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c48fae72631720c8edd8cf0fb58de44e7978538/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c0c0af1b225bc26c0b73434221efe6ffbb373c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c0c0af1b225bc26c0b73434221efe6ffbb373c3", "html_url": "https://github.com/rust-lang/rust/commit/9c0c0af1b225bc26c0b73434221efe6ffbb373c3"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "b30fcefb97d6c71e8755246266b2d2c052d09687", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c48fae72631720c8edd8cf0fb58de44e7978538/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c48fae72631720c8edd8cf0fb58de44e7978538/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=8c48fae72631720c8edd8cf0fb58de44e7978538", "patch": "@@ -3596,7 +3596,9 @@ fn trans_cast(@block_ctxt cx, @ast.expr e, &ast.ann ann) -> result {\n     auto t = node_ann_type(cx.fcx.ccx, ann);\n     auto lldsttype = type_of(cx.fcx.ccx, t);\n     if (!ty.type_is_fp(t)) {\n-        if (llvm.LLVMGetIntTypeWidth(lldsttype) >\n+        if (ty.type_is_native(ty.expr_ty(e))) {\n+            e_res.val = e_res.bcx.build.PtrToInt(e_res.val, lldsttype);\n+        } else if (llvm.LLVMGetIntTypeWidth(lldsttype) >\n             llvm.LLVMGetIntTypeWidth(llsrctype)) {\n             if (ty.type_is_signed(t)) {\n                 // Widening signed cast."}]}