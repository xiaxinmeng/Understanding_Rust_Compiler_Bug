{"sha": "89cf577c73b70e66157d9a4ff6560e738d039ab1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5Y2Y1NzdjNzNiNzBlNjYxNTdkOWE0ZmY2NTYwZTczOGQwMzlhYjE=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-11-01T22:43:18Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-11-01T23:21:55Z"}, "message": "Fix tracking issue numbers for some unstable features", "tree": {"sha": "3a0d08d6e1659193ef78e8ad42fa9e768eaaf0fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a0d08d6e1659193ef78e8ad42fa9e768eaaf0fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89cf577c73b70e66157d9a4ff6560e738d039ab1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89cf577c73b70e66157d9a4ff6560e738d039ab1", "html_url": "https://github.com/rust-lang/rust/commit/89cf577c73b70e66157d9a4ff6560e738d039ab1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89cf577c73b70e66157d9a4ff6560e738d039ab1/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "451987d86c89b38ddd8c4c124f1b9b6d4ded6983", "url": "https://api.github.com/repos/rust-lang/rust/commits/451987d86c89b38ddd8c4c124f1b9b6d4ded6983", "html_url": "https://github.com/rust-lang/rust/commit/451987d86c89b38ddd8c4c124f1b9b6d4ded6983"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "0ddeedfb50d0daa48e222614a24f9bd377f4950e", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/89cf577c73b70e66157d9a4ff6560e738d039ab1/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89cf577c73b70e66157d9a4ff6560e738d039ab1/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=89cf577c73b70e66157d9a4ff6560e738d039ab1", "patch": "@@ -349,7 +349,7 @@ declare_features! (\n     (active, abi_thiscall, \"1.19.0\", None, None),\n \n     // Allows a test to fail without failing the whole suite\n-    (active, allow_fail, \"1.19.0\", Some(42219), None),\n+    (active, allow_fail, \"1.19.0\", Some(46488), None),\n \n     // Allows unsized tuple coercion.\n     (active, unsized_tuple_coercion, \"1.20.0\", Some(42877), None),\n@@ -376,7 +376,7 @@ declare_features! (\n     (active, non_exhaustive, \"1.22.0\", Some(44109), None),\n \n     // `crate` as visibility modifier, synonymous to `pub(crate)`\n-    (active, crate_visibility_modifier, \"1.23.0\", Some(45388), None),\n+    (active, crate_visibility_modifier, \"1.23.0\", Some(53120), None),\n \n     // extern types\n     (active, extern_types, \"1.23.0\", Some(43467), None),\n@@ -391,13 +391,13 @@ declare_features! (\n     (active, generic_associated_types, \"1.23.0\", Some(44265), None),\n \n     // `extern` in paths\n-    (active, extern_in_paths, \"1.23.0\", Some(44660), None),\n+    (active, extern_in_paths, \"1.23.0\", Some(55600), None),\n \n     // Use `?` as the Kleene \"at most one\" operator\n     (active, macro_at_most_once_rep, \"1.25.0\", Some(48075), None),\n \n     // Infer static outlives requirements; RFC 2093\n-    (active, infer_static_outlives_requirements, \"1.26.0\", Some(44493), None),\n+    (active, infer_static_outlives_requirements, \"1.26.0\", Some(54185), None),\n \n     // Multiple patterns with `|` in `if let` and `while let`\n     (active, if_while_or_patterns, \"1.26.0\", Some(48215), None),\n@@ -466,7 +466,7 @@ declare_features! (\n     (active, test_2018_feature, \"1.31.0\", Some(0), Some(Edition::Edition2018)),\n \n     // Support for arbitrary delimited token streams in non-macro attributes\n-    (active, unrestricted_attribute_tokens, \"1.30.0\", Some(44690), None),\n+    (active, unrestricted_attribute_tokens, \"1.30.0\", Some(55208), None),\n \n     // Allows `use x::y;` to resolve through `self::x`, not just `::x`\n     (active, uniform_paths, \"1.30.0\", Some(53130), None),\n@@ -503,7 +503,7 @@ declare_features! (\n     (active, underscore_const_names, \"1.31.0\", Some(54912), None),\n \n     // `extern crate foo as bar;` puts `bar` into extern prelude.\n-    (active, extern_crate_item_prelude, \"1.31.0\", Some(54658), None),\n+    (active, extern_crate_item_prelude, \"1.31.0\", Some(55599), None),\n \n     // `reason = ` in lint attributes and `expect` lint attribute\n     (active, lint_reasons, \"1.31.0\", Some(54503), None),"}, {"sha": "736fad44b8b5840b4259c4ddeafe8eb1d185e4d2", "filename": "src/test/ui/feature-gates/feature-gate-allow_fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/89cf577c73b70e66157d9a4ff6560e738d039ab1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/89cf577c73b70e66157d9a4ff6560e738d039ab1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow_fail.stderr?ref=89cf577c73b70e66157d9a4ff6560e738d039ab1", "patch": "@@ -1,4 +1,4 @@\n-error[E0658]: allow_fail attribute is currently unstable (see issue #42219)\n+error[E0658]: allow_fail attribute is currently unstable (see issue #46488)\n   --> $DIR/feature-gate-allow_fail.rs:13:1\n    |\n LL | #[allow_fail] //~ ERROR allow_fail attribute is currently unstable"}, {"sha": "e1c1dcbcd790ce271faa113fd3c83542b6e53674", "filename": "src/test/ui/feature-gates/feature-gate-crate_visibility_modifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/89cf577c73b70e66157d9a4ff6560e738d039ab1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-crate_visibility_modifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/89cf577c73b70e66157d9a4ff6560e738d039ab1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-crate_visibility_modifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-crate_visibility_modifier.stderr?ref=89cf577c73b70e66157d9a4ff6560e738d039ab1", "patch": "@@ -1,4 +1,4 @@\n-error[E0658]: `crate` visibility modifier is experimental (see issue #45388)\n+error[E0658]: `crate` visibility modifier is experimental (see issue #53120)\n   --> $DIR/feature-gate-crate_visibility_modifier.rs:11:1\n    |\n LL | crate struct Bender { //~ ERROR `crate` visibility modifier is experimental"}, {"sha": "bbd4b630263a44706e21fb21377a314db30c7319", "filename": "src/test/ui/feature-gates/feature-gate-extern_crate_item_prelude.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/89cf577c73b70e66157d9a4ff6560e738d039ab1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_crate_item_prelude.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/89cf577c73b70e66157d9a4ff6560e738d039ab1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_crate_item_prelude.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_crate_item_prelude.stderr?ref=89cf577c73b70e66157d9a4ff6560e738d039ab1", "patch": "@@ -1,68 +1,68 @@\n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:26:9\n    |\n LL |     use alloc;\n    |         ^^^^^\n    |\n    = help: add #![feature(extern_crate_item_prelude)] to the crate attributes to enable\n \n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:28:9\n    |\n LL |     use alloc::boxed;\n    |         ^^^^^\n    |\n    = help: add #![feature(extern_crate_item_prelude)] to the crate attributes to enable\n \n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:33:11\n    |\n LL |     use ::alloc;\n    |           ^^^^^\n    |\n    = help: add #![feature(extern_crate_item_prelude)] to the crate attributes to enable\n \n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:35:11\n    |\n LL |     use ::alloc::boxed;\n    |           ^^^^^\n    |\n    = help: add #![feature(extern_crate_item_prelude)] to the crate attributes to enable\n \n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:9:17\n    |\n LL |         let v = alloc::vec![0];\n    |                 ^^^^^\n    |\n    = help: add #![feature(extern_crate_item_prelude)] to the crate attributes to enable\n \n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:11:18\n    |\n LL |         type A = alloc::boxed::Box<u8>;\n    |                  ^^^^^\n    |\n    = help: add #![feature(extern_crate_item_prelude)] to the crate attributes to enable\n \n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:18:19\n    |\n LL |         let v = ::alloc::vec![0];\n    |                   ^^^^^\n    |\n    = help: add #![feature(extern_crate_item_prelude)] to the crate attributes to enable\n \n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:20:20\n    |\n LL |         type A = ::alloc::boxed::Box<u8>;\n    |                    ^^^^^\n    |\n    = help: add #![feature(extern_crate_item_prelude)] to the crate attributes to enable\n \n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:42:14\n    |\n LL |     type A = core::boxed::Box<u8>;"}, {"sha": "a73533b617891c121ce4029a46d0d8cb414729bd", "filename": "src/test/ui/feature-gates/feature-gate-extern_in_paths.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/89cf577c73b70e66157d9a4ff6560e738d039ab1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_in_paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/89cf577c73b70e66157d9a4ff6560e738d039ab1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_in_paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_in_paths.stderr?ref=89cf577c73b70e66157d9a4ff6560e738d039ab1", "patch": "@@ -1,4 +1,4 @@\n-error[E0658]: `extern` in paths is experimental (see issue #44660)\n+error[E0658]: `extern` in paths is experimental (see issue #55600)\n   --> $DIR/feature-gate-extern_in_paths.rs:14:13\n    |\n LL |     let _ = extern::std::vec::Vec::new(); //~ ERROR `extern` in paths is experimental"}]}