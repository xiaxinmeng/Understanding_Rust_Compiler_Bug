{"sha": "be3be582cc55eed27c3baf0f976dbc3f11209b10", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlM2JlNTgyY2M1NWVlZDI3YzNiYWYwZjk3NmRiYzNmMTEyMDliMTA=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-04-29T13:40:37Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-04-29T13:40:37Z"}, "message": "set stdin default config path to curr", "tree": {"sha": "be9163ef798daf699f9d5850f45f6b3415bb3550", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be9163ef798daf699f9d5850f45f6b3415bb3550"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be3be582cc55eed27c3baf0f976dbc3f11209b10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be3be582cc55eed27c3baf0f976dbc3f11209b10", "html_url": "https://github.com/rust-lang/rust/commit/be3be582cc55eed27c3baf0f976dbc3f11209b10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be3be582cc55eed27c3baf0f976dbc3f11209b10/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb9a5add9b651d64ecf365ade61d83d76fd6b307", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb9a5add9b651d64ecf365ade61d83d76fd6b307", "html_url": "https://github.com/rust-lang/rust/commit/fb9a5add9b651d64ecf365ade61d83d76fd6b307"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "3cb34fb0a422b5594c1fe8e63c94ae7887e4f972", "filename": "src/bin/main.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/be3be582cc55eed27c3baf0f976dbc3f11209b10/src%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be3be582cc55eed27c3baf0f976dbc3f11209b10/src%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmain.rs?ref=be3be582cc55eed27c3baf0f976dbc3f11209b10", "patch": "@@ -18,7 +18,7 @@ extern crate rustfmt_nightly as rustfmt;\n use std::env;\n use std::fs::File;\n use std::io::{self, stdout, Read, Write};\n-use std::path::PathBuf;\n+use std::path::{Path, PathBuf};\n \n use failure::err_msg;\n \n@@ -182,7 +182,7 @@ fn execute(opts: &Options) -> FmtResult<(WriteMode, Summary)> {\n         Operation::Stdin { input } => {\n             // try to read config from local directory\n             let options = CliOptions::from_matches(&matches)?;\n-            let (mut config, _) = load_config(None, Some(&options))?;\n+            let (mut config, _) = load_config(Some(Path::new(\".\")), Some(&options))?;\n \n             // write_mode is always Plain for Stdin.\n             config.set().write_mode(WriteMode::Plain);"}]}