{"sha": "73ba4e7abe0ada4c187aee4576bffe6024b5098a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczYmE0ZTdhYmUwYWRhNGMxODdhZWU0NTc2YmZmZTYwMjRiNTA5OGE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-31T18:46:05Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-31T18:46:05Z"}, "message": "Miri: fix ICE when unwinding past topmost stack frame", "tree": {"sha": "5fab13a744043735583f03243432f4f30b8df289", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fab13a744043735583f03243432f4f30b8df289"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73ba4e7abe0ada4c187aee4576bffe6024b5098a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73ba4e7abe0ada4c187aee4576bffe6024b5098a", "html_url": "https://github.com/rust-lang/rust/commit/73ba4e7abe0ada4c187aee4576bffe6024b5098a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73ba4e7abe0ada4c187aee4576bffe6024b5098a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62f9aa94c0d0312544589bed78679d85646d4e62", "url": "https://api.github.com/repos/rust-lang/rust/commits/62f9aa94c0d0312544589bed78679d85646d4e62", "html_url": "https://github.com/rust-lang/rust/commit/62f9aa94c0d0312544589bed78679d85646d4e62"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "65736710fce1bb1d26ea14275a46ba170ec5c4ea", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73ba4e7abe0ada4c187aee4576bffe6024b5098a/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73ba4e7abe0ada4c187aee4576bffe6024b5098a/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=73ba4e7abe0ada4c187aee4576bffe6024b5098a", "patch": "@@ -718,6 +718,10 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             }\n         );\n \n+        if unwinding && self.frame_idx() == 0 {\n+            throw_ub_format!(\"unwinding past the topmost frame of the stack\");\n+        }\n+\n         ::log_settings::settings().indentation -= 1;\n         let frame =\n             self.stack_mut().pop().expect(\"tried to pop a stack frame, but there were none\");"}]}