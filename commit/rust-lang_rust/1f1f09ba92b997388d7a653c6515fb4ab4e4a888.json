{"sha": "1f1f09ba92b997388d7a653c6515fb4ab4e4a888", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmMWYwOWJhOTJiOTk3Mzg4ZDdhNjUzYzY1MTVmYjRhYjRlNGE4ODg=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-23T11:52:17Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-29T08:45:18Z"}, "message": "also compute minimal product of sum form", "tree": {"sha": "9c9bda6be67f2b6c3962078ebfd3cc454eaa5b16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c9bda6be67f2b6c3962078ebfd3cc454eaa5b16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f1f09ba92b997388d7a653c6515fb4ab4e4a888", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f1f09ba92b997388d7a653c6515fb4ab4e4a888", "html_url": "https://github.com/rust-lang/rust/commit/1f1f09ba92b997388d7a653c6515fb4ab4e4a888", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f1f09ba92b997388d7a653c6515fb4ab4e4a888/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57faa5a9f58026ab167c1024c5a3b924156522c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/57faa5a9f58026ab167c1024c5a3b924156522c3", "html_url": "https://github.com/rust-lang/rust/commit/57faa5a9f58026ab167c1024c5a3b924156522c3"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "178cef3aadad1c6232eceb6fbcfb6f8bbfb74baf", "filename": "src/booleans.rs", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/1f1f09ba92b997388d7a653c6515fb4ab4e4a888/src%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f1f09ba92b997388d7a653c6515fb4ab4e4a888/src%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbooleans.rs?ref=1f1f09ba92b997388d7a653c6515fb4ab4e4a888", "patch": "@@ -133,11 +133,40 @@ fn suggest(cx: &LateContext, suggestion: &Bool, terminals: &[&Expr]) -> String {\n     recurse(false, cx, suggestion, terminals, String::new())\n }\n \n+fn simple_negate(b: Bool) -> Bool {\n+    use quine_mc_cluskey::Bool::*;\n+    match b {\n+        True => False,\n+        False => True,\n+        t @ Term(_) => Not(Box::new(t)),\n+        And(mut v) => {\n+            for el in &mut v {\n+                *el = simple_negate(::std::mem::replace(el, True));\n+            }\n+            Or(v)\n+        },\n+        Or(mut v) => {\n+            for el in &mut v {\n+                *el = simple_negate(::std::mem::replace(el, True));\n+            }\n+            And(v)\n+        },\n+        Not(inner) => *inner,\n+    }\n+}\n+\n impl<'a, 'tcx> NonminimalBoolVisitor<'a, 'tcx> {\n     fn bool_expr(&self, e: &Expr) {\n         let mut h2q = Hir2Qmm(Vec::new());\n         if let Ok(expr) = h2q.run(e) {\n-            let simplified = expr.simplify();\n+            let mut simplified = expr.simplify();\n+            for simple in Bool::Not(Box::new(expr.clone())).simplify() {\n+                let simple_negated = simple_negate(simple);\n+                if simplified.iter().any(|s| *s == simple_negated) {\n+                    continue;\n+                }\n+                simplified.push(simple_negated);\n+            }\n             if !simplified.iter().any(|s| *s == expr) {\n                 span_lint_and_then(self.0, NONMINIMAL_BOOL, e.span, \"this boolean expression can be simplified\", |db| {\n                     for suggestion in &simplified {"}]}