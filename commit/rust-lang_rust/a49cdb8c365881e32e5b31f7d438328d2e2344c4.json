{"sha": "a49cdb8c365881e32e5b31f7d438328d2e2344c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0OWNkYjhjMzY1ODgxZTMyZTViMzFmN2Q0MzgzMjhkMmUyMzQ0YzQ=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-31T01:56:05Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-01T03:50:27Z"}, "message": "rustc_driver: unbox closures used in let bindings", "tree": {"sha": "e914760d7330d23d4875a5cf587a3f31d0edf69a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e914760d7330d23d4875a5cf587a3f31d0edf69a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a49cdb8c365881e32e5b31f7d438328d2e2344c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a49cdb8c365881e32e5b31f7d438328d2e2344c4", "html_url": "https://github.com/rust-lang/rust/commit/a49cdb8c365881e32e5b31f7d438328d2e2344c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a49cdb8c365881e32e5b31f7d438328d2e2344c4/comments", "author": null, "committer": null, "parents": [{"sha": "28ea99eaa6dc052cd3d934769a5c92d144ae5bb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/28ea99eaa6dc052cd3d934769a5c92d144ae5bb2", "html_url": "https://github.com/rust-lang/rust/commit/28ea99eaa6dc052cd3d934769a5c92d144ae5bb2"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "181f38d89939e0beda86e3d5fbbf6caf23ea390a", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a49cdb8c365881e32e5b31f7d438328d2e2344c4/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a49cdb8c365881e32e5b31f7d438328d2e2344c4/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=a49cdb8c365881e32e5b31f7d438328d2e2344c4", "patch": "@@ -278,7 +278,7 @@ Available lint options:\n     let max_name_len = plugin.iter().chain(builtin.iter())\n         .map(|&s| s.name.width(true))\n         .max().unwrap_or(0);\n-    let padded = |x: &str| {\n+    let padded = |&: x: &str| {\n         let mut s = repeat(\" \").take(max_name_len - x.chars().count())\n                                .collect::<String>();\n         s.push_str(x);\n@@ -289,7 +289,7 @@ Available lint options:\n     println!(\"    {}  {:7.7}  {}\", padded(\"name\"), \"default\", \"meaning\");\n     println!(\"    {}  {:7.7}  {}\", padded(\"----\"), \"-------\", \"-------\");\n \n-    let print_lints = |lints: Vec<&Lint>| {\n+    let print_lints = |&: lints: Vec<&Lint>| {\n         for lint in lints.into_iter() {\n             let name = lint.name_lower().replace(\"_\", \"-\");\n             println!(\"    {}  {:7.7}  {}\",\n@@ -305,7 +305,7 @@ Available lint options:\n     let max_name_len = plugin_groups.iter().chain(builtin_groups.iter())\n         .map(|&(s, _)| s.width(true))\n         .max().unwrap_or(0);\n-    let padded = |x: &str| {\n+    let padded = |&: x: &str| {\n         let mut s = repeat(\" \").take(max_name_len - x.chars().count())\n                                .collect::<String>();\n         s.push_str(x);\n@@ -316,7 +316,7 @@ Available lint options:\n     println!(\"    {}  {}\", padded(\"name\"), \"sub-lints\");\n     println!(\"    {}  {}\", padded(\"----\"), \"---------\");\n \n-    let print_lint_groups = |lints: Vec<(&'static str, Vec<lint::LintId>)>| {\n+    let print_lint_groups = |&: lints: Vec<(&'static str, Vec<lint::LintId>)>| {\n         for (name, to) in lints.into_iter() {\n             let name = name.chars().map(|x| x.to_lowercase())\n                            .collect::<String>().replace(\"_\", \"-\");"}, {"sha": "773ea30d401fc361fdcb422017fd119983609875", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a49cdb8c365881e32e5b31f7d438328d2e2344c4/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a49cdb8c365881e32e5b31f7d438328d2e2344c4/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=a49cdb8c365881e32e5b31f7d438328d2e2344c4", "patch": "@@ -301,7 +301,7 @@ fn gather_flowgraph_variants(sess: &Session) -> Vec<borrowck_dot::Variant> {\n     let print_moves   = config::FLOWGRAPH_PRINT_MOVES;\n     let print_assigns = config::FLOWGRAPH_PRINT_ASSIGNS;\n     let print_all     = config::FLOWGRAPH_PRINT_ALL;\n-    let opt = |print_which| sess.debugging_opt(print_which);\n+    let opt = |&: print_which| sess.debugging_opt(print_which);\n     let mut variants = Vec::new();\n     if opt(print_all) || opt(print_loans) {\n         variants.push(borrowck_dot::Loans);\n@@ -365,7 +365,7 @@ impl UserIdentifiedItem {\n     }\n \n     fn to_one_node_id(self, user_option: &str, sess: &Session, map: &ast_map::Map) -> ast::NodeId {\n-        let fail_because = |is_wrong_because| -> ast::NodeId {\n+        let fail_because = |&: is_wrong_because| -> ast::NodeId {\n             let message =\n                 format!(\"{} needs NodeId (int) or unique \\\n                          path suffix (b::c::d); got {}, which {}\","}]}