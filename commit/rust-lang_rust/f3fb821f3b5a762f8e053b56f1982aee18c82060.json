{"sha": "f3fb821f3b5a762f8e053b56f1982aee18c82060", "node_id": "C_kwDOAAsO6NoAKGYzZmI4MjFmM2I1YTc2MmY4ZTA1M2I1NmYxOTgyYWVlMThjODIwNjA", "commit": {"author": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2021-10-09T17:32:42Z"}, "committer": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2021-10-20T00:24:07Z"}, "message": "use array explicitly instead of vec for const content (even if optimizer smart enought to remove allocation)", "tree": {"sha": "91f43df28b38fee7580949a4357afc5498836e4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91f43df28b38fee7580949a4357afc5498836e4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3fb821f3b5a762f8e053b56f1982aee18c82060", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3fb821f3b5a762f8e053b56f1982aee18c82060", "html_url": "https://github.com/rust-lang/rust/commit/f3fb821f3b5a762f8e053b56f1982aee18c82060", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3fb821f3b5a762f8e053b56f1982aee18c82060/comments", "author": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aad48f71b309192882789f5d5187012bd060952f", "url": "https://api.github.com/repos/rust-lang/rust/commits/aad48f71b309192882789f5d5187012bd060952f", "html_url": "https://github.com/rust-lang/rust/commit/aad48f71b309192882789f5d5187012bd060952f"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "9c7b0b2cacb062e397ed86fedc7b8fa8f518b4bb", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f3fb821f3b5a762f8e053b56f1982aee18c82060/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3fb821f3b5a762f8e053b56f1982aee18c82060/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=f3fb821f3b5a762f8e053b56f1982aee18c82060", "patch": "@@ -883,8 +883,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             self.tcx.get_diagnostic_item(sym::unwind_safe_trait),\n             self.tcx.get_diagnostic_item(sym::ref_unwind_safe_trait),\n         ];\n-        let auto_traits =\n-            vec![\"`Clone`\", \"`Sync`\", \"`Send`\", \"`Unpin`\", \"`UnwindSafe`\", \"`RefUnwindSafe`\"];\n+        const AUTO_TRAITS: [&str; 6] =\n+            [\"`Clone`\", \"`Sync`\", \"`Send`\", \"`Unpin`\", \"`UnwindSafe`\", \"`RefUnwindSafe`\"];\n \n         let root_var_min_capture_list = min_captures.and_then(|m| m.get(&var_hir_id))?;\n \n@@ -957,7 +957,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             // by the root variable but not by the capture\n             for (idx, _) in obligations_should_hold.iter().enumerate() {\n                 if !obligations_holds_for_capture[idx] && obligations_should_hold[idx] {\n-                    capture_problems.insert(auto_traits[idx]);\n+                    capture_problems.insert(AUTO_TRAITS[idx]);\n                 }\n             }\n "}]}