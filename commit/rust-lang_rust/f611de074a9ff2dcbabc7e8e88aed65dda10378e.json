{"sha": "f611de074a9ff2dcbabc7e8e88aed65dda10378e", "node_id": "C_kwDOAAsO6NoAKGY2MTFkZTA3NGE5ZmYyZGNiYWJjN2U4ZTg4YWVkNjVkZGExMDM3OGU", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-02-07T14:08:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-07T14:08:34Z"}, "message": "Rollup merge of #93487 - yerke:yerke/fix-link-toolchain-in-setup, r=Mark-Simulacrum\n\nFix linking stage1 toolchain in `./x.py setup`\n\nCloses [92319](https://github.com/rust-lang/rust/issues/92319)\n\nFix linking stage1 toolchain in `./x.py setup`. I guess this can be considered a follow up to https://github.com/rust-lang/rust/pull/89212 by `````@Sl1mb0.`````\n\nWe create 2 directories and 1 file that are required by rustup to [link a custom toolchain from path](https://github.com/rust-lang/rustup/blob/5225e87a5d974ab5f1626bcb2a7b43f76ab883f0/src/toolchain.rs#L479-L497).\n\ncc `````@jyn514````` and `````@Mark-Simulacrum````` as they were active in https://github.com/rust-lang/rust/issues/89206", "tree": {"sha": "8b72487ceab8951627d1ae28577ae3b8194851af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b72487ceab8951627d1ae28577ae3b8194851af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f611de074a9ff2dcbabc7e8e88aed65dda10378e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiASfjCRBK7hj4Ov3rIwAA4nEIAJdVyylS5qpFUl4bWMpiTzP5\nySFPE1iMPHDIPbtEt68dRHcFO8nheQK69NpY/ode87PI+R+bvc8HhRHouStR9Zqs\naImc1ROKg9dJWSbf2kw3PmBb/ip0yz9WxAA0DV2pbP51KAM73+2nkSZkAp49/T5C\nXVLkrbB9q79ttvfccmbd6136c/iAeYA+8LGuMp9gWEf5RTsKZCuIDla8++km5wq0\nAE7wZI8bWCfHk/liQb2udpG8AE+h7LrLftMj2n6GnomnZaTCis4tzr3dmvxyxXrn\nMbZBozqJLnLnwSGAfhojELG+lADYvwkurBXyWHnOPoULTboy0jjBzKL3aMrU0sw=\n=kAkR\n-----END PGP SIGNATURE-----\n", "payload": "tree 8b72487ceab8951627d1ae28577ae3b8194851af\nparent 252ff5ead0ee32b2849570bb9cddf64a7f1b1f9c\nparent a4112dc7b5c8240f4e9163c1f696426e3899a26d\nauthor Mara Bos <m-ou.se@m-ou.se> 1644242914 +0000\ncommitter GitHub <noreply@github.com> 1644242914 +0000\n\nRollup merge of #93487 - yerke:yerke/fix-link-toolchain-in-setup, r=Mark-Simulacrum\n\nFix linking stage1 toolchain in `./x.py setup`\n\nCloses [92319](https://github.com/rust-lang/rust/issues/92319)\n\nFix linking stage1 toolchain in `./x.py setup`. I guess this can be considered a follow up to https://github.com/rust-lang/rust/pull/89212 by `````@Sl1mb0.`````\n\nWe create 2 directories and 1 file that are required by rustup to [link a custom toolchain from path](https://github.com/rust-lang/rustup/blob/5225e87a5d974ab5f1626bcb2a7b43f76ab883f0/src/toolchain.rs#L479-L497).\n\ncc `````@jyn514````` and `````@Mark-Simulacrum````` as they were active in https://github.com/rust-lang/rust/issues/89206\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f611de074a9ff2dcbabc7e8e88aed65dda10378e", "html_url": "https://github.com/rust-lang/rust/commit/f611de074a9ff2dcbabc7e8e88aed65dda10378e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f611de074a9ff2dcbabc7e8e88aed65dda10378e/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "252ff5ead0ee32b2849570bb9cddf64a7f1b1f9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/252ff5ead0ee32b2849570bb9cddf64a7f1b1f9c", "html_url": "https://github.com/rust-lang/rust/commit/252ff5ead0ee32b2849570bb9cddf64a7f1b1f9c"}, {"sha": "a4112dc7b5c8240f4e9163c1f696426e3899a26d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4112dc7b5c8240f4e9163c1f696426e3899a26d", "html_url": "https://github.com/rust-lang/rust/commit/a4112dc7b5c8240f4e9163c1f696426e3899a26d"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "9a9ef0b76955d503127bc64bd7b6be057b575be7", "filename": "src/bootstrap/setup.rs", "status": "modified", "additions": 39, "deletions": 2, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/f611de074a9ff2dcbabc7e8e88aed65dda10378e/src%2Fbootstrap%2Fsetup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f611de074a9ff2dcbabc7e8e88aed65dda10378e/src%2Fbootstrap%2Fsetup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsetup.rs?ref=f611de074a9ff2dcbabc7e8e88aed65dda10378e", "patch": "@@ -1,7 +1,9 @@\n use crate::TargetSelection;\n use crate::{t, VERSION};\n+use std::env::consts::EXE_SUFFIX;\n use std::fmt::Write as _;\n-use std::path::{Path, PathBuf};\n+use std::fs::File;\n+use std::path::{Path, PathBuf, MAIN_SEPARATOR};\n use std::process::Command;\n use std::str::FromStr;\n use std::{\n@@ -109,7 +111,8 @@ pub fn setup(src_path: &Path, profile: Profile) {\n     println!(\"`x.py` will now use the configuration at {}\", include_path.display());\n \n     let build = TargetSelection::from_user(&env!(\"BUILD_TRIPLE\"));\n-    let stage_path = [\"build\", build.rustc_target_arg(), \"stage1\"].join(\"/\");\n+    let stage_path =\n+        [\"build\", build.rustc_target_arg(), \"stage1\"].join(&MAIN_SEPARATOR.to_string());\n \n     println!();\n \n@@ -171,6 +174,13 @@ fn attempt_toolchain_link(stage_path: &str) {\n         return;\n     }\n \n+    if !ensure_stage1_toolchain_placeholder_exists(stage_path) {\n+        println!(\n+            \"Failed to create a template for stage 1 toolchain or confirm that it already exists\"\n+        );\n+        return;\n+    }\n+\n     if try_link_toolchain(&stage_path[..]) {\n         println!(\n             \"Added `stage1` rustup toolchain; try `cargo +stage1 build` on a separate rust project to run a newly-built toolchain\"\n@@ -219,6 +229,33 @@ fn try_link_toolchain(stage_path: &str) -> bool {\n         .map_or(false, |output| output.status.success())\n }\n \n+fn ensure_stage1_toolchain_placeholder_exists(stage_path: &str) -> bool {\n+    let pathbuf = PathBuf::from(stage_path);\n+\n+    if fs::create_dir_all(pathbuf.join(\"lib\")).is_err() {\n+        return false;\n+    };\n+\n+    let pathbuf = pathbuf.join(\"bin\");\n+    if fs::create_dir_all(&pathbuf).is_err() {\n+        return false;\n+    };\n+\n+    let pathbuf = pathbuf.join(format!(\"rustc{}\", EXE_SUFFIX));\n+\n+    if pathbuf.exists() {\n+        return true;\n+    }\n+\n+    // Take care not to overwrite the file\n+    let result = File::options().append(true).create(true).open(&pathbuf);\n+    if result.is_err() {\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n // Used to get the path for `Subcommand::Setup`\n pub fn interactive_path() -> io::Result<Profile> {\n     fn abbrev_all() -> impl Iterator<Item = ((String, String), Profile)> {"}]}