{"sha": "1b5ff95edbf938d96aa687c72f849d1a9ef15ff9", "node_id": "C_kwDOAAsO6NoAKDFiNWZmOTVlZGJmOTM4ZDk2YWE2ODdjNzJmODQ5ZDFhOWVmMTVmZjk", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-15T03:57:45Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-17T18:38:30Z"}, "message": "Replace confusing is_sorted_by in format_args implementation", "tree": {"sha": "f73cc32272d73d3fc4b1ac606843e2ede3ab274c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f73cc32272d73d3fc4b1ac606843e2ede3ab274c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b5ff95edbf938d96aa687c72f849d1a9ef15ff9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmHlt6YACgkQ+boUO5X/\nbYJmXQ/9EiUmZrhkTSxUctbt5DGp6kch+9CA9E84P9PK74ct4G3FpqC95eN6ykxL\nEfa5grqLEd02P4NtOvmqht/DD65wb1tjaB+Fdvf16ZCXlBkyFKVL3/GtPHqNaloh\nNpmgcLmoGo0Ali2Dq7JE7Wut6/6lZRN8rWrvbMe9q3fG9+Fc+jXsDGXhSSTOejb+\nCs5gMzFOdPaHsqJEiJl4heWGz5b0fBPtq/mTP4XyVhe2gtOIIDS9rNcODMvwAOqN\nbdUf+bTPuIQj7QnWYI0bZT+TvHYYOlnGCHETqcfEu5FyKNgQZg5I9KVOuu8fjDI5\nYTReNForwNQFajhIevGqaWbvZuFnZc+XivDh8Mfu2WrRh1kLrjGfTlxhaSOowQzT\nEnVJlOBeHxGYGhrEWpwOhfJMsSXW11yT2/i5FYukPFc6f+JS/tY1Oxd546sX+Vca\ncb3YPQhua86OKuwYs8U0CTB9R0JWIscLo7yhEhJVTP28BU0JHOaOAm1Pw5dum+UJ\nJp8pZKgMPkhmEsf+lAR6khHM8vEhNu+RKT3o5Bia//QkNhOTyZtA4E6A6l8wO0nu\ncQbShHxQEQ9vRoSOhtKBhtRItOQCekFfC0fvBsg4m9xB/ET1kN3EPPNkKTP8iw70\nFde4JlxUPC5I0SIPNgZrgt56kr2MrZsguEZbkKt9YpSzcYWjJpc=\n=OES/\n-----END PGP SIGNATURE-----", "payload": "tree f73cc32272d73d3fc4b1ac606843e2ede3ab274c\nparent abf1d94b1aff83b03c4f4d02c615e26ecf9c1484\nauthor David Tolnay <dtolnay@gmail.com> 1642219065 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1642444710 -0800\n\nReplace confusing is_sorted_by in format_args implementation\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b5ff95edbf938d96aa687c72f849d1a9ef15ff9", "html_url": "https://github.com/rust-lang/rust/commit/1b5ff95edbf938d96aa687c72f849d1a9ef15ff9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b5ff95edbf938d96aa687c72f849d1a9ef15ff9/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abf1d94b1aff83b03c4f4d02c615e26ecf9c1484", "url": "https://api.github.com/repos/rust-lang/rust/commits/abf1d94b1aff83b03c4f4d02c615e26ecf9c1484", "html_url": "https://github.com/rust-lang/rust/commit/abf1d94b1aff83b03c4f4d02c615e26ecf9c1484"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "491df287cd604bda9ec5d5ade3b67f31f2301777", "filename": "compiler/rustc_builtin_macros/src/format.rs", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1b5ff95edbf938d96aa687c72f849d1a9ef15ff9/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b5ff95edbf938d96aa687c72f849d1a9ef15ff9/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs?ref=1b5ff95edbf938d96aa687c72f849d1a9ef15ff9", "patch": "@@ -11,9 +11,9 @@ use rustc_expand::base::{self, *};\n use rustc_parse_format as parse;\n use rustc_span::symbol::{sym, Ident, Symbol};\n use rustc_span::{MultiSpan, Span};\n+use smallvec::SmallVec;\n \n use std::borrow::Cow;\n-use std::cmp::Ordering;\n use std::collections::hash_map::Entry;\n \n #[derive(PartialEq)]\n@@ -760,21 +760,23 @@ impl<'a, 'b> Context<'a, 'b> {\n         // \"{1} {0}\"), or may have multiple entries referring to the same\n         // element of original_args (\"{0} {0}\").\n         //\n-        // The following Iterator<Item = (usize, &ArgumentType)> has one item\n-        // per element of our output slice, identifying the index of which\n-        // element of original_args it's passing, and that argument's type.\n-        let fmt_arg_index_and_ty = self\n-            .arg_unique_types\n-            .iter()\n-            .enumerate()\n-            .flat_map(|(i, unique_types)| unique_types.iter().map(move |ty| (i, ty)))\n-            .chain(self.count_args.iter().map(|i| (*i, &Count)));\n+        // The following vector has one item per element of our output slice,\n+        // identifying the index of which element of original_args it's passing,\n+        // and that argument's type.\n+        let mut fmt_arg_index_and_ty = SmallVec::<[(usize, &ArgumentType); 8]>::new();\n+        for (i, unique_types) in self.arg_unique_types.iter().enumerate() {\n+            fmt_arg_index_and_ty.extend(unique_types.iter().map(|ty| (i, ty)));\n+        }\n+        fmt_arg_index_and_ty.extend(self.count_args.iter().map(|&i| (i, &Count)));\n \n         // Figure out whether there are permuted or repeated elements. If not,\n         // we can generate simpler code.\n-        let nicely_ordered = fmt_arg_index_and_ty\n-            .clone()\n-            .is_sorted_by(|(i, _), (j, _)| (i < j).then_some(Ordering::Less));\n+        //\n+        // The sequence has no indices out of order or repeated if: for every\n+        // adjacent pair of elements, the first one's index is less than the\n+        // second one's index.\n+        let nicely_ordered =\n+            fmt_arg_index_and_ty.array_windows().all(|[(i, _i_ty), (j, _j_ty)]| i < j);\n \n         // We want to emit:\n         //"}, {"sha": "6c16c285492410906a97c4f26d7fffceb9fca3bc", "filename": "compiler/rustc_builtin_macros/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1b5ff95edbf938d96aa687c72f849d1a9ef15ff9/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b5ff95edbf938d96aa687c72f849d1a9ef15ff9/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs?ref=1b5ff95edbf938d96aa687c72f849d1a9ef15ff9", "patch": "@@ -2,6 +2,7 @@\n //! injecting code into the crate before it is lowered to HIR.\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n+#![feature(array_windows)]\n #![feature(box_patterns)]\n #![feature(bool_to_option)]\n #![feature(crate_visibility_modifier)]"}]}