{"sha": "cc985748838c64b7bf4a3be635026bfffb02088c", "node_id": "C_kwDOAAsO6NoAKGNjOTg1NzQ4ODM4YzY0YjdiZjRhM2JlNjM1MDI2YmZmZmIwMjA4OGM", "commit": {"author": {"name": "Niki4tap", "email": "rombiklol2@gmail.com", "date": "2022-12-18T19:47:02Z"}, "committer": {"name": "Niki4tap", "email": "rombiklol2@gmail.com", "date": "2022-12-18T19:47:02Z"}, "message": "Fix comments, use `constant` instead of raw `constant_context`", "tree": {"sha": "2b59880d090818a48f1dc87dfad865ef0253ea87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b59880d090818a48f1dc87dfad865ef0253ea87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc985748838c64b7bf4a3be635026bfffb02088c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc985748838c64b7bf4a3be635026bfffb02088c", "html_url": "https://github.com/rust-lang/rust/commit/cc985748838c64b7bf4a3be635026bfffb02088c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc985748838c64b7bf4a3be635026bfffb02088c/comments", "author": {"login": "Niki4tap", "id": 66798058, "node_id": "MDQ6VXNlcjY2Nzk4MDU4", "avatar_url": "https://avatars.githubusercontent.com/u/66798058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Niki4tap", "html_url": "https://github.com/Niki4tap", "followers_url": "https://api.github.com/users/Niki4tap/followers", "following_url": "https://api.github.com/users/Niki4tap/following{/other_user}", "gists_url": "https://api.github.com/users/Niki4tap/gists{/gist_id}", "starred_url": "https://api.github.com/users/Niki4tap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Niki4tap/subscriptions", "organizations_url": "https://api.github.com/users/Niki4tap/orgs", "repos_url": "https://api.github.com/users/Niki4tap/repos", "events_url": "https://api.github.com/users/Niki4tap/events{/privacy}", "received_events_url": "https://api.github.com/users/Niki4tap/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Niki4tap", "id": 66798058, "node_id": "MDQ6VXNlcjY2Nzk4MDU4", "avatar_url": "https://avatars.githubusercontent.com/u/66798058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Niki4tap", "html_url": "https://github.com/Niki4tap", "followers_url": "https://api.github.com/users/Niki4tap/followers", "following_url": "https://api.github.com/users/Niki4tap/following{/other_user}", "gists_url": "https://api.github.com/users/Niki4tap/gists{/gist_id}", "starred_url": "https://api.github.com/users/Niki4tap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Niki4tap/subscriptions", "organizations_url": "https://api.github.com/users/Niki4tap/orgs", "repos_url": "https://api.github.com/users/Niki4tap/repos", "events_url": "https://api.github.com/users/Niki4tap/events{/privacy}", "received_events_url": "https://api.github.com/users/Niki4tap/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20f501a9d9f253bfe503388755bdebfe72910e0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/20f501a9d9f253bfe503388755bdebfe72910e0e", "html_url": "https://github.com/rust-lang/rust/commit/20f501a9d9f253bfe503388755bdebfe72910e0e"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "91c8c340ce28feb9cc84c473c8b0323762ab2cd2", "filename": "clippy_lints/src/fn_null_check.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc985748838c64b7bf4a3be635026bfffb02088c/clippy_lints%2Fsrc%2Ffn_null_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc985748838c64b7bf4a3be635026bfffb02088c/clippy_lints%2Fsrc%2Ffn_null_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffn_null_check.rs?ref=cc985748838c64b7bf4a3be635026bfffb02088c", "patch": "@@ -56,6 +56,8 @@ fn is_fn_ptr_cast(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n impl<'tcx> LateLintPass<'tcx> for FnNullCheck {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n         match expr.kind {\n+            // Catching:\n+            // (fn_ptr as *<const/mut> <ty>).is_null()\n             ExprKind::MethodCall(method_name, receiver, _, _)\n                 if method_name.ident.as_str() == \"is_null\" && is_fn_ptr_cast(cx, receiver) =>\n             {"}, {"sha": "410c9eaaba0f508f53beae821972fcf69c57dfba", "filename": "clippy_lints/src/transmute/transmute_null_to_fn.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cc985748838c64b7bf4a3be635026bfffb02088c/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_null_to_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc985748838c64b7bf4a3be635026bfffb02088c/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_null_to_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_null_to_fn.rs?ref=cc985748838c64b7bf4a3be635026bfffb02088c", "patch": "@@ -1,4 +1,4 @@\n-use clippy_utils::consts::{constant_context, Constant};\n+use clippy_utils::consts::{constant, Constant};\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::{is_integer_literal, is_path_diagnostic_item};\n use rustc_hir::{Expr, ExprKind};\n@@ -25,12 +25,12 @@ pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>, arg: &'t\n         return false;\n     }\n \n-    // Catching:\n-    // transmute over constants that resolve to `null`.\n-    let mut const_eval_context = constant_context(cx, cx.typeck_results());\n-\n     match arg.kind {\n-        ExprKind::Path(ref _qpath) if matches!(const_eval_context.expr(arg), Some(Constant::RawPtr(0))) => {\n+        // Catching:\n+        // transmute over constants that resolve to `null`.\n+        ExprKind::Path(ref _qpath)\n+            if matches!(constant(cx, cx.typeck_results(), arg), Some((Constant::RawPtr(0), _))) =>\n+        {\n             lint_expr(cx, expr);\n             true\n         },"}]}