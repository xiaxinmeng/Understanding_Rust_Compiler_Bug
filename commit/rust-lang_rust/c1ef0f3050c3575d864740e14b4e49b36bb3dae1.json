{"sha": "c1ef0f3050c3575d864740e14b4e49b36bb3dae1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxZWYwZjMwNTBjMzU3NWQ4NjQ3NDBlMTRiNGU0OWIzNmJiM2RhZTE=", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2021-05-06T14:19:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-06T14:19:51Z"}, "message": "Pick candidate with fewer bound vars", "tree": {"sha": "38557dd20081b6bfdaa1b1984034963a5d5f7db6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38557dd20081b6bfdaa1b1984034963a5d5f7db6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1ef0f3050c3575d864740e14b4e49b36bb3dae1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgk/sHCRBK7hj4Ov3rIwAAC9UIAIa9DGERyi3QKkGgDkopAlt4\n07qShz+Z3L3wEwSlbUR/nKzpXvZlsw0/2AE7QmJFx9iIpJEJBfB0ExlzNFwpX9D3\nzFkPoJFoNpmqjwIurg/cuA7iytlsZMdMxFzJwNOahmnIP5H5++vI2OQcJP1Rzgyu\nbUmoogVZZ9synNdBKP5RtWi2U2JlvLxyKtgvErIrNd+WOgx3RSO95Trstx0jv8eo\nX+KxKUncZakIfC+hQ9d+a7gtIuP7g3KUVJr/A1seSI70bhbbpJYUoWaW3gu8uqQX\nFwhScUJpdIXTy1pMX7HZeit3g6iz+EO40hcL6MgpAkFemtaAmUlFN7HPuSXvh+A=\n=7YU9\n-----END PGP SIGNATURE-----\n", "payload": "tree 38557dd20081b6bfdaa1b1984034963a5d5f7db6\nparent 9f0693969a0ac0a0193c7c367e3292b5315b2747\nauthor Jack Huey <31162821+jackh726@users.noreply.github.com> 1620310791 -0400\ncommitter GitHub <noreply@github.com> 1620310791 -0400\n\nPick candidate with fewer bound vars"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1ef0f3050c3575d864740e14b4e49b36bb3dae1", "html_url": "https://github.com/rust-lang/rust/commit/c1ef0f3050c3575d864740e14b4e49b36bb3dae1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1ef0f3050c3575d864740e14b4e49b36bb3dae1/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f0693969a0ac0a0193c7c367e3292b5315b2747", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f0693969a0ac0a0193c7c367e3292b5315b2747", "html_url": "https://github.com/rust-lang/rust/commit/9f0693969a0ac0a0193c7c367e3292b5315b2747"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "727285e4927a00f61fdb2157de7d3f7355df9dbf", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c1ef0f3050c3575d864740e14b4e49b36bb3dae1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1ef0f3050c3575d864740e14b4e49b36bb3dae1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=c1ef0f3050c3575d864740e14b4e49b36bb3dae1", "patch": "@@ -1366,11 +1366,11 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                     && !other.value.skip_binder().has_escaping_bound_vars();\n                 if value_same_except_bound_vars {\n                     // See issue #84398. In short, we can generate multiple ParamCandidates which are\n-                    // the same except for unused bound vars. Just pick the current one (the should\n-                    // both evaluate to the same answer). This is probably best characterized as a\n-                    // \"hack\", since we might prefer to just do our best to *not* create essentially\n-                    // duplicate candidates in the first place.\n-                    true\n+                    // the same except for unused bound vars. Just pick the one with the fewest bound vars\n+                    // or the current one if tied (they should both evaluate to the same answer). This is\n+                    // probably best characterized as a \"hack\", since we might prefer to just do our\n+                    // best to *not* create essentially duplicate candidates in the first place.\n+                    other.value.bound_vars().len() <= victim.value.bound_vars().len()\n                 } else if other.value == victim.value && victim.constness == Constness::NotConst {\n                     // Drop otherwise equivalent non-const candidates in favor of const candidates.\n                     true"}]}