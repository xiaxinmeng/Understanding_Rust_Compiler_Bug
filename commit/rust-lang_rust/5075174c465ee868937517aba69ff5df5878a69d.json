{"sha": "5075174c465ee868937517aba69ff5df5878a69d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNzUxNzRjNDY1ZWU4Njg5Mzc1MTdhYmE2OWZmNWRmNTg3OGE2OWQ=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-16T15:19:25Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-19T12:34:44Z"}, "message": "Derives often have very strict bounds", "tree": {"sha": "122534147b32576b19b048f4184b382801769f36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/122534147b32576b19b048f4184b382801769f36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5075174c465ee868937517aba69ff5df5878a69d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5075174c465ee868937517aba69ff5df5878a69d", "html_url": "https://github.com/rust-lang/rust/commit/5075174c465ee868937517aba69ff5df5878a69d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5075174c465ee868937517aba69ff5df5878a69d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c9258e604c7f5d3b7e86c34da1f067ff0a60257", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c9258e604c7f5d3b7e86c34da1f067ff0a60257", "html_url": "https://github.com/rust-lang/rust/commit/3c9258e604c7f5d3b7e86c34da1f067ff0a60257"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "fd9a1be207280f788e98f0bacfebbe861c40679d", "filename": "src/bootstrap/cache.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5075174c465ee868937517aba69ff5df5878a69d/src%2Fbootstrap%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5075174c465ee868937517aba69ff5df5878a69d/src%2Fbootstrap%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcache.rs?ref=5075174c465ee868937517aba69ff5df5878a69d", "patch": "@@ -169,12 +169,20 @@ impl Ord for Interned<String> {\n     }\n }\n \n-#[derive(Default)]\n struct TyIntern<T: Hash + Clone + Eq> {\n     items: Vec<T>,\n     set: HashMap<T, Interned<T>>,\n }\n \n+impl<T: Hash + Clone + Eq> Default for TyIntern<T> {\n+    fn default() -> Self {\n+        TyIntern {\n+            items: Vec::new(),\n+            set: Default::default(),\n+        }\n+    }\n+}\n+\n impl<T: Hash + Clone + Eq> TyIntern<T> {\n     fn intern_borrow<B>(&mut self, item: &B) -> Interned<T>\n     where"}]}