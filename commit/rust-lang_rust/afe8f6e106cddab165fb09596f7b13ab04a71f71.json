{"sha": "afe8f6e106cddab165fb09596f7b13ab04a71f71", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmZThmNmUxMDZjZGRhYjE2NWZiMDk1OTZmN2IxM2FiMDRhNzFmNzE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-29T05:36:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-29T05:36:59Z"}, "message": "auto merge of #11177 : cmr/rust/native_and_green_docs, r=alexcrichton\n\nSome people have requested this, and I think it's quite useful to have\ndocumentation for the compiler libraries. libnative and libgreen are\nself-explanatory I think.", "tree": {"sha": "00f8d937c8578ab7ddf136a3bc6a41a22108feca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00f8d937c8578ab7ddf136a3bc6a41a22108feca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afe8f6e106cddab165fb09596f7b13ab04a71f71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afe8f6e106cddab165fb09596f7b13ab04a71f71", "html_url": "https://github.com/rust-lang/rust/commit/afe8f6e106cddab165fb09596f7b13ab04a71f71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afe8f6e106cddab165fb09596f7b13ab04a71f71/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38a5edbfe6f61d202299b998cb225e4222881b2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/38a5edbfe6f61d202299b998cb225e4222881b2e", "html_url": "https://github.com/rust-lang/rust/commit/38a5edbfe6f61d202299b998cb225e4222881b2e"}, {"sha": "7b382e58b1b2cbacf8d70fa4bb759db5050a2e8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b382e58b1b2cbacf8d70fa4bb759db5050a2e8a", "html_url": "https://github.com/rust-lang/rust/commit/7b382e58b1b2cbacf8d70fa4bb759db5050a2e8a"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "add5f8c07ed8ab73b4132b0aff64c9757fa6de1b", "filename": "mk/docs.mk", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/afe8f6e106cddab165fb09596f7b13ab04a71f71/mk%2Fdocs.mk", "raw_url": "https://github.com/rust-lang/rust/raw/afe8f6e106cddab165fb09596f7b13ab04a71f71/mk%2Fdocs.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdocs.mk?ref=afe8f6e106cddab165fb09596f7b13ab04a71f71", "patch": "@@ -13,6 +13,7 @@\n ######################################################################\n \n DOCS :=\n+CDOCS :=\n DOCS_L10N :=\n \n BASE_DOC_OPTS := --from=markdown --standalone --toc --number-sections\n@@ -232,8 +233,21 @@ doc/$(1)/index.html: $$(RUSTDOC) $$(TLIB2_T_$(3)_H_$(3))/$(CFG_STDLIB_$(3))\n DOCS += doc/$(1)/index.html\n endef\n \n+define compiledoc\n+doc/$(1)/index.html: $$(RUSTDOC) $$(TLIB2_T_$(3)_H_$(3))/$(CFG_STDLIB_$(3))\n+\t@$$(call E, rustdoc: $$@)\n+\t$(Q)$(RUSTDOC) --cfg stage2 $(2)\n+\n+CDOCS += doc/$(1)/index.html\n+endef\n+\n $(eval $(call libdoc,std,$(STDLIB_CRATE),$(CFG_BUILD)))\n $(eval $(call libdoc,extra,$(EXTRALIB_CRATE),$(CFG_BUILD)))\n+$(eval $(call libdoc,native,$(LIBNATIVE_CRATE),$(CFG_BUILD)))\n+$(eval $(call libdoc,green,$(LIBGREEN_CRATE),$(CFG_BUILD)))\n+\n+$(eval $(call compiledoc,rustc,$(COMPILER_CRATE),$(CFG_BUILD)))\n+$(eval $(call compiledoc,syntax,$(LIBSYNTAX_CRATE),$(CFG_BUILD)))\n \n \n ifdef CFG_DISABLE_DOCS\n@@ -256,6 +270,7 @@ doc/version_info.html: version_info.html.template $(MKFILE_DEPS) \\\n GENERATED += doc/version.md doc/version_info.html\n \n docs: $(DOCS)\n+compiler-docs: $(CDOCS)\n \n docs-l10n: $(DOCS_L10N)\n "}, {"sha": "bd5103d767c956a86a1a6bf44f75027dbaaf817d", "filename": "src/librustdoc/clean.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/afe8f6e106cddab165fb09596f7b13ab04a71f71/src%2Flibrustdoc%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afe8f6e106cddab165fb09596f7b13ab04a71f71/src%2Flibrustdoc%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean.rs?ref=afe8f6e106cddab165fb09596f7b13ab04a71f71", "patch": "@@ -1123,6 +1123,8 @@ fn lit_to_str(lit: &ast::lit) -> ~str {\n \n fn name_from_pat(p: &ast::Pat) -> ~str {\n     use syntax::ast::*;\n+    debug!(\"Trying to get a name from pattern: {:?}\", p);\n+\n     match p.node {\n         PatWild => ~\"_\",\n         PatWildMulti => ~\"..\",\n@@ -1134,9 +1136,12 @@ fn name_from_pat(p: &ast::Pat) -> ~str {\n         PatBox(p) => name_from_pat(p),\n         PatUniq(p) => name_from_pat(p),\n         PatRegion(p) => name_from_pat(p),\n-        PatLit(..) => fail!(\"tried to get argument name from pat_lit, \\\n-                            which is not allowed in function arguments\"),\n-        PatRange(..) => fail!(\"tried to get argument name from pat_range, \\\n+        PatLit(..) => {\n+            warn!(\"tried to get argument name from PatLit, \\\n+                  which is silly in function arguments\");\n+            ~\"()\"\n+        },\n+        PatRange(..) => fail!(\"tried to get argument name from PatRange, \\\n                               which is not allowed in function arguments\"),\n         PatVec(..) => fail!(\"tried to get argument name from pat_vec, \\\n                              which is not allowed in function arguments\")"}]}