{"sha": "01de381b4883a960ec28e2929eb08334952a57c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZGUzODFiNDg4M2E5NjBlYzI4ZTI5MjllYjA4MzM0OTUyYTU3Yzg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-09-09T20:04:55Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-09-09T20:04:55Z"}, "message": "Treat loans of 'static data as extending to the end of the enclosing\nfn. Fixes #27616.", "tree": {"sha": "9b4fe2eebab28fc093db78d912d7e82661f4eeda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b4fe2eebab28fc093db78d912d7e82661f4eeda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01de381b4883a960ec28e2929eb08334952a57c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01de381b4883a960ec28e2929eb08334952a57c8", "html_url": "https://github.com/rust-lang/rust/commit/01de381b4883a960ec28e2929eb08334952a57c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01de381b4883a960ec28e2929eb08334952a57c8/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "474ad2fc72735a5f12f1b9d92bf32ffc38547e0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/474ad2fc72735a5f12f1b9d92bf32ffc38547e0a", "html_url": "https://github.com/rust-lang/rust/commit/474ad2fc72735a5f12f1b9d92bf32ffc38547e0a"}], "stats": {"total": 46, "additions": 35, "deletions": 11}, "files": [{"sha": "56cd7e5eaa8901bb891fab8752caf2668c2c5972", "filename": "src/librustc_borrowck/borrowck/gather_loans/mod.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/01de381b4883a960ec28e2929eb08334952a57c8/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01de381b4883a960ec28e2929eb08334952a57c8/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs?ref=01de381b4883a960ec28e2929eb08334952a57c8", "patch": "@@ -364,17 +364,7 @@ impl<'a, 'tcx> GatherLoanCtxt<'a, 'tcx> {\n \n                     ty::ReFree(ref fr) => fr.scope,\n \n-                    ty::ReStatic => {\n-                        // If we get here, an error must have been\n-                        // reported in\n-                        // `lifetime::guarantee_lifetime()`, because\n-                        // the only legal ways to have a borrow with a\n-                        // static lifetime should not require\n-                        // restrictions. To avoid reporting derived\n-                        // errors, we just return here without adding\n-                        // any loans.\n-                        return;\n-                    }\n+                    ty::ReStatic => self.item_ub,\n \n                     ty::ReEmpty |\n                     ty::ReLateBound(..) |"}, {"sha": "228e71025fdf4d8abe39340e9b9165104e7cf926", "filename": "src/test/borrowck-loan-of-static-data-issue-27616.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/01de381b4883a960ec28e2929eb08334952a57c8/src%2Ftest%2Fborrowck-loan-of-static-data-issue-27616.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01de381b4883a960ec28e2929eb08334952a57c8/src%2Ftest%2Fborrowck-loan-of-static-data-issue-27616.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fborrowck-loan-of-static-data-issue-27616.rs?ref=01de381b4883a960ec28e2929eb08334952a57c8", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::mem;\n+\n+fn leak<T>(mut b: Box<T>) -> &'static mut T {\n+    // isn't this supposed to be safe?\n+    let inner = &mut *b as *mut _;\n+    mem::forget(b);\n+    unsafe { &mut *inner }\n+}\n+\n+fn evil(mut s: &'static mut String)\n+{\n+    // create alias\n+    let alias: &'static mut String = s;\n+    let inner: &str = &alias;\n+    // free value\n+    *s = String::new(); //~ ERROR cannot assign\n+    let _spray = \"0wned\".to_owned();\n+    // ... and then use it\n+    println!(\"{}\", inner);\n+}\n+\n+fn main() {\n+    evil(leak(Box::new(\"hello\".to_owned())));\n+}"}]}