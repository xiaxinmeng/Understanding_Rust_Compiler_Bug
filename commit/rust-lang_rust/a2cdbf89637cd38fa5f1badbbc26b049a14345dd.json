{"sha": "a2cdbf89637cd38fa5f1badbbc26b049a14345dd", "node_id": "C_kwDOAAsO6NoAKGEyY2RiZjg5NjM3Y2QzOGZhNWYxYmFkYmJjMjZiMDQ5YTE0MzQ1ZGQ", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-08-20T22:06:41Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-09-04T13:27:28Z"}, "message": "Make code worling w/ pointers in `library/std/src/sys/sgx/abi/usercalls/alloc.rs` nicer\n\n- Use `.addr()` instead of `as`-cast\n- Use `add` instead of `offset` and remove some `as isize` casts by doing that\n- Remove some casts", "tree": {"sha": "235dfc87cb218537a11839d5fbaa2cdfc785dcce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/235dfc87cb218537a11839d5fbaa2cdfc785dcce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2cdbf89637cd38fa5f1badbbc26b049a14345dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2cdbf89637cd38fa5f1badbbc26b049a14345dd", "html_url": "https://github.com/rust-lang/rust/commit/a2cdbf89637cd38fa5f1badbbc26b049a14345dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2cdbf89637cd38fa5f1badbbc26b049a14345dd/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b11bf65e4aaa125952b6479a63f36e9e83efc32c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b11bf65e4aaa125952b6479a63f36e9e83efc32c", "html_url": "https://github.com/rust-lang/rust/commit/b11bf65e4aaa125952b6479a63f36e9e83efc32c"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "0d934318c22a45a2db6269ddfc44907d6bc99a24", "filename": "library/std/src/sys/sgx/abi/usercalls/alloc.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a2cdbf89637cd38fa5f1badbbc26b049a14345dd/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fabi%2Fusercalls%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2cdbf89637cd38fa5f1badbbc26b049a14345dd/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fabi%2Fusercalls%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fabi%2Fusercalls%2Falloc.rs?ref=a2cdbf89637cd38fa5f1badbbc26b049a14345dd", "patch": "@@ -316,9 +316,9 @@ where\n //   | small1 | Chunk smaller than 8 bytes\n //   +--------+\n fn region_as_aligned_chunks(ptr: *const u8, len: usize) -> (usize, usize, usize) {\n-    let small0_size = if ptr as usize % 8 == 0 { 0 } else { 8 - ptr as usize % 8 };\n-    let small1_size = (len - small0_size as usize) % 8;\n-    let big_size = len - small0_size as usize - small1_size as usize;\n+    let small0_size = if ptr.is_aligned_to(8) { 0 } else { 8 - ptr.addr() % 8 };\n+    let small1_size = (len - small0_size) % 8;\n+    let big_size = len - small0_size - small1_size;\n \n     (small0_size, big_size, small1_size)\n }\n@@ -364,8 +364,8 @@ pub(crate) unsafe fn copy_to_userspace(src: *const u8, dst: *mut u8, len: usize)\n                     mfence\n                     lfence\n                     \",\n-                    val = in(reg_byte) *src.offset(off as isize),\n-                    dst = in(reg) dst.offset(off as isize),\n+                    val = in(reg_byte) *src.add(off),\n+                    dst = in(reg) dst.add(off),\n                     seg_sel = in(reg) &mut seg_sel,\n                     options(nostack, att_syntax)\n                 );\n@@ -378,8 +378,8 @@ pub(crate) unsafe fn copy_to_userspace(src: *const u8, dst: *mut u8, len: usize)\n     assert!(is_enclave_range(src, len));\n     assert!(is_user_range(dst, len));\n     assert!(len < isize::MAX as usize);\n-    assert!(!(src as usize).overflowing_add(len).1);\n-    assert!(!(dst as usize).overflowing_add(len).1);\n+    assert!(!src.addr().overflowing_add(len).1);\n+    assert!(!dst.addr().overflowing_add(len).1);\n \n     if len < 8 {\n         // Can't align on 8 byte boundary: copy safely byte per byte\n@@ -404,17 +404,17 @@ pub(crate) unsafe fn copy_to_userspace(src: *const u8, dst: *mut u8, len: usize)\n \n         unsafe {\n             // Copy small0\n-            copy_bytewise_to_userspace(src, dst, small0_size as _);\n+            copy_bytewise_to_userspace(src, dst, small0_size);\n \n             // Copy big\n-            let big_src = src.offset(small0_size as _);\n-            let big_dst = dst.offset(small0_size as _);\n-            copy_quadwords(big_src as _, big_dst, big_size);\n+            let big_src = src.add(small0_size);\n+            let big_dst = dst.add(small0_size);\n+            copy_quadwords(big_src, big_dst, big_size);\n \n             // Copy small1\n-            let small1_src = src.offset(big_size as isize + small0_size as isize);\n-            let small1_dst = dst.offset(big_size as isize + small0_size as isize);\n-            copy_bytewise_to_userspace(small1_src, small1_dst, small1_size as _);\n+            let small1_src = src.add(big_size + small0_size);\n+            let small1_dst = dst.add(big_size + small0_size);\n+            copy_bytewise_to_userspace(small1_src, small1_dst, small1_size);\n         }\n     }\n }"}]}