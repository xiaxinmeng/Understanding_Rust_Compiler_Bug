{"sha": "de0feb30bd54fe26e1bb2a0a75ea519708ab8f76", "node_id": "C_kwDOAAsO6NoAKGRlMGZlYjMwYmQ1NGZlMjZlMWJiMmEwYTc1ZWE1MTk3MDhhYjhmNzY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-11T20:48:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-11T20:48:52Z"}, "message": "Rollup merge of #93910 - rosehuds:master, r=cjgillot\n\nfix mention of moved function in `rustc_hir` docs\n\nThe function was moved from `Crate` to `Map` in db9fea508a6d but these docs weren't updated", "tree": {"sha": "1fbea76d4a158f00d9331e69dda314c2b0240782", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fbea76d4a158f00d9331e69dda314c2b0240782"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de0feb30bd54fe26e1bb2a0a75ea519708ab8f76", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiBsu1CRBK7hj4Ov3rIwAAyj8IACqas+o/q9BR1jOs9DT8iEBi\n6jDWYoYbMfbAnBYk2Aa9Ss9YLeejIMKTEBAqQT3n4KZfql62TUiQ4RZzIYILJQjr\nV3nzCLYQKBHGOKkzltHTLSy3m5sryxtFtX8k91GNfdf1QLNKBWmAIOx0pSr3qBfP\nGeEF/3TwyeU3GfzezCrVOxfe7CN6TumT/icHwCXvJMGHsMpHlXh355NFyG9j02S+\nNSPTtcmSX7RLwiZZ7HEvAZNghcOlgJYUc/NLqOx4hWHn6bFHLAHCZteIBOI2xul4\ncy4O6bHUDvp0yZvhcNLXXepkQkT2+H1aqXa3IzuSMZCgzttEnpyv+vhdl3XMk50=\n=8ykq\n-----END PGP SIGNATURE-----\n", "payload": "tree 1fbea76d4a158f00d9331e69dda314c2b0240782\nparent 0986b2d0e3c5f49de2a318b7ff441be664b8d51c\nparent 45dc8ebb7c860939e045cfb758968c014fdeb96d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1644612532 +0100\ncommitter GitHub <noreply@github.com> 1644612532 +0100\n\nRollup merge of #93910 - rosehuds:master, r=cjgillot\n\nfix mention of moved function in `rustc_hir` docs\n\nThe function was moved from `Crate` to `Map` in db9fea508a6d but these docs weren't updated\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de0feb30bd54fe26e1bb2a0a75ea519708ab8f76", "html_url": "https://github.com/rust-lang/rust/commit/de0feb30bd54fe26e1bb2a0a75ea519708ab8f76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de0feb30bd54fe26e1bb2a0a75ea519708ab8f76/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0986b2d0e3c5f49de2a318b7ff441be664b8d51c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0986b2d0e3c5f49de2a318b7ff441be664b8d51c", "html_url": "https://github.com/rust-lang/rust/commit/0986b2d0e3c5f49de2a318b7ff441be664b8d51c"}, {"sha": "45dc8ebb7c860939e045cfb758968c014fdeb96d", "url": "https://api.github.com/repos/rust-lang/rust/commits/45dc8ebb7c860939e045cfb758968c014fdeb96d", "html_url": "https://github.com/rust-lang/rust/commit/45dc8ebb7c860939e045cfb758968c014fdeb96d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "db70002c2d66ac97d99d57ebb2f6da49403e6350", "filename": "compiler/rustc_hir/src/itemlikevisit.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/de0feb30bd54fe26e1bb2a0a75ea519708ab8f76/compiler%2Frustc_hir%2Fsrc%2Fitemlikevisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de0feb30bd54fe26e1bb2a0a75ea519708ab8f76/compiler%2Frustc_hir%2Fsrc%2Fitemlikevisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fitemlikevisit.rs?ref=de0feb30bd54fe26e1bb2a0a75ea519708ab8f76", "patch": "@@ -8,7 +8,7 @@ use super::{ForeignItem, ImplItem, Item, TraitItem};\n ///\n /// 1. **Shallow visit**: Get a simple callback for every item (or item-like thing) in the HIR.\n ///    - Example: find all items with a `#[foo]` attribute on them.\n-///    - How: Implement `ItemLikeVisitor` and call `tcx.hir().krate().visit_all_item_likes()`.\n+///    - How: Implement `ItemLikeVisitor` and call `tcx.hir().visit_all_item_likes()`.\n ///    - Pro: Efficient; just walks the lists of item-like things, not the nodes themselves.\n ///    - Con: Don't get information about nesting\n ///    - Con: Don't have methods for specific bits of HIR, like \"on\n@@ -19,9 +19,9 @@ use super::{ForeignItem, ImplItem, Item, TraitItem};\n ///    - Example: Examine each expression to look for its type and do some check or other.\n ///    - How: Implement `intravisit::Visitor` and override the `nested_visit_map()` method\n ///      to return `NestedVisitorMap::OnlyBodies` and use\n-///      `tcx.hir().krate().visit_all_item_likes(&mut visitor.as_deep_visitor())`. Within\n-///      your `intravisit::Visitor` impl, implement methods like `visit_expr()` (don't forget\n-///      to invoke `intravisit::walk_expr()` to keep walking the subparts).\n+///      `tcx.hir().visit_all_item_likes(&mut visitor.as_deep_visitor())`. Within your\n+///      `intravisit::Visitor` impl, implement methods like `visit_expr()` (don't forget to invoke\n+///      `intravisit::walk_expr()` to keep walking the subparts).\n ///    - Pro: Visitor methods for any kind of HIR node, not just item-like things.\n ///    - Pro: Integrates well into dependency tracking.\n ///    - Con: Don't get information about nesting between items"}]}