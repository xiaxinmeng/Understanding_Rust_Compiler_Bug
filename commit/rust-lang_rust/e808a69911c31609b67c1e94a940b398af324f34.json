{"sha": "e808a69911c31609b67c1e94a940b398af324f34", "node_id": "C_kwDOAAsO6NoAKGU4MDhhNjk5MTFjMzE2MDliNjdjMWU5NGE5NDBiMzk4YWYzMjRmMzQ", "commit": {"author": {"name": "Rageking8", "email": "tomleetyt@gmail.com", "date": "2023-01-03T07:48:16Z"}, "committer": {"name": "Rageking8", "email": "tomleetyt@gmail.com", "date": "2023-01-03T07:48:16Z"}, "message": "fix dupe word typos", "tree": {"sha": "115bee25e742e3b347c292bf65bb0e165f27cf3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/115bee25e742e3b347c292bf65bb0e165f27cf3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e808a69911c31609b67c1e94a940b398af324f34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e808a69911c31609b67c1e94a940b398af324f34", "html_url": "https://github.com/rust-lang/rust/commit/e808a69911c31609b67c1e94a940b398af324f34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e808a69911c31609b67c1e94a940b398af324f34/comments", "author": {"login": "Rageking8", "id": 106309953, "node_id": "U_kgDOBlYpQQ", "avatar_url": "https://avatars.githubusercontent.com/u/106309953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rageking8", "html_url": "https://github.com/Rageking8", "followers_url": "https://api.github.com/users/Rageking8/followers", "following_url": "https://api.github.com/users/Rageking8/following{/other_user}", "gists_url": "https://api.github.com/users/Rageking8/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rageking8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rageking8/subscriptions", "organizations_url": "https://api.github.com/users/Rageking8/orgs", "repos_url": "https://api.github.com/users/Rageking8/repos", "events_url": "https://api.github.com/users/Rageking8/events{/privacy}", "received_events_url": "https://api.github.com/users/Rageking8/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Rageking8", "id": 106309953, "node_id": "U_kgDOBlYpQQ", "avatar_url": "https://avatars.githubusercontent.com/u/106309953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rageking8", "html_url": "https://github.com/Rageking8", "followers_url": "https://api.github.com/users/Rageking8/followers", "following_url": "https://api.github.com/users/Rageking8/following{/other_user}", "gists_url": "https://api.github.com/users/Rageking8/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rageking8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rageking8/subscriptions", "organizations_url": "https://api.github.com/users/Rageking8/orgs", "repos_url": "https://api.github.com/users/Rageking8/repos", "events_url": "https://api.github.com/users/Rageking8/events{/privacy}", "received_events_url": "https://api.github.com/users/Rageking8/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "481c9bad80754670197cf28d8c6d43825d4404f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/481c9bad80754670197cf28d8c6d43825d4404f0", "html_url": "https://github.com/rust-lang/rust/commit/481c9bad80754670197cf28d8c6d43825d4404f0"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "10d8db5393da94bb6cd64bb73a2f884c6194488d", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e808a69911c31609b67c1e94a940b398af324f34/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e808a69911c31609b67c1e94a940b398af324f34/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=e808a69911c31609b67c1e94a940b398af324f34", "patch": "@@ -1392,7 +1392,7 @@ declare_lint! {\n     ///\n     /// The attribute must be used in conjunction with the\n     /// [`closure_track_caller` feature flag]. Otherwise, the `#[track_caller]`\n-    /// annotation will function as as no-op.\n+    /// annotation will function as a no-op.\n     ///\n     /// [`closure_track_caller` feature flag]: https://doc.rust-lang.org/beta/unstable-book/language-features/closure-track-caller.html\n     UNGATED_ASYNC_FN_TRACK_CALLER,"}, {"sha": "c18abaef8e2565e450bffb1959adfdf5dde7532b", "filename": "compiler/rustc_lint/src/early.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e808a69911c31609b67c1e94a940b398af324f34/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e808a69911c31609b67c1e94a940b398af324f34/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fearly.rs?ref=e808a69911c31609b67c1e94a940b398af324f34", "patch": "@@ -29,7 +29,7 @@ macro_rules! lint_callback { ($cx:expr, $f:ident, $($args:expr),*) => ({\n     $cx.pass.$f(&$cx.context, $($args),*);\n }) }\n \n-/// Implements the AST traversal for early lint passes. `T` provides the the\n+/// Implements the AST traversal for early lint passes. `T` provides the\n /// `check_*` methods.\n pub struct EarlyContextAndPass<'a, T: EarlyLintPass> {\n     context: EarlyContext<'a>,"}, {"sha": "b2a2656746eec8b45849ec4faf9ce905ef15ec69", "filename": "compiler/rustc_lint/src/late.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e808a69911c31609b67c1e94a940b398af324f34/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e808a69911c31609b67c1e94a940b398af324f34/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flate.rs?ref=e808a69911c31609b67c1e94a940b398af324f34", "patch": "@@ -40,7 +40,7 @@ macro_rules! lint_callback { ($cx:expr, $f:ident, $($args:expr),*) => ({\n     $cx.pass.$f(&$cx.context, $($args),*);\n }) }\n \n-/// Implements the AST traversal for late lint passes. `T` provides the the\n+/// Implements the AST traversal for late lint passes. `T` provides the\n /// `check_*` methods.\n pub struct LateContextAndPass<'tcx, T: LateLintPass<'tcx>> {\n     context: LateContext<'tcx>,"}, {"sha": "7db470359672f834fdaff1017f3a496a5979e28f", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e808a69911c31609b67c1e94a940b398af324f34/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e808a69911c31609b67c1e94a940b398af324f34/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=e808a69911c31609b67c1e94a940b398af324f34", "patch": "@@ -410,7 +410,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n \n     /// This method will create a new module and push it onto the \"modules stack\" then call\n     /// `visit_mod_contents`. Once done, it'll remove it from the \"modules stack\" and instead\n-    /// add into into the list of modules of the current module.\n+    /// add into the list of modules of the current module.\n     fn enter_mod(&mut self, id: hir::HirId, m: &'tcx hir::Mod<'tcx>, name: Symbol) {\n         self.modules.push(Module::new(name, id, m.spans.inner_span));\n "}]}