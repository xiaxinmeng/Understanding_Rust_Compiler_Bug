{"sha": "fdffaf740bf15dbcedd630b0ac6bd81293202bc8", "node_id": "C_kwDOAAsO6NoAKGZkZmZhZjc0MGJmMTVkYmNlZGQ2MzBiMGFjNmJkODEyOTMyMDJiYzg", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-08T21:17:44Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-08T21:17:44Z"}, "message": "ui_test: require colon after command", "tree": {"sha": "13c51b4937ffc2a1a5bf5da85ba9f5508d535566", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13c51b4937ffc2a1a5bf5da85ba9f5508d535566"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdffaf740bf15dbcedd630b0ac6bd81293202bc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdffaf740bf15dbcedd630b0ac6bd81293202bc8", "html_url": "https://github.com/rust-lang/rust/commit/fdffaf740bf15dbcedd630b0ac6bd81293202bc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdffaf740bf15dbcedd630b0ac6bd81293202bc8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a6a812794f6c2ff46a5a6d1a2991ecc5903b10c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a6a812794f6c2ff46a5a6d1a2991ecc5903b10c", "html_url": "https://github.com/rust-lang/rust/commit/7a6a812794f6c2ff46a5a6d1a2991ecc5903b10c"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "12f0864d9ab8d591da79d83dcb7e0fc4d74aeff6", "filename": "ui_test/src/comments.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fdffaf740bf15dbcedd630b0ac6bd81293202bc8/ui_test%2Fsrc%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdffaf740bf15dbcedd630b0ac6bd81293202bc8/ui_test%2Fsrc%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ui_test%2Fsrc%2Fcomments.rs?ref=fdffaf740bf15dbcedd630b0ac6bd81293202bc8", "patch": "@@ -117,12 +117,8 @@ impl Comments {\n                     let next = args\n                         .next()\n                         .expect(\"the `position` above guarantees that there is at least one char\");\n-                    // FIXME: this replicates the existing flexibility in our syntax. Consider requiring the colon.\n-                    let args = match next {\n-                        ':' | ' ' => args.as_str(),\n-                        _ => bail!(\"expected space or `:`, got `{next}`\"),\n-                    };\n-                    (command, args.trim())\n+                    ensure!(next == ':', \"test command must be followed by : (or end the line)\");\n+                    (command, args.as_str().trim())\n                 }\n             };\n \n@@ -188,16 +184,19 @@ impl Comments {\n                 self.error_pattern = Some((args.trim().to_string(), l));\n             }\n             \"stderr-per-bitwidth\" => {\n+                // args are ignored (can be sue as comment)\n                 ensure!(!self.stderr_per_bitwidth, \"cannot specifiy stderr-per-bitwidth twice\");\n                 self.stderr_per_bitwidth = true;\n             }\n             command => {\n                 if let Some(s) = command.strip_prefix(\"ignore-\") {\n+                    // args are ignored (can be sue as comment)\n                     self.ignore.push(Condition::parse(s));\n                     return Ok(());\n                 }\n \n                 if let Some(s) = command.strip_prefix(\"only-\") {\n+                    // args are ignored (can be sue as comment)\n                     self.only.push(Condition::parse(s));\n                     return Ok(());\n                 }"}, {"sha": "096cc8eab96574304204184d1b61d86b25044bf8", "filename": "ui_test/src/comments/tests.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fdffaf740bf15dbcedd630b0ac6bd81293202bc8/ui_test%2Fsrc%2Fcomments%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdffaf740bf15dbcedd630b0ac6bd81293202bc8/ui_test%2Fsrc%2Fcomments%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ui_test%2Fsrc%2Fcomments%2Ftests.rs?ref=fdffaf740bf15dbcedd630b0ac6bd81293202bc8", "patch": "@@ -53,3 +53,17 @@ use std::mem;\n         Err(_) => Ok(()),\n     }\n }\n+\n+#[test]\n+fn missing_colon_fail() -> Result<()> {\n+    init();\n+    let s = r\"\n+//@stderr-per-bitwidth hello\n+use std::mem;\n+\n+    \";\n+    match Comments::parse(Path::new(\"<dummy>\"), s) {\n+        Ok(_) => bail!(\"expected parsing to fail\"),\n+        Err(_) => Ok(()),\n+    }\n+}"}]}