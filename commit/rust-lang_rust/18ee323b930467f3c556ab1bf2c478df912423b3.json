{"sha": "18ee323b930467f3c556ab1bf2c478df912423b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4ZWUzMjNiOTMwNDY3ZjNjNTU2YWIxYmYyYzQ3OGRmOTEyNDIzYjM=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-23T01:41:43Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-23T19:56:41Z"}, "message": "Don't repeat `hir::def::DefKind` so much", "tree": {"sha": "763680d61e35a5803a3997719a08a8fbd1b5e28c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/763680d61e35a5803a3997719a08a8fbd1b5e28c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18ee323b930467f3c556ab1bf2c478df912423b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18ee323b930467f3c556ab1bf2c478df912423b3", "html_url": "https://github.com/rust-lang/rust/commit/18ee323b930467f3c556ab1bf2c478df912423b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18ee323b930467f3c556ab1bf2c478df912423b3/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fd29bf6a192a854fbf6e5fa400f5bf1627e51d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fd29bf6a192a854fbf6e5fa400f5bf1627e51d1", "html_url": "https://github.com/rust-lang/rust/commit/8fd29bf6a192a854fbf6e5fa400f5bf1627e51d1"}], "stats": {"total": 66, "additions": 33, "deletions": 33}, "files": [{"sha": "4fec38d817e1c613e3e8e6cb181619e7dcef4bdf", "filename": "src/librustdoc/formats/item_type.rs", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/18ee323b930467f3c556ab1bf2c478df912423b3/src%2Flibrustdoc%2Fformats%2Fitem_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18ee323b930467f3c556ab1bf2c478df912423b3/src%2Flibrustdoc%2Fformats%2Fitem_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fformats%2Fitem_type.rs?ref=18ee323b930467f3c556ab1bf2c478df912423b3", "patch": "@@ -4,7 +4,7 @@ use std::fmt;\n \n use serde::{Serialize, Serializer};\n \n-use rustc_hir as hir;\n+use rustc_hir::def::DefKind;\n use rustc_span::hygiene::MacroKind;\n \n use crate::clean;\n@@ -103,39 +103,39 @@ impl<'a> From<&'a clean::Item> for ItemType {\n     }\n }\n \n-impl From<hir::def::DefKind> for ItemType {\n-    fn from(other: hir::def::DefKind) -> Self {\n+impl From<DefKind> for ItemType {\n+    fn from(other: DefKind) -> Self {\n         match other {\n-            hir::def::DefKind::Enum => Self::Enum,\n-            hir::def::DefKind::Fn => Self::Function,\n-            hir::def::DefKind::Mod => Self::Module,\n-            hir::def::DefKind::Const => Self::Constant,\n-            hir::def::DefKind::Static => Self::Static,\n-            hir::def::DefKind::Struct => Self::Struct,\n-            hir::def::DefKind::Union => Self::Union,\n-            hir::def::DefKind::Trait => Self::Trait,\n-            hir::def::DefKind::TyAlias => Self::Typedef,\n-            hir::def::DefKind::TraitAlias => Self::TraitAlias,\n-            hir::def::DefKind::Macro(_) => Self::Macro,\n-            hir::def::DefKind::ForeignTy\n-            | hir::def::DefKind::Variant\n-            | hir::def::DefKind::AssocTy\n-            | hir::def::DefKind::TyParam\n-            | hir::def::DefKind::ConstParam\n-            | hir::def::DefKind::Ctor(..)\n-            | hir::def::DefKind::AssocFn\n-            | hir::def::DefKind::AssocConst\n-            | hir::def::DefKind::ExternCrate\n-            | hir::def::DefKind::Use\n-            | hir::def::DefKind::ForeignMod\n-            | hir::def::DefKind::AnonConst\n-            | hir::def::DefKind::OpaqueTy\n-            | hir::def::DefKind::Field\n-            | hir::def::DefKind::LifetimeParam\n-            | hir::def::DefKind::GlobalAsm\n-            | hir::def::DefKind::Impl\n-            | hir::def::DefKind::Closure\n-            | hir::def::DefKind::Generator => Self::ForeignType,\n+            DefKind::Enum => Self::Enum,\n+            DefKind::Fn => Self::Function,\n+            DefKind::Mod => Self::Module,\n+            DefKind::Const => Self::Constant,\n+            DefKind::Static => Self::Static,\n+            DefKind::Struct => Self::Struct,\n+            DefKind::Union => Self::Union,\n+            DefKind::Trait => Self::Trait,\n+            DefKind::TyAlias => Self::Typedef,\n+            DefKind::TraitAlias => Self::TraitAlias,\n+            DefKind::Macro(_) => Self::Macro,\n+            DefKind::ForeignTy\n+            | DefKind::Variant\n+            | DefKind::AssocTy\n+            | DefKind::TyParam\n+            | DefKind::ConstParam\n+            | DefKind::Ctor(..)\n+            | DefKind::AssocFn\n+            | DefKind::AssocConst\n+            | DefKind::ExternCrate\n+            | DefKind::Use\n+            | DefKind::ForeignMod\n+            | DefKind::AnonConst\n+            | DefKind::OpaqueTy\n+            | DefKind::Field\n+            | DefKind::LifetimeParam\n+            | DefKind::GlobalAsm\n+            | DefKind::Impl\n+            | DefKind::Closure\n+            | DefKind::Generator => Self::ForeignType,\n         }\n     }\n }"}]}