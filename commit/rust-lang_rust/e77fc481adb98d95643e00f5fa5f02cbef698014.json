{"sha": "e77fc481adb98d95643e00f5fa5f02cbef698014", "node_id": "C_kwDOAAsO6NoAKGU3N2ZjNDgxYWRiOThkOTU2NDNlMDBmNWZhNWYwMmNiZWY2OTgwMTQ", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-10-19T12:16:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-19T12:16:30Z"}, "message": "Merge #10587\n\n10587: fix: Fix `add_missing_match_arm` panicking on failed upmapping r=Veykril a=Veykril\n\nCloses https://github.com/rust-analyzer/rust-analyzer/issues/10580#issuecomment-946170475\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "4c8a04cc7b5d65e844f4f7c68c8fb78488fc4aad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c8a04cc7b5d65e844f4f7c68c8fb78488fc4aad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e77fc481adb98d95643e00f5fa5f02cbef698014", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhbrceCRBK7hj4Ov3rIwAAvUsIADT7Ki+R2kP4zafdBom4Zmz3\nBvDf4AGDoRcLWTiB9tHKkqJsUqW+eB0c1kEP6ZrrfHw54JnskQMNq9yE2xpIIakS\nZ035ovkH664iJwwDeUIKMZ+/jmtcSNtxWdqDSFYTuPloMPIWR9/eALO+H8eCOCBr\nygqal3D9x+AeeGNkzBMpprz0es2Fd5ojBor70bcETmhnEb8pDQA/awgK3QIVDT90\nYnD84dBVpXrYsNib4o+i97RPYzVToIyEJPixUo8C8ZVPduNchT7Jpi0HyEOPeqzw\n9gRsgjFUp0KpbuB9l0kyb1takhKQiGXLzOsQo6mXRVHKLWvWWeL4oIDZtRo6sMs=\n=DPqz\n-----END PGP SIGNATURE-----\n", "payload": "tree 4c8a04cc7b5d65e844f4f7c68c8fb78488fc4aad\nparent 0e4c3b2c2be83251ab0f1ffba74780e05e77c2ff\nparent 7e1d6e526512407b259b9bdd2622c4cc4f46972d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1634645790 +0000\ncommitter GitHub <noreply@github.com> 1634645790 +0000\n\nMerge #10587\n\n10587: fix: Fix `add_missing_match_arm` panicking on failed upmapping r=Veykril a=Veykril\n\nCloses https://github.com/rust-analyzer/rust-analyzer/issues/10580#issuecomment-946170475\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e77fc481adb98d95643e00f5fa5f02cbef698014", "html_url": "https://github.com/rust-lang/rust/commit/e77fc481adb98d95643e00f5fa5f02cbef698014", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e77fc481adb98d95643e00f5fa5f02cbef698014/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e4c3b2c2be83251ab0f1ffba74780e05e77c2ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e4c3b2c2be83251ab0f1ffba74780e05e77c2ff", "html_url": "https://github.com/rust-lang/rust/commit/0e4c3b2c2be83251ab0f1ffba74780e05e77c2ff"}, {"sha": "7e1d6e526512407b259b9bdd2622c4cc4f46972d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e1d6e526512407b259b9bdd2622c4cc4f46972d", "html_url": "https://github.com/rust-lang/rust/commit/7e1d6e526512407b259b9bdd2622c4cc4f46972d"}], "stats": {"total": 19, "additions": 7, "deletions": 12}, "files": [{"sha": "463fb1c914a7d494ff7a1b5f419ec118058fd749", "filename": "crates/ide_assists/src/handlers/add_missing_match_arms.rs", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e77fc481adb98d95643e00f5fa5f02cbef698014/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_missing_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77fc481adb98d95643e00f5fa5f02cbef698014/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_missing_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_missing_match_arms.rs?ref=e77fc481adb98d95643e00f5fa5f02cbef698014", "patch": "@@ -6,7 +6,6 @@ use ide_db::helpers::{mod_path_to_ast, FamousDefs};\n use ide_db::RootDatabase;\n use itertools::Itertools;\n use syntax::ast::{self, make, AstNode, HasName, MatchArm, MatchArmList, MatchExpr, Pat};\n-use syntax::TextRange;\n \n use crate::{\n     utils::{self, render_snippet, Cursor},\n@@ -40,21 +39,15 @@ use crate::{\n pub(crate) fn add_missing_match_arms(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n     let match_expr = ctx.find_node_at_offset_with_descend::<ast::MatchExpr>()?;\n     let match_arm_list = match_expr.match_arm_list()?;\n-    let target_range: TextRange;\n+    let target_range = ctx.sema.original_range(match_expr.syntax()).range;\n \n     if let None = cursor_at_trivial_match_arm_list(&ctx, &match_expr, &match_arm_list) {\n-        target_range = TextRange::new(\n-            ctx.sema.original_range(match_expr.syntax()).range.start(),\n-            ctx.sema.original_range(match_arm_list.syntax()).range.start(),\n-        );\n-\n-        let cursor_in_range = target_range.contains_range(ctx.selection_trimmed());\n-        if !cursor_in_range {\n+        let arm_list_range = ctx.sema.original_range(match_arm_list.syntax()).range;\n+        let cursor_in_range = arm_list_range.contains_range(ctx.selection_trimmed());\n+        if cursor_in_range {\n             cov_mark::hit!(not_applicable_outside_of_range_right);\n             return None;\n         }\n-    } else {\n-        target_range = ctx.sema.original_range(match_expr.syntax()).range;\n     }\n \n     let expr = match_expr.expr()?;\n@@ -953,7 +946,9 @@ fn main() {\n     }\n }\n \"#,\n-            \"match E::X \",\n+            \"match E::X {\n+        E::X => {}\n+    }\",\n         );\n     }\n "}]}