{"sha": "6ca0e5ed39dd9ff4661a0c99c15592da171bffcf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjYTBlNWVkMzlkZDlmZjQ2NjFhMGM5OWMxNTU5MmRhMTcxYmZmY2Y=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-06-11T14:53:32Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-07-18T09:54:39Z"}, "message": "Add --nocapture option to rustdoc", "tree": {"sha": "629687585e7ecf40ac4f1d721a1160ef4c0abd7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/629687585e7ecf40ac4f1d721a1160ef4c0abd7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ca0e5ed39dd9ff4661a0c99c15592da171bffcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ca0e5ed39dd9ff4661a0c99c15592da171bffcf", "html_url": "https://github.com/rust-lang/rust/commit/6ca0e5ed39dd9ff4661a0c99c15592da171bffcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ca0e5ed39dd9ff4661a0c99c15592da171bffcf/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68511b574ffe019a5cb3e9fa92605f80d39167bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/68511b574ffe019a5cb3e9fa92605f80d39167bc", "html_url": "https://github.com/rust-lang/rust/commit/68511b574ffe019a5cb3e9fa92605f80d39167bc"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "adbdde0d92cd6034fe7ea78c33dc7dec546757c2", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6ca0e5ed39dd9ff4661a0c99c15592da171bffcf/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ca0e5ed39dd9ff4661a0c99c15592da171bffcf/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=6ca0e5ed39dd9ff4661a0c99c15592da171bffcf", "patch": "@@ -156,6 +156,8 @@ crate struct Options {\n     crate run_check: bool,\n     /// Whether doctests should emit unused externs\n     crate json_unused_externs: bool,\n+    /// Whether to skip capturing stdout and stderr of tests.\n+    crate nocapture: bool,\n }\n \n impl fmt::Debug for Options {\n@@ -199,6 +201,7 @@ impl fmt::Debug for Options {\n             .field(\"enable-per-target-ignores\", &self.enable_per_target_ignores)\n             .field(\"run_check\", &self.run_check)\n             .field(\"no_run\", &self.no_run)\n+            .field(\"nocapture\", &self.nocapture)\n             .finish()\n     }\n }\n@@ -627,6 +630,7 @@ impl Options {\n         let run_check = matches.opt_present(\"check\");\n         let generate_redirect_map = matches.opt_present(\"generate-redirect-map\");\n         let show_type_layout = matches.opt_present(\"show-type-layout\");\n+        let nocapture = matches.opt_present(\"nocapture\");\n \n         let (lint_opts, describe_lints, lint_cap, _) =\n             get_cmd_lint_options(matches, error_format, &debugging_opts);\n@@ -665,6 +669,7 @@ impl Options {\n             test_builder,\n             run_check,\n             no_run,\n+            nocapture,\n             render_options: RenderOptions {\n                 output,\n                 external_html,"}, {"sha": "a9126049b58d4252193050e6148f95fad0ed78fa", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6ca0e5ed39dd9ff4661a0c99c15592da171bffcf/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ca0e5ed39dd9ff4661a0c99c15592da171bffcf/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=6ca0e5ed39dd9ff4661a0c99c15592da171bffcf", "patch": "@@ -107,6 +107,7 @@ crate fn run(options: Options) -> Result<(), ErrorReported> {\n \n     let mut test_args = options.test_args.clone();\n     let display_warnings = options.display_warnings;\n+    let nocapture = options.nocapture;\n     let externs = options.externs.clone();\n     let json_unused_externs = options.json_unused_externs;\n \n@@ -166,6 +167,9 @@ crate fn run(options: Options) -> Result<(), ErrorReported> {\n     };\n \n     test_args.insert(0, \"rustdoctest\".to_string());\n+    if nocapture {\n+        test_args.push(\"--nocapture\".to_string());\n+    }\n \n     test::test_main(&test_args, tests, Some(test::Options::new().display_output(display_warnings)));\n \n@@ -463,6 +467,9 @@ fn run_test(\n                 return Err(TestFailure::UnexpectedRunPass);\n             } else if !should_panic && !out.status.success() {\n                 return Err(TestFailure::ExecutionFailure(out));\n+            } else if options.nocapture {\n+                io::stdout().write_all(&out.stdout).expect(\"failed to write stdout\");\n+                io::stderr().write_all(&out.stderr).expect(\"failed to write stderr\");\n             }\n         }\n     }"}, {"sha": "19deaa11388d8601d012b03a6299d3ba44939506", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6ca0e5ed39dd9ff4661a0c99c15592da171bffcf/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ca0e5ed39dd9ff4661a0c99c15592da171bffcf/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=6ca0e5ed39dd9ff4661a0c99c15592da171bffcf", "patch": "@@ -604,6 +604,9 @@ fn opts() -> Vec<RustcOptGroup> {\n         unstable(\"show-type-layout\", |o| {\n             o.optflagmulti(\"\", \"show-type-layout\", \"Include the memory layout of types in the docs\")\n         }),\n+        unstable(\"nocapture\", |o| {\n+            o.optflag(\"\", \"nocapture\", \"Don't capture stdout and stderr of tests\")\n+        }),\n     ]\n }\n "}, {"sha": "6c8b95c04c9e4be674830bf15916feed5b805e3c", "filename": "src/librustdoc/markdown.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6ca0e5ed39dd9ff4661a0c99c15592da171bffcf/src%2Flibrustdoc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ca0e5ed39dd9ff4661a0c99c15592da171bffcf/src%2Flibrustdoc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown.rs?ref=6ca0e5ed39dd9ff4661a0c99c15592da171bffcf", "patch": "@@ -136,6 +136,9 @@ crate fn test(mut options: Options) -> Result<(), String> {\n     find_testable_code(&input_str, &mut collector, codes, options.enable_per_target_ignores, None);\n \n     options.test_args.insert(0, \"rustdoctest\".to_string());\n+    if options.nocapture {\n+        options.test_args.push(\"--nocapture\".to_string());\n+    }\n     test::test_main(\n         &options.test_args,\n         collector.tests,"}]}