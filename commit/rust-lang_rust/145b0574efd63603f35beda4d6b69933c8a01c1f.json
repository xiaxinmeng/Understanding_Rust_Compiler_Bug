{"sha": "145b0574efd63603f35beda4d6b69933c8a01c1f", "node_id": "C_kwDOAAsO6NoAKDE0NWIwNTc0ZWZkNjM2MDNmMzViZWRhNGQ2YjY5OTMzYzhhMDFjMWY", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-07-06T16:56:01Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-05-11T14:35:09Z"}, "message": "Use global_fn_name instead of format!", "tree": {"sha": "ac63d2efc3a89ac5cfb506a4dfe93cc10f4f36ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac63d2efc3a89ac5cfb506a4dfe93cc10f4f36ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/145b0574efd63603f35beda4d6b69933c8a01c1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/145b0574efd63603f35beda4d6b69933c8a01c1f", "html_url": "https://github.com/rust-lang/rust/commit/145b0574efd63603f35beda4d6b69933c8a01c1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/145b0574efd63603f35beda4d6b69933c8a01c1f/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ba7c5db079132b5d85112083691d4203a6b761c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ba7c5db079132b5d85112083691d4203a6b761c", "html_url": "https://github.com/rust-lang/rust/commit/6ba7c5db079132b5d85112083691d4203a6b761c"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "c27971897a0393baa1cf28b26cf5021ab71e5d99", "filename": "compiler/rustc_codegen_cranelift/src/allocator.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/145b0574efd63603f35beda4d6b69933c8a01c1f/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/145b0574efd63603f35beda4d6b69933c8a01c1f/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fallocator.rs?ref=145b0574efd63603f35beda4d6b69933c8a01c1f", "patch": "@@ -4,7 +4,8 @@\n use crate::prelude::*;\n \n use rustc_ast::expand::allocator::{\n-    alloc_error_handler_name, default_fn_name, AllocatorKind, AllocatorTy, ALLOCATOR_METHODS,\n+    alloc_error_handler_name, default_fn_name, global_fn_name, AllocatorKind, AllocatorTy,\n+    ALLOCATOR_METHODS,\n };\n use rustc_codegen_ssa::base::allocator_kind_for_codegen;\n use rustc_session::config::OomStrategy;\n@@ -68,7 +69,7 @@ fn codegen_inner(\n                 module,\n                 unwind_context,\n                 sig,\n-                &format!(\"__rust_{}\", method.name),\n+                &global_fn_name(method.name),\n                 &default_fn_name(method.name),\n             );\n         }"}, {"sha": "ff68de8c8f1dd6fa90ee09a733f5d5ad621d9d5c", "filename": "compiler/rustc_codegen_gcc/src/allocator.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/145b0574efd63603f35beda4d6b69933c8a01c1f/compiler%2Frustc_codegen_gcc%2Fsrc%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/145b0574efd63603f35beda4d6b69933c8a01c1f/compiler%2Frustc_codegen_gcc%2Fsrc%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fallocator.rs?ref=145b0574efd63603f35beda4d6b69933c8a01c1f", "patch": "@@ -2,7 +2,8 @@\n use gccjit::FnAttribute;\n use gccjit::{FunctionType, GlobalKind, ToRValue};\n use rustc_ast::expand::allocator::{\n-    alloc_error_handler_name, default_fn_name, AllocatorKind, AllocatorTy, ALLOCATOR_METHODS,\n+    alloc_error_handler_name, default_fn_name, global_fn_name, AllocatorKind, AllocatorTy,\n+    ALLOCATOR_METHODS,\n };\n use rustc_middle::bug;\n use rustc_middle::ty::TyCtxt;\n@@ -46,7 +47,7 @@ pub(crate) unsafe fn codegen(tcx: TyCtxt<'_>, mods: &mut GccContext, _module_nam\n                     panic!(\"invalid allocator output\")\n                 }\n             };\n-            let name = format!(\"__rust_{}\", method.name);\n+            let name = global_fn_name(method.name);\n \n             let args: Vec<_> = types.iter().enumerate()\n                 .map(|(index, typ)| context.new_parameter(None, *typ, &format!(\"param{}\", index)))"}, {"sha": "564e996cdf3b342bd6ba788f203d57eeff53af12", "filename": "compiler/rustc_codegen_llvm/src/allocator.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/145b0574efd63603f35beda4d6b69933c8a01c1f/compiler%2Frustc_codegen_llvm%2Fsrc%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/145b0574efd63603f35beda4d6b69933c8a01c1f/compiler%2Frustc_codegen_llvm%2Fsrc%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fallocator.rs?ref=145b0574efd63603f35beda4d6b69933c8a01c1f", "patch": "@@ -1,7 +1,8 @@\n use crate::attributes;\n use libc::c_uint;\n use rustc_ast::expand::allocator::{\n-    alloc_error_handler_name, default_fn_name, AllocatorKind, AllocatorTy, ALLOCATOR_METHODS,\n+    alloc_error_handler_name, default_fn_name, global_fn_name, AllocatorKind, AllocatorTy,\n+    ALLOCATOR_METHODS,\n };\n use rustc_middle::bug;\n use rustc_middle::ty::TyCtxt;\n@@ -59,7 +60,7 @@ pub(crate) unsafe fn codegen(\n                 args.len() as c_uint,\n                 False,\n             );\n-            let name = format!(\"__rust_{}\", method.name);\n+            let name = global_fn_name(method.name);\n             let llfn =\n                 llvm::LLVMRustGetOrInsertFunction(llmod, name.as_ptr().cast(), name.len(), ty);\n "}]}