{"sha": "ddc25d87ca3ae8d355f3ead885e9bbd45844f698", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkYzI1ZDg3Y2EzYWU4ZDM1NWYzZWFkODg1ZTliYmQ0NTg0NGY2OTg=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-29T11:54:48Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-29T12:10:35Z"}, "message": "Properly parse path separators in format-like postfix", "tree": {"sha": "b31b784bb94a54493e440f3a9a9ff7402abb84a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b31b784bb94a54493e440f3a9a9ff7402abb84a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddc25d87ca3ae8d355f3ead885e9bbd45844f698", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddc25d87ca3ae8d355f3ead885e9bbd45844f698", "html_url": "https://github.com/rust-lang/rust/commit/ddc25d87ca3ae8d355f3ead885e9bbd45844f698", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddc25d87ca3ae8d355f3ead885e9bbd45844f698/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77ad203a719be074e81485af7a4fb02fac6cbf61", "url": "https://api.github.com/repos/rust-lang/rust/commits/77ad203a719be074e81485af7a4fb02fac6cbf61", "html_url": "https://github.com/rust-lang/rust/commit/77ad203a719be074e81485af7a4fb02fac6cbf61"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "3014fb13b129c89cd020b7afa014c63d50473f71", "filename": "crates/completion/src/completions/postfix/format_like.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ddc25d87ca3ae8d355f3ead885e9bbd45844f698/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fpostfix%2Fformat_like.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddc25d87ca3ae8d355f3ead885e9bbd45844f698/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fpostfix%2Fformat_like.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fpostfix%2Fformat_like.rs?ref=ddc25d87ca3ae8d355f3ead885e9bbd45844f698", "patch": "@@ -108,7 +108,8 @@ impl FormatStrParser {\n         // \"{MyStruct { val_a: 0, val_b: 1 }}\".\n         let mut inexpr_open_count = 0;\n \n-        for chr in self.input.chars() {\n+        let mut chars = self.input.chars().peekable();\n+        while let Some(chr) = chars.next() {\n             match (self.state, chr) {\n                 (State::NotExpr, '{') => {\n                     self.output.push(chr);\n@@ -157,6 +158,11 @@ impl FormatStrParser {\n                         inexpr_open_count -= 1;\n                     }\n                 }\n+                (State::Expr, ':') if chars.peek().copied() == Some(':') => {\n+                    // path seperator\n+                    current_expr.push_str(\"::\");\n+                    chars.next();\n+                }\n                 (State::Expr, ':') => {\n                     if inexpr_open_count == 0 {\n                         // We're outside of braces, thus assume that it's a specifier, like \"{Some(value):?}\"\n@@ -249,6 +255,9 @@ mod tests {\n                 expect![[\"{:?}; SomeStruct { val_a: 0, val_b: 1 }\"]],\n             ),\n             (\"{     2 + 2        }\", expect![[\"{}; 2 + 2\"]]),\n+            (\"{strsim::jaro_winkle(a)}\", expect![[\"{}; strsim::jaro_winkle(a)\"]]),\n+            (\"{foo::bar::baz()}\", expect![[\"{}; foo::bar::baz()\"]]),\n+            (\"{foo::bar():?}\", expect![[\"{:?}; foo::bar()\"]]),\n         ];\n \n         for (input, output) in test_vector {"}]}