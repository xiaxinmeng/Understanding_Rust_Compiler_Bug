{"sha": "5751794d97941176571bdf7c16f909ac9845520c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3NTE3OTRkOTc5NDExNzY1NzFiZGY3YzE2ZjkwOWFjOTg0NTUyMGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-19T12:06:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-19T12:06:17Z"}, "message": "auto merge of #9946 : sfackler/rust/enum-doc, r=alexcrichton\n\nStruct fields with inherited visibility were previously stripped.\r\n\r\nCloses #9899", "tree": {"sha": "b32a185ba01d215035b57bfd597755016524df8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b32a185ba01d215035b57bfd597755016524df8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5751794d97941176571bdf7c16f909ac9845520c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5751794d97941176571bdf7c16f909ac9845520c", "html_url": "https://github.com/rust-lang/rust/commit/5751794d97941176571bdf7c16f909ac9845520c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5751794d97941176571bdf7c16f909ac9845520c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b1fb461d6935a57e996719e4f7b1b8b87e08e17", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b1fb461d6935a57e996719e4f7b1b8b87e08e17", "html_url": "https://github.com/rust-lang/rust/commit/0b1fb461d6935a57e996719e4f7b1b8b87e08e17"}, {"sha": "590b50f71a1396c4a32f53917e31cd77ae229ed0", "url": "https://api.github.com/repos/rust-lang/rust/commits/590b50f71a1396c4a32f53917e31cd77ae229ed0", "html_url": "https://github.com/rust-lang/rust/commit/590b50f71a1396c4a32f53917e31cd77ae229ed0"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "53c3cf3a10c795d3d1e53ec0b1f4b772a5ee5bdc", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5751794d97941176571bdf7c16f909ac9845520c/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5751794d97941176571bdf7c16f909ac9845520c/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=5751794d97941176571bdf7c16f909ac9845520c", "patch": "@@ -1344,6 +1344,26 @@ fn item_enum(w: &mut io::Writer, it: &clean::Item, e: &clean::Enum) {\n             write!(w, \"<tr><td id='variant.{name}'><code>{name}</code></td><td>\",\n                    name = variant.name.get_ref().as_slice());\n             document(w, variant);\n+            match variant.inner {\n+                clean::VariantItem(ref var) => {\n+                    match var.kind {\n+                        clean::StructVariant(ref s) => {\n+                            write!(w, \"<h3 class='fields'>Fields</h3>\\n<table>\");\n+                            for field in s.fields.iter() {\n+                                write!(w, \"<tr><td id='variant.{v}.field.{f}'>\\\n+                                           <code>{f}</code></td><td>\",\n+                                       v = variant.name.get_ref().as_slice(),\n+                                       f = field.name.get_ref().as_slice());\n+                                document(w, field);\n+                                write!(w, \"</td></tr>\");\n+                            }\n+                            write!(w, \"</table>\");\n+                        }\n+                        _ => ()\n+                    }\n+                }\n+                _ => ()\n+            }\n             write!(w, \"</td></tr>\");\n         }\n         write!(w, \"</table>\");"}, {"sha": "e11552cb08faf4ab677ec84f8e5ef4674a307424", "filename": "src/librustdoc/passes.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5751794d97941176571bdf7c16f909ac9845520c/src%2Flibrustdoc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5751794d97941176571bdf7c16f909ac9845520c/src%2Flibrustdoc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses.rs?ref=5751794d97941176571bdf7c16f909ac9845520c", "patch": "@@ -135,8 +135,14 @@ impl<'self> fold::DocFolder for Stripper<'self> {\n                 }\n             }\n \n-            clean::ViewItemItem(*) | clean::StructFieldItem(*) => {\n+            clean::ViewItemItem(*) => {\n                 if i.visibility != Some(ast::public) {\n+                    return None\n+                }\n+            }\n+\n+            clean::StructFieldItem(*) => {\n+                if i.visibility == Some(ast::private) {\n                     return None;\n                 }\n             }"}]}