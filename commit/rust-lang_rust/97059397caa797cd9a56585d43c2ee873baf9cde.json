{"sha": "97059397caa797cd9a56585d43c2ee873baf9cde", "node_id": "C_kwDOAAsO6NoAKDk3MDU5Mzk3Y2FhNzk3Y2Q5YTU2NTg1ZDQzYzJlZTg3M2JhZjljZGU", "commit": {"author": {"name": "Lo\u00efc BRANSTETT", "email": "lolo.branstett@numericable.fr", "date": "2022-02-19T13:31:20Z"}, "committer": {"name": "Lo\u00efc BRANSTETT", "email": "lolo.branstett@numericable.fr", "date": "2022-02-25T01:18:49Z"}, "message": "Wire up --check-cfg to rustdoc", "tree": {"sha": "3d1ca8e07c8789d9462dcb2e7e5e0db100d9c732", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d1ca8e07c8789d9462dcb2e7e5e0db100d9c732"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97059397caa797cd9a56585d43c2ee873baf9cde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97059397caa797cd9a56585d43c2ee873baf9cde", "html_url": "https://github.com/rust-lang/rust/commit/97059397caa797cd9a56585d43c2ee873baf9cde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97059397caa797cd9a56585d43c2ee873baf9cde/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e82f35492ea5c78e19609bf4468f0a686d9a756", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e82f35492ea5c78e19609bf4468f0a686d9a756", "html_url": "https://github.com/rust-lang/rust/commit/4e82f35492ea5c78e19609bf4468f0a686d9a756"}], "stats": {"total": 68, "additions": 66, "deletions": 2}, "files": [{"sha": "93f90b90e0a0d6db6afffa3b2c0db72d6d690321", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=97059397caa797cd9a56585d43c2ee873baf9cde", "patch": "@@ -80,6 +80,8 @@ crate struct Options {\n     crate extern_strs: Vec<String>,\n     /// List of `cfg` flags to hand to the compiler. Always includes `rustdoc`.\n     crate cfgs: Vec<String>,\n+    /// List of check cfg flags to hand to the compiler.\n+    crate check_cfgs: Vec<String>,\n     /// Codegen options to hand to the compiler.\n     crate codegen_options: CodegenOptions,\n     /// Codegen options strings to hand to the compiler.\n@@ -172,6 +174,7 @@ impl fmt::Debug for Options {\n             .field(\"libs\", &self.libs)\n             .field(\"externs\", &FmtExterns(&self.externs))\n             .field(\"cfgs\", &self.cfgs)\n+            .field(\"check-cfgs\", &self.check_cfgs)\n             .field(\"codegen_options\", &\"...\")\n             .field(\"debugging_options\", &\"...\")\n             .field(\"target\", &self.target)\n@@ -506,6 +509,7 @@ impl Options {\n         };\n \n         let cfgs = matches.opt_strs(\"cfg\");\n+        let check_cfgs = matches.opt_strs(\"check-cfg\");\n \n         let extension_css = matches.opt_str(\"e\").map(|s| PathBuf::from(&s));\n \n@@ -677,6 +681,7 @@ impl Options {\n             externs,\n             extern_strs,\n             cfgs,\n+            check_cfgs,\n             codegen_options,\n             codegen_options_strs,\n             debugging_opts,"}, {"sha": "2b82575f71083626af0af14977bd5418b0957761", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=97059397caa797cd9a56585d43c2ee873baf9cde", "patch": "@@ -192,6 +192,7 @@ crate fn create_config(\n         libs,\n         externs,\n         mut cfgs,\n+        check_cfgs,\n         codegen_options,\n         debugging_opts,\n         target,\n@@ -219,6 +220,7 @@ crate fn create_config(\n         // these are definitely not part of rustdoc, but we want to warn on them anyway.\n         rustc_lint::builtin::RENAMED_AND_REMOVED_LINTS.name.to_string(),\n         rustc_lint::builtin::UNKNOWN_LINTS.name.to_string(),\n+        rustc_lint::builtin::UNEXPECTED_CFGS.name.to_string(),\n     ];\n     lints_to_show.extend(crate::lint::RUSTDOC_LINTS.iter().map(|lint| lint.name.to_string()));\n \n@@ -253,7 +255,7 @@ crate fn create_config(\n     interface::Config {\n         opts: sessopts,\n         crate_cfg: interface::parse_cfgspecs(cfgs),\n-        crate_check_cfg: interface::parse_check_cfg(vec![]),\n+        crate_check_cfg: interface::parse_check_cfg(check_cfgs),\n         input,\n         input_path: cpath,\n         output_file: None,"}, {"sha": "cc68defd5a957b27805a4db1f811fb425e174857", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=97059397caa797cd9a56585d43c2ee873baf9cde", "patch": "@@ -91,7 +91,7 @@ crate fn run(options: RustdocOptions) -> Result<(), ErrorReported> {\n     let config = interface::Config {\n         opts: sessopts,\n         crate_cfg: interface::parse_cfgspecs(cfgs),\n-        crate_check_cfg: interface::parse_check_cfg(vec![]),\n+        crate_check_cfg: interface::parse_check_cfg(options.check_cfgs.clone()),\n         input,\n         input_path: None,\n         output_file: None,\n@@ -321,6 +321,12 @@ fn run_test(\n     for cfg in &rustdoc_options.cfgs {\n         compiler.arg(\"--cfg\").arg(&cfg);\n     }\n+    if !rustdoc_options.check_cfgs.is_empty() {\n+        compiler.arg(\"-Z\").arg(\"unstable-options\");\n+        for check_cfg in &rustdoc_options.check_cfgs {\n+            compiler.arg(\"--check-cfg\").arg(&check_cfg);\n+        }\n+    }\n     if let Some(sysroot) = rustdoc_options.maybe_sysroot {\n         compiler.arg(\"--sysroot\").arg(sysroot);\n     }"}, {"sha": "365934e91a110af33a19980c4fa82ccf7279e21c", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=97059397caa797cd9a56585d43c2ee873baf9cde", "patch": "@@ -259,6 +259,7 @@ fn opts() -> Vec<RustcOptGroup> {\n             o.optmulti(\"L\", \"library-path\", \"directory to add to crate search path\", \"DIR\")\n         }),\n         stable(\"cfg\", |o| o.optmulti(\"\", \"cfg\", \"pass a --cfg to rustc\", \"\")),\n+        unstable(\"check-cfg\", |o| o.optmulti(\"\", \"check-cfg\", \"pass a --check-cfg to rustc\", \"\")),\n         stable(\"extern\", |o| o.optmulti(\"\", \"extern\", \"pass an --extern to rustc\", \"NAME[=PATH]\")),\n         unstable(\"extern-html-root-url\", |o| {\n             o.optmulti("}, {"sha": "626cc838704b3673682b36ece4ac27d64ea42213", "filename": "src/test/rustdoc-ui/check-cfg-test.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg-test.rs?ref=97059397caa797cd9a56585d43c2ee873baf9cde", "patch": "@@ -0,0 +1,12 @@\n+// check-pass\n+// compile-flags: --test --nocapture --check-cfg=values(feature,\"test\") -Z unstable-options\n+// normalize-stderr-test: \"src/test/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test: \"src/test/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n+\n+/// The doctest will produce a warning because feature invalid is unexpected\n+/// ```\n+/// #[cfg(feature = \"invalid\")]\n+/// assert!(false);\n+/// ```\n+pub struct Foo;"}, {"sha": "dc25205da772eec3f7982cf682c88c5cb177c697", "filename": "src/test/rustdoc-ui/check-cfg-test.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg-test.stderr?ref=97059397caa797cd9a56585d43c2ee873baf9cde", "patch": "@@ -0,0 +1,11 @@\n+warning: unexpected `cfg` condition value\n+  --> $DIR/check-cfg-test.rs:9:7\n+   |\n+LL | #[cfg(feature = \"invalid\")]\n+   |       ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(unexpected_cfgs)]` on by default\n+   = note: expected values for `feature` are: test\n+\n+warning: 1 warning emitted\n+"}, {"sha": "b7db49bcfa87a425f0a4ac9105f6cfa2783b4ad4", "filename": "src/test/rustdoc-ui/check-cfg-test.stdout", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg-test.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg-test.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg-test.stdout?ref=97059397caa797cd9a56585d43c2ee873baf9cde", "patch": "@@ -0,0 +1,6 @@\n+\n+running 1 test\n+test $DIR/check-cfg-test.rs - Foo (line 8) ... ok\n+\n+test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in $TIME\n+"}, {"sha": "5c500ce6ce08219f169606e045c5d34cffe12301", "filename": "src/test/rustdoc-ui/check-cfg-unstable.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg-unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg-unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg-unstable.rs?ref=97059397caa797cd9a56585d43c2ee873baf9cde", "patch": "@@ -0,0 +1,2 @@\n+// check-fail\n+// compile-flags: --check-cfg=names()"}, {"sha": "9b27c2bc058a73760e18439b943d0d8bd1b74577", "filename": "src/test/rustdoc-ui/check-cfg-unstable.stderr", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg-unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg-unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg-unstable.stderr?ref=97059397caa797cd9a56585d43c2ee873baf9cde", "patch": "@@ -0,0 +1,2 @@\n+error: the `-Z unstable-options` flag must also be passed to enable the flag `check-cfg`\n+"}, {"sha": "fa8789ad3ede4c9a72a2f73fe140a6a2a37e249d", "filename": "src/test/rustdoc-ui/check-cfg.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg.rs?ref=97059397caa797cd9a56585d43c2ee873baf9cde", "patch": "@@ -0,0 +1,7 @@\n+// check-pass\n+// compile-flags: --check-cfg=names() -Z unstable-options\n+\n+/// uniz is nor a builtin nor pass as arguments so is unexpected\n+#[cfg(uniz)]\n+//~^ WARNING unexpected `cfg` condition name\n+pub struct Bar;"}, {"sha": "1db8e1d91c249cf84290b21531d0993182b23f47", "filename": "src/test/rustdoc-ui/check-cfg.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97059397caa797cd9a56585d43c2ee873baf9cde/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-cfg.stderr?ref=97059397caa797cd9a56585d43c2ee873baf9cde", "patch": "@@ -0,0 +1,10 @@\n+warning: unexpected `cfg` condition name\n+  --> $DIR/check-cfg.rs:5:7\n+   |\n+LL | #[cfg(uniz)]\n+   |       ^^^^ help: did you mean: `unix`\n+   |\n+   = note: `#[warn(unexpected_cfgs)]` on by default\n+\n+warning: 1 warning emitted\n+"}]}