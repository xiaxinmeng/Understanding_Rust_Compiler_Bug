{"sha": "a2bbf7debaab60be33bd8008a71bca69576945a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYmJmN2RlYmFhYjYwYmUzM2JkODAwOGE3MWJjYTY5NTc2OTQ1YTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-19T12:52:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-19T12:52:02Z"}, "message": "Auto merge of #60077 - RalfJung:miri-alloc-tests, r=joshtriplett\n\nmake liballoc internal test suite mostly pass in Miri\n\nI discovered, to my surprise, that liballoc has two test suites: `liballoc/tests`, and a bunch of stuff embedded directly within liballoc.  The latter was not covered by [miri-test-libstd](https://github.com/RalfJung/miri-test-libstd) yet.  This disables in Miri the tests that Miri cannot support or runs too slowly.", "tree": {"sha": "bf380d261dcaf281e9b606cd74117a1d406a07e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf380d261dcaf281e9b606cd74117a1d406a07e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2bbf7debaab60be33bd8008a71bca69576945a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2bbf7debaab60be33bd8008a71bca69576945a0", "html_url": "https://github.com/rust-lang/rust/commit/a2bbf7debaab60be33bd8008a71bca69576945a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2bbf7debaab60be33bd8008a71bca69576945a0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22fa4bb0ebdfe9fcd7962f1fa6e758c036c878e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/22fa4bb0ebdfe9fcd7962f1fa6e758c036c878e6", "html_url": "https://github.com/rust-lang/rust/commit/22fa4bb0ebdfe9fcd7962f1fa6e758c036c878e6"}, {"sha": "2bc8c547cdd9cd2e4f338477eea5860861879565", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bc8c547cdd9cd2e4f338477eea5860861879565", "html_url": "https://github.com/rust-lang/rust/commit/2bc8c547cdd9cd2e4f338477eea5860861879565"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "ddc6481eec78e9d703b4a26499cd60cac93b8cca", "filename": "src/liballoc/alloc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a2bbf7debaab60be33bd8008a71bca69576945a0/src%2Fliballoc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2bbf7debaab60be33bd8008a71bca69576945a0/src%2Fliballoc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Falloc.rs?ref=a2bbf7debaab60be33bd8008a71bca69576945a0", "patch": "@@ -252,6 +252,7 @@ mod tests {\n     }\n \n     #[bench]\n+    #[cfg(not(miri))] // Miri does not support benchmarks\n     fn alloc_owned_small(b: &mut Bencher) {\n         b.iter(|| {\n             let _: Box<_> = box 10;"}, {"sha": "cb390aa419ed4038316bcea971a6b4450a7189e5", "filename": "src/liballoc/collections/linked_list.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2bbf7debaab60be33bd8008a71bca69576945a0/src%2Fliballoc%2Fcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2bbf7debaab60be33bd8008a71bca69576945a0/src%2Fliballoc%2Fcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Flinked_list.rs?ref=a2bbf7debaab60be33bd8008a71bca69576945a0", "patch": "@@ -1354,6 +1354,7 @@ mod tests {\n \n     #[test]\n     #[cfg_attr(target_os = \"emscripten\", ignore)]\n+    #[cfg(not(miri))] // Miri does not support threads\n     fn test_send() {\n         let n = list_from(&[1, 2, 3]);\n         thread::spawn(move || {\n@@ -1371,6 +1372,7 @@ mod tests {\n         for _ in 0..25 {\n             fuzz_test(3);\n             fuzz_test(16);\n+            #[cfg(not(miri))] // Miri is too slow\n             fuzz_test(189);\n         }\n     }"}, {"sha": "d806bd0b1d76fc66359bd904e1ab497be0fea25f", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a2bbf7debaab60be33bd8008a71bca69576945a0/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2bbf7debaab60be33bd8008a71bca69576945a0/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=a2bbf7debaab60be33bd8008a71bca69576945a0", "patch": "@@ -2799,6 +2799,7 @@ mod tests {\n     use super::VecDeque;\n \n     #[bench]\n+    #[cfg(not(miri))] // Miri does not support benchmarks\n     fn bench_push_back_100(b: &mut test::Bencher) {\n         let mut deq = VecDeque::with_capacity(101);\n         b.iter(|| {\n@@ -2811,6 +2812,7 @@ mod tests {\n     }\n \n     #[bench]\n+    #[cfg(not(miri))] // Miri does not support benchmarks\n     fn bench_push_front_100(b: &mut test::Bencher) {\n         let mut deq = VecDeque::with_capacity(101);\n         b.iter(|| {\n@@ -2823,6 +2825,7 @@ mod tests {\n     }\n \n     #[bench]\n+    #[cfg(not(miri))] // Miri does not support benchmarks\n     fn bench_pop_back_100(b: &mut test::Bencher) {\n         let mut deq = VecDeque::<i32>::with_capacity(101);\n \n@@ -2836,6 +2839,7 @@ mod tests {\n     }\n \n     #[bench]\n+    #[cfg(not(miri))] // Miri does not support benchmarks\n     fn bench_pop_front_100(b: &mut test::Bencher) {\n         let mut deq = VecDeque::<i32>::with_capacity(101);\n \n@@ -3103,7 +3107,12 @@ mod tests {\n             assert!(vec.into_iter().eq(vd));\n         }\n \n-        for cap_pwr in 0..7 {\n+        #[cfg(not(miri))] // Miri is too slow\n+        let max_pwr = 7;\n+        #[cfg(miri)]\n+        let max_pwr = 5;\n+\n+        for cap_pwr in 0..max_pwr {\n             // Make capacity as a (2^x)-1, so that the ring size is 2^x\n             let cap = (2i32.pow(cap_pwr) - 1) as usize;\n "}, {"sha": "466e806663c7f331d9baaee713c8a16947d551bf", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2bbf7debaab60be33bd8008a71bca69576945a0/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2bbf7debaab60be33bd8008a71bca69576945a0/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=a2bbf7debaab60be33bd8008a71bca69576945a0", "patch": "@@ -1678,6 +1678,7 @@ mod tests {\n \n     #[test]\n     #[cfg_attr(target_os = \"emscripten\", ignore)]\n+    #[cfg(not(miri))] // Miri does not support threads\n     fn manually_share_arc() {\n         let v = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n         let arc_v = Arc::new(v);\n@@ -1982,6 +1983,7 @@ mod tests {\n \n     #[test]\n     #[cfg_attr(target_os = \"emscripten\", ignore)]\n+    #[cfg(not(miri))] // Miri does not support threads\n     fn test_weak_count_locked() {\n         let mut a = Arc::new(atomic::AtomicBool::new(false));\n         let a2 = a.clone();"}]}