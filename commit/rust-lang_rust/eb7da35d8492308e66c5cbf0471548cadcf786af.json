{"sha": "eb7da35d8492308e66c5cbf0471548cadcf786af", "node_id": "C_kwDOAAsO6NoAKGViN2RhMzVkODQ5MjMwOGU2NmM1Y2JmMDQ3MTU0OGNhZGNmNzg2YWY", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-10-06T19:33:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-06T19:33:23Z"}, "message": "Rollup merge of #89588 - BoxyUwU:add_a_test_uwu, r=lcnr\n\nAdd a test for generic_const_exprs\n\nTest that const_eval_resolve evaluates consts with unused inference vars in substs\n\nr? ``@lcnr``", "tree": {"sha": "adc25deac5852761de577ca0a4e8f96f30b46edc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adc25deac5852761de577ca0a4e8f96f30b46edc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb7da35d8492308e66c5cbf0471548cadcf786af", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhXfoDCRBK7hj4Ov3rIwAAmacIAHmruIDhyMTs4HJAdOpuhhpZ\nW224dqgSOotkKp1R6QtUFcoJfRcdlv/ejAbMKULWXezmXlpqyziq9y7U4uc9Bq45\neY5SXQrqvjkYyUElWD3Ukph6vd6xtQlEdWB268e6/tMoyzGDgO1KZJwa2uMpo1LP\nKq1rw4msSm++GgcOQyoxovQlzlz7egs6WhW+LKeyFBN24iyxbhfWp2Eu6E1K8a/M\nZCvk6Asya0FKKgxyHANDrAs47TzqN3EpPr+fEsV5Y1GEgUU3Fn65h+05+cF0DrcF\nT00IZjIQiec0Q/0JXGUAfw6dHcQqkKazbc8MfUIUS4WKofjKcySAug0VJXKvCq8=\n=B+Sa\n-----END PGP SIGNATURE-----\n", "payload": "tree adc25deac5852761de577ca0a4e8f96f30b46edc\nparent 79a1fc84194f5c57afba0f81e628d3543fa2d00c\nparent edfd6d591b51da089b65c68ece0aecd1e9b8a42b\nauthor Manish Goregaokar <manishsmail@gmail.com> 1633548803 -0700\ncommitter GitHub <noreply@github.com> 1633548803 -0700\n\nRollup merge of #89588 - BoxyUwU:add_a_test_uwu, r=lcnr\n\nAdd a test for generic_const_exprs\n\nTest that const_eval_resolve evaluates consts with unused inference vars in substs\n\nr? ``@lcnr``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb7da35d8492308e66c5cbf0471548cadcf786af", "html_url": "https://github.com/rust-lang/rust/commit/eb7da35d8492308e66c5cbf0471548cadcf786af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb7da35d8492308e66c5cbf0471548cadcf786af/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79a1fc84194f5c57afba0f81e628d3543fa2d00c", "url": "https://api.github.com/repos/rust-lang/rust/commits/79a1fc84194f5c57afba0f81e628d3543fa2d00c", "html_url": "https://github.com/rust-lang/rust/commit/79a1fc84194f5c57afba0f81e628d3543fa2d00c"}, {"sha": "edfd6d591b51da089b65c68ece0aecd1e9b8a42b", "url": "https://api.github.com/repos/rust-lang/rust/commits/edfd6d591b51da089b65c68ece0aecd1e9b8a42b", "html_url": "https://github.com/rust-lang/rust/commit/edfd6d591b51da089b65c68ece0aecd1e9b8a42b"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "b79bc262d2bac1877a3ee9af2dfea10e5ab12189", "filename": "src/test/ui/const-generics/generic_const_exprs/const_eval_resolve_canonical.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/eb7da35d8492308e66c5cbf0471548cadcf786af/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fconst_eval_resolve_canonical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb7da35d8492308e66c5cbf0471548cadcf786af/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fconst_eval_resolve_canonical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fconst_eval_resolve_canonical.rs?ref=eb7da35d8492308e66c5cbf0471548cadcf786af", "patch": "@@ -0,0 +1,29 @@\n+// run-pass\n+#![feature(generic_const_exprs)]\n+#![allow(incomplete_features)]\n+\n+trait Foo<const N: usize> {\n+    type Assoc: Default;\n+}\n+\n+impl Foo<0> for () {\n+    type Assoc = u32;\n+}\n+\n+impl Foo<3> for () {\n+    type Assoc = i64;\n+}\n+\n+fn foo<T, const N: usize>(_: T) -> <() as Foo<{ N + 1 }>>::Assoc\n+where\n+    (): Foo<{ N + 1 }>,\n+{\n+    Default::default()\n+}\n+\n+fn main() {\n+    // Test that we can correctly infer `T` which requires evaluating\n+    // `{ N + 1 }` which has substs containing an inference var\n+    let mut _q = Default::default();\n+    _q = foo::<_, 2>(_q);\n+}"}]}