{"sha": "0c3950d8a827793fa04c8f633baddecc92a87404", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjMzk1MGQ4YTgyNzc5M2ZhMDRjOGY2MzNiYWRkZWNjOTJhODc0MDQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-22T01:58:40Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:33Z"}, "message": "librustc: De-`@mut` the free region map in the region maps", "tree": {"sha": "991d791dd21273681fcbb3f321d3134993cdfac1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/991d791dd21273681fcbb3f321d3134993cdfac1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c3950d8a827793fa04c8f633baddecc92a87404", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c3950d8a827793fa04c8f633baddecc92a87404", "html_url": "https://github.com/rust-lang/rust/commit/0c3950d8a827793fa04c8f633baddecc92a87404", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c3950d8a827793fa04c8f633baddecc92a87404/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5e32729c9346c47f9128c5fe4b6b0aacfe1d4f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5e32729c9346c47f9128c5fe4b6b0aacfe1d4f4", "html_url": "https://github.com/rust-lang/rust/commit/d5e32729c9346c47f9128c5fe4b6b0aacfe1d4f4"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "b9bc080e7e59be3637f6307fbafb92a27d48a431", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0c3950d8a827793fa04c8f633baddecc92a87404/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3950d8a827793fa04c8f633baddecc92a87404/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=0c3950d8a827793fa04c8f633baddecc92a87404", "patch": "@@ -52,7 +52,7 @@ The region maps encode information about region relationships.\n */\n pub struct RegionMaps {\n     priv scope_map: RefCell<HashMap<ast::NodeId, ast::NodeId>>,\n-    priv free_region_map: HashMap<FreeRegion, ~[FreeRegion]>,\n+    priv free_region_map: RefCell<HashMap<FreeRegion, ~[FreeRegion]>>,\n     priv cleanup_scopes: HashSet<ast::NodeId>\n }\n \n@@ -75,7 +75,8 @@ struct RegionResolutionVisitor {\n \n impl RegionMaps {\n     pub fn relate_free_regions(&mut self, sub: FreeRegion, sup: FreeRegion) {\n-        match self.free_region_map.find_mut(&sub) {\n+        let mut free_region_map = self.free_region_map.borrow_mut();\n+        match free_region_map.get().find_mut(&sub) {\n             Some(sups) => {\n                 if !sups.iter().any(|x| x == &sup) {\n                     sups.push(sup);\n@@ -87,7 +88,7 @@ impl RegionMaps {\n \n         debug!(\"relate_free_regions(sub={:?}, sup={:?})\", sub, sup);\n \n-        self.free_region_map.insert(sub, ~[sup]);\n+        free_region_map.get().insert(sub, ~[sup]);\n     }\n \n     pub fn record_parent(&mut self, sub: ast::NodeId, sup: ast::NodeId) {\n@@ -198,7 +199,8 @@ impl RegionMaps {\n         let mut queue = ~[sub];\n         let mut i = 0;\n         while i < queue.len() {\n-            match self.free_region_map.find(&queue[i]) {\n+            let free_region_map = self.free_region_map.borrow();\n+            match free_region_map.get().find(&queue[i]) {\n                 Some(parents) => {\n                     for parent in parents.iter() {\n                         if *parent == sup {\n@@ -504,7 +506,7 @@ pub fn resolve_crate(sess: Session,\n {\n     let region_maps = @mut RegionMaps {\n         scope_map: RefCell::new(HashMap::new()),\n-        free_region_map: HashMap::new(),\n+        free_region_map: RefCell::new(HashMap::new()),\n         cleanup_scopes: HashSet::new(),\n     };\n     let cx = Context {parent: None,"}]}