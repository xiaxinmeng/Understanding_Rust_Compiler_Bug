{"sha": "a68ec2205335e2c3de8ba56fb6a31b99f10c95a6", "node_id": "C_kwDOAAsO6NoAKGE2OGVjMjIwNTMzNWUyYzNkZThiYTU2ZmI2YTMxYjk5ZjEwYzk1YTY", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-11-09T08:52:59Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-11-09T08:54:51Z"}, "message": "Fix `rustdoc --version` when used with download-rustc\n\nPreviously, rustdoc would unconditionally report the version that *rustc* was compiled with.\nThat showed things like `nightly-2022-10-30`, which wasn't right, since this was a `dev` build compiled from source.\n\nFix it by changing `rustc_driver::version` to a macro expanded at invocation time.", "tree": {"sha": "240c87f61d31e116c19d2fa1a6b5ff2d0e8ed223", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/240c87f61d31e116c19d2fa1a6b5ff2d0e8ed223"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a68ec2205335e2c3de8ba56fb6a31b99f10c95a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a68ec2205335e2c3de8ba56fb6a31b99f10c95a6", "html_url": "https://github.com/rust-lang/rust/commit/a68ec2205335e2c3de8ba56fb6a31b99f10c95a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a68ec2205335e2c3de8ba56fb6a31b99f10c95a6/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7eef946fc0e0eff40e588eab77b09b287accbec3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7eef946fc0e0eff40e588eab77b09b287accbec3", "html_url": "https://github.com/rust-lang/rust/commit/7eef946fc0e0eff40e588eab77b09b287accbec3"}], "stats": {"total": 71, "additions": 42, "deletions": 29}, "files": [{"sha": "2ba012a77b0a908788f0272705f82f7c875cb1a7", "filename": "compiler/rustc_codegen_cranelift/src/debuginfo/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a68ec2205335e2c3de8ba56fb6a31b99f10c95a6/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a68ec2205335e2c3de8ba56fb6a31b99f10c95a6/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fdebuginfo%2Fmod.rs?ref=a68ec2205335e2c3de8ba56fb6a31b99f10c95a6", "patch": "@@ -59,7 +59,7 @@ impl DebugContext {\n \n         let producer = format!(\n             \"cg_clif (rustc {}, cranelift {})\",\n-            rustc_interface::util::version_str().unwrap_or(\"unknown version\"),\n+            rustc_interface::util::rustc_version_str().unwrap_or(\"unknown version\"),\n             cranelift_codegen::VERSION,\n         );\n         let comp_dir = tcx"}, {"sha": "0304551770312ad2d12d338fe6c20e7f574f7339", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 32, "deletions": 10, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/a68ec2205335e2c3de8ba56fb6a31b99f10c95a6/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a68ec2205335e2c3de8ba56fb6a31b99f10c95a6/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=a68ec2205335e2c3de8ba56fb6a31b99f10c95a6", "patch": "@@ -6,6 +6,7 @@\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n #![feature(once_cell)]\n+#![feature(decl_macro)]\n #![recursion_limit = \"256\"]\n #![allow(rustc::potential_query_instability)]\n #![deny(rustc::untranslatable_diagnostic)]\n@@ -742,20 +743,41 @@ fn print_crate_info(\n }\n \n /// Prints version information\n-pub fn version(binary: &str, matches: &getopts::Matches) {\n+///\n+/// NOTE: this is a macro to support drivers built at a different time than the main `rustc_driver` crate.\n+pub macro version($binary: literal, $matches: expr) {\n+    fn unw(x: Option<&str>) -> &str {\n+        x.unwrap_or(\"unknown\")\n+    }\n+    $crate::version_at_macro_invocation(\n+        $binary,\n+        $matches,\n+        unw(option_env!(\"CFG_VERSION\")),\n+        unw(option_env!(\"CFG_VER_HASH\")),\n+        unw(option_env!(\"CFG_VER_DATE\")),\n+        unw(option_env!(\"CFG_RELEASE\")),\n+    )\n+}\n+\n+#[doc(hidden)] // use the macro instead\n+pub fn version_at_macro_invocation(\n+    binary: &str,\n+    matches: &getopts::Matches,\n+    version: &str,\n+    commit_hash: &str,\n+    commit_date: &str,\n+    release: &str,\n+) {\n     let verbose = matches.opt_present(\"verbose\");\n \n-    println!(\"{} {}\", binary, util::version_str().unwrap_or(\"unknown version\"));\n+    println!(\"{} {}\", binary, version);\n \n     if verbose {\n-        fn unw(x: Option<&str>) -> &str {\n-            x.unwrap_or(\"unknown\")\n-        }\n         println!(\"binary: {}\", binary);\n-        println!(\"commit-hash: {}\", unw(util::commit_hash_str()));\n-        println!(\"commit-date: {}\", unw(util::commit_date_str()));\n+        println!(\"commit-hash: {}\", commit_hash);\n+        println!(\"commit-date: {}\", commit_date);\n         println!(\"host: {}\", config::host_triple());\n-        println!(\"release: {}\", unw(util::release_str()));\n+        println!(\"release: {}\", release);\n \n         let debug_flags = matches.opt_strs(\"Z\");\n         let backend_name = debug_flags.iter().find_map(|x| x.strip_prefix(\"codegen-backend=\"));\n@@ -1071,7 +1093,7 @@ pub fn handle_options(args: &[String]) -> Option<getopts::Matches> {\n     }\n \n     if matches.opt_present(\"version\") {\n-        version(\"rustc\", &matches);\n+        version!(\"rustc\", &matches);\n         return None;\n     }\n \n@@ -1216,7 +1238,7 @@ pub fn report_ice(info: &panic::PanicInfo<'_>, bug_report_url: &str) {\n         format!(\"we would appreciate a bug report: {}\", bug_report_url).into(),\n         format!(\n             \"rustc {} running on {}\",\n-            util::version_str().unwrap_or(\"unknown_version\"),\n+            util::version_str!().unwrap_or(\"unknown_version\"),\n             config::host_triple()\n         )\n         .into(),"}, {"sha": "542b638bbd7a40dcb5596aca193092332b93a811", "filename": "compiler/rustc_interface/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a68ec2205335e2c3de8ba56fb6a31b99f10c95a6/compiler%2Frustc_interface%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a68ec2205335e2c3de8ba56fb6a31b99f10c95a6/compiler%2Frustc_interface%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Flib.rs?ref=a68ec2205335e2c3de8ba56fb6a31b99f10c95a6", "patch": "@@ -1,4 +1,5 @@\n #![feature(box_patterns)]\n+#![feature(decl_macro)]\n #![feature(internal_output_capture)]\n #![feature(thread_spawn_unchecked)]\n #![feature(once_cell)]"}, {"sha": "2fe3fb2fa5668013978287aa75086ea0d42480ce", "filename": "compiler/rustc_interface/src/util.rs", "status": "modified", "additions": 6, "deletions": 16, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a68ec2205335e2c3de8ba56fb6a31b99f10c95a6/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a68ec2205335e2c3de8ba56fb6a31b99f10c95a6/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Futil.rs?ref=a68ec2205335e2c3de8ba56fb6a31b99f10c95a6", "patch": "@@ -327,7 +327,7 @@ fn get_codegen_sysroot(maybe_sysroot: &Option<PathBuf>, backend_name: &str) -> M\n     let mut file: Option<PathBuf> = None;\n \n     let expected_names = &[\n-        format!(\"rustc_codegen_{}-{}\", backend_name, release_str().expect(\"CFG_RELEASE\")),\n+        format!(\"rustc_codegen_{}-{}\", backend_name, env!(\"CFG_RELEASE\")),\n         format!(\"rustc_codegen_{}\", backend_name),\n     ];\n     for entry in d.filter_map(|e| e.ok()) {\n@@ -554,22 +554,12 @@ pub fn build_output_filenames(\n     }\n }\n \n-/// Returns a version string such as \"1.46.0 (04488afe3 2020-08-24)\"\n-pub fn version_str() -> Option<&'static str> {\n+/// Returns a version string such as \"1.46.0 (04488afe3 2020-08-24)\" when invoked by an in-tree tool.\n+pub macro version_str() {\n     option_env!(\"CFG_VERSION\")\n }\n \n-/// Returns a version string such as \"0.12.0-dev\".\n-pub fn release_str() -> Option<&'static str> {\n-    option_env!(\"CFG_RELEASE\")\n-}\n-\n-/// Returns the full SHA1 hash of HEAD of the Git repo from which rustc was built.\n-pub fn commit_hash_str() -> Option<&'static str> {\n-    option_env!(\"CFG_VER_HASH\")\n-}\n-\n-/// Returns the \"commit date\" of HEAD of the Git repo from which rustc was built as a static string.\n-pub fn commit_date_str() -> Option<&'static str> {\n-    option_env!(\"CFG_VER_DATE\")\n+/// Returns the version string for `rustc` itself (which may be different from a tool version).\n+pub fn rustc_version_str() -> Option<&'static str> {\n+    version_str!()\n }"}, {"sha": "789dd398be50d7298da6dd2bdbfae5e9df742142", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a68ec2205335e2c3de8ba56fb6a31b99f10c95a6/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a68ec2205335e2c3de8ba56fb6a31b99f10c95a6/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=a68ec2205335e2c3de8ba56fb6a31b99f10c95a6", "patch": "@@ -326,7 +326,7 @@ impl Options {\n             crate::usage(\"rustdoc\");\n             return Err(0);\n         } else if matches.opt_present(\"version\") {\n-            rustc_driver::version(\"rustdoc\", matches);\n+            rustc_driver::version!(\"rustdoc\", matches);\n             return Err(0);\n         }\n "}, {"sha": "a60e7cb10fa515c8b4f17745808f7f8d3d575f70", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a68ec2205335e2c3de8ba56fb6a31b99f10c95a6/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a68ec2205335e2c3de8ba56fb6a31b99f10c95a6/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=a68ec2205335e2c3de8ba56fb6a31b99f10c95a6", "patch": "@@ -71,7 +71,7 @@ pub(crate) fn render<T: Print, S: Print>(\n     let mut themes: Vec<String> = style_files.iter().map(|s| s.basename().unwrap()).collect();\n     themes.sort();\n \n-    let rustdoc_version = rustc_interface::util::version_str().unwrap_or(\"unknown version\");\n+    let rustdoc_version = rustc_interface::util::version_str!().unwrap_or(\"unknown version\");\n     let content = Buffer::html().to_display(t); // Note: This must happen before making the sidebar.\n     let sidebar = Buffer::html().to_display(sidebar);\n     PageLayout {"}]}