{"sha": "48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4ZDRiYzJmYjY0Njk0NjViOTEwNGUyMDk1ZjRjMGFkMzhiN2NmYjU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-27T09:29:39Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-27T09:29:39Z"}, "message": "Rustup to rustc 1.46.0-nightly (7750c3d46 2020-06-26)", "tree": {"sha": "8c437e8ff1169334bf64df52d1578fe5abe25f71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c437e8ff1169334bf64df52d1578fe5abe25f71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5", "html_url": "https://github.com/rust-lang/rust/commit/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58ffc47bbf759fa8fd9d51a67fe4a277984054ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/58ffc47bbf759fa8fd9d51a67fe4a277984054ad", "html_url": "https://github.com/rust-lang/rust/commit/58ffc47bbf759fa8fd9d51a67fe4a277984054ad"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "d26dfd186b904ed1742a4b777a9748a6d1fc5ece", "filename": "build_sysroot/Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5/build_sysroot%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5/build_sysroot%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2FCargo.lock?ref=48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5", "patch": "@@ -51,9 +51,9 @@ dependencies = [\n \n [[package]]\n name = \"cc\"\n-version = \"1.0.54\"\n+version = \"1.0.55\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"7bbb73db36c1246e9034e307d0fba23f9a2e251faa47ade70c1bd252220c8311\"\n+checksum = \"b1be3409f94d7bdceeb5f5fac551039d9b3f00e25da7a74fc4d33400a0d96368\"\n \n [[package]]\n name = \"cfg-if\""}, {"sha": "bc5610855aea2840cb2c771d88f25ec1fa5be37c", "filename": "example/mini_core.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5/example%2Fmini_core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5/example%2Fmini_core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Fmini_core.rs?ref=48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5", "patch": "@@ -388,6 +388,7 @@ pub struct PhantomData<T: ?Sized>;\n #[lang = \"fn_once\"]\n #[rustc_paren_sugar]\n pub trait FnOnce<Args> {\n+    #[lang = \"fn_once_output\"]\n     type Output;\n \n     extern \"rust-call\" fn call_once(self, args: Args) -> Self::Output;"}, {"sha": "87ae49d6620b488c9706d62a042573e3ac82b8af", "filename": "rust-toolchain", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5/rust-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5/rust-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-toolchain?ref=48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5", "patch": "@@ -1 +1 @@\n-nightly-2020-06-23\n+nightly-2020-06-27"}, {"sha": "a70314758d0b3a631ed7208156eb35488e2477d7", "filename": "src/abi/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5", "patch": "@@ -377,9 +377,8 @@ pub(crate) fn codegen_fn_prelude<'tcx>(\n                     let local_decl = &fx.mir.local_decls[local];\n                     //                       v this ! is important\n                     let internally_mutable = !val.layout().ty.is_freeze(\n-                        fx.tcx,\n+                        fx.tcx.at(local_decl.source_info.span),\n                         ParamEnv::reveal_all(),\n-                        local_decl.source_info.span,\n                     );\n                     if local_decl.mutability == mir::Mutability::Not && !internally_mutable {\n                         // We wont mutate this argument, so it is fine to borrow the backing storage"}, {"sha": "8d2087b352831897b376811f3933f01eac027b0e", "filename": "src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5", "patch": "@@ -219,7 +219,7 @@ fn codegen_fn_content(fx: &mut FunctionCx<'_, '_, impl Backend>) {\n                 cleanup: _,\n             } => {\n                 if !fx.tcx.sess.overflow_checks() {\n-                    if let mir::AssertKind::OverflowNeg = *msg {\n+                    if let mir::AssertKind::OverflowNeg(_) = *msg {\n                         let target = fx.get_block(*target);\n                         fx.bcx.ins().jump(target, &[]);\n                         continue;"}, {"sha": "d4ec9b68ff3129eca8e98674a91b06cf71fc1d24", "filename": "src/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5", "patch": "@@ -219,7 +219,7 @@ fn data_id_for_static(\n     let is_mutable = if tcx.is_mutable_static(def_id) {\n         true\n     } else {\n-        !ty.is_freeze(tcx, ParamEnv::reveal_all(), DUMMY_SP)\n+        !ty.is_freeze(tcx.at(DUMMY_SP), ParamEnv::reveal_all())\n     };\n     let align = tcx\n         .layout_of(ParamEnv::reveal_all().and(ty))"}, {"sha": "c74ed2d306117788885eeb20b09441a430555d91", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=48d4bc2fb6469465b9104e2095f4c0ad38b7cfb5", "patch": "@@ -816,6 +816,16 @@ pub(crate) fn codegen_intrinsic_call<'tcx>(\n             ret.write_cvalue(fx, val);\n         };\n \n+        ptr_guaranteed_eq, (c a, c b) {\n+            let val = crate::num::trans_ptr_binop(fx, BinOp::Eq, a, b);\n+            ret.write_cvalue(fx, val);\n+        };\n+\n+        ptr_guaranteed_ne, (c a, c b) {\n+            let val = crate::num::trans_ptr_binop(fx, BinOp::Ne, a, b);\n+            ret.write_cvalue(fx, val);\n+        };\n+\n         caller_location, () {\n             let caller_location = fx.get_caller_location(span);\n             ret.write_cvalue(fx, caller_location);"}]}