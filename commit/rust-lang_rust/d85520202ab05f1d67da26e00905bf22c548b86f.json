{"sha": "d85520202ab05f1d67da26e00905bf22c548b86f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4NTUyMDIwMmFiMDVmMWQ2N2RhMjZlMDA5MDViZjIyYzU0OGI4NmY=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-01-28T02:37:24Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-01-28T09:22:26Z"}, "message": "In unsize_unique_expr, do not convert scratch value to lvalue.\n\nFix the issue-20055-box-trait.rs test to actually test `Box<Trait>`.\n\nFix #21695.", "tree": {"sha": "4483cabdf6c21310beff825a0a7a636d36f8fa1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4483cabdf6c21310beff825a0a7a636d36f8fa1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d85520202ab05f1d67da26e00905bf22c548b86f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d85520202ab05f1d67da26e00905bf22c548b86f", "html_url": "https://github.com/rust-lang/rust/commit/d85520202ab05f1d67da26e00905bf22c548b86f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d85520202ab05f1d67da26e00905bf22c548b86f/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b66c6dfa4a6b258d83f8eaf566e53814c7f812e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b66c6dfa4a6b258d83f8eaf566e53814c7f812e", "html_url": "https://github.com/rust-lang/rust/commit/5b66c6dfa4a6b258d83f8eaf566e53814c7f812e"}], "stats": {"total": 34, "additions": 21, "deletions": 13}, "files": [{"sha": "cde98154004dce3d4f34b85dffe10c33077bcbe4", "filename": "src/librustc_trans/trans/expr.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d85520202ab05f1d67da26e00905bf22c548b86f/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d85520202ab05f1d67da26e00905bf22c548b86f/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs?ref=d85520202ab05f1d67da26e00905bf22c548b86f", "patch": "@@ -475,11 +475,6 @@ fn apply_adjustments<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n         let info = unsized_info(bcx, k, expr.id, unboxed_ty, |t| ty::mk_uniq(tcx, t));\n         Store(bcx, info, get_len(bcx, scratch.val));\n \n-        let scratch = unpack_datum!(bcx,\n-                                    scratch.to_expr_datum().to_lvalue_datum(bcx,\n-                                                                            \"fresh_uniq_fat_ptr\",\n-                                                                            expr.id));\n-\n         DatumBlock::new(bcx, scratch.to_expr_datum())\n     }\n }"}, {"sha": "836e78b5b51439e279a97499b9cf01899096b959", "filename": "src/test/run-pass/issue-20055-box-trait.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d85520202ab05f1d67da26e00905bf22c548b86f/src%2Ftest%2Frun-pass%2Fissue-20055-box-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d85520202ab05f1d67da26e00905bf22c548b86f/src%2Ftest%2Frun-pass%2Fissue-20055-box-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-20055-box-trait.rs?ref=d85520202ab05f1d67da26e00905bf22c548b86f", "patch": "@@ -8,6 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// See Issues #20055 and #21695.\n+\n+// We are checking here that the temporaries `Box<[i8, k]>`, for `k`\n+// in 1, 2, 3, 4, that are induced by the match expression are\n+// properly handled, in that only *one* will be initialized by\n+// whichever arm is run, and subsequently dropped at the end of the\n+// statement surrounding the `match`.\n+\n trait Boo { }\n \n impl Boo for [i8; 1] { }\n@@ -16,12 +24,12 @@ impl Boo for [i8; 3] { }\n impl Boo for [i8; 4] { }\n \n pub fn foo(box_1: fn () -> Box<[i8; 1]>,\n-           box_2: fn () -> Box<[i8; 20]>,\n-           box_3: fn () -> Box<[i8; 300]>,\n-           box_4: fn () -> Box<[i8; 4000]>,\n+           box_2: fn () -> Box<[i8; 2]>,\n+           box_3: fn () -> Box<[i8; 3]>,\n+           box_4: fn () -> Box<[i8; 4]>,\n             ) {\n     println!(\"Hello World 1\");\n-    let _: Box<[i8]> = match 3 {\n+    let _: Box<Boo> = match 3 {\n         1 => box_1(),\n         2 => box_2(),\n         3 => box_3(),\n@@ -31,10 +39,10 @@ pub fn foo(box_1: fn () -> Box<[i8; 1]>,\n }\n \n pub fn main() {\n-    fn box_1() -> Box<[i8; 1]> { Box::new( [1i8] ) }\n-    fn box_2() -> Box<[i8; 20]> { Box::new( [1i8; 20] ) }\n-    fn box_3() -> Box<[i8; 300]> { Box::new( [1i8; 300] ) }\n-    fn box_4() -> Box<[i8; 4000]> { Box::new( [1i8; 4000] ) }\n+    fn box_1() -> Box<[i8; 1]> { Box::new( [1i8; 1] ) }\n+    fn box_2() -> Box<[i8; 2]> { Box::new( [1i8; 2] ) }\n+    fn box_3() -> Box<[i8; 3]> { Box::new( [1i8; 3] ) }\n+    fn box_4() -> Box<[i8; 4]> { Box::new( [1i8; 4] ) }\n \n     foo(box_1, box_2, box_3, box_4);\n }"}, {"sha": "f751be6f13bc10ac9ee5ce2fbf1b78c0670c4376", "filename": "src/test/run-pass/issue-20055-box-unsized-array.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d85520202ab05f1d67da26e00905bf22c548b86f/src%2Ftest%2Frun-pass%2Fissue-20055-box-unsized-array.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d85520202ab05f1d67da26e00905bf22c548b86f/src%2Ftest%2Frun-pass%2Fissue-20055-box-unsized-array.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-20055-box-unsized-array.rs?ref=d85520202ab05f1d67da26e00905bf22c548b86f", "patch": "@@ -8,6 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// Issue #2005: Check that boxed fixed-size arrays are properly\n+// accounted for (namely, only deallocated if they were actually\n+// created) when they appear as temporaries in unused arms of a match\n+// expression.\n+\n pub fn foo(box_1: fn () -> Box<[i8; 1]>,\n            box_2: fn () -> Box<[i8; 20]>,\n            box_3: fn () -> Box<[i8; 300]>,"}]}