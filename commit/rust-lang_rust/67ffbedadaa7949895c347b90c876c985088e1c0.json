{"sha": "67ffbedadaa7949895c347b90c876c985088e1c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3ZmZiZWRhZGFhNzk0OTg5NWMzNDdiOTBjODc2Yzk4NTA4OGUxYzA=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-04-05T21:24:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-05T21:24:12Z"}, "message": "Rollup merge of #83814 - petrochenkov:emptyexpr, r=davidtwco\n\nexpand: Do not ICE when a legacy AST-based macro attribute produces and empty expression\n\nFixes https://github.com/rust-lang/rust/issues/80251\n\nThe reported error is the same as for `let _ = #[cfg(FALSE)] EXPR;`", "tree": {"sha": "e5b1dcffd2ba8b762f1ddea1a9b65536e16d71df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5b1dcffd2ba8b762f1ddea1a9b65536e16d71df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67ffbedadaa7949895c347b90c876c985088e1c0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJga3/8CRBK7hj4Ov3rIwAAdHIIAK/vpoqItjL0xFfGX3LPINRB\nbCe7OyGoO2xUyUscFVqj+AdNhvYPXxOtFCgG61YYQaAhleC8LJFkZDhhKurgwDbY\n+l8HD5g4FMrS6aAOZB+QUFOEBCym0EALfEKtvNViywOxXAYnFydleruqSGcnHwqT\nOsTg3c1aOzt8d+J1miIFWlh170zHTefG+tGU2Y9oD6Z8KxztNmwpKPbJkD93rikx\nDlcv9xuD4yfwhaf1nBNWzuHPcrPxugqfw98kb9FmUviwHjn/fqqd+KBWOs5p/65w\nEVBNX45c+z6NdviPVML7kT0WMjx4wRgWn/EJD4FcGsmEORkTjm2nb7kXpFT/0Ig=\n=4Yb2\n-----END PGP SIGNATURE-----\n", "payload": "tree e5b1dcffd2ba8b762f1ddea1a9b65536e16d71df\nparent 76be7e20820f88a4addd70aea309e531be59096f\nparent cd22425990462d55dbd01a432dfd2aa517d5ca9c\nauthor Yuki Okushi <jtitor@2k36.org> 1617657852 +0900\ncommitter GitHub <noreply@github.com> 1617657852 +0900\n\nRollup merge of #83814 - petrochenkov:emptyexpr, r=davidtwco\n\nexpand: Do not ICE when a legacy AST-based macro attribute produces and empty expression\n\nFixes https://github.com/rust-lang/rust/issues/80251\n\nThe reported error is the same as for `let _ = #[cfg(FALSE)] EXPR;`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67ffbedadaa7949895c347b90c876c985088e1c0", "html_url": "https://github.com/rust-lang/rust/commit/67ffbedadaa7949895c347b90c876c985088e1c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67ffbedadaa7949895c347b90c876c985088e1c0/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76be7e20820f88a4addd70aea309e531be59096f", "url": "https://api.github.com/repos/rust-lang/rust/commits/76be7e20820f88a4addd70aea309e531be59096f", "html_url": "https://github.com/rust-lang/rust/commit/76be7e20820f88a4addd70aea309e531be59096f"}, {"sha": "cd22425990462d55dbd01a432dfd2aa517d5ca9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd22425990462d55dbd01a432dfd2aa517d5ca9c", "html_url": "https://github.com/rust-lang/rust/commit/cd22425990462d55dbd01a432dfd2aa517d5ca9c"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "b732e4493742b4f0dbbc6b8f4c3044570d43f2c4", "filename": "compiler/rustc_expand/src/expand.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/67ffbedadaa7949895c347b90c876c985088e1c0/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67ffbedadaa7949895c347b90c876c985088e1c0/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs?ref=67ffbedadaa7949895c347b90c876c985088e1c0", "patch": "@@ -735,7 +735,14 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n                                     });\n                                 }\n                             };\n-                            fragment_kind.expect_from_annotatables(items)\n+                            if fragment_kind == AstFragmentKind::Expr && items.is_empty() {\n+                                let msg =\n+                                    \"removing an expression is not supported in this position\";\n+                                self.cx.span_err(span, msg);\n+                                fragment_kind.dummy(span)\n+                            } else {\n+                                fragment_kind.expect_from_annotatables(items)\n+                            }\n                         }\n                         Err(mut err) => {\n                             err.emit();"}, {"sha": "d4d1a3ee71e67c00c44aef199212ed27b8c059d6", "filename": "src/test/ui/macros/attr-empty-expr.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/67ffbedadaa7949895c347b90c876c985088e1c0/src%2Ftest%2Fui%2Fmacros%2Fattr-empty-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67ffbedadaa7949895c347b90c876c985088e1c0/src%2Ftest%2Fui%2Fmacros%2Fattr-empty-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fattr-empty-expr.rs?ref=67ffbedadaa7949895c347b90c876c985088e1c0", "patch": "@@ -0,0 +1,11 @@\n+// AST-based macro attributes expanding to an empty expression produce an error and not ICE.\n+\n+#![feature(custom_test_frameworks)]\n+#![feature(stmt_expr_attributes)]\n+#![feature(test)]\n+\n+fn main() {\n+    let _ = #[test] 0; //~ ERROR removing an expression is not supported in this position\n+    let _ = #[bench] 1; //~ ERROR removing an expression is not supported in this position\n+    let _ = #[test_case] 2; //~ ERROR removing an expression is not supported in this position\n+}"}, {"sha": "53721053bcc08314a0e27e5c09aadda2fdf93b2f", "filename": "src/test/ui/macros/attr-empty-expr.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/67ffbedadaa7949895c347b90c876c985088e1c0/src%2Ftest%2Fui%2Fmacros%2Fattr-empty-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/67ffbedadaa7949895c347b90c876c985088e1c0/src%2Ftest%2Fui%2Fmacros%2Fattr-empty-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fattr-empty-expr.stderr?ref=67ffbedadaa7949895c347b90c876c985088e1c0", "patch": "@@ -0,0 +1,20 @@\n+error: removing an expression is not supported in this position\n+  --> $DIR/attr-empty-expr.rs:8:13\n+   |\n+LL |     let _ = #[test] 0;\n+   |             ^^^^^^^\n+\n+error: removing an expression is not supported in this position\n+  --> $DIR/attr-empty-expr.rs:9:13\n+   |\n+LL |     let _ = #[bench] 1;\n+   |             ^^^^^^^^\n+\n+error: removing an expression is not supported in this position\n+  --> $DIR/attr-empty-expr.rs:10:13\n+   |\n+LL |     let _ = #[test_case] 2;\n+   |             ^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+"}]}