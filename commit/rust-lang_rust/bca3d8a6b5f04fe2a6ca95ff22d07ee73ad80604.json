{"sha": "bca3d8a6b5f04fe2a6ca95ff22d07ee73ad80604", "node_id": "C_kwDOAAsO6NoAKGJjYTNkOGE2YjVmMDRmZTJhNmNhOTVmZjIyZDA3ZWU3M2FkODA2MDQ", "commit": {"author": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2022-05-05T14:50:11Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2022-05-07T15:10:30Z"}, "message": "Track if a where bound comes from a impl Trait desugar\n\nWith #93803 `impl Trait` function arguments get desugared to hidden\nwhere bounds. However, Clippy needs to know if a bound was originally a\nimpl Trait or an actual bound. This adds a field to the\n`WhereBoundPredicate` struct to keep track of this information during\nHIR lowering.", "tree": {"sha": "5bd5cb2708fdf78a097abec4d7e9d5eb16b49b70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bd5cb2708fdf78a097abec4d7e9d5eb16b49b70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bca3d8a6b5f04fe2a6ca95ff22d07ee73ad80604", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bca3d8a6b5f04fe2a6ca95ff22d07ee73ad80604", "html_url": "https://github.com/rust-lang/rust/commit/bca3d8a6b5f04fe2a6ca95ff22d07ee73ad80604", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bca3d8a6b5f04fe2a6ca95ff22d07ee73ad80604/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed8458f67a56b0f01dcdd693339c1aa2ee7fa6ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed8458f67a56b0f01dcdd693339c1aa2ee7fa6ff", "html_url": "https://github.com/rust-lang/rust/commit/ed8458f67a56b0f01dcdd693339c1aa2ee7fa6ff"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "51d5b510ab93053e155d1b6ec3cbb0ade5ceb101", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bca3d8a6b5f04fe2a6ca95ff22d07ee73ad80604/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bca3d8a6b5f04fe2a6ca95ff22d07ee73ad80604/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=bca3d8a6b5f04fe2a6ca95ff22d07ee73ad80604", "patch": "@@ -9,8 +9,8 @@ use rustc_hir::intravisit::{\n use rustc_hir::FnRetTy::Return;\n use rustc_hir::{\n     BareFnTy, BodyId, FnDecl, GenericArg, GenericBound, GenericParam, GenericParamKind, Generics, Impl, ImplItem,\n-    ImplItemKind, Item, ItemKind, LangItem, Lifetime, LifetimeName, ParamName, PolyTraitRef, TraitBoundModifier,\n-    TraitFn, TraitItem, TraitItemKind, Ty, TyKind, WherePredicate,\n+    ImplItemKind, Item, ItemKind, LangItem, Lifetime, LifetimeName, ParamName, PolyTraitRef, PredicateOrigin,\n+    TraitBoundModifier, TraitFn, TraitItem, TraitItemKind, Ty, TyKind, WherePredicate,\n };\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::hir::nested_filter as middle_nested_filter;\n@@ -145,7 +145,7 @@ fn check_fn_inner<'tcx>(\n         .filter(|param| matches!(param.kind, GenericParamKind::Type { .. }));\n     for typ in types {\n         for pred in generics.bounds_for_param(cx.tcx.hir().local_def_id(typ.hir_id)) {\n-            if pred.in_where_clause {\n+            if pred.origin == PredicateOrigin::WhereClause {\n                 // has_where_lifetimes checked that this predicate contains no lifetime.\n                 continue;\n             }"}, {"sha": "911da3997ae451160af7106915e89e3a1243c093", "filename": "clippy_lints/src/trait_bounds.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bca3d8a6b5f04fe2a6ca95ff22d07ee73ad80604/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bca3d8a6b5f04fe2a6ca95ff22d07ee73ad80604/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrait_bounds.rs?ref=bca3d8a6b5f04fe2a6ca95ff22d07ee73ad80604", "patch": "@@ -8,7 +8,8 @@ use rustc_data_structures::unhash::UnhashMap;\n use rustc_errors::Applicability;\n use rustc_hir::def::Res;\n use rustc_hir::{\n-    GenericBound, Generics, Item, ItemKind, Node, Path, PathSegment, QPath, TraitItem, Ty, TyKind, WherePredicate,\n+    GenericBound, Generics, Item, ItemKind, Node, Path, PathSegment, PredicateOrigin, QPath, TraitItem, Ty, TyKind,\n+    WherePredicate,\n };\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n@@ -95,6 +96,7 @@ impl<'tcx> LateLintPass<'tcx> for TraitBounds {\n         for predicate in item.generics.predicates {\n             if_chain! {\n                 if let WherePredicate::BoundPredicate(ref bound_predicate) = predicate;\n+                if bound_predicate.origin != PredicateOrigin::ImplTrait;\n                 if !bound_predicate.span.from_expansion();\n                 if let TyKind::Path(QPath::Resolved(_, Path { segments, .. })) = bound_predicate.bounded_ty.kind;\n                 if let Some(PathSegment {\n@@ -168,6 +170,7 @@ impl TraitBounds {\n         for bound in gen.predicates {\n             if_chain! {\n                 if let WherePredicate::BoundPredicate(ref p) = bound;\n+                if p.origin != PredicateOrigin::ImplTrait;\n                 if p.bounds.len() as u64 <= self.max_trait_bounds;\n                 if !p.span.from_expansion();\n                 if let Some(ref v) = map.insert(\n@@ -223,6 +226,7 @@ fn check_trait_bound_duplication(cx: &LateContext<'_>, gen: &'_ Generics<'_>) {\n     for predicate in gen.predicates {\n         if_chain! {\n             if let WherePredicate::BoundPredicate(ref bound_predicate) = predicate;\n+            if bound_predicate.origin != PredicateOrigin::ImplTrait;\n             if !bound_predicate.span.from_expansion();\n             if let TyKind::Path(QPath::Resolved(_, Path { segments, .. })) = bound_predicate.bounded_ty.kind;\n             if let Some(segment) = segments.first();"}]}