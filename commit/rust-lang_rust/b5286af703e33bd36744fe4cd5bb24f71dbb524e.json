{"sha": "b5286af703e33bd36744fe4cd5bb24f71dbb524e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1Mjg2YWY3MDNlMzNiZDM2NzQ0ZmU0Y2Q1YmIyNGY3MWRiYjUyNGU=", "commit": {"author": {"name": "Barosl Lee", "email": "vcs@barosl.com", "date": "2014-11-11T17:50:44Z"}, "committer": {"name": "Barosl Lee", "email": "vcs@barosl.com", "date": "2014-11-18T20:31:45Z"}, "message": "Make os::setenv() and os::unsetenv() panic if an error occurs\n\nThese functions can fail if:\n\n- EINVAL: The name is empty, or contains an '=' character\n- ENOMEM: Insufficient memory", "tree": {"sha": "65d05bc5f3b5d8777ca44f6b5687732c47629610", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65d05bc5f3b5d8777ca44f6b5687732c47629610"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5286af703e33bd36744fe4cd5bb24f71dbb524e", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5286af703e33bd36744fe4cd5bb24f71dbb524e", "html_url": "https://github.com/rust-lang/rust/commit/b5286af703e33bd36744fe4cd5bb24f71dbb524e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5286af703e33bd36744fe4cd5bb24f71dbb524e/comments", "author": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5de56b3ca1defd9206db8364ecef5f3fd8cc5b38", "url": "https://api.github.com/repos/rust-lang/rust/commits/5de56b3ca1defd9206db8364ecef5f3fd8cc5b38", "html_url": "https://github.com/rust-lang/rust/commit/5de56b3ca1defd9206db8364ecef5f3fd8cc5b38"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "b898b9a2df43ecf6fa536494960d8895b86c3e7e", "filename": "src/libstd/os.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b5286af703e33bd36744fe4cd5bb24f71dbb524e/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5286af703e33bd36744fe4cd5bb24f71dbb524e/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=b5286af703e33bd36744fe4cd5bb24f71dbb524e", "patch": "@@ -422,7 +422,9 @@ pub fn setenv<T: BytesContainer>(n: &str, v: T) {\n             with_env_lock(|| {\n                 n.with_c_str(|nbuf| {\n                     v.with_c_str(|vbuf| {\n-                        libc::funcs::posix01::unistd::setenv(nbuf, vbuf, 1);\n+                        if libc::funcs::posix01::unistd::setenv(nbuf, vbuf, 1) != 0 {\n+                            panic!(IoError::last_error());\n+                        }\n                     })\n                 })\n             })\n@@ -438,7 +440,9 @@ pub fn setenv<T: BytesContainer>(n: &str, v: T) {\n \n         unsafe {\n             with_env_lock(|| {\n-                libc::SetEnvironmentVariableW(n.as_ptr(), v.as_ptr());\n+                if libc::SetEnvironmentVariableW(n.as_ptr(), v.as_ptr()) == 0 {\n+                    panic!(IoError::last_error());\n+                }\n             })\n         }\n     }\n@@ -453,7 +457,9 @@ pub fn unsetenv(n: &str) {\n         unsafe {\n             with_env_lock(|| {\n                 n.with_c_str(|nbuf| {\n-                    libc::funcs::posix01::unistd::unsetenv(nbuf);\n+                    if libc::funcs::posix01::unistd::unsetenv(nbuf) != 0 {\n+                        panic!(IoError::last_error());\n+                    }\n                 })\n             })\n         }\n@@ -465,11 +471,14 @@ pub fn unsetenv(n: &str) {\n         n.push(0);\n         unsafe {\n             with_env_lock(|| {\n-                libc::SetEnvironmentVariableW(n.as_ptr(), ptr::null());\n+                if libc::SetEnvironmentVariableW(n.as_ptr(), ptr::null()) == 0 {\n+                    panic!(IoError::last_error());\n+                }\n             })\n         }\n     }\n-    _unsetenv(n);\n+\n+    _unsetenv(n)\n }\n \n /// Parses input according to platform conventions for the `PATH`"}]}