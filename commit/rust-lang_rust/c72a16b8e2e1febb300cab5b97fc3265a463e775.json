{"sha": "c72a16b8e2e1febb300cab5b97fc3265a463e775", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3MmExNmI4ZTJlMWZlYmIzMDBjYWI1Yjk3ZmMzMjY1YTQ2M2U3NzU=", "commit": {"author": {"name": "achernyak", "email": "artemchernyak@gmail.com", "date": "2017-05-03T14:01:49Z"}, "committer": {"name": "achernyak", "email": "artemchernyak@gmail.com", "date": "2017-05-03T14:01:49Z"}, "message": "fn_arg_names", "tree": {"sha": "e8a64c24652d97c35523312a69bdaecc28eed5a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8a64c24652d97c35523312a69bdaecc28eed5a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c72a16b8e2e1febb300cab5b97fc3265a463e775", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c72a16b8e2e1febb300cab5b97fc3265a463e775", "html_url": "https://github.com/rust-lang/rust/commit/c72a16b8e2e1febb300cab5b97fc3265a463e775", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c72a16b8e2e1febb300cab5b97fc3265a463e775/comments", "author": {"login": "hackeryarn", "id": 827709, "node_id": "MDQ6VXNlcjgyNzcwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/827709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hackeryarn", "html_url": "https://github.com/hackeryarn", "followers_url": "https://api.github.com/users/hackeryarn/followers", "following_url": "https://api.github.com/users/hackeryarn/following{/other_user}", "gists_url": "https://api.github.com/users/hackeryarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hackeryarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hackeryarn/subscriptions", "organizations_url": "https://api.github.com/users/hackeryarn/orgs", "repos_url": "https://api.github.com/users/hackeryarn/repos", "events_url": "https://api.github.com/users/hackeryarn/events{/privacy}", "received_events_url": "https://api.github.com/users/hackeryarn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hackeryarn", "id": 827709, "node_id": "MDQ6VXNlcjgyNzcwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/827709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hackeryarn", "html_url": "https://github.com/hackeryarn", "followers_url": "https://api.github.com/users/hackeryarn/followers", "following_url": "https://api.github.com/users/hackeryarn/following{/other_user}", "gists_url": "https://api.github.com/users/hackeryarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hackeryarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hackeryarn/subscriptions", "organizations_url": "https://api.github.com/users/hackeryarn/orgs", "repos_url": "https://api.github.com/users/hackeryarn/repos", "events_url": "https://api.github.com/users/hackeryarn/events{/privacy}", "received_events_url": "https://api.github.com/users/hackeryarn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a12a55f519baea94c049fcda6d14dcd56110f39d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a12a55f519baea94c049fcda6d14dcd56110f39d", "html_url": "https://github.com/rust-lang/rust/commit/a12a55f519baea94c049fcda6d14dcd56110f39d"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "591c128a16559566860f10329d152f2c2d20effb", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c72a16b8e2e1febb300cab5b97fc3265a463e775/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c72a16b8e2e1febb300cab5b97fc3265a463e775/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=c72a16b8e2e1febb300cab5b97fc3265a463e775", "patch": "@@ -158,6 +158,7 @@ pub enum DepNode<D: Clone + Debug> {\n     ConstIsRvaluePromotableToStatic(D),\n     IsMirAvailable(D),\n     ItemAttrs(D),\n+    FnArgNames(D),\n }\n \n impl<D: Clone + Debug> DepNode<D> {\n@@ -269,6 +270,7 @@ impl<D: Clone + Debug> DepNode<D> {\n             Stability(ref d) => op(d).map(Stability),\n             Deprecation(ref d) => op(d).map(Deprecation),\n             ItemAttrs(ref d) => op(d).map(ItemAttrs),\n+            FnArgNames(ref d) => op(d).map(FnArgNames),\n             ItemBodyNestedBodies(ref d) => op(d).map(ItemBodyNestedBodies),\n             ConstIsRvaluePromotableToStatic(ref d) => op(d).map(ConstIsRvaluePromotableToStatic),\n             IsMirAvailable(ref d) => op(d).map(IsMirAvailable),"}, {"sha": "00904f540617234eec351e0ae4e770b40492cc3d", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c72a16b8e2e1febb300cab5b97fc3265a463e775/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c72a16b8e2e1febb300cab5b97fc3265a463e775/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=c72a16b8e2e1febb300cab5b97fc3265a463e775", "patch": "@@ -182,7 +182,6 @@ pub trait CrateStore {\n     fn visibility(&self, def: DefId) -> ty::Visibility;\n     fn visible_parent_map<'a>(&'a self) -> ::std::cell::Ref<'a, DefIdMap<DefId>>;\n     fn item_generics_cloned(&self, def: DefId) -> ty::Generics;\n-    fn fn_arg_names(&self, did: DefId) -> Vec<ast::Name>;\n \n     // trait info\n     fn implementations_of_trait(&self, filter: Option<DefId>) -> Vec<DefId>;\n@@ -308,7 +307,6 @@ impl CrateStore for DummyCrateStore {\n     }\n     fn item_generics_cloned(&self, def: DefId) -> ty::Generics\n         { bug!(\"item_generics_cloned\") }\n-    fn fn_arg_names(&self, did: DefId) -> Vec<ast::Name> { bug!(\"fn_arg_names\") }\n \n     // trait info\n     fn implementations_of_trait(&self, filter: Option<DefId>) -> Vec<DefId> { vec![] }"}, {"sha": "43f6c94b8b09567a7e464d9545270c63b060fd82", "filename": "src/librustc/ty/maps.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c72a16b8e2e1febb300cab5b97fc3265a463e775/src%2Flibrustc%2Fty%2Fmaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c72a16b8e2e1febb300cab5b97fc3265a463e775/src%2Flibrustc%2Fty%2Fmaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps.rs?ref=c72a16b8e2e1febb300cab5b97fc3265a463e775", "patch": "@@ -341,6 +341,12 @@ impl<'tcx> QueryDescription for queries::item_attrs<'tcx> {\n     }\n }\n \n+impl<'tcx> QueryDescription for queries::fn_arg_names<'tcx> {\n+    fn describe(_: TyCtxt, _: DefId) -> String {\n+        bug!(\"fn_arg_names\")\n+    }\n+}\n+\n impl<'tcx> QueryDescription for queries::item_body_nested_bodies<'tcx> {\n     fn describe(tcx: TyCtxt, def_id: DefId) -> String {\n         format!(\"nested item bodies of `{}`\", tcx.item_path_str(def_id))\n@@ -791,6 +797,7 @@ define_maps! { <'tcx>\n     [] stability: Stability(DefId) -> Option<attr::Stability>,\n     [] deprecation: Deprecation(DefId) -> Option<attr::Deprecation>,\n     [] item_attrs: ItemAttrs(DefId) -> Rc<[ast::Attribute]>,\n+    [] fn_arg_names: FnArgNames(DefId) -> Vec<ast::Name>,\n     [] item_body_nested_bodies: ItemBodyNestedBodies(DefId) -> Rc<BTreeMap<hir::BodyId, hir::Body>>,\n     [] const_is_rvalue_promotable_to_static: ConstIsRvaluePromotableToStatic(DefId) -> bool,\n     [] is_mir_available: IsMirAvailable(DefId) -> bool,"}, {"sha": "325ba14da9c8aeb9a712970930eafdfc513fdcdf", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c72a16b8e2e1febb300cab5b97fc3265a463e775/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c72a16b8e2e1febb300cab5b97fc3265a463e775/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=c72a16b8e2e1febb300cab5b97fc3265a463e775", "patch": "@@ -114,6 +114,11 @@ provide! { <'tcx> tcx, def_id, cdata\n     stability => { cdata.get_stability(def_id.index) }\n     deprecation => { cdata.get_deprecation(def_id.index) }\n     item_attrs => { cdata.get_item_attrs(def_id.index) }\n+    // FIXME(#38501) We've skipped a `read` on the `HirBody` of\n+    // a `fn` when encoding, so the dep-tracking wouldn't work.\n+    // This is only used by rustdoc anyway, which shouldn't have\n+    // incremental recompilation ever enabled.\n+    fn_arg_names => { cdata.get_fn_arg_names(def_id.index) }\n     item_body_nested_bodies => {\n         let map: BTreeMap<_, _> = cdata.entry(def_id.index).ast.into_iter().flat_map(|ast| {\n             ast.decode(cdata).nested_bodies.decode(cdata).map(|body| (body.id(), body))\n@@ -146,16 +151,6 @@ impl CrateStore for cstore::CStore {\n         self.get_crate_data(def.krate).get_generics(def.index)\n     }\n \n-    fn fn_arg_names(&self, did: DefId) -> Vec<ast::Name>\n-    {\n-        // FIXME(#38501) We've skipped a `read` on the `HirBody` of\n-        // a `fn` when encoding, so the dep-tracking wouldn't work.\n-        // This is only used by rustdoc anyway, which shouldn't have\n-        // incremental recompilation ever enabled.\n-        assert!(!self.dep_graph.is_fully_enabled());\n-        self.get_crate_data(did.krate).get_fn_arg_names(did.index)\n-    }\n-\n     fn implementations_of_trait(&self, filter: Option<DefId>) -> Vec<DefId>\n     {\n         if let Some(def_id) = filter {"}, {"sha": "78b96e1833b6dbb9c9eed4e2f11b081002b13284", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c72a16b8e2e1febb300cab5b97fc3265a463e775/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c72a16b8e2e1febb300cab5b97fc3265a463e775/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=c72a16b8e2e1febb300cab5b97fc3265a463e775", "patch": "@@ -1179,7 +1179,7 @@ impl<'a, 'tcx> Clean<FnDecl> for (DefId, ty::PolyFnSig<'tcx>) {\n         let mut names = if cx.tcx.hir.as_local_node_id(did).is_some() {\n             vec![].into_iter()\n         } else {\n-            cx.tcx.sess.cstore.fn_arg_names(did).into_iter()\n+            cx.tcx.fn_arg_names(did).into_iter()\n         }.peekable();\n         FnDecl {\n             output: Return(sig.skip_binder().output().clean(cx)),"}]}