{"sha": "b0ab164b80f8d559cfc96e1d1d3819993672cced", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwYWIxNjRiODBmOGQ1NTljZmM5NmUxZDFkMzgxOTk5MzY3MmNjZWQ=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2015-07-10T19:03:52Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2015-07-10T19:03:52Z"}, "message": "Add trailing , for 1-tuples", "tree": {"sha": "186ea6bd9bc5eaed1413fcd224e7966b9d5fb81f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/186ea6bd9bc5eaed1413fcd224e7966b9d5fb81f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0ab164b80f8d559cfc96e1d1d3819993672cced", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0ab164b80f8d559cfc96e1d1d3819993672cced", "html_url": "https://github.com/rust-lang/rust/commit/b0ab164b80f8d559cfc96e1d1d3819993672cced", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0ab164b80f8d559cfc96e1d1d3819993672cced/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bcbd169310556cfdc7b673df7992ba660ac4d3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bcbd169310556cfdc7b673df7992ba660ac4d3a", "html_url": "https://github.com/rust-lang/rust/commit/0bcbd169310556cfdc7b673df7992ba660ac4d3a"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "22f0215f0aded53311cf7898c27eb23acedcf681", "filename": "src/libcore/fmt/builders.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b0ab164b80f8d559cfc96e1d1d3819993672cced/src%2Flibcore%2Ffmt%2Fbuilders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0ab164b80f8d559cfc96e1d1d3819993672cced/src%2Flibcore%2Ffmt%2Fbuilders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fbuilders.rs?ref=b0ab164b80f8d559cfc96e1d1d3819993672cced", "patch": "@@ -175,6 +175,12 @@ impl<'a, 'b: 'a> DebugTuple<'a, 'b> {\n     fn is_pretty(&self) -> bool {\n         self.fmt.flags() & (1 << (FlagV1::Alternate as usize)) != 0\n     }\n+\n+    /// Returns the wrapped `Formatter`.\n+    #[unstable(feature = \"debug_builder_formatter\", reason = \"recently added\")]\n+    pub fn formatter(&mut self) -> &mut fmt::Formatter<'b> {\n+        &mut self.fmt\n+    }\n }\n \n struct DebugInner<'a, 'b: 'a> {"}, {"sha": "29a2f76ef290b4dcee37738e1781fd4bb195a412", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b0ab164b80f8d559cfc96e1d1d3819993672cced/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0ab164b80f8d559cfc96e1d1d3819993672cced/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=b0ab164b80f8d559cfc96e1d1d3819993672cced", "patch": "@@ -1490,7 +1490,16 @@ macro_rules! tuple {\n             fn fmt(&self, f: &mut Formatter) -> Result {\n                 let mut builder = f.debug_tuple(\"\");\n                 let ($(ref $name,)*) = *self;\n-                $(builder.field($name);)*\n+                let mut n = 0;\n+                $(\n+                    builder.field($name);\n+                    n += 1;\n+                )*\n+\n+                if n == 1 {\n+                    try!(write!(builder.formatter(), \",\"));\n+                }\n+\n                 builder.finish()\n             }\n         }"}, {"sha": "4fe5e0a740bf7007c37f08c1da63f4ffc11e5702", "filename": "src/libcoretest/tuple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0ab164b80f8d559cfc96e1d1d3819993672cced/src%2Flibcoretest%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0ab164b80f8d559cfc96e1d1d3819993672cced/src%2Flibcoretest%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Ftuple.rs?ref=b0ab164b80f8d559cfc96e1d1d3819993672cced", "patch": "@@ -60,7 +60,7 @@ fn test_tuple_cmp() {\n #[test]\n fn test_show() {\n     let s = format!(\"{:?}\", (1,));\n-    assert_eq!(s, \"(1)\");\n+    assert_eq!(s, \"(1,)\");\n     let s = format!(\"{:?}\", (1, true));\n     assert_eq!(s, \"(1, true)\");\n     let s = format!(\"{:?}\", (1, \"hi\", true));"}]}