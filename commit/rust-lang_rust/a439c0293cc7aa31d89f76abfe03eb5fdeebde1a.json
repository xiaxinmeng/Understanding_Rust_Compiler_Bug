{"sha": "a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "node_id": "C_kwDOAAsO6NoAKGE0MzljMDI5M2NjN2FhMzFkODlmNzZhYmZlMDNlYjVmZGVlYmRlMWE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-07T23:55:51Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-08T00:00:18Z"}, "message": "may not => cannot", "tree": {"sha": "7a510809a171a74ab6b0deed79b3851287052a52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a510809a171a74ab6b0deed79b3851287052a52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "html_url": "https://github.com/rust-lang/rust/commit/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a521db67e2935e5a46c7b95b511ab9a43be5770", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a521db67e2935e5a46c7b95b511ab9a43be5770", "html_url": "https://github.com/rust-lang/rust/commit/1a521db67e2935e5a46c7b95b511ab9a43be5770"}], "stats": {"total": 108, "additions": 54, "deletions": 54}, "files": [{"sha": "dfd083442aed2551e872170357af7aa4539b2562", "filename": "compiler/rustc_hir_analysis/locales/en-US.ftl", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/compiler%2Frustc_hir_analysis%2Flocales%2Fen-US.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/compiler%2Frustc_hir_analysis%2Flocales%2Fen-US.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Flocales%2Fen-US.ftl?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -89,14 +89,14 @@ hir_analysis_missing_type_params =\n     .note = because of the default `Self` reference, type parameters must be specified on object types\n \n hir_analysis_copy_impl_on_type_with_dtor =\n-    the trait `Copy` may not be implemented for this type; the type has a destructor\n+    the trait `Copy` cannot be implemented for this type; the type has a destructor\n     .label = `Copy` not allowed on types with destructors\n \n hir_analysis_multiple_relaxed_default_bounds =\n     type parameter has more than one relaxed default bound, only one is supported\n \n hir_analysis_copy_impl_on_non_adt =\n-    the trait `Copy` may not be implemented for this type\n+    the trait `Copy` cannot be implemented for this type\n     .label = type is not a structure or enumeration\n \n hir_analysis_const_impl_for_non_const_trait ="}, {"sha": "852c5768399cf2a015c7d6dc3344440693af6a18", "filename": "compiler/rustc_hir_analysis/src/coherence/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Fbuiltin.rs?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -86,7 +86,7 @@ fn visit_implementation_of_copy(tcx: TyCtxt<'_>, impl_did: LocalDefId) {\n                 tcx.sess,\n                 span,\n                 E0204,\n-                \"the trait `Copy` may not be implemented for this type\"\n+                \"the trait `Copy` cannot be implemented for this type\"\n             );\n \n             // We'll try to suggest constraining type parameters to fulfill the requirements of"}, {"sha": "2c537bf4064ae9b7c5645423c879ca0f091fc893", "filename": "compiler/rustc_hir_typeck/locales/en-US.ftl", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/compiler%2Frustc_hir_typeck%2Flocales%2Fen-US.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/compiler%2Frustc_hir_typeck%2Flocales%2Fen-US.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Flocales%2Fen-US.ftl?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -4,14 +4,14 @@ hir_typeck_field_multiply_specified_in_initializer =\n     .previous_use_label = first use of `{$ident}`\n \n hir_typeck_copy_impl_on_type_with_dtor =\n-    the trait `Copy` may not be implemented for this type; the type has a destructor\n+    the trait `Copy` cannot be implemented for this type; the type has a destructor\n     .label = `Copy` not allowed on types with destructors\n \n hir_typeck_multiple_relaxed_default_bounds =\n     type parameter has more than one relaxed default bound, only one is supported\n \n hir_typeck_copy_impl_on_non_adt =\n-    the trait `Copy` may not be implemented for this type\n+    the trait `Copy` cannot be implemented for this type\n     .label = type is not a structure or enumeration\n \n hir_typeck_trait_object_declared_with_no_traits ="}, {"sha": "427146941ade87e5ce86130fd71c9976eabb2611", "filename": "library/core/src/marker.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/library%2Fcore%2Fsrc%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/library%2Fcore%2Fsrc%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmarker.rs?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -324,7 +324,7 @@ pub trait StructuralEq {\n /// attempt to derive a `Copy` implementation, we'll get an error:\n ///\n /// ```text\n-/// the trait `Copy` may not be implemented for this type; field `points` does not implement `Copy`\n+/// the trait `Copy` cannot be implemented for this type; field `points` does not implement `Copy`\n /// ```\n ///\n /// Shared references (`&T`) are also `Copy`, so a type can be `Copy`, even when it holds"}, {"sha": "21dbc606321ff07fee620f694f2aec59d72bc005", "filename": "tests/ui/coherence/coherence-impls-copy.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fcoherence%2Fcoherence-impls-copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fcoherence%2Fcoherence-impls-copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcoherence%2Fcoherence-impls-copy.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -52,19 +52,19 @@ LL | impl Copy for [MyType] {}\n    |\n    = note: define and implement a trait or new type instead\n \n-error[E0206]: the trait `Copy` may not be implemented for this type\n+error[E0206]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/coherence-impls-copy.rs:21:15\n    |\n LL | impl Copy for &'static mut MyType {}\n    |               ^^^^^^^^^^^^^^^^^^^ type is not a structure or enumeration\n \n-error[E0206]: the trait `Copy` may not be implemented for this type\n+error[E0206]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/coherence-impls-copy.rs:25:15\n    |\n LL | impl Copy for (MyType, MyType) {}\n    |               ^^^^^^^^^^^^^^^^ type is not a structure or enumeration\n \n-error[E0206]: the trait `Copy` may not be implemented for this type\n+error[E0206]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/coherence-impls-copy.rs:30:15\n    |\n LL | impl Copy for [MyType] {}"}, {"sha": "97fd3f719bfbfdd474f430b218bacc5eaca60265", "filename": "tests/ui/coherence/deep-bad-copy-reason.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fcoherence%2Fdeep-bad-copy-reason.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fcoherence%2Fdeep-bad-copy-reason.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcoherence%2Fdeep-bad-copy-reason.rs?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -31,7 +31,7 @@ impl<'tcx, T> Clone for List<'tcx, T> {\n }\n \n impl<'tcx, T> Copy for List<'tcx, T> {}\n-//~^ ERROR the trait `Copy` may not be implemented for this type\n+//~^ ERROR the trait `Copy` cannot be implemented for this type\n \n fn assert_is_copy<T: Copy>() {}\n "}, {"sha": "7b6dd4b380f6f27b75e327e173606f8fb6a7c5f4", "filename": "tests/ui/coherence/deep-bad-copy-reason.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fcoherence%2Fdeep-bad-copy-reason.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fcoherence%2Fdeep-bad-copy-reason.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcoherence%2Fdeep-bad-copy-reason.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,4 +1,4 @@\n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/deep-bad-copy-reason.rs:33:24\n    |\n LL | pub struct List<'tcx, T>(Interned<'tcx, ListS<T>>);"}, {"sha": "52f1f30a4087df73abaf2393ce99115bbd0963c8", "filename": "tests/ui/error-codes/E0184.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Ferror-codes%2FE0184.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Ferror-codes%2FE0184.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferror-codes%2FE0184.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,4 +1,4 @@\n-error[E0184]: the trait `Copy` may not be implemented for this type; the type has a destructor\n+error[E0184]: the trait `Copy` cannot be implemented for this type; the type has a destructor\n   --> $DIR/E0184.rs:1:10\n    |\n LL | #[derive(Copy)]"}, {"sha": "74738d81015ebed089cf52325b2c23b841b315b7", "filename": "tests/ui/error-codes/E0206.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Ferror-codes%2FE0206.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Ferror-codes%2FE0206.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferror-codes%2FE0206.rs?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -2,7 +2,7 @@\n struct Bar;\n \n impl Copy for &'static mut Bar { }\n-//~^ ERROR the trait `Copy` may not be implemented for this type\n+//~^ ERROR the trait `Copy` cannot be implemented for this type\n \n fn main() {\n }"}, {"sha": "60d8d7bfe983d36047028ad494aa429300fcaa49", "filename": "tests/ui/error-codes/E0206.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Ferror-codes%2FE0206.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Ferror-codes%2FE0206.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferror-codes%2FE0206.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,4 +1,4 @@\n-error[E0206]: the trait `Copy` may not be implemented for this type\n+error[E0206]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/E0206.rs:4:15\n    |\n LL | impl Copy for &'static mut Bar { }"}, {"sha": "210ecaed7567d6c276c686b827d9fe9a871c9389", "filename": "tests/ui/exclusive-drop-and-copy.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fexclusive-drop-and-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fexclusive-drop-and-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexclusive-drop-and-copy.rs?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,13 +1,13 @@\n // issue #20126\n \n-#[derive(Copy, Clone)] //~ ERROR the trait `Copy` may not be implemented\n+#[derive(Copy, Clone)] //~ ERROR the trait `Copy` cannot be implemented\n struct Foo;\n \n impl Drop for Foo {\n     fn drop(&mut self) {}\n }\n \n-#[derive(Copy, Clone)] //~ ERROR the trait `Copy` may not be implemented\n+#[derive(Copy, Clone)] //~ ERROR the trait `Copy` cannot be implemented\n struct Bar<T>(::std::marker::PhantomData<T>);\n \n impl<T> Drop for Bar<T> {"}, {"sha": "546079422a7330b68675868eeb29a1a71630155e", "filename": "tests/ui/exclusive-drop-and-copy.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fexclusive-drop-and-copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fexclusive-drop-and-copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexclusive-drop-and-copy.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,12 +1,12 @@\n-error[E0184]: the trait `Copy` may not be implemented for this type; the type has a destructor\n+error[E0184]: the trait `Copy` cannot be implemented for this type; the type has a destructor\n   --> $DIR/exclusive-drop-and-copy.rs:3:10\n    |\n LL | #[derive(Copy, Clone)]\n    |          ^^^^ `Copy` not allowed on types with destructors\n    |\n    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0184]: the trait `Copy` may not be implemented for this type; the type has a destructor\n+error[E0184]: the trait `Copy` cannot be implemented for this type; the type has a destructor\n   --> $DIR/exclusive-drop-and-copy.rs:10:10\n    |\n LL | #[derive(Copy, Clone)]"}, {"sha": "aff37d95a3f3eb3f2719d751405d76d5503f11f9", "filename": "tests/ui/issues/issue-27340.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fissues%2Fissue-27340.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fissues%2Fissue-27340.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-27340.rs?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,6 +1,6 @@\n struct Foo;\n #[derive(Copy, Clone)]\n-//~^ ERROR the trait `Copy` may not be implemented for this type\n+//~^ ERROR the trait `Copy` cannot be implemented for this type\n struct Bar(Foo);\n \n fn main() {}"}, {"sha": "9caaffd9c9a215cff7a8c20ad354870a6b7af48e", "filename": "tests/ui/issues/issue-27340.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fissues%2Fissue-27340.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fissues%2Fissue-27340.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-27340.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,4 +1,4 @@\n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/issue-27340.rs:2:10\n    |\n LL | #[derive(Copy, Clone)]"}, {"sha": "d0257b5745d8baa0a70639f40263e6a6100cb8d9", "filename": "tests/ui/opt-in-copy.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fopt-in-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fopt-in-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fopt-in-copy.rs?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -5,7 +5,7 @@ struct IWantToCopyThis {\n }\n \n impl Copy for IWantToCopyThis {}\n-//~^ ERROR the trait `Copy` may not be implemented for this type\n+//~^ ERROR the trait `Copy` cannot be implemented for this type\n \n enum CantCopyThisEither {\n     A,\n@@ -17,6 +17,6 @@ enum IWantToCopyThisToo {\n }\n \n impl Copy for IWantToCopyThisToo {}\n-//~^ ERROR the trait `Copy` may not be implemented for this type\n+//~^ ERROR the trait `Copy` cannot be implemented for this type\n \n fn main() {}"}, {"sha": "258ff16e6e485decff9032d1d6a46c9605893244", "filename": "tests/ui/opt-in-copy.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fopt-in-copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fopt-in-copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fopt-in-copy.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,4 +1,4 @@\n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/opt-in-copy.rs:7:15\n    |\n LL |     but_i_cant: CantCopyThis,\n@@ -7,7 +7,7 @@ LL |     but_i_cant: CantCopyThis,\n LL | impl Copy for IWantToCopyThis {}\n    |               ^^^^^^^^^^^^^^^\n \n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/opt-in-copy.rs:19:15\n    |\n LL |     ButICant(CantCopyThisEither),"}, {"sha": "0829fc2ce9b8c8ced24c899e2df9d10ca2eb66a8", "filename": "tests/ui/range/range_traits-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Frange%2Frange_traits-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Frange%2Frange_traits-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange%2Frange_traits-2.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,4 +1,4 @@\n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/range_traits-2.rs:3:10\n    |\n LL | #[derive(Copy, Clone)]"}, {"sha": "db19d1baec994b060ffee1924e934a14677a84e3", "filename": "tests/ui/range/range_traits-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Frange%2Frange_traits-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Frange%2Frange_traits-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange%2Frange_traits-3.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,4 +1,4 @@\n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/range_traits-3.rs:3:10\n    |\n LL | #[derive(Copy, Clone)]"}, {"sha": "dfc74f87ca715bf807d400b1d114c45e95af3bc7", "filename": "tests/ui/range/range_traits-6.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Frange%2Frange_traits-6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Frange%2Frange_traits-6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange%2Frange_traits-6.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,4 +1,4 @@\n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/range_traits-6.rs:3:10\n    |\n LL | #[derive(Copy, Clone)]"}, {"sha": "8793a05c8a85a986f52e598d767e10d354d5f594", "filename": "tests/ui/span/E0204.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fspan%2FE0204.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fspan%2FE0204.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fspan%2FE0204.rs?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -2,9 +2,9 @@ struct Foo {\n     foo: Vec<u32>,\n }\n \n-impl Copy for Foo { } //~ ERROR may not be implemented for this type\n+impl Copy for Foo { } //~ ERROR cannot be implemented for this type\n \n-#[derive(Copy)] //~ ERROR may not be implemented for this type\n+#[derive(Copy)] //~ ERROR cannot be implemented for this type\n struct Foo2<'a> {\n     ty: &'a mut bool,\n }\n@@ -14,9 +14,9 @@ enum EFoo {\n     Baz,\n }\n \n-impl Copy for EFoo { } //~ ERROR may not be implemented for this type\n+impl Copy for EFoo { } //~ ERROR cannot be implemented for this type\n \n-#[derive(Copy)] //~ ERROR may not be implemented for this type\n+#[derive(Copy)] //~ ERROR cannot be implemented for this type\n enum EFoo2<'a> {\n     Bar(&'a mut bool),\n     Baz,"}, {"sha": "3a0afb541ba8de5413f88f28e2c4d700f780244f", "filename": "tests/ui/span/E0204.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fspan%2FE0204.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fspan%2FE0204.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fspan%2FE0204.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,4 +1,4 @@\n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/E0204.rs:5:15\n    |\n LL |     foo: Vec<u32>,\n@@ -7,7 +7,7 @@ LL |     foo: Vec<u32>,\n LL | impl Copy for Foo { }\n    |               ^^^\n \n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/E0204.rs:7:10\n    |\n LL | #[derive(Copy)]\n@@ -18,7 +18,7 @@ LL |     ty: &'a mut bool,\n    |\n    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/E0204.rs:17:15\n    |\n LL |     Bar { x: Vec<u32> },\n@@ -27,7 +27,7 @@ LL |     Bar { x: Vec<u32> },\n LL | impl Copy for EFoo { }\n    |               ^^^^\n \n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/E0204.rs:19:10\n    |\n LL | #[derive(Copy)]"}, {"sha": "47b35b412c037fbd62f078a27ab499feacebe229", "filename": "tests/ui/suggestions/missing-bound-in-derive-copy-impl-3.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.fixed?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -7,7 +7,7 @@ pub struct Vector2<T: Debug + Copy + Clone>{\n     pub y: T\n }\n \n-#[derive(Debug, Copy, Clone)] //~ ERROR the trait `Copy` may not be implemented for this type\n+#[derive(Debug, Copy, Clone)] //~ ERROR the trait `Copy` cannot be implemented for this type\n pub struct AABB<K: Copy + Debug>{\n     pub loc: Vector2<K>,\n     pub size: Vector2<K>"}, {"sha": "771e9105c6211e3174ac4599af9a21ad98da115c", "filename": "tests/ui/suggestions/missing-bound-in-derive-copy-impl-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.rs?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -7,7 +7,7 @@ pub struct Vector2<T: Debug + Copy + Clone>{\n     pub y: T\n }\n \n-#[derive(Debug, Copy, Clone)] //~ ERROR the trait `Copy` may not be implemented for this type\n+#[derive(Debug, Copy, Clone)] //~ ERROR the trait `Copy` cannot be implemented for this type\n pub struct AABB<K: Copy>{\n     pub loc: Vector2<K>,\n     pub size: Vector2<K>"}, {"sha": "83bc65ea1c8d239bcabfbf1395f264f125f168f9", "filename": "tests/ui/suggestions/missing-bound-in-derive-copy-impl-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,4 +1,4 @@\n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/missing-bound-in-derive-copy-impl-3.rs:10:17\n    |\n LL | #[derive(Debug, Copy, Clone)]"}, {"sha": "9c7b7ba099c43c3acf05e198bd760a26d70a8a6f", "filename": "tests/ui/suggestions/missing-bound-in-derive-copy-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl.rs?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -6,7 +6,7 @@ pub struct Vector2<T: Debug + Copy + Clone>{\n     pub y: T\n }\n \n-#[derive(Debug, Copy, Clone)] //~ ERROR the trait `Copy` may not be implemented for this type\n+#[derive(Debug, Copy, Clone)] //~ ERROR the trait `Copy` cannot be implemented for this type\n pub struct AABB<K>{\n     pub loc: Vector2<K>,\n     pub size: Vector2<K>"}, {"sha": "65dc3113731230a71196f60c0bc33eb29f0527c6", "filename": "tests/ui/suggestions/missing-bound-in-derive-copy-impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,4 +1,4 @@\n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/missing-bound-in-derive-copy-impl.rs:9:17\n    |\n LL | #[derive(Debug, Copy, Clone)]"}, {"sha": "f32c61a99bb8cb4a23d51989288f0e26a6416309", "filename": "tests/ui/suggestions/missing-bound-in-manual-copy-impl-2.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl-2.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl-2.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl-2.fixed?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -14,6 +14,6 @@ impl<T: std::fmt::Display> Clone for OnlyCopyIfDisplay<T> {\n impl<T: std::fmt::Display> Copy for OnlyCopyIfDisplay<T> {}\n \n impl<S: std::fmt::Display> Copy for Wrapper<OnlyCopyIfDisplay<S>> {}\n-//~^ ERROR the trait `Copy` may not be implemented for this type\n+//~^ ERROR the trait `Copy` cannot be implemented for this type\n \n fn main() {}"}, {"sha": "d7725f4a3743d2dab6f0fcf0d4954fc099ccb5a2", "filename": "tests/ui/suggestions/missing-bound-in-manual-copy-impl-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl-2.rs?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -14,6 +14,6 @@ impl<T: std::fmt::Display> Clone for OnlyCopyIfDisplay<T> {\n impl<T: std::fmt::Display> Copy for OnlyCopyIfDisplay<T> {}\n \n impl<S> Copy for Wrapper<OnlyCopyIfDisplay<S>> {}\n-//~^ ERROR the trait `Copy` may not be implemented for this type\n+//~^ ERROR the trait `Copy` cannot be implemented for this type\n \n fn main() {}"}, {"sha": "856d8db381bd8ba3bfd703881d4078c9f4e90aa7", "filename": "tests/ui/suggestions/missing-bound-in-manual-copy-impl-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl-2.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,4 +1,4 @@\n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/missing-bound-in-manual-copy-impl-2.rs:16:18\n    |\n LL | struct Wrapper<T>(T);"}, {"sha": "1139b315313fca8c8a8d235e76c7f8ae319f1217", "filename": "tests/ui/suggestions/missing-bound-in-manual-copy-impl.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl.fixed?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -4,6 +4,6 @@\n struct Wrapper<T>(T);\n \n impl<S: Copy> Copy for Wrapper<S> {}\n-//~^ ERROR the trait `Copy` may not be implemented for this type\n+//~^ ERROR the trait `Copy` cannot be implemented for this type\n \n fn main() {}"}, {"sha": "19549248efc23d734bd97f9713c9c074da7cc79b", "filename": "tests/ui/suggestions/missing-bound-in-manual-copy-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl.rs?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -4,6 +4,6 @@\n struct Wrapper<T>(T);\n \n impl<S> Copy for Wrapper<S> {}\n-//~^ ERROR the trait `Copy` may not be implemented for this type\n+//~^ ERROR the trait `Copy` cannot be implemented for this type\n \n fn main() {}"}, {"sha": "ec3e4f23a649ead61e22825f709751018e18bc9d", "filename": "tests/ui/suggestions/missing-bound-in-manual-copy-impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fmissing-bound-in-manual-copy-impl.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,4 +1,4 @@\n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/missing-bound-in-manual-copy-impl.rs:6:18\n    |\n LL | struct Wrapper<T>(T);"}, {"sha": "130425211841351ea2c61a825df6ac77c6f138a0", "filename": "tests/ui/traits/copy-is-not-modulo-regions.not_static.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Ftraits%2Fcopy-is-not-modulo-regions.not_static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Ftraits%2Fcopy-is-not-modulo-regions.not_static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fcopy-is-not-modulo-regions.not_static.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,4 +1,4 @@\n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/copy-is-not-modulo-regions.rs:13:21\n    |\n LL | struct Bar<'lt>(Foo<'lt>);"}, {"sha": "b899083747afa84fc2379e2c7439e3e09779a6bb", "filename": "tests/ui/traits/copy-is-not-modulo-regions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Ftraits%2Fcopy-is-not-modulo-regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Ftraits%2Fcopy-is-not-modulo-regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fcopy-is-not-modulo-regions.rs?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -11,7 +11,7 @@ struct Bar<'lt>(Foo<'lt>);\n \n #[cfg(not_static)]\n impl<'any> Copy for Bar<'any> {}\n-//[not_static]~^ the trait `Copy` may not be implemented for this type\n+//[not_static]~^ the trait `Copy` cannot be implemented for this type\n \n #[cfg(yes_static)]\n impl<'any> Copy for Bar<'static> {}"}, {"sha": "683a85a32c1c6667194c701321bee15c6407eb7c", "filename": "tests/ui/traits/issue-50480.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Ftraits%2Fissue-50480.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Ftraits%2Fissue-50480.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fissue-50480.rs?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,13 +1,13 @@\n #[derive(Clone, Copy)]\n-//~^ ERROR the trait `Copy` may not be implemented for this type\n+//~^ ERROR the trait `Copy` cannot be implemented for this type\n struct Foo(N, NotDefined, <i32 as Iterator>::Item, Vec<i32>, String);\n //~^ ERROR cannot find type `NotDefined` in this scope\n //~| ERROR cannot find type `NotDefined` in this scope\n //~| ERROR cannot find type `N` in this scope\n //~| ERROR cannot find type `N` in this scope\n \n #[derive(Clone, Copy)]\n-//~^ ERROR the trait `Copy` may not be implemented for this type\n+//~^ ERROR the trait `Copy` cannot be implemented for this type\n struct Bar<T>(T, N, NotDefined, <i32 as Iterator>::Item, Vec<i32>, String);\n //~^ ERROR cannot find type `NotDefined` in this scope\n //~| ERROR cannot find type `N` in this scope"}, {"sha": "4f72db60a164770233ddf2f779d01834b9159718", "filename": "tests/ui/traits/issue-50480.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Ftraits%2Fissue-50480.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Ftraits%2Fissue-50480.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fissue-50480.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -60,7 +60,7 @@ error[E0412]: cannot find type `NotDefined` in this scope\n LL | struct Bar<T>(T, N, NotDefined, <i32 as Iterator>::Item, Vec<i32>, String);\n    |                     ^^^^^^^^^^ not found in this scope\n \n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/issue-50480.rs:1:17\n    |\n LL | #[derive(Clone, Copy)]\n@@ -73,7 +73,7 @@ LL | struct Foo(N, NotDefined, <i32 as Iterator>::Item, Vec<i32>, String);\n    |\n    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/issue-50480.rs:9:17\n    |\n LL | #[derive(Clone, Copy)]"}, {"sha": "7ad0a11c6ac6e99e933218ecf491c252bf620a3e", "filename": "tests/ui/union/union-copy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Funion%2Funion-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Funion%2Funion-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funion%2Funion-copy.rs?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -9,6 +9,6 @@ union W {\n }\n \n impl Copy for U {} // OK\n-impl Copy for W {} //~ ERROR the trait `Copy` may not be implemented for this type\n+impl Copy for W {} //~ ERROR the trait `Copy` cannot be implemented for this type\n \n fn main() {}"}, {"sha": "ff6fa48db90fd6530738d62eb66f3b0cc7f494d4", "filename": "tests/ui/union/union-copy.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Funion%2Funion-copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a439c0293cc7aa31d89f76abfe03eb5fdeebde1a/tests%2Fui%2Funion%2Funion-copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funion%2Funion-copy.stderr?ref=a439c0293cc7aa31d89f76abfe03eb5fdeebde1a", "patch": "@@ -1,4 +1,4 @@\n-error[E0204]: the trait `Copy` may not be implemented for this type\n+error[E0204]: the trait `Copy` cannot be implemented for this type\n   --> $DIR/union-copy.rs:12:15\n    |\n LL |     a: std::mem::ManuallyDrop<String>"}]}