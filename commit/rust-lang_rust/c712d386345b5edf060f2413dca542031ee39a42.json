{"sha": "c712d386345b5edf060f2413dca542031ee39a42", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3MTJkMzg2MzQ1YjVlZGYwNjBmMjQxM2RjYTU0MjAzMWVlMzlhNDI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-15T16:23:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-15T16:23:45Z"}, "message": "Rollup merge of #59955 - RalfJung:stdsimd, r=alexcrichton\n\nbump stdsimd; make intra_doc_link_resolution_failure an error again; make lints more consistent\n\nI made `intra_doc_link_resolution_failure` warn so that it would properly respect `deny-warnings = false` in `config.toml`.  `#[warn]` still become errors with `-D warnings` so I thought this was fine.\n\nTurns out however that we don't pass `-D warnings` when running rustdoc, so for additional rustdoc-lints we need to set them to `deny`.\n\nAlso sue the opportunity to make the lint flags more consistent between libcore, liballoc, libstd.\n\nCc @gnzlbg for the *big* stdsimd update.", "tree": {"sha": "33e92d918b3b113a5f33732f86c6cae75209d600", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33e92d918b3b113a5f33732f86c6cae75209d600"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c712d386345b5edf060f2413dca542031ee39a42", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJctLARCRBK7hj4Ov3rIwAAdHIIAK0U72XIvzEdC+ADbJQTeoUk\n2kxovtOatN71VZzdMOFBdcgBwlEoCaulo5sa+h4CwT1h+0/4iM6J9glmniogA4MM\nZ3xRpgjTCS27kKmaLkZoAOxKczvcHiine3h/EJ/uyB32jILkWj+4yfr/7dfBuyZO\n9tIwdhEebquQI6+1YJjeO5F8sW9PLYT+7QyBTd+1Q7igdJBSNE+NYq4hUwfZ03qw\n6dMvitn/yWlL1EqIj4Xtc54redABf3vSxwGXFMDT3Tx6/SPBCtKOPejODmHifknk\nWN2bcCYkX4tW3DsLM+8vNJ6+M9QFZpY+DssCsgC01VBeEwSG1ho+LsebW1DqfJ4=\n=JtHB\n-----END PGP SIGNATURE-----\n", "payload": "tree 33e92d918b3b113a5f33732f86c6cae75209d600\nparent cf1697f7266885ea704fda09c6d244ee74f459f9\nparent 50c615baa2c09694f0ba446c53777e98db88ed01\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1555345425 +0200\ncommitter GitHub <noreply@github.com> 1555345425 +0200\n\nRollup merge of #59955 - RalfJung:stdsimd, r=alexcrichton\n\nbump stdsimd; make intra_doc_link_resolution_failure an error again; make lints more consistent\n\nI made `intra_doc_link_resolution_failure` warn so that it would properly respect `deny-warnings = false` in `config.toml`.  `#[warn]` still become errors with `-D warnings` so I thought this was fine.\n\nTurns out however that we don't pass `-D warnings` when running rustdoc, so for additional rustdoc-lints we need to set them to `deny`.\n\nAlso sue the opportunity to make the lint flags more consistent between libcore, liballoc, libstd.\n\nCc @gnzlbg for the *big* stdsimd update.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c712d386345b5edf060f2413dca542031ee39a42", "html_url": "https://github.com/rust-lang/rust/commit/c712d386345b5edf060f2413dca542031ee39a42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c712d386345b5edf060f2413dca542031ee39a42/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf1697f7266885ea704fda09c6d244ee74f459f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf1697f7266885ea704fda09c6d244ee74f459f9", "html_url": "https://github.com/rust-lang/rust/commit/cf1697f7266885ea704fda09c6d244ee74f459f9"}, {"sha": "50c615baa2c09694f0ba446c53777e98db88ed01", "url": "https://api.github.com/repos/rust-lang/rust/commits/50c615baa2c09694f0ba446c53777e98db88ed01", "html_url": "https://github.com/rust-lang/rust/commit/50c615baa2c09694f0ba446c53777e98db88ed01"}], "stats": {"total": 32, "additions": 23, "deletions": 9}, "files": [{"sha": "d5e15b3719c2e6cb89cb377c7515730ff8e80698", "filename": "src/liballoc/borrow.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c712d386345b5edf060f2413dca542031ee39a42/src%2Fliballoc%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c712d386345b5edf060f2413dca542031ee39a42/src%2Fliballoc%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fborrow.rs?ref=c712d386345b5edf060f2413dca542031ee39a42", "patch": "@@ -32,6 +32,7 @@ impl<'a, B: ?Sized> Borrow<B> for Cow<'a, B>\n /// from any borrow of a given type.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait ToOwned {\n+    /// The resulting type after obtaining ownership.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     type Owned: Borrow<Self>;\n "}, {"sha": "8a3950718d7d26d8cb85e2ca065fb4924f9c1d2a", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c712d386345b5edf060f2413dca542031ee39a42/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c712d386345b5edf060f2413dca542031ee39a42/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=c712d386345b5edf060f2413dca542031ee39a42", "patch": "@@ -760,6 +760,7 @@ impl<A, F: Fn<A> + ?Sized> Fn<A> for Box<F> {\n #[unstable(feature = \"fnbox\",\n            reason = \"will be deprecated if and when `Box<FnOnce>` becomes usable\", issue = \"28796\")]\n pub trait FnBox<A>: FnOnce<A> {\n+    /// Performs the call operation.\n     fn call_box(self: Box<Self>, args: A) -> Self::Output;\n }\n "}, {"sha": "63b3fbbdaefe1fcbd4676407a46829e076de55a1", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c712d386345b5edf060f2413dca542031ee39a42/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c712d386345b5edf060f2413dca542031ee39a42/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=c712d386345b5edf060f2413dca542031ee39a42", "patch": "@@ -58,12 +58,13 @@\n #![no_std]\n #![needs_allocator]\n \n-#![deny(rust_2018_idioms)]\n-#![allow(explicit_outlives_requirements)]\n-\n #![warn(deprecated_in_future)]\n-#![warn(intra_doc_link_resolution_failure)]\n+#![warn(missing_docs)]\n #![warn(missing_debug_implementations)]\n+#![deny(intra_doc_link_resolution_failure)] // rustdoc is run without -D warnings\n+\n+#![deny(rust_2018_idioms)]\n+#![allow(explicit_outlives_requirements)]\n \n #![cfg_attr(not(test), feature(generator_trait))]\n #![cfg_attr(test, feature(test))]"}, {"sha": "6eac848740106b63c17d7f43dd2f9349c9e71d0c", "filename": "src/liballoc/slice.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c712d386345b5edf060f2413dca542031ee39a42/src%2Fliballoc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c712d386345b5edf060f2413dca542031ee39a42/src%2Fliballoc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fslice.rs?ref=c712d386345b5edf060f2413dca542031ee39a42", "patch": "@@ -570,6 +570,16 @@ pub trait SliceConcatExt<T: ?Sized> {\n     #[stable(feature = \"rename_connect_to_join\", since = \"1.3.0\")]\n     fn join(&self, sep: &T) -> Self::Output;\n \n+    /// Flattens a slice of `T` into a single value `Self::Output`, placing a\n+    /// given separator between each.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// # #![allow(deprecated)]\n+    /// assert_eq!([\"hello\", \"world\"].connect(\" \"), \"hello world\");\n+    /// assert_eq!([[1, 2], [3, 4]].connect(&0), [1, 2, 0, 3, 4]);\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[rustc_deprecated(since = \"1.3.0\", reason = \"renamed to join\")]\n     fn connect(&self, sep: &T) -> Self::Output;"}, {"sha": "615549f47bbd6516350341bcba4f0f58c4c10fc9", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c712d386345b5edf060f2413dca542031ee39a42/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c712d386345b5edf060f2413dca542031ee39a42/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=c712d386345b5edf060f2413dca542031ee39a42", "patch": "@@ -60,8 +60,8 @@\n \n #![warn(deprecated_in_future)]\n #![warn(missing_docs)]\n-#![warn(intra_doc_link_resolution_failure)]\n #![warn(missing_debug_implementations)]\n+#![deny(intra_doc_link_resolution_failure)] // rustdoc is run without -D warnings\n \n #![feature(allow_internal_unstable)]\n #![feature(arbitrary_self_types)]"}, {"sha": "62bc1991cc93c8e48bf829f7dd04d205d2d29437", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c712d386345b5edf060f2413dca542031ee39a42/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c712d386345b5edf060f2413dca542031ee39a42/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=c712d386345b5edf060f2413dca542031ee39a42", "patch": "@@ -205,9 +205,10 @@\n // Don't link to std. We are std.\n #![no_std]\n \n-#![deny(missing_docs)]\n-#![deny(intra_doc_link_resolution_failure)]\n-#![deny(missing_debug_implementations)]\n+//#![warn(deprecated_in_future)] // FIXME: std still has quite a few uses of `mem::uninitialized`\n+#![warn(missing_docs)]\n+#![warn(missing_debug_implementations)]\n+#![deny(intra_doc_link_resolution_failure)] // rustdoc is run without -D warnings\n \n #![deny(rust_2018_idioms)]\n #![allow(explicit_outlives_requirements)]"}, {"sha": "2323a858f060a0d2a39786a619885608017d538f", "filename": "src/stdsimd", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstdsimd?ref=c712d386345b5edf060f2413dca542031ee39a42", "patch": "@@ -1 +1 @@\n-Subproject commit 2792b45c975880038240d477adb0d66f760ac048\n+Subproject commit 2323a858f060a0d2a39786a619885608017d538f"}]}