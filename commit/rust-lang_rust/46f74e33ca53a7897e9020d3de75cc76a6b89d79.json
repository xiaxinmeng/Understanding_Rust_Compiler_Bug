{"sha": "46f74e33ca53a7897e9020d3de75cc76a6b89d79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2Zjc0ZTMzY2E1M2E3ODk3ZTkwMjBkM2RlNzVjYzc2YTZiODlkNzk=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-08T19:48:48Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-08T19:48:48Z"}, "message": "Merge #471\n\n471: rename crates to match reality  r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "2bc001c8ecf58b49ac9a0da1f20d5644ce29fb3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bc001c8ecf58b49ac9a0da1f20d5644ce29fb3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46f74e33ca53a7897e9020d3de75cc76a6b89d79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46f74e33ca53a7897e9020d3de75cc76a6b89d79", "html_url": "https://github.com/rust-lang/rust/commit/46f74e33ca53a7897e9020d3de75cc76a6b89d79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46f74e33ca53a7897e9020d3de75cc76a6b89d79/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "4f4f7933b1b7ff34f8633b1686b18b2d1b994c47", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f4f7933b1b7ff34f8633b1686b18b2d1b994c47", "html_url": "https://github.com/rust-lang/rust/commit/4f4f7933b1b7ff34f8633b1686b18b2d1b994c47"}, {"sha": "0c62b1bb7a49bf527780ce1f8cade5eb4fbfdb2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c62b1bb7a49bf527780ce1f8cade5eb4fbfdb2d", "html_url": "https://github.com/rust-lang/rust/commit/0c62b1bb7a49bf527780ce1f8cade5eb4fbfdb2d"}], "stats": {"total": 236, "additions": 132, "deletions": 104}, "files": [{"sha": "9c404f4c3ddb669851e5bdb3be92e0bd93d88365", "filename": "ARCHITECTURE.md", "status": "modified", "additions": 31, "deletions": 26, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/ARCHITECTURE.md", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/ARCHITECTURE.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ARCHITECTURE.md?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -15,7 +15,7 @@ More specifically, input data consists of a set of test files (`(PathBuf,\n String)` pairs) and an information about project structure, the so called\n `CrateGraph`. Crate graph specifies which files are crate roots, which cfg flags\n are specified for each crate (TODO: actually implement this) and what are\n-dependencies between the crate. The analyzer keeps all these input data in\n+dependencies between the crates. The analyzer keeps all these input data in\n memory and never does any IO. Because the input data is source code, which\n typically measures in tens of megabytes at most, keeping all input data in\n memory is OK.\n@@ -74,9 +74,9 @@ notes.\n - `algo`: generic tree algorithms, including `walk` for O(1) stack\n   space tree traversal (this is cool) and `visit` for type-driven\n   visiting the nodes (this is double plus cool, if you understand how\n-  `Visitor` works, you understand rust-analyzer).\n+  `Visitor` works, you understand the design of syntax trees).\n \n-Test for ra_syntax are mostly data-driven: `tests/data/parser` contains a bunch of `.rs`\n+Tests for ra_syntax are mostly data-driven: `tests/data/parser` contains a bunch of `.rs`\n (test vectors) and `.txt` files with corresponding syntax trees. During testing, we check\n `.rs` against `.txt`. If the `.txt` file is missing, it is created (this is how you update\n tests). Additionally, running `cargo gen-tests` will walk the grammar module and collect\n@@ -107,41 +107,46 @@ guessing a HIR for a particular source position.\n \n Underneath, HIR works on top of salsa, using a `HirDatabase` trait.\n \n-### `crates/ra_analysis`\n+### `crates/ra_ide_api`\n \n-A stateful library for analyzing many Rust files as they change.\n-`AnalysisHost` is a mutable entity (clojure's atom) which holds the\n-current state, incorporates changes and handles out `Analysis` --- an\n-immutable and consistent snapshot of world state at a point in time, which\n-actually powers analysis.\n+A stateful library for analyzing many Rust files as they change. `AnalysisHost`\n+is a mutable entity (clojure's atom) which holds the current state, incorporates\n+changes and handles out `Analysis` --- an immutable and consistent snapshot of\n+world state at a point in time, which actually powers analysis.\n \n-One interesting aspect of analysis is its support for cancellation. When a change\n-is applied to `AnalysisHost`, first all currently active snapshots are\n+One interesting aspect of analysis is its support for cancellation. When a\n+change is applied to `AnalysisHost`, first all currently active snapshots are\n cancelled. Only after all snapshots are dropped the change actually affects the\n database.\n \n-### `crates/ra_lsp_server`\n-\n-An LSP implementation which uses `ra_analysis` for managing state and\n-`ra_editor` for actually doing useful stuff.\n-\n-See [#79](https://github.com/rust-analyzer/rust-analyzer/pull/79/) as an\n-example of PR which adds a new feature to `ra_editor` and exposes it\n-to `ra_lsp_server`.\n+APIs in this crate are IDE centric: they take text offsets as input and produce\n+offsets and strings as output. This works on top of rich code model powered by\n+`hir`.\n \n-### `crates/ra_editor`\n+### `crates/ra_ide_api_light`\n \n-All IDE features which can be implemented if you only have access to a\n-single file. `ra_editor` could be used to enhance editing of Rust code\n-without the need to fiddle with build-systems, file\n-synchronization and such.\n+All IDE features which can be implemented if you only have access to a single\n+file. `ra_ide_api_light` could be used to enhance editing of Rust code without\n+the need to fiddle with build-systems, file synchronization and such.\n \n-In a sense, `ra_editor` is just a bunch of pure functions which take a\n+In a sense, `ra_ide_api_light` is just a bunch of pure functions which take a\n syntax tree as input.\n \n-The tests for `ra_editor` are `#[cfg(test)] mod tests` unit-tests spread\n+The tests for `ra_ide_api_light` are `#[cfg(test)] mod tests` unit-tests spread\n throughout its modules.\n \n+\n+### `crates/ra_lsp_server`\n+\n+An LSP implementation which wraps `ra_ide_api` into a langauge server protocol.\n+\n+### `crates/ra_vfs`\n+\n+Although `hir` and `ra_ide_api` don't do any io, we need to be able to read\n+files from disk at the end of the day. This is what `ra_vfs` does. It also\n+manages overlays: \"dirty\" files in the editor, whose \"true\" contents is\n+different from data on disk.\n+\n ### `crates/gen_lsp_server`\n \n A language server scaffold, exposing a synchronous crossbeam-channel based API."}, {"sha": "354cc138b96baaca4074f8ef4bdd45cc1de27a41", "filename": "Cargo.lock", "status": "modified", "additions": 52, "deletions": 42, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -171,7 +171,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"crossbeam-utils 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rand 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smallvec 0.6.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -548,7 +548,7 @@ version = \"0.4.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rand 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smallvec 0.6.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -636,27 +636,6 @@ dependencies = [\n  \"proc-macro2 0.4.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"ra_analysis\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"fst 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"ra_db 0.1.0\",\n- \"ra_editor 0.1.0\",\n- \"ra_hir 0.1.0\",\n- \"ra_syntax 0.1.0\",\n- \"ra_text_edit 0.1.0\",\n- \"rayon 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"salsa 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"test_utils 0.1.0\",\n- \"unicase 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"ra_arena\"\n version = \"0.1.0\"\n@@ -668,7 +647,7 @@ dependencies = [\n  \"clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"join_to_string 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"ra_editor 0.1.0\",\n+ \"ra_ide_api_light 0.1.0\",\n  \"ra_syntax 0.1.0\",\n  \"tools 0.1.0\",\n ]\n@@ -687,35 +666,56 @@ dependencies = [\n ]\n \n [[package]]\n-name = \"ra_editor\"\n+name = \"ra_hir\"\n version = \"0.1.0\"\n dependencies = [\n- \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"join_to_string 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"proptest 0.8.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"ena 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"flexi_logger 0.10.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"ra_arena 0.1.0\",\n+ \"ra_db 0.1.0\",\n  \"ra_syntax 0.1.0\",\n- \"ra_text_edit 0.1.0\",\n+ \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"superslice 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"salsa 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"test_utils 0.1.0\",\n ]\n \n [[package]]\n-name = \"ra_hir\"\n+name = \"ra_ide_api\"\n version = \"0.1.0\"\n dependencies = [\n- \"arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"ena 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"flexi_logger 0.10.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"fst 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"ra_arena 0.1.0\",\n  \"ra_db 0.1.0\",\n+ \"ra_hir 0.1.0\",\n+ \"ra_ide_api_light 0.1.0\",\n  \"ra_syntax 0.1.0\",\n+ \"ra_text_edit 0.1.0\",\n+ \"rayon 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"salsa 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"test_utils 0.1.0\",\n+ \"unicase 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"ra_ide_api_light\"\n+version = \"0.1.0\"\n+dependencies = [\n+ \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"join_to_string 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"proptest 0.8.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"ra_syntax 0.1.0\",\n+ \"ra_text_edit 0.1.0\",\n+ \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"superslice 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"test_utils 0.1.0\",\n ]\n \n [[package]]\n@@ -733,7 +733,7 @@ dependencies = [\n  \"languageserver-types 0.53.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"ra_analysis 0.1.0\",\n+ \"ra_ide_api 0.1.0\",\n  \"ra_syntax 0.1.0\",\n  \"ra_text_edit 0.1.0\",\n  \"ra_vfs 0.1.0\",\n@@ -806,7 +806,7 @@ dependencies = [\n \n [[package]]\n name = \"rand\"\n-version = \"0.6.3\"\n+version = \"0.6.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"autocfg 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -815,7 +815,7 @@ dependencies = [\n  \"rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rand_os 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_os 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_pcg 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -861,13 +861,14 @@ dependencies = [\n \n [[package]]\n name = \"rand_os\"\n-version = \"0.1.0\"\n+version = \"0.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -909,6 +910,14 @@ dependencies = [\n  \"num_cpus 1.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"rdrand\"\n+version = \"0.4.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"redox_syscall\"\n version = \"0.1.50\"\n@@ -1164,7 +1173,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rand 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"redox_syscall 0.1.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"remove_dir_all 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1551,17 +1560,18 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9274b940887ce9addde99c4eee6b5c44cc494b182b97e73dc8ffdcb3397fd3f0\"\n \"checksum quote 0.6.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"53fa22a1994bd0f9372d7a816207d8a2677ad0325b073f5c5332760f0fb62b5c\"\n \"checksum rand 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e464cd887e869cddcae8792a4ee31d23c7edd516700695608f5b98c67ee0131c\"\n-\"checksum rand 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b65e163105a6284f841bd23100a015895f54340e88a5ffc9ca7b8b33827cfce0\"\n+\"checksum rand 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3906503e80ac6cbcacb2c2973fa8e473f24d7e2747c8c92bb230c2441cad96b5\"\n \"checksum rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"556d3a1ca6600bfcbab7c7c91ccb085ac7fbbcd70e008a98742e7847f4f7bcef\"\n \"checksum rand_core 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1961a422c4d189dfb50ffa9320bf1f2a9bd54ecb92792fb9477f99a1045f3372\"\n \"checksum rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0905b6b7079ec73b314d4c748701f6931eb79fd97c668caa3f1899b22b32c6db\"\n \"checksum rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7b40677c7be09ae76218dc623efbf7b18e34bced3f38883af07bb75630a21bc4\"\n \"checksum rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ded997c9d5f13925be2a6fd7e66bf1872597f759fd9dd93513dd7e92e5a5ee08\"\n-\"checksum rand_os 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"de5ac4de1c2973e1391dc305cb0fbf8788cb58068e98255439b7485a77022273\"\n+\"checksum rand_os 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f46fbd5550acf75b0c2730f5dd1873751daf9beb8f11b44027778fae50d7feca\"\n \"checksum rand_pcg 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"086bd09a33c7044e56bb44d5bdde5a60e7f119a9e95b0775f545de759a32fe05\"\n \"checksum rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cbf7e9e623549b0e21f6e97cf8ecf247c1a8fd2e8a992ae265314300b2455d5c\"\n \"checksum rayon 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"373814f27745b2686b350dd261bfd24576a6fb0e2c5919b3a2b6005f820b0473\"\n \"checksum rayon-core 1.4.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b055d1e92aba6877574d8fe604a63c8b5df60f60e5982bf7ccbb1338ea527356\"\n+\"checksum rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"678054eb77286b51581ba43620cc911abf02758c91f93f479767aed0f90458b2\"\n \"checksum redox_syscall 0.1.50 (registry+https://github.com/rust-lang/crates.io-index)\" = \"52ee9a534dc1301776eff45b4fa92d2c39b1d8c3d3357e6eb593e0d795506fc2\"\n \"checksum redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7e891cfe48e9100a70a3b6eb652fef28920c117d366339687bd5576160db0f76\"\n \"checksum regex 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"37e7cbbd370869ce2e8dff25c7018702d10b21a20ef7135316f8daecd6c25b7f\""}, {"sha": "eb1722d5e77e1fd47bcb86d96a6d0bb202b8cb2c", "filename": "crates/ra_cli/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_cli%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_cli%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2FCargo.toml?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -10,5 +10,5 @@ clap = \"2.32.0\"\n failure = \"0.1.4\"\n join_to_string = \"0.1.1\"\n ra_syntax = { path = \"../ra_syntax\" }\n-ra_editor = { path = \"../ra_editor\" }\n+ra_ide_api_light = { path = \"../ra_ide_api_light\" }\n tools = { path = \"../tools\" }"}, {"sha": "43fb2fc4ce03e36de9b959154f23603bcbcc6247", "filename": "crates/ra_cli/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_cli%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_cli%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fmain.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -2,7 +2,7 @@ use std::{fs, io::Read, path::Path, time::Instant};\n \n use clap::{App, Arg, SubCommand};\n use join_to_string::join;\n-use ra_editor::{extend_selection, file_structure, syntax_tree};\n+use ra_ide_api_light::{extend_selection, file_structure, syntax_tree};\n use ra_syntax::{SourceFile, TextRange, TreePtr, AstNode};\n use tools::collect_tests;\n "}, {"sha": "e680d9fc374b3a304e47e45fe90082e15e46a328", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -1,4 +1,4 @@\n-//! ra_db defines basic database traits. Concrete DB is defined by ra_analysis.\n+//! ra_db defines basic database traits. Concrete DB is defined by ra_ide_api.\n mod cancelation;\n mod syntax_ptr;\n mod input;"}, {"sha": "d42a664b65bf38f50ada35e7a255628cbec1e94d", "filename": "crates/ra_ide_api/Cargo.toml", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2FCargo.toml?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -1,6 +1,6 @@\n [package]\n edition = \"2018\"\n-name = \"ra_analysis\"\n+name = \"ra_ide_api\"\n version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n \n@@ -16,7 +16,7 @@ parking_lot = \"0.7.0\"\n unicase = \"2.2.0\"\n \n ra_syntax = { path = \"../ra_syntax\" }\n-ra_editor = { path = \"../ra_editor\" }\n+ra_ide_api_light = { path = \"../ra_ide_api_light\" }\n ra_text_edit = { path = \"../ra_text_edit\" }\n ra_db = { path = \"../ra_db\" }\n hir = { path = \"../ra_hir\", package = \"ra_hir\" }", "previous_filename": "crates/ra_analysis/Cargo.toml"}, {"sha": "27b760780ca8f91dc6431c6dba829a46118d9476", "filename": "crates/ra_ide_api/src/call_info.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_analysis/src/call_info.rs"}, {"sha": "ce777a771e2e1a1c968b4a432311cca1b712d095", "filename": "crates/ra_ide_api/src/completion.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_analysis/src/completion.rs"}, {"sha": "5d4e60dc525c40c39ad415da5d2bd58b3c0e44f9", "filename": "crates/ra_ide_api/src/completion/complete_dot.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_analysis/src/completion/complete_dot.rs"}, {"sha": "c1739e47eab5f04673ce5db26bdb28b0ac6fcd1a", "filename": "crates/ra_ide_api/src/completion/complete_fn_param.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_analysis/src/completion/complete_fn_param.rs"}, {"sha": "d350f06ceb60f2551cff11f6cb8932e040edc925", "filename": "crates/ra_ide_api/src/completion/complete_keyword.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_analysis/src/completion/complete_keyword.rs"}, {"sha": "4723a65a6b0645f197233ab397b7001fce944fb7", "filename": "crates/ra_ide_api/src/completion/complete_path.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_analysis/src/completion/complete_path.rs"}, {"sha": "ee9052d3d5d558231fcdec776da826c4e2306ec2", "filename": "crates/ra_ide_api/src/completion/complete_scope.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_analysis/src/completion/complete_scope.rs"}, {"sha": "a495751dda02e4c4a3a2fab4f2481147437eca86", "filename": "crates/ra_ide_api/src/completion/complete_snippet.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_analysis/src/completion/complete_snippet.rs"}, {"sha": "01786bb69e91d695ae855f7bd2ba158bd7b3dc7b", "filename": "crates/ra_ide_api/src/completion/completion_context.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_analysis/src/completion/completion_context.rs"}, {"sha": "a25b87beefee403b6f985c0f0114ee2d4e30af9a", "filename": "crates/ra_ide_api/src/completion/completion_item.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_analysis/src/completion/completion_item.rs"}, {"sha": "9d46609ecfd51bd324cf35b10e5e186a793f1547", "filename": "crates/ra_ide_api/src/db.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdb.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_analysis/src/db.rs"}, {"sha": "c3c809c9fe3369c09af8d9ade57ad9e97821fc76", "filename": "crates/ra_ide_api/src/extend_selection.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fextend_selection.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -14,7 +14,7 @@ pub(crate) fn extend_selection(db: &RootDatabase, frange: FileRange) -> TextRang\n     if let Some(range) = extend_selection_in_macro(db, &source_file, frange) {\n         return range;\n     }\n-    ra_editor::extend_selection(source_file.syntax(), frange.range).unwrap_or(frange.range)\n+    ra_ide_api_light::extend_selection(source_file.syntax(), frange.range).unwrap_or(frange.range)\n }\n \n fn extend_selection_in_macro(\n@@ -25,7 +25,7 @@ fn extend_selection_in_macro(\n     let macro_call = find_macro_call(source_file.syntax(), frange.range)?;\n     let (off, exp) = hir::MacroDef::ast_expand(macro_call)?;\n     let dst_range = exp.map_range_forward(frange.range - off)?;\n-    let dst_range = ra_editor::extend_selection(&exp.syntax(), dst_range)?;\n+    let dst_range = ra_ide_api_light::extend_selection(&exp.syntax(), dst_range)?;\n     let src_range = exp.map_range_back(dst_range)? + off;\n     Some(src_range)\n }", "previous_filename": "crates/ra_analysis/src/extend_selection.rs"}, {"sha": "fcd8d315e24ad53013ec6249d2b60cbd06f050be", "filename": "crates/ra_ide_api/src/goto_defenition.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fgoto_defenition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fgoto_defenition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fgoto_defenition.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_analysis/src/goto_defenition.rs"}, {"sha": "475524ee1827549a44c6e490604e1bf607232d80", "filename": "crates/ra_ide_api/src/hover.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fhover.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_analysis/src/hover.rs"}, {"sha": "7c60ab7d6f4ec1b0c65df96a08bb22440b8cd967", "filename": "crates/ra_ide_api/src/imp.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fimp.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -6,7 +6,7 @@ use hir::{\n     self, Problem, source_binder,\n };\n use ra_db::{FilesDatabase, SourceRoot, SourceRootId, SyntaxDatabase};\n-use ra_editor::{self, assists, LocalEdit, Severity};\n+use ra_ide_api_light::{self, assists, LocalEdit, Severity};\n use ra_syntax::{\n     TextRange, AstNode, SourceFile,\n     ast::{self, NameOwner},\n@@ -194,7 +194,7 @@ impl db::RootDatabase {\n     pub(crate) fn diagnostics(&self, file_id: FileId) -> Cancelable<Vec<Diagnostic>> {\n         let syntax = self.source_file(file_id);\n \n-        let mut res = ra_editor::diagnostics(&syntax)\n+        let mut res = ra_ide_api_light::diagnostics(&syntax)\n             .into_iter()\n             .map(|d| Diagnostic {\n                 range: d.range,", "previous_filename": "crates/ra_analysis/src/imp.rs"}, {"sha": "7e9ca20341ef86ddfa60bb27ad512ca85b23b13a", "filename": "crates/ra_ide_api/src/lib.rs", "status": "renamed", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -1,8 +1,14 @@\n-//! ra_analyzer crate provides \"ide-centric\" APIs for the rust-analyzer. What\n-//! powers this API are the `RootDatabase` struct, which defines a `salsa`\n+//! ra_ide_api crate provides \"ide-centric\" APIs for the rust-analyzer. That is,\n+//! it generally operates with files and text ranges, and returns results as\n+//! Strings, suitable for displaying to the human.\n+//!\n+//! What powers this API are the `RootDatabase` struct, which defines a `salsa`\n //! database, and the `ra_hir` crate, where majority of the analysis happens.\n //! However, IDE specific bits of the analysis (most notably completion) happen\n //! in this crate.\n+//!\n+//! The sibling `ra_ide_api_light` handles thouse bits of IDE functionality\n+//! which are restricted to a single file and need only syntax.\n macro_rules! ctry {\n     ($expr:expr) => {\n         match $expr {\n@@ -44,7 +50,7 @@ pub use crate::{\n     completion::{CompletionItem, CompletionItemKind, InsertText},\n     runnables::{Runnable, RunnableKind},\n };\n-pub use ra_editor::{\n+pub use ra_ide_api_light::{\n     Fold, FoldKind, HighlightedRange, Severity, StructureNode,\n     LineIndex, LineCol, translate_offset_with_edit,\n };\n@@ -336,51 +342,54 @@ impl Analysis {\n     /// Returns position of the mathcing brace (all types of braces are\n     /// supported).\n     pub fn matching_brace(&self, file: &SourceFile, offset: TextUnit) -> Option<TextUnit> {\n-        ra_editor::matching_brace(file, offset)\n+        ra_ide_api_light::matching_brace(file, offset)\n     }\n     /// Returns a syntax tree represented as `String`, for debug purposes.\n     // FIXME: use a better name here.\n     pub fn syntax_tree(&self, file_id: FileId) -> String {\n         let file = self.db.source_file(file_id);\n-        ra_editor::syntax_tree(&file)\n+        ra_ide_api_light::syntax_tree(&file)\n     }\n     /// Returns an edit to remove all newlines in the range, cleaning up minor\n     /// stuff like trailing commas.\n     pub fn join_lines(&self, frange: FileRange) -> SourceChange {\n         let file = self.db.source_file(frange.file_id);\n-        SourceChange::from_local_edit(frange.file_id, ra_editor::join_lines(&file, frange.range))\n+        SourceChange::from_local_edit(\n+            frange.file_id,\n+            ra_ide_api_light::join_lines(&file, frange.range),\n+        )\n     }\n     /// Returns an edit which should be applied when opening a new line, fixing\n     /// up minor stuff like continuing the comment.\n     pub fn on_enter(&self, position: FilePosition) -> Option<SourceChange> {\n         let file = self.db.source_file(position.file_id);\n-        let edit = ra_editor::on_enter(&file, position.offset)?;\n+        let edit = ra_ide_api_light::on_enter(&file, position.offset)?;\n         Some(SourceChange::from_local_edit(position.file_id, edit))\n     }\n     /// Returns an edit which should be applied after `=` was typed. Primarily,\n     /// this works when adding `let =`.\n     // FIXME: use a snippet completion instead of this hack here.\n     pub fn on_eq_typed(&self, position: FilePosition) -> Option<SourceChange> {\n         let file = self.db.source_file(position.file_id);\n-        let edit = ra_editor::on_eq_typed(&file, position.offset)?;\n+        let edit = ra_ide_api_light::on_eq_typed(&file, position.offset)?;\n         Some(SourceChange::from_local_edit(position.file_id, edit))\n     }\n     /// Returns an edit which should be applied when a dot ('.') is typed on a blank line, indenting the line appropriately.\n     pub fn on_dot_typed(&self, position: FilePosition) -> Option<SourceChange> {\n         let file = self.db.source_file(position.file_id);\n-        let edit = ra_editor::on_dot_typed(&file, position.offset)?;\n+        let edit = ra_ide_api_light::on_dot_typed(&file, position.offset)?;\n         Some(SourceChange::from_local_edit(position.file_id, edit))\n     }\n     /// Returns a tree representation of symbols in the file. Useful to draw a\n     /// file outline.\n     pub fn file_structure(&self, file_id: FileId) -> Vec<StructureNode> {\n         let file = self.db.source_file(file_id);\n-        ra_editor::file_structure(&file)\n+        ra_ide_api_light::file_structure(&file)\n     }\n     /// Returns the set of folding ranges.\n     pub fn folding_ranges(&self, file_id: FileId) -> Vec<Fold> {\n         let file = self.db.source_file(file_id);\n-        ra_editor::folding_ranges(&file)\n+        ra_ide_api_light::folding_ranges(&file)\n     }\n     /// Fuzzy searches for a symbol.\n     pub fn symbol_search(&self, query: Query) -> Cancelable<Vec<NavigationTarget>> {", "previous_filename": "crates/ra_analysis/src/lib.rs"}, {"sha": "846c76cfe7ae2abf668b5ac26c86a918a8461588", "filename": "crates/ra_ide_api/src/mock_analysis.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fmock_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fmock_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fmock_analysis.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_analysis/src/mock_analysis.rs"}, {"sha": "98b1d2d5521170cc57d3ab4767d8da72a37500b3", "filename": "crates/ra_ide_api/src/runnables.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Frunnables.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_analysis/src/runnables.rs"}, {"sha": "8dd15b40e573b413f618dd4637e40d37160de90e", "filename": "crates/ra_ide_api/src/symbol_index.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_analysis/src/symbol_index.rs"}, {"sha": "cb19e9515a14f1e4ca34d136b79b073dd753afe7", "filename": "crates/ra_ide_api/src/syntax_highlighting.rs", "status": "renamed", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -1,22 +1,21 @@\n use ra_syntax::{ast, AstNode,};\n-use ra_editor::HighlightedRange;\n use ra_db::SyntaxDatabase;\n \n use crate::{\n+    FileId, Cancelable, HighlightedRange,\n     db::RootDatabase,\n-    FileId, Cancelable,\n };\n \n pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Cancelable<Vec<HighlightedRange>> {\n     let source_file = db.source_file(file_id);\n-    let mut res = ra_editor::highlight(source_file.syntax());\n+    let mut res = ra_ide_api_light::highlight(source_file.syntax());\n     for macro_call in source_file\n         .syntax()\n         .descendants()\n         .filter_map(ast::MacroCall::cast)\n     {\n         if let Some((off, exp)) = hir::MacroDef::ast_expand(macro_call) {\n-            let mapped_ranges = ra_editor::highlight(&exp.syntax())\n+            let mapped_ranges = ra_ide_api_light::highlight(&exp.syntax())\n                 .into_iter()\n                 .filter_map(|r| {\n                     let mapped_range = exp.map_range_back(r.range)?;", "previous_filename": "crates/ra_analysis/src/syntax_highlighting.rs"}, {"sha": "d1dc07e5b590de9587ff26c8f8c093237c89b232", "filename": "crates/ra_ide_api/tests/test/main.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Ftests%2Ftest%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Ftests%2Ftest%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Ftests%2Ftest%2Fmain.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -3,7 +3,7 @@ mod runnables;\n use ra_syntax::TextRange;\n use test_utils::{assert_eq_dbg, assert_eq_text};\n \n-use ra_analysis::{\n+use ra_ide_api::{\n     mock_analysis::{analysis_and_position, single_file, single_file_with_position, MockAnalysis},\n     AnalysisChange, CrateGraph, FileId, Query\n };", "previous_filename": "crates/ra_analysis/tests/test/main.rs"}, {"sha": "da8d5e0d5dd0a22cee05709ffe1f4125a4d186ae", "filename": "crates/ra_ide_api/tests/test/runnables.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Ftests%2Ftest%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api%2Ftests%2Ftest%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Ftests%2Ftest%2Frunnables.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -1,6 +1,6 @@\n use test_utils::assert_eq_dbg;\n \n-use ra_analysis::mock_analysis::analysis_and_position;\n+use ra_ide_api::mock_analysis::analysis_and_position;\n \n #[test]\n fn test_runnables() {", "previous_filename": "crates/ra_analysis/tests/test/runnables.rs"}, {"sha": "8c192fca6c02096f52140926b91dc8bb69e0f0aa", "filename": "crates/ra_ide_api_light/Cargo.toml", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2FCargo.toml?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -1,6 +1,6 @@\n [package]\n edition = \"2018\"\n-name = \"ra_editor\"\n+name = \"ra_ide_api_light\"\n version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n publish = false", "previous_filename": "crates/ra_editor/Cargo.toml"}, {"sha": "83eabfc859fa85ddcad8c0c15b3d5a9da4281734", "filename": "crates/ra_ide_api_light/src/assists.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fassists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fassists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fassists.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_editor/src/assists.rs"}, {"sha": "6e964d011bdfe4445522b0567fcf9b8347dd2607", "filename": "crates/ra_ide_api_light/src/assists/add_derive.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fadd_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fadd_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fadd_derive.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_editor/src/assists/add_derive.rs"}, {"sha": "2eda7cae2080032bb53cbf1848d50c8bd1eb8876", "filename": "crates/ra_ide_api_light/src/assists/add_impl.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fadd_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fadd_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fadd_impl.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_editor/src/assists/add_impl.rs"}, {"sha": "89729e2c251aed548ecb12d4de773be8c5699430", "filename": "crates/ra_ide_api_light/src/assists/change_visibility.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fchange_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fchange_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fchange_visibility.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_editor/src/assists/change_visibility.rs"}, {"sha": "a343413cc5789e7e6a89e3e32513a214f3b0e2d0", "filename": "crates/ra_ide_api_light/src/assists/flip_comma.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fflip_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fflip_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fflip_comma.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_editor/src/assists/flip_comma.rs"}, {"sha": "523ec7034f2da3bd4f56289990f379b58dfa742a", "filename": "crates/ra_ide_api_light/src/assists/introduce_variable.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fintroduce_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fintroduce_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fintroduce_variable.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_editor/src/assists/introduce_variable.rs"}, {"sha": "30c37148010d3ea7fbeaac6a36bf576fb36d4b55", "filename": "crates/ra_ide_api_light/src/assists/replace_if_let_with_match.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Freplace_if_let_with_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Freplace_if_let_with_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Freplace_if_let_with_match.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_editor/src/assists/replace_if_let_with_match.rs"}, {"sha": "e4015f07da66aa974f799fc4bb7df6f4fa3fb438", "filename": "crates/ra_ide_api_light/src/assists/split_import.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fsplit_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fsplit_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fsplit_import.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_editor/src/assists/split_import.rs"}, {"sha": "2b695dfdfc486e151bf4a5a03845c0997b0f650f", "filename": "crates/ra_ide_api_light/src/diagnostics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fdiagnostics.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_editor/src/diagnostics.rs"}, {"sha": "08cae5a51616f7e62ae8b607721dd9ee2eb26de8", "filename": "crates/ra_ide_api_light/src/extend_selection.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fextend_selection.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_editor/src/extend_selection.rs"}, {"sha": "6f310688939b07fdcbb5d3016ec174709eddfde8", "filename": "crates/ra_ide_api_light/src/folding_ranges.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Ffolding_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Ffolding_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Ffolding_ranges.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_editor/src/folding_ranges.rs"}, {"sha": "40638eda8e3da7724c283ba1a6ed09aeb48273c8", "filename": "crates/ra_ide_api_light/src/lib.rs", "status": "renamed", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Flib.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -1,3 +1,8 @@\n+//! This crate provides thouse IDE features which use only a single file.\n+//!\n+//! This usually means functions which take sytnax tree as an input and produce\n+//! an edit or some auxilarly info.\n+\n pub mod assists;\n mod extend_selection;\n mod folding_ranges;", "previous_filename": "crates/ra_editor/src/lib.rs"}, {"sha": "898fee7e00ea815549b6855a6c75df9ed9e17b8f", "filename": "crates/ra_ide_api_light/src/line_index.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fline_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fline_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fline_index.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_editor/src/line_index.rs"}, {"sha": "ec3269bbbab83dae7e3c2acbc8f30303c5d87a4b", "filename": "crates/ra_ide_api_light/src/line_index_utils.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fline_index_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fline_index_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fline_index_utils.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_editor/src/line_index_utils.rs"}, {"sha": "8bd57555f513394c0cd73a44af893ff8e306e77b", "filename": "crates/ra_ide_api_light/src/structure.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fstructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Fstructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fstructure.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_editor/src/structure.rs"}, {"sha": "dc2470aa30b522aedb2f8eb6e559efd864fdc79e", "filename": "crates/ra_ide_api_light/src/test_utils.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Ftest_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Ftest_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Ftest_utils.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_editor/src/test_utils.rs"}, {"sha": "d8177f245ee959a65e4a8dc611687eb7d3622efd", "filename": "crates/ra_ide_api_light/src/typing.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_ide_api_light%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Ftyping.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "previous_filename": "crates/ra_editor/src/typing.rs"}, {"sha": "296fae34f9166ee5a672df90aa22fe1c35207b02", "filename": "crates/ra_lsp_server/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_lsp_server%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_lsp_server%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2FCargo.toml?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -29,7 +29,7 @@ parking_lot = \"0.7.0\"\n thread_worker = { path = \"../thread_worker\" }\n ra_syntax = { path = \"../ra_syntax\" }\n ra_text_edit = { path = \"../ra_text_edit\" }\n-ra_analysis = { path = \"../ra_analysis\" }\n+ra_ide_api = { path = \"../ra_ide_api\" }\n gen_lsp_server = { path = \"../gen_lsp_server\" }\n ra_vfs = { path = \"../ra_vfs\" }\n "}, {"sha": "5c8b3c194bd3c9afb5395391ccf8cd5a65d0b241", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -4,7 +4,7 @@ use languageserver_types::{\n     TextDocumentItem, TextDocumentPositionParams, Url, VersionedTextDocumentIdentifier,\n     WorkspaceEdit,\n };\n-use ra_analysis::{\n+use ra_ide_api::{\n     CompletionItem, CompletionItemKind, FileId, FilePosition, FileRange, FileSystemEdit,\n     InsertText, NavigationTarget, SourceChange, SourceFileEdit,\n     LineCol, LineIndex, translate_offset_with_edit"}, {"sha": "96923fac7733bc0583bdcd8be446658bec98323e", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -10,7 +10,7 @@ use gen_lsp_server::{\n     handle_shutdown, ErrorCode, RawMessage, RawNotification, RawRequest, RawResponse,\n };\n use languageserver_types::NumberOrString;\n-use ra_analysis::{Canceled, FileId, LibraryData};\n+use ra_ide_api::{Canceled, FileId, LibraryData};\n use ra_vfs::VfsTask;\n use rayon;\n use rustc_hash::FxHashSet;"}, {"sha": "a653c5ada0baa20a02ec6bd7a6d4353773c71b9d", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -8,7 +8,7 @@ use languageserver_types::{\n     ParameterInformation, ParameterLabel, Position, PrepareRenameResponse, Range, RenameParams,\n     SignatureInformation, SymbolInformation, TextDocumentIdentifier, TextEdit, WorkspaceEdit,\n };\n-use ra_analysis::{\n+use ra_ide_api::{\n     FileId, FilePosition, FileRange, FoldKind, Query, RunnableKind, Severity, SourceChange,\n };\n use ra_syntax::{TextUnit, AstNode};\n@@ -736,7 +736,7 @@ fn highlight(world: &ServerWorld, file_id: FileId) -> Result<Vec<Decoration>> {\n }\n \n fn to_diagnostic_severity(severity: Severity) -> DiagnosticSeverity {\n-    use ra_analysis::Severity::*;\n+    use ra_ide_api::Severity::*;\n \n     match severity {\n         Error => DiagnosticSeverity::Error,"}, {"sha": "a83e0155730e522a129253f821e7ffb380e03de5", "filename": "crates/ra_lsp_server/src/main_loop/subscriptions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fsubscriptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fsubscriptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fsubscriptions.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -1,4 +1,4 @@\n-use ra_analysis::FileId;\n+use ra_ide_api::FileId;\n use rustc_hash::FxHashSet;\n \n pub struct Subscriptions {"}, {"sha": "76c76766d36a2223117926cdac66dc4c6d4f81bf", "filename": "crates/ra_lsp_server/src/server_world.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f74e33ca53a7897e9020d3de75cc76a6b89d79/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs?ref=46f74e33ca53a7897e9020d3de75cc76a6b89d79", "patch": "@@ -1,18 +1,18 @@\n use std::{\n-    path::{PathBuf},\n+    path::PathBuf,\n     sync::Arc,\n };\n \n use languageserver_types::Url;\n-use ra_analysis::{\n+use ra_ide_api::{\n     Analysis, AnalysisChange, AnalysisHost, CrateGraph, FileId, LibraryData,\n     SourceRootId\n };\n use ra_vfs::{Vfs, VfsChange, VfsFile, VfsRoot};\n use rustc_hash::FxHashMap;\n use relative_path::RelativePathBuf;\n use parking_lot::RwLock;\n-use failure::{format_err};\n+use failure::format_err;\n \n use crate::{\n     project_model::{CargoWorkspace, TargetKind},"}]}