{"sha": "bcae6a3734cdcecffc3ee30981a5b9107bee2ee0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjYWU2YTM3MzRjZGNlY2ZmYzNlZTMwOTgxYTViOTEwN2JlZTJlZTA=", "commit": {"author": {"name": "Dawid Ci\u0119\u017carkiewicz", "email": "dpc@dpc.pw", "date": "2017-03-15T05:29:00Z"}, "committer": {"name": "Dawid Ci\u0119\u017carkiewicz", "email": "dpc@dpc.pw", "date": "2017-03-18T03:15:05Z"}, "message": "Reorder match checks in `create_dir_all`\n\nAvoid doing `is_dir` in the fast path.", "tree": {"sha": "a96fa4e4264e03d31cc30336417a2a088b6b781a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a96fa4e4264e03d31cc30336417a2a088b6b781a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcae6a3734cdcecffc3ee30981a5b9107bee2ee0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcae6a3734cdcecffc3ee30981a5b9107bee2ee0", "html_url": "https://github.com/rust-lang/rust/commit/bcae6a3734cdcecffc3ee30981a5b9107bee2ee0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcae6a3734cdcecffc3ee30981a5b9107bee2ee0/comments", "author": {"login": "dpc", "id": 9209, "node_id": "MDQ6VXNlcjkyMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/9209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpc", "html_url": "https://github.com/dpc", "followers_url": "https://api.github.com/users/dpc/followers", "following_url": "https://api.github.com/users/dpc/following{/other_user}", "gists_url": "https://api.github.com/users/dpc/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpc/subscriptions", "organizations_url": "https://api.github.com/users/dpc/orgs", "repos_url": "https://api.github.com/users/dpc/repos", "events_url": "https://api.github.com/users/dpc/events{/privacy}", "received_events_url": "https://api.github.com/users/dpc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dpc", "id": 9209, "node_id": "MDQ6VXNlcjkyMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/9209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpc", "html_url": "https://github.com/dpc", "followers_url": "https://api.github.com/users/dpc/followers", "following_url": "https://api.github.com/users/dpc/following{/other_user}", "gists_url": "https://api.github.com/users/dpc/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpc/subscriptions", "organizations_url": "https://api.github.com/users/dpc/orgs", "repos_url": "https://api.github.com/users/dpc/repos", "events_url": "https://api.github.com/users/dpc/events{/privacy}", "received_events_url": "https://api.github.com/users/dpc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3e2eaf4cb774f776f4022406742f978580c0a53", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3e2eaf4cb774f776f4022406742f978580c0a53", "html_url": "https://github.com/rust-lang/rust/commit/c3e2eaf4cb774f776f4022406742f978580c0a53"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "59a6a99201f1e3dd374cd0f90abd8fdb1940e715", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bcae6a3734cdcecffc3ee30981a5b9107bee2ee0/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcae6a3734cdcecffc3ee30981a5b9107bee2ee0/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=bcae6a3734cdcecffc3ee30981a5b9107bee2ee0", "patch": "@@ -1777,8 +1777,8 @@ impl DirBuilder {\n     fn create_dir_all(&self, path: &Path) -> io::Result<()> {\n         match self.inner.mkdir(path) {\n             Ok(()) => return Ok(()),\n-            Err(_) if path.is_dir() => return Ok(()),\n             Err(ref e) if e.kind() == io::ErrorKind::NotFound => {}\n+            Err(_) if path.is_dir() => return Ok(()),\n             Err(e) => return Err(e),\n         }\n         match path.parent() {"}]}