{"sha": "66d68cdc6f5bb508052b890f8766a84a98533865", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ZDY4Y2RjNmY1YmI1MDgwNTJiODkwZjg3NjZhODRhOTg1MzM4NjU=", "commit": {"author": {"name": "Abhijit Gadgil", "email": "gabhijit@iitbombay.org", "date": "2020-11-01T02:52:25Z"}, "committer": {"name": "Abhijit Gadgil", "email": "gabhijit@iitbombay.org", "date": "2020-11-01T02:52:25Z"}, "message": "Trivial fixes to bitwise operator documentation\n\nAdded fixes to documentation of `BitAnd`, `BitOr`, `BitXor` and\n`BitAndAssign`, where the documentation for implementation on\n`Vector<bool>` was using logical operators in place of the bitwise\noperators.\n\nr? @steveklabnik\ncc #78619", "tree": {"sha": "ec206146fe7b3ff361d8d5f79a5f7cd517669451", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec206146fe7b3ff361d8d5f79a5f7cd517669451"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66d68cdc6f5bb508052b890f8766a84a98533865", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66d68cdc6f5bb508052b890f8766a84a98533865", "html_url": "https://github.com/rust-lang/rust/commit/66d68cdc6f5bb508052b890f8766a84a98533865", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66d68cdc6f5bb508052b890f8766a84a98533865/comments", "author": {"login": "gabhijit", "id": 387214, "node_id": "MDQ6VXNlcjM4NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/387214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabhijit", "html_url": "https://github.com/gabhijit", "followers_url": "https://api.github.com/users/gabhijit/followers", "following_url": "https://api.github.com/users/gabhijit/following{/other_user}", "gists_url": "https://api.github.com/users/gabhijit/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabhijit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabhijit/subscriptions", "organizations_url": "https://api.github.com/users/gabhijit/orgs", "repos_url": "https://api.github.com/users/gabhijit/repos", "events_url": "https://api.github.com/users/gabhijit/events{/privacy}", "received_events_url": "https://api.github.com/users/gabhijit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gabhijit", "id": 387214, "node_id": "MDQ6VXNlcjM4NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/387214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabhijit", "html_url": "https://github.com/gabhijit", "followers_url": "https://api.github.com/users/gabhijit/followers", "following_url": "https://api.github.com/users/gabhijit/following{/other_user}", "gists_url": "https://api.github.com/users/gabhijit/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabhijit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabhijit/subscriptions", "organizations_url": "https://api.github.com/users/gabhijit/orgs", "repos_url": "https://api.github.com/users/gabhijit/repos", "events_url": "https://api.github.com/users/gabhijit/events{/privacy}", "received_events_url": "https://api.github.com/users/gabhijit/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f7612ac1499258025077f1fd05d2f429f9accfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f7612ac1499258025077f1fd05d2f429f9accfb", "html_url": "https://github.com/rust-lang/rust/commit/4f7612ac1499258025077f1fd05d2f429f9accfb"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "3dae57938bec54924cb4c28b46e7ab55499da68b", "filename": "library/core/src/ops/bit.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/66d68cdc6f5bb508052b890f8766a84a98533865/library%2Fcore%2Fsrc%2Fops%2Fbit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66d68cdc6f5bb508052b890f8766a84a98533865/library%2Fcore%2Fsrc%2Fops%2Fbit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Fbit.rs?ref=66d68cdc6f5bb508052b890f8766a84a98533865", "patch": "@@ -111,7 +111,7 @@ not_impl! { bool usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 }\n ///         assert_eq!(lhs.len(), rhs.len());\n ///         Self(lhs.iter()\n ///                 .zip(rhs.iter())\n-///                 .map(|(x, y)| *x && *y)\n+///                 .map(|(x, y)| *x & *y)\n ///                 .collect())\n ///     }\n /// }\n@@ -207,7 +207,10 @@ bitand_impl! { bool usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 }\n ///     fn bitor(self, Self(rhs): Self) -> Self::Output {\n ///         let Self(lhs) = self;\n ///         assert_eq!(lhs.len(), rhs.len());\n-///         Self(lhs.iter().zip(rhs.iter()).map(|(x, y)| *x || *y).collect())\n+///         Self(lhs.iter()\n+///                 .zip(rhs.iter())\n+///                 .map(|(x, y)| *x | *y)\n+///                 .collect())\n ///     }\n /// }\n ///\n@@ -304,7 +307,7 @@ bitor_impl! { bool usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 }\n ///         assert_eq!(lhs.len(), rhs.len());\n ///         Self(lhs.iter()\n ///                 .zip(rhs.iter())\n-///                 .map(|(x, y)| (*x || *y) && !(*x && *y))\n+///                 .map(|(x, y)| *x ^ *y))\n ///                 .collect())\n ///     }\n /// }\n@@ -646,7 +649,7 @@ shr_impl_all! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize }\n ///         *self = Self(self.0\n ///                          .iter()\n ///                          .zip(rhs.0.iter())\n-///                          .map(|(x, y)| *x && *y)\n+///                          .map(|(x, y)| *x & *y)\n ///                          .collect());\n ///     }\n /// }"}]}