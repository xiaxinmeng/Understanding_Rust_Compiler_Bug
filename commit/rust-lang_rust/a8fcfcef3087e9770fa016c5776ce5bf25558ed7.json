{"sha": "a8fcfcef3087e9770fa016c5776ce5bf25558ed7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4ZmNmY2VmMzA4N2U5NzcwZmEwMTZjNTc3NmNlNWJmMjU1NThlZDc=", "commit": {"author": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-10-25T00:03:25Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-11-03T04:09:34Z"}, "message": "Add more tests.", "tree": {"sha": "c09cbe92fd6abd76bd9007038b0686cdd3f9c0eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c09cbe92fd6abd76bd9007038b0686cdd3f9c0eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8fcfcef3087e9770fa016c5776ce5bf25558ed7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8fcfcef3087e9770fa016c5776ce5bf25558ed7", "html_url": "https://github.com/rust-lang/rust/commit/a8fcfcef3087e9770fa016c5776ce5bf25558ed7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8fcfcef3087e9770fa016c5776ce5bf25558ed7/comments", "author": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cda3c3b49183b60dc90ec1b19e494ff118c976c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cda3c3b49183b60dc90ec1b19e494ff118c976c", "html_url": "https://github.com/rust-lang/rust/commit/1cda3c3b49183b60dc90ec1b19e494ff118c976c"}], "stats": {"total": 191, "additions": 142, "deletions": 49}, "files": [{"sha": "c1c3989107b28081b2435f053ccb930d316b6985", "filename": "src/test/run-pass/traits/trait-alias-bounds.rs", "status": "modified", "additions": 46, "deletions": 6, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/a8fcfcef3087e9770fa016c5776ce5bf25558ed7/src%2Ftest%2Frun-pass%2Ftraits%2Ftrait-alias-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8fcfcef3087e9770fa016c5776ce5bf25558ed7/src%2Ftest%2Frun-pass%2Ftraits%2Ftrait-alias-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftraits%2Ftrait-alias-bounds.rs?ref=a8fcfcef3087e9770fa016c5776ce5bf25558ed7", "patch": "@@ -10,9 +10,14 @@\n \n #![feature(trait_alias)]\n \n+use std::marker::PhantomData;\n+\n trait SimpleAlias = Default;\n-trait GenericAlias<T> = Iterator<Item=T>;\n-trait Partial<T> = IntoIterator<Item=T>;\n+trait GenericAlias<T> = Iterator<Item = T>;\n+trait Partial<T> = IntoIterator<Item = T>;\n+trait SpecificAlias = GenericAlias<i32>;\n+trait PartialEqRef<'a, T> = PartialEq<&'a T>;\n+trait StaticAlias = 'static;\n \n trait Things<T> {}\n trait Romeo {}\n@@ -26,19 +31,54 @@ impl<T> Romeo for Fore<T> {}\n trait WithWhere<Art, Thou> = Romeo + Romeo where Fore<(Art, Thou)>: Romeo;\n trait BareWhere<Wild, Are> = where The<Wild>: Things<Are>;\n \n-trait CD = Clone + Default;\n+trait Empty {}\n+trait EmptyAlias = Empty;\n+trait CloneDefault = Clone + Default;\n+trait SendSyncAlias = Send + Sync;\n+trait WhereSendAlias = where Self: Send;\n+trait SendEqAlias<T> = Send where T: PartialEq<Self>;\n+trait I32Iterator = Iterator<Item = i32>;\n+\n+#[allow(dead_code)]\n+struct Foo<T: SendSyncAlias>(PhantomData<T>);\n+#[allow(dead_code)]\n+struct Bar<T>(PhantomData<T>) where T: SendSyncAlias;\n+\n+impl EmptyAlias {}\n+\n+impl<T: SendSyncAlias> Empty for T {}\n \n-fn foo<T: CD>() -> (T, T) {\n+fn a<T: CloneDefault>() -> (T, T) {\n     let one = T::default();\n     let two = one.clone();\n     (one, two)\n }\n \n+fn b(x: &impl SendEqAlias<i32>) -> bool {\n+    22_i32 == *x\n+}\n+\n+fn c<T: I32Iterator>(x: &mut T) -> Option<i32> {\n+    x.next()\n+}\n+\n+fn d<T: SendSyncAlias>() {\n+    is_send_and_sync::<T>();\n+}\n+\n+fn is_send_and_sync<T: Send + Sync>() {}\n+\n fn main() {\n-    let both = foo::<i32>();\n+    let both = a::<i32>();\n     assert_eq!(both.0, 0);\n     assert_eq!(both.1, 0);\n-    let both: (i32, i32) = foo();\n+    let both: (i32, i32) = a();\n     assert_eq!(both.0, 0);\n     assert_eq!(both.1, 0);\n+\n+    assert!(b(&22));\n+\n+    assert_eq!(c(&mut vec![22].into_iter()), Some(22));\n+\n+    d::<i32>();\n }"}, {"sha": "17e30922b2cb8068594a42b6f29305b20370b0f5", "filename": "src/test/run-pass/traits/trait-alias-object-type.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a8fcfcef3087e9770fa016c5776ce5bf25558ed7/src%2Ftest%2Frun-pass%2Ftraits%2Ftrait-alias-object-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8fcfcef3087e9770fa016c5776ce5bf25558ed7/src%2Ftest%2Frun-pass%2Ftraits%2Ftrait-alias-object-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftraits%2Ftrait-alias-object-type.rs?ref=a8fcfcef3087e9770fa016c5776ce5bf25558ed7", "patch": "@@ -13,9 +13,15 @@\n trait Foo = PartialEq<i32> + Send;\n trait Bar = Foo + Sync;\n \n+trait I32Iterator = Iterator<Item = i32>;\n+\n pub fn main() {\n-    let a: &Bar = &123;\n+    let a: &dyn Bar = &123;\n     assert!(*a == 123);\n     let b = Box::new(456) as Box<dyn Foo>;\n     assert!(*b == 456);\n+\n+    // FIXME(alexreg): associated type should be gotten from trait alias definition\n+    // let c: &dyn I32Iterator = &vec![123].into_iter();\n+    // assert_eq!(c.next(), Some(123));\n }"}, {"sha": "829a316ccb81e514dfb957197446903901d0de2d", "filename": "src/test/ui/traits/trait-alias-fail.stderr", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/1cda3c3b49183b60dc90ec1b19e494ff118c976c/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cda3c3b49183b60dc90ec1b19e494ff118c976c/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail.stderr?ref=1cda3c3b49183b60dc90ec1b19e494ff118c976c", "patch": "@@ -1,38 +0,0 @@\n-error: type parameters on the left side of a trait alias cannot be bounded\n-  --> $DIR/trait-alias-fail.rs:14:14\n-   |\n-LL | trait Alias2<T: Clone = ()> = Default;\n-   |              ^\n-\n-error: type parameters on the left side of a trait alias cannot have defaults\n-  --> $DIR/trait-alias-fail.rs:14:14\n-   |\n-LL | trait Alias2<T: Clone = ()> = Default;\n-   |              ^\n-\n-error[E0404]: expected trait, found trait alias `Alias1`\n-  --> $DIR/trait-alias-fail.rs:18:6\n-   |\n-LL | impl Alias1 for () {}\n-   |      ^^^^^^ not a trait\n-\n-error[E0658]: trait aliases are experimental (see issue #41517)\n-  --> $DIR/trait-alias-fail.rs:13:1\n-   |\n-LL | trait Alias1<T> = Default where T: Clone;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: add #![feature(trait_alias)] to the crate attributes to enable\n-\n-error[E0658]: trait aliases are experimental (see issue #41517)\n-  --> $DIR/trait-alias-fail.rs:14:1\n-   |\n-LL | trait Alias2<T: Clone = ()> = Default;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: add #![feature(trait_alias)] to the crate attributes to enable\n-\n-error: aborting due to 5 previous errors\n-\n-Some errors occurred: E0404, E0658.\n-For more information about an error, try `rustc --explain E0404`."}, {"sha": "135fdf93c29866d359e5666709734b15eda8e367", "filename": "src/test/ui/traits/trait-alias-fail1.rs", "status": "renamed", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a8fcfcef3087e9770fa016c5776ce5bf25558ed7/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8fcfcef3087e9770fa016c5776ce5bf25558ed7/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail1.rs?ref=a8fcfcef3087e9770fa016c5776ce5bf25558ed7", "patch": "@@ -10,11 +10,12 @@\n \n // gate-test-trait_alias\n \n-trait Alias1<T> = Default where T: Clone;\n-trait Alias2<T: Clone = ()> = Default;\n+trait CloneDefault<T> = Default where T: Clone;\n+trait BoundedAlias<T: Clone = ()> = Default;\n \n-impl Alias1 {}\n+trait A<T: Send> {}\n+trait B<T> = A<T>; // FIXME: parameter T should need a bound here, or semantics should be changed\n \n-impl Alias1 for () {}\n+impl CloneDefault for () {}\n \n fn main() {}", "previous_filename": "src/test/ui/traits/trait-alias-fail.rs"}, {"sha": "565409be782ed43551321a17fa69d012584534f6", "filename": "src/test/ui/traits/trait-alias-fail1.stderr", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/a8fcfcef3087e9770fa016c5776ce5bf25558ed7/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8fcfcef3087e9770fa016c5776ce5bf25558ed7/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail1.stderr?ref=a8fcfcef3087e9770fa016c5776ce5bf25558ed7", "patch": "@@ -0,0 +1,46 @@\n+error: type parameters on the left side of a trait alias cannot be bounded\n+  --> $DIR/trait-alias-fail1.rs:14:20\n+   |\n+LL | trait BoundedAlias<T: Clone = ()> = Default;\n+   |                    ^\n+\n+error: type parameters on the left side of a trait alias cannot have defaults\n+  --> $DIR/trait-alias-fail1.rs:14:20\n+   |\n+LL | trait BoundedAlias<T: Clone = ()> = Default;\n+   |                    ^\n+\n+error[E0404]: expected trait, found trait alias `CloneDefault`\n+  --> $DIR/trait-alias-fail1.rs:19:6\n+   |\n+LL | impl CloneDefault for () {}\n+   |      ^^^^^^^^^^^^ not a trait\n+\n+error[E0658]: trait aliases are experimental (see issue #41517)\n+  --> $DIR/trait-alias-fail1.rs:13:1\n+   |\n+LL | trait CloneDefault<T> = Default where T: Clone;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(trait_alias)] to the crate attributes to enable\n+\n+error[E0658]: trait aliases are experimental (see issue #41517)\n+  --> $DIR/trait-alias-fail1.rs:14:1\n+   |\n+LL | trait BoundedAlias<T: Clone = ()> = Default;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(trait_alias)] to the crate attributes to enable\n+\n+error[E0658]: trait aliases are experimental (see issue #41517)\n+  --> $DIR/trait-alias-fail1.rs:17:1\n+   |\n+LL | trait B<T> = A<T>; // FIXME: this should not work... or should it?\n+   | ^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(trait_alias)] to the crate attributes to enable\n+\n+error: aborting due to 6 previous errors\n+\n+Some errors occurred: E0404, E0658.\n+For more information about an error, try `rustc --explain E0404`."}, {"sha": "3d32cf6d29b6b0fe1438850adf53221cd6609a75", "filename": "src/test/ui/traits/trait-alias-fail2.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a8fcfcef3087e9770fa016c5776ce5bf25558ed7/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8fcfcef3087e9770fa016c5776ce5bf25558ed7/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail2.rs?ref=a8fcfcef3087e9770fa016c5776ce5bf25558ed7", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// gate-test-trait_alias\n+\n+trait EqAlias = Eq;\n+trait IteratorAlias = Iterator;\n+\n+fn main() {\n+    let _: &dyn EqAlias = &123;\n+    let _: &dyn IteratorAlias = &vec![123].into_iter();\n+}"}, {"sha": "6ebd8b5e73174f730519b7a61a5cb005c47cb519", "filename": "src/test/ui/traits/trait-alias-fail2.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a8fcfcef3087e9770fa016c5776ce5bf25558ed7/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8fcfcef3087e9770fa016c5776ce5bf25558ed7/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-fail2.stderr?ref=a8fcfcef3087e9770fa016c5776ce5bf25558ed7", "patch": "@@ -0,0 +1,19 @@\n+error[E0658]: trait aliases are experimental (see issue #41517)\n+  --> $DIR/trait-alias-fail2.rs:13:1\n+   |\n+LL | trait EqAlias = Eq;\n+   | ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(trait_alias)] to the crate attributes to enable\n+\n+error[E0658]: trait aliases are experimental (see issue #41517)\n+  --> $DIR/trait-alias-fail2.rs:14:1\n+   |\n+LL | trait IteratorAlias = Iterator;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(trait_alias)] to the crate attributes to enable\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}]}