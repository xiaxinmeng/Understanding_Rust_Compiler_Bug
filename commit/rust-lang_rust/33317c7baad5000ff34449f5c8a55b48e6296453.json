{"sha": "33317c7baad5000ff34449f5c8a55b48e6296453", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzMzE3YzdiYWFkNTAwMGZmMzQ0NDlmNWM4YTU1YjQ4ZTYyOTY0NTM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-01T20:52:51Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-05T06:33:09Z"}, "message": "resolve: add test for missing bindings in or-patterns.", "tree": {"sha": "9cae944b1575f3493e0182acce64b624a4ad14ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cae944b1575f3493e0182acce64b624a4ad14ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33317c7baad5000ff34449f5c8a55b48e6296453", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33317c7baad5000ff34449f5c8a55b48e6296453", "html_url": "https://github.com/rust-lang/rust/commit/33317c7baad5000ff34449f5c8a55b48e6296453", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33317c7baad5000ff34449f5c8a55b48e6296453/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "896a1c7fcdda7398d242ac6faace1c547349d3d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/896a1c7fcdda7398d242ac6faace1c547349d3d6", "html_url": "https://github.com/rust-lang/rust/commit/896a1c7fcdda7398d242ac6faace1c547349d3d6"}], "stats": {"total": 324, "additions": 324, "deletions": 0}, "files": [{"sha": "a75632278752d3cd740dc1c9ce99c9e050574b5e", "filename": "src/test/ui/or-patterns/missing-bindings.rs", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/33317c7baad5000ff34449f5c8a55b48e6296453/src%2Ftest%2Fui%2For-patterns%2Fmissing-bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33317c7baad5000ff34449f5c8a55b48e6296453/src%2Ftest%2Fui%2For-patterns%2Fmissing-bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fmissing-bindings.rs?ref=33317c7baad5000ff34449f5c8a55b48e6296453", "patch": "@@ -0,0 +1,82 @@\n+// This test ensures that or patterns do not allow missing bindings in any of the arms.\n+\n+// edition:2018\n+\n+#![feature(or_patterns)]\n+#![allow(incomplete_features, non_camel_case_types)]\n+\n+fn main() {}\n+\n+fn check_handling_of_paths() {\n+    mod bar {\n+        pub enum foo {\n+            alpha,\n+            beta,\n+            charlie\n+        }\n+    }\n+\n+    use bar::foo::{alpha, charlie};\n+    let alpha | beta | charlie = alpha; //~  ERROR variable `beta` is not bound in all patterns\n+    match Some(alpha) {\n+        Some(alpha | beta) => {} //~ ERROR variable `beta` is not bound in all patterns\n+    }\n+}\n+\n+fn check_misc_nesting() {\n+    enum E<T> { A(T, T), B(T) }\n+    use E::*;\n+    enum Vars3<S, T, U> { V1(S), V2(T), V3(U) }\n+    use Vars3::*;\n+\n+    // One level:\n+    const X: E<u8> = B(0);\n+    let A(a, _) | _ = X; //~ ERROR variable `a` is not bound in all patterns\n+    let _ | B(a) = X; //~ ERROR variable `a` is not bound in all patterns\n+    let A(..) | B(a) = X; //~ ERROR variable `a` is not bound in all patterns\n+    let A(a, _) | B(_) = X; //~ ERROR variable `a` is not bound in all patterns\n+    let A(_, a) | B(_) = X; //~ ERROR variable `a` is not bound in all patterns\n+    let A(a, b) | B(a) = X; //~ ERROR variable `b` is not bound in all patterns\n+\n+    // Two levels:\n+    const Y: E<E<u8>> = B(B(0));\n+    let A(A(..) | B(_), _) | B(a) = Y; //~ ERROR variable `a` is not bound in all patterns\n+    let A(A(..) | B(a), _) | B(A(a, _) | B(a)) = Y;\n+    //~^ ERROR variable `a` is not bound in all patterns\n+    let A(A(a, b) | B(c), d) | B(e) = Y;\n+    //~^ ERROR variable `a` is not bound in all patterns\n+    //~| ERROR variable `a` is not bound in all patterns\n+    //~| ERROR variable `b` is not bound in all patterns\n+    //~| ERROR variable `b` is not bound in all patterns\n+    //~| ERROR variable `c` is not bound in all patterns\n+    //~| ERROR variable `c` is not bound in all patterns\n+    //~| ERROR variable `d` is not bound in all patterns\n+    //~| ERROR variable `e` is not bound in all patterns\n+\n+    // Three levels:\n+    let (\n+            V1(\n+            //~^ ERROR variable `b` is not bound in all patterns\n+            //~| ERROR variable `c` is not bound in all patterns\n+                A(\n+                    Ok(a) | Err(_), //~ ERROR variable `a` is not bound in all patterns\n+                    _\n+                ) |\n+                B(Ok(a) | Err(a))\n+            ) |\n+            V2(\n+                A(\n+                    A(_, a) | //~ ERROR variable `b` is not bound in all patterns\n+                    B(b), //~ ERROR variable `a` is not bound in all patterns\n+                    _\n+                ) |\n+                B(_)\n+                //~^ ERROR variable `a` is not bound in all patterns\n+                //~| ERROR variable `b` is not bound in all patterns\n+            ) |\n+            V3(c),\n+            //~^ ERROR variable `a` is not bound in all patterns\n+        )\n+        : (Vars3<E<Result<u8, u8>>, E<E<u8>>, u8>,)\n+        = (V3(0),);\n+}"}, {"sha": "57270e4412351c654b3f15fa55935646b5222cea", "filename": "src/test/ui/or-patterns/missing-bindings.stderr", "status": "added", "additions": 242, "deletions": 0, "changes": 242, "blob_url": "https://github.com/rust-lang/rust/blob/33317c7baad5000ff34449f5c8a55b48e6296453/src%2Ftest%2Fui%2For-patterns%2Fmissing-bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33317c7baad5000ff34449f5c8a55b48e6296453/src%2Ftest%2Fui%2For-patterns%2Fmissing-bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fmissing-bindings.stderr?ref=33317c7baad5000ff34449f5c8a55b48e6296453", "patch": "@@ -0,0 +1,242 @@\n+error[E0408]: variable `beta` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:20:9\n+   |\n+LL |     let alpha | beta | charlie = alpha;\n+   |         ^^^^^   ----   ^^^^^^^ pattern doesn't bind `beta`\n+   |         |       |\n+   |         |       variable not in all patterns\n+   |         pattern doesn't bind `beta`\n+\n+error[E0408]: variable `beta` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:22:14\n+   |\n+LL |         Some(alpha | beta) => {}\n+   |              ^^^^^   ---- variable not in all patterns\n+   |              |\n+   |              pattern doesn't bind `beta`\n+\n+error[E0408]: variable `a` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:34:19\n+   |\n+LL |     let A(a, _) | _ = X;\n+   |           -       ^ pattern doesn't bind `a`\n+   |           |\n+   |           variable not in all patterns\n+\n+error[E0408]: variable `a` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:35:9\n+   |\n+LL |     let _ | B(a) = X;\n+   |         ^     - variable not in all patterns\n+   |         |\n+   |         pattern doesn't bind `a`\n+\n+error[E0408]: variable `a` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:36:9\n+   |\n+LL |     let A(..) | B(a) = X;\n+   |         ^^^^^     - variable not in all patterns\n+   |         |\n+   |         pattern doesn't bind `a`\n+\n+error[E0408]: variable `a` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:37:19\n+   |\n+LL |     let A(a, _) | B(_) = X;\n+   |           -       ^^^^ pattern doesn't bind `a`\n+   |           |\n+   |           variable not in all patterns\n+\n+error[E0408]: variable `a` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:38:19\n+   |\n+LL |     let A(_, a) | B(_) = X;\n+   |              -    ^^^^ pattern doesn't bind `a`\n+   |              |\n+   |              variable not in all patterns\n+\n+error[E0408]: variable `b` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:39:19\n+   |\n+LL |     let A(a, b) | B(a) = X;\n+   |              -    ^^^^ pattern doesn't bind `b`\n+   |              |\n+   |              variable not in all patterns\n+\n+error[E0408]: variable `a` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:43:9\n+   |\n+LL |     let A(A(..) | B(_), _) | B(a) = Y;\n+   |         ^^^^^^^^^^^^^^^^^^     - variable not in all patterns\n+   |         |\n+   |         pattern doesn't bind `a`\n+\n+error[E0408]: variable `a` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:44:11\n+   |\n+LL |     let A(A(..) | B(a), _) | B(A(a, _) | B(a)) = Y;\n+   |           ^^^^^     - variable not in all patterns\n+   |           |\n+   |           pattern doesn't bind `a`\n+\n+error[E0408]: variable `a` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:46:21\n+   |\n+LL |     let A(A(a, b) | B(c), d) | B(e) = Y;\n+   |             -       ^^^^ pattern doesn't bind `a`\n+   |             |\n+   |             variable not in all patterns\n+\n+error[E0408]: variable `b` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:46:21\n+   |\n+LL |     let A(A(a, b) | B(c), d) | B(e) = Y;\n+   |                -    ^^^^ pattern doesn't bind `b`\n+   |                |\n+   |                variable not in all patterns\n+\n+error[E0408]: variable `c` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:46:11\n+   |\n+LL |     let A(A(a, b) | B(c), d) | B(e) = Y;\n+   |           ^^^^^^^     - variable not in all patterns\n+   |           |\n+   |           pattern doesn't bind `c`\n+\n+error[E0408]: variable `a` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:46:32\n+   |\n+LL |     let A(A(a, b) | B(c), d) | B(e) = Y;\n+   |             -                  ^^^^ pattern doesn't bind `a`\n+   |             |\n+   |             variable not in all patterns\n+\n+error[E0408]: variable `b` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:46:32\n+   |\n+LL |     let A(A(a, b) | B(c), d) | B(e) = Y;\n+   |                -               ^^^^ pattern doesn't bind `b`\n+   |                |\n+   |                variable not in all patterns\n+\n+error[E0408]: variable `c` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:46:32\n+   |\n+LL |     let A(A(a, b) | B(c), d) | B(e) = Y;\n+   |                       -        ^^^^ pattern doesn't bind `c`\n+   |                       |\n+   |                       variable not in all patterns\n+\n+error[E0408]: variable `d` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:46:32\n+   |\n+LL |     let A(A(a, b) | B(c), d) | B(e) = Y;\n+   |                           -    ^^^^ pattern doesn't bind `d`\n+   |                           |\n+   |                           variable not in all patterns\n+\n+error[E0408]: variable `e` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:46:9\n+   |\n+LL |     let A(A(a, b) | B(c), d) | B(e) = Y;\n+   |         ^^^^^^^^^^^^^^^^^^^^     - variable not in all patterns\n+   |         |\n+   |         pattern doesn't bind `e`\n+\n+error[E0408]: variable `a` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:62:29\n+   |\n+LL |                     Ok(a) | Err(_),\n+   |                        -    ^^^^^^ pattern doesn't bind `a`\n+   |                        |\n+   |                        variable not in all patterns\n+\n+error[E0408]: variable `a` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:70:21\n+   |\n+LL |                     A(_, a) |\n+   |                          - variable not in all patterns\n+LL |                     B(b),\n+   |                     ^^^^ pattern doesn't bind `a`\n+\n+error[E0408]: variable `b` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:69:21\n+   |\n+LL |                     A(_, a) |\n+   |                     ^^^^^^^ pattern doesn't bind `b`\n+LL |                     B(b),\n+   |                       - variable not in all patterns\n+\n+error[E0408]: variable `a` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:73:17\n+   |\n+LL |                     A(_, a) |\n+   |                          - variable not in all patterns\n+...\n+LL |                 B(_)\n+   |                 ^^^^ pattern doesn't bind `a`\n+\n+error[E0408]: variable `b` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:73:17\n+   |\n+LL |                     B(b),\n+   |                       - variable not in all patterns\n+...\n+LL |                 B(_)\n+   |                 ^^^^ pattern doesn't bind `b`\n+\n+error[E0408]: variable `a` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:77:13\n+   |\n+LL |                 B(Ok(a) | Err(a))\n+   |                               - variable not in all patterns\n+...\n+LL |                     A(_, a) |\n+   |                          - variable not in all patterns\n+...\n+LL |             V3(c),\n+   |             ^^^^^ pattern doesn't bind `a`\n+\n+error[E0408]: variable `b` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:58:13\n+   |\n+LL | /             V1(\n+LL | |\n+LL | |\n+LL | |                 A(\n+...  |\n+LL | |                 B(Ok(a) | Err(a))\n+LL | |             ) |\n+   | |_____________^ pattern doesn't bind `b`\n+...\n+LL |                       B(b),\n+   |                         - variable not in all patterns\n+...\n+LL |               V3(c),\n+   |               ^^^^^ pattern doesn't bind `b`\n+\n+error[E0408]: variable `c` is not bound in all patterns\n+  --> $DIR/missing-bindings.rs:58:13\n+   |\n+LL | /             V1(\n+LL | |\n+LL | |\n+LL | |                 A(\n+...  |\n+LL | |                 B(Ok(a) | Err(a))\n+LL | |             ) |\n+   | |_____________^ pattern doesn't bind `c`\n+LL | /             V2(\n+LL | |                 A(\n+LL | |                     A(_, a) |\n+LL | |                     B(b),\n+...  |\n+LL | |\n+LL | |             ) |\n+   | |_____________^ pattern doesn't bind `c`\n+LL |               V3(c),\n+   |                  - variable not in all patterns\n+\n+error: aborting due to 26 previous errors\n+\n+For more information about this error, try `rustc --explain E0408`."}]}