{"sha": "b194b43bd1ffdb6708b3eaa50c52d0a8c2199500", "node_id": "C_kwDOAAsO6NoAKGIxOTRiNDNiZDFmZmRiNjcwOGIzZWFhNTBjNTJkMGE4YzIxOTk1MDA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-04T06:09:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-04T06:09:05Z"}, "message": "Rollup merge of #111039 - compiler-errors:foreign-span-rpitit, r=tmiasko\n\nEncode def span for foreign return-position `impl Trait` in trait\n\nFixes #111031, yet another def-span encoding issue :/\n\nIncludes a smaller repro than the issue, but I can confirm it ICEs:\n\n```\nquery stack during panic:\n#0 [def_span] looking up span for `rpitit::Foo::bar::{opaque#0}`\n#1 [object_safety_violations] determining object safety of trait `rpitit::Foo`\n#2 [check_is_object_safe] checking if trait `rpitit::Foo` is object safe\n#3 [typeck] type-checking `main`\n#4 [used_trait_imports] finding used_trait_imports `main`\n#5 [analysis] running analysis passes on this crate\n```\n\nLuckily since this only affects nightly, this desn't need to be backported.", "tree": {"sha": "914809202b81b6b57dd30e2200637ec7de3161c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/914809202b81b6b57dd30e2200637ec7de3161c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b194b43bd1ffdb6708b3eaa50c52d0a8c2199500", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkU0wBCRBK7hj4Ov3rIwAAYC0IAA9+dYxoIx1Z/+CsRxkREEur\nkZxcT+rGZk4ZNh6Z8/Q0uyPtqFy+ualnq1yM+4zJFFkbdrm2dxi95t9pPLBk1ojk\ninHN3zqobC0Fmk1IRT2Fyam0HRXYuaTE//Jel2ZDzJlSmfqn1A6ZUYG83HuecBqU\nIZfg6F2AHHba4jFmqmUOFk8+dwjbx+6wvHHA61ZaPVQymtxEJR2Rm5SaA9/nxchx\n/0SQNaSIIzSVQif6hdaTp7oJ2o2CZ+oRC316JQNUg4ObghdwC1O1rY6fKvrFQHbB\nxHOotcHGQiYYLL94Vt4FVI49clruhdiStKt/OgWtl/YcZB/MTAWVWWTtPrMFeJQ=\n=NR0+\n-----END PGP SIGNATURE-----\n", "payload": "tree 914809202b81b6b57dd30e2200637ec7de3161c1\nparent 6387eda3ba51acfcd27aa46429dc94cb66ae73a3\nparent ed468eebf6e852b80eeed6997c67444268795faa\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1683180545 +0200\ncommitter GitHub <noreply@github.com> 1683180545 +0200\n\nRollup merge of #111039 - compiler-errors:foreign-span-rpitit, r=tmiasko\n\nEncode def span for foreign return-position `impl Trait` in trait\n\nFixes #111031, yet another def-span encoding issue :/\n\nIncludes a smaller repro than the issue, but I can confirm it ICEs:\n\n```\nquery stack during panic:\n#0 [def_span] looking up span for `rpitit::Foo::bar::{opaque#0}`\n#1 [object_safety_violations] determining object safety of trait `rpitit::Foo`\n#2 [check_is_object_safe] checking if trait `rpitit::Foo` is object safe\n#3 [typeck] type-checking `main`\n#4 [used_trait_imports] finding used_trait_imports `main`\n#5 [analysis] running analysis passes on this crate\n```\n\nLuckily since this only affects nightly, this desn't need to be backported.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b194b43bd1ffdb6708b3eaa50c52d0a8c2199500", "html_url": "https://github.com/rust-lang/rust/commit/b194b43bd1ffdb6708b3eaa50c52d0a8c2199500", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b194b43bd1ffdb6708b3eaa50c52d0a8c2199500/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6387eda3ba51acfcd27aa46429dc94cb66ae73a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6387eda3ba51acfcd27aa46429dc94cb66ae73a3", "html_url": "https://github.com/rust-lang/rust/commit/6387eda3ba51acfcd27aa46429dc94cb66ae73a3"}, {"sha": "ed468eebf6e852b80eeed6997c67444268795faa", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed468eebf6e852b80eeed6997c67444268795faa", "html_url": "https://github.com/rust-lang/rust/commit/ed468eebf6e852b80eeed6997c67444268795faa"}], "stats": {"total": 39, "additions": 32, "deletions": 7}, "files": [{"sha": "32f9e883fd6bbd44ab378ce3ce0fa56dff1ea6ad", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b194b43bd1ffdb6708b3eaa50c52d0a8c2199500/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b194b43bd1ffdb6708b3eaa50c52d0a8c2199500/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=b194b43bd1ffdb6708b3eaa50c52d0a8c2199500", "patch": "@@ -837,11 +837,12 @@ fn should_encode_span(def_kind: DefKind) -> bool {\n         | DefKind::AnonConst\n         | DefKind::InlineConst\n         | DefKind::OpaqueTy\n+        | DefKind::ImplTraitPlaceholder\n         | DefKind::Field\n         | DefKind::Impl { .. }\n         | DefKind::Closure\n         | DefKind::Generator => true,\n-        DefKind::ForeignMod | DefKind::ImplTraitPlaceholder | DefKind::GlobalAsm => false,\n+        DefKind::ForeignMod | DefKind::GlobalAsm => false,\n     }\n }\n "}, {"sha": "776006124dccf62b563e52c6c62ae38f5c84a302", "filename": "tests/ui/impl-trait/in-trait/auxiliary/rpitit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b194b43bd1ffdb6708b3eaa50c52d0a8c2199500/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fauxiliary%2Frpitit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b194b43bd1ffdb6708b3eaa50c52d0a8c2199500/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fauxiliary%2Frpitit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fauxiliary%2Frpitit.rs?ref=b194b43bd1ffdb6708b3eaa50c52d0a8c2199500", "patch": "@@ -5,10 +5,10 @@\n use std::ops::Deref;\n \n pub trait Foo {\n-    fn bar() -> impl Deref<Target = impl Sized>;\n+    fn bar(self) -> impl Deref<Target = impl Sized>;\n }\n \n pub struct Foreign;\n impl Foo for Foreign {\n-    fn bar() -> &'static () { &() }\n+    fn bar(self) -> &'static () { &() }\n }"}, {"sha": "ecb5e62c433a0c9302852260f173b0782b0cdd50", "filename": "tests/ui/impl-trait/in-trait/foreign-dyn-error.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b194b43bd1ffdb6708b3eaa50c52d0a8c2199500/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fforeign-dyn-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b194b43bd1ffdb6708b3eaa50c52d0a8c2199500/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fforeign-dyn-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fforeign-dyn-error.rs?ref=b194b43bd1ffdb6708b3eaa50c52d0a8c2199500", "patch": "@@ -0,0 +1,8 @@\n+// aux-build: rpitit.rs\n+\n+extern crate rpitit;\n+\n+fn main() {\n+    let _: &dyn rpitit::Foo = todo!();\n+    //~^ ERROR the trait `Foo` cannot be made into an object\n+}"}, {"sha": "6eef392c05f013b72a8eb39c8eeabef602851b6f", "filename": "tests/ui/impl-trait/in-trait/foreign-dyn-error.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b194b43bd1ffdb6708b3eaa50c52d0a8c2199500/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fforeign-dyn-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b194b43bd1ffdb6708b3eaa50c52d0a8c2199500/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fforeign-dyn-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fforeign-dyn-error.stderr?ref=b194b43bd1ffdb6708b3eaa50c52d0a8c2199500", "patch": "@@ -0,0 +1,15 @@\n+error[E0038]: the trait `Foo` cannot be made into an object\n+  --> $DIR/foreign-dyn-error.rs:6:12\n+   |\n+LL |     let _: &dyn rpitit::Foo = todo!();\n+   |            ^^^^^^^^^^^^^^^^ `Foo` cannot be made into an object\n+   |\n+note: for a trait to be \"object safe\" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>\n+  --> $DIR/auxiliary/rpitit.rs:8:21\n+   |\n+LL |     fn bar(self) -> impl Deref<Target = impl Sized>;\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait cannot be made into an object because method `bar` references an `impl Trait` type in its return type\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0038`."}, {"sha": "98417b343a11ed0688bbd6771d694cd070207cff", "filename": "tests/ui/impl-trait/in-trait/foreign.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b194b43bd1ffdb6708b3eaa50c52d0a8c2199500/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b194b43bd1ffdb6708b3eaa50c52d0a8c2199500/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fin-trait%2Fforeign.rs?ref=b194b43bd1ffdb6708b3eaa50c52d0a8c2199500", "patch": "@@ -5,17 +5,18 @@\n \n extern crate rpitit;\n \n+use rpitit::{Foo, Foreign};\n use std::sync::Arc;\n \n // Implement an RPITIT from another crate.\n struct Local;\n-impl rpitit::Foo for Local {\n-    fn bar() -> Arc<String> { Arc::new(String::new()) }\n+impl Foo for Local {\n+    fn bar(self) -> Arc<String> { Arc::new(String::new()) }\n }\n \n fn main() {\n     // Witness an RPITIT from another crate.\n-    let &() = <rpitit::Foreign as rpitit::Foo>::bar();\n+    let &() = Foreign.bar();\n \n-    let x: Arc<String> = <Local as rpitit::Foo>::bar();\n+    let x: Arc<String> = Local.bar();\n }"}]}