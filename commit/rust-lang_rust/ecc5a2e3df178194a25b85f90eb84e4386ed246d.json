{"sha": "ecc5a2e3df178194a25b85f90eb84e4386ed246d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjYzVhMmUzZGYxNzgxOTRhMjViODVmOTBlYjg0ZTQzODZlZDI0NmQ=", "commit": {"author": {"name": "gfreezy", "email": "gfreezy@gmail.com", "date": "2019-01-20T05:34:16Z"}, "committer": {"name": "gfreezy", "email": "gfreezy@gmail.com", "date": "2019-01-20T05:34:16Z"}, "message": "workaround for trigger character", "tree": {"sha": "95b81619577d8b41b61214dc7b18fc74bce30b0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95b81619577d8b41b61214dc7b18fc74bce30b0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecc5a2e3df178194a25b85f90eb84e4386ed246d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecc5a2e3df178194a25b85f90eb84e4386ed246d", "html_url": "https://github.com/rust-lang/rust/commit/ecc5a2e3df178194a25b85f90eb84e4386ed246d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecc5a2e3df178194a25b85f90eb84e4386ed246d/comments", "author": {"login": "gfreezy", "id": 510012, "node_id": "MDQ6VXNlcjUxMDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/510012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfreezy", "html_url": "https://github.com/gfreezy", "followers_url": "https://api.github.com/users/gfreezy/followers", "following_url": "https://api.github.com/users/gfreezy/following{/other_user}", "gists_url": "https://api.github.com/users/gfreezy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfreezy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfreezy/subscriptions", "organizations_url": "https://api.github.com/users/gfreezy/orgs", "repos_url": "https://api.github.com/users/gfreezy/repos", "events_url": "https://api.github.com/users/gfreezy/events{/privacy}", "received_events_url": "https://api.github.com/users/gfreezy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gfreezy", "id": 510012, "node_id": "MDQ6VXNlcjUxMDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/510012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfreezy", "html_url": "https://github.com/gfreezy", "followers_url": "https://api.github.com/users/gfreezy/followers", "following_url": "https://api.github.com/users/gfreezy/following{/other_user}", "gists_url": "https://api.github.com/users/gfreezy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfreezy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfreezy/subscriptions", "organizations_url": "https://api.github.com/users/gfreezy/orgs", "repos_url": "https://api.github.com/users/gfreezy/repos", "events_url": "https://api.github.com/users/gfreezy/events{/privacy}", "received_events_url": "https://api.github.com/users/gfreezy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a43638052213d1faa690e6d68bd5702e44fa027", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a43638052213d1faa690e6d68bd5702e44fa027", "html_url": "https://github.com/rust-lang/rust/commit/2a43638052213d1faa690e6d68bd5702e44fa027"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "7bc2def14416ac89415dd06b5d59800e7f47db38", "filename": "crates/ra_ide_api/src/completion/completion_context.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ecc5a2e3df178194a25b85f90eb84e4386ed246d/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecc5a2e3df178194a25b85f90eb84e4386ed246d/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=ecc5a2e3df178194a25b85f90eb84e4386ed246d", "patch": "@@ -69,7 +69,11 @@ impl<'a> CompletionContext<'a> {\n     // This is purely advisory and can be used, for example, to highlight this range in the editor.\n     // Clients are expected to ignore this field.\n     pub(crate) fn source_range(&self) -> TextRange {\n-        self.leaf.range()\n+        match self.leaf.kind() {\n+            // workaroud when completion is triggered by trigger characters.\n+            DOT | COLONCOLON => TextRange::from_to(self.offset, self.offset),\n+            _ => self.leaf.range()\n+        }\n     }\n \n     fn fill(&mut self, original_file: &'a SourceFile, offset: TextUnit) {"}]}