{"sha": "351cc4fc99b7579cf53c5dbeb35cfb224ced03d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MWNjNGZjOTliNzU3OWNmNTNjNWRiZWIzNWNmYjIyNGNlZDAzZDg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-09T23:26:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-09T23:26:18Z"}, "message": "auto merge of #16359 : epdtry/rust/mono-item-dedup-foreign, r=alexcrichton\n\nExtend the changes from #16059 to the new generic foreign functions introduced by #15831.", "tree": {"sha": "d4a057da2da3c92625dae6c8614082d9a7fe1240", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4a057da2da3c92625dae6c8614082d9a7fe1240"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/351cc4fc99b7579cf53c5dbeb35cfb224ced03d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/351cc4fc99b7579cf53c5dbeb35cfb224ced03d8", "html_url": "https://github.com/rust-lang/rust/commit/351cc4fc99b7579cf53c5dbeb35cfb224ced03d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/351cc4fc99b7579cf53c5dbeb35cfb224ced03d8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4136d5f44d739391a60f8e51429dd30f2d96aae8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4136d5f44d739391a60f8e51429dd30f2d96aae8", "html_url": "https://github.com/rust-lang/rust/commit/4136d5f44d739391a60f8e51429dd30f2d96aae8"}, {"sha": "0c158b4fbfcec7d6f18859661047dff2109fdfe4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c158b4fbfcec7d6f18859661047dff2109fdfe4", "html_url": "https://github.com/rust-lang/rust/commit/0c158b4fbfcec7d6f18859661047dff2109fdfe4"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "242a820c997ff8e79d315701f09f48e02e2119a5", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/351cc4fc99b7579cf53c5dbeb35cfb224ced03d8/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/351cc4fc99b7579cf53c5dbeb35cfb224ced03d8/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=351cc4fc99b7579cf53c5dbeb35cfb224ced03d8", "patch": "@@ -1932,7 +1932,8 @@ pub fn trans_item(ccx: &CrateContext, item: &ast::Item) {\n                                                         llfn,\n                                                         &param_substs::empty(),\n                                                         item.id,\n-                                                        None);\n+                                                        None,\n+                                                        TranslateItems);\n             } else {\n                 trans_fn(ccx,\n                          &**decl,"}, {"sha": "4ca2060ca866d41076fd201e6ec49ef81a47b20f", "filename": "src/librustc/middle/trans/foreign.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/351cc4fc99b7579cf53c5dbeb35cfb224ced03d8/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/351cc4fc99b7579cf53c5dbeb35cfb224ced03d8/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs?ref=351cc4fc99b7579cf53c5dbeb35cfb224ced03d8", "patch": "@@ -577,7 +577,8 @@ pub fn trans_rust_fn_with_foreign_abi(ccx: &CrateContext,\n                                       llwrapfn: ValueRef,\n                                       param_substs: &param_substs,\n                                       id: ast::NodeId,\n-                                      hash: Option<&str>) {\n+                                      hash: Option<&str>,\n+                                      handle_items: HandleItemsFlag) {\n     let _icx = push_ctxt(\"foreign::build_foreign_fn\");\n \n     let fnty = ty::node_id_to_type(ccx.tcx(), id);\n@@ -586,7 +587,8 @@ pub fn trans_rust_fn_with_foreign_abi(ccx: &CrateContext,\n \n     unsafe { // unsafe because we call LLVM operations\n         // Build up the Rust function (`foo0` above).\n-        let llrustfn = build_rust_fn(ccx, decl, body, param_substs, attrs, id, hash);\n+        let llrustfn = build_rust_fn(ccx, decl, body, param_substs, attrs, id,\n+                                     hash, handle_items);\n \n         // Build up the foreign wrapper (`foo` above).\n         return build_wrap_fn(ccx, llrustfn, llwrapfn, &tys, mty);\n@@ -598,7 +600,8 @@ pub fn trans_rust_fn_with_foreign_abi(ccx: &CrateContext,\n                      param_substs: &param_substs,\n                      attrs: &[ast::Attribute],\n                      id: ast::NodeId,\n-                     hash: Option<&str>)\n+                     hash: Option<&str>,\n+                     handle_items: HandleItemsFlag)\n                      -> ValueRef {\n         let _icx = push_ctxt(\"foreign::foreign::build_rust_fn\");\n         let tcx = ccx.tcx();\n@@ -630,7 +633,7 @@ pub fn trans_rust_fn_with_foreign_abi(ccx: &CrateContext,\n \n         let llfn = base::decl_internal_rust_fn(ccx, t, ps.as_slice());\n         base::set_llvm_fn_attrs(attrs, llfn);\n-        base::trans_fn(ccx, decl, body, llfn, param_substs, id, [], TranslateItems);\n+        base::trans_fn(ccx, decl, body, llfn, param_substs, id, [], handle_items);\n         llfn\n     }\n "}, {"sha": "070bd89d2896378e71c6c642c011907421a6693e", "filename": "src/librustc/middle/trans/monomorphize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/351cc4fc99b7579cf53c5dbeb35cfb224ced03d8/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/351cc4fc99b7579cf53c5dbeb35cfb224ced03d8/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs?ref=351cc4fc99b7579cf53c5dbeb35cfb224ced03d8", "patch": "@@ -164,7 +164,7 @@ pub fn monomorphic_fn(ccx: &CrateContext,\n                   if abi != abi::Rust {\n                       foreign::trans_rust_fn_with_foreign_abi(\n                           ccx, &**decl, &**body, [], d, &psubsts, fn_id.node,\n-                          Some(hash.as_slice()));\n+                          Some(hash.as_slice()), IgnoreItems);\n                   } else {\n                       trans_fn(ccx, &**decl, &**body, d, &psubsts, fn_id.node, [],\n                                IgnoreItems);"}, {"sha": "7f715a475beadf1321a7921ed5ca7049c8827cba", "filename": "src/test/run-make/issue-7349/Makefile", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/351cc4fc99b7579cf53c5dbeb35cfb224ced03d8/src%2Ftest%2Frun-make%2Fissue-7349%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/351cc4fc99b7579cf53c5dbeb35cfb224ced03d8/src%2Ftest%2Frun-make%2Fissue-7349%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-7349%2FMakefile?ref=351cc4fc99b7579cf53c5dbeb35cfb224ced03d8", "patch": "@@ -2,10 +2,10 @@\n \n # Test to make sure that inner functions within a polymorphic outer function\n # don't get re-translated when the outer function is monomorphized.  The test\n-# code monomorphizes the outer function several times, but the magic constant\n-# `8675309` used in the inner function should appear only once in the generated\n-# IR.\n+# code monomorphizes the outer functions several times, but the magic constants\n+# used in the inner functions should each appear only once in the generated IR.\n \n all:\n \t$(RUSTC) foo.rs --emit=ir\n \t[ \"$$(grep -c 8675309 \"$(TMPDIR)/foo.ll\")\" -eq \"1\" ]\n+\t[ \"$$(grep -c 11235813 \"$(TMPDIR)/foo.ll\")\" -eq \"1\" ]"}, {"sha": "870d1749278d7253eab8042255685f47e9afd4c5", "filename": "src/test/run-make/issue-7349/foo.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/351cc4fc99b7579cf53c5dbeb35cfb224ced03d8/src%2Ftest%2Frun-make%2Fissue-7349%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/351cc4fc99b7579cf53c5dbeb35cfb224ced03d8/src%2Ftest%2Frun-make%2Fissue-7349%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-7349%2Ffoo.rs?ref=351cc4fc99b7579cf53c5dbeb35cfb224ced03d8", "patch": "@@ -15,7 +15,16 @@ fn outer<T>() {\n     }\n }\n \n+extern \"C\" fn outer_foreign<T>() {\n+    #[allow(dead_code)]\n+    fn inner() -> uint {\n+        11235813\n+    }\n+}\n+\n fn main() {\n     outer::<int>();\n     outer::<uint>();\n+    outer_foreign::<int>();\n+    outer_foreign::<uint>();\n }"}]}