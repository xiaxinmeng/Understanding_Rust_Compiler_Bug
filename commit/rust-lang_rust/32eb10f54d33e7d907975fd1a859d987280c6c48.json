{"sha": "32eb10f54d33e7d907975fd1a859d987280c6c48", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyZWIxMGY1NGQzM2U3ZDkwNzk3NWZkMWE4NTlkOTg3MjgwYzZjNDg=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-30T13:42:11Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-08-01T13:29:35Z"}, "message": "Simplify the char correctness check", "tree": {"sha": "6834b3d170f2980f3fe5d71aaa592f4cd60f253c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6834b3d170f2980f3fe5d71aaa592f4cd60f253c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32eb10f54d33e7d907975fd1a859d987280c6c48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32eb10f54d33e7d907975fd1a859d987280c6c48", "html_url": "https://github.com/rust-lang/rust/commit/32eb10f54d33e7d907975fd1a859d987280c6c48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32eb10f54d33e7d907975fd1a859d987280c6c48/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0b315f262d95a6a95292d638aa7697c21513db4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0b315f262d95a6a95292d638aa7697c21513db4", "html_url": "https://github.com/rust-lang/rust/commit/d0b315f262d95a6a95292d638aa7697c21513db4"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "6a1eb762e9529a7ba8fe849627c3c09dff645fb6", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/32eb10f54d33e7d907975fd1a859d987280c6c48/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32eb10f54d33e7d907975fd1a859d987280c6c48/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=32eb10f54d33e7d907975fd1a859d987280c6c48", "patch": "@@ -1365,11 +1365,9 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M\n         // has no special checks for chars\n         match ty.sty {\n             ty::TyChar => {\n-                assert_eq!(size.bytes(), 4);\n-                let c = self.memory.read_scalar(ptr, ptr_align, Size::from_bytes(4))?.read()?.to_bits(Size::from_bytes(4))? as u32;\n-                match ::std::char::from_u32(c) {\n-                    Some(..) => (),\n-                    None => return err!(InvalidChar(c as u128)),\n+                debug_assert_eq!(size.bytes(), 4);\n+                if ::std::char::from_u32(bits as u32).is_none() {\n+                    return err!(InvalidChar(bits));\n                 }\n             }\n             _ => {},"}]}