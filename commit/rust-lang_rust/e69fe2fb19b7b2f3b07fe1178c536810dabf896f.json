{"sha": "e69fe2fb19b7b2f3b07fe1178c536810dabf896f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2OWZlMmZiMTliN2IyZjNiMDdmZTExNzhjNTM2ODEwZGFiZjg5NmY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-10-02T09:10:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-02T09:10:40Z"}, "message": "Merge pull request #3249 from rust-lang-nursery/rustup\n\nScalarMaybeUndef -> Scalar (Rustup to e812ca472a2a5284e9f15cd9af32285d7ff3fd39)", "tree": {"sha": "3192b835c3f11de6de332606ffc2e32f70ea1ba3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3192b835c3f11de6de332606ffc2e32f70ea1ba3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e69fe2fb19b7b2f3b07fe1178c536810dabf896f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbszYQCRBK7hj4Ov3rIwAAdHIIAFfcqmYQv89NApHBAz6b/ou4\n5IPsoxBrsYtNCrQNY02Fx6P+vJfpRIgXttv8DCa32Lab42aL9TxuvT6vKQLMXcMj\nz8yKje7N3vMKDj5VQ5kzOcX5VcHDOefuN7FsvlvWBMBvo/Ai/fHMMtDjBLOX+fWZ\nArLs/P/oesoG0szhV1M+BNZ7Zb2CJhfCDvoGB8tAi6AAdCl6kudOVeM77n83Cw0P\nzmT343QM+6VToRHhZZFxzzekyI5SQUpRUer3TLqRf5IA8SISE5RtDPfCICTYFfhg\nrkb7KvxTPHAsu5ySEQjzt/AEvMYpJAntMV1rzi8yKdFx9mdXPPI/yJJ7kDRC9Nk=\n=e0BV\n-----END PGP SIGNATURE-----\n", "payload": "tree 3192b835c3f11de6de332606ffc2e32f70ea1ba3\nparent 88e880e00c352e3845b66e7c803d8bcc726f1241\nparent be1094bd8db7ed662206601c6917a8ee0d965803\nauthor Manish Goregaokar <manishsmail@gmail.com> 1538471440 +0200\ncommitter GitHub <noreply@github.com> 1538471440 +0200\n\nMerge pull request #3249 from rust-lang-nursery/rustup\n\nScalarMaybeUndef -> Scalar (Rustup to e812ca472a2a5284e9f15cd9af32285d7ff3fd39)"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e69fe2fb19b7b2f3b07fe1178c536810dabf896f", "html_url": "https://github.com/rust-lang/rust/commit/e69fe2fb19b7b2f3b07fe1178c536810dabf896f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e69fe2fb19b7b2f3b07fe1178c536810dabf896f/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88e880e00c352e3845b66e7c803d8bcc726f1241", "url": "https://api.github.com/repos/rust-lang/rust/commits/88e880e00c352e3845b66e7c803d8bcc726f1241", "html_url": "https://github.com/rust-lang/rust/commit/88e880e00c352e3845b66e7c803d8bcc726f1241"}, {"sha": "be1094bd8db7ed662206601c6917a8ee0d965803", "url": "https://api.github.com/repos/rust-lang/rust/commits/be1094bd8db7ed662206601c6917a8ee0d965803", "html_url": "https://github.com/rust-lang/rust/commit/be1094bd8db7ed662206601c6917a8ee0d965803"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "4e09e039100c24ced56a2435e1ba42dcf7d03260", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e69fe2fb19b7b2f3b07fe1178c536810dabf896f/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e69fe2fb19b7b2f3b07fe1178c536810dabf896f/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=e69fe2fb19b7b2f3b07fe1178c536810dabf896f", "patch": "@@ -409,7 +409,7 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n }\n \n pub fn miri_to_const<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, result: &ty::Const<'tcx>) -> Option<Constant> {\n-    use crate::rustc::mir::interpret::{Scalar, ScalarMaybeUndef, ConstValue};\n+    use crate::rustc::mir::interpret::{Scalar, ConstValue};\n     match result.val {\n         ConstValue::Scalar(Scalar::Bits{ bits: b, ..}) => match result.ty.sty {\n             ty::Bool => Some(Constant::Bool(b == 1)),\n@@ -420,8 +420,7 @@ pub fn miri_to_const<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, result: &ty::Const<'\n             _ => None,\n         },\n         ConstValue::ScalarPair(Scalar::Ptr(ptr),\n-                               ScalarMaybeUndef::Scalar(\n-                                Scalar::Bits { bits: n, .. })) => match result.ty.sty {\n+                                Scalar::Bits { bits: n, .. }) => match result.ty.sty {\n             ty::Ref(_, tam, _) => match tam.sty {\n                 ty::Str => {\n                     let alloc = tcx"}]}