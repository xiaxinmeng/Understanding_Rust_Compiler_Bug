{"sha": "da3e11fc4298e6e832eba0575b77a21493a7adfe", "node_id": "C_kwDOAAsO6NoAKGRhM2UxMWZjNDI5OGU2ZTgzMmViYTA1NzViNzdhMjE0OTNhN2FkZmU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-03T00:43:28Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-03T00:43:48Z"}, "message": "wordsmithing", "tree": {"sha": "ef309667655614834609e5b3f36e5949684e5182", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef309667655614834609e5b3f36e5949684e5182"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da3e11fc4298e6e832eba0575b77a21493a7adfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da3e11fc4298e6e832eba0575b77a21493a7adfe", "html_url": "https://github.com/rust-lang/rust/commit/da3e11fc4298e6e832eba0575b77a21493a7adfe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da3e11fc4298e6e832eba0575b77a21493a7adfe/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4aca2bc889a657825ea74db2b0dca1d7ea87a44", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4aca2bc889a657825ea74db2b0dca1d7ea87a44", "html_url": "https://github.com/rust-lang/rust/commit/c4aca2bc889a657825ea74db2b0dca1d7ea87a44"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "37940c7921360a8f7d94e38055bbf8224cbaed93", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/da3e11fc4298e6e832eba0575b77a21493a7adfe/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da3e11fc4298e6e832eba0575b77a21493a7adfe/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=da3e11fc4298e6e832eba0575b77a21493a7adfe", "patch": "@@ -1212,8 +1212,8 @@ extern \"rust-intrinsic\" {\n     /// `transmute` is semantically equivalent to a bitwise move of one type\n     /// into another. It copies the bits from the source value into the\n     /// destination value, then forgets the original. Note that source and destination\n-    /// are passed by-value, which means if `T` or `U` contains padding, that padding\n-    /// might *not* be preserved by `transmute`.\n+    /// are passed by-value, which means if `T` or `U` contain padding, that padding\n+    /// is *not* guaranteed to be preserved by `transmute`.\n     ///\n     /// Both the argument and the result must be [valid](../../nomicon/what-unsafe-does.html) at\n     /// their given type. Violating this condition leads to [undefined behavior][ub]. The compiler\n@@ -1225,6 +1225,8 @@ extern \"rust-intrinsic\" {\n     ///\n     /// Transmuting pointers to integers in a `const` context is [undefined behavior][ub].\n     /// Any attempt to use the resulting value for integer operations will abort const-evaluation.\n+    /// (And even outside `const`, such transmutation is touching on many unspecified aspects of the\n+    /// Rust memory model and should be avoided. See below for alternatives.)\n     ///\n     /// Because `transmute` is a by-value operation, alignment of the *transmuted values\n     /// themselves* is not a concern. As with any other function, the compiler already ensures"}]}