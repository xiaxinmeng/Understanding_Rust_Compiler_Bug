{"sha": "4ee4287b1da13f56d063fa5b4234780def0d5af1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlZTQyODdiMWRhMTNmNTZkMDYzZmE1YjQyMzQ3ODBkZWYwZDVhZjE=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-01-21T23:49:01Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-01-21T23:49:01Z"}, "message": "Account for non-types in substs for opaque type error messages\n\nFixes #68368\n\nPreviously, I assumed that the substs contained only types, which caused\nthe computed index number to be wrong.", "tree": {"sha": "81203f44a3acba8789dc41bde1024c5cc8ac8e28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81203f44a3acba8789dc41bde1024c5cc8ac8e28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ee4287b1da13f56d063fa5b4234780def0d5af1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl4njigACgkQtAh+UQ6Y\nsWRDMxAAlBaFWLPzz4YHFLUyTV8jrZzejNLBDdBI+8FgOVnLf6uOpNMUdzMT59CN\nuekel14lA5PPoDxZ7G3dOjXoDOwBE0s7WrkfZSwLqHQqLp98oIocsgdYSc+7bqlt\nWGxzPIGfcNMX0Tqk0xLintvAAVS8Is9ewcbt8WRYpdDiZTk792OMKM1xoraay6L4\nO/iVcV+vsTN/ChOGtKqN/9GyjcK+Qilo7/gozoTMPKcyJze0J+D1Woe0VOOHr+Mn\nVHMkvey3upFdj+t8ehMzagYlqboCwlQxd2dJUV2rolNKnt6XeUQ8JO9P4MfBDM6D\nz1JC1004IxJp83cgSxCXgQt6W2aXx9aZqBvHLsG46FggobpL96PJoOAHQqzGjpHF\nY1BfmGlC8u0qCUcLLn5if9LSKL64Bxx/MR0GImzWxCX/HVO2aOjn6+3sTDOjVTrO\nFBjJj/sL81Wyw3lk62iuEne4Nq+Rd3mvjdn/BeqMdpKi0QcG9y+snacCC+VJOkp9\nHIiVr3MfgXHWxmlRqq/09eSd0Li8lg1ho3qRv/VMPjXRZaO9ht1daRg4gc7w8F+k\nJJPdmC5MQb0nF54oZrL46A9L8WqhmINXdqYA9iDn8As/UOJG+sqOMhKqPLtkva2I\nucTk8SJutLKgRAQnQ/4EnK43PrnPn1MUl15Cx0sUA/KfVM9XiTM=\n=2Dfc\n-----END PGP SIGNATURE-----", "payload": "tree 81203f44a3acba8789dc41bde1024c5cc8ac8e28\nparent 5e8897b7b51636f157630e6639b711d698e1d101\nauthor Aaron Hill <aa1ronham@gmail.com> 1579650541 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1579650541 -0500\n\nAccount for non-types in substs for opaque type error messages\n\nFixes #68368\n\nPreviously, I assumed that the substs contained only types, which caused\nthe computed index number to be wrong.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ee4287b1da13f56d063fa5b4234780def0d5af1", "html_url": "https://github.com/rust-lang/rust/commit/4ee4287b1da13f56d063fa5b4234780def0d5af1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ee4287b1da13f56d063fa5b4234780def0d5af1/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e8897b7b51636f157630e6639b711d698e1d101", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e8897b7b51636f157630e6639b711d698e1d101", "html_url": "https://github.com/rust-lang/rust/commit/5e8897b7b51636f157630e6639b711d698e1d101"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "843872d0ff99a1888c680766a8db9e628706a39f", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4ee4287b1da13f56d063fa5b4234780def0d5af1/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ee4287b1da13f56d063fa5b4234780def0d5af1/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=4ee4287b1da13f56d063fa5b4234780def0d5af1", "patch": "@@ -1673,8 +1673,15 @@ fn find_opaque_ty_constraints(tcx: TyCtxt<'_>, def_id: DefId) -> Ty<'_> {\n                     ty::Param(_) => true,\n                     _ => false,\n                 };\n-                let bad_substs: Vec<_> =\n-                    substs.types().enumerate().filter(|(_, ty)| !is_param(ty)).collect();\n+                let bad_substs: Vec<_> = substs\n+                    .iter()\n+                    .enumerate()\n+                    .filter_map(|(i, k)| {\n+                        if let GenericArgKind::Type(ty) = k.unpack() { Some((i, ty)) } else { None }\n+                    })\n+                    .filter(|(_, ty)| !is_param(ty))\n+                    .collect();\n+\n                 if !bad_substs.is_empty() {\n                     let identity_substs = InternalSubsts::identity_for_item(self.tcx, self.def_id);\n                     for (i, bad_subst) in bad_substs {"}, {"sha": "d00f8d7a90119a6029f25798f3aabb6e54661759", "filename": "src/test/ui/type-alias-impl-trait/issue-68368-non-defining-use.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4ee4287b1da13f56d063fa5b4234780def0d5af1/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ee4287b1da13f56d063fa5b4234780def0d5af1/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.rs?ref=4ee4287b1da13f56d063fa5b4234780def0d5af1", "patch": "@@ -0,0 +1,13 @@\n+// Regression test for issue #68368\n+// Ensures that we don't ICE when emitting an error\n+// for a non-defining use when lifetimes are involved\n+\n+#![feature(type_alias_impl_trait)]\n+trait Trait<T> {}\n+type Alias<'a, U> = impl Trait<U>; //~ ERROR could not find defining uses\n+fn f<'a>() -> Alias<'a, ()> {}\n+//~^ ERROR defining opaque type use does not fully define opaque type: generic parameter `U`\n+\n+fn main() {}\n+\n+impl Trait<()> for () {}"}, {"sha": "b585942406fd4e8a0e58412a3978506be37e7912", "filename": "src/test/ui/type-alias-impl-trait/issue-68368-non-defining-use.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4ee4287b1da13f56d063fa5b4234780def0d5af1/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4ee4287b1da13f56d063fa5b4234780def0d5af1/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-68368-non-defining-use.stderr?ref=4ee4287b1da13f56d063fa5b4234780def0d5af1", "patch": "@@ -0,0 +1,14 @@\n+error: defining opaque type use does not fully define opaque type: generic parameter `U` is specified as concrete type `()`\n+  --> $DIR/issue-68368-non-defining-use.rs:8:1\n+   |\n+LL | fn f<'a>() -> Alias<'a, ()> {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: could not find defining uses\n+  --> $DIR/issue-68368-non-defining-use.rs:7:1\n+   |\n+LL | type Alias<'a, U> = impl Trait<U>;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}]}