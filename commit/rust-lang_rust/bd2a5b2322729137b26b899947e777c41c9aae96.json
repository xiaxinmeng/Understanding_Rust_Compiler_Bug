{"sha": "bd2a5b2322729137b26b899947e777c41c9aae96", "node_id": "C_kwDOAAsO6NoAKGJkMmE1YjIzMjI3MjkxMzdiMjZiODk5OTQ3ZTc3N2M0MWM5YWFlOTY", "commit": {"author": {"name": "blyxyas", "email": "blyxyas@gmail.com", "date": "2023-04-03T16:42:00Z"}, "committer": {"name": "blyxyas", "email": "blyxyas@gmail.com", "date": "2023-04-03T16:42:00Z"}, "message": "Remove check for `#[cfg(test)]`", "tree": {"sha": "bdc5820dede462b679d812b9637920bac59b953f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdc5820dede462b679d812b9637920bac59b953f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd2a5b2322729137b26b899947e777c41c9aae96", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEM3aofraJSaf7CtgpTTgXC1ovwzQFAmQrAdgACgkQTTgXC1ov\nwzQl0xAAmjapikpkk8fynE6YuxB2Pj6HLghY/v6Izl7gIsbneNWbKJRQmpuTmoPi\ncC3oV4/E+pH3XuokaLL/Rv3CBtGJsM37Rxeq4zqpI9LcEW1vc1LoMBFoyZLW/q7X\ncLvlACKdeiMUmQZI0/w6qSIGOkE9CszPvWgkT/J8ziJthYVZyCqG7b8mK1Pr5v1L\nUl8qngPBoT8+SFYtPSSqE9O0dInU0zKo8hVhuQ8Yk+N5ex2R0cB59CrVtplNXpVD\nrc7xCVfaMTkhDe440pkmh1+FbhioJt/M93gbEKu/CVRuoZN41q87dIDa3iFx0XvA\n4fLCcaxeS6zPyCw7B90mM/aNO1gmqfvafLplFXD55vEmjobJDEVrv+AbNUPUs47w\nb3ERKh71XQP/0cNUc8bKGq6Hgethexh8frv9JMqX/CRWNZXoYvvCrYg6TqD+NmxO\nzqsV0ChgXJksolp/FF1+dYSHNXGevahATvy25Ef+8gxKeGSCOdeKCkKyj7FPB9A/\nKvWkEAOg0fNg3RQrULDwKgArJ6VJh2CYhuZJyh7e6BtxYx20apx8kA5fK/6QyymN\ndEPw9e8x8OMnNiDKxVs273DAYB6hGn4AgZ31/FwV8QDrVBUQ6mR1ll0TPjPFHTXN\n8kmrrlXZun0mSbZmaOoilJXcLXDw+SuHO2Pwj4UaghWGVYWUj98=\n=vh4A\n-----END PGP SIGNATURE-----", "payload": "tree bdc5820dede462b679d812b9637920bac59b953f\nparent b2856a763e2dcb4ffeaf918a7c0d54f6e950cc21\nauthor blyxyas <blyxyas@gmail.com> 1680540120 +0200\ncommitter blyxyas <blyxyas@gmail.com> 1680540120 +0200\n\nRemove check for `#[cfg(test)]`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd2a5b2322729137b26b899947e777c41c9aae96", "html_url": "https://github.com/rust-lang/rust/commit/bd2a5b2322729137b26b899947e777c41c9aae96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd2a5b2322729137b26b899947e777c41c9aae96/comments", "author": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2856a763e2dcb4ffeaf918a7c0d54f6e950cc21", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2856a763e2dcb4ffeaf918a7c0d54f6e950cc21", "html_url": "https://github.com/rust-lang/rust/commit/b2856a763e2dcb4ffeaf918a7c0d54f6e950cc21"}], "stats": {"total": 38, "additions": 5, "deletions": 33}, "files": [{"sha": "c16d66215189983e22baa832119d51a0cace8b0d", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd2a5b2322729137b26b899947e777c41c9aae96/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd2a5b2322729137b26b899947e777c41c9aae96/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=bd2a5b2322729137b26b899947e777c41c9aae96", "patch": "@@ -952,7 +952,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         ))\n     });\n     store.register_late_pass(|_| Box::new(lines_filter_map_ok::LinesFilterMapOk));\n-    store.register_late_pass(|_| Box::new(tests_outside_test_module::TestsOutsideTestModule::new()));\n+    store.register_late_pass(|_| Box::new(tests_outside_test_module::TestsOutsideTestModule));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "e454008c68d956db72039993e93ea55b66301a69", "filename": "clippy_lints/src/tests_outside_test_module.rs", "status": "modified", "additions": 4, "deletions": 32, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/bd2a5b2322729137b26b899947e777c41c9aae96/clippy_lints%2Fsrc%2Ftests_outside_test_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd2a5b2322729137b26b899947e777c41c9aae96/clippy_lints%2Fsrc%2Ftests_outside_test_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftests_outside_test_module.rs?ref=bd2a5b2322729137b26b899947e777c41c9aae96", "patch": "@@ -1,8 +1,7 @@\n-use clippy_utils::{diagnostics::span_lint_and_note, is_in_cfg_test, is_in_test_function, is_test_module_or_function};\n-use rustc_data_structures::sync::par_for_each_in;\n-use rustc_hir::{intravisit::FnKind, Body, FnDecl, HirId, ItemKind, Mod};\n+use clippy_utils::{diagnostics::span_lint_and_note, is_in_cfg_test, is_in_test_function};\n+use rustc_hir::{intravisit::FnKind, Body, FnDecl};\n use rustc_lint::{LateContext, LateLintPass};\n-use rustc_session::{declare_tool_lint, impl_lint_pass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::{def_id::LocalDefId, Span};\n \n declare_clippy_lint! {\n@@ -43,35 +42,9 @@ declare_clippy_lint! {\n     \"The test function `my_cool_test` is outside the testing module `tests`.\"\n }\n \n-pub(crate) struct TestsOutsideTestModule {\n-    pub test_mod_exists: bool,\n-}\n-\n-impl TestsOutsideTestModule {\n-    pub fn new() -> Self {\n-        Self { test_mod_exists: false }\n-    }\n-}\n-\n-impl_lint_pass!(TestsOutsideTestModule => [TESTS_OUTSIDE_TEST_MODULE]);\n+declare_lint_pass!(TestsOutsideTestModule => [TESTS_OUTSIDE_TEST_MODULE]);\n \n impl LateLintPass<'_> for TestsOutsideTestModule {\n-    fn check_mod(&mut self, cx: &LateContext<'_>, _: &Mod<'_>, _: HirId) {\n-        self.test_mod_exists = false;\n-\n-        // par_for_each_item uses Fn, while par_for_each_in uses FnMut\n-        par_for_each_in(cx.tcx.hir_crate_items(()).items(), |itemid| {\n-            let item = cx.tcx.hir().item(itemid);\n-            if_chain! {\n-                if matches!(item.kind, ItemKind::Mod(_));\n-                if is_test_module_or_function(cx.tcx, item);\n-                then {\n-                    self.test_mod_exists = true;\n-                }\n-            }\n-        });\n-    }\n-\n     fn check_fn(\n         &mut self,\n         cx: &LateContext<'_>,\n@@ -83,7 +56,6 @@ impl LateLintPass<'_> for TestsOutsideTestModule {\n     ) {\n         if_chain! {\n             if !matches!(kind, FnKind::Closure);\n-            if self.test_mod_exists;\n             if is_in_test_function(cx.tcx, body.id().hir_id);\n             if !is_in_cfg_test(cx.tcx, body.id().hir_id);\n             then {"}]}