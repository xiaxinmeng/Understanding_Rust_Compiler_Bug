{"sha": "448460958347cc633c9aea993253be076fda1580", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ODQ2MDk1ODM0N2NjNjMzYzlhZWE5OTMyNTNiZTA3NmZkYTE1ODA=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-08-27T11:01:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-27T11:01:27Z"}, "message": "Merge pull request #2971 from topecongiro/issue-2969\n\nUse span_ends_with_comma to find a trailing comma in an attribute", "tree": {"sha": "19fb32707ca7432683230ff78708876ce61153eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19fb32707ca7432683230ff78708876ce61153eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/448460958347cc633c9aea993253be076fda1580", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbg9oHCRBK7hj4Ov3rIwAAdHIIAC2meXTROg2t5bTvDmht+jZ3\n+DL7rzCj4CysS+Ewx3MEYPnWzvCXCYx3XVC/BKqTTAtPmE51MZZ5M2x5vGA86B2f\nSBDCUdDyKDkpdztJHkQa6PniFhKCirg5ahW3OumZbSyXTnqS7qQYvBMFJ/3PqV2q\nAxi44KZyv6Cc9rMuNz2YFBBB3ENfFQV1KDKvGtSxFqCGI4o4c6CVC3rgeLUGH1Qm\n6Y6rQXpHzep/e2awn8BTf56yMb3lEMXoev+aJ7geC9iq89u2qlXOYLE/zLDC2bSY\n9Ngw/AYqyZJk7vbpALtcvfhyrM5MIZpCi3z6S/UqWeyZbjD9QFZrh+WpYnI4uIs=\n=nFkl\n-----END PGP SIGNATURE-----\n", "payload": "tree 19fb32707ca7432683230ff78708876ce61153eb\nparent 1c408818c8a752dd584e7858b4afd3ceb011a7da\nparent 0d60f6715df7bf7bff875b6492f06702564c25f2\nauthor Nick Cameron <nrc@ncameron.org> 1535367687 +1200\ncommitter GitHub <noreply@github.com> 1535367687 +1200\n\nMerge pull request #2971 from topecongiro/issue-2969\n\nUse span_ends_with_comma to find a trailing comma in an attribute"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/448460958347cc633c9aea993253be076fda1580", "html_url": "https://github.com/rust-lang/rust/commit/448460958347cc633c9aea993253be076fda1580", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/448460958347cc633c9aea993253be076fda1580/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c408818c8a752dd584e7858b4afd3ceb011a7da", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c408818c8a752dd584e7858b4afd3ceb011a7da", "html_url": "https://github.com/rust-lang/rust/commit/1c408818c8a752dd584e7858b4afd3ceb011a7da"}, {"sha": "0d60f6715df7bf7bff875b6492f06702564c25f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d60f6715df7bf7bff875b6492f06702564c25f2", "html_url": "https://github.com/rust-lang/rust/commit/0d60f6715df7bf7bff875b6492f06702564c25f2"}], "stats": {"total": 53, "additions": 48, "deletions": 5}, "files": [{"sha": "f4b84e51a30b741972a45bf2e09145d6fd56dac6", "filename": "src/attr.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/448460958347cc633c9aea993253be076fda1580/src%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/448460958347cc633c9aea993253be076fda1580/src%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fattr.rs?ref=448460958347cc633c9aea993253be076fda1580", "patch": "@@ -217,11 +217,8 @@ impl Rewrite for ast::MetaItem {\n             ast::MetaItemKind::List(ref list) => {\n                 let path = rewrite_path(context, PathContext::Type, None, &self.ident, shape)?;\n \n-                let snippet = context.snippet(self.span);\n-                // 2 = )] (this might go wrong if there is whitespace between the brackets, but\n-                // it's close enough).\n-                let snippet = snippet[..snippet.len() - 2].trim();\n-                let trailing_comma = if snippet.ends_with(',') { \",\" } else { \"\" };\n+                let has_comma = ::expr::span_ends_with_comma(context, self.span);\n+                let trailing_comma = if has_comma { \",\" } else { \"\" };\n                 let combine = list.len() == 1 && match list[0].node {\n                     ast::NestedMetaItemKind::Literal(..) => false,\n                     ast::NestedMetaItemKind::MetaItem(ref inner_meta_item) => {"}, {"sha": "113464112695917f2627189a6734a0846ce5d811", "filename": "tests/source/attrib.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/448460958347cc633c9aea993253be076fda1580/tests%2Fsource%2Fattrib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/448460958347cc633c9aea993253be076fda1580/tests%2Fsource%2Fattrib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fattrib.rs?ref=448460958347cc633c9aea993253be076fda1580", "patch": "@@ -190,3 +190,23 @@ pub struct Params {\n   job: Option<Job>\n }\n }\n+\n+// #2969\n+#[cfg(not(all(feature=\"std\",\n+              any(target_os = \"linux\", target_os = \"android\",\n+                  target_os = \"netbsd\",\n+                  target_os = \"dragonfly\",\n+                  target_os = \"haiku\",\n+                  target_os = \"emscripten\",\n+                  target_os = \"solaris\",\n+                  target_os = \"cloudabi\",\n+                  target_os = \"macos\", target_os = \"ios\",\n+                  target_os = \"freebsd\",\n+                  target_os = \"openbsd\", target_os = \"bitrig\",\n+                  target_os = \"redox\",\n+                  target_os = \"fuchsia\",\n+                  windows,\n+                  all(target_arch = \"wasm32\", feature = \"stdweb\"),\n+                  all(target_arch = \"wasm32\", feature = \"wasm-bindgen\"),\n+              ))))]\n+type Os = NoSource;"}, {"sha": "84841f33d8ef511cd8b115d835d54697a9bd9d2a", "filename": "tests/target/attrib.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/448460958347cc633c9aea993253be076fda1580/tests%2Ftarget%2Fattrib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/448460958347cc633c9aea993253be076fda1580/tests%2Ftarget%2Fattrib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fattrib.rs?ref=448460958347cc633c9aea993253be076fda1580", "patch": "@@ -219,3 +219,29 @@ mod issue_2620 {\n         job: Option<Job>,\n     }\n }\n+\n+// #2969\n+#[cfg(not(all(\n+    feature = \"std\",\n+    any(\n+        target_os = \"linux\",\n+        target_os = \"android\",\n+        target_os = \"netbsd\",\n+        target_os = \"dragonfly\",\n+        target_os = \"haiku\",\n+        target_os = \"emscripten\",\n+        target_os = \"solaris\",\n+        target_os = \"cloudabi\",\n+        target_os = \"macos\",\n+        target_os = \"ios\",\n+        target_os = \"freebsd\",\n+        target_os = \"openbsd\",\n+        target_os = \"bitrig\",\n+        target_os = \"redox\",\n+        target_os = \"fuchsia\",\n+        windows,\n+        all(target_arch = \"wasm32\", feature = \"stdweb\"),\n+        all(target_arch = \"wasm32\", feature = \"wasm-bindgen\"),\n+    )\n+)))]\n+type Os = NoSource;"}]}