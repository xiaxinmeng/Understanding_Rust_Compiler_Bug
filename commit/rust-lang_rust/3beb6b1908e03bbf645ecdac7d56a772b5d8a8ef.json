{"sha": "3beb6b1908e03bbf645ecdac7d56a772b5d8a8ef", "node_id": "C_kwDOAAsO6NoAKDNiZWI2YjE5MDhlMDNiYmY2NDVlY2RhYzdkNTZhNzcyYjVkOGE4ZWY", "commit": {"author": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2021-12-14T23:36:19Z"}, "committer": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2021-12-14T23:36:19Z"}, "message": "Address review comments", "tree": {"sha": "42858636e66594cc99b667be090926b688c02d8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42858636e66594cc99b667be090926b688c02d8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3beb6b1908e03bbf645ecdac7d56a772b5d8a8ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3beb6b1908e03bbf645ecdac7d56a772b5d8a8ef", "html_url": "https://github.com/rust-lang/rust/commit/3beb6b1908e03bbf645ecdac7d56a772b5d8a8ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3beb6b1908e03bbf645ecdac7d56a772b5d8a8ef/comments", "author": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb609a99044adc07ea4cdb0b4927f4ad461bb4b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb609a99044adc07ea4cdb0b4927f4ad461bb4b5", "html_url": "https://github.com/rust-lang/rust/commit/cb609a99044adc07ea4cdb0b4927f4ad461bb4b5"}], "stats": {"total": 28, "additions": 12, "deletions": 16}, "files": [{"sha": "3c43671dd34c9e0f1e44581989f1c1751880ba5f", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3beb6b1908e03bbf645ecdac7d56a772b5d8a8ef/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3beb6b1908e03bbf645ecdac7d56a772b5d8a8ef/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=3beb6b1908e03bbf645ecdac7d56a772b5d8a8ef", "patch": "@@ -1893,7 +1893,7 @@ declare_clippy_lint! {\n     /// and other `to_owned`-like functions.\n     ///\n     /// ### Why is this bad?\n-    /// The unnecessary calls result in unnecessary allocations.\n+    /// The unnecessary calls result in useless allocations.\n     ///\n     /// ### Example\n     /// ```rust"}, {"sha": "c48bacfce0d37739f159b379fac6d10921093dac", "filename": "clippy_lints/src/methods/unnecessary_to_owned.rs", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/3beb6b1908e03bbf645ecdac7d56a772b5d8a8ef/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3beb6b1908e03bbf645ecdac7d56a772b5d8a8ef/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs?ref=3beb6b1908e03bbf645ecdac7d56a772b5d8a8ef", "patch": "@@ -107,21 +107,17 @@ fn check_addr_of_expr(\n         then {\n             let (target_ty, n_target_refs) = peel_mid_ty_refs(target_ty);\n             let (receiver_ty, n_receiver_refs) = peel_mid_ty_refs(receiver_ty);\n-            if_chain! {\n-                if receiver_ty == target_ty;\n-                if n_target_refs >= n_receiver_refs;\n-                then {\n-                    span_lint_and_sugg(\n-                        cx,\n-                        UNNECESSARY_TO_OWNED,\n-                        parent.span,\n-                        &format!(\"unnecessary use of `{}`\", method_name),\n-                        \"use\",\n-                        format!(\"{:&>width$}{}\", \"\", receiver_snippet, width = n_target_refs - n_receiver_refs),\n-                        Applicability::MachineApplicable,\n-                    );\n-                    return true;\n-                }\n+            if receiver_ty == target_ty && n_target_refs >= n_receiver_refs {\n+                span_lint_and_sugg(\n+                    cx,\n+                    UNNECESSARY_TO_OWNED,\n+                    parent.span,\n+                    &format!(\"unnecessary use of `{}`\", method_name),\n+                    \"use\",\n+                    format!(\"{:&>width$}{}\", \"\", receiver_snippet, width = n_target_refs - n_receiver_refs),\n+                    Applicability::MachineApplicable,\n+                );\n+                return true;\n             }\n             if_chain! {\n                 if let Some(deref_trait_id) = cx.tcx.get_diagnostic_item(sym::Deref);"}]}