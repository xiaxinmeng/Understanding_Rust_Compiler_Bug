{"sha": "77e34a69bbbec0ef05dee9750ff3e7db4eb35d59", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZTM0YTY5YmJiZWMwZWYwNWRlZTk3NTBmZjNlN2RiNGViMzVkNTk=", "commit": {"author": {"name": "Francis Murillo", "email": "francis.murillo@protonmail.com", "date": "2020-10-05T03:44:54Z"}, "committer": {"name": "Francis Murillo", "email": "francis.murillo@protonmail.com", "date": "2020-10-25T09:41:30Z"}, "message": "Inline is_mut_mutex_lock_call", "tree": {"sha": "99ebbfe2064cbfd36a2b3ef4cc71e7d522988162", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99ebbfe2064cbfd36a2b3ef4cc71e7d522988162"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77e34a69bbbec0ef05dee9750ff3e7db4eb35d59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77e34a69bbbec0ef05dee9750ff3e7db4eb35d59", "html_url": "https://github.com/rust-lang/rust/commit/77e34a69bbbec0ef05dee9750ff3e7db4eb35d59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77e34a69bbbec0ef05dee9750ff3e7db4eb35d59/comments", "author": {"login": "FrancisMurillo", "id": 7600642, "node_id": "MDQ6VXNlcjc2MDA2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/7600642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrancisMurillo", "html_url": "https://github.com/FrancisMurillo", "followers_url": "https://api.github.com/users/FrancisMurillo/followers", "following_url": "https://api.github.com/users/FrancisMurillo/following{/other_user}", "gists_url": "https://api.github.com/users/FrancisMurillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrancisMurillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrancisMurillo/subscriptions", "organizations_url": "https://api.github.com/users/FrancisMurillo/orgs", "repos_url": "https://api.github.com/users/FrancisMurillo/repos", "events_url": "https://api.github.com/users/FrancisMurillo/events{/privacy}", "received_events_url": "https://api.github.com/users/FrancisMurillo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FrancisMurillo", "id": 7600642, "node_id": "MDQ6VXNlcjc2MDA2NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/7600642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrancisMurillo", "html_url": "https://github.com/FrancisMurillo", "followers_url": "https://api.github.com/users/FrancisMurillo/followers", "following_url": "https://api.github.com/users/FrancisMurillo/following{/other_user}", "gists_url": "https://api.github.com/users/FrancisMurillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrancisMurillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrancisMurillo/subscriptions", "organizations_url": "https://api.github.com/users/FrancisMurillo/orgs", "repos_url": "https://api.github.com/users/FrancisMurillo/repos", "events_url": "https://api.github.com/users/FrancisMurillo/events{/privacy}", "received_events_url": "https://api.github.com/users/FrancisMurillo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec0c3afa7303383ee039c252b59b56023052ae2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec0c3afa7303383ee039c252b59b56023052ae2e", "html_url": "https://github.com/rust-lang/rust/commit/ec0c3afa7303383ee039c252b59b56023052ae2e"}], "stats": {"total": 21, "additions": 5, "deletions": 16}, "files": [{"sha": "ca3371a5d75c2a17a1b4ee48a1c12a55762e7b78", "filename": "clippy_lints/src/mut_mutex_lock.rs", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/77e34a69bbbec0ef05dee9750ff3e7db4eb35d59/clippy_lints%2Fsrc%2Fmut_mutex_lock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77e34a69bbbec0ef05dee9750ff3e7db4eb35d59/clippy_lints%2Fsrc%2Fmut_mutex_lock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_mutex_lock.rs?ref=77e34a69bbbec0ef05dee9750ff3e7db4eb35d59", "patch": "@@ -44,7 +44,11 @@ declare_lint_pass!(MutMutexLock => [MUT_MUTEX_LOCK]);\n impl<'tcx> LateLintPass<'tcx> for MutMutexLock {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, ex: &'tcx Expr<'tcx>) {\n         if_chain! {\n-            if is_mut_mutex_lock_call(cx, ex).is_some();\n+            if let ExprKind::MethodCall(path, _span, args, _) = &ex.kind;\n+            if path.ident.name == sym!(lock);\n+            let ty = cx.typeck_results().expr_ty(&args[0]);\n+            if let ty::Ref(_, inner_ty, Mutability::Mut) = ty.kind();\n+            if is_type_diagnostic_item(cx, inner_ty, sym!(mutex_type));\n             then {\n                 span_lint_and_help(\n                     cx,\n@@ -58,18 +62,3 @@ impl<'tcx> LateLintPass<'tcx> for MutMutexLock {\n         }\n     }\n }\n-\n-fn is_mut_mutex_lock_call<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) -> Option<&'tcx Expr<'tcx>> {\n-    if_chain! {\n-        if let ExprKind::MethodCall(path, _span, args, _) = &expr.kind;\n-        if path.ident.name == sym!(lock);\n-        let ty = cx.typeck_results().expr_ty(&args[0]);\n-        if let ty::Ref(_, inner_ty, Mutability::Mut) = ty.kind();\n-        if is_type_diagnostic_item(cx, inner_ty, sym!(mutex_type));\n-        then {\n-            Some(&args[0])\n-        } else {\n-            None\n-        }\n-    }\n-}"}]}