{"sha": "2fcbf90d6823000ee9a7fa9c4c214ee6a6041931", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmY2JmOTBkNjgyMzAwMGVlOWE3ZmE5YzRjMjE0ZWU2YTYwNDE5MzE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-21T06:21:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-21T06:21:48Z"}, "message": "auto merge of #16552 : jauhien/rust/fix-libdir, r=alexcrichton\n\nFixies #11671\r\n\r\nThis commit changes default relative libdir 'lib' to a relative libdir calculated using LIBDIR provided by --libdir configuration option. In case if no option was provided behavior does not change.", "tree": {"sha": "6c02189272eed187e607c7aff5cd5ba2707c66aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c02189272eed187e607c7aff5cd5ba2707c66aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fcbf90d6823000ee9a7fa9c4c214ee6a6041931", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fcbf90d6823000ee9a7fa9c4c214ee6a6041931", "html_url": "https://github.com/rust-lang/rust/commit/2fcbf90d6823000ee9a7fa9c4c214ee6a6041931", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fcbf90d6823000ee9a7fa9c4c214ee6a6041931/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9f6d696420107f82304b992cf623b806995fe18", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9f6d696420107f82304b992cf623b806995fe18", "html_url": "https://github.com/rust-lang/rust/commit/c9f6d696420107f82304b992cf623b806995fe18"}, {"sha": "e889f8091a5a60d5961f545107b57b8e840204d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e889f8091a5a60d5961f545107b57b8e840204d0", "html_url": "https://github.com/rust-lang/rust/commit/e889f8091a5a60d5961f545107b57b8e840204d0"}], "stats": {"total": 61, "additions": 50, "deletions": 11}, "files": [{"sha": "e3351000ca27684aca45f583cb054ad997211a2a", "filename": "configure", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2fcbf90d6823000ee9a7fa9c4c214ee6a6041931/configure", "raw_url": "https://github.com/rust-lang/rust/raw/2fcbf90d6823000ee9a7fa9c4c214ee6a6041931/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=2fcbf90d6823000ee9a7fa9c4c214ee6a6041931", "patch": "@@ -550,9 +550,19 @@ CFG_LIBDIR_RELATIVE=lib\n if [ \"$CFG_OSTYPE\" = \"pc-windows-gnu\" ]\n then\n     CFG_LIBDIR_RELATIVE=bin\n-fi\n+    CFG_LIBDIR=\"${CFG_PREFIX}/${CFG_LIBDIR_RELATIVE}\"\n+else\n+    valopt libdir \"${CFG_PREFIX}/${CFG_LIBDIR_RELATIVE}\" \"install libraries (ignored on windows platform)\"\n+\n+    case \"$CFG_LIBDIR\" in\n+\t\"$CFG_PREFIX\"/*) CAT_INC=2;;\n+\t\"$CFG_PREFIX\"*)  CAT_INC=1;;\n+\t*)\n+            err \"libdir must begin with the prefix. Use --prefix to set it accordingly.\";;\n+    esac\n \n-valopt libdir \"${CFG_PREFIX}/${CFG_LIBDIR_RELATIVE}\" \"install libraries\"\n+    CFG_LIBDIR_RELATIVE=`echo ${CFG_LIBDIR} | cut -c$((${#CFG_PREFIX}+${CAT_INC}))-`\n+fi\n \n if [ $HELP -eq 1 ]\n then\n@@ -989,6 +999,15 @@ for h in $CFG_HOST\n do\n     for t in $CFG_TARGET\n     do\n+        # host lib dir stage0\n+        make_dir $h/stage0/lib\n+\n+        # target bin dir stage0\n+        make_dir $h/stage0/lib/rustlib/$t/bin\n+\n+        # target lib dir stage0\n+        make_dir $h/stage0/lib/rustlib/$t/lib\n+\n         for i in 0 1 2 3\n         do\n             # host bin dir"}, {"sha": "7b42c5b4ae9dd63062e13a2a9393a100dbaf6877", "filename": "mk/main.mk", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2fcbf90d6823000ee9a7fa9c4c214ee6a6041931/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/2fcbf90d6823000ee9a7fa9c4c214ee6a6041931/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=2fcbf90d6823000ee9a7fa9c4c214ee6a6041931", "patch": "@@ -332,7 +332,15 @@ define SREQ\n # Destinations of artifacts for the host compiler\n HROOT$(1)_H_$(3) = $(3)/stage$(1)\n HBIN$(1)_H_$(3) = $$(HROOT$(1)_H_$(3))/bin\n+ifeq ($$(CFG_WINDOWSY_$(3)),1)\n HLIB$(1)_H_$(3) = $$(HROOT$(1)_H_$(3))/$$(CFG_LIBDIR_RELATIVE)\n+else\n+ifeq ($(1),0)\n+HLIB$(1)_H_$(3) = $$(HROOT$(1)_H_$(3))/lib\n+else\n+HLIB$(1)_H_$(3) = $$(HROOT$(1)_H_$(3))/$$(CFG_LIBDIR_RELATIVE)\n+endif\n+endif\n \n # Destinations of artifacts for target architectures\n TROOT$(1)_T_$(2)_H_$(3) = $$(HLIB$(1)_H_$(3))/rustlib/$(2)"}, {"sha": "8bc48fc7934e22e9079c42197fc588be9c0c377c", "filename": "src/etc/install.sh", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2fcbf90d6823000ee9a7fa9c4c214ee6a6041931/src%2Fetc%2Finstall.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2fcbf90d6823000ee9a7fa9c4c214ee6a6041931/src%2Fetc%2Finstall.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstall.sh?ref=2fcbf90d6823000ee9a7fa9c4c214ee6a6041931", "patch": "@@ -301,9 +301,16 @@ fi\n flag uninstall \"only uninstall from the installation prefix\"\n opt verify 1 \"verify that the installed binaries run correctly\"\n valopt prefix \"/usr/local\" \"set installation prefix\"\n-# NB This isn't quite the same definition as in `configure`.\n-# just using 'lib' instead of CFG_LIBDIR_RELATIVE\n+# NB This is exactly the same definition as in `configure`.\n valopt libdir \"${CFG_PREFIX}/${CFG_LIBDIR_RELATIVE}\" \"install libraries\"\n+case \"$CFG_LIBDIR\" in\n+    \"$CFG_PREFIX\"/*) CAT_INC=2;;\n+    \"$CFG_PREFIX\"*)  CAT_INC=1;;\n+    *)\n+        err \"libdir must begin with the prefix. Use --prefix to set it accordingly.\";;\n+esac\n+CFG_LIBDIR_RELATIVE=`echo ${CFG_LIBDIR} | cut -c$((${#CFG_PREFIX}+${CAT_INC}))-`\n+\n valopt mandir \"${CFG_PREFIX}/share/man\" \"install man pages in PATH\"\n \n if [ $HELP -eq 1 ]\n@@ -428,9 +435,9 @@ while read p; do\n     # Decide the destination of the file\n     FILE_INSTALL_PATH=\"${CFG_PREFIX}/$p\"\n \n-    if echo \"$p\" | grep \"^lib/\" > /dev/null\n+    if echo \"$p\" | grep \"^${CFG_LIBDIR_RELATIVE}/\" > /dev/null\n     then\n-        pp=`echo $p | sed 's/^lib\\///'`\n+        pp=`echo $p | sed \"s%^${CFG_LIBDIR_RELATIVE}/%%\"`\n         FILE_INSTALL_PATH=\"${CFG_LIBDIR}/$pp\"\n     fi\n "}, {"sha": "89f3343ef123ac7bf5150057b91e8c7d4617dc2a", "filename": "src/librustc/metadata/filesearch.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2fcbf90d6823000ee9a7fa9c4c214ee6a6041931/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fcbf90d6823000ee9a7fa9c4c214ee6a6041931/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs?ref=2fcbf90d6823000ee9a7fa9c4c214ee6a6041931", "patch": "@@ -257,11 +257,16 @@ fn find_libdir(sysroot: &Path) -> String {\n     // to lib64/lib32. This would be more foolproof by basing the sysroot off\n     // of the directory where librustc is located, rather than where the rustc\n     // binary is.\n-\n-    if sysroot.join(primary_libdir_name()).join(rustlibdir()).exists() {\n-        return primary_libdir_name();\n-    } else {\n-        return secondary_libdir_name();\n+    //If --libdir is set during configuration to the value other than\n+    // \"lib\" (i.e. non-default), this value is used (see issue #16552).\n+\n+    match option_env!(\"CFG_LIBDIR_RELATIVE\") {\n+        Some(libdir) if libdir != \"lib\" => return libdir.to_string(),\n+        _ => if sysroot.join(primary_libdir_name()).join(rustlibdir()).exists() {\n+            return primary_libdir_name();\n+        } else {\n+            return secondary_libdir_name();\n+        }\n     }\n \n     #[cfg(target_word_size = \"64\")]"}]}