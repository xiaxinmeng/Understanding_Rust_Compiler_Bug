{"sha": "aad2334ecb8c9463458c166beb24391c627145a0", "node_id": "C_kwDOAAsO6NoAKGFhZDIzMzRlY2I4Yzk0NjM0NThjMTY2YmViMjQzOTFjNjI3MTQ1YTA", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-08T01:50:10Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-15T03:17:20Z"}, "message": "Make item spans more consistent", "tree": {"sha": "f3e51f9c6f355907bbeebf56000a92c549599a93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3e51f9c6f355907bbeebf56000a92c549599a93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aad2334ecb8c9463458c166beb24391c627145a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aad2334ecb8c9463458c166beb24391c627145a0", "html_url": "https://github.com/rust-lang/rust/commit/aad2334ecb8c9463458c166beb24391c627145a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aad2334ecb8c9463458c166beb24391c627145a0/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ba1fec234d07f43765c3c65ac341a4e64fb911a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ba1fec234d07f43765c3c65ac341a4e64fb911a", "html_url": "https://github.com/rust-lang/rust/commit/1ba1fec234d07f43765c3c65ac341a4e64fb911a"}], "stats": {"total": 202, "additions": 83, "deletions": 119}, "files": [{"sha": "d4c7f3f8fa2651de71f937d24c19dbd67329cbff", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/aad2334ecb8c9463458c166beb24391c627145a0/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad2334ecb8c9463458c166beb24391c627145a0/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=aad2334ecb8c9463458c166beb24391c627145a0", "patch": "@@ -781,12 +781,13 @@ fn check_item_type<'tcx>(tcx: TyCtxt<'tcx>, id: hir::ItemId) {\n         id.def_id,\n         tcx.def_path_str(id.def_id.to_def_id())\n     );\n+    let item_span = tcx.def_span(id.def_id);\n     let _indenter = indenter();\n     match tcx.def_kind(id.def_id) {\n         DefKind::Static(..) => {\n             tcx.ensure().typeck(id.def_id);\n-            maybe_check_static_with_link_section(tcx, id.def_id, tcx.def_span(id.def_id));\n-            check_static_inhabited(tcx, id.def_id, tcx.def_span(id.def_id));\n+            maybe_check_static_with_link_section(tcx, id.def_id, item_span);\n+            check_static_inhabited(tcx, id.def_id, item_span);\n         }\n         DefKind::Const => {\n             tcx.ensure().typeck(id.def_id);\n@@ -796,7 +797,7 @@ fn check_item_type<'tcx>(tcx: TyCtxt<'tcx>, id: hir::ItemId) {\n             let hir::ItemKind::Enum(ref enum_definition, _) = item.kind else {\n                 return;\n             };\n-            check_enum(tcx, item.span, &enum_definition.variants, item.def_id);\n+            check_enum(tcx, item_span, &enum_definition.variants, item.def_id);\n         }\n         DefKind::Fn => {} // entirely within check_item_body\n         DefKind::Impl => {\n@@ -847,10 +848,10 @@ fn check_item_type<'tcx>(tcx: TyCtxt<'tcx>, id: hir::ItemId) {\n             }\n         }\n         DefKind::Struct => {\n-            check_struct(tcx, id.def_id, tcx.def_span(id.def_id));\n+            check_struct(tcx, id.def_id, item_span);\n         }\n         DefKind::Union => {\n-            check_union(tcx, id.def_id, tcx.def_span(id.def_id));\n+            check_union(tcx, id.def_id, item_span);\n         }\n         DefKind::OpaqueTy => {\n             let item = tcx.hir().item(id);\n@@ -863,7 +864,7 @@ fn check_item_type<'tcx>(tcx: TyCtxt<'tcx>, id: hir::ItemId) {\n             // See https://github.com/rust-lang/rust/issues/75100\n             if !tcx.sess.opts.actually_rustdoc {\n                 let substs = InternalSubsts::identity_for_item(tcx, item.def_id.to_def_id());\n-                check_opaque(tcx, item.def_id, substs, item.span, &origin);\n+                check_opaque(tcx, item.def_id, substs, item_span, &origin);\n             }\n         }\n         DefKind::TyAlias => {\n@@ -1328,7 +1329,6 @@ pub(super) fn check_transparent<'tcx>(tcx: TyCtxt<'tcx>, sp: Span, adt: ty::AdtD\n     if !adt.repr().transparent() {\n         return;\n     }\n-    let sp = tcx.sess.source_map().guess_head_span(sp);\n \n     if adt.is_union() && !tcx.features().transparent_unions {\n         feature_err("}, {"sha": "803bb06fcc2185486687d2b671877705f4dc7f15", "filename": "src/test/ui/enum-discriminant/arbitrary_enum_discriminant-no-repr.stderr", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Fenum-discriminant%2Farbitrary_enum_discriminant-no-repr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Fenum-discriminant%2Farbitrary_enum_discriminant-no-repr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum-discriminant%2Farbitrary_enum_discriminant-no-repr.stderr?ref=aad2334ecb8c9463458c166beb24391c627145a0", "patch": "@@ -1,13 +1,8 @@\n error[E0732]: `#[repr(inttype)]` must be specified\n   --> $DIR/arbitrary_enum_discriminant-no-repr.rs:4:1\n    |\n-LL | / enum Enum {\n-LL | |\n-LL | |   Unit = 1,\n-LL | |   Tuple() = 2,\n-LL | |   Struct{} = 3,\n-LL | | }\n-   | |_^\n+LL | enum Enum {\n+   | ^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "eacea86d67e5523cd3c2e93b7caf1b0ed28d7d69", "filename": "src/test/ui/enum/enum-discrim-autosizing.stderr", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-autosizing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-autosizing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum%2Fenum-discrim-autosizing.stderr?ref=aad2334ecb8c9463458c166beb24391c627145a0", "patch": "@@ -1,16 +1,14 @@\n error[E0081]: discriminant value `0` assigned more than once\n   --> $DIR/enum-discrim-autosizing.rs:6:1\n    |\n-LL | / enum Eu64 {\n-LL | |\n-LL | |     Au64 = 0,\n-   | |            - first assignment of `0`\n-LL | |\n-LL | |     Bu64 = 0x8000_0000_0000_0000\n-   | |            --------------------- second assignment of `0` (overflowed from `9223372036854775808`)\n-LL | |\n-LL | | }\n-   | |_^\n+LL | enum Eu64 {\n+   | ^^^^^^^^^\n+LL |\n+LL |     Au64 = 0,\n+   |            - first assignment of `0`\n+LL |\n+LL |     Bu64 = 0x8000_0000_0000_0000\n+   |            --------------------- second assignment of `0` (overflowed from `9223372036854775808`)\n \n error: aborting due to previous error\n "}, {"sha": "ff6113646bb8afbf211328a8d056ca4de7f4aa71", "filename": "src/test/ui/error-codes/E0081.stderr", "status": "modified", "additions": 27, "deletions": 34, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Ferror-codes%2FE0081.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Ferror-codes%2FE0081.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0081.stderr?ref=aad2334ecb8c9463458c166beb24391c627145a0", "patch": "@@ -1,48 +1,41 @@\n error[E0081]: discriminant value `3` assigned more than once\n   --> $DIR/E0081.rs:1:1\n    |\n-LL | / enum Enum {\n-LL | |\n-LL | |     P = 3,\n-   | |         - first assignment of `3`\n-LL | |\n-LL | |     X = 3,\n-   | |         - second assignment of `3`\n-LL | |\n-LL | |     Y = 5\n-LL | | }\n-   | |_^\n+LL | enum Enum {\n+   | ^^^^^^^^^\n+LL |\n+LL |     P = 3,\n+   |         - first assignment of `3`\n+LL |\n+LL |     X = 3,\n+   |         - second assignment of `3`\n \n error[E0081]: discriminant value `1` assigned more than once\n   --> $DIR/E0081.rs:11:1\n    |\n-LL | / enum EnumOverflowRepr {\n-LL | |\n-LL | |     P = 257,\n-   | |         --- first assignment of `1` (overflowed from `257`)\n-LL | |\n-LL | |     X = 513,\n-   | |         --- second assignment of `1` (overflowed from `513`)\n-LL | |\n-LL | | }\n-   | |_^\n+LL | enum EnumOverflowRepr {\n+   | ^^^^^^^^^^^^^^^^^^^^^\n+LL |\n+LL |     P = 257,\n+   |         --- first assignment of `1` (overflowed from `257`)\n+LL |\n+LL |     X = 513,\n+   |         --- second assignment of `1` (overflowed from `513`)\n \n error[E0081]: discriminant value `-1` assigned more than once\n   --> $DIR/E0081.rs:20:1\n    |\n-LL | / enum NegDisEnum {\n-LL | |\n-LL | |     First = -1,\n-   | |             -- first assignment of `-1`\n-LL | |\n-LL | |     Second = -2,\n-   | |     ----------- assigned discriminant for `Last` was incremented from this discriminant\n-LL | |\n-LL | |     Last,\n-   | |     ---- second assignment of `-1`\n-LL | |\n-LL | | }\n-   | |_^\n+LL | enum NegDisEnum {\n+   | ^^^^^^^^^^^^^^^\n+LL |\n+LL |     First = -1,\n+   |             -- first assignment of `-1`\n+LL |\n+LL |     Second = -2,\n+   |     ----------- assigned discriminant for `Last` was incremented from this discriminant\n+LL |\n+LL |     Last,\n+   |     ---- second assignment of `-1`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "e1bda22b8d19a9dde582623b792fcf1b3b7bbe49", "filename": "src/test/ui/error-codes/E0084.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Ferror-codes%2FE0084.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Ferror-codes%2FE0084.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0084.stderr?ref=aad2334ecb8c9463458c166beb24391c627145a0", "patch": "@@ -4,7 +4,7 @@ error[E0084]: unsupported representation for zero-variant enum\n LL | #[repr(i32)]\n    | ^^^^^^^^^^^^\n LL | enum Foo {}\n-   | ----------- zero-variant enum\n+   | -------- zero-variant enum\n \n error: aborting due to previous error\n "}, {"sha": "8d423484528a189e3f3e0a202f7f716e82776071", "filename": "src/test/ui/error-codes/E0658.stderr", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Ferror-codes%2FE0658.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Ferror-codes%2FE0658.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0658.stderr?ref=aad2334ecb8c9463458c166beb24391c627145a0", "patch": "@@ -1,10 +1,8 @@\n error[E0658]: repr with 128-bit type is unstable\n   --> $DIR/E0658.rs:2:1\n    |\n-LL | / enum Foo {\n-LL | |     Bar(u64),\n-LL | | }\n-   | |_^\n+LL | enum Foo {\n+   | ^^^^^^^^\n    |\n    = note: see issue #56071 <https://github.com/rust-lang/rust/issues/56071> for more information\n    = help: add `#![feature(repr128)]` to the crate attributes to enable"}, {"sha": "3999a6d2d2f896d836b2548f6bee54e7adcef3e7", "filename": "src/test/ui/feature-gates/feature-gate-repr128.stderr", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr128.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr128.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr128.stderr?ref=aad2334ecb8c9463458c166beb24391c627145a0", "patch": "@@ -1,10 +1,8 @@\n error[E0658]: repr with 128-bit type is unstable\n   --> $DIR/feature-gate-repr128.rs:2:1\n    |\n-LL | / enum A {\n-LL | |     A(u64)\n-LL | | }\n-   | |_^\n+LL | enum A {\n+   | ^^^^^^\n    |\n    = note: see issue #56071 <https://github.com/rust-lang/rust/issues/56071> for more information\n    = help: add `#![feature(repr128)]` to the crate attributes to enable"}, {"sha": "1195e0a346ddff0df37508d52559911c16a44426", "filename": "src/test/ui/issues/issue-15524.stderr", "status": "modified", "additions": 25, "deletions": 39, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Fissues%2Fissue-15524.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Fissues%2Fissue-15524.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-15524.stderr?ref=aad2334ecb8c9463458c166beb24391c627145a0", "patch": "@@ -1,53 +1,39 @@\n error[E0081]: discriminant value `1` assigned more than once\n   --> $DIR/issue-15524.rs:3:1\n    |\n-LL | / enum Foo {\n-LL | |\n-LL | |\n-LL | |\n-LL | |     A = 1,\n-   | |         - first assignment of `1`\n-LL | |     B = 1,\n-   | |         - second assignment of `1`\n-...  |\n-LL | |\n-LL | | }\n-   | |_^\n+LL | enum Foo {\n+   | ^^^^^^^^\n+...\n+LL |     A = 1,\n+   |         - first assignment of `1`\n+LL |     B = 1,\n+   |         - second assignment of `1`\n \n error[E0081]: discriminant value `1` assigned more than once\n   --> $DIR/issue-15524.rs:3:1\n    |\n-LL | / enum Foo {\n-LL | |\n-LL | |\n-LL | |\n-LL | |     A = 1,\n-   | |         - first assignment of `1`\n-LL | |     B = 1,\n-LL | |     C = 0,\n-   | |     ----- assigned discriminant for `D` was incremented from this discriminant\n-LL | |     D,\n-   | |     - second assignment of `1`\n-...  |\n-LL | |\n-LL | | }\n-   | |_^\n+LL | enum Foo {\n+   | ^^^^^^^^\n+...\n+LL |     A = 1,\n+   |         - first assignment of `1`\n+LL |     B = 1,\n+LL |     C = 0,\n+   |     ----- assigned discriminant for `D` was incremented from this discriminant\n+LL |     D,\n+   |     - second assignment of `1`\n \n error[E0081]: discriminant value `1` assigned more than once\n   --> $DIR/issue-15524.rs:3:1\n    |\n-LL | / enum Foo {\n-LL | |\n-LL | |\n-LL | |\n-LL | |     A = 1,\n-   | |         - first assignment of `1`\n-...  |\n-LL | |     E = N,\n-   | |         - second assignment of `1`\n-LL | |\n-LL | | }\n-   | |_^\n+LL | enum Foo {\n+   | ^^^^^^^^\n+...\n+LL |     A = 1,\n+   |         - first assignment of `1`\n+...\n+LL |     E = N,\n+   |         - second assignment of `1`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "df99baaf52293f81611fb6da475e6aae3edb7f63", "filename": "src/test/ui/repr/issue-83505-repr-simd.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Frepr%2Fissue-83505-repr-simd.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Frepr%2Fissue-83505-repr-simd.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frepr%2Fissue-83505-repr-simd.stderr?ref=aad2334ecb8c9463458c166beb24391c627145a0", "patch": "@@ -22,7 +22,7 @@ LL | #[repr(simd)]\n    | ^^^^^^^^^^^^^\n ...\n LL | enum Es {}\n-   | ---------- zero-variant enum\n+   | ------- zero-variant enum\n \n error: aborting due to 3 previous errors\n "}, {"sha": "f1c570b952356e1217b303138f9429789974d05c", "filename": "src/test/ui/repr/repr-transparent.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Frepr%2Frepr-transparent.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Frepr%2Frepr-transparent.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frepr%2Frepr-transparent.stderr?ref=aad2334ecb8c9463458c166beb24391c627145a0", "patch": "@@ -34,7 +34,7 @@ error[E0084]: unsupported representation for zero-variant enum\n LL | #[repr(transparent)]\n    | ^^^^^^^^^^^^^^^^^^^^\n LL | enum Void {}\n-   | ------------ zero-variant enum\n+   | --------- zero-variant enum\n \n error[E0731]: transparent enum needs exactly one variant, but has 0\n   --> $DIR/repr-transparent.rs:45:1"}, {"sha": "6b1ba43d2ba6e79c89051577d75200d5511c62c0", "filename": "src/test/ui/tag-variant-disr-dup.stderr", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Ftag-variant-disr-dup.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aad2334ecb8c9463458c166beb24391c627145a0/src%2Ftest%2Fui%2Ftag-variant-disr-dup.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftag-variant-disr-dup.stderr?ref=aad2334ecb8c9463458c166beb24391c627145a0", "patch": "@@ -1,17 +1,13 @@\n error[E0081]: discriminant value `0` assigned more than once\n   --> $DIR/tag-variant-disr-dup.rs:3:1\n    |\n-LL | / enum Color {\n-LL | |\n-LL | |     Red = 0xff0000,\n-LL | |     Green = 0x00ff00,\n-LL | |     Blue = 0x0000ff,\n-LL | |     Black = 0x000000,\n-   | |             -------- first assignment of `0`\n-LL | |     White = 0x000000,\n-   | |             -------- second assignment of `0`\n-LL | | }\n-   | |_^\n+LL | enum Color {\n+   | ^^^^^^^^^^\n+...\n+LL |     Black = 0x000000,\n+   |             -------- first assignment of `0`\n+LL |     White = 0x000000,\n+   |             -------- second assignment of `0`\n \n error: aborting due to previous error\n "}]}