{"sha": "44839802853954ca0eea629bb9d94068966f2960", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ODM5ODAyODUzOTU0Y2EwZWVhNjI5YmI5ZDk0MDY4OTY2ZjI5NjA=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-05T20:00:38Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-10T11:12:26Z"}, "message": "Privatize and remove unused functions", "tree": {"sha": "d840d19952116d49b3d1b1e6351335e5b76d0bc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d840d19952116d49b3d1b1e6351335e5b76d0bc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44839802853954ca0eea629bb9d94068966f2960", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44839802853954ca0eea629bb9d94068966f2960", "html_url": "https://github.com/rust-lang/rust/commit/44839802853954ca0eea629bb9d94068966f2960", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44839802853954ca0eea629bb9d94068966f2960/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae5ed9b72914ea28749072cbaff86bc34a43884c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae5ed9b72914ea28749072cbaff86bc34a43884c", "html_url": "https://github.com/rust-lang/rust/commit/ae5ed9b72914ea28749072cbaff86bc34a43884c"}], "stats": {"total": 28, "additions": 9, "deletions": 19}, "files": [{"sha": "1d28b52362c11a28ab7fafbe98141687076f5667", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 9, "deletions": 19, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/44839802853954ca0eea629bb9d94068966f2960/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44839802853954ca0eea629bb9d94068966f2960/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=44839802853954ca0eea629bb9d94068966f2960", "patch": "@@ -346,26 +346,18 @@ pub fn item_to_string(i: &ast::Item) -> String {\n     to_string(|s| s.print_item(i))\n }\n \n-pub fn impl_item_to_string(i: &ast::ImplItem) -> String {\n+fn impl_item_to_string(i: &ast::ImplItem) -> String {\n     to_string(|s| s.print_impl_item(i))\n }\n \n-pub fn trait_item_to_string(i: &ast::TraitItem) -> String {\n+fn trait_item_to_string(i: &ast::TraitItem) -> String {\n     to_string(|s| s.print_trait_item(i))\n }\n \n pub fn generic_params_to_string(generic_params: &[ast::GenericParam]) -> String {\n     to_string(|s| s.print_generic_params(generic_params))\n }\n \n-pub fn where_clause_to_string(i: &ast::WhereClause) -> String {\n-    to_string(|s| s.print_where_clause(i))\n-}\n-\n-pub fn fn_block_to_string(p: &ast::FnDecl) -> String {\n-    to_string(|s| s.print_fn_block_args(p))\n-}\n-\n pub fn path_to_string(p: &ast::Path) -> String {\n     to_string(|s| s.print_path(p, false, 0))\n }\n@@ -378,7 +370,8 @@ pub fn vis_to_string(v: &ast::Visibility) -> String {\n     to_string(|s| s.print_visibility(v))\n }\n \n-pub fn fun_to_string(decl: &ast::FnDecl,\n+#[cfg(test)]\n+fn fun_to_string(decl: &ast::FnDecl,\n                      header: ast::FnHeader,\n                      name: ast::Ident,\n                      generics: &ast::Generics)\n@@ -392,7 +385,7 @@ pub fn fun_to_string(decl: &ast::FnDecl,\n     })\n }\n \n-pub fn block_to_string(blk: &ast::Block) -> String {\n+fn block_to_string(blk: &ast::Block) -> String {\n     to_string(|s| {\n         // containing cbox, will be closed by print-block at }\n         s.cbox(INDENT_UNIT);\n@@ -414,23 +407,20 @@ pub fn attribute_to_string(attr: &ast::Attribute) -> String {\n     to_string(|s| s.print_attribute(attr))\n }\n \n-pub fn variant_to_string(var: &ast::Variant) -> String {\n+#[cfg(test)]\n+fn variant_to_string(var: &ast::Variant) -> String {\n     to_string(|s| s.print_variant(var))\n }\n \n pub fn arg_to_string(arg: &ast::Arg) -> String {\n     to_string(|s| s.print_arg(arg, false))\n }\n \n-pub fn mac_to_string(arg: &ast::Mac) -> String {\n-    to_string(|s| s.print_mac(arg))\n-}\n-\n-pub fn foreign_item_to_string(arg: &ast::ForeignItem) -> String {\n+fn foreign_item_to_string(arg: &ast::ForeignItem) -> String {\n     to_string(|s| s.print_foreign_item(arg))\n }\n \n-pub fn visibility_qualified(vis: &ast::Visibility, s: &str) -> String {\n+fn visibility_qualified(vis: &ast::Visibility, s: &str) -> String {\n     format!(\"{}{}\", to_string(|s| s.print_visibility(vis)), s)\n }\n "}]}