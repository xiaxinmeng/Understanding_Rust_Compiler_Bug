{"sha": "7483ea817648d0b8faa49d49e5df69fb66b2638d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0ODNlYTgxNzY0OGQwYjhmYWE0OWQ0OWU1ZGY2OWZiNjZiMjYzOGQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-14T18:38:30Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-22T07:06:28Z"}, "message": "generalize truncate and sign_extend to take a Size", "tree": {"sha": "60882540786227c0c412bd388065080cd768aaa8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60882540786227c0c412bd388065080cd768aaa8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7483ea817648d0b8faa49d49e5df69fb66b2638d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7483ea817648d0b8faa49d49e5df69fb66b2638d", "html_url": "https://github.com/rust-lang/rust/commit/7483ea817648d0b8faa49d49e5df69fb66b2638d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7483ea817648d0b8faa49d49e5df69fb66b2638d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad2de8b4ee099916113b7b3577ac86857b1568be", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad2de8b4ee099916113b7b3577ac86857b1568be", "html_url": "https://github.com/rust-lang/rust/commit/ad2de8b4ee099916113b7b3577ac86857b1568be"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "0bb0faf08484b3ac9513859a87a61e8d97e645f4", "filename": "src/librustc_mir/hair/pattern/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7483ea817648d0b8faa49d49e5df69fb66b2638d/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7483ea817648d0b8faa49d49e5df69fb66b2638d/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs?ref=7483ea817648d0b8faa49d49e5df69fb66b2638d", "patch": "@@ -1085,8 +1085,9 @@ pub fn compare_const_vals<'a, 'tcx>(\n             },\n             ty::TyInt(_) => {\n                 let layout = tcx.layout_of(ty).ok()?;\n-                let a = interpret::sign_extend(a, layout);\n-                let b = interpret::sign_extend(b, layout);\n+                assert!(layout.abi.is_signed());\n+                let a = interpret::sign_extend(a, layout.size);\n+                let b = interpret::sign_extend(b, layout.size);\n                 Some((a as i128).cmp(&(b as i128)))\n             },\n             _ => Some(a.cmp(&b)),"}, {"sha": "2ccd04370c8b41bb42169931d6a40ad9ee123ed3", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7483ea817648d0b8faa49d49e5df69fb66b2638d/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7483ea817648d0b8faa49d49e5df69fb66b2638d/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=7483ea817648d0b8faa49d49e5df69fb66b2638d", "patch": "@@ -1020,11 +1020,12 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M\n     }\n \n     pub fn sign_extend(&self, value: u128, ty: TyLayout<'_>) -> u128 {\n-        super::sign_extend(value, ty)\n+        assert!(ty.abi.is_signed());\n+        super::sign_extend(value, ty.size)\n     }\n \n     pub fn truncate(&self, value: u128, ty: TyLayout<'_>) -> u128 {\n-        super::truncate(value, ty)\n+        super::truncate(value, ty.size)\n     }\n \n     fn dump_field_name(&self, s: &mut String, ty: Ty<'tcx>, i: usize, variant: usize) -> ::std::fmt::Result {\n@@ -1095,18 +1096,17 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M\n     }\n }\n \n-pub fn sign_extend(value: u128, layout: TyLayout<'_>) -> u128 {\n-    let size = layout.size.bits();\n-    assert!(layout.abi.is_signed());\n+pub fn sign_extend(value: u128, size: Size) -> u128 {\n+    let size = size.bits();\n     // sign extend\n     let shift = 128 - size;\n     // shift the unsigned value to the left\n     // and back to the right as signed (essentially fills with FF on the left)\n     (((value << shift) as i128) >> shift) as u128\n }\n \n-pub fn truncate(value: u128, layout: TyLayout<'_>) -> u128 {\n-    let size = layout.size.bits();\n+pub fn truncate(value: u128, size: Size) -> u128 {\n+    let size = size.bits();\n     let shift = 128 - size;\n     // truncate (shift left to drop out leftover values, shift right to fill with zeroes)\n     (value << shift) >> shift"}]}