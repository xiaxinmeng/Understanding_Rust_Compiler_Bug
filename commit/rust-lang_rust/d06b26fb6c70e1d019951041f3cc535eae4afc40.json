{"sha": "d06b26fb6c70e1d019951041f3cc535eae4afc40", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwNmIyNmZiNmM3MGUxZDAxOTk1MTA0MWYzY2M1MzVlYWU0YWZjNDA=", "commit": {"author": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2020-04-05T09:30:25Z"}, "committer": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2020-04-05T09:30:25Z"}, "message": "Stop importing the float modules. Use assoc consts", "tree": {"sha": "010bbd41f242a9d8ccd01c2afc047fd149b69d08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/010bbd41f242a9d8ccd01c2afc047fd149b69d08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d06b26fb6c70e1d019951041f3cc535eae4afc40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d06b26fb6c70e1d019951041f3cc535eae4afc40", "html_url": "https://github.com/rust-lang/rust/commit/d06b26fb6c70e1d019951041f3cc535eae4afc40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d06b26fb6c70e1d019951041f3cc535eae4afc40/comments", "author": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "committer": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e129923b7e4d58a92c8a0530cd6eaa5be548342d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e129923b7e4d58a92c8a0530cd6eaa5be548342d", "html_url": "https://github.com/rust-lang/rust/commit/e129923b7e4d58a92c8a0530cd6eaa5be548342d"}], "stats": {"total": 60, "additions": 0, "deletions": 60}, "files": [{"sha": "d4e6048579a56fa74eeba5c025c9c27879b7fdce", "filename": "src/libcore/ops/range.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d06b26fb6c70e1d019951041f3cc535eae4afc40/src%2Flibcore%2Fops%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d06b26fb6c70e1d019951041f3cc535eae4afc40/src%2Flibcore%2Fops%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Frange.rs?ref=d06b26fb6c70e1d019951041f3cc535eae4afc40", "patch": "@@ -98,8 +98,6 @@ impl<Idx: PartialOrd<Idx>> Range<Idx> {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// assert!(!(3..5).contains(&2));\n     /// assert!( (3..5).contains(&3));\n     /// assert!( (3..5).contains(&4));\n@@ -198,8 +196,6 @@ impl<Idx: PartialOrd<Idx>> RangeFrom<Idx> {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// assert!(!(3..).contains(&2));\n     /// assert!( (3..).contains(&3));\n     /// assert!( (3..).contains(&1_000_000_000));\n@@ -282,8 +278,6 @@ impl<Idx: PartialOrd<Idx>> RangeTo<Idx> {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// assert!( (..5).contains(&-1_000_000_000));\n     /// assert!( (..5).contains(&4));\n     /// assert!(!(..5).contains(&5));\n@@ -453,8 +447,6 @@ impl<Idx: PartialOrd<Idx>> RangeInclusive<Idx> {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// assert!(!(3..=5).contains(&2));\n     /// assert!( (3..=5).contains(&3));\n     /// assert!( (3..=5).contains(&4));\n@@ -581,8 +573,6 @@ impl<Idx: PartialOrd<Idx>> RangeToInclusive<Idx> {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// assert!( (..=5).contains(&-1_000_000_000));\n     /// assert!( (..=5).contains(&5));\n     /// assert!(!(..=5).contains(&6));\n@@ -721,8 +711,6 @@ pub trait RangeBounds<T: ?Sized> {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// assert!( (3..5).contains(&4));\n     /// assert!(!(3..5).contains(&2));\n     ///"}, {"sha": "c33c8f270783dea44922c8bde66929bae6e8a319", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/d06b26fb6c70e1d019951041f3cc535eae4afc40/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d06b26fb6c70e1d019951041f3cc535eae4afc40/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=d06b26fb6c70e1d019951041f3cc535eae4afc40", "patch": "@@ -112,8 +112,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 3.6_f32;\n     /// let y = -3.6_f32;\n     /// let abs_difference_x = (x.fract() - 0.6).abs();\n@@ -135,8 +133,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 3.5_f32;\n     /// let y = -3.5_f32;\n     ///\n@@ -164,8 +160,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let f = 3.5_f32;\n     ///\n     /// assert_eq!(f.signum(), 1.0);\n@@ -190,8 +184,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let f = 3.5_f32;\n     ///\n     /// assert_eq!(f.copysign(0.42), 3.5_f32);\n@@ -217,8 +209,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let m = 10.0_f32;\n     /// let x = 4.0_f32;\n     /// let b = 60.0_f32;\n@@ -301,8 +291,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 2.0_f32;\n     /// let abs_difference = (x.powi(2) - (x * x)).abs();\n     ///\n@@ -320,8 +308,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 2.0_f32;\n     /// let abs_difference = (x.powf(2.0) - (x * x)).abs();\n     ///\n@@ -341,8 +327,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let positive = 4.0_f32;\n     /// let negative = -4.0_f32;\n     ///\n@@ -363,8 +347,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let one = 1.0f32;\n     /// // e^1\n     /// let e = one.exp();\n@@ -386,8 +368,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let f = 2.0f32;\n     ///\n     /// // 2^2 - 4 == 0\n@@ -407,8 +387,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let one = 1.0f32;\n     /// // e^1\n     /// let e = one.exp();\n@@ -434,8 +412,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let five = 5.0f32;\n     ///\n     /// // log5(5) - 1 == 0\n@@ -455,8 +431,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let two = 2.0f32;\n     ///\n     /// // log2(2) - 1 == 0\n@@ -479,8 +453,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let ten = 10.0f32;\n     ///\n     /// // log10(10) - 1 == 0\n@@ -503,8 +475,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 3.0f32;\n     /// let y = -3.0f32;\n     ///\n@@ -536,8 +506,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 8.0f32;\n     ///\n     /// // x^(1/3) - 2 == 0\n@@ -558,8 +526,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 2.0f32;\n     /// let y = 3.0f32;\n     ///\n@@ -686,8 +652,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let f = 1.0f32;\n     ///\n     /// // atan(tan(1))\n@@ -766,8 +730,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 6.0f32;\n     ///\n     /// // e^(ln(6)) - 1\n@@ -881,8 +843,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 1.0f32;\n     /// let f = x.sinh().asinh();\n     ///\n@@ -906,8 +866,6 @@ impl f32 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f32;\n-    ///\n     /// let x = 1.0f32;\n     /// let f = x.cosh().acosh();\n     ///"}, {"sha": "8d6d619219b509245bdb13419d74934313351664", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d06b26fb6c70e1d019951041f3cc535eae4afc40/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d06b26fb6c70e1d019951041f3cc535eae4afc40/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=d06b26fb6c70e1d019951041f3cc535eae4afc40", "patch": "@@ -133,8 +133,6 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n     /// let x = 3.5_f64;\n     /// let y = -3.5_f64;\n     ///\n@@ -162,8 +160,6 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n     /// let f = 3.5_f64;\n     ///\n     /// assert_eq!(f.signum(), 1.0);\n@@ -188,8 +184,6 @@ impl f64 {\n     /// # Examples\n     ///\n     /// ```\n-    /// use std::f64;\n-    ///\n     /// let f = 3.5_f64;\n     ///\n     /// assert_eq!(f.copysign(0.42), 3.5_f64);"}]}