{"sha": "f8fa0a243788e6b1028d254958cd19c6f10034fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4ZmEwYTI0Mzc4OGU2YjEwMjhkMjU0OTU4Y2QxOWM2ZjEwMDM0ZmE=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-06-13T20:45:12Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-06-21T23:11:10Z"}, "message": "Generate a temporary for assign_ops. Issue #2581", "tree": {"sha": "e0948fd8f7b4ac3f4511664dbd539e56eeca5b74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0948fd8f7b4ac3f4511664dbd539e56eeca5b74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8fa0a243788e6b1028d254958cd19c6f10034fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8fa0a243788e6b1028d254958cd19c6f10034fa", "html_url": "https://github.com/rust-lang/rust/commit/f8fa0a243788e6b1028d254958cd19c6f10034fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8fa0a243788e6b1028d254958cd19c6f10034fa/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b1675da16fc95ea3fc7a90632de088d6d7b99f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b1675da16fc95ea3fc7a90632de088d6d7b99f9", "html_url": "https://github.com/rust-lang/rust/commit/0b1675da16fc95ea3fc7a90632de088d6d7b99f9"}], "stats": {"total": 88, "additions": 86, "deletions": 2}, "files": [{"sha": "5fa7ddd12ac5bdb7bdce0e82abd4b11ec23487f4", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f8fa0a243788e6b1028d254958cd19c6f10034fa/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8fa0a243788e6b1028d254958cd19c6f10034fa/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=f8fa0a243788e6b1028d254958cd19c6f10034fa", "patch": "@@ -1444,6 +1444,7 @@ fn copy_val_no_check(bcx: block, action: copy_action, dst: ValueRef,\n // doesn't need to be dropped. (Issue #839)\n fn move_val(cx: block, action: copy_action, dst: ValueRef,\n             src: lval_result, t: ty::t) -> block {\n+    assert !cx.terminated;\n     let _icx = cx.insn_ctxt(\"move_val\");\n     let mut src_val = src.val;\n     let tcx = cx.tcx();\n@@ -1778,15 +1779,24 @@ fn trans_assign_op(bcx: block, ex: @ast::expr, op: ast::binop,\n       some(origin) {\n         let callee_id = ast_util::op_expr_callee_id(ex);\n         let fty = node_id_type(bcx, callee_id);\n-        ret trans_call_inner(\n+\n+        let dty = expr_ty(bcx, dst);\n+        let target = alloc_ty(bcx, dty);\n+\n+        let bcx = trans_call_inner(\n             bcx, ex.info(), fty,\n             expr_ty(bcx, ex),\n             {|bcx|\n                 // FIXME provide the already-computed address, not the expr\n                 // #2528\n                 impl::trans_method_callee(bcx, callee_id, dst, origin)\n             },\n-            arg_exprs([src]), save_in(lhs_res.val));\n+            arg_exprs([src]), save_in(target));\n+\n+        ret move_val(bcx, DROP_EXISTING, lhs_res.val,\n+                     // FIXME: should kind be owned?\n+                     {bcx: bcx, val: target, kind: owned},\n+                     dty);\n       }\n       _ {}\n     }"}, {"sha": "a67bffa2e92e5ddc0123a78881160e5cd76eb69d", "filename": "src/test/run-pass/operator-overloading-leaks.rs", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/f8fa0a243788e6b1028d254958cd19c6f10034fa/src%2Ftest%2Frun-pass%2Foperator-overloading-leaks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8fa0a243788e6b1028d254958cd19c6f10034fa/src%2Ftest%2Frun-pass%2Foperator-overloading-leaks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foperator-overloading-leaks.rs?ref=f8fa0a243788e6b1028d254958cd19c6f10034fa", "patch": "@@ -0,0 +1,74 @@\n+// The cases commented as \"Leaks\" need to not leak. Issue #2581\n+\n+impl methods<T: copy> for [T] {\n+    fn -(x: [T]/&) -> [T] {\n+        [x[0], x[0], x[0]]\n+    }\n+\n+    fn foo(x: [T]/&) -> [T] {\n+        [x[0], x[0], x[0]]\n+    }\n+}\n+\n+impl methods<T: copy> for ~T {\n+    fn +(rhs: ~T) -> ~T {\n+        rhs\n+    }\n+}\n+\n+impl methods for ~int {\n+    fn -(rhs: ~int) -> ~int {\n+        ~(*self - *rhs)\n+    }\n+}\n+\n+impl methods for @int {\n+    fn +(rhs: @int) -> @int {\n+        @(*self + *rhs)\n+    }\n+}\n+\n+fn main() {\n+    // leaks\n+    let mut bar = [1, 2, 3];\n+    bar -= [3, 2, 1];\n+    bar -= [4, 5, 6];\n+    \n+    io::println(#fmt(\"%?\", bar));\n+\n+    // okay\n+    let mut bar = [1, 2, 3];\n+    bar = bar.foo([3, 2, 1]);\n+    bar = bar.foo([4, 5, 6]);\n+\n+    io::println(#fmt(\"%?\", bar));\n+\n+    // okay\n+    let mut bar = [1, 2, 3];\n+    bar = bar - [3, 2, 1];\n+    bar = bar - [4, 5, 6];\n+\n+    io::println(#fmt(\"%?\", bar));\n+\n+    // Leaks\n+    let mut bar = ~1;\n+    bar += ~2;\n+    bar += ~3;\n+    \n+    io:: println(#fmt(\"%?\", bar));\n+\n+    // Leaks\n+    let mut bar = ~1;\n+    bar -= ~2;\n+    bar -= ~3;\n+    \n+    io:: println(#fmt(\"%?\", bar));\n+\n+    // Leaks\n+    let mut bar = @1;\n+    bar += @2;\n+    bar += @3;\n+    \n+    io:: println(#fmt(\"%?\", bar));\n+\n+}"}]}