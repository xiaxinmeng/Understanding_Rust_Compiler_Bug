{"sha": "2e7806146c008742919124bf6ac9a37c3ece51bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNzgwNjE0NmMwMDg3NDI5MTkxMjRiZjZhYzlhMzdjM2VjZTUxYmI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-31T03:30:55Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-31T03:33:34Z"}, "message": "parser: bug -> span_bug", "tree": {"sha": "c9b3765618fe79645fafcd4411ce47c3d8c3e727", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9b3765618fe79645fafcd4411ce47c3d8c3e727"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e7806146c008742919124bf6ac9a37c3ece51bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e7806146c008742919124bf6ac9a37c3ece51bb", "html_url": "https://github.com/rust-lang/rust/commit/2e7806146c008742919124bf6ac9a37c3ece51bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e7806146c008742919124bf6ac9a37c3ece51bb/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ae9c1c3ecbba91d39e74ca97cac349b2fe6dcc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ae9c1c3ecbba91d39e74ca97cac349b2fe6dcc3", "html_url": "https://github.com/rust-lang/rust/commit/4ae9c1c3ecbba91d39e74ca97cac349b2fe6dcc3"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "05754357bc82210c0dde8e7deb9db4abf1bbd657", "filename": "src/librustc_parse/parser/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2e7806146c008742919124bf6ac9a37c3ece51bb/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e7806146c008742919124bf6ac9a37c3ece51bb/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs?ref=2e7806146c008742919124bf6ac9a37c3ece51bb", "patch": "@@ -165,10 +165,6 @@ impl<'a> Parser<'a> {\n         err.span_err(sp, self.diagnostic())\n     }\n \n-    pub(super) fn bug(&self, m: &str) -> ! {\n-        self.sess.span_diagnostic.span_bug(self.token.span, m)\n-    }\n-\n     pub fn struct_span_err<S: Into<MultiSpan>>(&self, sp: S, m: &str) -> DiagnosticBuilder<'a> {\n         self.sess.span_diagnostic.struct_span_err(sp, m)\n     }"}, {"sha": "ab7c156e3706d85fcb30c8badf7380b6720a07be", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2e7806146c008742919124bf6ac9a37c3ece51bb/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e7806146c008742919124bf6ac9a37c3ece51bb/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=2e7806146c008742919124bf6ac9a37c3ece51bb", "patch": "@@ -283,7 +283,7 @@ impl<'a> Parser<'a> {\n                     self.mk_expr(span, aopexpr, AttrVec::new())\n                 }\n                 AssocOp::As | AssocOp::Colon | AssocOp::DotDot | AssocOp::DotDotEq => {\n-                    self.bug(\"AssocOp should have been handled by special case\")\n+                    self.span_bug(span, \"AssocOp should have been handled by special case\")\n                 }\n             };\n "}, {"sha": "ec6468f4f0a329c81e6b50a94e227124b3d0f58a", "filename": "src/librustc_parse/parser/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2e7806146c008742919124bf6ac9a37c3ece51bb/src%2Flibrustc_parse%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e7806146c008742919124bf6ac9a37c3ece51bb/src%2Flibrustc_parse%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmod.rs?ref=2e7806146c008742919124bf6ac9a37c3ece51bb", "patch": "@@ -884,7 +884,8 @@ impl<'a> Parser<'a> {\n     pub fn bump(&mut self) {\n         if self.prev_token_kind == PrevTokenKind::Eof {\n             // Bumping after EOF is a bad sign, usually an infinite loop.\n-            self.bug(\"attempted to bump the parser past EOF (may be stuck in a loop)\");\n+            let msg = \"attempted to bump the parser past EOF (may be stuck in a loop)\";\n+            self.span_bug(self.token.span, msg);\n         }\n \n         self.prev_span = self.meta_var_span.take().unwrap_or(self.token.span);"}, {"sha": "4f7bcf01e1b82ca8906f93defb2f05ae04bea2aa", "filename": "src/librustc_parse/parser/ty.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2e7806146c008742919124bf6ac9a37c3ece51bb/src%2Flibrustc_parse%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e7806146c008742919124bf6ac9a37c3ece51bb/src%2Flibrustc_parse%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fty.rs?ref=2e7806146c008742919124bf6ac9a37c3ece51bb", "patch": "@@ -175,7 +175,9 @@ impl<'a> Parser<'a> {\n                 {\n                     let path = match bounds.remove(0) {\n                         GenericBound::Trait(pt, ..) => pt.trait_ref.path,\n-                        GenericBound::Outlives(..) => self.bug(\"unexpected lifetime bound\"),\n+                        GenericBound::Outlives(..) => {\n+                            self.span_bug(ty.span, \"unexpected lifetime bound\")\n+                        }\n                     };\n                     self.parse_remaining_bounds(Vec::new(), path, lo, true)\n                 }"}]}