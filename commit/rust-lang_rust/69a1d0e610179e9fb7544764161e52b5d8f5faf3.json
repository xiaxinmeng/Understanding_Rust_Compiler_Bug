{"sha": "69a1d0e610179e9fb7544764161e52b5d8f5faf3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5YTFkMGU2MTAxNzllOWZiNzU0NDc2NDE2MWU1MmI1ZDhmNWZhZjM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-03T17:56:03Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-22T17:27:08Z"}, "message": "Change print out to include the path to the fn, a bit ad-hoc for now .", "tree": {"sha": "9bebe2539cc7853ea6258f4828f955903c2d4fbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bebe2539cc7853ea6258f4828f955903c2d4fbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69a1d0e610179e9fb7544764161e52b5d8f5faf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69a1d0e610179e9fb7544764161e52b5d8f5faf3", "html_url": "https://github.com/rust-lang/rust/commit/69a1d0e610179e9fb7544764161e52b5d8f5faf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69a1d0e610179e9fb7544764161e52b5d8f5faf3/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41ef2d85a1c685002230e0c05165c115b502486b", "url": "https://api.github.com/repos/rust-lang/rust/commits/41ef2d85a1c685002230e0c05165c115b502486b", "html_url": "https://github.com/rust-lang/rust/commit/41ef2d85a1c685002230e0c05165c115b502486b"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "476d9949812b25c6c2522a60cc7056c8281a10a6", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/69a1d0e610179e9fb7544764161e52b5d8f5faf3/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69a1d0e610179e9fb7544764161e52b5d8f5faf3/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=69a1d0e610179e9fb7544764161e52b5d8f5faf3", "patch": "@@ -254,12 +254,14 @@ pub fn vec_map_to_string<T, F>(ts: &[T], f: F) -> String where\n \n pub fn ty_to_string<'tcx>(cx: &ctxt<'tcx>, typ: &ty::TyS<'tcx>) -> String {\n     fn bare_fn_to_string<'tcx>(cx: &ctxt<'tcx>,\n+                               opt_def_id: Option<ast::DefId>,\n                                unsafety: ast::Unsafety,\n                                abi: abi::Abi,\n                                ident: Option<ast::Ident>,\n                                sig: &ty::PolyFnSig<'tcx>)\n                                -> String {\n         let mut s = String::new();\n+\n         match unsafety {\n             ast::Unsafety::Normal => {}\n             ast::Unsafety::Unsafe => {\n@@ -284,6 +286,16 @@ pub fn ty_to_string<'tcx>(cx: &ctxt<'tcx>, typ: &ty::TyS<'tcx>) -> String {\n \n         push_sig_to_string(cx, &mut s, '(', ')', sig, \"\");\n \n+        match opt_def_id {\n+            Some(def_id) => {\n+                s.push_str(\" {\");\n+                let path_str = ty::item_path_str(cx, def_id);\n+                s.push_str(path_str[]);\n+                s.push_str(\"}\");\n+            }\n+            None => { }\n+        }\n+\n         s\n     }\n \n@@ -408,8 +420,8 @@ pub fn ty_to_string<'tcx>(cx: &ctxt<'tcx>, typ: &ty::TyS<'tcx>) -> String {\n         ty_closure(ref f) => {\n             closure_to_string(cx, &**f)\n         }\n-        ty_bare_fn(_, ref f) => {\n-            bare_fn_to_string(cx, f.unsafety, f.abi, None, &f.sig)\n+        ty_bare_fn(opt_def_id, ref f) => {\n+            bare_fn_to_string(cx, opt_def_id, f.unsafety, f.abi, None, &f.sig)\n         }\n         ty_infer(infer_ty) => infer_ty_to_string(cx, infer_ty),\n         ty_err => \"[type error]\".to_string(),"}]}