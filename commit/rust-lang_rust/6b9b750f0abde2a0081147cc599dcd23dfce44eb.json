{"sha": "6b9b750f0abde2a0081147cc599dcd23dfce44eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiOWI3NTBmMGFiZGUyYTAwODExNDdjYzU5OWRjZDIzZGZjZTQ0ZWI=", "commit": {"author": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2018-08-10T16:08:00Z"}, "committer": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2018-08-16T19:22:03Z"}, "message": "make tidy happy", "tree": {"sha": "cabb3cf55cdcdefc82d8122747bc52c4116bee52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cabb3cf55cdcdefc82d8122747bc52c4116bee52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b9b750f0abde2a0081147cc599dcd23dfce44eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b9b750f0abde2a0081147cc599dcd23dfce44eb", "html_url": "https://github.com/rust-lang/rust/commit/6b9b750f0abde2a0081147cc599dcd23dfce44eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b9b750f0abde2a0081147cc599dcd23dfce44eb/comments", "author": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69bbcacd95634eb7f40b8099f9812e33bbe4e98f", "url": "https://api.github.com/repos/rust-lang/rust/commits/69bbcacd95634eb7f40b8099f9812e33bbe4e98f", "html_url": "https://github.com/rust-lang/rust/commit/69bbcacd95634eb7f40b8099f9812e33bbe4e98f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ad56172731c6fc56571072f9f5b2c2120ae5ec24", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b9b750f0abde2a0081147cc599dcd23dfce44eb/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b9b750f0abde2a0081147cc599dcd23dfce44eb/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=6b9b750f0abde2a0081147cc599dcd23dfce44eb", "patch": "@@ -4342,7 +4342,7 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n             let extern_prelude_names = self.extern_prelude.clone();\n             for &krate_name in extern_prelude_names.iter() {\n                 let krate_ident = Ident::with_empty_ctxt(krate_name);\n-                let external_prelude_module =  self.load_extern_prelude_crate_if_needed(krate_ident);\n+                let external_prelude_module = self.load_extern_prelude_crate_if_needed(krate_ident);\n \n                 suggestions.extend(\n                     self.lookup_import_candidates_from_module("}]}