{"sha": "830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzMGQxYTBlMzJjN2FkNmQzNGUyMmUwN2Q0OThmNGYwZWRhNmZiNWI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-04T02:45:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-04T02:45:03Z"}, "message": "Rollup merge of #77419 - GuillaumeGomez:create-e0777, r=jyn514\n\nCreate E0777 error code for invalid argument in derive\n\nThe second commit is to fix a nit reported by @jyn514 [here](https://github.com/rust-lang/rust/pull/76406/files#r485186592).", "tree": {"sha": "855e08f9bf1857eb7e000ab841958847e60b4700", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/855e08f9bf1857eb7e000ab841958847e60b4700"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfeTcvCRBK7hj4Ov3rIwAAdHIIAHZ0cOOO95/jbhnUZRBMTjP2\nnHVpIvfRgiLOk6eQh8KKdqCqn0Nr4KxAlpMlcG6XBBwNptrIDZ7ymIT44pBLmKQJ\nZMkfNxHTmUQOMz4qubySeSvxGhjvSRwhGLLYmF2JyL0rasD0R+MXsMC1jcrsHr+T\nvCnNVHIOx/vSG/QM5w4i3/q2Qiio1E2/G+oofu6LxhR5Ndg8WxxkxPmqJdP+er5e\n4g1s2CayTYD3uRjdjIigi6bmQXhsvgDoh1PSd6L05i5udBYaPh9UeLTA+3YQgJfL\nWp6T3s+h45f+bA3sEZrkFzcn/eEAtg3kjMV3SHVd4+0A1GTHaa8FrY5on/+wPzY=\n=MrEt\n-----END PGP SIGNATURE-----\n", "payload": "tree 855e08f9bf1857eb7e000ab841958847e60b4700\nparent f09c962a84ea125152d37ad8c38bca1aef668c07\nparent d1d94ba026eda45a2b998d68524c14929604c748\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1601779503 +0900\ncommitter GitHub <noreply@github.com> 1601779503 +0900\n\nRollup merge of #77419 - GuillaumeGomez:create-e0777, r=jyn514\n\nCreate E0777 error code for invalid argument in derive\n\nThe second commit is to fix a nit reported by @jyn514 [here](https://github.com/rust-lang/rust/pull/76406/files#r485186592).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b", "html_url": "https://github.com/rust-lang/rust/commit/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f09c962a84ea125152d37ad8c38bca1aef668c07", "url": "https://api.github.com/repos/rust-lang/rust/commits/f09c962a84ea125152d37ad8c38bca1aef668c07", "html_url": "https://github.com/rust-lang/rust/commit/f09c962a84ea125152d37ad8c38bca1aef668c07"}, {"sha": "d1d94ba026eda45a2b998d68524c14929604c748", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1d94ba026eda45a2b998d68524c14929604c748", "html_url": "https://github.com/rust-lang/rust/commit/d1d94ba026eda45a2b998d68524c14929604c748"}], "stats": {"total": 74, "additions": 68, "deletions": 6}, "files": [{"sha": "981b5bb8ba72f43599ca439fcfc39e9ca330baa8", "filename": "compiler/rustc_error_codes/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs?ref=830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b", "patch": "@@ -459,6 +459,7 @@ E0773: include_str!(\"./error_codes/E0773.md\"),\n E0774: include_str!(\"./error_codes/E0774.md\"),\n E0775: include_str!(\"./error_codes/E0775.md\"),\n E0776: include_str!(\"./error_codes/E0776.md\"),\n+E0777: include_str!(\"./error_codes/E0777.md\"),\n ;\n //  E0006, // merged with E0005\n //  E0008, // cannot bind by-move into a pattern guard"}, {"sha": "8c5c6e28b65c6750a4eef3a4f9d443b0da723467", "filename": "compiler/rustc_error_codes/src/error_codes/E0777.md", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0777.md", "raw_url": "https://github.com/rust-lang/rust/raw/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0777.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0777.md?ref=830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b", "patch": "@@ -0,0 +1,19 @@\n+A literal value was used inside `#[derive]`.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0777\n+#[derive(\"Clone\")] // error!\n+struct Foo;\n+```\n+\n+Only paths to traits are allowed as argument inside `#[derive]`. You can find\n+more information about the `#[derive]` attribute in the [Rust Book].\n+\n+\n+```\n+#[derive(Clone)] // ok!\n+struct Foo;\n+```\n+\n+[Rust Book]: https://doc.rust-lang.org/book/appendix-03-derivable-traits.html"}, {"sha": "c6287693dc9e62ae0013f56fadb65a715eb4a756", "filename": "compiler/rustc_expand/src/expand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs?ref=830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b", "patch": "@@ -18,7 +18,7 @@ use rustc_ast_pretty::pprust;\n use rustc_attr::{self as attr, is_builtin_attr, HasAttrs};\n use rustc_data_structures::map_in_place::MapInPlace;\n use rustc_data_structures::stack::ensure_sufficient_stack;\n-use rustc_errors::{Applicability, PResult};\n+use rustc_errors::{struct_span_err, Applicability, PResult};\n use rustc_feature::Features;\n use rustc_parse::parser::Parser;\n use rustc_parse::validate_attr;\n@@ -542,7 +542,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n     fn error_derive_forbidden_on_non_adt(&self, derives: &[Path], item: &Annotatable) {\n         let attr = self.cx.sess.find_by_name(item.attrs(), sym::derive);\n         let span = attr.map_or(item.span(), |attr| attr.span);\n-        let mut err = rustc_errors::struct_span_err!(\n+        let mut err = struct_span_err!(\n             self.cx.sess,\n             span,\n             E0774,"}, {"sha": "4c95f19b96dc69113bc9e65e3d5c3eb349e4f337", "filename": "compiler/rustc_expand/src/proc_macro.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b/compiler%2Frustc_expand%2Fsrc%2Fproc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b/compiler%2Frustc_expand%2Fsrc%2Fproc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fproc_macro.rs?ref=830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b", "patch": "@@ -5,7 +5,8 @@ use rustc_ast::token;\n use rustc_ast::tokenstream::{TokenStream, TokenTree};\n use rustc_ast::{self as ast, *};\n use rustc_data_structures::sync::Lrc;\n-use rustc_errors::{Applicability, ErrorReported};\n+use rustc_errors::{struct_span_err, Applicability, ErrorReported};\n+use rustc_lexer::is_ident;\n use rustc_parse::nt_to_tokenstream;\n use rustc_span::symbol::sym;\n use rustc_span::{Span, DUMMY_SP};\n@@ -182,9 +183,22 @@ crate fn collect_derives(cx: &mut ExtCtxt<'_>, attrs: &mut Vec<ast::Attribute>)\n             .filter_map(|nmi| match nmi {\n                 NestedMetaItem::Literal(lit) => {\n                     error_reported_filter_map = true;\n-                    cx.struct_span_err(lit.span, \"expected path to a trait, found literal\")\n-                        .help(\"for example, write `#[derive(Debug)]` for `Debug`\")\n-                        .emit();\n+                    let mut err = struct_span_err!(\n+                        cx.sess,\n+                        lit.span,\n+                        E0777,\n+                        \"expected path to a trait, found literal\",\n+                    );\n+                    let token = lit.token.to_string();\n+                    if token.starts_with('\"')\n+                        && token.len() > 2\n+                        && is_ident(&token[1..token.len() - 1])\n+                    {\n+                        err.help(&format!(\"try using `#[derive({})]`\", &token[1..token.len() - 1]));\n+                    } else {\n+                        err.help(\"for example, write `#[derive(Debug)]` for `Debug`\");\n+                    }\n+                    err.emit();\n                     None\n                 }\n                 NestedMetaItem::MetaItem(mi) => Some(mi),"}, {"sha": "ff70f7368666586e2279e4a9ddf10a8af66292c8", "filename": "src/test/ui/error-codes/E0777.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b/src%2Ftest%2Fui%2Ferror-codes%2FE0777.rs", "raw_url": "https://github.com/rust-lang/rust/raw/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b/src%2Ftest%2Fui%2Ferror-codes%2FE0777.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0777.rs?ref=830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b", "patch": "@@ -0,0 +1,7 @@\n+#[derive(\"Clone\")] //~ ERROR E0777\n+#[derive(\"Clone\n+\")]\n+//~^^ ERROR E0777\n+struct Foo;\n+\n+fn main() {}"}, {"sha": "ea73c58993e2b70fee65eaa5967186d38ff2d48a", "filename": "src/test/ui/error-codes/E0777.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b/src%2Ftest%2Fui%2Ferror-codes%2FE0777.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b/src%2Ftest%2Fui%2Ferror-codes%2FE0777.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0777.stderr?ref=830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b", "patch": "@@ -0,0 +1,21 @@\n+error[E0777]: expected path to a trait, found literal\n+  --> $DIR/E0777.rs:1:10\n+   |\n+LL | #[derive(\"Clone\")]\n+   |          ^^^^^^^\n+   |\n+   = help: try using `#[derive(Clone)]`\n+\n+error[E0777]: expected path to a trait, found literal\n+  --> $DIR/E0777.rs:2:10\n+   |\n+LL |   #[derive(\"Clone\n+   |  __________^\n+LL | | \")]\n+   | |_^\n+   |\n+   = help: for example, write `#[derive(Debug)]` for `Debug`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0777`."}]}