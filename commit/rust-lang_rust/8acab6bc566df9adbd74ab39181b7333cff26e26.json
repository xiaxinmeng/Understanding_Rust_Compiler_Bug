{"sha": "8acab6bc566df9adbd74ab39181b7333cff26e26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhY2FiNmJjNTY2ZGY5YWRiZDc0YWIzOTE4MWI3MzMzY2ZmMjZlMjY=", "commit": {"author": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2019-09-08T01:34:24Z"}, "committer": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2019-09-08T01:41:59Z"}, "message": "Improve wording.", "tree": {"sha": "09a7a8b0d585c049b8fde1f06c439180103949f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09a7a8b0d585c049b8fde1f06c439180103949f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8acab6bc566df9adbd74ab39181b7333cff26e26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8acab6bc566df9adbd74ab39181b7333cff26e26", "html_url": "https://github.com/rust-lang/rust/commit/8acab6bc566df9adbd74ab39181b7333cff26e26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8acab6bc566df9adbd74ab39181b7333cff26e26/comments", "author": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43a5ff4222e1f217ac14331afd59f82ec4204d12", "url": "https://api.github.com/repos/rust-lang/rust/commits/43a5ff4222e1f217ac14331afd59f82ec4204d12", "html_url": "https://github.com/rust-lang/rust/commit/43a5ff4222e1f217ac14331afd59f82ec4204d12"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "66d676b7747d0bb26f67377be543192aff38a492", "filename": "src/librustc_metadata/native_libs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Flibrustc_metadata%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Flibrustc_metadata%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fnative_libs.rs?ref=8acab6bc566df9adbd74ab39181b7333cff26e26", "patch": "@@ -159,15 +159,15 @@ impl Collector<'tcx> {\n                                            sym::link_cfg,\n                                            span.unwrap(),\n                                            GateIssue::Language,\n-                                           \"is feature gated\");\n+                                           \"is unstable\");\n         }\n         if lib.kind == cstore::NativeStaticNobundle &&\n            !self.tcx.features().static_nobundle {\n             feature_gate::emit_feature_err(&self.tcx.sess.parse_sess,\n                                            sym::static_nobundle,\n                                            span.unwrap_or_else(|| syntax_pos::DUMMY_SP),\n                                            GateIssue::Language,\n-                                           \"kind=\\\"static-nobundle\\\" is feature gated\");\n+                                           \"kind=\\\"static-nobundle\\\" is unstable\");\n         }\n         self.libs.push(lib);\n     }"}, {"sha": "cf6dd338552b8718e73f1268da132e3185030a4c", "filename": "src/test/ui/attributes/obsolete-attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Fattributes%2Fobsolete-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Fattributes%2Fobsolete-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fobsolete-attr.rs?ref=8acab6bc566df9adbd74ab39181b7333cff26e26", "patch": "@@ -1,4 +1,4 @@\n-// Obsolete attributes fall back to feature gated custom attributes.\n+// Obsolete attributes fall back to unstable custom attributes.\n \n #[ab_isize=\"stdcall\"] extern {}\n //~^ ERROR cannot find attribute macro `ab_isize` in this scope"}, {"sha": "544a6e2a7e78a772986e892dea278295b4c8c9d4", "filename": "src/test/ui/attributes/unknown-attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Fattributes%2Funknown-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Fattributes%2Funknown-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Funknown-attr.rs?ref=8acab6bc566df9adbd74ab39181b7333cff26e26", "patch": "@@ -1,4 +1,4 @@\n-// Unknown attributes fall back to feature gated custom attributes.\n+// Unknown attributes fall back to unstable custom attributes.\n \n #![feature(custom_inner_attributes)]\n "}, {"sha": "b6c8648a7d03d8c12cc681d391fb49a5af6165e8", "filename": "src/test/ui/feature-gate/feature-gate-static-nobundle-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-static-nobundle-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-static-nobundle-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-static-nobundle-2.rs?ref=8acab6bc566df9adbd74ab39181b7333cff26e26", "patch": "@@ -1,4 +1,4 @@\n-//~ ERROR kind=\"static-nobundle\" is feature gated\n+//~ ERROR kind=\"static-nobundle\" is unstable\n // Test the behavior of rustc when non-existent library is statically linked\n \n // compile-flags: -l static-nobundle=nonexistent"}, {"sha": "cfff4c36a6d7bd6a0e8487f13c37e246eab0da65", "filename": "src/test/ui/feature-gate/feature-gate-static-nobundle-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-static-nobundle-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-static-nobundle-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-static-nobundle-2.stderr?ref=8acab6bc566df9adbd74ab39181b7333cff26e26", "patch": "@@ -1,4 +1,4 @@\n-error[E0658]: kind=\"static-nobundle\" is feature gated\n+error[E0658]: kind=\"static-nobundle\" is unstable\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/37403\n    = help: add `#![feature(static_nobundle)]` to the crate attributes to enable"}, {"sha": "359ed835bcbb23c0745e52b8854b4fa413d27d1e", "filename": "src/test/ui/feature-gates/feature-gate-is_sorted.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-is_sorted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-is_sorted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-is_sorted.rs?ref=8acab6bc566df9adbd74ab39181b7333cff26e26", "patch": "@@ -1,11 +1,11 @@\n fn main() {\n-    // Assert `Iterator` methods are feature gated\n+    // Assert `Iterator` methods are unstable\n     assert!([1, 2, 2, 9].iter().is_sorted());\n     //~^ ERROR: use of unstable library feature 'is_sorted': new API\n     assert!(![-2i32, -1, 0, 3].iter().is_sorted_by_key(|n| n.abs()));\n     //~^ ERROR: use of unstable library feature 'is_sorted': new API\n \n-    // Assert `[T]` methods are feature gated\n+    // Assert `[T]` methods are unstable\n     assert!([1, 2, 2, 9].is_sorted());\n     //~^ ERROR: use of unstable library feature 'is_sorted': new API\n     assert!(![-2i32, -1, 0, 3].is_sorted_by_key(|n| n.abs()));"}, {"sha": "27ec2e98eb68bbdeadcbcf44c3211d6a485ffffb", "filename": "src/test/ui/feature-gates/feature-gate-link_cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_cfg.rs?ref=8acab6bc566df9adbd74ab39181b7333cff26e26", "patch": "@@ -1,5 +1,5 @@\n #[link(name = \"foo\", cfg(foo))]\n-//~^ ERROR: is feature gated\n+//~^ ERROR: is unstable\n extern {}\n \n fn main() {}"}, {"sha": "f6c506154643832d8b037013c98528f4b83600cc", "filename": "src/test/ui/feature-gates/feature-gate-link_cfg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_cfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_cfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_cfg.stderr?ref=8acab6bc566df9adbd74ab39181b7333cff26e26", "patch": "@@ -1,4 +1,4 @@\n-error[E0658]: is feature gated\n+error[E0658]: is unstable\n   --> $DIR/feature-gate-link_cfg.rs:1:1\n    |\n LL | #[link(name = \"foo\", cfg(foo))]"}, {"sha": "644b1f964a059b5296645f619b9305e204a525a6", "filename": "src/test/ui/feature-gates/feature-gate-static-nobundle.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.rs?ref=8acab6bc566df9adbd74ab39181b7333cff26e26", "patch": "@@ -1,5 +1,5 @@\n #[link(name=\"foo\", kind=\"static-nobundle\")]\n-//~^ ERROR: kind=\"static-nobundle\" is feature gated\n+//~^ ERROR: kind=\"static-nobundle\" is unstable\n extern {}\n \n fn main() {}"}, {"sha": "cc0d426d6cf9ac81a5a6b8ae523344102724a43a", "filename": "src/test/ui/feature-gates/feature-gate-static-nobundle.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.stderr?ref=8acab6bc566df9adbd74ab39181b7333cff26e26", "patch": "@@ -1,4 +1,4 @@\n-error[E0658]: kind=\"static-nobundle\" is feature gated\n+error[E0658]: kind=\"static-nobundle\" is unstable\n   --> $DIR/feature-gate-static-nobundle.rs:1:1\n    |\n LL | #[link(name=\"foo\", kind=\"static-nobundle\")]"}, {"sha": "7a597157300eddc32526f9d33c44565104b37b2a", "filename": "src/test/ui/feature-gates/feature-gate-type_ascription.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_ascription.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_ascription.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_ascription.rs?ref=8acab6bc566df9adbd74ab39181b7333cff26e26", "patch": "@@ -1,4 +1,4 @@\n-// Type ascription is feature gated\n+// Type ascription is unstable\n \n fn main() {\n     let a = 10: u8; //~ ERROR type ascription is experimental"}, {"sha": "088f39c6665ffe0f1141293a9f6a2a29087a80ae", "filename": "src/test/ui/proc-macro/resolve-error.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Fproc-macro%2Fresolve-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Fproc-macro%2Fresolve-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fresolve-error.rs?ref=8acab6bc566df9adbd74ab39181b7333cff26e26", "patch": "@@ -23,11 +23,11 @@ macro_rules! attr_proc_mac {\n //~^ ERROR cannot find\n struct Foo;\n \n-// Interpreted as a feature gated custom attribute\n+// Interpreted as an unstable custom attribute\n #[attr_proc_macra] //~ ERROR cannot find attribute macro `attr_proc_macra` in this scope\n struct Bar;\n \n-// Interpreted as a feature gated custom attribute\n+// Interpreted as an unstable custom attribute\n #[FooWithLongNan] //~ ERROR cannot find attribute macro `FooWithLongNan` in this scope\n struct Asdf;\n "}, {"sha": "c07da4345f7d923bb9d9808eec957bbb6761a8cf", "filename": "src/test/ui/tool-attributes/tool-attributes-misplaced-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ftool-attributes%2Ftool-attributes-misplaced-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8acab6bc566df9adbd74ab39181b7333cff26e26/src%2Ftest%2Fui%2Ftool-attributes%2Ftool-attributes-misplaced-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftool-attributes%2Ftool-attributes-misplaced-1.rs?ref=8acab6bc566df9adbd74ab39181b7333cff26e26", "patch": "@@ -4,7 +4,7 @@ type B = rustfmt::skip; //~ ERROR expected type, found tool attribute `rustfmt::\n #[derive(rustfmt)] //~ ERROR cannot find derive macro `rustfmt` in this scope\n struct S;\n \n-// Interpreted as a feature gated custom attribute\n+// Interpreted as an unstable custom attribute\n #[rustfmt] //~ ERROR cannot find attribute macro `rustfmt` in this scope\n fn check() {}\n "}]}