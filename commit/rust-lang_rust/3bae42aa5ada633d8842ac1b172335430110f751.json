{"sha": "3bae42aa5ada633d8842ac1b172335430110f751", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiYWU0MmFhNWFkYTYzM2Q4ODQyYWMxYjE3MjMzNTQzMDExMGY3NTE=", "commit": {"author": {"name": "clippered", "email": "clarke_overkill@yahoo.com", "date": "2017-11-01T12:45:35Z"}, "committer": {"name": "clippered", "email": "clarke_overkill@yahoo.com", "date": "2017-11-01T12:45:35Z"}, "message": "fix output panics on unable to write to stderr", "tree": {"sha": "d91b9391250db36f411dcb66bd111e5dc7e5df8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d91b9391250db36f411dcb66bd111e5dc7e5df8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bae42aa5ada633d8842ac1b172335430110f751", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bae42aa5ada633d8842ac1b172335430110f751", "html_url": "https://github.com/rust-lang/rust/commit/3bae42aa5ada633d8842ac1b172335430110f751", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bae42aa5ada633d8842ac1b172335430110f751/comments", "author": {"login": "clippered", "id": 5051900, "node_id": "MDQ6VXNlcjUwNTE5MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5051900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clippered", "html_url": "https://github.com/clippered", "followers_url": "https://api.github.com/users/clippered/followers", "following_url": "https://api.github.com/users/clippered/following{/other_user}", "gists_url": "https://api.github.com/users/clippered/gists{/gist_id}", "starred_url": "https://api.github.com/users/clippered/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clippered/subscriptions", "organizations_url": "https://api.github.com/users/clippered/orgs", "repos_url": "https://api.github.com/users/clippered/repos", "events_url": "https://api.github.com/users/clippered/events{/privacy}", "received_events_url": "https://api.github.com/users/clippered/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clippered", "id": 5051900, "node_id": "MDQ6VXNlcjUwNTE5MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5051900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clippered", "html_url": "https://github.com/clippered", "followers_url": "https://api.github.com/users/clippered/followers", "following_url": "https://api.github.com/users/clippered/following{/other_user}", "gists_url": "https://api.github.com/users/clippered/gists{/gist_id}", "starred_url": "https://api.github.com/users/clippered/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clippered/subscriptions", "organizations_url": "https://api.github.com/users/clippered/orgs", "repos_url": "https://api.github.com/users/clippered/repos", "events_url": "https://api.github.com/users/clippered/events{/privacy}", "received_events_url": "https://api.github.com/users/clippered/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0af8825eb104e6c7b9444693d583b5fa0bd55ceb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0af8825eb104e6c7b9444693d583b5fa0bd55ceb", "html_url": "https://github.com/rust-lang/rust/commit/0af8825eb104e6c7b9444693d583b5fa0bd55ceb"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "6be778a526289fb1329fc21f181f1ff6046a82a6", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3bae42aa5ada633d8842ac1b172335430110f751/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bae42aa5ada633d8842ac1b172335430110f751/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=3bae42aa5ada633d8842ac1b172335430110f751", "patch": "@@ -575,7 +575,9 @@ pub fn run(input: Input, config: &Config) -> Summary {\n \n             if report.has_warnings() {\n                 match term::stderr() {\n-                    Some(ref t) if isatty() && t.supports_color() => {\n+                    Some(ref t)\n+                        if isatty() && t.supports_color() && t.supports_attr(term::Attr::Bold) =>\n+                    {\n                         match report.print_warnings_fancy(term::stderr().unwrap()) {\n                             Ok(..) => (),\n                             Err(..) => panic!(\"Unable to write to stderr: {}\", report),"}]}