{"sha": "52c97f237b7cf79889136569cec014f0fdd4af98", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyYzk3ZjIzN2I3Y2Y3OTg4OTEzNjU2OWNlYzAxNGYwZmRkNGFmOTg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-03T13:39:08Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-03T14:24:54Z"}, "message": "Rollup merge of #33340 - birkenfeld:issue-23716, r=Manishearth\n\nresolve: print location of static for \"static in pattern\" error\n\nThe implementation mirrors the one for \"constant defined here\" annotation used for constant patterns in the irrefutable-pattern case.\n\nFixes: #23716", "tree": {"sha": "5164033fd4aeb87626de04539d070e7b7cf41f02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5164033fd4aeb87626de04539d070e7b7cf41f02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52c97f237b7cf79889136569cec014f0fdd4af98", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXKLS2AAoJEDu/TT4u95+Yno4P/jsVM2SMkmFRrcYj1GqhtTjr\ns1TH6HK/f9KUJjA0llwTKuG4UO362dElMXf/uiLtje7zoJScBS0vJS0jQye4W3UV\nBy6Iq6owg9PBKOwU0JXnrNbpyn0r5aGOrX8DYNHnrdHiF5RplUvB3QLIT5nwj+k3\nW8zrDcvrR5qvzZwigAixzubkqSDiApLc+dQ6G59RiqTyIn7rjuWWcn/IEw9YJavZ\n3Cd2Em0xIX2w/MOZ49at9tVOFdDgdzLJaGQUo/48FwAkYhYH5pT42DQgUQwAuSG1\n+4TBDXVA6NpL+gN2HPrsqIXGI9xnmF6mgtMhECHdxvt2CFklLQhYBGYEXiARx87H\nxZAEL7SF28ri9B+XNny9FGskvfV/IDWg/cYHmxxGjqkf4VlVvmpyOLEX8dtBm9sc\n/NcxuV87GTC2Rq8rj1b5xmxT8VHM4fkZhPdvMBeM8K55LrmhJY03jTavK0uXQ/2e\nLBtRifbs+XR9rZNfEPTKd3fNhGe9YDBgovpsjErP7E+cLRIEh7F6UP4IHLoOASvB\nbC0Ywp8m0uXrtpOukO9S9xCFeKGyrrgdYnThzEXjHeKqFO86pFLSr1r09GMxee/0\nM0Jc9ry3wW4T9ni5OZmAicNX1p80d+ZzA9mzPWdObxcC5CUPtqx0BgR1gX7ePktj\nB5REl6iB8DYFur65pee+\n=9X/f\n-----END PGP SIGNATURE-----", "payload": "tree 5164033fd4aeb87626de04539d070e7b7cf41f02\nparent 041a269bc729c68cbb6d7283332a175c17c529fb\nparent 4ba6bf44bd010c1837fdcb87bbebf67e8abd67d4\nauthor Manish Goregaokar <manishsmail@gmail.com> 1462282748 +0530\ncommitter Manish Goregaokar <manishsmail@gmail.com> 1462285494 +0530\n\nRollup merge of #33340 - birkenfeld:issue-23716, r=Manishearth\n\nresolve: print location of static for \"static in pattern\" error\n\nThe implementation mirrors the one for \"constant defined here\" annotation used for constant patterns in the irrefutable-pattern case.\n\nFixes: #23716\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52c97f237b7cf79889136569cec014f0fdd4af98", "html_url": "https://github.com/rust-lang/rust/commit/52c97f237b7cf79889136569cec014f0fdd4af98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52c97f237b7cf79889136569cec014f0fdd4af98/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "041a269bc729c68cbb6d7283332a175c17c529fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/041a269bc729c68cbb6d7283332a175c17c529fb", "html_url": "https://github.com/rust-lang/rust/commit/041a269bc729c68cbb6d7283332a175c17c529fb"}, {"sha": "4ba6bf44bd010c1837fdcb87bbebf67e8abd67d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ba6bf44bd010c1837fdcb87bbebf67e8abd67d4", "html_url": "https://github.com/rust-lang/rust/commit/4ba6bf44bd010c1837fdcb87bbebf67e8abd67d4"}], "stats": {"total": 65, "additions": 54, "deletions": 11}, "files": [{"sha": "b590cc91c5918d0e440dcb6c9f0bbde26d969b52", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 25, "deletions": 11, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/52c97f237b7cf79889136569cec014f0fdd4af98/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52c97f237b7cf79889136569cec014f0fdd4af98/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=52c97f237b7cf79889136569cec014f0fdd4af98", "patch": "@@ -147,7 +147,7 @@ enum ResolutionError<'a> {\n     /// error E0416: identifier is bound more than once in the same pattern\n     IdentifierBoundMoreThanOnceInSamePattern(&'a str),\n     /// error E0417: static variables cannot be referenced in a pattern\n-    StaticVariableReference,\n+    StaticVariableReference(DefId, Option<Name>),\n     /// error E0418: is not an enum variant, struct or const\n     NotAnEnumVariantStructOrConst(&'a str),\n     /// error E0419: unresolved enum variant, struct or const\n@@ -352,12 +352,24 @@ fn resolve_struct_error<'b, 'a: 'b, 'tcx: 'a>(resolver: &'b Resolver<'a, 'tcx>,\n                              \"identifier `{}` is bound more than once in the same pattern\",\n                              identifier)\n         }\n-        ResolutionError::StaticVariableReference => {\n-            struct_span_err!(resolver.session,\n-                             span,\n-                             E0417,\n-                             \"static variables cannot be referenced in a pattern, use a \\\n-                              `const` instead\")\n+        ResolutionError::StaticVariableReference(did, name) => {\n+            let mut err = struct_span_err!(resolver.session,\n+                                           span,\n+                                           E0417,\n+                                           \"static variables cannot be referenced in a \\\n+                                            pattern, use a `const` instead\");\n+            if let Some(sp) = resolver.ast_map.span_if_local(did) {\n+                err.span_note(sp, \"static variable defined here\");\n+            }\n+            if let Some(name) = name {\n+                if let Some(binding) = resolver.current_module\n+                                               .resolve_name_in_lexical_scope(name, ValueNS) {\n+                    if binding.is_import() {\n+                        err.span_note(binding.span, \"static variable imported here\");\n+                    }\n+                }\n+            }\n+            err\n         }\n         ResolutionError::NotAnEnumVariantStructOrConst(name) => {\n             struct_span_err!(resolver.session,\n@@ -2313,10 +2325,11 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                             Def::Variant(..) | Def::Const(..) => {\n                                 self.record_def(pattern.id, path_res);\n                             }\n-                            Def::Static(..) => {\n+                            Def::Static(did, _) => {\n                                 resolve_error(&self,\n                                               path.span,\n-                                              ResolutionError::StaticVariableReference);\n+                                              ResolutionError::StaticVariableReference(\n+                                                  did, None));\n                                 self.record_def(pattern.id, err_path_resolution());\n                             }\n                             _ => {\n@@ -2456,8 +2469,9 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n             Some(def @ Def::Const(..)) | Some(def @ Def::AssociatedConst(..)) => {\n                 FoundConst(def, ident.unhygienic_name)\n             }\n-            Some(Def::Static(..)) => {\n-                resolve_error(self, span, ResolutionError::StaticVariableReference);\n+            Some(Def::Static(did, _)) => {\n+                resolve_error(self, span, ResolutionError::StaticVariableReference(\n+                    did, Some(ident.unhygienic_name)));\n                 BareIdentifierPatternUnresolved\n             }\n             _ => BareIdentifierPatternUnresolved,"}, {"sha": "c54f901199b460c0e62d1dce4881819440e2bf0a", "filename": "src/test/compile-fail/issue-23716.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/52c97f237b7cf79889136569cec014f0fdd4af98/src%2Ftest%2Fcompile-fail%2Fissue-23716.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52c97f237b7cf79889136569cec014f0fdd4af98/src%2Ftest%2Fcompile-fail%2Fissue-23716.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-23716.rs?ref=52c97f237b7cf79889136569cec014f0fdd4af98", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+static foo: i32 = 0;\n+//~^ NOTE static variable defined here\n+\n+fn bar(foo: i32) {}\n+//~^ ERROR static variables cannot be referenced in a pattern, use a `const` instead\n+\n+mod submod {\n+    pub static answer: i32 = 42;\n+    //~^ NOTE static variable defined here\n+}\n+\n+use self::submod::answer;\n+//~^ NOTE static variable imported here\n+\n+fn question(answer: i32) {}\n+//~^ ERROR static variables cannot be referenced in a pattern, use a `const` instead\n+\n+fn main() {\n+}"}]}