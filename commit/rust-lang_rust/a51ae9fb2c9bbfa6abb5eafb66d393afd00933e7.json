{"sha": "a51ae9fb2c9bbfa6abb5eafb66d393afd00933e7", "node_id": "C_kwDOAAsO6NoAKGE1MWFlOWZiMmM5YmJmYTZhYmI1ZWFmYjY2ZDM5M2FmZDAwOTMzZTc", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-25T18:24:55Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-25T18:26:33Z"}, "message": "Use unit tests to keep private things private", "tree": {"sha": "c1ca57ee55b7819933e182e8b242a746472826d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1ca57ee55b7819933e182e8b242a746472826d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a51ae9fb2c9bbfa6abb5eafb66d393afd00933e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a51ae9fb2c9bbfa6abb5eafb66d393afd00933e7", "html_url": "https://github.com/rust-lang/rust/commit/a51ae9fb2c9bbfa6abb5eafb66d393afd00933e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a51ae9fb2c9bbfa6abb5eafb66d393afd00933e7/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25b7a12625f65229b924adb9f4a9b431da873ed1", "url": "https://api.github.com/repos/rust-lang/rust/commits/25b7a12625f65229b924adb9f4a9b431da873ed1", "html_url": "https://github.com/rust-lang/rust/commit/25b7a12625f65229b924adb9f4a9b431da873ed1"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "e83e84b22a14507f95e6e65fbf5d3809195867f4", "filename": "ui_test/src/comments.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a51ae9fb2c9bbfa6abb5eafb66d393afd00933e7/ui_test%2Fsrc%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a51ae9fb2c9bbfa6abb5eafb66d393afd00933e7/ui_test%2Fsrc%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ui_test%2Fsrc%2Fcomments.rs?ref=a51ae9fb2c9bbfa6abb5eafb66d393afd00933e7", "patch": "@@ -2,6 +2,9 @@ use std::path::Path;\n \n use regex::Regex;\n \n+#[cfg(test)]\n+mod tests;\n+\n /// This crate supports various magic comments that get parsed as file-specific\n /// configuration values. This struct parses them all in one go and then they\n /// get processed by their respective use sites."}, {"sha": "2bcaaa70a429610faa18e58ad88bdbfeba42d412", "filename": "ui_test/src/comments/tests.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a51ae9fb2c9bbfa6abb5eafb66d393afd00933e7/ui_test%2Fsrc%2Fcomments%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a51ae9fb2c9bbfa6abb5eafb66d393afd00933e7/ui_test%2Fsrc%2Fcomments%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ui_test%2Fsrc%2Fcomments%2Ftests.rs?ref=a51ae9fb2c9bbfa6abb5eafb66d393afd00933e7", "patch": "@@ -1,6 +1,6 @@\n use std::path::Path;\n \n-use ui_test::Comments;\n+use super::Comments;\n \n #[test]\n fn parse_simple_comment() {", "previous_filename": "ui_test/tests/comment_parser.rs"}, {"sha": "4a3014713b2ae8baf1e0b6ec1b631f0cbe789faa", "filename": "ui_test/src/lib.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a51ae9fb2c9bbfa6abb5eafb66d393afd00933e7/ui_test%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a51ae9fb2c9bbfa6abb5eafb66d393afd00933e7/ui_test%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ui_test%2Fsrc%2Flib.rs?ref=a51ae9fb2c9bbfa6abb5eafb66d393afd00933e7", "patch": "@@ -12,6 +12,8 @@ use regex::Regex;\n pub use crate::comments::Comments;\n \n mod comments;\n+#[cfg(test)]\n+mod tests;\n \n #[derive(Debug)]\n pub struct Config {\n@@ -171,7 +173,7 @@ pub fn run_tests(config: Config) {\n }\n \n #[derive(Debug)]\n-pub enum Error {\n+enum Error {\n     /// Got an invalid exit status for the given mode.\n     ExitStatus(Mode, ExitStatus),\n     PatternNotFound {\n@@ -191,7 +193,7 @@ pub enum Error {\n     },\n }\n \n-pub type Errors = Vec<Error>;\n+type Errors = Vec<Error>;\n \n fn run_test(\n     path: &Path,\n@@ -249,7 +251,7 @@ fn run_test(\n     (miri, errors)\n }\n \n-pub fn check_annotations(\n+fn check_annotations(\n     unnormalized_stderr: &[u8],\n     errors: &mut Errors,\n     config: &Config,"}, {"sha": "841f790b95b569e282c790163552be71f96897f6", "filename": "ui_test/src/tests.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a51ae9fb2c9bbfa6abb5eafb66d393afd00933e7/ui_test%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a51ae9fb2c9bbfa6abb5eafb66d393afd00933e7/ui_test%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ui_test%2Fsrc%2Ftests.rs?ref=a51ae9fb2c9bbfa6abb5eafb66d393afd00933e7", "patch": "@@ -1,6 +1,6 @@\n use std::path::{Path, PathBuf};\n \n-use ui_test::{check_annotations, Comments, Config, Error, Mode, OutputConflictHandling};\n+use super::{check_annotations, Comments, Config, Error, Mode, OutputConflictHandling};\n \n fn config() -> Config {\n     Config {", "previous_filename": "ui_test/tests/check_annotations.rs"}]}