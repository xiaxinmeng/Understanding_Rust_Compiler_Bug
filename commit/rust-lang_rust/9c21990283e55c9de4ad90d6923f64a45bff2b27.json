{"sha": "9c21990283e55c9de4ad90d6923f64a45bff2b27", "node_id": "C_kwDOAAsO6NoAKDljMjE5OTAyODNlNTVjOWRlNGFkOTBkNjkyM2Y2NGE0NWJmZjJiMjc", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-11-28T15:02:08Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-11-28T15:02:08Z"}, "message": "Rename target_dir to dist_dir in a couple of places", "tree": {"sha": "f9120d47002282b36db7ee6860217eb5af18151f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9120d47002282b36db7ee6860217eb5af18151f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c21990283e55c9de4ad90d6923f64a45bff2b27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c21990283e55c9de4ad90d6923f64a45bff2b27", "html_url": "https://github.com/rust-lang/rust/commit/9c21990283e55c9de4ad90d6923f64a45bff2b27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c21990283e55c9de4ad90d6923f64a45bff2b27/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "052d5ccf5dc83db14917f4a52329a3bf2465af74", "url": "https://api.github.com/repos/rust-lang/rust/commits/052d5ccf5dc83db14917f4a52329a3bf2465af74", "html_url": "https://github.com/rust-lang/rust/commit/052d5ccf5dc83db14917f4a52329a3bf2465af74"}], "stats": {"total": 58, "additions": 29, "deletions": 29}, "files": [{"sha": "bff5b8f41020a200ce1efb2846868f87568ce93b", "filename": "build_system/abi_cafe.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c21990283e55c9de4ad90d6923f64a45bff2b27/build_system%2Fabi_cafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c21990283e55c9de4ad90d6923f64a45bff2b27/build_system%2Fabi_cafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fabi_cafe.rs?ref=9c21990283e55c9de4ad90d6923f64a45bff2b27", "patch": "@@ -14,7 +14,7 @@ static ABI_CAFE: CargoProject = CargoProject::git(&ABI_CAFE_REPO, \".\");\n pub(crate) fn run(\n     channel: &str,\n     sysroot_kind: SysrootKind,\n-    target_dir: &Path,\n+    dist_dir: &Path,\n     cg_clif_dylib: &Path,\n     host_triple: &str,\n     target_triple: &str,\n@@ -33,7 +33,7 @@ pub(crate) fn run(\n     build_sysroot::build_sysroot(\n         channel,\n         sysroot_kind,\n-        target_dir,\n+        dist_dir,\n         cg_clif_dylib,\n         host_triple,\n         target_triple,"}, {"sha": "4b21df85f5fbf1baafe5a91eb5c980eba576319f", "filename": "build_system/build_sysroot.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9c21990283e55c9de4ad90d6923f64a45bff2b27/build_system%2Fbuild_sysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c21990283e55c9de4ad90d6923f64a45bff2b27/build_system%2Fbuild_sysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbuild_sysroot.rs?ref=9c21990283e55c9de4ad90d6923f64a45bff2b27", "patch": "@@ -9,21 +9,21 @@ use super::SysrootKind;\n pub(crate) fn build_sysroot(\n     channel: &str,\n     sysroot_kind: SysrootKind,\n-    target_dir: &Path,\n+    dist_dir: &Path,\n     cg_clif_dylib_src: &Path,\n     host_triple: &str,\n     target_triple: &str,\n ) {\n     eprintln!(\"[BUILD] sysroot {:?}\", sysroot_kind);\n \n-    if target_dir.exists() {\n-        fs::remove_dir_all(target_dir).unwrap();\n+    if dist_dir.exists() {\n+        fs::remove_dir_all(dist_dir).unwrap();\n     }\n-    fs::create_dir_all(target_dir.join(\"bin\")).unwrap();\n-    fs::create_dir_all(target_dir.join(\"lib\")).unwrap();\n+    fs::create_dir_all(dist_dir.join(\"bin\")).unwrap();\n+    fs::create_dir_all(dist_dir.join(\"lib\")).unwrap();\n \n     // Copy the backend\n-    let cg_clif_dylib_path = target_dir\n+    let cg_clif_dylib_path = dist_dir\n         .join(if cfg!(windows) {\n             // Windows doesn't have rpath support, so the cg_clif dylib needs to be next to the\n             // binaries.\n@@ -42,14 +42,14 @@ pub(crate) fn build_sysroot(\n         build_cargo_wrapper_cmd\n             .arg(PathBuf::from(\"scripts\").join(format!(\"{wrapper}.rs\")))\n             .arg(\"-o\")\n-            .arg(target_dir.join(wrapper_name))\n+            .arg(dist_dir.join(wrapper_name))\n             .arg(\"-g\");\n         spawn_and_wait(build_cargo_wrapper_cmd);\n     }\n \n     let default_sysroot = super::rustc_info::get_default_sysroot();\n \n-    let rustlib = target_dir.join(\"lib\").join(\"rustlib\");\n+    let rustlib = dist_dir.join(\"lib\").join(\"rustlib\");\n     let host_rustlib_lib = rustlib.join(host_triple).join(\"lib\");\n     let target_rustlib_lib = rustlib.join(target_triple).join(\"lib\");\n     fs::create_dir_all(&host_rustlib_lib).unwrap();\n@@ -114,7 +114,7 @@ pub(crate) fn build_sysroot(\n         SysrootKind::Clif => {\n             build_clif_sysroot_for_triple(\n                 channel,\n-                target_dir,\n+                dist_dir,\n                 host_triple,\n                 &cg_clif_dylib_path,\n                 None,\n@@ -129,7 +129,7 @@ pub(crate) fn build_sysroot(\n                 };\n                 build_clif_sysroot_for_triple(\n                     channel,\n-                    target_dir,\n+                    dist_dir,\n                     target_triple,\n                     &cg_clif_dylib_path,\n                     linker,\n@@ -142,7 +142,7 @@ pub(crate) fn build_sysroot(\n                 let file = file.unwrap().path();\n                 let filename = file.file_name().unwrap().to_str().unwrap();\n                 if filename.contains(\"std-\") && !filename.contains(\".rlib\") {\n-                    try_hard_link(&file, target_dir.join(\"lib\").join(file.file_name().unwrap()));\n+                    try_hard_link(&file, dist_dir.join(\"lib\").join(file.file_name().unwrap()));\n                 }\n             }\n         }\n@@ -153,7 +153,7 @@ static STANDARD_LIBRARY: CargoProject = CargoProject::local(\"build_sysroot\");\n \n fn build_clif_sysroot_for_triple(\n     channel: &str,\n-    target_dir: &Path,\n+    dist_dir: &Path,\n     triple: &str,\n     cg_clif_dylib_path: &Path,\n     linker: Option<&str>,\n@@ -189,7 +189,7 @@ fn build_clif_sysroot_for_triple(\n     // Build sysroot\n     let mut rustflags = \"-Zforce-unstable-if-unmarked -Cpanic=abort\".to_string();\n     rustflags.push_str(&format!(\" -Zcodegen-backend={}\", cg_clif_dylib_path.to_str().unwrap()));\n-    rustflags.push_str(&format!(\" --sysroot={}\", target_dir.to_str().unwrap()));\n+    rustflags.push_str(&format!(\" --sysroot={}\", dist_dir.to_str().unwrap()));\n     if channel == \"release\" {\n         rustflags.push_str(\" -Zmir-opt-level=3\");\n     }\n@@ -221,7 +221,7 @@ fn build_clif_sysroot_for_triple(\n         };\n         try_hard_link(\n             entry.path(),\n-            target_dir.join(\"lib\").join(\"rustlib\").join(triple).join(\"lib\").join(entry.file_name()),\n+            dist_dir.join(\"lib\").join(\"rustlib\").join(triple).join(\"lib\").join(entry.file_name()),\n         );\n     }\n }"}, {"sha": "531f42cf873007145aeca8d3f69a50936680cd92", "filename": "build_system/mod.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9c21990283e55c9de4ad90d6923f64a45bff2b27/build_system%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c21990283e55c9de4ad90d6923f64a45bff2b27/build_system%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fmod.rs?ref=9c21990283e55c9de4ad90d6923f64a45bff2b27", "patch": "@@ -17,10 +17,10 @@ fn usage() {\n     eprintln!(\"Usage:\");\n     eprintln!(\"  ./y.rs prepare\");\n     eprintln!(\n-        \"  ./y.rs build [--debug] [--sysroot none|clif|llvm] [--target-dir DIR] [--no-unstable-features]\"\n+        \"  ./y.rs build [--debug] [--sysroot none|clif|llvm] [--dist-dir DIR] [--no-unstable-features]\"\n     );\n     eprintln!(\n-        \"  ./y.rs test [--debug] [--sysroot none|clif|llvm] [--target-dir DIR] [--no-unstable-features]\"\n+        \"  ./y.rs test [--debug] [--sysroot none|clif|llvm] [--dist-dir DIR] [--no-unstable-features]\"\n     );\n }\n \n@@ -75,15 +75,15 @@ pub fn main() {\n         }\n     };\n \n-    let mut target_dir = PathBuf::from(\"dist\");\n+    let mut dist_dir = PathBuf::from(\"dist\");\n     let mut channel = \"release\";\n     let mut sysroot_kind = SysrootKind::Clif;\n     let mut use_unstable_features = true;\n     while let Some(arg) = args.next().as_deref() {\n         match arg {\n-            \"--target-dir\" => {\n-                target_dir = PathBuf::from(args.next().unwrap_or_else(|| {\n-                    arg_error!(\"--target-dir requires argument\");\n+            \"--dist-dir\" => {\n+                dist_dir = PathBuf::from(args.next().unwrap_or_else(|| {\n+                    arg_error!(\"--dist-dir requires argument\");\n                 }))\n             }\n             \"--debug\" => channel = \"debug\",\n@@ -101,7 +101,7 @@ pub fn main() {\n             arg => arg_error!(\"Unexpected argument {}\", arg),\n         }\n     }\n-    target_dir = std::env::current_dir().unwrap().join(target_dir);\n+    dist_dir = std::env::current_dir().unwrap().join(dist_dir);\n \n     let host_triple = if let Ok(host_triple) = std::env::var(\"HOST_TRIPLE\") {\n         host_triple\n@@ -128,7 +128,7 @@ pub fn main() {\n             tests::run_tests(\n                 channel,\n                 sysroot_kind,\n-                &target_dir,\n+                &dist_dir,\n                 &cg_clif_dylib,\n                 &host_triple,\n                 &target_triple,\n@@ -137,7 +137,7 @@ pub fn main() {\n             abi_cafe::run(\n                 channel,\n                 sysroot_kind,\n-                &target_dir,\n+                &dist_dir,\n                 &cg_clif_dylib,\n                 &host_triple,\n                 &target_triple,\n@@ -147,7 +147,7 @@ pub fn main() {\n             build_sysroot::build_sysroot(\n                 channel,\n                 sysroot_kind,\n-                &target_dir,\n+                &dist_dir,\n                 &cg_clif_dylib,\n                 &host_triple,\n                 &target_triple,"}, {"sha": "aa46cd0a250e762a9d293f920a67ddf70f42fb74", "filename": "build_system/tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9c21990283e55c9de4ad90d6923f64a45bff2b27/build_system%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c21990283e55c9de4ad90d6923f64a45bff2b27/build_system%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Ftests.rs?ref=9c21990283e55c9de4ad90d6923f64a45bff2b27", "patch": "@@ -432,7 +432,7 @@ const EXTENDED_SYSROOT_SUITE: &[TestCase] = &[\n pub(crate) fn run_tests(\n     channel: &str,\n     sysroot_kind: SysrootKind,\n-    target_dir: &Path,\n+    dist_dir: &Path,\n     cg_clif_dylib: &Path,\n     host_triple: &str,\n     target_triple: &str,\n@@ -443,7 +443,7 @@ pub(crate) fn run_tests(\n         build_sysroot::build_sysroot(\n             channel,\n             SysrootKind::None,\n-            &target_dir,\n+            &dist_dir,\n             cg_clif_dylib,\n             &host_triple,\n             &target_triple,\n@@ -462,7 +462,7 @@ pub(crate) fn run_tests(\n         build_sysroot::build_sysroot(\n             channel,\n             sysroot_kind,\n-            &target_dir,\n+            &dist_dir,\n             cg_clif_dylib,\n             &host_triple,\n             &target_triple,"}]}