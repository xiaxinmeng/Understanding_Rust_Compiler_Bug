{"sha": "1b84623aac1221d10d251ac82370cf4393157613", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiODQ2MjNhYWMxMjIxZDEwZDI1MWFjODIzNzBjZjQzOTMxNTc2MTM=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-10-01T15:00:12Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-10-01T15:00:12Z"}, "message": "Use offset_left()", "tree": {"sha": "8b8dde77fd89a3c2e416e9a297da25553b7d88dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b8dde77fd89a3c2e416e9a297da25553b7d88dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b84623aac1221d10d251ac82370cf4393157613", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b84623aac1221d10d251ac82370cf4393157613", "html_url": "https://github.com/rust-lang/rust/commit/1b84623aac1221d10d251ac82370cf4393157613", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b84623aac1221d10d251ac82370cf4393157613/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e41100725267974fa6dcc61134d4377b676ad01", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e41100725267974fa6dcc61134d4377b676ad01", "html_url": "https://github.com/rust-lang/rust/commit/6e41100725267974fa6dcc61134d4377b676ad01"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "6f6e02f4d92a238b68578c09577c7b9e9a367dfc", "filename": "src/types.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1b84623aac1221d10d251ac82370cf4393157613/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b84623aac1221d10d251ac82370cf4393157613/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=1b84623aac1221d10d251ac82370cf4393157613", "patch": "@@ -439,7 +439,7 @@ impl Rewrite for ast::WherePredicate {\n \n                     // 6 = \"for<> \".len()\n                     let used_width = lifetime_str.len() + type_str.len() + colon.len() + 6;\n-                    let ty_shape = try_opt!(shape.block_left(used_width));\n+                    let ty_shape = try_opt!(shape.offset_left(used_width));\n                     let bounds: Vec<_> = try_opt!(\n                         bounds\n                             .iter()\n@@ -553,10 +553,9 @@ impl Rewrite for ast::TyParamBound {\n                 tref.rewrite(context, shape)\n             }\n             ast::TyParamBound::TraitTyParamBound(ref tref, ast::TraitBoundModifier::Maybe) => {\n-                let budget = try_opt!(shape.width.checked_sub(1));\n                 Some(format!(\n                     \"?{}\",\n-                    try_opt!(tref.rewrite(context, Shape::legacy(budget, shape.indent + 1)))\n+                    try_opt!(tref.rewrite(context, try_opt!(shape.offset_left(1))))\n                 ))\n             }\n             ast::TyParamBound::RegionTyParamBound(ref l) => l.rewrite(context, shape),\n@@ -624,11 +623,10 @@ impl Rewrite for ast::PolyTraitRef {\n \n             // 6 is \"for<> \".len()\n             let extra_offset = lifetime_str.len() + 6;\n-            let max_path_width = try_opt!(shape.width.checked_sub(extra_offset));\n-            let path_str = try_opt!(self.trait_ref.rewrite(\n-                context,\n-                Shape::legacy(max_path_width, shape.indent + extra_offset),\n-            ));\n+            let path_str = try_opt!(\n+                self.trait_ref\n+                    .rewrite(context, try_opt!(shape.offset_left(extra_offset)))\n+            );\n \n             Some(\n                 if context.config.spaces_within_angle_brackets() && !lifetime_str.is_empty() {"}]}