{"sha": "621767136eae13b2d9ebd462d3b33d6f1ad6b4e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyMTc2NzEzNmVhZTEzYjJkOWViZDQ2MmQzYjMzZDZmMWFkNmI0ZTk=", "commit": {"author": {"name": "Marcin Serwin", "email": "toxyxer@gmail.com", "date": "2020-03-19T15:54:19Z"}, "committer": {"name": "Marcin Serwin", "email": "toxyxer@gmail.com", "date": "2020-04-09T06:05:51Z"}, "message": "Handle evaluating constant index expression", "tree": {"sha": "76b127b2bab092405d63ef8c23e947894813634c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76b127b2bab092405d63ef8c23e947894813634c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/621767136eae13b2d9ebd462d3b33d6f1ad6b4e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/621767136eae13b2d9ebd462d3b33d6f1ad6b4e9", "html_url": "https://github.com/rust-lang/rust/commit/621767136eae13b2d9ebd462d3b33d6f1ad6b4e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/621767136eae13b2d9ebd462d3b33d6f1ad6b4e9/comments", "author": {"login": "marcin-serwin", "id": 12128106, "node_id": "MDQ6VXNlcjEyMTI4MTA2", "avatar_url": "https://avatars.githubusercontent.com/u/12128106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcin-serwin", "html_url": "https://github.com/marcin-serwin", "followers_url": "https://api.github.com/users/marcin-serwin/followers", "following_url": "https://api.github.com/users/marcin-serwin/following{/other_user}", "gists_url": "https://api.github.com/users/marcin-serwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcin-serwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcin-serwin/subscriptions", "organizations_url": "https://api.github.com/users/marcin-serwin/orgs", "repos_url": "https://api.github.com/users/marcin-serwin/repos", "events_url": "https://api.github.com/users/marcin-serwin/events{/privacy}", "received_events_url": "https://api.github.com/users/marcin-serwin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcin-serwin", "id": 12128106, "node_id": "MDQ6VXNlcjEyMTI4MTA2", "avatar_url": "https://avatars.githubusercontent.com/u/12128106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcin-serwin", "html_url": "https://github.com/marcin-serwin", "followers_url": "https://api.github.com/users/marcin-serwin/followers", "following_url": "https://api.github.com/users/marcin-serwin/following{/other_user}", "gists_url": "https://api.github.com/users/marcin-serwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcin-serwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcin-serwin/subscriptions", "organizations_url": "https://api.github.com/users/marcin-serwin/orgs", "repos_url": "https://api.github.com/users/marcin-serwin/repos", "events_url": "https://api.github.com/users/marcin-serwin/events{/privacy}", "received_events_url": "https://api.github.com/users/marcin-serwin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2153abb4124fd3dca018d4adb4e79693f1a9fedd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2153abb4124fd3dca018d4adb4e79693f1a9fedd", "html_url": "https://github.com/rust-lang/rust/commit/2153abb4124fd3dca018d4adb4e79693f1a9fedd"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "c25200c33388028beec98207f40426ef0f752ac9", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/621767136eae13b2d9ebd462d3b33d6f1ad6b4e9/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/621767136eae13b2d9ebd462d3b33d6f1ad6b4e9/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=621767136eae13b2d9ebd462d3b33d6f1ad6b4e9", "patch": "@@ -268,6 +268,7 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n                     }\n                 }\n             },\n+            ExprKind::Index(ref arr, ref index) => self.index(arr, index),\n             // TODO: add other expressions.\n             _ => None,\n         }\n@@ -345,6 +346,20 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n         }\n     }\n \n+    fn index(&mut self, lhs: &'_ Expr<'_>, index: &'_ Expr<'_>) -> Option<Constant> {\n+        let lhs = self.expr(lhs);\n+        let index = self.expr(index);\n+\n+        match (lhs, index) {\n+            (Some(Constant::Vec(vec)), Some(Constant::Int(index))) => match vec[index as usize] {\n+                Constant::F32(x) => Some(Constant::F32(x)),\n+                Constant::F64(x) => Some(Constant::F64(x)),\n+                _ => None,\n+            },\n+            _ => None,\n+        }\n+    }\n+\n     /// A block can only yield a constant if it only has one constant expression.\n     fn block(&mut self, block: &Block<'_>) -> Option<Constant> {\n         if block.stmts.is_empty() {"}]}