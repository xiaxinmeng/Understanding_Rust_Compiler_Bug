{"sha": "cbcf2ffe8041ae29f51e3a378c86734d6b555c05", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiY2YyZmZlODA0MWFlMjlmNTFlM2EzNzhjODY3MzRkNmI1NTVjMDU=", "commit": {"author": {"name": "Jonathan S", "email": "gereeter+code@gmail.com", "date": "2017-12-21T01:36:41Z"}, "committer": {"name": "Jonathan S", "email": "gereeter+code@gmail.com", "date": "2017-12-21T01:36:41Z"}, "message": "Never mark unions as uninhabited. Although I think this is wrong, it is certainly sound, and the general consensus seems to value not having footguns over some sort of aesthetic consistency.", "tree": {"sha": "ee482adfb4ebf2f6db12eb1ebd78cadf1c96781a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee482adfb4ebf2f6db12eb1ebd78cadf1c96781a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbcf2ffe8041ae29f51e3a378c86734d6b555c05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbcf2ffe8041ae29f51e3a378c86734d6b555c05", "html_url": "https://github.com/rust-lang/rust/commit/cbcf2ffe8041ae29f51e3a378c86734d6b555c05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbcf2ffe8041ae29f51e3a378c86734d6b555c05/comments", "author": {"login": "gereeter", "id": 2328242, "node_id": "MDQ6VXNlcjIzMjgyNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2328242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gereeter", "html_url": "https://github.com/gereeter", "followers_url": "https://api.github.com/users/gereeter/followers", "following_url": "https://api.github.com/users/gereeter/following{/other_user}", "gists_url": "https://api.github.com/users/gereeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/gereeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gereeter/subscriptions", "organizations_url": "https://api.github.com/users/gereeter/orgs", "repos_url": "https://api.github.com/users/gereeter/repos", "events_url": "https://api.github.com/users/gereeter/events{/privacy}", "received_events_url": "https://api.github.com/users/gereeter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gereeter", "id": 2328242, "node_id": "MDQ6VXNlcjIzMjgyNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2328242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gereeter", "html_url": "https://github.com/gereeter", "followers_url": "https://api.github.com/users/gereeter/followers", "following_url": "https://api.github.com/users/gereeter/following{/other_user}", "gists_url": "https://api.github.com/users/gereeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/gereeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gereeter/subscriptions", "organizations_url": "https://api.github.com/users/gereeter/orgs", "repos_url": "https://api.github.com/users/gereeter/repos", "events_url": "https://api.github.com/users/gereeter/events{/privacy}", "received_events_url": "https://api.github.com/users/gereeter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1fe4a22b9f35f326038b3a2745102ce7bd86fc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1fe4a22b9f35f326038b3a2745102ce7bd86fc1", "html_url": "https://github.com/rust-lang/rust/commit/c1fe4a22b9f35f326038b3a2745102ce7bd86fc1"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "b46a7585945c7cd523ce38bad5eb6cff19d11811", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cbcf2ffe8041ae29f51e3a378c86734d6b555c05/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbcf2ffe8041ae29f51e3a378c86734d6b555c05/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=cbcf2ffe8041ae29f51e3a378c86734d6b555c05", "patch": "@@ -1361,11 +1361,6 @@ impl<'a, 'tcx> LayoutDetails {\n                         bug!(\"Union must be represented as a single variant\");\n                     }\n \n-                    if variants[0].iter().all(|f| f.abi == Abi::Uninhabited) {\n-                        // Uninhabited because it has only uninhabited variants/fields.\n-                        return Ok(tcx.intern_layout(LayoutDetails::uninhabited(0)));\n-                    }\n-\n                     let mut align = if def.repr.packed() {\n                         dl.i8_align\n                     } else {"}]}