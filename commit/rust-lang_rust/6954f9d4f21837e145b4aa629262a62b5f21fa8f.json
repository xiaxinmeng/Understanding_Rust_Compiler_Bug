{"sha": "6954f9d4f21837e145b4aa629262a62b5f21fa8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NTRmOWQ0ZjIxODM3ZTE0NWI0YWE2MjkyNjJhNjJiNWYyMWZhOGY=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-07-27T22:50:18Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-07-27T23:21:25Z"}, "message": "Update stderr", "tree": {"sha": "ef52c36d7507fe1f4e7af5357fcda5c9a32d31cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef52c36d7507fe1f4e7af5357fcda5c9a32d31cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6954f9d4f21837e145b4aa629262a62b5f21fa8f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmEAlPYACgkQtAh+UQ6Y\nsWSQXxAAm0RYl6afXr5Pg3dGpTAfe0AbCGd8JQePossB3YKRif/oxZbvNWne68X2\nutc/QeSwx9qMmSe9plcfdFroMxR7qY4gMDkJlQqSYeFTfbV4hrlH0uN0sl0iuUQm\n1mvF5iEd5oubboMk/m8t04jGiCWsrqEkdX8PmY2I0SfesSdVSvFX6oTkDDCyjKCL\nNv3xjnaMJQB8pTqo7Jr7Nyj4a/QbWa0EF9M+Lz1xYJHN5G1wJij6T33RM2hB4qRL\n2SKsk2yyyMg4YwDoHPQkPgBCPaz3FKqFB8mnMAizN+HYPVznJ1ISNhQkpNOMEXlC\nYnAgotutSAdmnuY3cNyUqEr62I7FbsIt8dnBJL8jPFmJR6XRgdlLa19wDA8GvlaS\nJeOISCAgCGo0XLA2noE9fYphThWYBI3qURBrfJS/7qC1YViVB2FMoZXYyqdRWz/V\n7tnrCEvvV1WlWDc0mOJ2EW1fAY5Nb2Gwoxe5cdXA8vehl6CL2z8GU+hoyRexe19I\n7JEqlweXh3M3atRvka8iv9XLSePgSDyGbrRWXez/4ZwxU4wVIcXzT1BiAXsMtPcM\njDTbrLJH0cT8gZD7N5ufFzYUThZ95VTKdLEm4UJ8hOaWAO8I82yYDdRpTTRCGcrx\nU5lVR9yuSU7olnK9WReussMOD1F8FWFV9IBhfSANNnchWslvB4w=\n=7sOK\n-----END PGP SIGNATURE-----", "payload": "tree ef52c36d7507fe1f4e7af5357fcda5c9a32d31cd\nparent cf167c9c9c0576472b67f5498a074bc697c9af23\nauthor Aaron Hill <aa1ronham@gmail.com> 1627426218 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1627428085 -0500\n\nUpdate stderr\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6954f9d4f21837e145b4aa629262a62b5f21fa8f", "html_url": "https://github.com/rust-lang/rust/commit/6954f9d4f21837e145b4aa629262a62b5f21fa8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6954f9d4f21837e145b4aa629262a62b5f21fa8f/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf167c9c9c0576472b67f5498a074bc697c9af23", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf167c9c9c0576472b67f5498a074bc697c9af23", "html_url": "https://github.com/rust-lang/rust/commit/cf167c9c9c0576472b67f5498a074bc697c9af23"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "f22caf2793fd5ef07f4ede88e0d819420b6f64d4", "filename": "src/test/ui/macros/macro-in-expression-context.fixed", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6954f9d4f21837e145b4aa629262a62b5f21fa8f/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/6954f9d4f21837e145b4aa629262a62b5f21fa8f/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.fixed?ref=6954f9d4f21837e145b4aa629262a62b5f21fa8f", "patch": "@@ -5,6 +5,8 @@ macro_rules! foo {\n         assert_eq!(\"A\", \"A\");\n         //~^ WARN trailing semicolon in macro\n         //~| WARN this was previously\n+        //~| NOTE macro invocations at the end of a block\n+        //~| NOTE to ignore the value produced by the macro\n         //~| NOTE for more information\n         //~| NOTE `#[warn(semicolon_in_expressions_from_macros)]` on by default\n         assert_eq!(\"B\", \"B\");\n@@ -20,4 +22,6 @@ fn main() {\n     //~| NOTE in this expansion\n     //~| NOTE in this expansion\n     //~| NOTE in this expansion\n+    //~| NOTE in this expansion\n+    //~| NOTE in this expansion\n }"}, {"sha": "1a056e582ff4758b8298afabf202bfd5cc3a4081", "filename": "src/test/ui/macros/macro-in-expression-context.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6954f9d4f21837e145b4aa629262a62b5f21fa8f/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6954f9d4f21837e145b4aa629262a62b5f21fa8f/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.rs?ref=6954f9d4f21837e145b4aa629262a62b5f21fa8f", "patch": "@@ -5,6 +5,8 @@ macro_rules! foo {\n         assert_eq!(\"A\", \"A\");\n         //~^ WARN trailing semicolon in macro\n         //~| WARN this was previously\n+        //~| NOTE macro invocations at the end of a block\n+        //~| NOTE to ignore the value produced by the macro\n         //~| NOTE for more information\n         //~| NOTE `#[warn(semicolon_in_expressions_from_macros)]` on by default\n         assert_eq!(\"B\", \"B\");\n@@ -20,4 +22,6 @@ fn main() {\n     //~| NOTE in this expansion\n     //~| NOTE in this expansion\n     //~| NOTE in this expansion\n+    //~| NOTE in this expansion\n+    //~| NOTE in this expansion\n }"}, {"sha": "1840babd61dc2a79a7326fc4072123643ca5e397", "filename": "src/test/ui/macros/macro-in-expression-context.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6954f9d4f21837e145b4aa629262a62b5f21fa8f/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6954f9d4f21837e145b4aa629262a62b5f21fa8f/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.stderr?ref=6954f9d4f21837e145b4aa629262a62b5f21fa8f", "patch": "@@ -1,5 +1,5 @@\n error: macro expansion ignores token `assert_eq` and any following\n-  --> $DIR/macro-in-expression-context.rs:10:9\n+  --> $DIR/macro-in-expression-context.rs:12:9\n    |\n LL |         assert_eq!(\"B\", \"B\");\n    |         ^^^^^^^^^\n@@ -23,6 +23,8 @@ LL |     foo!()\n    = note: `#[warn(semicolon_in_expressions_from_macros)]` on by default\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\n+   = note: macro invocations at the end of a block are treated as expressions\n+   = note: to ignore the value produced by the macro, add a semicolon after the invocation of `foo`\n    = note: this warning originates in the macro `foo` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error; 1 warning emitted"}]}