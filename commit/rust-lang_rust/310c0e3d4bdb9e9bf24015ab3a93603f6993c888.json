{"sha": "310c0e3d4bdb9e9bf24015ab3a93603f6993c888", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxMGMwZTNkNGJkYjllOWJmMjQwMTVhYjNhOTM2MDNmNjk5M2M4ODg=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-09-29T21:46:23Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-10-06T00:36:14Z"}, "message": "testsuite: Two tests for fixed bugs\n\nCloses #7246\nCloses #7573", "tree": {"sha": "106fcc8ef468cc8f735d2b2fe9415f06cb306891", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/106fcc8ef468cc8f735d2b2fe9415f06cb306891"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/310c0e3d4bdb9e9bf24015ab3a93603f6993c888", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/310c0e3d4bdb9e9bf24015ab3a93603f6993c888", "html_url": "https://github.com/rust-lang/rust/commit/310c0e3d4bdb9e9bf24015ab3a93603f6993c888", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/310c0e3d4bdb9e9bf24015ab3a93603f6993c888/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf416e7daf533fd4eb6f270da3ab965ac7422f05", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf416e7daf533fd4eb6f270da3ab965ac7422f05", "html_url": "https://github.com/rust-lang/rust/commit/bf416e7daf533fd4eb6f270da3ab965ac7422f05"}], "stats": {"total": 74, "additions": 71, "deletions": 3}, "files": [{"sha": "1fc04c7a0f67ad844ed203e2883f3a4a98d2a72d", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/310c0e3d4bdb9e9bf24015ab3a93603f6993c888/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/310c0e3d4bdb9e9bf24015ab3a93603f6993c888/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=310c0e3d4bdb9e9bf24015ab3a93603f6993c888", "patch": "@@ -3054,7 +3054,8 @@ pub fn check_block_with_expected(fcx: @mut FnCtxt,\n             },\n           Some(e) => {\n             if any_bot && !warned {\n-                fcx.ccx.tcx.sess.span_warn(e.span, \"unreachable expression\");\n+                fcx.ccx.tcx.sess.add_lint(unreachable_code, e.id, e.span,\n+                                          ~\"unreachable expression\");\n             }\n             check_expr_with_opt_hint(fcx, e, expected);\n               let ety = fcx.expr_ty(e);"}, {"sha": "1e427ceb4b73dc857c04dda73826450325f716c6", "filename": "src/test/compile-fail/issue-2149.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/310c0e3d4bdb9e9bf24015ab3a93603f6993c888/src%2Ftest%2Fcompile-fail%2Fissue-2149.rs", "raw_url": "https://github.com/rust-lang/rust/raw/310c0e3d4bdb9e9bf24015ab3a93603f6993c888/src%2Ftest%2Fcompile-fail%2Fissue-2149.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2149.rs?ref=310c0e3d4bdb9e9bf24015ab3a93603f6993c888", "patch": "@@ -16,8 +16,7 @@ impl<A> vec_monad<A> for ~[A] {\n     fn bind<B>(&self, f: &fn(A) -> ~[B]) {\n         let mut r = fail2!();\n         for elt in self.iter() { r = r + f(*elt); }\n-        //~^ WARNING unreachable expression\n-        //~^^ ERROR the type of this value must be known\n+        //~^ ERROR the type of this value must be known\n    }\n }\n fn main() {"}, {"sha": "dacc31a573accabedfb1eb39e284cc7ef45cbeb3", "filename": "src/test/compile-fail/issue-7246.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/310c0e3d4bdb9e9bf24015ab3a93603f6993c888/src%2Ftest%2Fcompile-fail%2Fissue-7246.rs", "raw_url": "https://github.com/rust-lang/rust/raw/310c0e3d4bdb9e9bf24015ab3a93603f6993c888/src%2Ftest%2Fcompile-fail%2Fissue-7246.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7246.rs?ref=310c0e3d4bdb9e9bf24015ab3a93603f6993c888", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[deny(unreachable_code)];\n+use std::ptr;\n+pub unsafe fn g() {\n+    return; \n+    if *ptr::null() {}; //~ ERROR unreachable\n+}\n+\n+pub fn main() {}"}, {"sha": "2be763ee768508770a7f46ba0de5058be5131e96", "filename": "src/test/compile-fail/issue-7573.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/310c0e3d4bdb9e9bf24015ab3a93603f6993c888/src%2Ftest%2Fcompile-fail%2Fissue-7573.rs", "raw_url": "https://github.com/rust-lang/rust/raw/310c0e3d4bdb9e9bf24015ab3a93603f6993c888/src%2Ftest%2Fcompile-fail%2Fissue-7573.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7573.rs?ref=310c0e3d4bdb9e9bf24015ab3a93603f6993c888", "patch": "@@ -0,0 +1,50 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::io;\n+\n+pub struct PkgId {\n+    local_path: ~str,\n+    junk: ~str\n+}\n+\n+impl PkgId {\n+    fn new(s: &str) -> PkgId {\n+        PkgId {\n+            local_path: s.to_owned(),\n+            junk: ~\"wutevs\"\n+        }\n+    }\n+}\n+\n+pub fn remove_package_from_database() {\n+    let mut lines_to_use: ~[&PkgId] = ~[]; //~ ERROR cannot infer an appropriate lifetime\n+    let push_id = |installed_id: &PkgId| {\n+        lines_to_use.push(installed_id);\n+    };\n+    list_database(push_id);\n+\n+    for l in lines_to_use.iter() {\n+        io::stdout().write_line(l.local_path);\n+    }\n+\n+}\n+\n+pub fn list_database(f: &fn(&PkgId)) {\n+    let stuff = [\"foo\", \"bar\"];\n+\n+    for l in stuff.iter() {\n+        f(&PkgId::new(*l));\n+    }\n+}\n+\n+pub fn main() {\n+    remove_package_from_database();\n+}"}]}