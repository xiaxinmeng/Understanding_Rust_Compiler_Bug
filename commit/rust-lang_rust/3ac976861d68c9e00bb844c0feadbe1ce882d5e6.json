{"sha": "3ac976861d68c9e00bb844c0feadbe1ce882d5e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhYzk3Njg2MWQ2OGM5ZTAwYmI4NDRjMGZlYWRiZTFjZTg4MmQ1ZTY=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-06-21T11:50:43Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-06-21T13:16:19Z"}, "message": "avoid translating roots with predicates that do not hold\n\nFixes #37725.", "tree": {"sha": "ae022b313f3238028da44a6a88a9dae6bef96217", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae022b313f3238028da44a6a88a9dae6bef96217"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ac976861d68c9e00bb844c0feadbe1ce882d5e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ac976861d68c9e00bb844c0feadbe1ce882d5e6", "html_url": "https://github.com/rust-lang/rust/commit/3ac976861d68c9e00bb844c0feadbe1ce882d5e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ac976861d68c9e00bb844c0feadbe1ce882d5e6/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1143eb26a2e405cdccbf6789c89d4581ad969868", "url": "https://api.github.com/repos/rust-lang/rust/commits/1143eb26a2e405cdccbf6789c89d4581ad969868", "html_url": "https://github.com/rust-lang/rust/commit/1143eb26a2e405cdccbf6789c89d4581ad969868"}], "stats": {"total": 53, "additions": 41, "deletions": 12}, "files": [{"sha": "d5d92cfcc3ecbd67bbc1d4b8915a091ad5d183df", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3ac976861d68c9e00bb844c0feadbe1ce882d5e6/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ac976861d68c9e00bb844c0feadbe1ce882d5e6/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=3ac976861d68c9e00bb844c0feadbe1ce882d5e6", "patch": "@@ -597,7 +597,7 @@ pub fn normalize_and_test_predicates<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     debug!(\"normalize_and_test_predicates(predicates={:?})\",\n            predicates);\n \n-    tcx.infer_ctxt().enter(|infcx| {\n+    let result = tcx.infer_ctxt().enter(|infcx| {\n         let param_env = ty::ParamEnv::empty(Reveal::All);\n         let mut selcx = SelectionContext::new(&infcx);\n         let mut fulfill_cx = FulfillmentContext::new();\n@@ -613,7 +613,10 @@ pub fn normalize_and_test_predicates<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         }\n \n         fulfill_cx.select_all_or_error(&infcx).is_ok()\n-    })\n+    });\n+    debug!(\"normalize_and_test_predicates(predicates={:?}) = {:?}\",\n+           predicates, result);\n+    result\n }\n \n /// Given a trait `trait_ref`, iterates the vtable entries"}, {"sha": "3536dcf16e5b6e55997d48409054fe7dd5071d08", "filename": "src/librustc_trans/collector.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3ac976861d68c9e00bb844c0feadbe1ce882d5e6/src%2Flibrustc_trans%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ac976861d68c9e00bb844c0feadbe1ce882d5e6/src%2Flibrustc_trans%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcollector.rs?ref=3ac976861d68c9e00bb844c0feadbe1ce882d5e6", "patch": "@@ -195,7 +195,7 @@ use rustc::hir::map as hir_map;\n use rustc::hir::def_id::DefId;\n use rustc::middle::lang_items::{ExchangeMallocFnLangItem};\n use rustc::traits;\n-use rustc::ty::subst::{Substs, Subst};\n+use rustc::ty::subst::Substs;\n use rustc::ty::{self, TypeFoldable, TyCtxt};\n use rustc::ty::adjustment::CustomCoerceUnsized;\n use rustc::mir::{self, Location};\n@@ -304,6 +304,7 @@ fn collect_roots<'a, 'tcx>(scx: &SharedCrateContext<'a, 'tcx>,\n         scx.tcx().hir.krate().visit_all_item_likes(&mut visitor);\n     }\n \n+    roots.retain(|root| root.is_instantiable(scx.tcx()));\n     roots\n }\n \n@@ -937,14 +938,9 @@ fn create_trans_items_for_default_impls<'a, 'tcx>(scx: &SharedCrateContext<'a, '\n                     let instance =\n                         monomorphize::resolve(scx, method.def_id, callee_substs);\n \n-                    let predicates = tcx.predicates_of(instance.def_id()).predicates\n-                        .subst(tcx, instance.substs);\n-                    if !traits::normalize_and_test_predicates(tcx, predicates) {\n-                        continue;\n-                    }\n-\n-                    if should_trans_locally(tcx, &instance) {\n-                        output.push(create_fn_trans_item(instance));\n+                    let trans_item = create_fn_trans_item(instance);\n+                    if trans_item.is_instantiable(tcx) && should_trans_locally(tcx, &instance) {\n+                        output.push(trans_item);\n                     }\n                 }\n             }"}, {"sha": "6e8b2e0a2a6bafa69eefee375c770b500e85686b", "filename": "src/librustc_trans/trans_item.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3ac976861d68c9e00bb844c0feadbe1ce882d5e6/src%2Flibrustc_trans%2Ftrans_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ac976861d68c9e00bb844c0feadbe1ce882d5e6/src%2Flibrustc_trans%2Ftrans_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans_item.rs?ref=3ac976861d68c9e00bb844c0feadbe1ce882d5e6", "patch": "@@ -25,8 +25,9 @@ use llvm;\n use monomorphize::Instance;\n use rustc::hir;\n use rustc::hir::def_id::DefId;\n+use rustc::traits;\n use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n-use rustc::ty::subst::Substs;\n+use rustc::ty::subst::{Subst, Substs};\n use syntax::ast::{self, NodeId};\n use syntax::attr;\n use syntax_pos::Span;\n@@ -250,6 +251,21 @@ impl<'a, 'tcx> TransItem<'tcx> {\n         }\n     }\n \n+    /// Returns whether this instance is instantiable - whether it has no unsatisfied\n+    /// predicates.\n+    pub fn is_instantiable(&self, tcx: TyCtxt<'a, 'tcx, 'tcx>) -> bool {\n+        debug!(\"is_instantiable({:?})\", self);\n+        let (def_id, substs) = match *self {\n+            TransItem::Fn(ref instance) => (instance.def_id(), instance.substs),\n+            TransItem::Static(node_id) => (tcx.hir.local_def_id(node_id), Substs::empty()),\n+            // global asm never has predicates\n+            TransItem::GlobalAsm(..) => return true\n+        };\n+\n+        let predicates = tcx.predicates_of(def_id).predicates.subst(tcx, substs);\n+        traits::normalize_and_test_predicates(tcx, predicates)\n+    }\n+\n     pub fn to_string(&self, tcx: TyCtxt<'a, 'tcx, 'tcx>) -> String {\n         let hir_map = &tcx.hir;\n "}, {"sha": "5ed1295c85c76c69021fc7f89277adad71a30ee6", "filename": "src/test/run-pass/issue-37725.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3ac976861d68c9e00bb844c0feadbe1ce882d5e6/src%2Ftest%2Frun-pass%2Fissue-37725.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ac976861d68c9e00bb844c0feadbe1ce882d5e6/src%2Ftest%2Frun-pass%2Fissue-37725.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-37725.rs?ref=3ac976861d68c9e00bb844c0feadbe1ce882d5e6", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo<'a>(s: &'a mut ()) where &'a mut (): Clone {\n+    s.clone();\n+}\n+fn main() {}"}]}