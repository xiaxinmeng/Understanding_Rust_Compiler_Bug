{"sha": "3d66aa054230ad788162ce49f0d334e900458cac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkNjZhYTA1NDIzMGFkNzg4MTYyY2U0OWYwZDMzNGU5MDA0NThjYWM=", "commit": {"author": {"name": "Fedor Sakharov", "email": "fedor.sakharov@gmail.com", "date": "2020-05-11T11:28:14Z"}, "committer": {"name": "Fedor Sakharov", "email": "fedor.sakharov@gmail.com", "date": "2020-05-11T11:28:14Z"}, "message": "New definition_visibility method", "tree": {"sha": "7828ed862f66f0e99f448e3112930ea602aef3c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7828ed862f66f0e99f448e3112930ea602aef3c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d66aa054230ad788162ce49f0d334e900458cac", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEOrvX5g4uaJk/ZAnkk9Q25ma/D+4FAl65Ns4ACgkQk9Q25ma/\nD+5Eegv/c3po2NfFioahqtW5bp3aXgy2NXiyXCblcZP3x+7Bd4CQ2tD/gkXTLmPZ\n90Vd6ddADR1C9njm9WgTQtIFqlz20dPxvpMMbstTjyi+HojjhAyTUuud8YSs2qqT\nD0g/vFCGyjd7rgpN2EBpaSZHnyCx24W9Npajgvm0IO0SZo6/zT1lv4ppLJlO3qbn\nGmbsXDm9f9QszYUs7p9mK/ch3jfg7GjFA3v3nF2ae9CGMqPHITaZ4rYPiphYZnub\nQVMbKg9mFyae3CO5Gaxog1QueHgz/pkuiLzNWHJUsYRc/4ux0juK/2TubdFD+IpD\nHtFTYpyHbpk5bZuCxRYxNfHdEDpAOtEB24yJsF+5Ruh3Eybv+F0UoYj2i++Ha186\nHYibfsn2BrVv3lbeh8wPe9eB7XMcyAtxnbvvTc4C2cghsQ/Ty40BbsXgoLr/gxOA\nch1mVaj27Aarl7Bu0IeHcqX2j3rzdjPZLz9gSZF5XhCTvMau8H7P8iQ2Sqa5rvVY\nYCJAKElq\n=RVEu\n-----END PGP SIGNATURE-----", "payload": "tree 7828ed862f66f0e99f448e3112930ea602aef3c7\nparent 753e1e679cf14b4ead73602976d43a8dc89a7052\nauthor Fedor Sakharov <fedor.sakharov@gmail.com> 1589196494 +0300\ncommitter Fedor Sakharov <fedor.sakharov@gmail.com> 1589196494 +0300\n\nNew definition_visibility method\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d66aa054230ad788162ce49f0d334e900458cac", "html_url": "https://github.com/rust-lang/rust/commit/3d66aa054230ad788162ce49f0d334e900458cac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d66aa054230ad788162ce49f0d334e900458cac/comments", "author": {"login": "montekki", "id": 56672, "node_id": "MDQ6VXNlcjU2Njcy", "avatar_url": "https://avatars.githubusercontent.com/u/56672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/montekki", "html_url": "https://github.com/montekki", "followers_url": "https://api.github.com/users/montekki/followers", "following_url": "https://api.github.com/users/montekki/following{/other_user}", "gists_url": "https://api.github.com/users/montekki/gists{/gist_id}", "starred_url": "https://api.github.com/users/montekki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/montekki/subscriptions", "organizations_url": "https://api.github.com/users/montekki/orgs", "repos_url": "https://api.github.com/users/montekki/repos", "events_url": "https://api.github.com/users/montekki/events{/privacy}", "received_events_url": "https://api.github.com/users/montekki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "montekki", "id": 56672, "node_id": "MDQ6VXNlcjU2Njcy", "avatar_url": "https://avatars.githubusercontent.com/u/56672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/montekki", "html_url": "https://github.com/montekki", "followers_url": "https://api.github.com/users/montekki/followers", "following_url": "https://api.github.com/users/montekki/following{/other_user}", "gists_url": "https://api.github.com/users/montekki/gists{/gist_id}", "starred_url": "https://api.github.com/users/montekki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/montekki/subscriptions", "organizations_url": "https://api.github.com/users/montekki/orgs", "repos_url": "https://api.github.com/users/montekki/repos", "events_url": "https://api.github.com/users/montekki/events{/privacy}", "received_events_url": "https://api.github.com/users/montekki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "753e1e679cf14b4ead73602976d43a8dc89a7052", "url": "https://api.github.com/repos/rust-lang/rust/commits/753e1e679cf14b4ead73602976d43a8dc89a7052", "html_url": "https://github.com/rust-lang/rust/commit/753e1e679cf14b4ead73602976d43a8dc89a7052"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "cb91bd965e4a8062e85a0162eb60204181a12771", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3d66aa054230ad788162ce49f0d334e900458cac/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d66aa054230ad788162ce49f0d334e900458cac/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=3d66aa054230ad788162ce49f0d334e900458cac", "patch": "@@ -148,6 +148,26 @@ impl ModuleDef {\n             ModuleDef::BuiltinType(_) => None,\n         }\n     }\n+\n+    pub fn definition_visibility(&self, db: &dyn HirDatabase) -> Option<Visibility> {\n+        let module = match self {\n+            ModuleDef::Module(it) => it.parent(db)?,\n+            ModuleDef::Function(it) => return Some(it.visibility(db)),\n+            ModuleDef::Adt(it) => it.module(db),\n+            ModuleDef::EnumVariant(it) => {\n+                let parent = it.parent_enum(db);\n+                let module = it.module(db);\n+                return module.visibility_of(db, &ModuleDef::Adt(Adt::Enum(parent)));\n+            }\n+            ModuleDef::Const(it) => return Some(it.visibility(db)),\n+            ModuleDef::Static(it) => it.module(db),\n+            ModuleDef::Trait(it) => it.module(db),\n+            ModuleDef::TypeAlias(it) => return Some(it.visibility(db)),\n+            ModuleDef::BuiltinType(_) => return None,\n+        };\n+\n+        module.visibility_of(db, self)\n+    }\n }\n \n pub use hir_def::{"}, {"sha": "60c11178eea63b3f1025596da654d6501938e496", "filename": "crates/ra_ide_db/src/defs.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3d66aa054230ad788162ce49f0d334e900458cac/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d66aa054230ad788162ce49f0d334e900458cac/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs?ref=3d66aa054230ad788162ce49f0d334e900458cac", "patch": "@@ -6,7 +6,7 @@\n // FIXME: this badly needs rename/rewrite (matklad, 2020-02-06).\n \n use hir::{\n-    Adt, Field, HasVisibility, ImplDef, Local, MacroDef, Module, ModuleDef, Name, PathResolution,\n+    Field, HasVisibility, ImplDef, Local, MacroDef, Module, ModuleDef, Name, PathResolution,\n     Semantics, TypeParam, Visibility,\n };\n use ra_prof::profile;\n@@ -42,21 +42,10 @@ impl Definition {\n     }\n \n     pub fn visibility(&self, db: &RootDatabase) -> Option<Visibility> {\n-        let module = self.module(db);\n-\n         match self {\n             Definition::Macro(_) => None,\n             Definition::Field(sf) => Some(sf.visibility(db)),\n-            Definition::ModuleDef(def) => match def {\n-                ModuleDef::EnumVariant(id) => {\n-                    let parent = id.parent_enum(db);\n-                    module?.visibility_of(db, &ModuleDef::Adt(Adt::Enum(parent)))\n-                }\n-                ModuleDef::Function(f) => Some(f.visibility(db)),\n-                ModuleDef::Const(c) => Some(c.visibility(db)),\n-                ModuleDef::TypeAlias(t) => Some(t.visibility(db)),\n-                _ => module?.visibility_of(db, def),\n-            },\n+            Definition::ModuleDef(def) => def.definition_visibility(db),\n             Definition::SelfType(_) => None,\n             Definition::Local(_) => None,\n             Definition::TypeParam(_) => None,"}]}