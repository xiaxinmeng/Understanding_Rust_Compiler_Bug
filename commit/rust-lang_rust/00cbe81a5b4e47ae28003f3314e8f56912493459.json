{"sha": "00cbe81a5b4e47ae28003f3314e8f56912493459", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwY2JlODFhNWI0ZTQ3YWUyODAwM2YzMzE0ZThmNTY5MTI0OTM0NTk=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-03-23T22:18:05Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-03-23T22:36:06Z"}, "message": "Complete only missing fields", "tree": {"sha": "148d2f21c774946b7e0c75d45347abc00f2bd623", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/148d2f21c774946b7e0c75d45347abc00f2bd623"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00cbe81a5b4e47ae28003f3314e8f56912493459", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00cbe81a5b4e47ae28003f3314e8f56912493459", "html_url": "https://github.com/rust-lang/rust/commit/00cbe81a5b4e47ae28003f3314e8f56912493459", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00cbe81a5b4e47ae28003f3314e8f56912493459/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eff1b3fe4d17dcecf0ec9a30c35d6c88715cb8ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/eff1b3fe4d17dcecf0ec9a30c35d6c88715cb8ea", "html_url": "https://github.com/rust-lang/rust/commit/eff1b3fe4d17dcecf0ec9a30c35d6c88715cb8ea"}], "stats": {"total": 61, "additions": 60, "deletions": 1}, "files": [{"sha": "a0bc3ee0a9e2f2d8dba707e200fa603b2fa715ca", "filename": "crates/ra_ide/src/completion/complete_record_literal.rs", "status": "modified", "additions": 60, "deletions": 1, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/00cbe81a5b4e47ae28003f3314e8f56912493459/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00cbe81a5b4e47ae28003f3314e8f56912493459/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs?ref=00cbe81a5b4e47ae28003f3314e8f56912493459", "patch": "@@ -11,8 +11,24 @@ pub(super) fn complete_record_literal(acc: &mut Completions, ctx: &CompletionCon\n         _ => return,\n     };\n \n+    let already_present_names: Vec<String> = ctx\n+        .record_lit_syntax\n+        .as_ref()\n+        .and_then(|record_literal| record_literal.record_field_list())\n+        .map(|field_list| field_list.fields())\n+        .map(|fields| {\n+            fields\n+                .into_iter()\n+                .filter_map(|field| field.name_ref())\n+                .map(|name_ref| name_ref.to_string())\n+                .collect()\n+        })\n+        .unwrap_or_default();\n+\n     for (field, field_ty) in ty.variant_fields(ctx.db, variant) {\n-        acc.add_field(ctx, field, &field_ty);\n+        if !already_present_names.contains(&field.name(ctx.db).to_string()) {\n+            acc.add_field(ctx, field, &field_ty);\n+        }\n     }\n }\n \n@@ -178,4 +194,47 @@ mod tests {\n         ]\n         \"###);\n     }\n+\n+    #[test]\n+    fn only_missing_fields_are_completed() {\n+        let completions = complete(\n+            r\"\n+            struct S {\n+                foo1: u32,\n+                foo2: u32,\n+                bar: u32,\n+                baz: u32,\n+            }\n+\n+            fn main() {\n+                let foo1 = 1;\n+                let s = S {\n+                    foo1,\n+                    foo2: 5,\n+                    <|>\n+                }\n+            }\n+            \",\n+        );\n+        assert_debug_snapshot!(completions, @r###\"\n+        [\n+            CompletionItem {\n+                label: \"bar\",\n+                source_range: [302; 302),\n+                delete: [302; 302),\n+                insert: \"bar\",\n+                kind: Field,\n+                detail: \"u32\",\n+            },\n+            CompletionItem {\n+                label: \"baz\",\n+                source_range: [302; 302),\n+                delete: [302; 302),\n+                insert: \"baz\",\n+                kind: Field,\n+                detail: \"u32\",\n+            },\n+        ]\n+        \"###);\n+    }\n }"}]}