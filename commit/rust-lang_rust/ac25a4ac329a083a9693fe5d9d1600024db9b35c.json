{"sha": "ac25a4ac329a083a9693fe5d9d1600024db9b35c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjMjVhNGFjMzI5YTA4M2E5NjkzZmU1ZDlkMTYwMDAyNGRiOWIzNWM=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-10-04T22:02:25Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-10-04T22:06:14Z"}, "message": "rustc_trans: do not set NoCapture for anonymous lifetime &T arguments.", "tree": {"sha": "45e099cfc20e8a71118eaef4ebb9aef004bbed43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45e099cfc20e8a71118eaef4ebb9aef004bbed43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac25a4ac329a083a9693fe5d9d1600024db9b35c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac25a4ac329a083a9693fe5d9d1600024db9b35c", "html_url": "https://github.com/rust-lang/rust/commit/ac25a4ac329a083a9693fe5d9d1600024db9b35c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac25a4ac329a083a9693fe5d9d1600024db9b35c/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "417ffc98dfc770c27f7f2d7430f0edf975576591", "url": "https://api.github.com/repos/rust-lang/rust/commits/417ffc98dfc770c27f7f2d7430f0edf975576591", "html_url": "https://github.com/rust-lang/rust/commit/417ffc98dfc770c27f7f2d7430f0edf975576591"}], "stats": {"total": 11, "additions": 1, "deletions": 10}, "files": [{"sha": "1f72ae849e6c6ebf8758f8b0799cc44b52c57c34", "filename": "src/librustc_trans/abi.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ac25a4ac329a083a9693fe5d9d1600024db9b35c/src%2Flibrustc_trans%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac25a4ac329a083a9693fe5d9d1600024db9b35c/src%2Flibrustc_trans%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fabi.rs?ref=ac25a4ac329a083a9693fe5d9d1600024db9b35c", "patch": "@@ -750,9 +750,7 @@ impl<'a, 'tcx> FnType<'tcx> {\n                 Some(ty.boxed_ty())\n             }\n \n-            ty::TyRef(b, mt) => {\n-                use rustc::ty::{BrAnon, ReLateBound};\n-\n+            ty::TyRef(_, mt) => {\n                 // `&mut` pointer parameters never alias other parameters, or mutable global data\n                 //\n                 // `&T` where `T` contains no `UnsafeCell<U>` is immutable, and can be marked as\n@@ -768,13 +766,6 @@ impl<'a, 'tcx> FnType<'tcx> {\n                     arg.attrs.set(ArgAttribute::ReadOnly);\n                 }\n \n-                // When a reference in an argument has no named lifetime, it's\n-                // impossible for that reference to escape this function\n-                // (returned or stored beyond the call by a closure).\n-                if let ReLateBound(_, BrAnon(_)) = *b {\n-                    arg.attrs.set(ArgAttribute::NoCapture);\n-                }\n-\n                 Some(mt.ty)\n             }\n             _ => None"}]}