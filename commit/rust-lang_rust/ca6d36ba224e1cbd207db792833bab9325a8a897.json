{"sha": "ca6d36ba224e1cbd207db792833bab9325a8a897", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNmQzNmJhMjI0ZTFjYmQyMDdkYjc5MjgzM2JhYjkzMjVhOGE4OTc=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-09-23T03:26:47Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-09-23T03:26:47Z"}, "message": "Merge branch 'master' into unneeded_wildcard_pattern", "tree": {"sha": "54735a0255153c7f8dfa4c8ad4e42072d45ad14b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54735a0255153c7f8dfa4c8ad4e42072d45ad14b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca6d36ba224e1cbd207db792833bab9325a8a897", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca6d36ba224e1cbd207db792833bab9325a8a897", "html_url": "https://github.com/rust-lang/rust/commit/ca6d36ba224e1cbd207db792833bab9325a8a897", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca6d36ba224e1cbd207db792833bab9325a8a897/comments", "author": null, "committer": null, "parents": [{"sha": "be4e41562a7f1a14783fecff8dd904fd28d1f82f", "url": "https://api.github.com/repos/rust-lang/rust/commits/be4e41562a7f1a14783fecff8dd904fd28d1f82f", "html_url": "https://github.com/rust-lang/rust/commit/be4e41562a7f1a14783fecff8dd904fd28d1f82f"}, {"sha": "157edad6205fdd6a4f5932fba2675c6190746358", "url": "https://api.github.com/repos/rust-lang/rust/commits/157edad6205fdd6a4f5932fba2675c6190746358", "html_url": "https://github.com/rust-lang/rust/commit/157edad6205fdd6a4f5932fba2675c6190746358"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "cfc70de8f21dd35426b8af88f941939fdf8cf2be", "filename": "clippy_lints/src/cargo_common_metadata.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ca6d36ba224e1cbd207db792833bab9325a8a897/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca6d36ba224e1cbd207db792833bab9325a8a897/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs?ref=ca6d36ba224e1cbd207db792833bab9325a8a897", "patch": "@@ -1,5 +1,7 @@\n //! lint on missing cargo common metadata\n \n+use std::path::PathBuf;\n+\n use crate::utils::span_lint;\n use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_lint_pass, declare_tool_lint};\n@@ -47,6 +49,10 @@ fn is_empty_str(value: &Option<String>) -> bool {\n     value.as_ref().map_or(true, String::is_empty)\n }\n \n+fn is_empty_path(value: &Option<PathBuf>) -> bool {\n+    value.as_ref().and_then(|x| x.to_str()).map_or(true, str::is_empty)\n+}\n+\n fn is_empty_vec(value: &[String]) -> bool {\n     // This works because empty iterators return true\n     value.iter().all(std::string::String::is_empty)\n@@ -72,8 +78,8 @@ impl EarlyLintPass for CargoCommonMetadata {\n                 missing_warning(cx, &package, \"package.description\");\n             }\n \n-            if is_empty_str(&package.license) {\n-                missing_warning(cx, &package, \"package.license\");\n+            if is_empty_str(&package.license) && is_empty_path(&package.license_file) {\n+                missing_warning(cx, &package, \"either package.license or package.license_file\");\n             }\n \n             if is_empty_str(&package.repository) {"}, {"sha": "c19ea6114f85b7ccdb77bef0e57b60933129d01c", "filename": "tests/ui/builtin-type-shadow.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca6d36ba224e1cbd207db792833bab9325a8a897/tests%2Fui%2Fbuiltin-type-shadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca6d36ba224e1cbd207db792833bab9325a8a897/tests%2Fui%2Fbuiltin-type-shadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbuiltin-type-shadow.stderr?ref=ca6d36ba224e1cbd207db792833bab9325a8a897", "patch": "@@ -16,6 +16,8 @@ LL |     42\n    |\n    = note: expected type `u32`\n               found type `{integer}`\n+   = help: type parameters must be constrained to match other types\n+   = note: for more information, visit https://doc.rust-lang.org/book/ch10-02-traits.html#traits-as-parameters\n \n error: aborting due to 2 previous errors\n "}]}