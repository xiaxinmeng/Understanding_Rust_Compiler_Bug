{"sha": "ac40d5323da30211c8dd516681c6e518777135e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjNDBkNTMyM2RhMzAyMTFjOGRkNTE2NjgxYzZlNTE4Nzc3MTM1ZTk=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-07-25T09:46:48Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-07-25T09:57:52Z"}, "message": "libstd: Fix errors when rtdebug! is not a noop.", "tree": {"sha": "c300f730914050250073ea58e9e217e50fb9a2c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c300f730914050250073ea58e9e217e50fb9a2c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac40d5323da30211c8dd516681c6e518777135e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac40d5323da30211c8dd516681c6e518777135e9", "html_url": "https://github.com/rust-lang/rust/commit/ac40d5323da30211c8dd516681c6e518777135e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac40d5323da30211c8dd516681c6e518777135e9/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61e741cf714020107c6cda12793351fa5b8c7782", "url": "https://api.github.com/repos/rust-lang/rust/commits/61e741cf714020107c6cda12793351fa5b8c7782", "html_url": "https://github.com/rust-lang/rust/commit/61e741cf714020107c6cda12793351fa5b8c7782"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "feae8b5ffd8a38e08d90afd43a6b02347c6bbbf1", "filename": "src/libstd/rt/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac40d5323da30211c8dd516681c6e518777135e9/src%2Flibstd%2Frt%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac40d5323da30211c8dd516681c6e518777135e9/src%2Flibstd%2Frt%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Ftest.rs?ref=ac40d5323da30211c8dd516681c6e518777135e9", "patch": "@@ -50,7 +50,7 @@ pub fn run_in_newsched_task(f: ~fn()) {\n         let on_exit: ~fn(bool) = |exit_status| rtassert!(exit_status);\n         let mut task = ~Task::new_root(&mut sched.stack_pool,\n                                        f.take());\n-        rtdebug!(\"newsched_task: %x\", to_uint(task));\n+        rtdebug!(\"newsched_task: %x\", ::borrow::to_uint(task));\n         task.death.on_exit = Some(on_exit);\n         sched.enqueue_task(task);\n         sched.run();\n@@ -145,7 +145,7 @@ pub fn spawntask(f: ~fn()) {\n         }\n     };\n \n-    rtdebug!(\"new task pointer: %x\", to_uint(task));\n+    rtdebug!(\"new task pointer: %x\", ::borrow::to_uint(task));\n \n     let sched = Local::take::<Scheduler>();\n     rtdebug!(\"spawntask scheduling the new task\");"}, {"sha": "638d510614a33264957792df8a36a1f70195f9de", "filename": "src/libstd/rt/uv/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac40d5323da30211c8dd516681c6e518777135e9/src%2Flibstd%2Frt%2Fuv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac40d5323da30211c8dd516681c6e518777135e9/src%2Flibstd%2Frt%2Fuv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Fmod.rs?ref=ac40d5323da30211c8dd516681c6e518777135e9", "patch": "@@ -288,7 +288,7 @@ pub fn status_to_maybe_uv_error<T, U: Watcher + NativeHandle<*T>>(handle: U,\n         None\n     } else {\n         unsafe {\n-            rtdebug!(\"handle: %x\", handle as uint);\n+            rtdebug!(\"handle: %x\", handle.native_handle() as uint);\n             let loop_ = uvll::get_loop_for_uv_handle(handle.native_handle());\n             rtdebug!(\"loop: %x\", loop_ as uint);\n             let err = uvll::last_error(loop_);"}, {"sha": "7a5e1116c3294f4458a1639ecaf0305d2a10fb8a", "filename": "src/libstd/unstable/lang.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac40d5323da30211c8dd516681c6e518777135e9/src%2Flibstd%2Funstable%2Flang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac40d5323da30211c8dd516681c6e518777135e9/src%2Flibstd%2Funstable%2Flang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Flang.rs?ref=ac40d5323da30211c8dd516681c6e518777135e9", "patch": "@@ -71,8 +71,8 @@ pub unsafe fn local_malloc(td: *c_char, size: uintptr_t) -> *c_char {\n             let mut alloc = ::ptr::null();\n             do Local::borrow::<Task,()> |task| {\n                 rtdebug!(\"task pointer: %x, heap pointer: %x\",\n-                         to_uint(task),\n-                         to_uint(&task.heap));\n+                         ::borrow::to_uint(task),\n+                         ::borrow::to_uint(&task.heap));\n                 alloc = task.heap.alloc(td as *c_void, size as uint) as *c_char;\n             }\n             return alloc;"}]}