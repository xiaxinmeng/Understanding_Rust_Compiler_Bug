{"sha": "32c187a879eae148b86f4c6650c0479f5e9662a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyYzE4N2E4NzllYWUxNDhiODZmNGM2NjUwYzA0NzlmNWU5NjYyYTM=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2014-12-18T14:30:08Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2014-12-29T15:02:41Z"}, "message": "rustup: add caching of old nightlies", "tree": {"sha": "3d80aaf313d4ba0a5bd48129c1b7639d7937d83f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d80aaf313d4ba0a5bd48129c1b7639d7937d83f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32c187a879eae148b86f4c6650c0479f5e9662a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32c187a879eae148b86f4c6650c0479f5e9662a3", "html_url": "https://github.com/rust-lang/rust/commit/32c187a879eae148b86f4c6650c0479f5e9662a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32c187a879eae148b86f4c6650c0479f5e9662a3/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b59d4e7295258d5e0d2f2c1a41bdad5c547a170e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b59d4e7295258d5e0d2f2c1a41bdad5c547a170e", "html_url": "https://github.com/rust-lang/rust/commit/b59d4e7295258d5e0d2f2c1a41bdad5c547a170e"}], "stats": {"total": 49, "additions": 40, "deletions": 9}, "files": [{"sha": "ee62cfe8cee935181742e5331f4ee69585914955", "filename": "src/etc/rustup.sh", "status": "modified", "additions": 40, "deletions": 9, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/32c187a879eae148b86f4c6650c0479f5e9662a3/src%2Fetc%2Frustup.sh", "raw_url": "https://github.com/rust-lang/rust/raw/32c187a879eae148b86f4c6650c0479f5e9662a3/src%2Fetc%2Frustup.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Frustup.sh?ref=32c187a879eae148b86f4c6650c0479f5e9662a3", "patch": "@@ -230,7 +230,7 @@ validate_opt() {\n }\n \n create_tmp_dir() {\n-    local TMP_DIR=./rustup-tmp-install\n+    local TMP_DIR=`pwd`/rustup-tmp-install\n \n     rm -Rf \"${TMP_DIR}\"\n     need_ok \"failed to remove temporary installation directory\"\n@@ -271,6 +271,8 @@ VAL_OPTIONS=\"\"\n flag uninstall \"only uninstall from the installation prefix\"\n valopt prefix \"\" \"set installation prefix\"\n opt cargo 1 \"install cargo with rust\"\n+valopt date \"\" \"use the YYYY-MM-DD nightly instead of the current nightly\"\n+flag save \"save the downloaded nightlies to ~/.rustup\"\n \n if [ $HELP -eq 1 ]\n then\n@@ -418,6 +420,21 @@ CFG_TMP_DIR=$(mktemp -d 2>/dev/null \\\n            || mktemp -d -t 'rustup-tmp-install' 2>/dev/null \\\n            || create_tmp_dir)\n \n+# If we're saving nightlies and we didn't specify which one, grab todays.\n+# Otherwise we'll use the latest version.\n+if [ -n \"${CFG_SAVE}\" -a -z \"${CFG_DATE}\" ];\n+then\n+    CFG_DATE=`date \"+%Y-%m-%d\"`\n+fi\n+\n+# If we're saving our nightlies, put them in $HOME/.rustup.\n+if [ -n \"${CFG_SAVE}\" ]\n+then\n+    CFG_DOWNLOAD_DIR=\"${HOME}/.rustup/${CFG_DATE}\"\n+else\n+    CFG_DOWNLOAD_DIR=\"${CFG_TMP_DIR}\"\n+fi\n+\n RUST_URL=\"https://static.rust-lang.org/dist\"\n RUST_PACKAGE_NAME=rust-nightly\n RUST_PACKAGE_NAME_AND_TRIPLE=\"${RUST_PACKAGE_NAME}-${HOST_TRIPLE}\"\n@@ -432,6 +449,13 @@ CARGO_TARBALL_NAME=\"${CARGO_PACKAGE_NAME_AND_TRIPLE}.tar.gz\"\n CARGO_LOCAL_INSTALL_DIR=\"${CFG_TMP_DIR}/${CARGO_PACKAGE_NAME_AND_TRIPLE}\"\n CARGO_LOCAL_INSTALL_SCRIPT=\"${CARGO_LOCAL_INSTALL_DIR}/install.sh\"\n \n+# add a date suffix if we want a particular nighly.\n+if [ -n \"${CFG_DATE}\" ];\n+then\n+    RUST_URL=\"${RUST_URL}/${CFG_DATE}\"\n+    CARGO_URL=\"${CARGO_URL}/${CFG_DATE}\"\n+fi\n+\n verify_hash() {\n     remote_sha256=\"$1\"\n     local_file=\"$2\"\n@@ -460,19 +484,25 @@ verify_hash() {\n     fi\n }\n \n-# Fetch the package.\n+# Fetch the package. Optionally caches the tarballs.\n download_package() {\n     remote_tarball=\"$1\"\n     local_tarball=\"$2\"\n     remote_sha256=\"${remote_tarball}.sha256\"\n \n-    msg \"Downloading ${remote_tarball} to ${local_tarball}\"\n+    # Check if we've already downloaded this file.\n+    if [ ! -e \"${local_tarball}\" ]; then\n+        msg \"Downloading ${remote_tarball} to ${local_tarball}\"\n \n-    \"${CFG_CURL}\" -f -o \"${local_tarball}\" \"${remote_tarball}\"\n-    if [ $? -ne 0 ]\n-    then\n-        rm -Rf \"${CFG_TMP_DIR}\"\n-        err \"failed to download installer\"\n+        mkdir -p \"${CFG_DOWNLOAD_DIR}\"\n+        need_ok \"failed to create create download directory\"\n+\n+        \"${CFG_CURL}\" -f -o \"${local_tarball} \"${remote_tarball}\"\n+        if [ $? -ne 0 ]\n+        then\n+            rm -Rf \"${CFG_TMP_DIR}\"\n+            err \"failed to download installer\"\n+        fi\n     fi\n \n     verify_hash \"${remote_sha256}\" \"${local_tarball}\"\n@@ -482,9 +512,10 @@ download_package() {\n install_package() {\n     tarball_name=\"$1\"\n     install_script=\"$2\"\n+    local_tarball=\"${CFG_DOWNLOAD_DIR}/${tarball_name}\"\n \n     msg \"Extracting ${tarball_name}\"\n-    (cd \"${CFG_TMP_DIR}\" && \"${CFG_TAR}\" -xzf \"${tarball_name}\")\n+    (cd \"${CFG_TMP_DIR}\" && \"${CFG_TAR}\" -xvf \"${local_tarball}\")\n     if [ $? -ne 0 ]; then\n         rm -Rf \"${CFG_TMP_DIR}\"\n         err \"failed to unpack installer\""}]}