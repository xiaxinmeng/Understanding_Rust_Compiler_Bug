{"sha": "ccc5e0732a95861de755cf14bec05d873bfa7481", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYzVlMDczMmE5NTg2MWRlNzU1Y2YxNGJlYzA1ZDg3M2JmYTc0ODE=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-08T12:16:26Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-17T19:51:53Z"}, "message": "mir: Ignore noop casts (e.g. when `as` used for coercion).", "tree": {"sha": "6531b187aae7c6a92f4da1d03aa85b7d0b604fc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6531b187aae7c6a92f4da1d03aa85b7d0b604fc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccc5e0732a95861de755cf14bec05d873bfa7481", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccc5e0732a95861de755cf14bec05d873bfa7481", "html_url": "https://github.com/rust-lang/rust/commit/ccc5e0732a95861de755cf14bec05d873bfa7481", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccc5e0732a95861de755cf14bec05d873bfa7481/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1de6a9682f16a893cd5651db28e26a1cd92fd459", "url": "https://api.github.com/repos/rust-lang/rust/commits/1de6a9682f16a893cd5651db28e26a1cd92fd459", "html_url": "https://github.com/rust-lang/rust/commit/1de6a9682f16a893cd5651db28e26a1cd92fd459"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "db94035e5ce5a7d84a5474c2c029e2f587d734ca", "filename": "src/librustc_mir/build/expr/as_rvalue.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ccc5e0732a95861de755cf14bec05d873bfa7481/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccc5e0732a95861de755cf14bec05d873bfa7481/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=ccc5e0732a95861de755cf14bec05d873bfa7481", "patch": "@@ -73,8 +73,13 @@ impl<'a,'tcx> Builder<'a,'tcx> {\n                 })\n             }\n             ExprKind::Cast { source } => {\n-                let source = unpack!(block = this.as_operand(block, source));\n-                block.and(Rvalue::Cast(CastKind::Misc, source, expr.ty))\n+                let source = this.hir.mirror(source);\n+                if source.ty == expr.ty {\n+                    this.expr_as_rvalue(block, source)\n+                } else {\n+                    let source = unpack!(block = this.as_operand(block, source));\n+                    block.and(Rvalue::Cast(CastKind::Misc, source, expr.ty))\n+                }\n             }\n             ExprKind::ReifyFnPointer { source } => {\n                 let source = unpack!(block = this.as_operand(block, source));"}]}