{"sha": "01b24045faebc1d0d9f42f355e536df6fc693e49", "node_id": "C_kwDOAAsO6NoAKDAxYjI0MDQ1ZmFlYmMxZDBkOWY0MmYzNTVlNTM2ZGY2ZmM2OTNlNDk", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2021-11-19T22:57:33Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2021-11-21T01:26:18Z"}, "message": "Fix for issue 91058", "tree": {"sha": "19fdae58904369e1f3e89d5ffbfd752165370c39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19fdae58904369e1f3e89d5ffbfd752165370c39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01b24045faebc1d0d9f42f355e536df6fc693e49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01b24045faebc1d0d9f42f355e536df6fc693e49", "html_url": "https://github.com/rust-lang/rust/commit/01b24045faebc1d0d9f42f355e536df6fc693e49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01b24045faebc1d0d9f42f355e536df6fc693e49/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344", "html_url": "https://github.com/rust-lang/rust/commit/3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344"}], "stats": {"total": 62, "additions": 38, "deletions": 24}, "files": [{"sha": "e32906b75338e8a574aec3a7a16c0124543c9405", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/01b24045faebc1d0d9f42f355e536df6fc693e49/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b24045faebc1d0d9f42f355e536df6fc693e49/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=01b24045faebc1d0d9f42f355e536df6fc693e49", "patch": "@@ -1695,11 +1695,23 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n             }\n             _ => exp_found,\n         };\n-        debug!(\"exp_found {:?} terr {:?}\", exp_found, terr);\n+        debug!(\"exp_found {:?} terr {:?} cause.code {:?}\", exp_found, terr, cause.code);\n         if let Some(exp_found) = exp_found {\n-            self.suggest_as_ref_where_appropriate(span, &exp_found, diag);\n-            self.suggest_accessing_field_where_appropriate(cause, &exp_found, diag);\n-            self.suggest_await_on_expect_found(cause, span, &exp_found, diag);\n+            let should_suggest_fixes = if let ObligationCauseCode::Pattern { root_ty, .. } =\n+                &cause.code\n+            {\n+                // Skip if the root_ty of the pattern is not the same as the expected_ty.\n+                // If these types aren't equal then we've probably peeled off a layer of arrays.\n+                same_type_modulo_infer(self.resolve_vars_if_possible(*root_ty), exp_found.expected)\n+            } else {\n+                true\n+            };\n+\n+            if should_suggest_fixes {\n+                self.suggest_as_ref_where_appropriate(span, &exp_found, diag);\n+                self.suggest_accessing_field_where_appropriate(cause, &exp_found, diag);\n+                self.suggest_await_on_expect_found(cause, span, &exp_found, diag);\n+            }\n         }\n \n         // In some (most?) cases cause.body_id points to actual body, but in some cases"}, {"sha": "a6f8563a047851e8a0ea337d02ca329895a881d5", "filename": "src/test/ui/half-open-range-patterns/exclusive_range_pattern_syntax_collision.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01b24045faebc1d0d9f42f355e536df6fc693e49/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/01b24045faebc1d0d9f42f355e536df6fc693e49/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision.stderr?ref=01b24045faebc1d0d9f42f355e536df6fc693e49", "patch": "@@ -8,10 +8,6 @@ LL |         [_, 99.., _] => {},\n    |\n    = note: expected struct `std::ops::Range<{integer}>`\n                 found type `{integer}`\n-help: you might have meant to use field `start` whose type is `{integer}`\n-   |\n-LL |     match [5..4, 99..105, 43..44].start {\n-   |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "4e0102c930da82b7ab86b7bac25a73033f2fe8f6", "filename": "src/test/ui/half-open-range-patterns/exclusive_range_pattern_syntax_collision2.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01b24045faebc1d0d9f42f355e536df6fc693e49/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/01b24045faebc1d0d9f42f355e536df6fc693e49/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision2.stderr?ref=01b24045faebc1d0d9f42f355e536df6fc693e49", "patch": "@@ -14,10 +14,6 @@ LL |         [_, 99..] => {},\n    |\n    = note: expected struct `std::ops::Range<{integer}>`\n                 found type `{integer}`\n-help: you might have meant to use field `start` whose type is `{integer}`\n-   |\n-LL |     match [5..4, 99..105, 43..44].start {\n-   |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 2 previous errors\n "}, {"sha": "665eef2fcb96c80ea7aff1c1f8ae0dbb3e0b5eb6", "filename": "src/test/ui/half-open-range-patterns/exclusive_range_pattern_syntax_collision3.stderr", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/01b24045faebc1d0d9f42f355e536df6fc693e49/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/01b24045faebc1d0d9f42f355e536df6fc693e49/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision3.stderr?ref=01b24045faebc1d0d9f42f355e536df6fc693e49", "patch": "@@ -8,10 +8,6 @@ LL |         [..9, 99..100, _] => {},\n    |\n    = note: expected struct `std::ops::Range<{integer}>`\n                 found type `{integer}`\n-help: you might have meant to use field `start` whose type is `{integer}`\n-   |\n-LL |     match [5..4, 99..105, 43..44].start {\n-   |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0308]: mismatched types\n   --> $DIR/exclusive_range_pattern_syntax_collision3.rs:6:15\n@@ -25,10 +21,6 @@ LL |         [..9, 99..100, _] => {},\n    |\n    = note: expected struct `std::ops::Range<{integer}>`\n                 found type `{integer}`\n-help: you might have meant to use field `start` whose type is `{integer}`\n-   |\n-LL |     match [5..4, 99..105, 43..44].start {\n-   |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0308]: mismatched types\n   --> $DIR/exclusive_range_pattern_syntax_collision3.rs:6:19\n@@ -42,10 +34,6 @@ LL |         [..9, 99..100, _] => {},\n    |\n    = note: expected struct `std::ops::Range<{integer}>`\n                 found type `{integer}`\n-help: you might have meant to use field `start` whose type is `{integer}`\n-   |\n-LL |     match [5..4, 99..105, 43..44].start {\n-   |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 3 previous errors\n "}, {"sha": "4845937d5440177962982d4131d3ef4e89a752c1", "filename": "src/test/ui/match/issue-91058.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/01b24045faebc1d0d9f42f355e536df6fc693e49/src%2Ftest%2Fui%2Fmatch%2Fissue-91058.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b24045faebc1d0d9f42f355e536df6fc693e49/src%2Ftest%2Fui%2Fmatch%2Fissue-91058.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fissue-91058.rs?ref=01b24045faebc1d0d9f42f355e536df6fc693e49", "patch": "@@ -0,0 +1,11 @@\n+struct S(());\n+\n+fn main() {\n+    let array = [S(())];\n+\n+    match array {\n+        [()] => {}\n+        //~^ ERROR mismatched types [E0308]\n+        _ => {}\n+    }\n+}"}, {"sha": "ec1d7e21fa53caa66ac159618bcb8a93ef214d96", "filename": "src/test/ui/match/issue-91058.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/01b24045faebc1d0d9f42f355e536df6fc693e49/src%2Ftest%2Fui%2Fmatch%2Fissue-91058.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/01b24045faebc1d0d9f42f355e536df6fc693e49/src%2Ftest%2Fui%2Fmatch%2Fissue-91058.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fissue-91058.stderr?ref=01b24045faebc1d0d9f42f355e536df6fc693e49", "patch": "@@ -0,0 +1,11 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-91058.rs:7:10\n+   |\n+LL |     match array {\n+   |           ----- this expression has type `[S; 1]`\n+LL |         [()] => {}\n+   |          ^^ expected struct `S`, found `()`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}