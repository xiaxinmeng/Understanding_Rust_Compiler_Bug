{"sha": "1ffa331c728d1e850922588499111232c56d86c7", "node_id": "C_kwDOAAsO6NoAKDFmZmEzMzFjNzI4ZDFlODUwOTIyNTg4NDk5MTExMjMyYzU2ZDg2Yzc", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-04-16T05:03:00Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-04-16T05:03:17Z"}, "message": "Don't `use rustc_hir as ast`(!)\n\nIt makes for confusing code.\n\nThis was introduced in a large commit in #67886 that rearranged a lot of\n`use` statements. I suspect it was an accident.", "tree": {"sha": "924ce16c3d6673dca9c0d50e0d5b2ae384689b52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/924ce16c3d6673dca9c0d50e0d5b2ae384689b52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ffa331c728d1e850922588499111232c56d86c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ffa331c728d1e850922588499111232c56d86c7", "html_url": "https://github.com/rust-lang/rust/commit/1ffa331c728d1e850922588499111232c56d86c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ffa331c728d1e850922588499111232c56d86c7/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d558796beb400cceb2a2b8950f35aa518a58a586", "url": "https://api.github.com/repos/rust-lang/rust/commits/d558796beb400cceb2a2b8950f35aa518a58a586", "html_url": "https://github.com/rust-lang/rust/commit/d558796beb400cceb2a2b8950f35aa518a58a586"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "c6d10f4741affc03174b94c960c800f6f6894017", "filename": "compiler/rustc_middle/src/ty/relate.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1ffa331c728d1e850922588499111232c56d86c7/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ffa331c728d1e850922588499111232c56d86c7/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs?ref=1ffa331c728d1e850922588499111232c56d86c7", "patch": "@@ -7,7 +7,7 @@\n use crate::ty::error::{ExpectedFound, TypeError};\n use crate::ty::{self, Expr, ImplSubject, Term, TermKind, Ty, TyCtxt, TypeFoldable};\n use crate::ty::{GenericArg, GenericArgKind, SubstsRef};\n-use rustc_hir as ast;\n+use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_target::spec::abi;\n use std::iter;\n@@ -123,8 +123,8 @@ pub fn relate_type_and_mut<'tcx, R: TypeRelation<'tcx>>(\n     } else {\n         let mutbl = a.mutbl;\n         let (variance, info) = match mutbl {\n-            ast::Mutability::Not => (ty::Covariant, ty::VarianceDiagInfo::None),\n-            ast::Mutability::Mut => {\n+            hir::Mutability::Not => (ty::Covariant, ty::VarianceDiagInfo::None),\n+            hir::Mutability::Mut => {\n                 (ty::Invariant, ty::VarianceDiagInfo::Invariant { ty: base_ty, param_index: 0 })\n             }\n         };\n@@ -239,12 +239,12 @@ impl<'tcx> Relate<'tcx> for ty::BoundConstness {\n     }\n }\n \n-impl<'tcx> Relate<'tcx> for ast::Unsafety {\n+impl<'tcx> Relate<'tcx> for hir::Unsafety {\n     fn relate<R: TypeRelation<'tcx>>(\n         relation: &mut R,\n-        a: ast::Unsafety,\n-        b: ast::Unsafety,\n-    ) -> RelateResult<'tcx, ast::Unsafety> {\n+        a: hir::Unsafety,\n+        b: hir::Unsafety,\n+    ) -> RelateResult<'tcx, hir::Unsafety> {\n         if a != b {\n             Err(TypeError::UnsafetyMismatch(expected_found(relation, a, b)))\n         } else {"}]}