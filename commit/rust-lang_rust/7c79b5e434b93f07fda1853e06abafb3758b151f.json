{"sha": "7c79b5e434b93f07fda1853e06abafb3758b151f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNzliNWU0MzRiOTNmMDdmZGExODUzZTA2YWJhZmIzNzU4YjE1MWY=", "commit": {"author": {"name": "Ted Horst", "email": "ted.horst@earthlink.net", "date": "2012-12-27T19:42:50Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-02T23:35:32Z"}, "message": "really update mandelbrot to pipes", "tree": {"sha": "49f6ce281bd08578453bbef938a194c877e5c1f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49f6ce281bd08578453bbef938a194c877e5c1f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c79b5e434b93f07fda1853e06abafb3758b151f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c79b5e434b93f07fda1853e06abafb3758b151f", "html_url": "https://github.com/rust-lang/rust/commit/7c79b5e434b93f07fda1853e06abafb3758b151f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c79b5e434b93f07fda1853e06abafb3758b151f/comments", "author": {"login": "tedhorst", "id": 113629, "node_id": "MDQ6VXNlcjExMzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/113629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tedhorst", "html_url": "https://github.com/tedhorst", "followers_url": "https://api.github.com/users/tedhorst/followers", "following_url": "https://api.github.com/users/tedhorst/following{/other_user}", "gists_url": "https://api.github.com/users/tedhorst/gists{/gist_id}", "starred_url": "https://api.github.com/users/tedhorst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tedhorst/subscriptions", "organizations_url": "https://api.github.com/users/tedhorst/orgs", "repos_url": "https://api.github.com/users/tedhorst/repos", "events_url": "https://api.github.com/users/tedhorst/events{/privacy}", "received_events_url": "https://api.github.com/users/tedhorst/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1698890059306fe027d36c3f8f5270c9bcaba96", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1698890059306fe027d36c3f8f5270c9bcaba96", "html_url": "https://github.com/rust-lang/rust/commit/b1698890059306fe027d36c3f8f5270c9bcaba96"}], "stats": {"total": 23, "additions": 9, "deletions": 14}, "files": [{"sha": "7fe572b64f8a8d34bb77a37fe35864380fafa779", "filename": "src/test/bench/shootout-mandelbrot.rs", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/7c79b5e434b93f07fda1853e06abafb3758b151f/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c79b5e434b93f07fda1853e06abafb3758b151f/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs?ref=7c79b5e434b93f07fda1853e06abafb3758b151f", "patch": "@@ -83,7 +83,7 @@ fn fillbyte(x: cmplx, incr: f64) -> u8 {\n     rv\n }\n \n-fn chanmb(i: uint, size: uint, ch: oldcomm::Chan<Line>) -> ()\n+fn chanmb(i: uint, size: uint) -> Line\n {\n     let mut crv = ~[];\n     let incr = 2f64/(size as f64);\n@@ -93,7 +93,7 @@ fn chanmb(i: uint, size: uint, ch: oldcomm::Chan<Line>) -> ()\n         let x = cmplx {re: xincr*(j as f64) - 1.5f64, im: y};\n         crv.push(fillbyte(x, incr));\n     };\n-    oldcomm::send(ch, Line {i:i, b: move crv});\n+    Line {i:i, b:crv}\n }\n \n type devnull = {dn: int};\n@@ -106,11 +106,8 @@ impl devnull: io::Writer {\n     fn get_type(&self) -> io::WriterType { io::File }\n }\n \n-fn writer(path: ~str, writech: oldcomm::Chan<oldcomm::Chan<Line>>, size: uint)\n+fn writer(path: ~str, pport: pipes::Port<Line>, size: uint)\n {\n-    let p: oldcomm::Port<Line> = oldcomm::Port();\n-    let ch = oldcomm::Chan(&p);\n-    oldcomm::send(writech, ch);\n     let cout: io::Writer = match path {\n         ~\"\" => {\n             {dn: 0} as io::Writer\n@@ -130,7 +127,7 @@ fn writer(path: ~str, writech: oldcomm::Chan<oldcomm::Chan<Line>>, size: uint)\n     let mut done = 0_u;\n     let mut i = 0_u;\n     while i < size {\n-        let aline = oldcomm::recv(p);\n+        let aline = pport.recv();\n         if aline.i == done {\n             debug!(\"W %u\", aline.i);\n             cout.write(aline.b);\n@@ -171,13 +168,11 @@ fn main() {\n     let size = if vec::len(args) < 2_u { 80_u }\n     else { uint::from_str(args[1]).get() };\n \n-    let writep = oldcomm::Port();\n-    let writech = oldcomm::Chan(&writep);\n-    do task::spawn |move path| {\n-        writer(copy path, writech, size);\n-    };\n-    let ch = oldcomm::recv(writep);\n+    let (pport, pchan) = pipes::stream();\n+    let pchan = pipes::SharedChan(pchan);\n     for uint::range(0_u, size) |j| {\n-        do task::spawn { chanmb(j, size, ch) };\n+        let cchan = pchan.clone();\n+        do task::spawn |move cchan| { cchan.send(chanmb(j, size)) };\n     };\n+    writer(path, pport, size);\n }"}]}