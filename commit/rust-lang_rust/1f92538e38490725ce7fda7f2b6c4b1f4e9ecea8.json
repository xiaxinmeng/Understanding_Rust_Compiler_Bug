{"sha": "1f92538e38490725ce7fda7f2b6c4b1f4e9ecea8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmOTI1MzhlMzg0OTA3MjVjZTdmZGE3ZjJiNmM0YjFmNGU5ZWNlYTg=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-04-26T20:47:13Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-04-26T21:43:43Z"}, "message": "Add check for path-statements, close #400.", "tree": {"sha": "161026a1ae4175d88239f5e589841618373ef8a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/161026a1ae4175d88239f5e589841618373ef8a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f92538e38490725ce7fda7f2b6c4b1f4e9ecea8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f92538e38490725ce7fda7f2b6c4b1f4e9ecea8", "html_url": "https://github.com/rust-lang/rust/commit/1f92538e38490725ce7fda7f2b6c4b1f4e9ecea8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f92538e38490725ce7fda7f2b6c4b1f4e9ecea8/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33a296f2fcd75c5c8deaae6c1a84f5a9aeaef588", "url": "https://api.github.com/repos/rust-lang/rust/commits/33a296f2fcd75c5c8deaae6c1a84f5a9aeaef588", "html_url": "https://github.com/rust-lang/rust/commit/33a296f2fcd75c5c8deaae6c1a84f5a9aeaef588"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "ad0f2d548263f6bf39f14278a8e260bacfc11f75", "filename": "src/rustc/middle/lint.rs", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/1f92538e38490725ce7fda7f2b6c4b1f4e9ecea8/src%2Frustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f92538e38490725ce7fda7f2b6c4b1f4e9ecea8/src%2Frustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Flint.rs?ref=1f92538e38490725ce7fda7f2b6c4b1f4e9ecea8", "patch": "@@ -24,7 +24,8 @@ at all.\n enum lint {\n     ctypes,\n     unused_imports,\n-    while_true\n+    while_true,\n+    path_statement,\n }\n \n enum level {\n@@ -56,7 +57,13 @@ fn get_lint_dict() -> lint_dict {\n         (\"while_true\",\n          @{lint: while_true,\n            desc: \"suggest using loop { } instead of while(true) { }\",\n+           default: warn}),\n+\n+        (\"path_statement\",\n+         @{lint: path_statement,\n+           desc: \"path statements with no effect\",\n            default: warn})\n+\n     ];\n     hash_from_strs(v)\n }\n@@ -177,6 +184,7 @@ fn check_item(cx: ctxt, i: @ast::item) {\n               ctypes { check_item_ctypes(cx, level, i); }\n               unused_imports { check_item_unused_imports(cx, level, i); }\n               while_true { check_item_while_true(cx, level, i); }\n+              path_statement { check_item_path_statement(cx, level, i); }\n             }\n         }\n     }\n@@ -252,6 +260,25 @@ fn check_item_ctypes(cx: ctxt, level: level, it: @ast::item) {\n     }\n }\n \n+fn check_item_path_statement(cx: ctxt, level: level, it: @ast::item) {\n+    let visit = visit::mk_simple_visitor(@{\n+        visit_stmt: fn@(s: @ast::stmt) {\n+            alt s.node {\n+              ast::stmt_semi(@{id: _,\n+                               node: ast::expr_path(@path),\n+                               span: _}, _) {\n+                cx.span_lint(\n+                    level, s.span,\n+                    \"path statement with no effect\");\n+              }\n+              _ {}\n+            }\n+        }\n+        with *visit::default_simple_visitor()\n+    });\n+    visit::visit_item(it, (), visit);\n+}\n+\n \n fn check_crate(tcx: ty::ctxt, crate: @ast::crate,\n                lint_opts: [(lint, level)], time_pass: bool) {"}, {"sha": "ba8c241689d6242c3971aa9430d43820338b0771", "filename": "src/test/compile-fail/warn-path-statement.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f92538e38490725ce7fda7f2b6c4b1f4e9ecea8/src%2Ftest%2Fcompile-fail%2Fwarn-path-statement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f92538e38490725ce7fda7f2b6c4b1f4e9ecea8/src%2Ftest%2Fcompile-fail%2Fwarn-path-statement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwarn-path-statement.rs?ref=1f92538e38490725ce7fda7f2b6c4b1f4e9ecea8", "patch": "@@ -0,0 +1,6 @@\n+// compile-flags: -W err-path-statement\n+fn main() {\n+\n+    let x = 10;\n+    x; //! ERROR path statement with no effect\n+}\n\\ No newline at end of file"}]}