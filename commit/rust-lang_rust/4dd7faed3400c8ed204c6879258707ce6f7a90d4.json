{"sha": "4dd7faed3400c8ed204c6879258707ce6f7a90d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkZDdmYWVkMzQwMGM4ZWQyMDRjNjg3OTI1ODcwN2NlNmY3YTkwZDQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-06-01T07:41:47Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-06-01T07:41:47Z"}, "message": "apply profile filter to top-level entries only", "tree": {"sha": "7373b692a08a9991d04d2ffd900c18ed2ea3db73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7373b692a08a9991d04d2ffd900c18ed2ea3db73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4dd7faed3400c8ed204c6879258707ce6f7a90d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4dd7faed3400c8ed204c6879258707ce6f7a90d4", "html_url": "https://github.com/rust-lang/rust/commit/4dd7faed3400c8ed204c6879258707ce6f7a90d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4dd7faed3400c8ed204c6879258707ce6f7a90d4/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf801953a3d41e781c136b74815244d07c6cad03", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf801953a3d41e781c136b74815244d07c6cad03", "html_url": "https://github.com/rust-lang/rust/commit/bf801953a3d41e781c136b74815244d07c6cad03"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "e681b8e0b3fd5f1c5cb4d7cb1e504ac9ef185021", "filename": "crates/ra_prof/src/lib.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4dd7faed3400c8ed204c6879258707ce6f7a90d4/crates%2Fra_prof%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dd7faed3400c8ed204c6879258707ce6f7a90d4/crates%2Fra_prof%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Flib.rs?ref=4dd7faed3400c8ed204c6879258707ce6f7a90d4", "patch": "@@ -76,17 +76,16 @@ pub fn profile(desc: &str) -> Profiler {\n                 }\n             };\n         }\n-\n         if stack.starts.len() > stack.filter_data.depth {\n             return Profiler { desc: None };\n         }\n-\n-        if stack.filter_data.allowed.is_empty() || stack.filter_data.allowed.contains(desc) {\n-            stack.starts.push(Instant::now());\n-            Profiler { desc: Some(desc.to_string()) }\n-        } else {\n-            Profiler { desc: None }\n+        let allowed = &stack.filter_data.allowed;\n+        if stack.starts.is_empty() && !allowed.is_empty() && !allowed.contains(desc) {\n+            return Profiler { desc: None };\n         }\n+\n+        stack.starts.push(Instant::now());\n+        Profiler { desc: Some(desc.to_string()) }\n     })\n }\n "}]}