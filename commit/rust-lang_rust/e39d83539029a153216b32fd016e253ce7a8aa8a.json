{"sha": "e39d83539029a153216b32fd016e253ce7a8aa8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzOWQ4MzUzOTAyOWExNTMyMTZiMzJmZDAxNmUyNTNjZTdhOGFhOGE=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-08-15T22:11:39Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-08-15T22:15:34Z"}, "message": "Fix compilation of paths containing \".\". Closes #821.", "tree": {"sha": "673ef8521a19bfdbc2e3b3183e1f40469622f4b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/673ef8521a19bfdbc2e3b3183e1f40469622f4b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e39d83539029a153216b32fd016e253ce7a8aa8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e39d83539029a153216b32fd016e253ce7a8aa8a", "html_url": "https://github.com/rust-lang/rust/commit/e39d83539029a153216b32fd016e253ce7a8aa8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e39d83539029a153216b32fd016e253ce7a8aa8a/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af61daf294ce6264d547f373b76fb27aa649a099", "url": "https://api.github.com/repos/rust-lang/rust/commits/af61daf294ce6264d547f373b76fb27aa649a099", "html_url": "https://github.com/rust-lang/rust/commit/af61daf294ce6264d547f373b76fb27aa649a099"}], "stats": {"total": 29, "additions": 12, "deletions": 17}, "files": [{"sha": "5b6d1e80a80a4f1f76b6ac4223bbc772b6e33680", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e39d83539029a153216b32fd016e253ce7a8aa8a/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e39d83539029a153216b32fd016e253ce7a8aa8a/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=e39d83539029a153216b32fd016e253ce7a8aa8a", "patch": "@@ -517,35 +517,30 @@ fn main(args: vec[str]) {\n       none. {\n         // \"-\" as input file will cause the parser to read from stdin so we\n         // have to make up a name\n+        // We want to toss everything after the final '.'\n         let parts = if !input_is_stdin(ifile) {\n             str::split(ifile, '.' as u8)\n         } else {\n             ~[\"default\", \"rs\"]\n         };\n         ivec::pop(parts);\n-        saved_out_filename = parts.(0);\n-        alt sopts.output_type {\n-          link::output_type_none. { parts += ~[\"none\"]; }\n-          link::output_type_bitcode. { parts += ~[\"bc\"]; }\n-          link::output_type_assembly. { parts += ~[\"s\"]; }\n-\n+        saved_out_filename = str::connect(parts, \".\");\n+        let suffix = alt sopts.output_type {\n+          link::output_type_none. { \"none\" }\n+          link::output_type_bitcode. { \"bc\" }\n+          link::output_type_assembly. { \"s\" }\n           // Object and exe output both use the '.o' extension here\n-          link::output_type_object. {\n-            parts += ~[\"o\"];\n-          }\n-          link::output_type_exe. { parts += ~[\"o\"]; }\n-        }\n-        let ofile = str::connect(parts, \".\");\n+          link::output_type_object. | link::output_type_exe. { \"o\" }\n+        };\n+        let ofile = saved_out_filename + \".\" + suffix;\n         compile_input(sess, cfg, ifile, ofile);\n       }\n       some(ofile) {\n         // FIXME: what about windows? This will create a foo.exe.o.\n-\n         saved_out_filename = ofile;\n-        let temp_filename;\n-        if !stop_after_codegen {\n-            temp_filename = ofile + \".o\";\n-        } else { temp_filename = ofile; }\n+        let temp_filename = if !stop_after_codegen {\n+            ofile + \".o\"\n+        } else { ofile };\n         compile_input(sess, cfg, ifile, temp_filename);\n       }\n     }"}]}