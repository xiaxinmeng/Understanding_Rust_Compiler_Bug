{"sha": "e01de0f58df96c09d6b9da53e913af6bdb0142c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMWRlMGY1OGRmOTZjMDlkNmI5ZGE1M2U5MTNhZjZiZGIwMTQyYzA=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-04-18T08:37:02Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-04-18T08:37:02Z"}, "message": "Avoid .to_string() for symbol names where possible", "tree": {"sha": "499d091e87e2ab99a6016c72e3ed9a8332de6ab3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/499d091e87e2ab99a6016c72e3ed9a8332de6ab3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e01de0f58df96c09d6b9da53e913af6bdb0142c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e01de0f58df96c09d6b9da53e913af6bdb0142c0", "html_url": "https://github.com/rust-lang/rust/commit/e01de0f58df96c09d6b9da53e913af6bdb0142c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e01de0f58df96c09d6b9da53e913af6bdb0142c0/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a569cb4022182b6b9c2985190ff88f7622fc8528", "url": "https://api.github.com/repos/rust-lang/rust/commits/a569cb4022182b6b9c2985190ff88f7622fc8528", "html_url": "https://github.com/rust-lang/rust/commit/a569cb4022182b6b9c2985190ff88f7622fc8528"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "54c8fb0e7b80be401a13d87c8de39e46bd9ebc99", "filename": "src/abi/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e01de0f58df96c09d6b9da53e913af6bdb0142c0/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01de0f58df96c09d6b9da53e913af6bdb0142c0/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=e01de0f58df96c09d6b9da53e913af6bdb0142c0", "patch": "@@ -63,9 +63,9 @@ pub(crate) fn import_function<'tcx>(\n     module: &mut dyn Module,\n     inst: Instance<'tcx>,\n ) -> FuncId {\n-    let name = tcx.symbol_name(inst).name.to_string();\n+    let name = tcx.symbol_name(inst).name;\n     let sig = get_function_sig(tcx, module.isa().triple(), inst);\n-    module.declare_function(&name, Linkage::Import, &sig).unwrap()\n+    module.declare_function(name, Linkage::Import, &sig).unwrap()\n }\n \n impl<'tcx> FunctionCx<'_, '_, 'tcx> {\n@@ -89,7 +89,7 @@ impl<'tcx> FunctionCx<'_, '_, 'tcx> {\n         args: &[Value],\n     ) -> &[Value] {\n         let sig = Signature { params, returns, call_conv: CallConv::triple_default(self.triple()) };\n-        let func_id = self.module.declare_function(&name, Linkage::Import, &sig).unwrap();\n+        let func_id = self.module.declare_function(name, Linkage::Import, &sig).unwrap();\n         let func_ref = self.module.declare_func_in_func(func_id, &mut self.bcx.func);\n         let call_inst = self.bcx.ins().call(func_ref, args);\n         if self.clif_comments.enabled() {"}, {"sha": "526caeb4f03f53e3354cf78441253f230cf0ba88", "filename": "src/driver/jit.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e01de0f58df96c09d6b9da53e913af6bdb0142c0/src%2Fdriver%2Fjit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01de0f58df96c09d6b9da53e913af6bdb0142c0/src%2Fdriver%2Fjit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fjit.rs?ref=e01de0f58df96c09d6b9da53e913af6bdb0142c0", "patch": "@@ -156,9 +156,9 @@ extern \"C\" fn __clif_jit_fn(instance_ptr: *const Instance<'static>) -> *const u8\n             let jit_module = &mut lazy_jit_state.jit_module;\n             let backend_config = lazy_jit_state.backend_config.clone();\n \n-            let name = tcx.symbol_name(instance).name.to_string();\n+            let name = tcx.symbol_name(instance).name;\n             let sig = crate::abi::get_function_sig(tcx, jit_module.isa().triple(), instance);\n-            let func_id = jit_module.declare_function(&name, Linkage::Export, &sig).unwrap();\n+            let func_id = jit_module.declare_function(name, Linkage::Export, &sig).unwrap();\n             jit_module.prepare_for_function_redefine(func_id).unwrap();\n \n             let mut cx = crate::CodegenCx::new(tcx, backend_config, jit_module.isa(), false);\n@@ -241,9 +241,9 @@ fn codegen_shim<'tcx>(cx: &mut CodegenCx<'tcx>, module: &mut JITModule, inst: In\n \n     let pointer_type = module.target_config().pointer_type();\n \n-    let name = tcx.symbol_name(inst).name.to_string();\n+    let name = tcx.symbol_name(inst).name;\n     let sig = crate::abi::get_function_sig(tcx, module.isa().triple(), inst);\n-    let func_id = module.declare_function(&name, Linkage::Export, &sig).unwrap();\n+    let func_id = module.declare_function(name, Linkage::Export, &sig).unwrap();\n \n     let instance_ptr = Box::into_raw(Box::new(inst));\n "}, {"sha": "8f5714ecb417704e446edda114f65b4966facb66", "filename": "src/driver/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e01de0f58df96c09d6b9da53e913af6bdb0142c0/src%2Fdriver%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01de0f58df96c09d6b9da53e913af6bdb0142c0/src%2Fdriver%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fmod.rs?ref=e01de0f58df96c09d6b9da53e913af6bdb0142c0", "patch": "@@ -22,7 +22,7 @@ fn predefine_mono_items<'tcx>(\n         for &(mono_item, (linkage, visibility)) in mono_items {\n             match mono_item {\n                 MonoItem::Fn(instance) => {\n-                    let name = tcx.symbol_name(instance).name.to_string();\n+                    let name = tcx.symbol_name(instance).name;\n                     let _inst_guard = crate::PrintOnPanic(|| format!(\"{:?} {}\", instance, name));\n                     let sig = get_function_sig(tcx, module.isa().triple(), instance);\n                     let linkage = crate::linkage::get_clif_linkage(\n@@ -31,7 +31,7 @@ fn predefine_mono_items<'tcx>(\n                         visibility,\n                         is_compiler_builtins,\n                     );\n-                    module.declare_function(&name, linkage, &sig).unwrap();\n+                    module.declare_function(name, linkage, &sig).unwrap();\n                 }\n                 MonoItem::Static(_) | MonoItem::GlobalAsm(_) => {}\n             }"}, {"sha": "3305ca6f6eb9de9fcfe3fd80274279fe5e39d3db", "filename": "src/main_shim.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e01de0f58df96c09d6b9da53e913af6bdb0142c0/src%2Fmain_shim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e01de0f58df96c09d6b9da53e913af6bdb0142c0/src%2Fmain_shim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain_shim.rs?ref=e01de0f58df96c09d6b9da53e913af6bdb0142c0", "patch": "@@ -62,9 +62,9 @@ pub(crate) fn maybe_create_entry_wrapper(\n \n         let instance = Instance::mono(tcx, rust_main_def_id).polymorphize(tcx);\n \n-        let main_name = tcx.symbol_name(instance).name.to_string();\n+        let main_name = tcx.symbol_name(instance).name;\n         let main_sig = get_function_sig(tcx, m.isa().triple(), instance);\n-        let main_func_id = m.declare_function(&main_name, Linkage::Import, &main_sig).unwrap();\n+        let main_func_id = m.declare_function(main_name, Linkage::Import, &main_sig).unwrap();\n \n         let mut ctx = Context::new();\n         ctx.func = Function::with_name_signature(ExternalName::user(0, 0), cmain_sig);"}]}