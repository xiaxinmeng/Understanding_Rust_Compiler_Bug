{"sha": "236c0cf103aa485db1748587ad87213943bcfb33", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzNmMwY2YxMDNhYTQ4NWRiMTc0ODU4N2FkODcyMTM5NDNiY2ZiMzM=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-01-31T20:12:43Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-03-21T19:41:01Z"}, "message": "implement TrustedLen and TrustedRandomAccess for VecDeque iterators", "tree": {"sha": "58a070778207603ace52803488a0253a07f4c6fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58a070778207603ace52803488a0253a07f4c6fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/236c0cf103aa485db1748587ad87213943bcfb33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/236c0cf103aa485db1748587ad87213943bcfb33", "html_url": "https://github.com/rust-lang/rust/commit/236c0cf103aa485db1748587ad87213943bcfb33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/236c0cf103aa485db1748587ad87213943bcfb33/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f82664191d0e8764b7435b9d72eb0e366b8b1464", "url": "https://api.github.com/repos/rust-lang/rust/commits/f82664191d0e8764b7435b9d72eb0e366b8b1464", "html_url": "https://github.com/rust-lang/rust/commit/f82664191d0e8764b7435b9d72eb0e366b8b1464"}], "stats": {"total": 80, "additions": 77, "deletions": 3}, "files": [{"sha": "1c635dd4f27fa8c001cfc5287f2ccf0ff45ad952", "filename": "library/alloc/src/collections/vec_deque/into_iter.rs", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/236c0cf103aa485db1748587ad87213943bcfb33/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Finto_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/236c0cf103aa485db1748587ad87213943bcfb33/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Finto_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Finto_iter.rs?ref=236c0cf103aa485db1748587ad87213943bcfb33", "patch": "@@ -1,5 +1,5 @@\n use core::fmt;\n-use core::iter::FusedIterator;\n+use core::iter::{FusedIterator, TrustedLen, TrustedRandomAccess};\n \n use super::VecDeque;\n \n@@ -36,6 +36,22 @@ impl<T> Iterator for IntoIter<T> {\n         let len = self.inner.len();\n         (len, Some(len))\n     }\n+\n+    #[inline]\n+    unsafe fn __iterator_get_unchecked(&mut self, idx: usize) -> Self::Item\n+    where\n+        Self: TrustedRandomAccess,\n+    {\n+        // Safety: The TrustedRandomAccess contract requires that callers only pass an index\n+        // that is in bounds.\n+        // Additionally Self: TrustedRandomAccess is only implemented for T: Copy which means even\n+        // multiple repeated reads of the same index would be safe and the\n+        // values are !Drop, thus won't suffer from double drops.\n+        unsafe {\n+            let idx = self.inner.wrap_add(self.inner.tail, idx);\n+            self.inner.buffer_read(idx)\n+        }\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -55,3 +71,17 @@ impl<T> ExactSizeIterator for IntoIter<T> {\n \n #[stable(feature = \"fused\", since = \"1.26.0\")]\n impl<T> FusedIterator for IntoIter<T> {}\n+\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n+unsafe impl<T> TrustedLen for IntoIter<T> {}\n+\n+#[doc(hidden)]\n+#[unstable(feature = \"trusted_random_access\", issue = \"none\")]\n+// T: Copy as approximation for !Drop since get_unchecked does not update the pointers\n+// and thus we can't implement drop-handling\n+unsafe impl<T> TrustedRandomAccess for IntoIter<T>\n+where\n+    T: Copy,\n+{\n+    const MAY_HAVE_SIDE_EFFECT: bool = false;\n+}"}, {"sha": "e4cfb3acdfd5ce94c74d172a2a425720a1c8966e", "filename": "library/alloc/src/collections/vec_deque/iter.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/236c0cf103aa485db1748587ad87213943bcfb33/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/236c0cf103aa485db1748587ad87213943bcfb33/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fiter.rs?ref=236c0cf103aa485db1748587ad87213943bcfb33", "patch": "@@ -1,5 +1,5 @@\n use core::fmt;\n-use core::iter::FusedIterator;\n+use core::iter::{FusedIterator, TrustedLen, TrustedRandomAccess};\n use core::ops::Try;\n \n use super::{count, wrap_index, RingSlices};\n@@ -101,6 +101,19 @@ impl<'a, T> Iterator for Iter<'a, T> {\n     fn last(mut self) -> Option<&'a T> {\n         self.next_back()\n     }\n+\n+    #[inline]\n+    unsafe fn __iterator_get_unchecked(&mut self, idx: usize) -> Self::Item\n+    where\n+        Self: TrustedRandomAccess,\n+    {\n+        // Safety: The TrustedRandomAccess contract requires that callers only  pass an index\n+        // that is in bounds.\n+        unsafe {\n+            let idx = wrap_index(self.tail.wrapping_add(idx), self.ring.len());\n+            self.ring.get_unchecked(idx)\n+        }\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -157,3 +170,12 @@ impl<T> ExactSizeIterator for Iter<'_, T> {\n \n #[stable(feature = \"fused\", since = \"1.26.0\")]\n impl<T> FusedIterator for Iter<'_, T> {}\n+\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n+unsafe impl<T> TrustedLen for Iter<'_, T> {}\n+\n+#[doc(hidden)]\n+#[unstable(feature = \"trusted_random_access\", issue = \"none\")]\n+unsafe impl<T> TrustedRandomAccess for Iter<'_, T> {\n+    const MAY_HAVE_SIDE_EFFECT: bool = false;\n+}"}, {"sha": "9493676e66bc8f3232e6937aea62a6a99a47a38a", "filename": "library/alloc/src/collections/vec_deque/iter_mut.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/236c0cf103aa485db1748587ad87213943bcfb33/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fiter_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/236c0cf103aa485db1748587ad87213943bcfb33/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fiter_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fiter_mut.rs?ref=236c0cf103aa485db1748587ad87213943bcfb33", "patch": "@@ -1,5 +1,5 @@\n use core::fmt;\n-use core::iter::FusedIterator;\n+use core::iter::{FusedIterator, TrustedLen, TrustedRandomAccess};\n use core::marker::PhantomData;\n \n use super::{count, wrap_index, RingSlices};\n@@ -87,6 +87,19 @@ impl<'a, T> Iterator for IterMut<'a, T> {\n     fn last(mut self) -> Option<&'a mut T> {\n         self.next_back()\n     }\n+\n+    #[inline]\n+    unsafe fn __iterator_get_unchecked(&mut self, idx: usize) -> Self::Item\n+    where\n+        Self: TrustedRandomAccess,\n+    {\n+        // Safety: The TrustedRandomAccess contract requires that callers only  pass an index\n+        // that is in bounds.\n+        unsafe {\n+            let idx = wrap_index(self.tail.wrapping_add(idx), self.ring.len());\n+            &mut *self.ring.get_unchecked_mut(idx)\n+        }\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -126,3 +139,12 @@ impl<T> ExactSizeIterator for IterMut<'_, T> {\n \n #[stable(feature = \"fused\", since = \"1.26.0\")]\n impl<T> FusedIterator for IterMut<'_, T> {}\n+\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n+unsafe impl<T> TrustedLen for IterMut<'_, T> {}\n+\n+#[doc(hidden)]\n+#[unstable(feature = \"trusted_random_access\", issue = \"none\")]\n+unsafe impl<T> TrustedRandomAccess for IterMut<'_, T> {\n+    const MAY_HAVE_SIDE_EFFECT: bool = false;\n+}"}]}