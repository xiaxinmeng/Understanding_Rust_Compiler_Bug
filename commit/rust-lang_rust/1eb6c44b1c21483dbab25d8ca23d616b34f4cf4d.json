{"sha": "1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlYjZjNDRiMWMyMTQ4M2RiYWIyNWQ4Y2EyM2Q2MTZiMzRmNGNmNGQ=", "commit": {"author": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-12-22T23:13:14Z"}, "committer": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-12-22T23:13:14Z"}, "message": "Remove start functions, use newlib instead of openlibm + ralloc", "tree": {"sha": "2bb615755223f43ab22dac4cf12158d10b32e80a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bb615755223f43ab22dac4cf12158d10b32e80a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d", "html_url": "https://github.com/rust-lang/rust/commit/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d/comments", "author": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7b006d3dde2d8c75edbf55082c40ecbb9867950", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7b006d3dde2d8c75edbf55082c40ecbb9867950", "html_url": "https://github.com/rust-lang/rust/commit/e7b006d3dde2d8c75edbf55082c40ecbb9867950"}], "stats": {"total": 173, "additions": 6, "deletions": 167}, "files": [{"sha": "c804d283ba7572e236c3d307c98343c373afaa06", "filename": "src/librustc_back/target/redox_base.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d/src%2Flibrustc_back%2Ftarget%2Fredox_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d/src%2Flibrustc_back%2Ftarget%2Fredox_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fredox_base.rs?ref=1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d", "patch": "@@ -27,21 +27,22 @@ pub fn opts() -> TargetOptions {\n             // Always enable NX protection when it is available\n             \"-Wl,-z,noexecstack\".to_string(),\n \n-            // Do not link libc\n-            \"-nostdlib\".to_string(),\n-\n             // Static link\n             \"-static\".to_string()\n         ],\n+        late_link_args: vec![\n+            \"-lc\".to_string(),\n+            \"-lm\".to_string()\n+        ],\n         executables: true,\n         relocation_model: \"static\".to_string(),\n         disable_redzone: true,\n         eliminate_frame_pointer: false,\n         target_family: Some(\"redox\".to_string()),\n         linker_is_gnu: true,\n         no_default_libraries: true,\n-        lib_allocation_crate: \"ralloc\".to_string(),\n-        exe_allocation_crate: \"ralloc\".to_string(),\n+        lib_allocation_crate: \"alloc_system\".to_string(),\n+        exe_allocation_crate: \"alloc_system\".to_string(),\n         has_elf_tls: true,\n         panic_strategy: PanicStrategy::Abort,\n         .. Default::default()"}, {"sha": "535cb7e136ce4a9c1fef8ecec064bc8ec1e36a85", "filename": "src/libstd/build.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d/src%2Flibstd%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d/src%2Flibstd%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbuild.rs?ref=1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d", "patch": "@@ -62,8 +62,6 @@ fn main() {\n         println!(\"cargo:rustc-link-lib=magenta\");\n         println!(\"cargo:rustc-link-lib=mxio\");\n         println!(\"cargo:rustc-link-lib=launchpad\"); // for std::process\n-    } else if target.contains(\"redox\") {\n-        println!(\"cargo:rustc-link-lib=openlibm\");\n     }\n }\n "}, {"sha": "414f25fa5eb33af7bfb54edd797601d9fc1bef0c", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d", "patch": "@@ -299,7 +299,6 @@\n #![feature(unwind_attributes)]\n #![feature(vec_push_all)]\n #![feature(zero_one)]\n-#![cfg_attr(target_os = \"redox\", feature(naked_functions))]\n #![cfg_attr(test, feature(update_panic_count))]\n \n // Explicitly import the prelude. The compiler uses this same unstable attribute"}, {"sha": "185b7bbd7363389d2413222d33dda711da82d4fd", "filename": "src/libstd/rt.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d/src%2Flibstd%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d/src%2Flibstd%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt.rs?ref=1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d", "patch": "@@ -25,10 +25,6 @@\n // Reexport some of our utilities which are expected by other crates.\n pub use panicking::{begin_panic, begin_panic_fmt, update_panic_count};\n \n-// Reexport the start module on platforms that provide it\n-#[unstable(feature = \"sys_rt\", issue=\"0\")]\n-pub use sys::rt::*;\n-\n #[cfg(not(test))]\n #[lang = \"start\"]\n fn lang_start(main: *const u8, argc: isize, argv: *const *const u8) -> isize {"}, {"sha": "5982bdd6549ca46a131810c60a4305851bc9a493", "filename": "src/libstd/sys/redox/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d/src%2Flibstd%2Fsys%2Fredox%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d/src%2Flibstd%2Fsys%2Fredox%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fmod.rs?ref=1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d", "patch": "@@ -30,7 +30,6 @@ pub mod path;\n pub mod pipe;\n pub mod process;\n pub mod rand;\n-pub mod rt;\n pub mod rwlock;\n pub mod stack_overflow;\n pub mod stdio;"}, {"sha": "0e854989c125ce1223e927333a572cbf64a11273", "filename": "src/libstd/sys/redox/rt.rs", "status": "removed", "additions": 0, "deletions": 130, "changes": 130, "blob_url": "https://github.com/rust-lang/rust/blob/e7b006d3dde2d8c75edbf55082c40ecbb9867950/src%2Flibstd%2Fsys%2Fredox%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7b006d3dde2d8c75edbf55082c40ecbb9867950/src%2Flibstd%2Fsys%2Fredox%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Frt.rs?ref=e7b006d3dde2d8c75edbf55082c40ecbb9867950", "patch": "@@ -1,130 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-//! Defintion of functions like _start for the linker\n-\n-use sys::syscall::exit;\n-\n-#[unstable(feature = \"sys_rt\", issue = \"0\")]\n-#[no_mangle]\n-#[naked]\n-#[cfg(target_arch = \"x86\")]\n-pub unsafe fn _start() {\n-    asm!(\"push esp\n-        call _start_stack\n-        pop esp\"\n-        :\n-        :\n-        : \"memory\"\n-        : \"intel\", \"volatile\");\n-    let _ = exit(0);\n-}\n-\n-#[unstable(feature = \"sys_rt\", issue = \"0\")]\n-#[no_mangle]\n-#[naked]\n-#[cfg(target_arch = \"x86_64\")]\n-pub unsafe fn _start() {\n-    asm!(\"mov rdi, rsp\n-        and rsp, 0xFFFFFFFFFFFFFFF0\n-        call _start_stack\"\n-        :\n-        :\n-        : \"memory\"\n-        : \"intel\", \"volatile\");\n-    let _ = exit(0);\n-}\n-\n-#[unstable(feature = \"sys_rt\", issue = \"0\")]\n-#[no_mangle]\n-pub unsafe extern \"C\" fn _start_stack(stack: *const usize){\n-    extern \"C\" {\n-        fn main(argc: usize, argv: *const *const u8) -> usize;\n-    }\n-\n-    let argc = *stack as usize;\n-    let argv = stack.offset(1) as *const *const u8;\n-    let _ = exit(main(argc, argv));\n-}\n-\n-/// Memcpy\n-///\n-/// Copy N bytes of memory from one location to another.\n-#[unstable(feature = \"sys_rt\", issue = \"0\")]\n-#[no_mangle]\n-pub unsafe extern fn memcpy(dest: *mut u8, src: *const u8,\n-                            n: usize) -> *mut u8 {\n-    let mut i = 0;\n-    while i < n {\n-        *((dest as usize + i) as *mut u8) = *((src as usize + i) as *const u8);\n-        i += 1;\n-    }\n-\n-    dest\n-}\n-\n-/// Memmove\n-///\n-/// Copy N bytes of memory from src to dest. The memory areas may overlap.\n-#[unstable(feature = \"sys_rt\", issue = \"0\")]\n-#[no_mangle]\n-pub unsafe extern fn memmove(dest: *mut u8, src: *const u8,\n-                             n: usize) -> *mut u8 {\n-    if src < dest as *const u8 {\n-        let mut i = n;\n-        while i != 0 {\n-            i -= 1;\n-            *((dest as usize + i) as *mut u8) = *((src as usize + i) as *const u8);\n-        }\n-    } else {\n-        let mut i = 0;\n-        while i < n {\n-            *((dest as usize + i) as *mut u8) = *((src as usize + i) as *const u8);\n-            i += 1;\n-        }\n-    }\n-\n-    dest\n-}\n-\n-/// Memset\n-///\n-/// Fill a block of memory with a specified value.\n-#[unstable(feature = \"sys_rt\", issue = \"0\")]\n-#[no_mangle]\n-pub unsafe extern fn memset(dest: *mut u8, c: i32, n: usize) -> *mut u8 {\n-    let mut i = 0;\n-    while i < n {\n-        *((dest as usize + i) as *mut u8) = c as u8;\n-        i += 1;\n-    }\n-\n-    dest\n-}\n-\n-/// Memcmp\n-///\n-/// Compare two blocks of memory.\n-#[unstable(feature = \"sys_rt\", issue = \"0\")]\n-#[no_mangle]\n-pub unsafe extern fn memcmp(s1: *const u8, s2: *const u8, n: usize) -> i32 {\n-    let mut i = 0;\n-\n-    while i < n {\n-        let a = *((s1 as usize + i) as *const u8);\n-        let b = *((s2 as usize + i) as *const u8);\n-        if a != b {\n-            return a as i32 - b as i32\n-        }\n-        i += 1;\n-    }\n-\n-    0\n-}"}, {"sha": "fd7dc17cccd8cbf36d3a24684215adebeb41326f", "filename": "src/libstd/sys/unix/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fmod.rs?ref=1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d", "patch": "@@ -50,7 +50,6 @@ pub mod path;\n pub mod pipe;\n pub mod process;\n pub mod rand;\n-pub mod rt;\n pub mod rwlock;\n pub mod stack_overflow;\n pub mod thread;"}, {"sha": "188e31cb5d7b2ed64e8162606d013781d39c19fd", "filename": "src/libstd/sys/unix/rt.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e7b006d3dde2d8c75edbf55082c40ecbb9867950/src%2Flibstd%2Fsys%2Funix%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7b006d3dde2d8c75edbf55082c40ecbb9867950/src%2Flibstd%2Fsys%2Funix%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Frt.rs?ref=e7b006d3dde2d8c75edbf55082c40ecbb9867950", "patch": "@@ -1,11 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-//! Stub for placing functions like _start for the linker"}, {"sha": "defc41c5f46a38ccc33954d99bf265a6b111e635", "filename": "src/libstd/sys/windows/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs?ref=1eb6c44b1c21483dbab25d8ca23d616b34f4cf4d", "patch": "@@ -36,7 +36,6 @@ pub mod path;\n pub mod pipe;\n pub mod process;\n pub mod rand;\n-pub mod rt;\n pub mod rwlock;\n pub mod stack_overflow;\n pub mod thread;"}, {"sha": "188e31cb5d7b2ed64e8162606d013781d39c19fd", "filename": "src/libstd/sys/windows/rt.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e7b006d3dde2d8c75edbf55082c40ecbb9867950/src%2Flibstd%2Fsys%2Fwindows%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7b006d3dde2d8c75edbf55082c40ecbb9867950/src%2Flibstd%2Fsys%2Fwindows%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Frt.rs?ref=e7b006d3dde2d8c75edbf55082c40ecbb9867950", "patch": "@@ -1,11 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-//! Stub for placing functions like _start for the linker"}]}