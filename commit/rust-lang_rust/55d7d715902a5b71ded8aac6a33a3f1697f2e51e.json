{"sha": "55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1ZDdkNzE1OTAyYTViNzFkZWQ4YWFjNmEzM2EzZjE2OTdmMmU1MWU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-31T10:01:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-31T10:01:56Z"}, "message": "Merge #8267\n\n8267: Adding gifs and screenshots for features in manual r=matklad a=MozarellaMan\n\nFor #6539\r\n\r\nThis includes most of gif or screenshot examples of most items in the \"Features\" header. With the exceptions of:\r\n\r\n- **On Typing Assists** - couldn't get it to work for a demo, I'm probably missing something?\r\n- **Structural search and replace** - looked to be already a visual example of the feature\r\n- **Workspace symbol** - wasn't sure how best to show this, all of the examples maybe? Also wasn't sure of the best code example to show it off\r\n- **Semantic Syntax Highlighting** - seemed obvious enough to not need a screenshot, but I could easily add this\r\n\r\nAll the gifs/pngs are hosted in this [comment](https://github.com/rust-analyzer/rust-analyzer/issues/6539#issuecomment-809574840). Please let me know if any of them aren't suitable (and why) and I'll improve it! Or if you don't like the theme/font\n\nCo-authored-by: Ayomide Bamidele <48062697+MozarellaMan@users.noreply.github.com>", "tree": {"sha": "b17a5c1690512ff0df962c8a0e6ed6f4598693b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b17a5c1690512ff0df962c8a0e6ed6f4598693b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgZEiUCRBK7hj4Ov3rIwAAdHIIAJRwgyjXC58kME7xeRnn8Zo/\niOzQ7rKaaVv7ODYRi28ktdEAV+41F6cAMf65Fdn1wHq4nVsxoA8U3v09CpWPuQAP\n0ysFFUnZES597afx+iZn82aG2e8KpEb8f8vOfGtYlbRBPuGvHY7Dr20cmgt0VHY5\nmOvzLgIIjiRYPLcoddUoI7Y123MeG+UIDmh47XDtHzp3z1VCaaFzbCPO4a317ihY\nGZkttZuwXy/nvF6b3eAgCoyGsyzpaiN1iebhy+0Au0Zb97s0Y3/DgKFX+2sKTuub\n8M0fyxewgEawTU/0H3OEH9SxRSnL7/paT93MELPxoIxQjgdONmaikBhkS0Rv/Zg=\n=CTav\n-----END PGP SIGNATURE-----\n", "payload": "tree b17a5c1690512ff0df962c8a0e6ed6f4598693b6\nparent c69f6f31d15826cfa69e212a739fe7e4cd58b39d\nparent 276022682b0b4745d44027a2f6c47f5e07cecbc3\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1617184916 +0000\ncommitter GitHub <noreply@github.com> 1617184916 +0000\n\nMerge #8267\n\n8267: Adding gifs and screenshots for features in manual r=matklad a=MozarellaMan\n\nFor #6539\r\n\r\nThis includes most of gif or screenshot examples of most items in the \"Features\" header. With the exceptions of:\r\n\r\n- **On Typing Assists** - couldn't get it to work for a demo, I'm probably missing something?\r\n- **Structural search and replace** - looked to be already a visual example of the feature\r\n- **Workspace symbol** - wasn't sure how best to show this, all of the examples maybe? Also wasn't sure of the best code example to show it off\r\n- **Semantic Syntax Highlighting** - seemed obvious enough to not need a screenshot, but I could easily add this\r\n\r\nAll the gifs/pngs are hosted in this [comment](https://github.com/rust-analyzer/rust-analyzer/issues/6539#issuecomment-809574840). Please let me know if any of them aren't suitable (and why) and I'll improve it! Or if you don't like the theme/font\n\nCo-authored-by: Ayomide Bamidele <48062697+MozarellaMan@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "html_url": "https://github.com/rust-lang/rust/commit/55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c69f6f31d15826cfa69e212a739fe7e4cd58b39d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c69f6f31d15826cfa69e212a739fe7e4cd58b39d", "html_url": "https://github.com/rust-lang/rust/commit/c69f6f31d15826cfa69e212a739fe7e4cd58b39d"}, {"sha": "276022682b0b4745d44027a2f6c47f5e07cecbc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/276022682b0b4745d44027a2f6c47f5e07cecbc3", "html_url": "https://github.com/rust-lang/rust/commit/276022682b0b4745d44027a2f6c47f5e07cecbc3"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "5ebe7fd0ea357ae1ffaa6ff910c2d5015867f912", "filename": "crates/ide/src/annotations.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fannotations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fannotations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fannotations.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -19,6 +19,8 @@ use crate::{\n //\n // Provides user with annotations above items for looking up references or impl blocks\n // and running/debugging binaries.\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113020672-b7c34f00-917a-11eb-8f6e-858735660a0e.png[]\n #[derive(Debug)]\n pub struct Annotation {\n     pub range: TextRange,"}, {"sha": "9eeabbedaf6c57c8ee1108140df79586888ecaa2", "filename": "crates/ide/src/expand_macro.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fexpand_macro.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -23,6 +23,8 @@ pub struct ExpandedMacro {\n //\n // | VS Code | **Rust Analyzer: Expand macro recursively**\n // |===\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113020648-b3973180-917a-11eb-84a9-ecb921293dc5.gif[]\n pub(crate) fn expand_macro(db: &RootDatabase, position: FilePosition) -> Option<ExpandedMacro> {\n     let sema = Semantics::new(db);\n     let file = sema.parse(position.file_id);"}, {"sha": "7032889acc0fc254b6294d7680160d37782f1c05", "filename": "crates/ide/src/extend_selection.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fextend_selection.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -24,6 +24,8 @@ use crate::FileRange;\n //\n // | VS Code | kbd:[Alt+Shift+\u2192], kbd:[Alt+Shift+\u2190]\n // |===\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113020651-b42fc800-917a-11eb-8a4f-cf1a07859fac.gif[]\n pub(crate) fn extend_selection(db: &RootDatabase, frange: FileRange) -> TextRange {\n     let sema = Semantics::new(db);\n     let src = sema.parse(frange.file_id);"}, {"sha": "19071d6be94d7574199d9813cd246c0c95f50627", "filename": "crates/ide/src/file_structure.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Ffile_structure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Ffile_structure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ffile_structure.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -35,6 +35,9 @@ pub enum StructureNodeKind {\n //\n // | VS Code | kbd:[Ctrl+Shift+O]\n // |===\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113020654-b42fc800-917a-11eb-8388-e7dc4d92b02e.gif[]\n+\n pub(crate) fn file_structure(file: &SourceFile) -> Vec<StructureNode> {\n     let mut res = Vec::new();\n     let mut stack = Vec::new();"}, {"sha": "8574d1e3f887bafccbe3b18d7649d18832819826", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -21,6 +21,8 @@ use crate::{\n //\n // | VS Code | kbd:[F12]\n // |===\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113065563-025fbe00-91b1-11eb-83e4-a5a703610b23.gif[]\n pub(crate) fn goto_definition(\n     db: &RootDatabase,\n     position: FilePosition,"}, {"sha": "05130a237653776ec2feb3125ed539d1c1f69bc4", "filename": "crates/ide/src/goto_implementation.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fgoto_implementation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fgoto_implementation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_implementation.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -16,6 +16,8 @@ use crate::{display::TryToNav, FilePosition, NavigationTarget, RangeInfo};\n //\n // | VS Code | kbd:[Ctrl+F12]\n // |===\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113065566-02f85480-91b1-11eb-9288-aaad8abd8841.gif[]\n pub(crate) fn goto_implementation(\n     db: &RootDatabase,\n     position: FilePosition,"}, {"sha": "9d34b109b21676de7d266ac67ea3f486afa678f0", "filename": "crates/ide/src/goto_type_definition.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fgoto_type_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fgoto_type_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_type_definition.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -12,6 +12,8 @@ use crate::{display::TryToNav, FilePosition, NavigationTarget, RangeInfo};\n //\n // | VS Code | **Go to Type Definition*\n // |===\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113020657-b560f500-917a-11eb-9007-0f809733a338.gif[]\n pub(crate) fn goto_type_definition(\n     db: &RootDatabase,\n     position: FilePosition,"}, {"sha": "5f9edb4761339c31070d50f7ce1370491f54f43f", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -82,6 +82,8 @@ pub struct HoverResult {\n //\n // Shows additional information, like type of an expression or documentation for definition when \"focusing\" code.\n // Focusing is usually hovering with a mouse, but can also be triggered with a shortcut.\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113020658-b5f98b80-917a-11eb-9f88-3dbc27320c95.gif[]\n pub(crate) fn hover(\n     db: &RootDatabase,\n     position: FilePosition,"}, {"sha": "f73edf8b658f68d91a51c9f87fdfd655df8aeff6", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -52,6 +52,8 @@ pub struct InlayHint {\n //\n // | VS Code | **Rust Analyzer: Toggle inlay hints*\n // |===\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113020660-b5f98b80-917a-11eb-8d70-3be3fd558cdd.png[]\n pub(crate) fn inlay_hints(\n     db: &RootDatabase,\n     file_id: FileId,"}, {"sha": "d584190f7a873044cdd067e6f65eb6fab9106195", "filename": "crates/ide/src/join_lines.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fjoin_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fjoin_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fjoin_lines.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -19,6 +19,8 @@ use text_edit::{TextEdit, TextEditBuilder};\n //\n // | VS Code | **Rust Analyzer: Join lines**\n // |===\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113020661-b6922200-917a-11eb-87c4-b75acc028f11.gif[]\n pub(crate) fn join_lines(file: &SourceFile, range: TextRange) -> TextEdit {\n     let range = if range.is_empty() {\n         let syntax = file.syntax();"}, {"sha": "261dcc25596bc79f342ccac1977463ab39a1bc2b", "filename": "crates/ide/src/matching_brace.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fmatching_brace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fmatching_brace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fmatching_brace.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -14,6 +14,8 @@ use syntax::{\n //\n // | VS Code | **Rust Analyzer: Find matching brace**\n // |===\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113065573-04298180-91b1-11eb-8dec-d4e2a202f304.gif[]\n pub(crate) fn matching_brace(file: &SourceFile, offset: TextSize) -> Option<TextSize> {\n     const BRACES: &[SyntaxKind] =\n         &[T!['{'], T!['}'], T!['['], T![']'], T!['('], T![')'], T![<], T![>], T![|], T![|]];"}, {"sha": "8d37f4f92ecb6ddd08edbfae04a7be3c64d95460", "filename": "crates/ide/src/move_item.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fmove_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fmove_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fmove_item.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -25,6 +25,8 @@ pub enum Direction {\n // | VS Code | **Rust Analyzer: Move item up**\n // | VS Code | **Rust Analyzer: Move item down**\n // |===\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113065576-04298180-91b1-11eb-91ce-4505e99ed598.gif[]\n pub(crate) fn move_item(\n     db: &RootDatabase,\n     range: FileRange,"}, {"sha": "99365c8a7380b04702f861719296bd8f79f4ff52", "filename": "crates/ide/src/parent_module.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fparent_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fparent_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fparent_module.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -18,6 +18,8 @@ use crate::NavigationTarget;\n //\n // | VS Code | **Rust Analyzer: Locate parent module**\n // |===\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113065580-04c21800-91b1-11eb-9a32-00086161c0bd.gif[]\n \n /// This returns `Vec` because a module may be included from several places.\n pub(crate) fn parent_module(db: &RootDatabase, position: FilePosition) -> Vec<NavigationTarget> {"}, {"sha": "11ca7ec6b6c4ea57f03935ace8112c37aa4cb621", "filename": "crates/ide/src/references.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -48,6 +48,8 @@ pub struct Declaration {\n //\n // | VS Code | kbd:[Shift+Alt+F12]\n // |===\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113020670-b7c34f00-917a-11eb-8003-370ac5f2b3cb.gif[]\n pub(crate) fn find_all_refs(\n     sema: &Semantics<RootDatabase>,\n     position: FilePosition,"}, {"sha": "2408a0181176c9172f924b81f9e834fc6ceafa33", "filename": "crates/ide/src/references/rename.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences%2Frename.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -70,6 +70,8 @@ pub(crate) fn prepare_rename(\n //\n // | VS Code | kbd:[F2]\n // |===\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113065582-055aae80-91b1-11eb-8ade-2b58e6d81883.gif[]\n pub(crate) fn rename(\n     db: &RootDatabase,\n     position: FilePosition,"}, {"sha": "3eb9e27eefff504c8a4b9ec38eeef2d04d6ab961", "filename": "crates/ide/src/runnables.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frunnables.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -98,6 +98,7 @@ impl Runnable {\n //\n // | VS Code | **Rust Analyzer: Run**\n // |===\n+// image::https://user-images.githubusercontent.com/48062697/113065583-055aae80-91b1-11eb-958f-d67efcaf6a2f.gif[]\n pub(crate) fn runnables(db: &RootDatabase, file_id: FileId) -> Vec<Runnable> {\n     let sema = Semantics::new(db);\n "}, {"sha": "49fde1945c1216d459fca7365323e9dc2c6e2117", "filename": "crates/ide/src/status.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fstatus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fstatus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fstatus.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -31,6 +31,7 @@ fn macro_syntax_tree_stats(db: &RootDatabase) -> SyntaxTreeStats {\n //\n // | VS Code | **Rust Analyzer: Status**\n // |===\n+// image::https://user-images.githubusercontent.com/48062697/113065584-05f34500-91b1-11eb-98cc-5c196f76be7f.gif[]\n pub(crate) fn status(db: &RootDatabase, file_id: Option<FileId>) -> String {\n     let mut buf = String::new();\n     format_to!(buf, \"{}\\n\", FileTextQuery.in_db(db).entries::<FilesStats>());"}, {"sha": "633878d1c67f1b805b87a78e57c85a5da3cfccf8", "filename": "crates/ide/src/syntax_tree.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fsyntax_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fsyntax_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_tree.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -14,6 +14,7 @@ use syntax::{\n //\n // | VS Code | **Rust Analyzer: Show Syntax Tree**\n // |===\n+// image::https://user-images.githubusercontent.com/48062697/113065586-068bdb80-91b1-11eb-9507-fee67f9f45a0.gif[]\n pub(crate) fn syntax_tree(\n     db: &RootDatabase,\n     file_id: FileId,"}, {"sha": "9144681bfc76745472c13848f1065e9f1f507c2f", "filename": "crates/ide/src/typing/on_enter.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Ftyping%2Fon_enter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Ftyping%2Fon_enter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ftyping%2Fon_enter.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -32,6 +32,8 @@ use text_edit::TextEdit;\n //   \"when\": \"editorTextFocus && !suggestWidgetVisible && editorLangId == rust\"\n // }\n // ----\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113065578-04c21800-91b1-11eb-82b8-22b8c481e645.gif[]\n pub(crate) fn on_enter(db: &RootDatabase, position: FilePosition) -> Option<TextEdit> {\n     let parse = db.parse(position.file_id);\n     let file = parse.tree();"}, {"sha": "7312afe5310b414753f1db2f37510d6486361f9f", "filename": "crates/ide/src/view_hir.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fview_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide%2Fsrc%2Fview_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fview_hir.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -10,6 +10,7 @@ use syntax::{algo::find_node_at_offset, ast, AstNode};\n //\n // | VS Code | **Rust Analyzer: View Hir**\n // |===\n+// image::https://user-images.githubusercontent.com/48062697/113065588-068bdb80-91b1-11eb-9a78-0b4ef1e972fb.gif[]\n pub(crate) fn view_hir(db: &RootDatabase, position: FilePosition) -> String {\n     body_hir(db, position).unwrap_or_else(|| \"Not inside a function body\".to_string())\n }"}, {"sha": "5ccd7f7a2c63c1d9742cc608d5c6901ca93f2a9b", "filename": "crates/ide_assists/src/handlers/auto_import.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fauto_import.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -61,6 +61,8 @@ use crate::{AssistContext, AssistId, AssistKind, Assists, GroupLabel};\n // - `plain`: This setting does not impose any restrictions in imports.\n //\n // In `VS Code` the configuration for this is `rust-analyzer.assist.importPrefix`.\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113020673-b85be580-917a-11eb-9022-59585f35d4f8.gif[]\n \n // Assist: auto_import\n //"}, {"sha": "e86ffa8f8106794e746bd55d0e59ccff42a172c4", "filename": "crates/ide_completion/src/completions/postfix/format_like.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix%2Fformat_like.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix%2Fformat_like.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fpostfix%2Fformat_like.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -13,6 +13,8 @@\n //   + `logi` -> `log::info!(...)`\n //   + `logw` -> `log::warn!(...)`\n //   + `loge` -> `log::error!(...)`\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113020656-b560f500-917a-11eb-87de-02991f61beb8.gif[]\n \n use ide_db::helpers::SnippetCap;\n use syntax::ast::{self, AstToken};"}, {"sha": "831d543bbd11a0310a8158641bd02847fe92258a", "filename": "crates/ide_completion/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide_completion%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide_completion%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Flib.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -81,6 +81,8 @@ pub use crate::{\n // And the auto import completions, enabled with the `rust-analyzer.completion.autoimport.enable` setting and the corresponding LSP client capabilities.\n // Those are the additional completion options with automatic `use` import and options from all project importable items,\n // fuzzy matched agains the completion imput.\n+//\n+// image::https://user-images.githubusercontent.com/48062697/113020667-b72ab880-917a-11eb-8778-716cf26a0eb3.gif[]\n \n /// Main entry point for completion. We run completion as a two-phase process.\n ///"}, {"sha": "111e9325a434fd6c4357c1b0730fe0852b4db233", "filename": "crates/ide_db/src/apply_change.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide_db%2Fsrc%2Fapply_change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d7d715902a5b71ded8aac6a33a3f1697f2e51e/crates%2Fide_db%2Fsrc%2Fapply_change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fapply_change.rs?ref=55d7d715902a5b71ded8aac6a33a3f1697f2e51e", "patch": "@@ -101,6 +101,7 @@ impl RootDatabase {\n     //\n     // | VS Code | **Rust Analyzer: Memory Usage (Clears Database)**\n     // |===\n+    // image::https://user-images.githubusercontent.com/48062697/113065592-08559f00-91b1-11eb-8c96-64b88068ec02.gif[]\n     pub fn per_query_memory_usage(&mut self) -> Vec<(String, Bytes)> {\n         let mut acc: Vec<(String, Bytes)> = vec![];\n         let sweep = SweepStrategy::default().discard_values().sweep_all_revisions();"}]}