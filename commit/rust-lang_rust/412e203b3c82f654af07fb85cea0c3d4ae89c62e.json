{"sha": "412e203b3c82f654af07fb85cea0c3d4ae89c62e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxMmUyMDNiM2M4MmY2NTRhZjA3ZmI4NWNlYTBjM2Q0YWU4OWM2MmU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-08T19:40:16Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-08T21:07:41Z"}, "message": "Refactor load_library_crate and resolve_crate", "tree": {"sha": "a484169953f8cdf5f3c2fbec30513828c5b32c7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a484169953f8cdf5f3c2fbec30513828c5b32c7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/412e203b3c82f654af07fb85cea0c3d4ae89c62e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/412e203b3c82f654af07fb85cea0c3d4ae89c62e", "html_url": "https://github.com/rust-lang/rust/commit/412e203b3c82f654af07fb85cea0c3d4ae89c62e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/412e203b3c82f654af07fb85cea0c3d4ae89c62e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd8ab24da2fb8fcf06f9af664177f404b9a2e7e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd8ab24da2fb8fcf06f9af664177f404b9a2e7e6", "html_url": "https://github.com/rust-lang/rust/commit/dd8ab24da2fb8fcf06f9af664177f404b9a2e7e6"}], "stats": {"total": 37, "additions": 23, "deletions": 14}, "files": [{"sha": "5c54074fae19e4895a5d529acc83cbced8d247e9", "filename": "src/comp/metadata/creader.rs", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/412e203b3c82f654af07fb85cea0c3d4ae89c62e/src%2Fcomp%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/412e203b3c82f654af07fb85cea0c3d4ae89c62e/src%2Fcomp%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcreader.rs?ref=412e203b3c82f654af07fb85cea0c3d4ae89c62e", "patch": "@@ -220,32 +220,41 @@ fn get_metadata_section(str filename) -> option::t[vec[u8]] {\n     ret option::none[vec[u8]];\n }\n \n-fn load_library_crate(&session::session sess, span span, ast::crate_num cnum,\n+fn load_library_crate(&session::session sess, span span,\n                       &ast::ident ident, &(@ast::meta_item)[] metas,\n-                      &vec[str] library_search_paths) {\n+                      &vec[str] library_search_paths)\n+    -> tup(str, vec[u8]) {\n+\n     alt (find_library_crate(sess, ident, metas, library_search_paths)) {\n         case (some(?t)) {\n-            auto cstore = sess.get_cstore();\n-            auto cmeta = rec(name=ident,\n-                             data=t._1,\n-                             cnum_map = new_int_hash[ast::crate_num]());\n-            cstore::set_crate_data(cstore, cnum, cmeta);\n-            cstore::add_used_crate_file(cstore, t._0);\n-            ret;\n+            ret t;\n+        }\n+        case (none) {\n+            sess.span_fatal(span, #fmt(\"can't find crate for '%s'\", ident));\n         }\n-        case (_) { }\n     }\n-    sess.span_fatal(span, #fmt(\"can't find crate for '%s'\", ident));\n }\n \n fn resolve_crate(env e, ast::ident ident, (@ast::meta_item)[] metas,\n                  span span) -> ast::crate_num {\n     if (!e.crate_cache.contains_key(ident)) {\n+        auto cinfo = load_library_crate(e.sess, span, ident, metas,\n+                                        e.library_search_paths);\n+\n+        auto cfilename = cinfo._0;\n+        auto cdata = cinfo._1;\n+\n+        auto cmeta = rec(name=ident,\n+                         data=cdata,\n+                         cnum_map = new_int_hash[ast::crate_num]());\n+\n         auto cnum = e.next_crate_num;\n-        load_library_crate(e.sess, span, cnum, ident,\n-                           metas, e.library_search_paths);\n-        e.crate_cache.insert(ident, e.next_crate_num);\n+        e.crate_cache.insert(ident, cnum);\n         e.next_crate_num += 1;\n+\n+        auto cstore = e.sess.get_cstore();\n+        cstore::set_crate_data(cstore, cnum, cmeta);\n+        cstore::add_used_crate_file(cstore, cfilename);\n         ret cnum;\n     } else {\n         ret e.crate_cache.get(ident);"}]}