{"sha": "b375f1dd20bf07175ec06d13e1e9dc8b20287cd3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNzVmMWRkMjBiZjA3MTc1ZWMwNmQxM2UxZTlkYzhiMjAyODdjZDM=", "commit": {"author": {"name": "Dmitry Murzin", "email": "diralik@yandex.ru", "date": "2020-07-25T14:09:44Z"}, "committer": {"name": "Dmitry Murzin", "email": "diralik@yandex.ru", "date": "2020-07-25T14:11:55Z"}, "message": "Add suggestion for `iter_skip_next` lint", "tree": {"sha": "6e04da704ea08969e5b4b7587d89c9c00cf8eb81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e04da704ea08969e5b4b7587d89c9c00cf8eb81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b375f1dd20bf07175ec06d13e1e9dc8b20287cd3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEL6jLL1MPjzOQhhDzPafrjjExpFQFAl8cPasACgkQPafrjjEx\npFS4uQ//ffdnvAI4hqHxNo9EdRTYotEaytyxaKil/9tU3qbYSkUyuzY29ORFi8Au\nOlO6xzFlYdcdriPPMYKlPznW7kd2Mtcm6TE9LPf+ZXicvVh5vMTYWshL/J+2WIsf\nS0QCxVABKWcLYWfl0YhMDo/zOlU/tztFGRnZ876haFsl4X7b+IZu+sQX9Ku7E4qc\nyxN/DA3/9b2oU1xwoNBCOBDoAoS6nQcq4kLfPLR7lgWCTMBCMkKMEnZEk9lQ4TcA\nCa4TLX9EHnP1tWLa/DTELfPfkqTTE4DmSsEZTAK5ttT4b7pGZCETjnRkHtFQNUxm\nwk36S1JkFEQI6kkOPQpRR7gEXyBk7mIaDhklse83i8OItPOJxeLwwsHlPVK4cKGe\nIPg6BKhZH/lOIJZD0bBkmmL1L1PAyljf4iE8P49vcyCgMTrX2VaYDYOTyg3q/DaU\nhywK91Bn5BiPb77y3wUCi3h2ra7JfmGf+7zlDjomBQjh2sDOkuHxRwvQHXuaqxzg\nv/rQak/+4lzdQtU91vgm54+tc71dZHhPFL/xqptqYofGz73T1nkvDlQYLn+Tu/qG\nCs+yEZ1yFbnsJl5FNovXK0an+lng4ghvvYiMBSnCGQB3PGpFifP8ll64x6Q+B5r2\n9m0kTv9INOk3pe6gRw1RYLK74StHuk/vUHD9Ohbbqg3Gti/vIRA=\n=Guaz\n-----END PGP SIGNATURE-----", "payload": "tree 6e04da704ea08969e5b4b7587d89c9c00cf8eb81\nparent 79f948ec0a507f8dc663508ce013104847fcc9f3\nauthor Dmitry Murzin <diralik@yandex.ru> 1595686184 +0300\ncommitter Dmitry Murzin <diralik@yandex.ru> 1595686315 +0300\n\nAdd suggestion for `iter_skip_next` lint\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b375f1dd20bf07175ec06d13e1e9dc8b20287cd3", "html_url": "https://github.com/rust-lang/rust/commit/b375f1dd20bf07175ec06d13e1e9dc8b20287cd3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b375f1dd20bf07175ec06d13e1e9dc8b20287cd3/comments", "author": {"login": "dima74", "id": 6505554, "node_id": "MDQ6VXNlcjY1MDU1NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6505554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dima74", "html_url": "https://github.com/dima74", "followers_url": "https://api.github.com/users/dima74/followers", "following_url": "https://api.github.com/users/dima74/following{/other_user}", "gists_url": "https://api.github.com/users/dima74/gists{/gist_id}", "starred_url": "https://api.github.com/users/dima74/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dima74/subscriptions", "organizations_url": "https://api.github.com/users/dima74/orgs", "repos_url": "https://api.github.com/users/dima74/repos", "events_url": "https://api.github.com/users/dima74/events{/privacy}", "received_events_url": "https://api.github.com/users/dima74/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dima74", "id": 6505554, "node_id": "MDQ6VXNlcjY1MDU1NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6505554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dima74", "html_url": "https://github.com/dima74", "followers_url": "https://api.github.com/users/dima74/followers", "following_url": "https://api.github.com/users/dima74/following{/other_user}", "gists_url": "https://api.github.com/users/dima74/gists{/gist_id}", "starred_url": "https://api.github.com/users/dima74/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dima74/subscriptions", "organizations_url": "https://api.github.com/users/dima74/orgs", "repos_url": "https://api.github.com/users/dima74/repos", "events_url": "https://api.github.com/users/dima74/events{/privacy}", "received_events_url": "https://api.github.com/users/dima74/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79f948ec0a507f8dc663508ce013104847fcc9f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/79f948ec0a507f8dc663508ce013104847fcc9f3", "html_url": "https://github.com/rust-lang/rust/commit/79f948ec0a507f8dc663508ce013104847fcc9f3"}], "stats": {"total": 77, "additions": 48, "deletions": 29}, "files": [{"sha": "56686f6d24ff5aa6c8dc1a0e1a87fc57813db7f9", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b375f1dd20bf07175ec06d13e1e9dc8b20287cd3/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b375f1dd20bf07175ec06d13e1e9dc8b20287cd3/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=b375f1dd20bf07175ec06d13e1e9dc8b20287cd3", "patch": "@@ -1408,7 +1408,7 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n             [\"nth\", \"iter_mut\"] => lint_iter_nth(cx, expr, &arg_lists, true),\n             [\"nth\", ..] => lint_iter_nth_zero(cx, expr, arg_lists[0]),\n             [\"step_by\", ..] => lint_step_by(cx, expr, arg_lists[0]),\n-            [\"next\", \"skip\"] => lint_iter_skip_next(cx, expr),\n+            [\"next\", \"skip\"] => lint_iter_skip_next(cx, expr, arg_lists[1]),\n             [\"collect\", \"cloned\"] => lint_iter_cloned_collect(cx, expr, arg_lists[1]),\n             [\"as_ref\"] => lint_asref(cx, expr, \"as_ref\", arg_lists[0]),\n             [\"as_mut\"] => lint_asref(cx, expr, \"as_mut\", arg_lists[0]),\n@@ -2436,17 +2436,21 @@ fn lint_get_unwrap<'tcx>(cx: &LateContext<'tcx>, expr: &hir::Expr<'_>, get_args:\n     );\n }\n \n-fn lint_iter_skip_next(cx: &LateContext<'_>, expr: &hir::Expr<'_>) {\n+fn lint_iter_skip_next(cx: &LateContext<'_>, expr: &hir::Expr<'_>, skip_args: &[hir::Expr<'_>]) {\n     // lint if caller of skip is an Iterator\n     if match_trait_method(cx, expr, &paths::ITERATOR) {\n-        span_lint_and_help(\n-            cx,\n-            ITER_SKIP_NEXT,\n-            expr.span,\n-            \"called `skip(x).next()` on an iterator\",\n-            None,\n-            \"this is more succinctly expressed by calling `nth(x)`\",\n-        );\n+        if let [caller, n] = skip_args {\n+            let hint = format!(\".nth({})\", snippet(cx, n.span, \"..\"));\n+            span_lint_and_sugg(\n+                cx,\n+                ITER_SKIP_NEXT,\n+                expr.span.trim_start(caller.span).unwrap(),\n+                \"called `skip(x).next()` on an iterator\",\n+                \"use `nth` instead\",\n+                hint,\n+                Applicability::MachineApplicable,\n+            );\n+        }\n     }\n }\n "}, {"sha": "928b6acb95101648f9f4465e5a8495cbb79fa06c", "filename": "tests/ui/iter_skip_next.fixed", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b375f1dd20bf07175ec06d13e1e9dc8b20287cd3/tests%2Fui%2Fiter_skip_next.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/b375f1dd20bf07175ec06d13e1e9dc8b20287cd3/tests%2Fui%2Fiter_skip_next.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_skip_next.fixed?ref=b375f1dd20bf07175ec06d13e1e9dc8b20287cd3", "patch": "@@ -0,0 +1,22 @@\n+// run-rustfix\n+// aux-build:option_helpers.rs\n+\n+#![warn(clippy::iter_skip_next)]\n+#![allow(clippy::blacklisted_name)]\n+#![allow(clippy::iter_nth)]\n+\n+extern crate option_helpers;\n+\n+use option_helpers::IteratorFalsePositives;\n+\n+/// Checks implementation of `ITER_SKIP_NEXT` lint\n+fn main() {\n+    let some_vec = vec![0, 1, 2, 3];\n+    let _ = some_vec.iter().nth(42);\n+    let _ = some_vec.iter().cycle().nth(42);\n+    let _ = (1..10).nth(10);\n+    let _ = &some_vec[..].iter().nth(3);\n+    let foo = IteratorFalsePositives { foo: 0 };\n+    let _ = foo.skip(42).next();\n+    let _ = foo.filter().skip(42).next();\n+}"}, {"sha": "7075e2598ebee2903cdb6d70ab922190ccc2ec62", "filename": "tests/ui/iter_skip_next.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b375f1dd20bf07175ec06d13e1e9dc8b20287cd3/tests%2Fui%2Fiter_skip_next.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b375f1dd20bf07175ec06d13e1e9dc8b20287cd3/tests%2Fui%2Fiter_skip_next.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_skip_next.rs?ref=b375f1dd20bf07175ec06d13e1e9dc8b20287cd3", "patch": "@@ -1,15 +1,17 @@\n+// run-rustfix\n // aux-build:option_helpers.rs\n \n #![warn(clippy::iter_skip_next)]\n #![allow(clippy::blacklisted_name)]\n+#![allow(clippy::iter_nth)]\n \n extern crate option_helpers;\n \n use option_helpers::IteratorFalsePositives;\n \n /// Checks implementation of `ITER_SKIP_NEXT` lint\n-fn iter_skip_next() {\n-    let mut some_vec = vec![0, 1, 2, 3];\n+fn main() {\n+    let some_vec = vec![0, 1, 2, 3];\n     let _ = some_vec.iter().skip(42).next();\n     let _ = some_vec.iter().cycle().skip(42).next();\n     let _ = (1..10).skip(10).next();\n@@ -18,5 +20,3 @@ fn iter_skip_next() {\n     let _ = foo.skip(42).next();\n     let _ = foo.filter().skip(42).next();\n }\n-\n-fn main() {}"}, {"sha": "feedc2f288a2bf81855ae6a2b49507c0fcac44fa", "filename": "tests/ui/iter_skip_next.stderr", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b375f1dd20bf07175ec06d13e1e9dc8b20287cd3/tests%2Fui%2Fiter_skip_next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b375f1dd20bf07175ec06d13e1e9dc8b20287cd3/tests%2Fui%2Fiter_skip_next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_skip_next.stderr?ref=b375f1dd20bf07175ec06d13e1e9dc8b20287cd3", "patch": "@@ -1,35 +1,28 @@\n error: called `skip(x).next()` on an iterator\n-  --> $DIR/iter_skip_next.rs:13:13\n+  --> $DIR/iter_skip_next.rs:15:28\n    |\n LL |     let _ = some_vec.iter().skip(42).next();\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                            ^^^^^^^^^^^^^^^^ help: use `nth` instead: `.nth(42)`\n    |\n    = note: `-D clippy::iter-skip-next` implied by `-D warnings`\n-   = help: this is more succinctly expressed by calling `nth(x)`\n \n error: called `skip(x).next()` on an iterator\n-  --> $DIR/iter_skip_next.rs:14:13\n+  --> $DIR/iter_skip_next.rs:16:36\n    |\n LL |     let _ = some_vec.iter().cycle().skip(42).next();\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: this is more succinctly expressed by calling `nth(x)`\n+   |                                    ^^^^^^^^^^^^^^^^ help: use `nth` instead: `.nth(42)`\n \n error: called `skip(x).next()` on an iterator\n-  --> $DIR/iter_skip_next.rs:15:13\n+  --> $DIR/iter_skip_next.rs:17:20\n    |\n LL |     let _ = (1..10).skip(10).next();\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: this is more succinctly expressed by calling `nth(x)`\n+   |                    ^^^^^^^^^^^^^^^^ help: use `nth` instead: `.nth(10)`\n \n error: called `skip(x).next()` on an iterator\n-  --> $DIR/iter_skip_next.rs:16:14\n+  --> $DIR/iter_skip_next.rs:18:33\n    |\n LL |     let _ = &some_vec[..].iter().skip(3).next();\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: this is more succinctly expressed by calling `nth(x)`\n+   |                                 ^^^^^^^^^^^^^^^ help: use `nth` instead: `.nth(3)`\n \n error: aborting due to 4 previous errors\n "}]}