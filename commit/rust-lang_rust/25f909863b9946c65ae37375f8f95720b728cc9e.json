{"sha": "25f909863b9946c65ae37375f8f95720b728cc9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ZjkwOTg2M2I5OTQ2YzY1YWUzNzM3NWY4Zjk1NzIwYjcyOGNjOWU=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-28T12:59:47Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-28T22:07:12Z"}, "message": "update lintcheck_crates logs and fix typos", "tree": {"sha": "e40c73499d5c9058c84355a176a2cfe173a1db23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e40c73499d5c9058c84355a176a2cfe173a1db23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25f909863b9946c65ae37375f8f95720b728cc9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25f909863b9946c65ae37375f8f95720b728cc9e", "html_url": "https://github.com/rust-lang/rust/commit/25f909863b9946c65ae37375f8f95720b728cc9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25f909863b9946c65ae37375f8f95720b728cc9e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45d6a77ce884f41c2ef5e1160aabbf355403d5cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/45d6a77ce884f41c2ef5e1160aabbf355403d5cd", "html_url": "https://github.com/rust-lang/rust/commit/45d6a77ce884f41c2ef5e1160aabbf355403d5cd"}], "stats": {"total": 99, "additions": 77, "deletions": 22}, "files": [{"sha": "dfee28f1a87128e0e4ef92472e72ba5968e55a7d", "filename": "clippy_dev/lintcheck_crates.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25f909863b9946c65ae37375f8f95720b728cc9e/clippy_dev%2Flintcheck_crates.toml", "raw_url": "https://github.com/rust-lang/rust/raw/25f909863b9946c65ae37375f8f95720b728cc9e/clippy_dev%2Flintcheck_crates.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Flintcheck_crates.toml?ref=25f909863b9946c65ae37375f8f95720b728cc9e", "patch": "@@ -27,7 +27,7 @@ cxx = {name = \"cxx\", versions = ['1.0.32']}\n ryu = {name = \"ryu\", version = ['1.0.5']}\n serde_yaml = {name = \"serde_yaml\", versions = ['0.8.17']}\n thiserror = {name = \"thiserror\", versions = ['1.0.24']}\n-# some embark crates there are other interesting crates but\n+# some embark crates, there are other interesting crates but\n # unfortunately adding them increases lintcheck runtime drastically\n cfg-expr = {name = \"cfg-expr\", versions = ['0.7.1']}\n puffin = {name = \"puffin\", git_url = \"https://github.com/EmbarkStudios/puffin\", git_hash = \"02dd4a3\"}"}, {"sha": "1db0445559cd55e5cbee3e4de974e509eb253eaf", "filename": "clippy_dev/src/lintcheck.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/25f909863b9946c65ae37375f8f95720b728cc9e/clippy_dev%2Fsrc%2Flintcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25f909863b9946c65ae37375f8f95720b728cc9e/clippy_dev%2Fsrc%2Flintcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flintcheck.rs?ref=25f909863b9946c65ae37375f8f95720b728cc9e", "patch": "@@ -318,8 +318,8 @@ impl LintcheckConfig {\n \n         let sources_toml_path = PathBuf::from(sources_toml);\n \n-        // for the path where we save the lint results, get the filename without extenstion ( so for\n-        // wasd.toml, use \"wasd\"....)\n+        // for the path where we save the lint results, get the filename without extension (so for\n+        // wasd.toml, use \"wasd\"...)\n         let filename: PathBuf = sources_toml_path.file_stem().unwrap().into();\n         let lintcheck_results_path = PathBuf::from(format!(\"lintcheck-logs/{}_logs.txt\", filename.display()));\n "}, {"sha": "167024b3a056baa623a831886eb731fd82da91eb", "filename": "lintcheck-logs/lintcheck_crates_logs.txt", "status": "modified", "additions": 74, "deletions": 19, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/25f909863b9946c65ae37375f8f95720b728cc9e/lintcheck-logs%2Flintcheck_crates_logs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/25f909863b9946c65ae37375f8f95720b728cc9e/lintcheck-logs%2Flintcheck_crates_logs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck-logs%2Flintcheck_crates_logs.txt?ref=25f909863b9946c65ae37375f8f95720b728cc9e", "patch": "@@ -1448,6 +1448,36 @@ target/lintcheck/sources/cargo-0.49.0/src/cargo/util/workspace.rs:52:1 clippy::m\n target/lintcheck/sources/cargo-0.49.0/src/cargo/util/workspace.rs:56:1 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n target/lintcheck/sources/cargo-0.49.0/src/cargo/util/workspace.rs:60:1 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n target/lintcheck/sources/cargo-0.49.0/src/cargo/util/workspace.rs:64:1 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/error.rs:107:13 clippy::enum_glob_use \"usage of wildcard import for enum variants\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/error.rs:5:1 clippy::module_name_repetitions \"item name ends with its containing module's name\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/error.rs:74:13 clippy::enum_glob_use \"usage of wildcard import for enum variants\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/error.rs:91:24 clippy::if_not_else \"unnecessary boolean `not` operation\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/lexer.rs:102:9 clippy::items_after_statements \"adding items after statements is confusing, since items exist from the start of the scope\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/lexer.rs:125:33 clippy::redundant_slicing \"redundant slicing of the whole range\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/lexer.rs:4:5 clippy::doc_markdown \"you should put bare URLs between `<`/`>` or make a proper Markdown link\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/lexer.rs:58:5 clippy::must_use_candidate \"this method could have a `#[must_use]` attribute\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/lexer.rs:76:1 clippy::module_name_repetitions \"item name starts with its containing module's name\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/lexer.rs:97:9 clippy::items_after_statements \"adding items after statements is confusing, since items exist from the start of the scope\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/mod.rs:351:13 clippy::enum_glob_use \"usage of wildcard import for enum variants\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/mod.rs:464:5 clippy::missing_panics_doc \"docs for function which may panic missing `# Panics` section\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/mod.rs:57:13 clippy::enum_glob_use \"usage of wildcard import for enum variants\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/mod.rs:586:33 clippy::match_same_arms \"this `match` has identical arm bodies\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/mod.rs:599:32 clippy::match_same_arms \"this `match` has identical arm bodies\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/parser.rs:116:31 clippy::similar_names \"binding's name is too similar to existing binding\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/parser.rs:124:36 clippy::similar_names \"binding's name is too similar to existing binding\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/parser.rs:17:5 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/parser.rs:17:5 clippy::too_many_lines \"this function has too many lines (345/100)\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/parser.rs:22:13 clippy::shadow_unrelated \"`original` is being shadowed\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/parser.rs:243:36 clippy::single_match_else \"you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/parser.rs:254:34 clippy::single_match_else \"you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/parser.rs:25:9 clippy::items_after_statements \"adding items after statements is confusing, since items exist from the start of the scope\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/parser.rs:390:9 clippy::single_match_else \"you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/parser.rs:392:17 clippy::if_not_else \"unnecessary `!=` operation\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/expr/parser.rs:67:13 clippy::items_after_statements \"adding items after statements is confusing, since items exist from the start of the scope\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/lib.rs:1:null clippy::cargo_common_metadata \"package `cfg-expr` is missing `package.categories` metadata\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/targets/builtins.rs:11:5 clippy::wildcard_imports \"usage of wildcard import\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/targets/mod.rs:139:1 clippy::must_use_candidate \"this function could have a `#[must_use]` attribute\"\n+target/lintcheck/sources/cfg-expr-0.7.1/src/targets/mod.rs:153:1 clippy::must_use_candidate \"this function could have a `#[must_use]` attribute\"\n target/lintcheck/sources/cxx-1.0.32/src/rust_string.rs:15:20 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n target/lintcheck/sources/cxx-1.0.32/src/rust_string.rs:19:24 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n target/lintcheck/sources/cxx-1.0.32/src/rust_vec.rs:21:20 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n@@ -3207,6 +3237,12 @@ target/lintcheck/sources/ripgrep-12.1.1/crates/core/search.rs:533:36 clippy::cas\n target/lintcheck/sources/ripgrep-12.1.1/crates/core/search.rs:533:5 clippy::cast_precision_loss \"casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)\"\n target/lintcheck/sources/ripgrep-12.1.1/crates/core/subject.rs:20:1 clippy::module_name_repetitions \"item name starts with its containing module's name\"\n target/lintcheck/sources/ripgrep-12.1.1/crates/core/subject.rs:4:1 clippy::single_component_path_imports \"this import is redundant\"\n+target/lintcheck/sources/rpmalloc-0.2.0/src/lib.rs:103:5 clippy::must_use_candidate \"this method could have a `#[must_use]` attribute\"\n+target/lintcheck/sources/rpmalloc-0.2.0/src/lib.rs:114:5 clippy::must_use_candidate \"this method could have a `#[must_use]` attribute\"\n+target/lintcheck/sources/rpmalloc-0.2.0/src/lib.rs:71:73 clippy::doc_markdown \"you should put bare URLs between `<`/`>` or make a proper Markdown link\"\n+target/lintcheck/sources/rpmalloc-0.2.0/src/lib.rs:72:50 clippy::doc_markdown \"you should put bare URLs between `<`/`>` or make a proper Markdown link\"\n+target/lintcheck/sources/rpmalloc-0.2.0/src/lib.rs:92:9 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n+target/lintcheck/sources/rpmalloc-0.2.0/src/lib.rs:95:21 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n target/lintcheck/sources/serde-1.0.118/src/de/mod.rs:1592:9 clippy::let_underscore_drop \"non-binding `let` on a type that implements `Drop`\"\n target/lintcheck/sources/serde-1.0.118/src/de/mod.rs:1616:9 clippy::let_underscore_drop \"non-binding `let` on a type that implements `Drop`\"\n target/lintcheck/sources/serde-1.0.118/src/de/mod.rs:1627:9 clippy::let_underscore_drop \"non-binding `let` on a type that implements `Drop`\"\n@@ -3221,6 +3257,25 @@ target/lintcheck/sources/syn-1.0.54/src/lit.rs:1397:40 clippy::redundant_else \"r\n target/lintcheck/sources/syn-1.0.54/src/lit.rs:1405:28 clippy::redundant_else \"redundant else block\"\n target/lintcheck/sources/syn-1.0.54/src/lit.rs:1485:32 clippy::redundant_else \"redundant else block\"\n target/lintcheck/sources/syn-1.0.54/src/token.rs:974:5 clippy::missing_panics_doc \"docs for function which may panic missing `# Panics` section\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/errors.rs:9:5 clippy::upper_case_acronyms \"name `HTTP` contains a capitalized acronym\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/lib.rs:1:null clippy::cargo_common_metadata \"package `tame-oidc` is missing `package.categories` metadata\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/oidc.rs:111:1 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/oidc.rs:127:1 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/oidc.rs:52:5 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/oidc.rs:60:1 clippy::from_over_into \"an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/oidc.rs:76:1 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/provider.rs:107:1 clippy::missing_panics_doc \"docs for function which may panic missing `# Panics` section\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/provider.rs:107:1 clippy::must_use_candidate \"this function could have a `#[must_use]` attribute\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/provider.rs:118:1 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/provider.rs:143:1 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/provider.rs:159:1 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/provider.rs:26:5 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/provider.rs:38:5 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/provider.rs:57:5 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/provider.rs:71:5 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/provider.rs:77:12 clippy::upper_case_acronyms \"name `JWK` contains a capitalized acronym\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/provider.rs:90:12 clippy::upper_case_acronyms \"name `JWKS` contains a capitalized acronym\"\n+target/lintcheck/sources/tame-oidc-0.1.0/src/provider.rs:95:5 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n target/lintcheck/sources/thiserror-1.0.24/src/lib.rs:1:null clippy::cargo_common_metadata \"package `thiserror` is missing `package.keywords` metadata\"\n target/lintcheck/sources/unicode-xid-0.2.1/src/lib.rs:1:null clippy::cargo_common_metadata \"package `unicode-xid` is missing `package.categories` metadata\"\n target/lintcheck/sources/unicode-xid-0.2.1/src/lib.rs:57:64 clippy::doc_markdown \"you should put `XID_Start` between ticks in the documentation\"\n@@ -3416,7 +3471,6 @@ clippy::comparison_chain 1\n clippy::expect_fun_call 1\n clippy::explicit_deref_methods 1\n clippy::from_iter_instead_of_collect 1\n-clippy::from_over_into 1\n clippy::int_plus_one 1\n clippy::manual_flatten 1\n clippy::manual_saturating_arithmetic 1\n@@ -3426,7 +3480,6 @@ clippy::or_fun_call 1\n clippy::precedence 1\n clippy::pub_enum_variant_names 1\n clippy::redundant_clone 1\n-clippy::redundant_slicing 1\n clippy::same_item_push 1\n clippy::should_implement_trait 1\n clippy::stable_sort_primitive 1\n@@ -3438,13 +3491,15 @@ clippy::while_let_on_iterator 1\n clippy::comparison_to_empty 2\n clippy::expl_impl_clone_on_copy 2\n clippy::filter_map 2\n+clippy::from_over_into 2\n clippy::len_zero 2\n clippy::manual_non_exhaustive 2\n clippy::match_on_vec_items 2\n clippy::option_as_ref_deref 2\n clippy::option_option 2\n clippy::question_mark 2\n clippy::redundant_pattern_matching 2\n+clippy::redundant_slicing 2\n clippy::type_complexity 2\n clippy::unnecessary_cast 2\n clippy::unused_unit 2\n@@ -3458,7 +3513,6 @@ clippy::mut_mut 3\n clippy::ptr_arg 3\n clippy::zero_ptr 3\n clippy::too_many_arguments 4\n-clippy::upper_case_acronyms 4\n clippy::explicit_iter_loop 5\n clippy::field_reassign_with_default 5\n clippy::identity_op 5\n@@ -3476,6 +3530,7 @@ clippy::implicit_clone 7\n clippy::map_clone 7\n clippy::option_map_unit_fn 7\n clippy::range_plus_one 7\n+clippy::upper_case_acronyms 7\n clippy::invalid_upcast_comparisons 8\n clippy::needless_question_mark 8\n clippy::wrong_self_convention 8\n@@ -3486,43 +3541,43 @@ clippy::missing_safety_doc 10\n clippy::needless_doctest_main 10\n clippy::needless_lifetimes 12\n clippy::linkedlist 14\n-clippy::shadow_unrelated 14\n clippy::single_char_add_str 14\n clippy::option_if_let_else 15\n+clippy::shadow_unrelated 15\n clippy::needless_pass_by_value 18\n-clippy::cargo_common_metadata 19\n clippy::cast_possible_wrap 19\n clippy::cast_sign_loss 19\n-clippy::ptr_as_ptr 19\n clippy::unnecessary_wraps 19\n clippy::unused_self 19\n clippy::unusual_byte_groupings 19\n clippy::map_unwrap_or 20\n clippy::struct_excessive_bools 20\n+clippy::cargo_common_metadata 21\n+clippy::ptr_as_ptr 21\n clippy::redundant_static_lifetimes 21\n clippy::cast_lossless 23\n clippy::default_trait_access 26\n clippy::let_underscore_drop 26\n clippy::trivially_copy_pass_by_ref 26\n clippy::redundant_else 29\n-clippy::too_many_lines 34\n-clippy::if_not_else 36\n-clippy::enum_glob_use 40\n+clippy::too_many_lines 35\n+clippy::if_not_else 38\n clippy::unseparated_literal_suffix 41\n clippy::cast_precision_loss 44\n-clippy::single_match_else 45\n-clippy::missing_panics_doc 57\n+clippy::enum_glob_use 44\n+clippy::single_match_else 48\n clippy::inline_always 59\n-clippy::match_same_arms 60\n-clippy::similar_names 81\n+clippy::missing_panics_doc 59\n+clippy::match_same_arms 62\n+clippy::similar_names 83\n clippy::cast_possible_truncation 95\n clippy::redundant_field_names 111\n clippy::redundant_closure_for_method_calls 135\n-clippy::items_after_statements 139\n-clippy::module_name_repetitions 144\n-clippy::wildcard_imports 163\n-clippy::doc_markdown 181\n-clippy::missing_errors_doc 343\n+clippy::items_after_statements 143\n+clippy::module_name_repetitions 146\n+clippy::wildcard_imports 164\n+clippy::doc_markdown 184\n+clippy::missing_errors_doc 356\n clippy::unreadable_literal 365\n-clippy::must_use_candidate 565\n+clippy::must_use_candidate 571\n ICEs:"}]}