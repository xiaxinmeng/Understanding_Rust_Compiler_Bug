{"sha": "0c388be8d1988a966ef62c545b996b9da0f71e93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjMzg4YmU4ZDE5ODhhOTY2ZWY2MmM1NDViOTk2YjlkYTBmNzFlOTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-05T20:11:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-05T20:11:54Z"}, "message": "auto merge of #9731 : Kimundi/rust/SendStrTaskName, r=alexcrichton\n\nThis resolves a FIXME in `std::rt::task`.", "tree": {"sha": "16f9b35567953a2fa86d56ffdec42ed8d493d9be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16f9b35567953a2fa86d56ffdec42ed8d493d9be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c388be8d1988a966ef62c545b996b9da0f71e93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c388be8d1988a966ef62c545b996b9da0f71e93", "html_url": "https://github.com/rust-lang/rust/commit/0c388be8d1988a966ef62c545b996b9da0f71e93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c388be8d1988a966ef62c545b996b9da0f71e93/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1506dac10faf4b48f3d3debb9b20f2f55352deca", "url": "https://api.github.com/repos/rust-lang/rust/commits/1506dac10faf4b48f3d3debb9b20f2f55352deca", "html_url": "https://github.com/rust-lang/rust/commit/1506dac10faf4b48f3d3debb9b20f2f55352deca"}, {"sha": "517298de484b2a9c88689e8313bed5fde80acd79", "url": "https://api.github.com/repos/rust-lang/rust/commits/517298de484b2a9c88689e8313bed5fde80acd79", "html_url": "https://github.com/rust-lang/rust/commit/517298de484b2a9c88689e8313bed5fde80acd79"}], "stats": {"total": 122, "additions": 116, "deletions": 6}, "files": [{"sha": "2d1b57cebf5a97a5ae5dd41dded32538c017664a", "filename": "src/libstd/rt/task.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c388be8d1988a966ef62c545b996b9da0f71e93/src%2Flibstd%2Frt%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c388be8d1988a966ef62c545b996b9da0f71e93/src%2Flibstd%2Frt%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Ftask.rs?ref=0c388be8d1988a966ef62c545b996b9da0f71e93", "patch": "@@ -33,6 +33,7 @@ use rt::context::Context;\n use unstable::finally::Finally;\n use task::spawn::Taskgroup;\n use cell::Cell;\n+use send_str::SendStr;\n \n // The Task struct represents all state associated with a rust\n // task. There are at this point two primary \"subtypes\" of task,\n@@ -49,8 +50,7 @@ pub struct Task {\n     taskgroup: Option<Taskgroup>,\n     death: Death,\n     destroyed: bool,\n-    // FIXME(#6874/#7599) use StringRef to save on allocations\n-    name: Option<~str>,\n+    name: Option<SendStr>,\n     coroutine: Option<Coroutine>,\n     sched: Option<~Scheduler>,\n     task_type: TaskType,"}, {"sha": "3ef99d48a034546c9225d279f70290253ee48d9d", "filename": "src/libstd/send_str.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0c388be8d1988a966ef62c545b996b9da0f71e93/src%2Flibstd%2Fsend_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c388be8d1988a966ef62c545b996b9da0f71e93/src%2Flibstd%2Fsend_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsend_str.rs?ref=0c388be8d1988a966ef62c545b996b9da0f71e93", "patch": "@@ -64,6 +64,11 @@ impl IntoSendStr for &'static str {\n     fn into_send_str(self) -> SendStr { SendStrStatic(self) }\n }\n \n+impl IntoSendStr for SendStr {\n+    #[inline]\n+    fn into_send_str(self) -> SendStr { self }\n+}\n+\n /*\n Section: String trait impls.\n `SendStr` should behave like a normal string, so we don't derive."}, {"sha": "8e5353341eac850cb6495f401ec38eb5131d4ae9", "filename": "src/libstd/task/mod.rs", "status": "modified", "additions": 35, "deletions": 4, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/0c388be8d1988a966ef62c545b996b9da0f71e93/src%2Flibstd%2Ftask%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c388be8d1988a966ef62c545b996b9da0f71e93/src%2Flibstd%2Ftask%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftask%2Fmod.rs?ref=0c388be8d1988a966ef62c545b996b9da0f71e93", "patch": "@@ -63,6 +63,7 @@ use rt::in_green_task_context;\n use rt::local::Local;\n use unstable::finally::Finally;\n use util;\n+use send_str::{SendStr, IntoSendStr};\n \n #[cfg(test)] use cast;\n #[cfg(test)] use comm::SharedChan;\n@@ -148,7 +149,7 @@ pub struct TaskOpts {\n     watched: bool,\n     indestructible: bool,\n     notify_chan: Option<Chan<TaskResult>>,\n-    name: Option<~str>,\n+    name: Option<SendStr>,\n     sched: SchedOpts,\n     stack_size: Option<uint>\n }\n@@ -295,8 +296,8 @@ impl TaskBuilder {\n \n     /// Name the task-to-be. Currently the name is used for identification\n     /// only in failure messages.\n-    pub fn name(&mut self, name: ~str) {\n-        self.opts.name = Some(name);\n+    pub fn name<S: IntoSendStr>(&mut self, name: S) {\n+        self.opts.name = Some(name.into_send_str());\n     }\n \n     /// Configure a custom scheduler mode for the task.\n@@ -944,7 +945,7 @@ fn test_unnamed_task() {\n }\n \n #[test]\n-fn test_named_task() {\n+fn test_owned_named_task() {\n     use rt::test::run_in_newsched_task;\n \n     do run_in_newsched_task {\n@@ -958,6 +959,36 @@ fn test_named_task() {\n     }\n }\n \n+#[test]\n+fn test_static_named_task() {\n+    use rt::test::run_in_newsched_task;\n+\n+    do run_in_newsched_task {\n+        let mut t = task();\n+        t.name(\"ada lovelace\");\n+        do t.spawn {\n+            do with_task_name |name| {\n+                assert!(name.unwrap() == \"ada lovelace\");\n+            }\n+        }\n+    }\n+}\n+\n+#[test]\n+fn test_send_named_task() {\n+    use rt::test::run_in_newsched_task;\n+\n+    do run_in_newsched_task {\n+        let mut t = task();\n+        t.name(\"ada lovelace\".into_send_str());\n+        do t.spawn {\n+            do with_task_name |name| {\n+                assert!(name.unwrap() == \"ada lovelace\");\n+            }\n+        }\n+    }\n+}\n+\n #[test]\n fn test_run_basic() {\n     let (po, ch) = stream::<()>();"}, {"sha": "5d4de9ea43c11557b94371da071936ade5672dfc", "filename": "src/test/run-fail/fail-task-name-none.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0c388be8d1988a966ef62c545b996b9da0f71e93/src%2Ftest%2Frun-fail%2Ffail-task-name-none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c388be8d1988a966ef62c545b996b9da0f71e93/src%2Ftest%2Frun-fail%2Ffail-task-name-none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-task-name-none.rs?ref=0c388be8d1988a966ef62c545b996b9da0f71e93", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// error-pattern:task '<unnamed>' failed at 'test'\n+\n+fn main() {\n+    do spawn {\n+        fail2!(\"test\");\n+    }\n+}"}, {"sha": "f00f18cf5c2abd2a27150d7af786efd1b010fab3", "filename": "src/test/run-fail/fail-task-name-owned.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0c388be8d1988a966ef62c545b996b9da0f71e93/src%2Ftest%2Frun-fail%2Ffail-task-name-owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c388be8d1988a966ef62c545b996b9da0f71e93/src%2Ftest%2Frun-fail%2Ffail-task-name-owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-task-name-owned.rs?ref=0c388be8d1988a966ef62c545b996b9da0f71e93", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// error-pattern:task 'owned name' failed at 'test'\n+\n+fn main() {\n+    let mut t = ::std::task::task();\n+    t.name(~\"owned name\");\n+    do t.spawn {\n+        fail2!(\"test\");\n+    }\n+}"}, {"sha": "e44f78094ff48d4ad19abfe63b5a16eeee595110", "filename": "src/test/run-fail/fail-task-name-send-str.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0c388be8d1988a966ef62c545b996b9da0f71e93/src%2Ftest%2Frun-fail%2Ffail-task-name-send-str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c388be8d1988a966ef62c545b996b9da0f71e93/src%2Ftest%2Frun-fail%2Ffail-task-name-send-str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-task-name-send-str.rs?ref=0c388be8d1988a966ef62c545b996b9da0f71e93", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// error-pattern:task 'send name' failed at 'test'\n+\n+fn main() {\n+    let mut t = ::std::task::task();\n+    t.name(\"send name\".to_send_str());\n+    do t.spawn {\n+        fail2!(\"test\");\n+    }\n+}"}, {"sha": "0b502d8a35ee9490a96d580a86108b8caf79227c", "filename": "src/test/run-fail/fail-task-name-static.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0c388be8d1988a966ef62c545b996b9da0f71e93/src%2Ftest%2Frun-fail%2Ffail-task-name-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c388be8d1988a966ef62c545b996b9da0f71e93/src%2Ftest%2Frun-fail%2Ffail-task-name-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-task-name-static.rs?ref=0c388be8d1988a966ef62c545b996b9da0f71e93", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// error-pattern:task 'static name' failed at 'test'\n+\n+fn main() {\n+    let mut t = ::std::task::task();\n+    t.name(\"static name\");\n+    do t.spawn {\n+        fail2!(\"test\");\n+    }\n+}"}]}