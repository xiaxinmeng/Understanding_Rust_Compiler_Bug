{"sha": "2cc52f08b30642cf995fc39ceb5f3e4741a3dee3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYzUyZjA4YjMwNjQyY2Y5OTVmYzM5Y2ViNWYzZTQ3NDFhM2RlZTM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-03-31T20:42:35Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-09T15:45:14Z"}, "message": "Use cmp::Reverse instead of subtraction", "tree": {"sha": "0aad97928173b752555302e98e7357667714eaec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0aad97928173b752555302e98e7357667714eaec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cc52f08b30642cf995fc39ceb5f3e4741a3dee3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cc52f08b30642cf995fc39ceb5f3e4741a3dee3", "html_url": "https://github.com/rust-lang/rust/commit/2cc52f08b30642cf995fc39ceb5f3e4741a3dee3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cc52f08b30642cf995fc39ceb5f3e4741a3dee3/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1aa61526a7acd4c3c2a1b2126b77502c818aa4bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1aa61526a7acd4c3c2a1b2126b77502c818aa4bb", "html_url": "https://github.com/rust-lang/rust/commit/1aa61526a7acd4c3c2a1b2126b77502c818aa4bb"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "f914176864ae5fb733c43f55e89fbdb82a02ef92", "filename": "src/librustc_mir/monomorphize/partitioning.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2cc52f08b30642cf995fc39ceb5f3e4741a3dee3/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cc52f08b30642cf995fc39ceb5f3e4741a3dee3/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs?ref=2cc52f08b30642cf995fc39ceb5f3e4741a3dee3", "patch": "@@ -112,11 +112,11 @@ use rustc::ty::{self, TyCtxt, InstanceDef};\n use rustc::ty::item_path::characteristic_def_id_of_type;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use std::collections::hash_map::Entry;\n+use std::cmp;\n use syntax::ast::NodeId;\n use syntax::symbol::{Symbol, InternedString};\n use rustc::mir::mono::MonoItem;\n use monomorphize::item::{MonoItemExt, InstantiationMode};\n-use core::usize;\n \n pub use rustc::mir::mono::CodegenUnit;\n \n@@ -509,7 +509,7 @@ fn merge_codegen_units<'tcx>(initial_partitioning: &mut PreInliningPartitioning<\n     // Merge the two smallest codegen units until the target size is reached.\n     while codegen_units.len() > target_cgu_count {\n         // Sort small cgus to the back\n-        codegen_units.sort_by_cached_key(|cgu| usize::MAX - cgu.size_estimate());\n+        codegen_units.sort_by_cached_key(|cgu| cmp::Reverse(cgu.size_estimate()));\n         let mut smallest = codegen_units.pop().unwrap();\n         let second_smallest = codegen_units.last_mut().unwrap();\n "}, {"sha": "09aba830d050de149bb21d02830a51d910a49495", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2cc52f08b30642cf995fc39ceb5f3e4741a3dee3/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cc52f08b30642cf995fc39ceb5f3e4741a3dee3/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=2cc52f08b30642cf995fc39ceb5f3e4741a3dee3", "patch": "@@ -82,7 +82,8 @@ use std::ffi::CString;\n use std::str;\n use std::sync::Arc;\n use std::time::{Instant, Duration};\n-use std::{i32, usize};\n+use std::i32;\n+use std::cmp;\n use std::sync::mpsc;\n use syntax_pos::Span;\n use syntax_pos::symbol::InternedString;\n@@ -830,7 +831,7 @@ pub fn trans_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     // a bit more efficiently.\n     let codegen_units = {\n         let mut codegen_units = codegen_units;\n-        codegen_units.sort_by_cached_key(|cgu| usize::MAX - cgu.size_estimate());\n+        codegen_units.sort_by_cached_key(|cgu| cmp::Reverse(cgu.size_estimate()));\n         codegen_units\n     };\n "}]}