{"sha": "4c9933c01657349438f9170c2ef7d6352144b224", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjOTkzM2MwMTY1NzM0OTQzOGY5MTcwYzJlZjdkNjM1MjE0NGIyMjQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-27T22:38:39Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-27T22:38:39Z"}, "message": "check_canceled is a method", "tree": {"sha": "47b9b3ecde0c9bbfcc8a9ba4fd063a743eaf9c64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47b9b3ecde0c9bbfcc8a9ba4fd063a743eaf9c64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c9933c01657349438f9170c2ef7d6352144b224", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c9933c01657349438f9170c2ef7d6352144b224", "html_url": "https://github.com/rust-lang/rust/commit/4c9933c01657349438f9170c2ef7d6352144b224", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c9933c01657349438f9170c2ef7d6352144b224/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "806ea03b64455a0c10fd8a8d6d98ed4e7ac15058", "url": "https://api.github.com/repos/rust-lang/rust/commits/806ea03b64455a0c10fd8a8d6d98ed4e7ac15058", "html_url": "https://github.com/rust-lang/rust/commit/806ea03b64455a0c10fd8a8d6d98ed4e7ac15058"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "d7fffc18894d967c158c0181ac1f435a9078378c", "filename": "crates/ra_analysis/src/db.rs", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4c9933c01657349438f9170c2ef7d6352144b224/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9933c01657349438f9170c2ef7d6352144b224/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb.rs?ref=4c9933c01657349438f9170c2ef7d6352144b224", "patch": "@@ -6,7 +6,6 @@ use ra_syntax::{SourceFileNode, SyntaxNode};\n use salsa::{self, Database};\n \n use crate::{\n-    db,\n     hir,\n     symbol_index::SymbolIndex,\n     syntax_ptr::SyntaxPtr,\n@@ -59,14 +58,6 @@ impl Default for RootDatabase {\n     }\n }\n \n-pub(crate) fn check_canceled(db: &impl salsa::Database) -> Cancelable<()> {\n-    if db.salsa_runtime().is_current_revision_canceled() {\n-        Err(Canceled)\n-    } else {\n-        Ok(())\n-    }\n-}\n-\n impl salsa::ParallelDatabase for RootDatabase {\n     fn snapshot(&self) -> salsa::Snapshot<RootDatabase> {\n         salsa::Snapshot::new(RootDatabase {\n@@ -80,7 +71,11 @@ impl salsa::ParallelDatabase for RootDatabase {\n pub(crate) trait BaseDatabase: salsa::Database {\n     fn id_maps(&self) -> &IdMaps;\n     fn check_canceled(&self) -> Cancelable<()> {\n-        check_canceled(self)\n+        if self.salsa_runtime().is_current_revision_canceled() {\n+            Err(Canceled)\n+        } else {\n+            Ok(())\n+        }\n     }\n }\n \n@@ -171,7 +166,7 @@ fn file_lines(db: &impl SyntaxDatabase, file_id: FileId) -> Arc<LineIndex> {\n     Arc::new(LineIndex::new(&*text))\n }\n fn file_symbols(db: &impl SyntaxDatabase, file_id: FileId) -> Cancelable<Arc<SymbolIndex>> {\n-    db::check_canceled(db)?;\n+    db.check_canceled()?;\n     let syntax = db.file_syntax(file_id);\n     Ok(Arc::new(SymbolIndex::for_file(file_id, syntax)))\n }"}, {"sha": "d51ca2d59adedb33e9876ae0ab842c44957d33ba", "filename": "crates/ra_analysis/src/hir/module/imp.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4c9933c01657349438f9170c2ef7d6352144b224/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmodule%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9933c01657349438f9170c2ef7d6352144b224/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmodule%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmodule%2Fimp.rs?ref=4c9933c01657349438f9170c2ef7d6352144b224", "patch": "@@ -8,7 +8,6 @@ use relative_path::RelativePathBuf;\n use rustc_hash::{FxHashMap, FxHashSet};\n \n use crate::{\n-    db,\n     hir::HirDatabase,\n     input::{SourceRoot, SourceRootId},\n     Cancelable, FileId, FileResolverImp,\n@@ -52,7 +51,7 @@ pub(crate) fn module_tree(\n     db: &impl HirDatabase,\n     source_root: SourceRootId,\n ) -> Cancelable<Arc<ModuleTree>> {\n-    db::check_canceled(db)?;\n+    db.check_canceled()?;\n     let res = create_module_tree(db, source_root)?;\n     Ok(Arc::new(res))\n }"}, {"sha": "d389400851c8f8e66419c4c9f08ffee4b552ba49", "filename": "crates/ra_analysis/src/hir/module/nameres.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c9933c01657349438f9170c2ef7d6352144b224/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmodule%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9933c01657349438f9170c2ef7d6352144b224/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmodule%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmodule%2Fnameres.rs?ref=4c9933c01657349438f9170c2ef7d6352144b224", "patch": "@@ -248,7 +248,7 @@ where\n         }\n \n         for &module_id in self.input.keys() {\n-            crate::db::check_canceled(self.db)?;\n+            self.db.check_canceled()?;\n             self.resolve_imports(module_id);\n         }\n         Ok(self.result)"}, {"sha": "60086d1aeda1117c917c7d4880dd7feca31a8dd5", "filename": "crates/ra_analysis/src/input.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c9933c01657349438f9170c2ef7d6352144b224/crates%2Fra_analysis%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9933c01657349438f9170c2ef7d6352144b224/crates%2Fra_analysis%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Finput.rs?ref=4c9933c01657349438f9170c2ef7d6352144b224", "patch": "@@ -33,7 +33,7 @@ impl CrateGraph {\n pub trait FileResolver: fmt::Debug + Send + Sync + 'static {\n     fn file_stem(&self, file_id: FileId) -> String;\n     fn resolve(&self, file_id: FileId, path: &RelativePath) -> Option<FileId>;\n-    fn debug_path(&self, _file_id: FileId) -> Option<std::path::PathBuf> {\n+    fn debug_path(&self, _1file_id: FileId) -> Option<std::path::PathBuf> {\n         None\n     }\n }"}]}