{"sha": "36e3409f6753fd92bf40608bc1d47c0de3161352", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2ZTM0MDlmNjc1M2ZkOTJiZjQwNjA4YmMxZDQ3YzBkZTMxNjEzNTI=", "commit": {"author": {"name": "Nadrieril", "email": "Nadrieril@users.noreply.github.com", "date": "2020-11-13T23:18:55Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2020-11-16T01:00:33Z"}, "message": "Apply suggestions from code review\n\nCo-authored-by: varkor <github@varkor.com>", "tree": {"sha": "5859df20811ced76b966928e22290adabdb0b978", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5859df20811ced76b966928e22290adabdb0b978"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36e3409f6753fd92bf40608bc1d47c0de3161352", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36e3409f6753fd92bf40608bc1d47c0de3161352", "html_url": "https://github.com/rust-lang/rust/commit/36e3409f6753fd92bf40608bc1d47c0de3161352", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36e3409f6753fd92bf40608bc1d47c0de3161352/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9da2b372fb14c339779eeee02c9bb7468effc6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9da2b372fb14c339779eeee02c9bb7468effc6d", "html_url": "https://github.com/rust-lang/rust/commit/b9da2b372fb14c339779eeee02c9bb7468effc6d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "6bea2381862e93099c9358da8b96f18d8a3485a8", "filename": "compiler/rustc_mir_build/src/thir/pattern/_match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/36e3409f6753fd92bf40608bc1d47c0de3161352/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36e3409f6753fd92bf40608bc1d47c0de3161352/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2F_match.rs?ref=36e3409f6753fd92bf40608bc1d47c0de3161352", "patch": "@@ -1588,7 +1588,7 @@ fn all_constructors<'p, 'tcx>(pcx: PatCtxt<'_, 'p, 'tcx>) -> Vec<Constructor<'tc\n             let is_declared_nonexhaustive = cx.is_foreign_non_exhaustive_enum(pcx.ty);\n \n             // If `exhaustive_patterns` is disabled and our scrutinee is an empty enum, we treat it\n-            // as though it had an \"unknown\" constructor to avoid exposing its emptyness. The\n+            // as though it had an \"unknown\" constructor to avoid exposing its emptiness. The\n             // exception is if the pattern is at the top level, because we want empty matches to be\n             // considered exhaustive.\n             let is_secretly_empty = def.variants.is_empty()\n@@ -1640,7 +1640,7 @@ fn all_constructors<'p, 'tcx>(pcx: PatCtxt<'_, 'p, 'tcx>) -> Vec<Constructor<'tc\n             vec![make_range(0, max)]\n         }\n         // If `exhaustive_patterns` is disabled and our scrutinee is the never type, we cannot\n-        // expose its emptyness. The exception is if the pattern is at the top level, because we\n+        // expose its emptiness. The exception is if the pattern is at the top level, because we\n         // want empty matches to be considered exhaustive.\n         ty::Never if !cx.tcx.features().exhaustive_patterns && !pcx.is_top_level => {\n             vec![NonExhaustive]"}, {"sha": "70253a4fc901b17ad89b57a4fa679aeb48d35043", "filename": "src/test/ui/rfc-2008-non-exhaustive/enum_same_crate_empty_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/36e3409f6753fd92bf40608bc1d47c0de3161352/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum_same_crate_empty_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36e3409f6753fd92bf40608bc1d47c0de3161352/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum_same_crate_empty_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum_same_crate_empty_match.rs?ref=36e3409f6753fd92bf40608bc1d47c0de3161352", "patch": "@@ -25,7 +25,7 @@ pub enum EmptyNonExhaustiveEnum {}\n fn empty_non_exhaustive(x: EmptyNonExhaustiveEnum) {\n     match x {}\n     match x {\n-        _ => {}, //~ ERROR unreachable pattern\n+        _ => {} //~ ERROR unreachable pattern\n     }\n }\n "}, {"sha": "966f3a2e414857f3e87aad7af9de953104b033d6", "filename": "src/test/ui/rfc-2008-non-exhaustive/enum_same_crate_empty_match.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/36e3409f6753fd92bf40608bc1d47c0de3161352/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum_same_crate_empty_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/36e3409f6753fd92bf40608bc1d47c0de3161352/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum_same_crate_empty_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum_same_crate_empty_match.stderr?ref=36e3409f6753fd92bf40608bc1d47c0de3161352", "patch": "@@ -1,7 +1,7 @@\n error: unreachable pattern\n   --> $DIR/enum_same_crate_empty_match.rs:28:9\n    |\n-LL |         _ => {},\n+LL |         _ => {}\n    |         ^\n    |\n note: the lint level is defined here"}]}