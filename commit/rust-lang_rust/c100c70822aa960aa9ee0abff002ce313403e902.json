{"sha": "c100c70822aa960aa9ee0abff002ce313403e902", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxMDBjNzA4MjJhYTk2MGFhOWVlMGFiZmYwMDJjZTMxMzQwM2U5MDI=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-07-12T12:13:15Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-07-13T10:48:42Z"}, "message": "Build sys_root in driver with PathBuf instead of String", "tree": {"sha": "2a15351ebbd56d6551cbc4522333c93bf65aa056", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a15351ebbd56d6551cbc4522333c93bf65aa056"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c100c70822aa960aa9ee0abff002ce313403e902", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl0ptwoACgkQaTCGhp1Q\nZje7lw/9Fjr1D6oL2RGvw67v3rZglCwBanxqYG0QNupPEe7owmJln3i/J81a72Ic\nmSdrtiDOy2qDa0hrYaAhHSULJg13VnEfqsD2dQzKoktU5w3qqdiWvVgzNVKx88+M\nr4K9Ok/ZhuCHV2c82JyZ6eV6D4TN6y3Ejpj2m+S2ZNqgby35tT1ta1/n+RVhD22q\nx2n2HzKq0vfv+MVHSZLK5ym2RRxbq0PFH10D/Ayn8oWUe46mWnwZWBHQ4HXjqb3Z\nb01qckLDs63XxM7FvTbcr6TLNKfBnHTK1NbqcpbjPaU9xLklLzN3pvqFCgHX1oQ1\nPu8T/Qvj1iDJCR2lnJhNojK5qEd6B/p7JDyL0Na3nNNTOHP/oI0p/GwerbglN3Wu\n1xTrcuSomgn31LhmL/QVc5EPt9orFB7NfFLgm/JOqJcnAH8g5+SgD8kV46xtpzMF\noXafOIMelD2B0QkbVX2SmczuXTllQShaHnP436CEY/+BtHQFuD996GLvISo2NlHe\na8l7KRz3mWkwpHO4i43bYee2BRyEnkEwmbrmPuXzbW5qk0cK1PDzqwai5IGT3YXf\ntB4AKWCPc6M9tJMiOr5/biBWx7vVSrF2caN+mdR+Aawq7iPAQx4QXLLcMI5p+32+\nYl9JnB9242XHu1PwcTCqmpjrjmb09cILYi2WHM3WEfN5iLdnTD8=\n=TJe+\n-----END PGP SIGNATURE-----", "payload": "tree 2a15351ebbd56d6551cbc4522333c93bf65aa056\nparent 6b8ebcc0c8a441a7f871cab1b69c2433be42d5e2\nauthor flip1995 <hello@philkrones.com> 1562933595 +0200\ncommitter flip1995 <hello@philkrones.com> 1563014922 +0200\n\nBuild sys_root in driver with PathBuf instead of String\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c100c70822aa960aa9ee0abff002ce313403e902", "html_url": "https://github.com/rust-lang/rust/commit/c100c70822aa960aa9ee0abff002ce313403e902", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c100c70822aa960aa9ee0abff002ce313403e902/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b8ebcc0c8a441a7f871cab1b69c2433be42d5e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b8ebcc0c8a441a7f871cab1b69c2433be42d5e2", "html_url": "https://github.com/rust-lang/rust/commit/6b8ebcc0c8a441a7f871cab1b69c2433be42d5e2"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "545c43f9a45fedfdf2a91d0850003adf51415a8c", "filename": "src/driver.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c100c70822aa960aa9ee0abff002ce313403e902/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c100c70822aa960aa9ee0abff002ce313403e902/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=c100c70822aa960aa9ee0abff002ce313403e902", "patch": "@@ -12,7 +12,7 @@ extern crate rustc_plugin;\n use rustc_interface::interface;\n use rustc_tools_util::*;\n \n-use std::path::Path;\n+use std::path::{Path, PathBuf};\n use std::process::{exit, Command};\n \n mod lintlist;\n@@ -270,12 +270,19 @@ pub fn main() {\n             let sys_root_arg = arg_value(&orig_args, \"--sysroot\", |_| true);\n             let have_sys_root_arg = sys_root_arg.is_some();\n             let sys_root = sys_root_arg\n-                .map(std::string::ToString::to_string)\n-                .or_else(|| std::env::var(\"SYSROOT\").ok())\n+                .map(PathBuf::from)\n+                .or_else(|| std::env::var(\"SYSROOT\").ok().map(PathBuf::from))\n                 .or_else(|| {\n                     let home = option_env!(\"RUSTUP_HOME\").or(option_env!(\"MULTIRUST_HOME\"));\n                     let toolchain = option_env!(\"RUSTUP_TOOLCHAIN\").or(option_env!(\"MULTIRUST_TOOLCHAIN\"));\n-                    home.and_then(|home| toolchain.map(|toolchain| format!(\"{}/toolchains/{}\", home, toolchain)))\n+                    home.and_then(|home| {\n+                        toolchain.map(|toolchain| {\n+                            let mut path = PathBuf::from(home);\n+                            path.push(\"toolchains\");\n+                            path.push(toolchain);\n+                            path\n+                        })\n+                    })\n                 })\n                 .or_else(|| {\n                     Command::new(\"rustc\")\n@@ -284,9 +291,10 @@ pub fn main() {\n                         .output()\n                         .ok()\n                         .and_then(|out| String::from_utf8(out.stdout).ok())\n-                        .map(|s| s.trim().to_owned())\n+                        .map(|s| PathBuf::from(s.trim()))\n                 })\n-                .or_else(|| option_env!(\"SYSROOT\").map(String::from))\n+                .or_else(|| option_env!(\"SYSROOT\").map(PathBuf::from))\n+                .map(|pb| pb.to_string_lossy().to_string())\n                 .expect(\"need to specify SYSROOT env var during clippy compilation, or use rustup or multirust\");\n \n             // Setting RUSTC_WRAPPER causes Cargo to pass 'rustc' as the first argument."}]}