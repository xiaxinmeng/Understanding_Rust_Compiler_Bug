{"sha": "dd58d4e45ee2f066711557cf2da53d8661a56f34", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNThkNGU0NWVlMmYwNjY3MTE1NTdjZjJkYTUzZDg2NjFhNTZmMzQ=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-08-23T12:44:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-23T12:44:25Z"}, "message": "Rollup merge of #43983 - ids1024:redox-path-prefix, r=alexcrichton\n\nRedox: correct is_absolute() and has_root()\n\nThis is awkward, but representing schemes properly in `Components` is not easily possible without breaking backwards compatibility, as discussed earlier in https://github.com/rust-lang/rust/pull/37702.\n\nBut these methods can be corrected anyway.", "tree": {"sha": "cf1e9306196417f950975f0c923d8000fd450791", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf1e9306196417f950975f0c923d8000fd450791"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd58d4e45ee2f066711557cf2da53d8661a56f34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd58d4e45ee2f066711557cf2da53d8661a56f34", "html_url": "https://github.com/rust-lang/rust/commit/dd58d4e45ee2f066711557cf2da53d8661a56f34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd58d4e45ee2f066711557cf2da53d8661a56f34/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4902e6714ff3b54b745631125b3c01bc01ae096d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4902e6714ff3b54b745631125b3c01bc01ae096d", "html_url": "https://github.com/rust-lang/rust/commit/4902e6714ff3b54b745631125b3c01bc01ae096d"}, {"sha": "fe2d661931852c4303b45bed472640bd0b32448f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe2d661931852c4303b45bed472640bd0b32448f", "html_url": "https://github.com/rust-lang/rust/commit/fe2d661931852c4303b45bed472640bd0b32448f"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "830b9dc475d6daf534bd0e4e803aa379f9bc389a", "filename": "src/libstd/path.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/dd58d4e45ee2f066711557cf2da53d8661a56f34/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd58d4e45ee2f066711557cf2da53d8661a56f34/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=dd58d4e45ee2f066711557cf2da53d8661a56f34", "patch": "@@ -323,6 +323,11 @@ unsafe fn u8_slice_as_os_str(s: &[u8]) -> &OsStr {\n     mem::transmute(s)\n }\n \n+// Detect scheme on Redox\n+fn has_redox_scheme(s: &[u8]) -> bool {\n+    cfg!(target_os = \"redox\") && s.split(|b| *b == b'/').next().unwrap_or(b\"\").contains(&b':')\n+}\n+\n ////////////////////////////////////////////////////////////////////////////////\n // Cross-platform, iterator-independent parsing\n ////////////////////////////////////////////////////////////////////////////////\n@@ -1685,8 +1690,12 @@ impl Path {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[allow(deprecated)]\n     pub fn is_absolute(&self) -> bool {\n-        // FIXME: Remove target_os = \"redox\" and allow Redox prefixes\n-        self.has_root() && (cfg!(unix) || cfg!(target_os = \"redox\") || self.prefix().is_some())\n+        if !cfg!(target_os = \"redox\") {\n+            self.has_root() && (cfg!(unix) || self.prefix().is_some())\n+        } else {\n+            // FIXME: Allow Redox prefixes\n+            has_redox_scheme(self.as_u8_slice())\n+        }\n     }\n \n     /// Returns `true` if the `Path` is relative, i.e. not absolute.\n@@ -2050,7 +2059,8 @@ impl Path {\n         Components {\n             path: self.as_u8_slice(),\n             prefix,\n-            has_physical_root: has_physical_root(self.as_u8_slice(), prefix),\n+            has_physical_root: has_physical_root(self.as_u8_slice(), prefix) ||\n+                               has_redox_scheme(self.as_u8_slice()),\n             front: State::Prefix,\n             back: State::Body,\n         }"}]}