{"sha": "9269e83b37e8e5fd9cef12255fafbc6db6220035", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyNjllODNiMzdlOGU1ZmQ5Y2VmMTIyNTVmYWZiYzZkYjYyMjAwMzU=", "commit": {"author": {"name": "Peter Atashian", "email": "retep998@gmail.com", "date": "2018-02-11T18:40:46Z"}, "committer": {"name": "Peter Atashian", "email": "retep998@gmail.com", "date": "2018-02-11T18:40:46Z"}, "message": "Add an unstable FileTypeExt extension trait for Windows", "tree": {"sha": "f71548d43ef52d8f165b281ca31060733c6bd787", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f71548d43ef52d8f165b281ca31060733c6bd787"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9269e83b37e8e5fd9cef12255fafbc6db6220035", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQEcBAABCAAGBQJagI4yAAoJEN4E2eJ1WbyK5NIIAKmDPXkSxNnG58TsFr5IHj4v\ntPrtDdznGAHS8k1ipOqNHk1ZXszmZ+juiDHvH8sVgwJ/BpLHxY3W6e/6PFq4g9YP\n2FeJ53xH9TClv9lD41rEslw7TRmvGA9FeDfBCq09k8BH6h0usRPTduHXbIJJ3cWC\n5NEXB11+G1f+Le7KbOTa8w0NABgfTZ/iXDM34ScrW53J3FFXuMQw3lKy3r30q7Ge\nIYMGSh/QKoVXugDfdoOtkZ5fk5tKlUT23X/gH+OSJUtEU/DgNCNvEw4MYdon6D7C\nW/cLHZEx1DcjTTi9ZZkBqwQzvsYz0Qu5L0YTA71kSwSSmxNghgxE3h8ggSoAE2g=\n=NHhr\n-----END PGP SIGNATURE-----", "payload": "tree f71548d43ef52d8f165b281ca31060733c6bd787\nparent c42d76d3c80b4938e26e628706363b677fde6ca1\nauthor Peter Atashian <retep998@gmail.com> 1518374446 -0500\ncommitter Peter Atashian <retep998@gmail.com> 1518374446 -0500\n\nAdd an unstable FileTypeExt extension trait for Windows\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9269e83b37e8e5fd9cef12255fafbc6db6220035", "html_url": "https://github.com/rust-lang/rust/commit/9269e83b37e8e5fd9cef12255fafbc6db6220035", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9269e83b37e8e5fd9cef12255fafbc6db6220035/comments", "author": {"login": "retep998", "id": 666308, "node_id": "MDQ6VXNlcjY2NjMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/666308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retep998", "html_url": "https://github.com/retep998", "followers_url": "https://api.github.com/users/retep998/followers", "following_url": "https://api.github.com/users/retep998/following{/other_user}", "gists_url": "https://api.github.com/users/retep998/gists{/gist_id}", "starred_url": "https://api.github.com/users/retep998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retep998/subscriptions", "organizations_url": "https://api.github.com/users/retep998/orgs", "repos_url": "https://api.github.com/users/retep998/repos", "events_url": "https://api.github.com/users/retep998/events{/privacy}", "received_events_url": "https://api.github.com/users/retep998/received_events", "type": "User", "site_admin": false}, "committer": {"login": "retep998", "id": 666308, "node_id": "MDQ6VXNlcjY2NjMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/666308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retep998", "html_url": "https://github.com/retep998", "followers_url": "https://api.github.com/users/retep998/followers", "following_url": "https://api.github.com/users/retep998/following{/other_user}", "gists_url": "https://api.github.com/users/retep998/gists{/gist_id}", "starred_url": "https://api.github.com/users/retep998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retep998/subscriptions", "organizations_url": "https://api.github.com/users/retep998/orgs", "repos_url": "https://api.github.com/users/retep998/repos", "events_url": "https://api.github.com/users/retep998/events{/privacy}", "received_events_url": "https://api.github.com/users/retep998/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c42d76d3c80b4938e26e628706363b677fde6ca1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c42d76d3c80b4938e26e628706363b677fde6ca1", "html_url": "https://github.com/rust-lang/rust/commit/c42d76d3c80b4938e26e628706363b677fde6ca1"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "38bf4cca851fe3bfc4395ed7fbd4c13b4ba0ce74", "filename": "src/libstd/sys/windows/ext/fs.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9269e83b37e8e5fd9cef12255fafbc6db6220035/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9269e83b37e8e5fd9cef12255fafbc6db6220035/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Ffs.rs?ref=9269e83b37e8e5fd9cef12255fafbc6db6220035", "patch": "@@ -445,6 +445,24 @@ impl MetadataExt for Metadata {\n     fn file_size(&self) -> u64 { self.as_inner().size() }\n }\n \n+/// Add support for the Windows specific fact that a symbolic link knows whether it is a file\n+/// or directory.\n+#[unstable(feature = \"windows_file_type_ext\", issue = \"0\")]\n+pub trait FileTypeExt {\n+    /// Returns whether this file type is a symbolic link that is also a directory.\n+    #[unstable(feature = \"windows_file_type_ext\", issue = \"0\")]\n+    fn is_symlink_dir(&self) -> bool;\n+    /// Returns whether this file type is a symbolic link that is also a file.\n+    #[unstable(feature = \"windows_file_type_ext\", issue = \"0\")]\n+    fn is_symlink_file(&self) -> bool;\n+}\n+\n+#[unstable(feature = \"windows_file_type_ext\", issue = \"0\")]\n+impl FileTypeExt for fs::FileType {\n+    fn is_symlink_dir(&self) -> bool { self.as_inner().is_symlink_dir() }\n+    fn is_symlink_file(&self) -> bool { self.as_inner().is_symlink_file() }\n+}\n+\n /// Creates a new file symbolic link on the filesystem.\n ///\n /// The `dst` path will be a file symbolic link pointing to the `src`"}, {"sha": "082d4689c7ba8ef16e60f3597d7e263ab40128b4", "filename": "src/libstd/sys/windows/fs.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9269e83b37e8e5fd9cef12255fafbc6db6220035/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9269e83b37e8e5fd9cef12255fafbc6db6220035/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs?ref=9269e83b37e8e5fd9cef12255fafbc6db6220035", "patch": "@@ -534,6 +534,9 @@ impl FileType {\n     pub fn is_symlink_dir(&self) -> bool {\n         self.is_symlink() && self.is_directory()\n     }\n+    pub fn is_symlink_file(&self) -> bool {\n+        self.is_symlink() && !self.is_directory()\n+    }\n     fn is_directory(&self) -> bool {\n         self.attributes & c::FILE_ATTRIBUTE_DIRECTORY != 0\n     }"}]}