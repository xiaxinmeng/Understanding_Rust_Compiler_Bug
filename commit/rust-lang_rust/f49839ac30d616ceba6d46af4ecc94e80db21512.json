{"sha": "f49839ac30d616ceba6d46af4ecc94e80db21512", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0OTgzOWFjMzBkNjE2Y2ViYTZkNDZhZjRlY2M5NGU4MGRiMjE1MTI=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-04-22T12:09:20Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-04-22T12:09:20Z"}, "message": "Add comment", "tree": {"sha": "28d1c7c0cbbe25a4cd47ad37f7a0c8cd79a878f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28d1c7c0cbbe25a4cd47ad37f7a0c8cd79a878f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f49839ac30d616ceba6d46af4ecc94e80db21512", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f49839ac30d616ceba6d46af4ecc94e80db21512", "html_url": "https://github.com/rust-lang/rust/commit/f49839ac30d616ceba6d46af4ecc94e80db21512", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f49839ac30d616ceba6d46af4ecc94e80db21512/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54897f66f8daeec04042ab416718407b13641b86", "url": "https://api.github.com/repos/rust-lang/rust/commits/54897f66f8daeec04042ab416718407b13641b86", "html_url": "https://github.com/rust-lang/rust/commit/54897f66f8daeec04042ab416718407b13641b86"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "ea0b998c2e3dcdd270557ffda801719972dea8a2", "filename": "src/shims/fs.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f49839ac30d616ceba6d46af4ecc94e80db21512/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f49839ac30d616ceba6d46af4ecc94e80db21512/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=f49839ac30d616ceba6d46af4ecc94e80db21512", "patch": "@@ -1084,6 +1084,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                     Ok(-1)\n                 }\n             } else {\n+                // The file is not writable\n                 let einval = this.eval_libc(\"EINVAL\")?;\n                 this.set_last_error(einval)?;\n                 Ok(-1)"}]}