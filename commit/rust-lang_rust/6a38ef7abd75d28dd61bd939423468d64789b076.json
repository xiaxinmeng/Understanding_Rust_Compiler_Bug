{"sha": "6a38ef7abd75d28dd61bd939423468d64789b076", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhMzhlZjdhYmQ3NWQyOGRkNjFiZDkzOTQyMzQ2OGQ2NDc4OWIwNzY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-03T11:12:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-03T11:12:01Z"}, "message": "Rollup merge of #63218 - lenary:riscv-non-experimental, r=alexcrichton\n\nrustbuild: RISC-V is no longer an experimental LLVM target\n\nThis moves RISC-V from the experimental LLVM targets to the\nregular LLVM targets. RISC-V was made non-experimental in\nhttps://reviews.llvm.org/rL366399\n\nI have also sorted the list of LLVM targets, and changed the code\naround setting llvm_exp_targets (and its default) to match the code\nsetting llvm_targets (and its default), ensuring future changes to\nthe defaults, as LLVM targets become stable, affect as few places as\npossible.\n\nGiven WebAssembly is in `LLVM_ALL_TARGETS` and is therefore built by default (and has been since October 2018), I'm not sure why rust still has it in `experimental-targets`. I'm happy to update this PR to move it into the main list of LLVM targets.\n\nr? @alexcrichton", "tree": {"sha": "f7d1374b7c6bfb08a5918d76632bcf97bbef2c17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7d1374b7c6bfb08a5918d76632bcf97bbef2c17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a38ef7abd75d28dd61bd939423468d64789b076", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdRWwBCRBK7hj4Ov3rIwAAdHIIAE9Bf/nrU6B1knmO7I39IuR3\nqdnh/t9mHQe6BGnUaUbBwDFuop6tr351xaIpFyRalSWKu5TXMWcdV2TaOErJKHce\ngIq+J950pBEbtK19hAWeZZHpIAyiKQy/F8ZBzQj5Z8w9XsixjPNxPEpvmMdJhm5V\nYtFVHAhkcY61sifFCPOrXbRURVCUFbXBu0I/QNkOERU96hDS9Nps7S3UkuF2FdLk\nDGmMIG7G3QQy2ItF6pSHlmIbCxMxS6yPxPShhjTLKic3H//AU2ho/PzXmWAnOo1P\nnDSM62bEhdjWbIvQGSxQ58v37WGABfNdFubskc8Zlr9Kr4UioeFUnxWZp/pr6BE=\n=jtXu\n-----END PGP SIGNATURE-----\n", "payload": "tree f7d1374b7c6bfb08a5918d76632bcf97bbef2c17\nparent 15b5aacab65156f06d9f622f75808842dc90e005\nparent 2921de63bb2287f6971f3fe54cae96035c8e1ec6\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1564830721 +0200\ncommitter GitHub <noreply@github.com> 1564830721 +0200\n\nRollup merge of #63218 - lenary:riscv-non-experimental, r=alexcrichton\n\nrustbuild: RISC-V is no longer an experimental LLVM target\n\nThis moves RISC-V from the experimental LLVM targets to the\nregular LLVM targets. RISC-V was made non-experimental in\nhttps://reviews.llvm.org/rL366399\n\nI have also sorted the list of LLVM targets, and changed the code\naround setting llvm_exp_targets (and its default) to match the code\nsetting llvm_targets (and its default), ensuring future changes to\nthe defaults, as LLVM targets become stable, affect as few places as\npossible.\n\nGiven WebAssembly is in `LLVM_ALL_TARGETS` and is therefore built by default (and has been since October 2018), I'm not sure why rust still has it in `experimental-targets`. I'm happy to update this PR to move it into the main list of LLVM targets.\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a38ef7abd75d28dd61bd939423468d64789b076", "html_url": "https://github.com/rust-lang/rust/commit/6a38ef7abd75d28dd61bd939423468d64789b076", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a38ef7abd75d28dd61bd939423468d64789b076/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15b5aacab65156f06d9f622f75808842dc90e005", "url": "https://api.github.com/repos/rust-lang/rust/commits/15b5aacab65156f06d9f622f75808842dc90e005", "html_url": "https://github.com/rust-lang/rust/commit/15b5aacab65156f06d9f622f75808842dc90e005"}, {"sha": "2921de63bb2287f6971f3fe54cae96035c8e1ec6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2921de63bb2287f6971f3fe54cae96035c8e1ec6", "html_url": "https://github.com/rust-lang/rust/commit/2921de63bb2287f6971f3fe54cae96035c8e1ec6"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "6816eaeaa9486e66e99465094a1c4dce76e2a5ab", "filename": "config.toml.example", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6a38ef7abd75d28dd61bd939423468d64789b076/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/6a38ef7abd75d28dd61bd939423468d64789b076/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=6a38ef7abd75d28dd61bd939423468d64789b076", "patch": "@@ -57,14 +57,13 @@\n # support. You'll need to write a target specification at least, and most\n # likely, teach rustc about the C ABI of the target. Get in touch with the\n # Rust team and file an issue if you need assistance in porting!\n-#targets = \"X86;ARM;AArch64;Mips;PowerPC;SystemZ;MSP430;Sparc;NVPTX;Hexagon\"\n+#targets = \"AArch64;ARM;Hexagon;MSP430;Mips;NVPTX;PowerPC;RISCV;Sparc;SystemZ;WebAssembly;X86\"\n \n # LLVM experimental targets to build support for. These targets are specified in\n # the same format as above, but since these targets are experimental, they are\n # not built by default and the experimental Rust compilation targets that depend\n-# on them will not work unless the user opts in to building them. By default the\n-# `WebAssembly` and `RISCV` targets are enabled when compiling LLVM from scratch.\n-#experimental-targets = \"WebAssembly;RISCV\"\n+# on them will not work unless the user opts in to building them.\n+#experimental-targets = \"\"\n \n # Cap the number of parallel linker invocations when compiling LLVM.\n # This can be useful when building LLVM with debug info, which significantly"}, {"sha": "5a5f4ac72520444c44812996bf6a0a582f673665", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6a38ef7abd75d28dd61bd939423468d64789b076/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a38ef7abd75d28dd61bd939423468d64789b076/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=6a38ef7abd75d28dd61bd939423468d64789b076", "patch": "@@ -75,7 +75,7 @@ pub struct Config {\n     pub llvm_link_shared: bool,\n     pub llvm_clang_cl: Option<String>,\n     pub llvm_targets: Option<String>,\n-    pub llvm_experimental_targets: String,\n+    pub llvm_experimental_targets: Option<String>,\n     pub llvm_link_jobs: Option<u32>,\n     pub llvm_version_suffix: Option<String>,\n     pub llvm_use_linker: Option<String>,\n@@ -524,8 +524,7 @@ impl Config {\n             set(&mut config.llvm_static_stdcpp, llvm.static_libstdcpp);\n             set(&mut config.llvm_link_shared, llvm.link_shared);\n             config.llvm_targets = llvm.targets.clone();\n-            config.llvm_experimental_targets = llvm.experimental_targets.clone()\n-                .unwrap_or_else(|| \"WebAssembly;RISCV\".to_string());\n+            config.llvm_experimental_targets = llvm.experimental_targets.clone();\n             config.llvm_link_jobs = llvm.link_jobs;\n             config.llvm_version_suffix = llvm.version_suffix.clone();\n             config.llvm_clang_cl = llvm.clang_cl.clone();"}, {"sha": "f02def3e1b05dcf0c32a94c7237af828903d0a65", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6a38ef7abd75d28dd61bd939423468d64789b076/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a38ef7abd75d28dd61bd939423468d64789b076/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=6a38ef7abd75d28dd61bd939423468d64789b076", "patch": "@@ -125,14 +125,18 @@ impl Step for Llvm {\n         } else {\n             match builder.config.llvm_targets {\n                 Some(ref s) => s,\n-                None => \"X86;ARM;AArch64;Mips;PowerPC;SystemZ;MSP430;Sparc;NVPTX;Hexagon\",\n+                None => \"AArch64;ARM;Hexagon;MSP430;Mips;NVPTX;PowerPC;RISCV;\\\n+                         Sparc;SystemZ;WebAssembly;X86\",\n             }\n         };\n \n         let llvm_exp_targets = if self.emscripten {\n             \"\"\n         } else {\n-            &builder.config.llvm_experimental_targets[..]\n+            match builder.config.llvm_experimental_targets {\n+                Some(ref s) => s,\n+                None => \"\",\n+            }\n         };\n \n         let assertions = if builder.config.llvm_assertions {\"ON\"} else {\"OFF\"};"}]}