{"sha": "70f282d46996ca381251890c28b9cd5226884ccd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwZjI4MmQ0Njk5NmNhMzgxMjUxODkwYzI4YjljZDUyMjY4ODRjY2Q=", "commit": {"author": {"name": "ibraheemdev", "email": "ibrah1440@gmail.com", "date": "2021-07-25T17:16:40Z"}, "committer": {"name": "ibraheemdev", "email": "ibrah1440@gmail.com", "date": "2021-07-25T17:17:47Z"}, "message": "fix help message for modification to &T created by &{t}", "tree": {"sha": "7babff5340b8c57bb64eef3b0f14b9ac405ac858", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7babff5340b8c57bb64eef3b0f14b9ac405ac858"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70f282d46996ca381251890c28b9cd5226884ccd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70f282d46996ca381251890c28b9cd5226884ccd", "html_url": "https://github.com/rust-lang/rust/commit/70f282d46996ca381251890c28b9cd5226884ccd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70f282d46996ca381251890c28b9cd5226884ccd/comments", "author": {"login": "ibraheemdev", "id": 34988408, "node_id": "MDQ6VXNlcjM0OTg4NDA4", "avatar_url": "https://avatars.githubusercontent.com/u/34988408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibraheemdev", "html_url": "https://github.com/ibraheemdev", "followers_url": "https://api.github.com/users/ibraheemdev/followers", "following_url": "https://api.github.com/users/ibraheemdev/following{/other_user}", "gists_url": "https://api.github.com/users/ibraheemdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibraheemdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibraheemdev/subscriptions", "organizations_url": "https://api.github.com/users/ibraheemdev/orgs", "repos_url": "https://api.github.com/users/ibraheemdev/repos", "events_url": "https://api.github.com/users/ibraheemdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ibraheemdev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibraheemdev", "id": 34988408, "node_id": "MDQ6VXNlcjM0OTg4NDA4", "avatar_url": "https://avatars.githubusercontent.com/u/34988408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibraheemdev", "html_url": "https://github.com/ibraheemdev", "followers_url": "https://api.github.com/users/ibraheemdev/followers", "following_url": "https://api.github.com/users/ibraheemdev/following{/other_user}", "gists_url": "https://api.github.com/users/ibraheemdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibraheemdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibraheemdev/subscriptions", "organizations_url": "https://api.github.com/users/ibraheemdev/orgs", "repos_url": "https://api.github.com/users/ibraheemdev/repos", "events_url": "https://api.github.com/users/ibraheemdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ibraheemdev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70f74719a92ef52bc28610ba04b7e98ada035ec9", "url": "https://api.github.com/repos/rust-lang/rust/commits/70f74719a92ef52bc28610ba04b7e98ada035ec9", "html_url": "https://github.com/rust-lang/rust/commit/70f74719a92ef52bc28610ba04b7e98ada035ec9"}], "stats": {"total": 50, "additions": 40, "deletions": 10}, "files": [{"sha": "e23280beb61bae7269ca97f698c0633fa4080ad5", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/mutability_errors.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/70f282d46996ca381251890c28b9cd5226884ccd/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70f282d46996ca381251890c28b9cd5226884ccd/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs?ref=70f282d46996ca381251890c28b9cd5226884ccd", "patch": "@@ -119,9 +119,9 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n                     && !self.upvars.is_empty()\n                 {\n                     item_msg = format!(\"`{}`\", access_place_desc.unwrap());\n-                    debug_assert!(\n-                        self.body.local_decls[ty::CAPTURE_STRUCT_LOCAL].ty.is_region_ptr()\n-                    );\n+                    debug_assert!(self.body.local_decls[ty::CAPTURE_STRUCT_LOCAL]\n+                        .ty\n+                        .is_region_ptr());\n                     debug_assert!(is_closure_or_generator(\n                         Place::ty_from(\n                             the_place_err.local,\n@@ -905,16 +905,16 @@ fn suggest_ampmut<'tcx>(\n                         Some(c) if c.is_whitespace() => true,\n                         // e.g. `&mut(x)`\n                         Some('(') => true,\n+                        // e.g. `&mut{x}`\n+                        Some('{') => true,\n                         // e.g. `&mutablevar`\n                         _ => false,\n                     }\n                 } else {\n                     false\n                 }\n             };\n-            if let (true, Some(ws_pos)) =\n-                (src.starts_with(\"&'\"), src.find(|c: char| -> bool { c.is_whitespace() }))\n-            {\n+            if let (true, Some(ws_pos)) = (src.starts_with(\"&'\"), src.find(char::is_whitespace)) {\n                 let lt_name = &src[1..ws_pos];\n                 let ty = src[ws_pos..].trim_start();\n                 if !is_mutbl(ty) {\n@@ -940,9 +940,7 @@ fn suggest_ampmut<'tcx>(\n     };\n \n     if let Ok(src) = tcx.sess.source_map().span_to_snippet(highlight_span) {\n-        if let (true, Some(ws_pos)) =\n-            (src.starts_with(\"&'\"), src.find(|c: char| -> bool { c.is_whitespace() }))\n-        {\n+        if let (true, Some(ws_pos)) = (src.starts_with(\"&'\"), src.find(char::is_whitespace)) {\n             let lt_name = &src[1..ws_pos];\n             let ty = &src[ws_pos..];\n             return (highlight_span, format!(\"&{} mut{}\", lt_name, ty));"}, {"sha": "2b1ab2f705057cc4da4c307cbc9e9f1cfd95d702", "filename": "src/test/ui/borrowck/issue-85765.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/70f282d46996ca381251890c28b9cd5226884ccd/src%2Ftest%2Fui%2Fborrowck%2Fissue-85765.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70f282d46996ca381251890c28b9cd5226884ccd/src%2Ftest%2Fui%2Fborrowck%2Fissue-85765.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-85765.rs?ref=70f282d46996ca381251890c28b9cd5226884ccd", "patch": "@@ -12,4 +12,18 @@ fn main() {\n     *r = 0;\n     //~^ ERROR cannot assign to `*r`, which is behind a `&` reference\n     //~| NOTE `r` is a `&` reference, so the data it refers to cannot be written\n+\n+    #[rustfmt::skip]\n+    let x: &usize = &mut{0};\n+    //~^ HELP consider changing this to be a mutable reference\n+    *x = 1;\n+    //~^ ERROR cannot assign to `*x`, which is behind a `&` reference\n+    //~| NOTE `x` is a `&` reference, so the data it refers to cannot be written\n+\n+    #[rustfmt::skip]\n+    let y: &usize = &mut(0);\n+    //~^ HELP consider changing this to be a mutable reference\n+    *y = 1;\n+    //~^ ERROR cannot assign to `*y`, which is behind a `&` reference\n+    //~| NOTE `y` is a `&` reference, so the data it refers to cannot be written\n }"}, {"sha": "af83c6ea6d903a9e259f0457d9b80586f63f6f5f", "filename": "src/test/ui/borrowck/issue-85765.stderr", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/70f282d46996ca381251890c28b9cd5226884ccd/src%2Ftest%2Fui%2Fborrowck%2Fissue-85765.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/70f282d46996ca381251890c28b9cd5226884ccd/src%2Ftest%2Fui%2Fborrowck%2Fissue-85765.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-85765.stderr?ref=70f282d46996ca381251890c28b9cd5226884ccd", "patch": "@@ -16,7 +16,25 @@ LL |\n LL |     *r = 0;\n    |     ^^^^^^ `r` is a `&` reference, so the data it refers to cannot be written\n \n-error: aborting due to 2 previous errors\n+error[E0594]: cannot assign to `*x`, which is behind a `&` reference\n+  --> $DIR/issue-85765.rs:19:5\n+   |\n+LL |     let x: &usize = &mut{0};\n+   |         - help: consider changing this to be a mutable reference: `&mut usize`\n+LL |\n+LL |     *x = 1;\n+   |     ^^^^^^ `x` is a `&` reference, so the data it refers to cannot be written\n+\n+error[E0594]: cannot assign to `*y`, which is behind a `&` reference\n+  --> $DIR/issue-85765.rs:26:5\n+   |\n+LL |     let y: &usize = &mut(0);\n+   |         - help: consider changing this to be a mutable reference: `&mut usize`\n+LL |\n+LL |     *y = 1;\n+   |     ^^^^^^ `y` is a `&` reference, so the data it refers to cannot be written\n+\n+error: aborting due to 4 previous errors\n \n Some errors have detailed explanations: E0594, E0596.\n For more information about an error, try `rustc --explain E0594`."}]}