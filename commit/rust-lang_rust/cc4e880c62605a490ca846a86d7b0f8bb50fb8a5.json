{"sha": "cc4e880c62605a490ca846a86d7b0f8bb50fb8a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjNGU4ODBjNjI2MDVhNDkwY2E4NDZhODZkN2IwZjhiYjUwZmI4YTU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-19T14:02:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-19T14:02:24Z"}, "message": "Rollup merge of #74356 - lzutao:rm_combine, r=LukasKalbertodt\n\nRemove combine function\n\nComparing two array directly helps generate better assert message.\nResolve https://github.com/rust-lang/rust/pull/74271/files#r454538514", "tree": {"sha": "ae225a49b6ac6c5980c9af4097fde1e6d7768524", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae225a49b6ac6c5980c9af4097fde1e6d7768524"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc4e880c62605a490ca846a86d7b0f8bb50fb8a5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfFFJwCRBK7hj4Ov3rIwAAdHIIAIJZ+C4ANWD9dMQfogheXJLz\nfZ0kUgYwk/bdVc+3sZN7E9WMMwP5D2Hg7Jc1LFPFjlPspLi2s8uWJEy+aGM1ZINL\nFFYF+8dZGvMfGV7a9QIfNLetXdqlmBnvEwWXWO3Wq1KU2uTkfBK6hYLU4IPQIWt7\nsCxdWg1aFpvV9W9BZ9bDNSQiH5ijz21ulNjfwZc6/rdI0xFg9BUFiPxEq3aLinxt\nvDZWrt3RQARpg2KBoooUFZsO/9+nVCQ68eqHljkKWV+uTokMj2+AX7jyidR57isQ\nsppFfLXZ6az48mWYiZgkeZfdqV5vwN2XgnE27PQ9eYmvS7LaUYM5ebdOeYShhYE=\n=3S4S\n-----END PGP SIGNATURE-----\n", "payload": "tree ae225a49b6ac6c5980c9af4097fde1e6d7768524\nparent 2f3d64fc2f4df95645366825952a4c976bcb2336\nparent afbfe603fc1c288a0cff63b3b1cad43902a66e9b\nauthor Manish Goregaokar <manishsmail@gmail.com> 1595167344 -0700\ncommitter GitHub <noreply@github.com> 1595167344 -0700\n\nRollup merge of #74356 - lzutao:rm_combine, r=LukasKalbertodt\n\nRemove combine function\n\nComparing two array directly helps generate better assert message.\nResolve https://github.com/rust-lang/rust/pull/74271/files#r454538514\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc4e880c62605a490ca846a86d7b0f8bb50fb8a5", "html_url": "https://github.com/rust-lang/rust/commit/cc4e880c62605a490ca846a86d7b0f8bb50fb8a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc4e880c62605a490ca846a86d7b0f8bb50fb8a5/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f3d64fc2f4df95645366825952a4c976bcb2336", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f3d64fc2f4df95645366825952a4c976bcb2336", "html_url": "https://github.com/rust-lang/rust/commit/2f3d64fc2f4df95645366825952a4c976bcb2336"}, {"sha": "afbfe603fc1c288a0cff63b3b1cad43902a66e9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/afbfe603fc1c288a0cff63b3b1cad43902a66e9b", "html_url": "https://github.com/rust-lang/rust/commit/afbfe603fc1c288a0cff63b3b1cad43902a66e9b"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "0f349dfa3021611fdb3513aa9b87b2fd9f912bd1", "filename": "src/libstd/sys/unix/process/process_unix.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cc4e880c62605a490ca846a86d7b0f8bb50fb8a5/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc4e880c62605a490ca846a86d7b0f8bb50fb8a5/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=cc4e880c62605a490ca846a86d7b0f8bb50fb8a5", "patch": "@@ -84,12 +84,12 @@ impl Command {\n                 Ok(0) => return Ok((p, ours)),\n                 Ok(8) => {\n                     let (errno, footer) = bytes.split_at(4);\n-                    assert!(\n-                        combine(CLOEXEC_MSG_FOOTER) == combine(footer.try_into().unwrap()),\n+                    assert_eq!(\n+                        CLOEXEC_MSG_FOOTER, footer,\n                         \"Validation on the CLOEXEC pipe failed: {:?}\",\n                         bytes\n                     );\n-                    let errno = combine(errno.try_into().unwrap());\n+                    let errno = i32::from_be_bytes(errno.try_into().unwrap());\n                     assert!(p.wait().is_ok(), \"wait() should either return Ok or panic\");\n                     return Err(Error::from_raw_os_error(errno));\n                 }\n@@ -105,10 +105,6 @@ impl Command {\n                 }\n             }\n         }\n-\n-        fn combine(arr: [u8; 4]) -> i32 {\n-            i32::from_be_bytes(arr)\n-        }\n     }\n \n     pub fn exec(&mut self, default: Stdio) -> io::Error {"}]}