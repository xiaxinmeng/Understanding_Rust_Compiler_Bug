{"sha": "9f9d4beda69cd350e7e73bc95e01eb9c594967b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmOWQ0YmVkYTY5Y2QzNTBlN2U3M2JjOTVlMDFlYjljNTk0OTY3Yjc=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-18T23:41:29Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-05-15T13:21:32Z"}, "message": "Rename RegionParamDef to LifetimeParamDef", "tree": {"sha": "9f97cc684566fb2c01ce76cfaa7df7132ab09a88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f97cc684566fb2c01ce76cfaa7df7132ab09a88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f9d4beda69cd350e7e73bc95e01eb9c594967b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f9d4beda69cd350e7e73bc95e01eb9c594967b7", "html_url": "https://github.com/rust-lang/rust/commit/9f9d4beda69cd350e7e73bc95e01eb9c594967b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f9d4beda69cd350e7e73bc95e01eb9c594967b7/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bed895cab365a9a020fcc033b83603e7d23e4e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bed895cab365a9a020fcc033b83603e7d23e4e4", "html_url": "https://github.com/rust-lang/rust/commit/4bed895cab365a9a020fcc033b83603e7d23e4e4"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "e06d22607b75ec274109c73e34ba19ae8edc2942", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f9d4beda69cd350e7e73bc95e01eb9c594967b7/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f9d4beda69cd350e7e73bc95e01eb9c594967b7/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=9f9d4beda69cd350e7e73bc95e01eb9c594967b7", "patch": "@@ -765,7 +765,7 @@ impl_stable_hash_for!(struct ty::GenericParamDef {\n     kind\n });\n \n-impl_stable_hash_for!(struct ty::RegionParamDef {\n+impl_stable_hash_for!(struct ty::LifetimeParamDef {\n     pure_wrt_drop\n });\n "}, {"sha": "025e07942656c555c95049e8744c8030d2b9becf", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f9d4beda69cd350e7e73bc95e01eb9c594967b7/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f9d4beda69cd350e7e73bc95e01eb9c594967b7/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=9f9d4beda69cd350e7e73bc95e01eb9c594967b7", "patch": "@@ -723,7 +723,7 @@ pub struct TypeParamDef {\n }\n \n #[derive(Copy, Clone, Debug, RustcEncodable, RustcDecodable)]\n-pub struct RegionParamDef {\n+pub struct LifetimeParamDef {\n     /// `pure_wrt_drop`, set by the (unsafe) `#[may_dangle]` attribute\n     /// on generic parameter `'a`, asserts data of lifetime `'a`\n     /// won't be accessed during the parent type's `Drop` impl.\n@@ -738,7 +738,7 @@ impl ty::EarlyBoundRegion {\n \n #[derive(Clone, Debug, RustcEncodable, RustcDecodable)]\n pub enum GenericParamDefKind {\n-    Lifetime(RegionParamDef),\n+    Lifetime(LifetimeParamDef),\n     Type(TypeParamDef),\n }\n \n@@ -751,7 +751,7 @@ pub struct GenericParamDef {\n }\n \n impl GenericParamDef {\n-    pub fn to_lifetime(&self) -> RegionParamDef {\n+    pub fn to_lifetime(&self) -> LifetimeParamDef {\n         match self.kind {\n             GenericParamDefKind::Lifetime(lt) => lt,\n             _ => bug!(\"cannot convert a non-lifetime to a lifetime\")"}, {"sha": "6945f8f3c078a70545cf9b481cbdab182d686bf8", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f9d4beda69cd350e7e73bc95e01eb9c594967b7/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f9d4beda69cd350e7e73bc95e01eb9c594967b7/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=9f9d4beda69cd350e7e73bc95e01eb9c594967b7", "patch": "@@ -892,7 +892,7 @@ fn generics_of<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n             name: l.lifetime.name.name().as_interned_str(),\n             index: own_start + i as u32,\n             def_id: tcx.hir.local_def_id(l.lifetime.id),\n-            kind: ty::GenericParamDefKind::Lifetime(ty::RegionParamDef {\n+            kind: ty::GenericParamDefKind::Lifetime(ty::LifetimeParamDef {\n                 pure_wrt_drop: l.pure_wrt_drop,\n             }),\n         }"}]}