{"sha": "ef9a681183ff2d6cd04d2a87e8898d1c0b2d46ae", "node_id": "C_kwDOAAsO6NoAKGVmOWE2ODExODNmZjJkNmNkMDRkMmE4N2U4ODk4ZDFjMGIyZDQ2YWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-29T19:34:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-29T19:34:17Z"}, "message": "Rollup merge of #112022 - compiler-errors:coercion-check-deep, r=lcnr\n\nCheck nested obligations during coercion unify in new solver\n\nFound when triaging failing opaque tests with new solver.\n\nr? `@lcnr`", "tree": {"sha": "c24f1b78ff06fb0fdb52d8f3c58fd9dca40be655", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c24f1b78ff06fb0fdb52d8f3c58fd9dca40be655"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef9a681183ff2d6cd04d2a87e8898d1c0b2d46ae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkdP45CRBK7hj4Ov3rIwAAN9sIAJoAAktRgrTw/ZQIGM2H67YV\nxgvB7PO5/pGrtAiRKjc5UbZjU8nYwXFiqe1d3jLVQNGodmNhJs0QPk38h5/vLV+o\nFQScJpY7UAR89DQdxMcJ7PGqs/kKHvqcdVVZpWMrIqDi2wM1Bw75qZ97TIIS6ezS\nZ9btTU9JG9gXi5DDFoNj0xH9TlQbh33j6RXs30EVVf/MF0PJl47FkBcuZ1JoYUFV\ns7g6T3MOqWeO2/HPnINeDlA4wEBCwdhDbJWjaGKduP2PwT9UPVZen/XxOOSRnlkx\n7aMYiu/5tGILYLUyfNnoGJGQdjRMbaDY7joAWpzuakm6VxaFj6JUiGrDmYH/fgc=\n=ds7/\n-----END PGP SIGNATURE-----\n", "payload": "tree c24f1b78ff06fb0fdb52d8f3c58fd9dca40be655\nparent 9f83e56f0dcdfcfc93686302a0c975a5a430b2bc\nparent 00c92bd873c24ee5386bc08ec854391358a8be6c\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1685388857 +0200\ncommitter GitHub <noreply@github.com> 1685388857 +0200\n\nRollup merge of #112022 - compiler-errors:coercion-check-deep, r=lcnr\n\nCheck nested obligations during coercion unify in new solver\n\nFound when triaging failing opaque tests with new solver.\n\nr? `@lcnr`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef9a681183ff2d6cd04d2a87e8898d1c0b2d46ae", "html_url": "https://github.com/rust-lang/rust/commit/ef9a681183ff2d6cd04d2a87e8898d1c0b2d46ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef9a681183ff2d6cd04d2a87e8898d1c0b2d46ae/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f83e56f0dcdfcfc93686302a0c975a5a430b2bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f83e56f0dcdfcfc93686302a0c975a5a430b2bc", "html_url": "https://github.com/rust-lang/rust/commit/9f83e56f0dcdfcfc93686302a0c975a5a430b2bc"}, {"sha": "00c92bd873c24ee5386bc08ec854391358a8be6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/00c92bd873c24ee5386bc08ec854391358a8be6c", "html_url": "https://github.com/rust-lang/rust/commit/00c92bd873c24ee5386bc08ec854391358a8be6c"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "369dd4ae5950678243706c393e0b3cba4847a088", "filename": "compiler/rustc_hir_typeck/src/coercion.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ef9a681183ff2d6cd04d2a87e8898d1c0b2d46ae/compiler%2Frustc_hir_typeck%2Fsrc%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef9a681183ff2d6cd04d2a87e8898d1c0b2d46ae/compiler%2Frustc_hir_typeck%2Fsrc%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fcoercion.rs?ref=ef9a681183ff2d6cd04d2a87e8898d1c0b2d46ae", "patch": "@@ -62,6 +62,7 @@ use rustc_span::{self, BytePos, DesugaringKind, Span};\n use rustc_target::spec::abi::Abi;\n use rustc_trait_selection::infer::InferCtxtExt as _;\n use rustc_trait_selection::traits::error_reporting::TypeErrCtxtExt as _;\n+use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt;\n use rustc_trait_selection::traits::{\n     self, NormalizeExt, ObligationCause, ObligationCauseCode, ObligationCtxt,\n };\n@@ -144,12 +145,28 @@ impl<'f, 'tcx> Coerce<'f, 'tcx> {\n         debug!(\"unify(a: {:?}, b: {:?}, use_lub: {})\", a, b, self.use_lub);\n         self.commit_if_ok(|_| {\n             let at = self.at(&self.cause, self.fcx.param_env);\n-            if self.use_lub {\n+\n+            let res = if self.use_lub {\n                 at.lub(DefineOpaqueTypes::Yes, b, a)\n             } else {\n                 at.sup(DefineOpaqueTypes::Yes, b, a)\n                     .map(|InferOk { value: (), obligations }| InferOk { value: a, obligations })\n+            };\n+\n+            // In the new solver, lazy norm may allow us to shallowly equate\n+            // more types, but we emit possibly impossible-to-satisfy obligations.\n+            // Filter these cases out to make sure our coercion is more accurate.\n+            if self.tcx.trait_solver_next() {\n+                if let Ok(res) = &res {\n+                    for obligation in &res.obligations {\n+                        if !self.predicate_may_hold(&obligation) {\n+                            return Err(TypeError::Mismatch);\n+                        }\n+                    }\n+                }\n             }\n+\n+            res\n         })\n     }\n "}, {"sha": "0d07a549640f0428a1d64bb075c735576cd14844", "filename": "tests/ui/impl-trait/autoderef.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef9a681183ff2d6cd04d2a87e8898d1c0b2d46ae/tests%2Fui%2Fimpl-trait%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef9a681183ff2d6cd04d2a87e8898d1c0b2d46ae/tests%2Fui%2Fimpl-trait%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl-trait%2Fautoderef.rs?ref=ef9a681183ff2d6cd04d2a87e8898d1c0b2d46ae", "patch": "@@ -1,3 +1,5 @@\n+// revisions: current next\n+//[next] compile-flag: -Ztrait-solver=next\n // check-pass\n \n use std::path::Path;"}]}