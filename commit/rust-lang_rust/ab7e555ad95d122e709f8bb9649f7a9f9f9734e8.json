{"sha": "ab7e555ad95d122e709f8bb9649f7a9f9f9734e8", "node_id": "C_kwDOAAsO6NoAKGFiN2U1NTVhZDk1ZDEyMmU3MDlmOGJiOTY0OWY3YTlmOWY5NzM0ZTg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-30T14:50:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-30T14:50:05Z"}, "message": "Auto merge of #99887 - nnethercote:rm-TreeAndSpacing, r=petrochenkov\n\nRemove `TreeAndSpacing`.\n\nA `TokenStream` contains a `Lrc<Vec<(TokenTree, Spacing)>>`. But this is\nnot quite right. `Spacing` makes sense for `TokenTree::Token`, but does\nnot make sense for `TokenTree::Delimited`, because a\n`TokenTree::Delimited` cannot be joined with another `TokenTree`.\n\nThis commit fixes this problem, by adding `Spacing` to `TokenTree::Token`,\nchanging `TokenStream` to contain a `Lrc<Vec<TokenTree>>`, and removing the\n`TreeAndSpacing` typedef.\n\nThe commit removes these two impls:\n- `impl From<TokenTree> for TokenStream`\n- `impl From<TokenTree> for TreeAndSpacing`\n\nThese were useful, but also resulted in code with many `.into()` calls\nthat was hard to read, particularly for anyone not highly familiar with\nthe relevant types. This commit makes some other changes to compensate:\n- `TokenTree::token()` becomes `TokenTree::token_{alone,joint}()`.\n- `TokenStream::token_{alone,joint}()` are added.\n- `TokenStream::delimited` is added.\n\nThis results in things like this:\n```rust\nTokenTree::token(token::Semi, stmt.span).into()\n```\nchanging to this:\n```rust\nTokenStream::token_alone(token::Semi, stmt.span)\n```\nThis makes the type of the result, and its spacing, clearer.\n\nThese changes also simplifies `Cursor` and `CursorRef`, because they no longer\nneed to distinguish between `next` and `next_with_spacing`.\n\nr? `@petrochenkov`", "tree": {"sha": "0d719967a05629aa8ea36207f5adb4ff244cfe34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d719967a05629aa8ea36207f5adb4ff244cfe34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab7e555ad95d122e709f8bb9649f7a9f9f9734e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab7e555ad95d122e709f8bb9649f7a9f9f9734e8", "html_url": "https://github.com/rust-lang/rust/commit/ab7e555ad95d122e709f8bb9649f7a9f9f9734e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab7e555ad95d122e709f8bb9649f7a9f9f9734e8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61c6d16adef2a55a2cefbeb8c3ac19f0af67a479", "url": "https://api.github.com/repos/rust-lang/rust/commits/61c6d16adef2a55a2cefbeb8c3ac19f0af67a479", "html_url": "https://github.com/rust-lang/rust/commit/61c6d16adef2a55a2cefbeb8c3ac19f0af67a479"}, {"sha": "1a6f02b1f25e497e9a9da5af955794a81307af3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a6f02b1f25e497e9a9da5af955794a81307af3c", "html_url": "https://github.com/rust-lang/rust/commit/1a6f02b1f25e497e9a9da5af955794a81307af3c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "454ec23388af94511525b335d1e672dc8f6e062a", "filename": "clippy_lints/src/crate_in_macro_def.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab7e555ad95d122e709f8bb9649f7a9f9f9734e8/clippy_lints%2Fsrc%2Fcrate_in_macro_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab7e555ad95d122e709f8bb9649f7a9f9f9734e8/clippy_lints%2Fsrc%2Fcrate_in_macro_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcrate_in_macro_def.rs?ref=ab7e555ad95d122e709f8bb9649f7a9f9f9734e8", "patch": "@@ -110,14 +110,14 @@ fn contains_unhygienic_crate_reference(tts: &TokenStream) -> Option<Span> {\n \n fn is_crate_keyword(tt: &TokenTree) -> Option<Span> {\n     if_chain! {\n-        if let TokenTree::Token(Token { kind: TokenKind::Ident(symbol, _), span }) = tt;\n+        if let TokenTree::Token(Token { kind: TokenKind::Ident(symbol, _), span }, _) = tt;\n         if symbol.as_str() == \"crate\";\n         then { Some(*span) } else { None }\n     }\n }\n \n fn is_token(tt: &TokenTree, kind: &TokenKind) -> bool {\n-    if let TokenTree::Token(Token { kind: other, .. }) = tt {\n+    if let TokenTree::Token(Token { kind: other, .. }, _) = tt {\n         kind == other\n     } else {\n         false"}]}