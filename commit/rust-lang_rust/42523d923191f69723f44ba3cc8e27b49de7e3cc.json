{"sha": "42523d923191f69723f44ba3cc8e27b49de7e3cc", "node_id": "C_kwDOAAsO6NoAKDQyNTIzZDkyMzE5MWY2OTcyM2Y0NGJhM2NjOGUyN2I0OWRlN2UzY2M", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-09-20T07:54:18Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-09-20T08:14:30Z"}, "message": "make a sync test more reliable", "tree": {"sha": "d05cd386fac0d0c55793724bb856436d01eead11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d05cd386fac0d0c55793724bb856436d01eead11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42523d923191f69723f44ba3cc8e27b49de7e3cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42523d923191f69723f44ba3cc8e27b49de7e3cc", "html_url": "https://github.com/rust-lang/rust/commit/42523d923191f69723f44ba3cc8e27b49de7e3cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42523d923191f69723f44ba3cc8e27b49de7e3cc/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfa6f8894e6d56f3c01062f0735f87a70e180fd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfa6f8894e6d56f3c01062f0735f87a70e180fd0", "html_url": "https://github.com/rust-lang/rust/commit/dfa6f8894e6d56f3c01062f0735f87a70e180fd0"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "8bda32bb95a48f8ca6a85bac30a6f278f981a49c", "filename": "tests/pass/concurrency/sync.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/42523d923191f69723f44ba3cc8e27b49de7e3cc/tests%2Fpass%2Fconcurrency%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42523d923191f69723f44ba3cc8e27b49de7e3cc/tests%2Fpass%2Fconcurrency%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Fsync.rs?ref=42523d923191f69723f44ba3cc8e27b49de7e3cc", "patch": "@@ -77,13 +77,12 @@ fn check_conditional_variables_timed_wait_notimeout() {\n     let guard = lock.lock().unwrap();\n \n     let handle = thread::spawn(move || {\n+        thread::sleep(Duration::from_millis(100)); // Make sure the other thread is waiting by the time we call `notify`.\n         let (_lock, cvar) = &*pair2;\n         cvar.notify_one();\n     });\n \n-    // macOS runners are very unreliable.\n-    let timeout = if cfg!(target_os = \"macos\") { 2000 } else { 500 };\n-    let (_guard, timeout) = cvar.wait_timeout(guard, Duration::from_millis(timeout)).unwrap();\n+    let (_guard, timeout) = cvar.wait_timeout(guard, Duration::from_millis(500)).unwrap();\n     assert!(!timeout.timed_out());\n     handle.join().unwrap();\n }"}]}