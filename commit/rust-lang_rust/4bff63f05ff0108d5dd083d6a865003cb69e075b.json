{"sha": "4bff63f05ff0108d5dd083d6a865003cb69e075b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiZmY2M2YwNWZmMDEwOGQ1ZGQwODNkNmE4NjUwMDNjYjY5ZTA3NWI=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-03-08T08:41:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-08T08:41:50Z"}, "message": "Rollup merge of #58893 - benaryorg:thread_local_example_join, r=alexcrichton\n\nrace condition in thread local storage example\n\nThe example had a potential race condition that would still pass the test.\nIf the thread which was supposed to modify it's own thread local was slower than the instruction to\nmodify in the main thread, then the test would pass even in case of a failure.\nThis is would be minor if the child thread was waited for since it check using an `assert_eq` for the\nsame thing, but vice versa.\nHowever, if the `assert_eq` failed this would trigger a panic, which is not at all caught by the\nexample since the thread is not waited on.\n\nSigned-off-by: benaryorg <binary@benary.org>", "tree": {"sha": "6cca20b505468fc41aa84e7b8ce931aa25c3e682", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6cca20b505468fc41aa84e7b8ce931aa25c3e682"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bff63f05ff0108d5dd083d6a865003cb69e075b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcgirOCRBK7hj4Ov3rIwAAdHIIABqnENeJ1fCqgtVDobU6adh4\nnizzr8hmADs4p4nZcgwhAVXntOZk5O9UIyel4CisKmB4nmpDJ5F3pF4eHnzQph9S\n80EmhHP2eZuPeIKelxBzX7+rMJNRl+dq6bMpfc/L3Oco/B8UdSEHS4otgDxvNRkN\n2MFKrmCDrACuE9KlfaZ4Qwm8fLVv1/CiRhGiuYFICTRF5wm+N+GM7Cq5hJEgTjeh\nOkCsJ1iImdXXXUUV4IXwos/M0IbeQx+udTqnen0F9215Kysbia38ph7XC4JSpt8O\nZDHbOSsrt4CkGI0cPsun/Jwt0uIn8mxDPbdC/+FUooxAMglqXpkkUBkMu9No+4Y=\n=jAqP\n-----END PGP SIGNATURE-----\n", "payload": "tree 6cca20b505468fc41aa84e7b8ce931aa25c3e682\nparent 9c995110c4ecaedd9528f6a2fa872024c6d0701d\nparent 2293d2260a382146fe5ea62ce91580ad7a31178d\nauthor Pietro Albini <pietro@pietroalbini.org> 1552034510 +0100\ncommitter GitHub <noreply@github.com> 1552034510 +0100\n\nRollup merge of #58893 - benaryorg:thread_local_example_join, r=alexcrichton\n\nrace condition in thread local storage example\n\nThe example had a potential race condition that would still pass the test.\nIf the thread which was supposed to modify it's own thread local was slower than the instruction to\nmodify in the main thread, then the test would pass even in case of a failure.\nThis is would be minor if the child thread was waited for since it check using an `assert_eq` for the\nsame thing, but vice versa.\nHowever, if the `assert_eq` failed this would trigger a panic, which is not at all caught by the\nexample since the thread is not waited on.\n\nSigned-off-by: benaryorg <binary@benary.org>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bff63f05ff0108d5dd083d6a865003cb69e075b", "html_url": "https://github.com/rust-lang/rust/commit/4bff63f05ff0108d5dd083d6a865003cb69e075b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bff63f05ff0108d5dd083d6a865003cb69e075b/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c995110c4ecaedd9528f6a2fa872024c6d0701d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c995110c4ecaedd9528f6a2fa872024c6d0701d", "html_url": "https://github.com/rust-lang/rust/commit/9c995110c4ecaedd9528f6a2fa872024c6d0701d"}, {"sha": "2293d2260a382146fe5ea62ce91580ad7a31178d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2293d2260a382146fe5ea62ce91580ad7a31178d", "html_url": "https://github.com/rust-lang/rust/commit/2293d2260a382146fe5ea62ce91580ad7a31178d"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "7ad6b124e3a384c1f57543d2230e4b0f513421de", "filename": "src/libstd/thread/local.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4bff63f05ff0108d5dd083d6a865003cb69e075b/src%2Flibstd%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bff63f05ff0108d5dd083d6a865003cb69e075b/src%2Flibstd%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Flocal.rs?ref=4bff63f05ff0108d5dd083d6a865003cb69e075b", "patch": "@@ -40,13 +40,16 @@ use crate::mem;\n /// });\n ///\n /// // each thread starts out with the initial value of 1\n-/// thread::spawn(move|| {\n+/// let t = thread::spawn(move|| {\n ///     FOO.with(|f| {\n ///         assert_eq!(*f.borrow(), 1);\n ///         *f.borrow_mut() = 3;\n ///     });\n /// });\n ///\n+/// // wait for the thread to complete and bail out on panic\n+/// t.join().unwrap();\n+///\n /// // we retain our original value of 2 despite the child thread\n /// FOO.with(|f| {\n ///     assert_eq!(*f.borrow(), 2);"}]}