{"sha": "5c4452aaaf339fa4e4188f2e156af7251eed4119", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNDQ1MmFhYWYzMzlmYTRlNDE4OGYyZTE1NmFmNzI1MWVlZDQxMTk=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-12-01T01:54:02Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-12-01T22:37:23Z"}, "message": "rustc_llvm: Assume at least LLVM 3.9 in build.rs", "tree": {"sha": "73e92e000135bcc2fdcb57b455844a192323e329", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73e92e000135bcc2fdcb57b455844a192323e329"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c4452aaaf339fa4e4188f2e156af7251eed4119", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c4452aaaf339fa4e4188f2e156af7251eed4119", "html_url": "https://github.com/rust-lang/rust/commit/5c4452aaaf339fa4e4188f2e156af7251eed4119", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c4452aaaf339fa4e4188f2e156af7251eed4119/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51342f1fd7f38153003f9780d83babc222139bb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/51342f1fd7f38153003f9780d83babc222139bb1", "html_url": "https://github.com/rust-lang/rust/commit/51342f1fd7f38153003f9780d83babc222139bb1"}], "stats": {"total": 44, "additions": 12, "deletions": 32}, "files": [{"sha": "10b0ec6737003a973e9ae9d1257109f8d36e80ee", "filename": "src/librustc_llvm/build.rs", "status": "modified", "additions": 12, "deletions": 32, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/5c4452aaaf339fa4e4188f2e156af7251eed4119/src%2Flibrustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c4452aaaf339fa4e4188f2e156af7251eed4119/src%2Flibrustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fbuild.rs?ref=5c4452aaaf339fa4e4188f2e156af7251eed4119", "patch": "@@ -17,27 +17,14 @@ use std::path::{PathBuf, Path};\n \n use build_helper::output;\n \n-fn detect_llvm_link(major: u32, minor: u32, llvm_config: &Path)\n-    -> (&'static str, Option<&'static str>) {\n-    if major > 3 || (major == 3 && minor >= 9) {\n-        // Force the link mode we want, preferring static by default, but\n-        // possibly overridden by `configure --enable-llvm-link-shared`.\n-        if env::var_os(\"LLVM_LINK_SHARED\").is_some() {\n-            return (\"dylib\", Some(\"--link-shared\"));\n-        } else {\n-            return (\"static\", Some(\"--link-static\"));\n-        }\n-    } else if major == 3 && minor == 8 {\n-        // Find out LLVM's default linking mode.\n-        let mut mode_cmd = Command::new(llvm_config);\n-        mode_cmd.arg(\"--shared-mode\");\n-        if output(&mut mode_cmd).trim() == \"shared\" {\n-            return (\"dylib\", None);\n-        } else {\n-            return (\"static\", None);\n-        }\n+fn detect_llvm_link() -> (&'static str, &'static str) {\n+    // Force the link mode we want, preferring static by default, but\n+    // possibly overridden by `configure --enable-llvm-link-shared`.\n+    if env::var_os(\"LLVM_LINK_SHARED\").is_some() {\n+        (\"dylib\", \"--link-shared\")\n+    } else {\n+        (\"static\", \"--link-static\")\n     }\n-    (\"static\", None)\n }\n \n fn main() {\n@@ -96,11 +83,11 @@ fn main() {\n     let version_output = output(&mut version_cmd);\n     let mut parts = version_output.split('.').take(2)\n         .filter_map(|s| s.parse::<u32>().ok());\n-    let (major, minor) =\n+    let (major, _minor) =\n         if let (Some(major), Some(minor)) = (parts.next(), parts.next()) {\n             (major, minor)\n         } else {\n-            (3, 7)\n+            (3, 9)\n         };\n \n     if major > 3 {\n@@ -171,17 +158,13 @@ fn main() {\n        .cpp_link_stdlib(None) // we handle this below\n        .compile(\"librustllvm.a\");\n \n-    let (llvm_kind, llvm_link_arg) = detect_llvm_link(major, minor, &llvm_config);\n+    let (llvm_kind, llvm_link_arg) = detect_llvm_link();\n \n     // Link in all LLVM libraries, if we're uwring the \"wrong\" llvm-config then\n     // we don't pick up system libs because unfortunately they're for the host\n     // of llvm-config, not the target that we're attempting to link.\n     let mut cmd = Command::new(&llvm_config);\n-    cmd.arg(\"--libs\");\n-\n-    if let Some(link_arg) = llvm_link_arg {\n-        cmd.arg(link_arg);\n-    }\n+    cmd.arg(llvm_link_arg).arg(\"--libs\");\n \n     if !is_crossed {\n         cmd.arg(\"--system-libs\");\n@@ -230,10 +213,7 @@ fn main() {\n     // hack around this by replacing the host triple with the target and pray\n     // that those -L directories are the same!\n     let mut cmd = Command::new(&llvm_config);\n-    if let Some(link_arg) = llvm_link_arg {\n-        cmd.arg(link_arg);\n-    }\n-    cmd.arg(\"--ldflags\");\n+    cmd.arg(llvm_link_arg).arg(\"--ldflags\");\n     for lib in output(&mut cmd).split_whitespace() {\n         if lib.starts_with(\"-LIBPATH:\") {\n             println!(\"cargo:rustc-link-search=native={}\", &lib[9..]);"}]}