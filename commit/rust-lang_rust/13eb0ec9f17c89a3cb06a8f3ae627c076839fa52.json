{"sha": "13eb0ec9f17c89a3cb06a8f3ae627c076839fa52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzZWIwZWM5ZjE3Yzg5YTNjYjA2YThmM2FlNjI3YzA3NjgzOWZhNTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-05T13:07:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-05T13:07:38Z"}, "message": "Auto merge of #42383 - estebank:candidate-newline, r=arielb1\n\nUse multiline note for trait suggestion", "tree": {"sha": "5c7dfe5e4ca5a8bff6f87fc8dce9a399a8febb1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c7dfe5e4ca5a8bff6f87fc8dce9a399a8febb1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52", "html_url": "https://github.com/rust-lang/rust/commit/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c94a9ac8ae33e6580940e02abb425dd2fe69b5d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c94a9ac8ae33e6580940e02abb425dd2fe69b5d8", "html_url": "https://github.com/rust-lang/rust/commit/c94a9ac8ae33e6580940e02abb425dd2fe69b5d8"}, {"sha": "397972f5b032b848dd8ba2d13e851be0bf9c1ffa", "url": "https://api.github.com/repos/rust-lang/rust/commits/397972f5b032b848dd8ba2d13e851be0bf9c1ffa", "html_url": "https://github.com/rust-lang/rust/commit/397972f5b032b848dd8ba2d13e851be0bf9c1ffa"}], "stats": {"total": 595, "additions": 426, "deletions": 169}, "files": [{"sha": "f8dd5774793a3f70c8df5d204cf8f1dc42f68794", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 28, "deletions": 29, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=13eb0ec9f17c89a3cb06a8f3ae627c076839fa52", "patch": "@@ -242,7 +242,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     macro_rules! report_function {\n                         ($span:expr, $name:expr) => {\n                             err.note(&format!(\"{} is a function, perhaps you wish to call it\",\n-                                         $name));\n+                                              $name));\n                         }\n                     }\n \n@@ -329,9 +329,9 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             let mut candidates = valid_out_of_scope_traits;\n             candidates.sort();\n             candidates.dedup();\n-            let msg = format!(\"items from traits can only be used if the trait is in scope; the \\\n-                               following {traits_are} implemented but not in scope, perhaps add \\\n-                               a `use` for {one_of_them}:\",\n+            err.help(\"items from traits can only be used if the trait is in scope\");\n+            let mut msg = format!(\"the following {traits_are} implemented but not in scope, \\\n+                                   perhaps add a `use` for {one_of_them}:\",\n                               traits_are = if candidates.len() == 1 {\n                                   \"trait is\"\n                               } else {\n@@ -343,17 +343,17 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                   \"one of them\"\n                               });\n \n-            err.help(&msg[..]);\n-\n             let limit = if candidates.len() == 5 { 5 } else { 4 };\n             for (i, trait_did) in candidates.iter().take(limit).enumerate() {\n-                err.help(&format!(\"candidate #{}: `use {};`\",\n-                                  i + 1,\n-                                  self.tcx.item_path_str(*trait_did)));\n+                msg.push_str(&format!(\"\\ncandidate #{}: `use {};`\",\n+                                      i + 1,\n+                                      self.tcx.item_path_str(*trait_did)));\n             }\n             if candidates.len() > limit {\n-                err.note(&format!(\"and {} others\", candidates.len() - limit));\n+                msg.push_str(&format!(\"\\nand {} others\", candidates.len() - limit));\n             }\n+            err.note(&msg[..]);\n+\n             return;\n         }\n \n@@ -383,28 +383,27 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             // FIXME #21673 this help message could be tuned to the case\n             // of a type parameter: suggest adding a trait bound rather\n             // than implementing.\n-            let msg = format!(\"items from traits can only be used if the trait is implemented \\\n-                               and in scope; the following {traits_define} an item `{name}`, \\\n-                               perhaps you need to implement {one_of_them}:\",\n-                              traits_define = if candidates.len() == 1 {\n-                                  \"trait defines\"\n-                              } else {\n-                                  \"traits define\"\n-                              },\n-                              one_of_them = if candidates.len() == 1 {\n-                                  \"it\"\n-                              } else {\n-                                  \"one of them\"\n-                              },\n-                              name = item_name);\n-\n-            err.help(&msg[..]);\n+            err.help(\"items from traits can only be used if the trait is implemented and in scope\");\n+            let mut msg = format!(\"the following {traits_define} an item `{name}`, \\\n+                                   perhaps you need to implement {one_of_them}:\",\n+                                  traits_define = if candidates.len() == 1 {\n+                                      \"trait defines\"\n+                                  } else {\n+                                      \"traits define\"\n+                                  },\n+                                  one_of_them = if candidates.len() == 1 {\n+                                      \"it\"\n+                                  } else {\n+                                      \"one of them\"\n+                                  },\n+                                  name = item_name);\n \n             for (i, trait_info) in candidates.iter().enumerate() {\n-                err.help(&format!(\"candidate #{}: `{}`\",\n-                                  i + 1,\n-                                  self.tcx.item_path_str(trait_info.def_id)));\n+                msg.push_str(&format!(\"\\ncandidate #{}: `{}`\",\n+                                      i + 1,\n+                                      self.tcx.item_path_str(trait_info.def_id)));\n             }\n+            err.note(&msg[..]);\n         }\n     }\n "}, {"sha": "14fa74d1f32e55b33b22a3632194aca8d40ed982", "filename": "src/test/compile-fail/method-call-err-msg.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fcompile-fail%2Fmethod-call-err-msg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fcompile-fail%2Fmethod-call-err-msg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmethod-call-err-msg.rs?ref=13eb0ec9f17c89a3cb06a8f3ae627c076839fa52", "patch": "@@ -33,5 +33,6 @@ fn main() {\n     y.zero()\n      .take()    //~ ERROR no method named `take` found for type `Foo` in the current scope\n      //~^ NOTE the method `take` exists but the following trait bounds were not satisfied\n+     //~| NOTE the following traits define an item `take`, perhaps you need to implement one of them\n      .one(0);\n }"}, {"sha": "a8d97d4674cbb4450f89bbc0c73332fd44e1c4e6", "filename": "src/test/compile-fail/no-method-suggested-traits.rs", "status": "removed", "additions": 0, "deletions": 134, "changes": 134, "blob_url": "https://github.com/rust-lang/rust/blob/c94a9ac8ae33e6580940e02abb425dd2fe69b5d8/src%2Ftest%2Fcompile-fail%2Fno-method-suggested-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c94a9ac8ae33e6580940e02abb425dd2fe69b5d8/src%2Ftest%2Fcompile-fail%2Fno-method-suggested-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-method-suggested-traits.rs?ref=c94a9ac8ae33e6580940e02abb425dd2fe69b5d8", "patch": "@@ -1,134 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// aux-build:no_method_suggested_traits.rs\n-\n-extern crate no_method_suggested_traits;\n-\n-struct Foo;\n-enum Bar { X }\n-\n-mod foo {\n-    pub trait Bar {\n-        fn method(&self) {}\n-\n-        fn method2(&self) {}\n-    }\n-\n-    impl Bar for u32 {}\n-\n-    impl Bar for char {}\n-}\n-\n-fn main() {\n-    // test the values themselves, and autoderef.\n-\n-\n-    1u32.method();\n-    //~^ HELP following traits are implemented but not in scope, perhaps add a `use` for one of them\n-    //~^^ ERROR no method named\n-    //~^^^ HELP `use foo::Bar;`\n-    //~^^^^ HELP `use no_method_suggested_traits::foo::PubPub;`\n-    std::rc::Rc::new(&mut Box::new(&1u32)).method();\n-    //~^ HELP following traits are implemented but not in scope, perhaps add a `use` for one of them\n-    //~^^ ERROR no method named\n-    //~^^^ HELP `use foo::Bar;`\n-    //~^^^^ HELP `use no_method_suggested_traits::foo::PubPub;`\n-\n-    'a'.method();\n-    //~^ ERROR no method named\n-    //~^^ HELP the following trait is implemented but not in scope, perhaps add a `use` for it:\n-    //~^^^ HELP `use foo::Bar;`\n-    std::rc::Rc::new(&mut Box::new(&'a')).method();\n-    //~^ ERROR no method named\n-    //~^^ HELP the following trait is implemented but not in scope, perhaps add a `use` for it:\n-    //~^^^ HELP `use foo::Bar;`\n-\n-    1i32.method();\n-    //~^ ERROR no method named\n-    //~^^ HELP the following trait is implemented but not in scope, perhaps add a `use` for it:\n-    //~^^^ HELP `use no_method_suggested_traits::foo::PubPub;`\n-    std::rc::Rc::new(&mut Box::new(&1i32)).method();\n-    //~^ ERROR no method named\n-    //~^^ HELP the following trait is implemented but not in scope, perhaps add a `use` for it:\n-    //~^^^ HELP `use no_method_suggested_traits::foo::PubPub;`\n-\n-    Foo.method();\n-    //~^ ERROR no method named\n-    //~^^ HELP following traits define an item `method`, perhaps you need to implement one of them\n-    //~^^^ HELP `foo::Bar`\n-    //~^^^^ HELP `no_method_suggested_traits::foo::PubPub`\n-    //~^^^^^ HELP `no_method_suggested_traits::Reexported`\n-    //~^^^^^^ HELP `no_method_suggested_traits::bar::PubPriv`\n-    //~^^^^^^^ HELP `no_method_suggested_traits::qux::PrivPub`\n-    //~^^^^^^^^ HELP `no_method_suggested_traits::quz::PrivPriv`\n-    std::rc::Rc::new(&mut Box::new(&Foo)).method();\n-    //~^ ERROR no method named\n-    //~^^ HELP following traits define an item `method`, perhaps you need to implement one of them\n-    //~^^^ HELP `foo::Bar`\n-    //~^^^^ HELP `no_method_suggested_traits::foo::PubPub`\n-    //~^^^^^ HELP `no_method_suggested_traits::Reexported`\n-    //~^^^^^^ HELP `no_method_suggested_traits::bar::PubPriv`\n-    //~^^^^^^^ HELP `no_method_suggested_traits::qux::PrivPub`\n-    //~^^^^^^^^ HELP `no_method_suggested_traits::quz::PrivPriv`\n-\n-    1u64.method2();\n-    //~^ ERROR no method named\n-    //~^^ HELP the following trait defines an item `method2`, perhaps you need to implement it\n-    //~^^^ HELP `foo::Bar`\n-    std::rc::Rc::new(&mut Box::new(&1u64)).method2();\n-    //~^ ERROR no method named\n-    //~^^ HELP the following trait defines an item `method2`, perhaps you need to implement it\n-    //~^^^ HELP `foo::Bar`\n-\n-    no_method_suggested_traits::Foo.method2();\n-    //~^ ERROR no method named\n-    //~^^ HELP following trait defines an item `method2`, perhaps you need to implement it\n-    //~^^^ HELP `foo::Bar`\n-    std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Foo)).method2();\n-    //~^ ERROR no method named\n-    //~^^ HELP following trait defines an item `method2`, perhaps you need to implement it\n-    //~^^^ HELP `foo::Bar`\n-    no_method_suggested_traits::Bar::X.method2();\n-    //~^ ERROR no method named\n-    //~^^ HELP following trait defines an item `method2`, perhaps you need to implement it\n-    //~^^^ HELP `foo::Bar`\n-    std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Bar::X)).method2();\n-    //~^ ERROR no method named\n-    //~^^ HELP following trait defines an item `method2`, perhaps you need to implement it\n-    //~^^^ HELP `foo::Bar`\n-\n-    Foo.method3();\n-    //~^ ERROR no method named\n-    //~^^ HELP following trait defines an item `method3`, perhaps you need to implement it\n-    //~^^^ HELP `no_method_suggested_traits::foo::PubPub`\n-    std::rc::Rc::new(&mut Box::new(&Foo)).method3();\n-    //~^ ERROR no method named\n-    //~^^ HELP following trait defines an item `method3`, perhaps you need to implement it\n-    //~^^^ HELP `no_method_suggested_traits::foo::PubPub`\n-    Bar::X.method3();\n-    //~^ ERROR no method named\n-    //~^^ HELP following trait defines an item `method3`, perhaps you need to implement it\n-    //~^^^ HELP `no_method_suggested_traits::foo::PubPub`\n-    std::rc::Rc::new(&mut Box::new(&Bar::X)).method3();\n-    //~^ ERROR no method named\n-    //~^^ HELP following trait defines an item `method3`, perhaps you need to implement it\n-    //~^^^ HELP `no_method_suggested_traits::foo::PubPub`\n-\n-    // should have no help:\n-    1_usize.method3(); //~ ERROR no method named\n-    std::rc::Rc::new(&mut Box::new(&1_usize)).method3(); //~ ERROR no method named\n-    no_method_suggested_traits::Foo.method3();  //~ ERROR no method named\n-    std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Foo)).method3();\n-    //~^ ERROR no method named\n-    no_method_suggested_traits::Bar::X.method3();  //~ ERROR no method named\n-    std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Bar::X)).method3();\n-    //~^ ERROR no method named\n-}"}, {"sha": "20cebb9be1746e027ac155dcd6da3b5cf4898960", "filename": "src/test/ui/impl-trait/auxiliary/no_method_suggested_traits.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fui%2Fimpl-trait%2Fauxiliary%2Fno_method_suggested_traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fui%2Fimpl-trait%2Fauxiliary%2Fno_method_suggested_traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fauxiliary%2Fno_method_suggested_traits.rs?ref=13eb0ec9f17c89a3cb06a8f3ae627c076839fa52", "previous_filename": "src/test/compile-fail/auxiliary/no_method_suggested_traits.rs"}, {"sha": "0bb944edb9d84899848885a493a2d6a822a39982", "filename": "src/test/ui/impl-trait/issue-21659-show-relevant-trait-impls-3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-21659-show-relevant-trait-impls-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-21659-show-relevant-trait-impls-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-21659-show-relevant-trait-impls-3.rs?ref=13eb0ec9f17c89a3cb06a8f3ae627c076839fa52", "previous_filename": "src/test/compile-fail/issue-21659-show-relevant-trait-impls-3.rs"}, {"sha": "1b1e0eaf2039a52ad7a28d1e61d6f07a8a4360fd", "filename": "src/test/ui/impl-trait/issue-21659-show-relevant-trait-impls-3.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-21659-show-relevant-trait-impls-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-21659-show-relevant-trait-impls-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-21659-show-relevant-trait-impls-3.stderr?ref=13eb0ec9f17c89a3cb06a8f3ae627c076839fa52", "patch": "@@ -0,0 +1,12 @@\n+error[E0599]: no method named `foo` found for type `Bar` in the current scope\n+  --> $DIR/issue-21659-show-relevant-trait-impls-3.rs:30:8\n+   |\n+30 |     f1.foo(1usize);\n+   |        ^^^\n+   |\n+   = help: items from traits can only be used if the trait is implemented and in scope\n+   = note: the following trait defines an item `foo`, perhaps you need to implement it:\n+           candidate #1: `Foo`\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "390b8f07b2fbd97436e3ea304c5adb5ede0c4f21", "filename": "src/test/ui/impl-trait/method-suggestion-no-duplication.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fui%2Fimpl-trait%2Fmethod-suggestion-no-duplication.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fui%2Fimpl-trait%2Fmethod-suggestion-no-duplication.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmethod-suggestion-no-duplication.rs?ref=13eb0ec9f17c89a3cb06a8f3ae627c076839fa52", "previous_filename": "src/test/compile-fail/method-suggestion-no-duplication.rs"}, {"sha": "fa08c3bee9cf356c8538bca589bcc0dbd6c9a08d", "filename": "src/test/ui/impl-trait/method-suggestion-no-duplication.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fui%2Fimpl-trait%2Fmethod-suggestion-no-duplication.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fui%2Fimpl-trait%2Fmethod-suggestion-no-duplication.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmethod-suggestion-no-duplication.stderr?ref=13eb0ec9f17c89a3cb06a8f3ae627c076839fa52", "patch": "@@ -0,0 +1,14 @@\n+error[E0599]: no method named `is_empty` found for type `Foo` in the current scope\n+  --> $DIR/method-suggestion-no-duplication.rs:19:15\n+   |\n+19 |     foo(|s| s.is_empty());\n+   |               ^^^^^^^^\n+   |\n+   = help: items from traits can only be used if the trait is implemented and in scope\n+   = note: the following traits define an item `is_empty`, perhaps you need to implement one of them:\n+           candidate #1: `std::iter::ExactSizeIterator`\n+           candidate #2: `core::slice::SliceExt`\n+           candidate #3: `core::str::StrExt`\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "15891b00028dc9324a7d94477ff3332f934dcd0d", "filename": "src/test/ui/impl-trait/no-method-suggested-traits.rs", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.rs?ref=13eb0ec9f17c89a3cb06a8f3ae627c076839fa52", "patch": "@@ -0,0 +1,133 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:no_method_suggested_traits.rs\n+extern crate no_method_suggested_traits;\n+\n+struct Foo;\n+enum Bar { X }\n+\n+mod foo {\n+    pub trait Bar {\n+        fn method(&self) {}\n+\n+        fn method2(&self) {}\n+    }\n+\n+    impl Bar for u32 {}\n+\n+    impl Bar for char {}\n+}\n+\n+fn main() {\n+    // test the values themselves, and autoderef.\n+\n+\n+    1u32.method();\n+    //~^ HELP following traits are implemented but not in scope, perhaps add a `use` for one of them\n+    //~| ERROR no method named\n+    //~| HELP `use foo::Bar;`\n+    //~| HELP `use no_method_suggested_traits::foo::PubPub;`\n+    std::rc::Rc::new(&mut Box::new(&1u32)).method();\n+    //~^ HELP following traits are implemented but not in scope, perhaps add a `use` for one of them\n+    //~| ERROR no method named\n+    //~| HELP `use foo::Bar;`\n+    //~| HELP `use no_method_suggested_traits::foo::PubPub;`\n+\n+    'a'.method();\n+    //~^ ERROR no method named\n+    //~| HELP the following trait is implemented but not in scope, perhaps add a `use` for it:\n+    //~| HELP `use foo::Bar;`\n+    std::rc::Rc::new(&mut Box::new(&'a')).method();\n+    //~^ ERROR no method named\n+    //~| HELP the following trait is implemented but not in scope, perhaps add a `use` for it:\n+    //~| HELP `use foo::Bar;`\n+\n+    1i32.method();\n+    //~^ ERROR no method named\n+    //~| HELP the following trait is implemented but not in scope, perhaps add a `use` for it:\n+    //~| HELP `use no_method_suggested_traits::foo::PubPub;`\n+    std::rc::Rc::new(&mut Box::new(&1i32)).method();\n+    //~^ ERROR no method named\n+    //~| HELP the following trait is implemented but not in scope, perhaps add a `use` for it:\n+    //~| HELP `use no_method_suggested_traits::foo::PubPub;`\n+\n+    Foo.method();\n+    //~^ ERROR no method named\n+    //~| HELP following traits define an item `method`, perhaps you need to implement one of them\n+    //~| HELP `foo::Bar`\n+    //~| HELP `no_method_suggested_traits::foo::PubPub`\n+    //~| HELP `no_method_suggested_traits::Reexported`\n+    //~| HELP `no_method_suggested_traits::bar::PubPriv`\n+    //~| HELP `no_method_suggested_traits::qux::PrivPub`\n+    //~| HELP `no_method_suggested_traits::quz::PrivPriv`\n+    std::rc::Rc::new(&mut Box::new(&Foo)).method();\n+    //~^ ERROR no method named\n+    //~| HELP following traits define an item `method`, perhaps you need to implement one of them\n+    //~| HELP `foo::Bar`\n+    //~| HELP `no_method_suggested_traits::foo::PubPub`\n+    //~| HELP `no_method_suggested_traits::Reexported`\n+    //~| HELP `no_method_suggested_traits::bar::PubPriv`\n+    //~| HELP `no_method_suggested_traits::qux::PrivPub`\n+    //~| HELP `no_method_suggested_traits::quz::PrivPriv`\n+\n+    1u64.method2();\n+    //~^ ERROR no method named\n+    //~| HELP the following trait defines an item `method2`, perhaps you need to implement it\n+    //~| HELP `foo::Bar`\n+    std::rc::Rc::new(&mut Box::new(&1u64)).method2();\n+    //~^ ERROR no method named\n+    //~| HELP the following trait defines an item `method2`, perhaps you need to implement it\n+    //~| HELP `foo::Bar`\n+\n+    no_method_suggested_traits::Foo.method2();\n+    //~^ ERROR no method named\n+    //~| HELP following trait defines an item `method2`, perhaps you need to implement it\n+    //~| HELP `foo::Bar`\n+    std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Foo)).method2();\n+    //~^ ERROR no method named\n+    //~| HELP following trait defines an item `method2`, perhaps you need to implement it\n+    //~| HELP `foo::Bar`\n+    no_method_suggested_traits::Bar::X.method2();\n+    //~^ ERROR no method named\n+    //~| HELP following trait defines an item `method2`, perhaps you need to implement it\n+    //~| HELP `foo::Bar`\n+    std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Bar::X)).method2();\n+    //~^ ERROR no method named\n+    //~| HELP following trait defines an item `method2`, perhaps you need to implement it\n+    //~| HELP `foo::Bar`\n+\n+    Foo.method3();\n+    //~^ ERROR no method named\n+    //~| HELP following trait defines an item `method3`, perhaps you need to implement it\n+    //~| HELP `no_method_suggested_traits::foo::PubPub`\n+    std::rc::Rc::new(&mut Box::new(&Foo)).method3();\n+    //~^ ERROR no method named\n+    //~| HELP following trait defines an item `method3`, perhaps you need to implement it\n+    //~| HELP `no_method_suggested_traits::foo::PubPub`\n+    Bar::X.method3();\n+    //~^ ERROR no method named\n+    //~| HELP following trait defines an item `method3`, perhaps you need to implement it\n+    //~| HELP `no_method_suggested_traits::foo::PubPub`\n+    std::rc::Rc::new(&mut Box::new(&Bar::X)).method3();\n+    //~^ ERROR no method named\n+    //~| HELP following trait defines an item `method3`, perhaps you need to implement it\n+    //~| HELP `no_method_suggested_traits::foo::PubPub`\n+\n+    // should have no help:\n+    1_usize.method3(); //~ ERROR no method named\n+    std::rc::Rc::new(&mut Box::new(&1_usize)).method3(); //~ ERROR no method named\n+    no_method_suggested_traits::Foo.method3();  //~ ERROR no method named\n+    std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Foo)).method3();\n+    //~^ ERROR no method named\n+    no_method_suggested_traits::Bar::X.method3();  //~ ERROR no method named\n+    std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Bar::X)).method3();\n+    //~^ ERROR no method named\n+}"}, {"sha": "95d3007a4fb218e2982727b21ef52146e45cc850", "filename": "src/test/ui/impl-trait/no-method-suggested-traits.stderr", "status": "added", "additions": 230, "deletions": 0, "changes": 230, "blob_url": "https://github.com/rust-lang/rust/blob/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr?ref=13eb0ec9f17c89a3cb06a8f3ae627c076839fa52", "patch": "@@ -0,0 +1,230 @@\n+error[E0599]: no method named `method` found for type `u32` in the current scope\n+  --> $DIR/no-method-suggested-traits.rs:33:10\n+   |\n+33 |     1u32.method();\n+   |          ^^^^^^\n+   |\n+   = help: items from traits can only be used if the trait is in scope\n+   = note: the following traits are implemented but not in scope, perhaps add a `use` for one of them:\n+           candidate #1: `use foo::Bar;`\n+           candidate #2: `use no_method_suggested_traits::foo::PubPub;`\n+\n+error[E0599]: no method named `method` found for type `std::rc::Rc<&mut std::boxed::Box<&u32>>` in the current scope\n+  --> $DIR/no-method-suggested-traits.rs:38:44\n+   |\n+38 |     std::rc::Rc::new(&mut Box::new(&1u32)).method();\n+   |                                            ^^^^^^\n+   |\n+   = help: items from traits can only be used if the trait is in scope\n+   = note: the following traits are implemented but not in scope, perhaps add a `use` for one of them:\n+           candidate #1: `use foo::Bar;`\n+           candidate #2: `use no_method_suggested_traits::foo::PubPub;`\n+\n+error[E0599]: no method named `method` found for type `char` in the current scope\n+  --> $DIR/no-method-suggested-traits.rs:44:9\n+   |\n+44 |     'a'.method();\n+   |         ^^^^^^\n+   |\n+   = help: items from traits can only be used if the trait is in scope\n+   = note: the following trait is implemented but not in scope, perhaps add a `use` for it:\n+           candidate #1: `use foo::Bar;`\n+\n+error[E0599]: no method named `method` found for type `std::rc::Rc<&mut std::boxed::Box<&char>>` in the current scope\n+  --> $DIR/no-method-suggested-traits.rs:48:43\n+   |\n+48 |     std::rc::Rc::new(&mut Box::new(&'a')).method();\n+   |                                           ^^^^^^\n+   |\n+   = help: items from traits can only be used if the trait is in scope\n+   = note: the following trait is implemented but not in scope, perhaps add a `use` for it:\n+           candidate #1: `use foo::Bar;`\n+\n+error[E0599]: no method named `method` found for type `i32` in the current scope\n+  --> $DIR/no-method-suggested-traits.rs:53:10\n+   |\n+53 |     1i32.method();\n+   |          ^^^^^^\n+   |\n+   = help: items from traits can only be used if the trait is in scope\n+   = note: the following trait is implemented but not in scope, perhaps add a `use` for it:\n+           candidate #1: `use no_method_suggested_traits::foo::PubPub;`\n+\n+error[E0599]: no method named `method` found for type `std::rc::Rc<&mut std::boxed::Box<&i32>>` in the current scope\n+  --> $DIR/no-method-suggested-traits.rs:57:44\n+   |\n+57 |     std::rc::Rc::new(&mut Box::new(&1i32)).method();\n+   |                                            ^^^^^^\n+   |\n+   = help: items from traits can only be used if the trait is in scope\n+   = note: the following trait is implemented but not in scope, perhaps add a `use` for it:\n+           candidate #1: `use no_method_suggested_traits::foo::PubPub;`\n+\n+error[E0599]: no method named `method` found for type `Foo` in the current scope\n+  --> $DIR/no-method-suggested-traits.rs:62:9\n+   |\n+62 |     Foo.method();\n+   |         ^^^^^^\n+   |\n+   = help: items from traits can only be used if the trait is implemented and in scope\n+   = note: the following traits define an item `method`, perhaps you need to implement one of them:\n+           candidate #1: `foo::Bar`\n+           candidate #2: `no_method_suggested_traits::foo::PubPub`\n+           candidate #3: `no_method_suggested_traits::bar::PubPriv`\n+           candidate #4: `no_method_suggested_traits::qux::PrivPub`\n+           candidate #5: `no_method_suggested_traits::quz::PrivPriv`\n+           candidate #6: `no_method_suggested_traits::Reexported`\n+\n+error[E0599]: no method named `method` found for type `std::rc::Rc<&mut std::boxed::Box<&Foo>>` in the current scope\n+  --> $DIR/no-method-suggested-traits.rs:71:43\n+   |\n+71 |     std::rc::Rc::new(&mut Box::new(&Foo)).method();\n+   |                                           ^^^^^^\n+   |\n+   = help: items from traits can only be used if the trait is implemented and in scope\n+   = note: the following traits define an item `method`, perhaps you need to implement one of them:\n+           candidate #1: `foo::Bar`\n+           candidate #2: `no_method_suggested_traits::foo::PubPub`\n+           candidate #3: `no_method_suggested_traits::bar::PubPriv`\n+           candidate #4: `no_method_suggested_traits::qux::PrivPub`\n+           candidate #5: `no_method_suggested_traits::quz::PrivPriv`\n+           candidate #6: `no_method_suggested_traits::Reexported`\n+\n+error[E0599]: no method named `method2` found for type `u64` in the current scope\n+  --> $DIR/no-method-suggested-traits.rs:81:10\n+   |\n+81 |     1u64.method2();\n+   |          ^^^^^^^\n+   |\n+   = help: items from traits can only be used if the trait is implemented and in scope\n+   = note: the following trait defines an item `method2`, perhaps you need to implement it:\n+           candidate #1: `foo::Bar`\n+\n+error[E0599]: no method named `method2` found for type `std::rc::Rc<&mut std::boxed::Box<&u64>>` in the current scope\n+  --> $DIR/no-method-suggested-traits.rs:85:44\n+   |\n+85 |     std::rc::Rc::new(&mut Box::new(&1u64)).method2();\n+   |                                            ^^^^^^^\n+   |\n+   = help: items from traits can only be used if the trait is implemented and in scope\n+   = note: the following trait defines an item `method2`, perhaps you need to implement it:\n+           candidate #1: `foo::Bar`\n+\n+error[E0599]: no method named `method2` found for type `no_method_suggested_traits::Foo` in the current scope\n+  --> $DIR/no-method-suggested-traits.rs:90:37\n+   |\n+90 |     no_method_suggested_traits::Foo.method2();\n+   |                                     ^^^^^^^\n+   |\n+   = help: items from traits can only be used if the trait is implemented and in scope\n+   = note: the following trait defines an item `method2`, perhaps you need to implement it:\n+           candidate #1: `foo::Bar`\n+\n+error[E0599]: no method named `method2` found for type `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Foo>>` in the current scope\n+  --> $DIR/no-method-suggested-traits.rs:94:71\n+   |\n+94 |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Foo)).method2();\n+   |                                                                       ^^^^^^^\n+   |\n+   = help: items from traits can only be used if the trait is implemented and in scope\n+   = note: the following trait defines an item `method2`, perhaps you need to implement it:\n+           candidate #1: `foo::Bar`\n+\n+error[E0599]: no method named `method2` found for type `no_method_suggested_traits::Bar` in the current scope\n+  --> $DIR/no-method-suggested-traits.rs:98:40\n+   |\n+98 |     no_method_suggested_traits::Bar::X.method2();\n+   |                                        ^^^^^^^\n+   |\n+   = help: items from traits can only be used if the trait is implemented and in scope\n+   = note: the following trait defines an item `method2`, perhaps you need to implement it:\n+           candidate #1: `foo::Bar`\n+\n+error[E0599]: no method named `method2` found for type `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Bar>>` in the current scope\n+   --> $DIR/no-method-suggested-traits.rs:102:74\n+    |\n+102 |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Bar::X)).method2();\n+    |                                                                          ^^^^^^^\n+    |\n+    = help: items from traits can only be used if the trait is implemented and in scope\n+    = note: the following trait defines an item `method2`, perhaps you need to implement it:\n+            candidate #1: `foo::Bar`\n+\n+error[E0599]: no method named `method3` found for type `Foo` in the current scope\n+   --> $DIR/no-method-suggested-traits.rs:107:9\n+    |\n+107 |     Foo.method3();\n+    |         ^^^^^^^\n+    |\n+    = help: items from traits can only be used if the trait is implemented and in scope\n+    = note: the following trait defines an item `method3`, perhaps you need to implement it:\n+            candidate #1: `no_method_suggested_traits::foo::PubPub`\n+\n+error[E0599]: no method named `method3` found for type `std::rc::Rc<&mut std::boxed::Box<&Foo>>` in the current scope\n+   --> $DIR/no-method-suggested-traits.rs:111:43\n+    |\n+111 |     std::rc::Rc::new(&mut Box::new(&Foo)).method3();\n+    |                                           ^^^^^^^\n+    |\n+    = help: items from traits can only be used if the trait is implemented and in scope\n+    = note: the following trait defines an item `method3`, perhaps you need to implement it:\n+            candidate #1: `no_method_suggested_traits::foo::PubPub`\n+\n+error[E0599]: no method named `method3` found for type `Bar` in the current scope\n+   --> $DIR/no-method-suggested-traits.rs:115:12\n+    |\n+115 |     Bar::X.method3();\n+    |            ^^^^^^^\n+    |\n+    = help: items from traits can only be used if the trait is implemented and in scope\n+    = note: the following trait defines an item `method3`, perhaps you need to implement it:\n+            candidate #1: `no_method_suggested_traits::foo::PubPub`\n+\n+error[E0599]: no method named `method3` found for type `std::rc::Rc<&mut std::boxed::Box<&Bar>>` in the current scope\n+   --> $DIR/no-method-suggested-traits.rs:119:46\n+    |\n+119 |     std::rc::Rc::new(&mut Box::new(&Bar::X)).method3();\n+    |                                              ^^^^^^^\n+    |\n+    = help: items from traits can only be used if the trait is implemented and in scope\n+    = note: the following trait defines an item `method3`, perhaps you need to implement it:\n+            candidate #1: `no_method_suggested_traits::foo::PubPub`\n+\n+error[E0599]: no method named `method3` found for type `usize` in the current scope\n+   --> $DIR/no-method-suggested-traits.rs:125:13\n+    |\n+125 |     1_usize.method3(); //~ ERROR no method named\n+    |             ^^^^^^^\n+\n+error[E0599]: no method named `method3` found for type `std::rc::Rc<&mut std::boxed::Box<&usize>>` in the current scope\n+   --> $DIR/no-method-suggested-traits.rs:126:47\n+    |\n+126 |     std::rc::Rc::new(&mut Box::new(&1_usize)).method3(); //~ ERROR no method named\n+    |                                               ^^^^^^^\n+\n+error[E0599]: no method named `method3` found for type `no_method_suggested_traits::Foo` in the current scope\n+   --> $DIR/no-method-suggested-traits.rs:127:37\n+    |\n+127 |     no_method_suggested_traits::Foo.method3();  //~ ERROR no method named\n+    |                                     ^^^^^^^\n+\n+error[E0599]: no method named `method3` found for type `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Foo>>` in the current scope\n+   --> $DIR/no-method-suggested-traits.rs:128:71\n+    |\n+128 |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Foo)).method3();\n+    |                                                                       ^^^^^^^\n+\n+error[E0599]: no method named `method3` found for type `no_method_suggested_traits::Bar` in the current scope\n+   --> $DIR/no-method-suggested-traits.rs:130:40\n+    |\n+130 |     no_method_suggested_traits::Bar::X.method3();  //~ ERROR no method named\n+    |                                        ^^^^^^^\n+\n+error[E0599]: no method named `method3` found for type `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Bar>>` in the current scope\n+   --> $DIR/no-method-suggested-traits.rs:131:74\n+    |\n+131 |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Bar::X)).method3();\n+    |                                                                          ^^^^^^^\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "9bf00b1b5749a2091f49c74fbdb9303a90ee7270", "filename": "src/test/ui/span/issue-7575.stderr", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/13eb0ec9f17c89a3cb06a8f3ae627c076839fa52/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr?ref=13eb0ec9f17c89a3cb06a8f3ae627c076839fa52", "patch": "@@ -23,10 +23,11 @@ note: candidate #3 is defined in the trait `UnusedTrait`\n 29 |     fn f9(usize) -> usize; //~ NOTE candidate\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n    = help: to disambiguate the method call, write `UnusedTrait::f9(u, 342)` instead\n-   = help: items from traits can only be used if the trait is implemented and in scope; the following traits define an item `f9`, perhaps you need to implement one of them:\n-   = help: candidate #1: `CtxtFn`\n-   = help: candidate #2: `OtherTrait`\n-   = help: candidate #3: `UnusedTrait`\n+   = help: items from traits can only be used if the trait is implemented and in scope\n+   = note: the following traits define an item `f9`, perhaps you need to implement one of them:\n+           candidate #1: `CtxtFn`\n+           candidate #2: `OtherTrait`\n+           candidate #3: `UnusedTrait`\n \n error[E0599]: no method named `fff` found for type `Myisize` in the current scope\n   --> $DIR/issue-7575.rs:74:30\n@@ -58,8 +59,9 @@ note: candidate #1 is defined in the trait `ManyImplTrait`\n 59 | |     }\n    | |_____^\n    = help: to disambiguate the method call, write `ManyImplTrait::is_str(t)` instead\n-   = help: items from traits can only be used if the trait is implemented and in scope; the following trait defines an item `is_str`, perhaps you need to implement it:\n-   = help: candidate #1: `ManyImplTrait`\n+   = help: items from traits can only be used if the trait is implemented and in scope\n+   = note: the following trait defines an item `is_str`, perhaps you need to implement it:\n+           candidate #1: `ManyImplTrait`\n \n error: aborting due to previous error(s)\n "}]}