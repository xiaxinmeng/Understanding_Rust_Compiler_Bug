{"sha": "88918bbefb813745a53fc6043112751611c6d8de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4OTE4YmJlZmI4MTM3NDVhNTNmYzYwNDMxMTI3NTE2MTFjNmQ4ZGU=", "commit": {"author": {"name": "Max Penet", "email": "max.penet@gmail.com", "date": "2012-08-13T07:04:41Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-13T20:53:26Z"}, "message": "initial stab at making rust-mode elpa friendly", "tree": {"sha": "43c47e59ab8043a5fb10299be4d2c656b2791e26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43c47e59ab8043a5fb10299be4d2c656b2791e26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88918bbefb813745a53fc6043112751611c6d8de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88918bbefb813745a53fc6043112751611c6d8de", "html_url": "https://github.com/rust-lang/rust/commit/88918bbefb813745a53fc6043112751611c6d8de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88918bbefb813745a53fc6043112751611c6d8de/comments", "author": {"login": "mpenet", "id": 106390, "node_id": "MDQ6VXNlcjEwNjM5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/106390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpenet", "html_url": "https://github.com/mpenet", "followers_url": "https://api.github.com/users/mpenet/followers", "following_url": "https://api.github.com/users/mpenet/following{/other_user}", "gists_url": "https://api.github.com/users/mpenet/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpenet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpenet/subscriptions", "organizations_url": "https://api.github.com/users/mpenet/orgs", "repos_url": "https://api.github.com/users/mpenet/repos", "events_url": "https://api.github.com/users/mpenet/events{/privacy}", "received_events_url": "https://api.github.com/users/mpenet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f52ddfe9ebd64891f14ec17efa8e2a014f8a439", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f52ddfe9ebd64891f14ec17efa8e2a014f8a439", "html_url": "https://github.com/rust-lang/rust/commit/1f52ddfe9ebd64891f14ec17efa8e2a014f8a439"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "9b6a58f6b147ce8cbe4a4662ddf8cefdf94b5b62", "filename": "src/etc/emacs/cm-mode.el", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/88918bbefb813745a53fc6043112751611c6d8de/src%2Fetc%2Femacs%2Fcm-mode.el", "raw_url": "https://github.com/rust-lang/rust/raw/88918bbefb813745a53fc6043112751611c6d8de/src%2Fetc%2Femacs%2Fcm-mode.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Femacs%2Fcm-mode.el?ref=88918bbefb813745a53fc6043112751611c6d8de", "patch": "@@ -1,8 +1,12 @@\n-;; Wrapper for CodeMirror-style emacs modes. Highlighting is done by\n-;; running a stateful parser (with first-class state object) over the\n-;; buffer, line by line, using the output to add 'face properties, and\n-;; storing the parser state at the end of each line. Indentation is\n-;; done based on the parser state at the start of the line.\n+;;; cm-mode.el --- Wrapper for CodeMirror-style emacs modes\n+\n+;; Version: 0.1.0\n+\n+;; Highlighting is done by running a stateful parser (with first-class\n+;; state object) over the buffer, line by line, using the output to\n+;; add 'face properties, and storing the parser state at the end of\n+;; each line. Indentation is done based on the parser state at the\n+;; start of the line.\n \n (eval-when-compile (require 'cl))\n \n@@ -163,7 +167,7 @@\n         (cm-schedule-work 0.05)))))\n \n (defun cm-do-some-work ()\n-  (save-excursion \n+  (save-excursion\n     (condition-case cnd (cm-do-some-work-inner)\n       (error (print cnd) (error cnd)))))\n \n@@ -174,6 +178,7 @@\n \n ;; Entry function\n \n+;;;###autoload\n (defun cm-mode (mode)\n   (set (make-local-variable 'cm-cur-mode) mode)\n   (set (make-local-variable 'cm-worklist) (list (copy-marker 1)))\n@@ -184,3 +189,5 @@\n   (cm-schedule-work 0.05))\n \n (provide 'cm-mode)\n+\n+;;; <name>.el ends here"}, {"sha": "440f609eadfe373f5c8063cb4fa3ece3e1bc302b", "filename": "src/etc/emacs/rust-mode.el", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/88918bbefb813745a53fc6043112751611c6d8de/src%2Fetc%2Femacs%2Frust-mode.el", "raw_url": "https://github.com/rust-lang/rust/raw/88918bbefb813745a53fc6043112751611c6d8de/src%2Fetc%2Femacs%2Frust-mode.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Femacs%2Frust-mode.el?ref=88918bbefb813745a53fc6043112751611c6d8de", "patch": "@@ -1,3 +1,8 @@\n+;;; rust-mode.el --- A major emacs mode for editing Rust source code\n+\n+;; Version: 0.1.0\n+;; Package-Requires: ((cm-mode \"0.1.0\"))\n+\n (require 'cm-mode)\n (require 'cc-mode)\n \n@@ -277,6 +282,7 @@\n             ((eq (rust-context-align cx) t) (+ (rust-context-column cx) (if closing -1 0)))\n             (t (+ base (if closing 0 unit)))))))\n \n+;;;###autoload\n (define-derived-mode rust-mode fundamental-mode \"Rust\"\n   \"Major mode for editing Rust source files.\"\n   (set-syntax-table rust-syntax-table)\n@@ -293,3 +299,5 @@\n (define-key rust-mode-map \"{\" 'rust-electric-brace)\n \n (provide 'rust-mode)\n+\n+;;; rust-mode.el ends here"}]}