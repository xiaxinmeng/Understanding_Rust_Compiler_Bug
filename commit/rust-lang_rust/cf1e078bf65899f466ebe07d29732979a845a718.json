{"sha": "cf1e078bf65899f466ebe07d29732979a845a718", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmMWUwNzhiZjY1ODk5ZjQ2NmViZTA3ZDI5NzMyOTc5YTg0NWE3MTg=", "commit": {"author": {"name": "Ticki", "email": "Ticki@users.noreply.github.com", "date": "2015-07-21T20:09:29Z"}, "committer": {"name": "Ticki", "email": "Ticki@users.noreply.github.com", "date": "2015-07-21T20:09:29Z"}, "message": "Klabnik nit-picks ;)", "tree": {"sha": "e977e3759632ccd17718cdc6ec67dd6143f80ddf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e977e3759632ccd17718cdc6ec67dd6143f80ddf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf1e078bf65899f466ebe07d29732979a845a718", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf1e078bf65899f466ebe07d29732979a845a718", "html_url": "https://github.com/rust-lang/rust/commit/cf1e078bf65899f466ebe07d29732979a845a718", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf1e078bf65899f466ebe07d29732979a845a718/comments", "author": {"login": "ticki", "id": 13349091, "node_id": "MDQ6VXNlcjEzMzQ5MDkx", "avatar_url": "https://avatars.githubusercontent.com/u/13349091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ticki", "html_url": "https://github.com/ticki", "followers_url": "https://api.github.com/users/ticki/followers", "following_url": "https://api.github.com/users/ticki/following{/other_user}", "gists_url": "https://api.github.com/users/ticki/gists{/gist_id}", "starred_url": "https://api.github.com/users/ticki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ticki/subscriptions", "organizations_url": "https://api.github.com/users/ticki/orgs", "repos_url": "https://api.github.com/users/ticki/repos", "events_url": "https://api.github.com/users/ticki/events{/privacy}", "received_events_url": "https://api.github.com/users/ticki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ticki", "id": 13349091, "node_id": "MDQ6VXNlcjEzMzQ5MDkx", "avatar_url": "https://avatars.githubusercontent.com/u/13349091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ticki", "html_url": "https://github.com/ticki", "followers_url": "https://api.github.com/users/ticki/followers", "following_url": "https://api.github.com/users/ticki/following{/other_user}", "gists_url": "https://api.github.com/users/ticki/gists{/gist_id}", "starred_url": "https://api.github.com/users/ticki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ticki/subscriptions", "organizations_url": "https://api.github.com/users/ticki/orgs", "repos_url": "https://api.github.com/users/ticki/repos", "events_url": "https://api.github.com/users/ticki/events{/privacy}", "received_events_url": "https://api.github.com/users/ticki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48870d4f05177aa8e4d8439b71f39283f1880327", "url": "https://api.github.com/repos/rust-lang/rust/commits/48870d4f05177aa8e4d8439b71f39283f1880327", "html_url": "https://github.com/rust-lang/rust/commit/48870d4f05177aa8e4d8439b71f39283f1880327"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1b223365bd63ac72a15c072fc79da5a5ec3967d9", "filename": "src/doc/trpl/unsafe.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf1e078bf65899f466ebe07d29732979a845a718/src%2Fdoc%2Ftrpl%2Funsafe.md", "raw_url": "https://github.com/rust-lang/rust/raw/cf1e078bf65899f466ebe07d29732979a845a718/src%2Fdoc%2Ftrpl%2Funsafe.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Funsafe.md?ref=cf1e078bf65899f466ebe07d29732979a845a718", "patch": "@@ -103,7 +103,7 @@ borrow checker\u2019. Adding `unsafe` to some random Rust code doesn\u2019t change its\n semantics, it won\u2019t just start accepting anything. But it will let you write\n things that _do_ break some of the rules.\n \n-You will also encounter the 'unsafe' keyword when writing bindings to foreign\n+You will also encounter the `unsafe` keyword when writing bindings to foreign\n (non-Rust) interfaces. You're encouraged to write a safe, native Rust interface\n around the methods provided by the library.\n "}]}