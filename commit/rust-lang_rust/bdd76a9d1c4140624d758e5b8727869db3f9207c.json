{"sha": "bdd76a9d1c4140624d758e5b8727869db3f9207c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkZDc2YTlkMWM0MTQwNjI0ZDc1OGU1Yjg3Mjc4NjlkYjNmOTIwN2M=", "commit": {"author": {"name": "dvermd", "email": "315743+dvermd@users.noreply.github.com", "date": "2020-10-13T20:47:46Z"}, "committer": {"name": "dvermd", "email": "315743+dvermd@users.noreply.github.com", "date": "2020-10-26T21:34:42Z"}, "message": "clippy_lint: Allow 'ref_option_ref' for 'option_if_let_else'", "tree": {"sha": "a20ebbb3156e6879c8bc36240fa51cad0c0a2290", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a20ebbb3156e6879c8bc36240fa51cad0c0a2290"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdd76a9d1c4140624d758e5b8727869db3f9207c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdd76a9d1c4140624d758e5b8727869db3f9207c", "html_url": "https://github.com/rust-lang/rust/commit/bdd76a9d1c4140624d758e5b8727869db3f9207c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdd76a9d1c4140624d758e5b8727869db3f9207c/comments", "author": {"login": "dvermd", "id": 315743, "node_id": "MDQ6VXNlcjMxNTc0Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/315743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvermd", "html_url": "https://github.com/dvermd", "followers_url": "https://api.github.com/users/dvermd/followers", "following_url": "https://api.github.com/users/dvermd/following{/other_user}", "gists_url": "https://api.github.com/users/dvermd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvermd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvermd/subscriptions", "organizations_url": "https://api.github.com/users/dvermd/orgs", "repos_url": "https://api.github.com/users/dvermd/repos", "events_url": "https://api.github.com/users/dvermd/events{/privacy}", "received_events_url": "https://api.github.com/users/dvermd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dvermd", "id": 315743, "node_id": "MDQ6VXNlcjMxNTc0Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/315743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvermd", "html_url": "https://github.com/dvermd", "followers_url": "https://api.github.com/users/dvermd/followers", "following_url": "https://api.github.com/users/dvermd/following{/other_user}", "gists_url": "https://api.github.com/users/dvermd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvermd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvermd/subscriptions", "organizations_url": "https://api.github.com/users/dvermd/orgs", "repos_url": "https://api.github.com/users/dvermd/repos", "events_url": "https://api.github.com/users/dvermd/events{/privacy}", "received_events_url": "https://api.github.com/users/dvermd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1f3bab6b19ee27bce5b8c4df0d8413da7728473", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1f3bab6b19ee27bce5b8c4df0d8413da7728473", "html_url": "https://github.com/rust-lang/rust/commit/c1f3bab6b19ee27bce5b8c4df0d8413da7728473"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "47e7460fa7a44d4a11f38119d9c2a118d7075d0f", "filename": "tests/ui/option_if_let_else.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bdd76a9d1c4140624d758e5b8727869db3f9207c/tests%2Fui%2Foption_if_let_else.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/bdd76a9d1c4140624d758e5b8727869db3f9207c/tests%2Fui%2Foption_if_let_else.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.fixed?ref=bdd76a9d1c4140624d758e5b8727869db3f9207c", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n #![warn(clippy::option_if_let_else)]\n #![allow(clippy::redundant_closure)]\n+#![allow(clippy::ref_option_ref)]\n \n fn bad1(string: Option<&str>) -> (bool, &str) {\n     string.map_or((false, \"hello\"), |x| (true, x))"}, {"sha": "e2f8dec3b930c898bafc52bf82acbf6852c48d7c", "filename": "tests/ui/option_if_let_else.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bdd76a9d1c4140624d758e5b8727869db3f9207c/tests%2Fui%2Foption_if_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdd76a9d1c4140624d758e5b8727869db3f9207c/tests%2Fui%2Foption_if_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.rs?ref=bdd76a9d1c4140624d758e5b8727869db3f9207c", "patch": "@@ -1,6 +1,7 @@\n // run-rustfix\n #![warn(clippy::option_if_let_else)]\n #![allow(clippy::redundant_closure)]\n+#![allow(clippy::ref_option_ref)]\n \n fn bad1(string: Option<&str>) -> (bool, &str) {\n     if let Some(x) = string {"}, {"sha": "7aab068800a029079e17fe4522474ef04e3bd264", "filename": "tests/ui/option_if_let_else.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bdd76a9d1c4140624d758e5b8727869db3f9207c/tests%2Fui%2Foption_if_let_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bdd76a9d1c4140624d758e5b8727869db3f9207c/tests%2Fui%2Foption_if_let_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.stderr?ref=bdd76a9d1c4140624d758e5b8727869db3f9207c", "patch": "@@ -1,5 +1,5 @@\n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:6:5\n+  --> $DIR/option_if_let_else.rs:7:5\n    |\n LL | /     if let Some(x) = string {\n LL | |         (true, x)\n@@ -11,7 +11,7 @@ LL | |     }\n    = note: `-D clippy::option-if-let-else` implied by `-D warnings`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:16:12\n+  --> $DIR/option_if_let_else.rs:17:12\n    |\n LL |       } else if let Some(x) = string {\n    |  ____________^\n@@ -22,19 +22,19 @@ LL | |     }\n    | |_____^ help: try: `{ string.map_or(Some((false, \"\")), |x| Some((true, x))) }`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:24:13\n+  --> $DIR/option_if_let_else.rs:25:13\n    |\n LL |     let _ = if let Some(s) = *string { s.len() } else { 0 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `string.map_or(0, |s| s.len())`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:25:13\n+  --> $DIR/option_if_let_else.rs:26:13\n    |\n LL |     let _ = if let Some(s) = &num { s } else { &0 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `num.as_ref().map_or(&0, |s| s)`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:26:13\n+  --> $DIR/option_if_let_else.rs:27:13\n    |\n LL |       let _ = if let Some(s) = &mut num {\n    |  _____________^\n@@ -54,13 +54,13 @@ LL |     });\n    |\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:32:13\n+  --> $DIR/option_if_let_else.rs:33:13\n    |\n LL |     let _ = if let Some(ref s) = num { s } else { &0 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `num.as_ref().map_or(&0, |s| s)`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:33:13\n+  --> $DIR/option_if_let_else.rs:34:13\n    |\n LL |       let _ = if let Some(mut s) = num {\n    |  _____________^\n@@ -80,7 +80,7 @@ LL |     });\n    |\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:39:13\n+  --> $DIR/option_if_let_else.rs:40:13\n    |\n LL |       let _ = if let Some(ref mut s) = num {\n    |  _____________^\n@@ -100,7 +100,7 @@ LL |     });\n    |\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:48:5\n+  --> $DIR/option_if_let_else.rs:49:5\n    |\n LL | /     if let Some(x) = arg {\n LL | |         let y = x * x;\n@@ -119,7 +119,7 @@ LL |     })\n    |\n \n error: use Option::map_or_else instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:61:13\n+  --> $DIR/option_if_let_else.rs:62:13\n    |\n LL |       let _ = if let Some(x) = arg {\n    |  _____________^\n@@ -131,7 +131,7 @@ LL | |     };\n    | |_____^ help: try: `arg.map_or_else(|| side_effect(), |x| x)`\n \n error: use Option::map_or_else instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:70:13\n+  --> $DIR/option_if_let_else.rs:71:13\n    |\n LL |       let _ = if let Some(x) = arg {\n    |  _____________^\n@@ -154,7 +154,7 @@ LL |     }, |x| x * x * x * x);\n    |\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:99:13\n+  --> $DIR/option_if_let_else.rs:100:13\n    |\n LL |     let _ = if let Some(x) = optional { x + 2 } else { 5 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `optional.map_or(5, |x| x + 2)`"}]}