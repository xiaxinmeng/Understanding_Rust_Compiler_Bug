{"sha": "ed89b0638b1dbf8f9a33d9a95e829e602142bb05", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkODliMDYzOGIxZGJmOGY5YTMzZDlhOTVlODI5ZTYwMjE0MmJiMDU=", "commit": {"author": {"name": "Pascal Hertleif", "email": "pascal@technocreatives.com", "date": "2019-05-25T10:56:52Z"}, "committer": {"name": "Pascal Hertleif", "email": "pascal@technocreatives.com", "date": "2019-05-27T09:26:35Z"}, "message": "Hash based on binding name and shadow counter", "tree": {"sha": "b0b6b5f33fb25d79744662e1c17b6c610de67b95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0b6b5f33fb25d79744662e1c17b6c610de67b95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed89b0638b1dbf8f9a33d9a95e829e602142bb05", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niF0EABECAB0WIQQ4AX3IqIzUAd4RqS7tuxqNIEegdAUCXOutSwAKCRDtuxqNIEeg\ndJhwAKCvPlIePQp3vQzKJlj3f5KYTwH1cgCfeWKLAm//wXyUI1pE+g7LTKV73oU=\n=p8IF\n-----END PGP SIGNATURE-----", "payload": "tree b0b6b5f33fb25d79744662e1c17b6c610de67b95\nparent 5bf3e949e8470a138a61c806769e1a329761cab6\nauthor Pascal Hertleif <pascal@technocreatives.com> 1558781812 +0200\ncommitter Pascal Hertleif <pascal@technocreatives.com> 1558949195 +0200\n\nHash based on binding name and shadow counter\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed89b0638b1dbf8f9a33d9a95e829e602142bb05", "html_url": "https://github.com/rust-lang/rust/commit/ed89b0638b1dbf8f9a33d9a95e829e602142bb05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed89b0638b1dbf8f9a33d9a95e829e602142bb05/comments", "author": {"login": "killercup", "id": 20063, "node_id": "MDQ6VXNlcjIwMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/20063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killercup", "html_url": "https://github.com/killercup", "followers_url": "https://api.github.com/users/killercup/followers", "following_url": "https://api.github.com/users/killercup/following{/other_user}", "gists_url": "https://api.github.com/users/killercup/gists{/gist_id}", "starred_url": "https://api.github.com/users/killercup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killercup/subscriptions", "organizations_url": "https://api.github.com/users/killercup/orgs", "repos_url": "https://api.github.com/users/killercup/repos", "events_url": "https://api.github.com/users/killercup/events{/privacy}", "received_events_url": "https://api.github.com/users/killercup/received_events", "type": "User", "site_admin": false}, "committer": {"login": "killercup", "id": 20063, "node_id": "MDQ6VXNlcjIwMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/20063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killercup", "html_url": "https://github.com/killercup", "followers_url": "https://api.github.com/users/killercup/followers", "following_url": "https://api.github.com/users/killercup/following{/other_user}", "gists_url": "https://api.github.com/users/killercup/gists{/gist_id}", "starred_url": "https://api.github.com/users/killercup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killercup/subscriptions", "organizations_url": "https://api.github.com/users/killercup/orgs", "repos_url": "https://api.github.com/users/killercup/repos", "events_url": "https://api.github.com/users/killercup/events{/privacy}", "received_events_url": "https://api.github.com/users/killercup/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bf3e949e8470a138a61c806769e1a329761cab6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bf3e949e8470a138a61c806769e1a329761cab6", "html_url": "https://github.com/rust-lang/rust/commit/5bf3e949e8470a138a61c806769e1a329761cab6"}], "stats": {"total": 102, "additions": 81, "deletions": 21}, "files": [{"sha": "e50003b3c087f3cc177a8b9e65e319014e1d8234", "filename": "crates/ra_ide_api/src/snapshots/tests__highlighting.snap", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ed89b0638b1dbf8f9a33d9a95e829e602142bb05/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlighting.snap", "raw_url": "https://github.com/rust-lang/rust/raw/ed89b0638b1dbf8f9a33d9a95e829e602142bb05/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlighting.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlighting.snap?ref=ed89b0638b1dbf8f9a33d9a95e829e602142bb05", "patch": "@@ -1,5 +1,5 @@\n ---\n-created: \"2019-05-25T10:53:54.439877Z\"\n+created: \"2019-05-25T11:24:53.486036Z\"\n creator: insta@0.8.1\n source: crates/ra_ide_api/src/syntax_highlighting.rs\n expression: result\n@@ -20,7 +20,7 @@ Ok(\n             range: [32; 35),\n             tag: \"variable\",\n             id: Some(\n-                461893210254723387,\n+                8465336196764640996,\n             ),\n         },\n         HighlightedRange {\n@@ -32,7 +32,7 @@ Ok(\n             range: [46; 47),\n             tag: \"variable\",\n             id: Some(\n-                8312289520117458465,\n+                176272420896316891,\n             ),\n         },\n         HighlightedRange {\n@@ -49,7 +49,7 @@ Ok(\n             range: [62; 63),\n             tag: \"variable\",\n             id: Some(\n-                4497542318236667727,\n+                15061637676198917049,\n             ),\n         },\n         HighlightedRange {\n@@ -66,7 +66,7 @@ Ok(\n             range: [76; 79),\n             tag: \"variable\",\n             id: Some(\n-                4506850079084802999,\n+                14077410872302487760,\n             ),\n         },\n         HighlightedRange {\n@@ -78,7 +78,7 @@ Ok(\n             range: [80; 81),\n             tag: \"variable\",\n             id: Some(\n-                16968185728268100018,\n+                8379786015941272633,\n             ),\n         },\n         HighlightedRange {\n@@ -105,7 +105,7 @@ Ok(\n             range: [131; 135),\n             tag: \"variable\",\n             id: Some(\n-                14467718814232352107,\n+                5766414492220109266,\n             ),\n         },\n         HighlightedRange {"}, {"sha": "84cd521a24e4bee911222e3433377b3c6473d4ff", "filename": "crates/ra_ide_api/src/snapshots/tests__rainbow_highlighting.snap", "status": "renamed", "additions": 48, "deletions": 7, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/ed89b0638b1dbf8f9a33d9a95e829e602142bb05/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__rainbow_highlighting.snap", "raw_url": "https://github.com/rust-lang/rust/raw/ed89b0638b1dbf8f9a33d9a95e829e602142bb05/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__rainbow_highlighting.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__rainbow_highlighting.snap?ref=ed89b0638b1dbf8f9a33d9a95e829e602142bb05", "patch": "@@ -1,5 +1,5 @@\n ---\n-created: \"2019-05-25T10:25:13.898113Z\"\n+created: \"2019-05-25T11:21:56.117898Z\"\n creator: insta@0.8.1\n source: crates/ra_ide_api/src/syntax_highlighting.rs\n expression: result\n@@ -15,7 +15,7 @@ Ok(\n             range: [4; 8),\n             tag: \"variable\",\n             id: Some(\n-                17119830160611610240,\n+                5766414492220109266,\n             ),\n         },\n         HighlightedRange {\n@@ -27,7 +27,7 @@ Ok(\n             range: [21; 26),\n             tag: \"variable\",\n             id: Some(\n-                2744494144922727377,\n+                15975256018338854530,\n             ),\n         },\n         HighlightedRange {\n@@ -44,14 +44,14 @@ Ok(\n             range: [46; 47),\n             tag: \"variable\",\n             id: Some(\n-                10375904121795371996,\n+                176272420896316891,\n             ),\n         },\n         HighlightedRange {\n             range: [50; 55),\n             tag: \"variable\",\n             id: Some(\n-                2744494144922727377,\n+                15975256018338854530,\n             ),\n         },\n         HighlightedRange {\n@@ -68,20 +68,61 @@ Ok(\n             range: [77; 78),\n             tag: \"variable\",\n             id: Some(\n-                8228548264153724449,\n+                15061637676198917049,\n             ),\n         },\n         HighlightedRange {\n             range: [81; 86),\n             tag: \"variable\",\n             id: Some(\n-                2744494144922727377,\n+                15975256018338854530,\n             ),\n         },\n         HighlightedRange {\n             range: [87; 96),\n             tag: \"text\",\n             id: None,\n         },\n+        HighlightedRange {\n+            range: [105; 108),\n+            tag: \"keyword\",\n+            id: None,\n+        },\n+        HighlightedRange {\n+            range: [109; 110),\n+            tag: \"variable\",\n+            id: Some(\n+                1714508680417729339,\n+            ),\n+        },\n+        HighlightedRange {\n+            range: [113; 134),\n+            tag: \"string\",\n+            id: None,\n+        },\n+        HighlightedRange {\n+            range: [140; 143),\n+            tag: \"keyword\",\n+            id: None,\n+        },\n+        HighlightedRange {\n+            range: [144; 145),\n+            tag: \"variable\",\n+            id: Some(\n+                15953336624848413466,\n+            ),\n+        },\n+        HighlightedRange {\n+            range: [148; 149),\n+            tag: \"variable\",\n+            id: Some(\n+                1714508680417729339,\n+            ),\n+        },\n+        HighlightedRange {\n+            range: [150; 159),\n+            tag: \"text\",\n+            id: None,\n+        },\n     ],\n )", "previous_filename": "crates/ra_ide_api/src/snapshots/tests__sematic_highlighting.snap"}, {"sha": "407fcda4a75d01fd46c601b494fb15e2e40468dd", "filename": "crates/ra_ide_api/src/syntax_highlighting.rs", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ed89b0638b1dbf8f9a33d9a95e829e602142bb05/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed89b0638b1dbf8f9a33d9a95e829e602142bb05/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs?ref=ed89b0638b1dbf8f9a33d9a95e829e602142bb05", "patch": "@@ -1,6 +1,6 @@\n-use rustc_hash::FxHashSet;\n+use rustc_hash::{FxHashSet, FxHashMap};\n \n-use ra_syntax::{ast, AstNode, TextRange, Direction, SyntaxKind, SyntaxKind::*, SyntaxElement, T};\n+use ra_syntax::{ast, AstNode, TextRange, Direction, SmolStr, SyntaxKind, SyntaxKind::*, SyntaxElement, T};\n use ra_db::SourceDatabase;\n use ra_prof::profile;\n \n@@ -43,6 +43,8 @@ pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Vec<HighlightedRa\n \n     // Visited nodes to handle highlighting priorities\n     let mut highlighted: FxHashSet<SyntaxElement> = FxHashSet::default();\n+    let mut bindings_shadow_count: FxHashMap<SmolStr, u32> = FxHashMap::default();\n+\n     let mut res = Vec::new();\n     for node in source_file.syntax().descendants_with_tokens() {\n         if highlighted.contains(&node) {\n@@ -77,7 +79,11 @@ pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Vec<HighlightedRa\n                         Some(Def(ModuleDef::Trait(_))) => (\"type\", None),\n                         Some(Def(ModuleDef::TypeAlias(_))) => (\"type\", None),\n                         Some(SelfType(_)) => (\"type\", None),\n-                        Some(Pat(ptr)) => (\"variable\", Some(hash(ptr.syntax_node_ptr().range()))),\n+                        Some(Pat(ptr)) => (\"variable\", Some(hash({\n+                            let text = ptr.syntax_node_ptr().to_node(&source_file.syntax()).text().to_smol_string();\n+                            let shadow_count = bindings_shadow_count.entry(text.clone()).or_default();\n+                            (text, shadow_count)\n+                        }))),\n                         Some(SelfParam(_)) => (\"type\", None),\n                         Some(GenericParam(_)) => (\"type\", None),\n                         None => (\"text\", None),\n@@ -88,7 +94,12 @@ pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Vec<HighlightedRa\n             }\n             NAME => {\n                 if let Some(name) = node.as_ast_node::<ast::Name>() {\n-                    (\"variable\", Some(hash(name.syntax().range())))\n+                    (\"variable\", Some(hash({\n+                        let text = name.syntax().text().to_smol_string();\n+                        let shadow_count = bindings_shadow_count.entry(text.clone()).or_insert(1);\n+                        *shadow_count += 1;\n+                        (text, shadow_count)\n+                    })))\n                 } else {\n                     (\"text\", None)\n                 }\n@@ -240,16 +251,19 @@ fn main() {\n     }\n \n     #[test]\n-    fn test_sematic_highlighting() {\n+    fn test_rainbow_highlighting() {\n         let (analysis, file_id) = single_file(\n             r#\"\n fn main() {\n     let hello = \"hello\";\n     let x = hello.to_string();\n     let y = hello.to_string();\n+\n+    let x = \"other color please!\";\n+    let y = x.to_string();\n }\"#,\n         );\n         let result = analysis.highlight(file_id);\n-        assert_debug_snapshot_matches!(\"sematic_highlighting\", result);\n+        assert_debug_snapshot_matches!(\"rainbow_highlighting\", result);\n     }\n }"}, {"sha": "bff1ed5a0dd68c41d5d214f9eec9d59e3b7420a2", "filename": "crates/ra_syntax/src/syntax_text.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ed89b0638b1dbf8f9a33d9a95e829e602142bb05/crates%2Fra_syntax%2Fsrc%2Fsyntax_text.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed89b0638b1dbf8f9a33d9a95e829e602142bb05/crates%2Fra_syntax%2Fsrc%2Fsyntax_text.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_text.rs?ref=ed89b0638b1dbf8f9a33d9a95e829e602142bb05", "patch": "@@ -1,6 +1,6 @@\n use std::{fmt, ops::{self, Bound}};\n \n-use crate::{SyntaxNode, TextRange, TextUnit, SyntaxElement};\n+use crate::{SmolStr, SyntaxNode, TextRange, TextUnit, SyntaxElement};\n \n #[derive(Clone)]\n pub struct SyntaxText<'a> {\n@@ -34,6 +34,11 @@ impl<'a> SyntaxText<'a> {\n         self.chunks().collect()\n     }\n \n+    pub fn to_smol_string(&self) -> SmolStr {\n+        // TODO: `impl iter::FromIterator<&str> for SmolStr`\n+        self.to_string().into()\n+    }\n+\n     pub fn contains(&self, c: char) -> bool {\n         self.chunks().any(|it| it.contains(c))\n     }"}]}