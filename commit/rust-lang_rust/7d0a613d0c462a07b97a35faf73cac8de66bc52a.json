{"sha": "7d0a613d0c462a07b97a35faf73cac8de66bc52a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkMGE2MTNkMGM0NjJhMDdiOTdhMzVmYWY3M2NhYzhkZTY2YmM1MmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-20T04:31:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-20T04:31:33Z"}, "message": "auto merge of #15776 : alexcrichton/rust/snapshots, r=huonw", "tree": {"sha": "a5baecce8ba180d9e5c5d50a4f3685c7648425fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5baecce8ba180d9e5c5d50a4f3685c7648425fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d0a613d0c462a07b97a35faf73cac8de66bc52a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d0a613d0c462a07b97a35faf73cac8de66bc52a", "html_url": "https://github.com/rust-lang/rust/commit/7d0a613d0c462a07b97a35faf73cac8de66bc52a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d0a613d0c462a07b97a35faf73cac8de66bc52a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56fafe28ee17a4aa48795083ee08be744f068067", "url": "https://api.github.com/repos/rust-lang/rust/commits/56fafe28ee17a4aa48795083ee08be744f068067", "html_url": "https://github.com/rust-lang/rust/commit/56fafe28ee17a4aa48795083ee08be744f068067"}, {"sha": "707cf47ac814c7af124dcfe378f97c25eb6b4511", "url": "https://api.github.com/repos/rust-lang/rust/commits/707cf47ac814c7af124dcfe378f97c25eb6b4511", "html_url": "https://github.com/rust-lang/rust/commit/707cf47ac814c7af124dcfe378f97c25eb6b4511"}], "stats": {"total": 112, "additions": 17, "deletions": 95}, "files": [{"sha": "5db6c72975587346501822b62cb04c847a37b942", "filename": "src/librustc_back/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d0a613d0c462a07b97a35faf73cac8de66bc52a/src%2Flibrustc_back%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d0a613d0c462a07b97a35faf73cac8de66bc52a/src%2Flibrustc_back%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Flib.rs?ref=7d0a613d0c462a07b97a35faf73cac8de66bc52a", "patch": "@@ -21,7 +21,6 @@\n //! one that doesn't; the one that doesn't might get decent parallel\n //! build speedups.\n \n-#![crate_id = \"rustc_back#0.11.0-pre\"]\n #![crate_name = \"rustc_back\"]\n #![experimental]\n #![comment = \"The Rust compiler minimal-dependency dumping-ground\"]\n@@ -33,7 +32,6 @@\n       html_root_url = \"http://doc.rust-lang.org/\")]\n \n #![feature(globs, phase, macro_rules)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n #[phase(plugin, link)]\n extern crate log;"}, {"sha": "215ae444b6920f3181e2548e940c7b614b273cf1", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d0a613d0c462a07b97a35faf73cac8de66bc52a/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d0a613d0c462a07b97a35faf73cac8de66bc52a/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=7d0a613d0c462a07b97a35faf73cac8de66bc52a", "patch": "@@ -13,7 +13,6 @@\n #![allow(non_snake_case_functions)]\n #![allow(dead_code)]\n \n-#![crate_id = \"rustc_llvm#0.11.0\"]\n #![crate_name = \"rustc_llvm\"]\n #![experimental]\n #![license = \"MIT/ASL2\"]\n@@ -25,7 +24,6 @@\n \n #![feature(globs)]\n #![feature(link_args)]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n extern crate libc;\n "}, {"sha": "3b4f6a6e0f85f34b5a1d67555d504d00e277a3e6", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 9, "deletions": 64, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/7d0a613d0c462a07b97a35faf73cac8de66bc52a/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d0a613d0c462a07b97a35faf73cac8de66bc52a/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=7d0a613d0c462a07b97a35faf73cac8de66bc52a", "patch": "@@ -766,30 +766,6 @@ pub trait PostExpansionMethod {\n     fn pe_vis(&self) -> ast::Visibility;\n }\n \n-\n-/// can't use the standard cfg(stage0) tricks here, because the error occurs in\n-/// parsing, before cfg gets a chance to save the day. (yes, interleaved parsing\n-/// / expansion / configuring would solve this problem...)\n-\n-// NOTE: remove after next snapshot\n-/// to be more specific: after a snapshot, swap out the \"PRE\" stuff, and\n-// swap in the \"POST\" stuff.\n-\n-/// PRE\n-macro_rules! mf_method_body{\n-    ($slf:ident, $field_pat:pat, $result:ident) => {\n-        match $slf.node {\n-            $field_pat => $result,\n-                MethMac(_) => {\n-                    fail!(\"expected an AST without macro invocations\");\n-                }\n-        }\n-    }\n-}\n-\n-/// POST\n-/*\n-#[cfg(not(stage0))]\n macro_rules! mf_method{\n     ($meth_name:ident, $field_ty:ty, $field_pat:pat, $result:ident) => {\n         fn $meth_name<'a>(&'a self) -> $field_ty {\n@@ -801,52 +777,21 @@ macro_rules! mf_method{\n             }\n         }\n     }\n-}*/\n-\n-\n-// PRE\n-impl PostExpansionMethod for Method {\n-    fn pe_ident(&self) -> ast::Ident {\n-        mf_method_body!(self, MethDecl(ident,_,_,_,_,_,_,_),ident)\n-    }\n-    fn pe_generics<'a>(&'a self) -> &'a ast::Generics {\n-        mf_method_body!(self, MethDecl(_,ref generics,_,_,_,_,_,_),generics)\n-    }\n-    fn pe_abi(&self) -> Abi {\n-        mf_method_body!(self, MethDecl(_,_,abi,_,_,_,_,_),abi)\n-    }\n-    fn pe_explicit_self<'a>(&'a self) -> &'a ast::ExplicitSelf {\n-        mf_method_body!(self, MethDecl(_,_,_,ref explicit_self,_,_,_,_),explicit_self)\n-    }\n-    fn pe_fn_style(&self) -> ast::FnStyle{\n-        mf_method_body!(self, MethDecl(_,_,_,_,fn_style,_,_,_),fn_style)\n-    }\n-    fn pe_fn_decl(&self) -> P<ast::FnDecl> {\n-        mf_method_body!(self, MethDecl(_,_,_,_,_,decl,_,_),decl)\n-    }\n-    fn pe_body(&self) -> P<ast::Block> {\n-        mf_method_body!(self, MethDecl(_,_,_,_,_,_,body,_),body)\n-    }\n-    fn pe_vis(&self) -> ast::Visibility {\n-        mf_method_body!(self, MethDecl(_,_,_,_,_,_,_,vis),vis)\n-    }\n }\n \n-// POST\n-/*\n-#[cfg(not(stage0))]\n+\n impl PostExpansionMethod for Method {\n-    mf_method!(pe_ident,ast::Ident,MethDecl(ident,_,_,_,_,_,_),ident)\n+    mf_method!(pe_ident,ast::Ident,MethDecl(ident,_,_,_,_,_,_,_),ident)\n     mf_method!(pe_generics,&'a ast::Generics,\n-               MethDecl(_,ref generics,_,_,_,_,_),generics)\n+               MethDecl(_,ref generics,_,_,_,_,_,_),generics)\n+    mf_method!(pe_abi,Abi,MethDecl(_,_,abi,_,_,_,_,_),abi)\n     mf_method!(pe_explicit_self,&'a ast::ExplicitSelf,\n-               MethDecl(_,_,ref explicit_self,_,_,_,_),explicit_self)\n-    mf_method!(pe_fn_style,ast::FnStyle,MethDecl(_,_,_,fn_style,_,_,_),fn_style)\n-    mf_method!(pe_fn_decl,P<ast::FnDecl>,MethDecl(_,_,_,_,decl,_,_),decl)\n-    mf_method!(pe_body,P<ast::Block>,MethDecl(_,_,_,_,_,body,_),body)\n-    mf_method!(pe_vis,ast::Visibility,MethDecl(_,_,_,_,_,_,vis),vis)\n+               MethDecl(_,_,_,ref explicit_self,_,_,_,_),explicit_self)\n+    mf_method!(pe_fn_style,ast::FnStyle,MethDecl(_,_,_,_,fn_style,_,_,_),fn_style)\n+    mf_method!(pe_fn_decl,P<ast::FnDecl>,MethDecl(_,_,_,_,_,decl,_,_),decl)\n+    mf_method!(pe_body,P<ast::Block>,MethDecl(_,_,_,_,_,_,body,_),body)\n+    mf_method!(pe_vis,ast::Visibility,MethDecl(_,_,_,_,_,_,_,vis),vis)\n }\n-*/\n \n #[cfg(test)]\n mod test {"}, {"sha": "c344168b62a2841b679fbd6a6a23390a9a81de28", "filename": "src/libsyntax/diagnostics/macros.rs", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7d0a613d0c462a07b97a35faf73cac8de66bc52a/src%2Flibsyntax%2Fdiagnostics%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d0a613d0c462a07b97a35faf73cac8de66bc52a/src%2Flibsyntax%2Fdiagnostics%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostics%2Fmacros.rs?ref=7d0a613d0c462a07b97a35faf73cac8de66bc52a", "patch": "@@ -10,38 +10,12 @@\n \n #![macro_escape]\n \n-// NOTE: remove after next snapshot\n-#[cfg(stage0)]\n-#[macro_export]\n-macro_rules! __register_diagnostic(\n-    ($code:tt, $description:tt) => ();\n-    ($code:tt) => ()\n-)\n-\n #[macro_export]\n macro_rules! register_diagnostic(\n     ($code:tt, $description:tt) => (__register_diagnostic!($code, $description));\n     ($code:tt) => (__register_diagnostic!($code))\n )\n \n-// NOTE: remove after next snapshot\n-#[cfg(stage0)]\n-#[macro_export]\n-macro_rules! __build_diagnostic_array(\n-    ($name:ident) => {\n-        pub static $name: [(&'static str, &'static str), ..0] = [];\n-    }\n-)\n-\n-// NOTE: remove after next snapshot\n-#[cfg(stage0)]\n-#[macro_export]\n-macro_rules! __diagnostic_used(\n-    ($code:ident) => {\n-        ()\n-    }\n-)\n-\n #[macro_export]\n macro_rules! span_err(\n     ($session:expr, $span:expr, $code:ident, $($message:tt)*) => ({"}, {"sha": "c923799e812ff099416876650dfa5ab3ae73505e", "filename": "src/libunicode/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7d0a613d0c462a07b97a35faf73cac8de66bc52a/src%2Flibunicode%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d0a613d0c462a07b97a35faf73cac8de66bc52a/src%2Flibunicode%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunicode%2Flib.rs?ref=7d0a613d0c462a07b97a35faf73cac8de66bc52a", "patch": "@@ -29,7 +29,6 @@\n        html_root_url = \"http://doc.rust-lang.org/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n #![no_std]\n-#![allow(unused_attribute)] // NOTE: remove after stage0\n \n extern crate core;\n "}, {"sha": "623f8f8bcc00d3097c4f4f02bba9cad9a6ba489c", "filename": "src/snapshots.txt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7d0a613d0c462a07b97a35faf73cac8de66bc52a/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7d0a613d0c462a07b97a35faf73cac8de66bc52a/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=7d0a613d0c462a07b97a35faf73cac8de66bc52a", "patch": "@@ -1,3 +1,11 @@\n+S 2014-07-17 9fc8394\n+  freebsd-x86_64 5a4b645e2b42ae06224cc679d4a43b3d89be1482\n+  linux-i386 a5e1bb723020ac35173d49600e76b0935e257a6a\n+  linux-x86_64 1a2407df17442d93d1c34c916269a345658045d7\n+  macos-i386 6648fa88e41ad7c0991a085366e36d56005873ca\n+  macos-x86_64 71b2d1dfd0abe1052908dc091e098ed22cf272c6\n+  winnt-i386 c26f0a713c5fadf99cce935f60dce0ea403fb411\n+\n S 2014-07-09 8ddd286\n   freebsd-x86_64 de0c39057f409b69e5ddb888ba3e20b90d63f5db\n   linux-i386 28bef31f2a017e1998256d0c2b2e0a0c9221451b"}]}