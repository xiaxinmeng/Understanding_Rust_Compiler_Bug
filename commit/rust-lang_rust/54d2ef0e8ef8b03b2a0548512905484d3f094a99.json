{"sha": "54d2ef0e8ef8b03b2a0548512905484d3f094a99", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0ZDJlZjBlOGVmOGIwM2IyYTA1NDg1MTI5MDU0ODRkM2YwOTRhOTk=", "commit": {"author": {"name": "Carol (Nichols || Goulding)", "email": "carol.nichols@gmail.com", "date": "2016-05-21T17:05:15Z"}, "committer": {"name": "Carol (Nichols || Goulding)", "email": "carol.nichols@gmail.com", "date": "2016-05-23T14:03:44Z"}, "message": "Add an explicit \"How can I implement `Eq`\" doc section\n\nBuilding on the example in PartialEq.", "tree": {"sha": "c43c89a2ce3f0388b850cc123aadcf3db0542d17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c43c89a2ce3f0388b850cc123aadcf3db0542d17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54d2ef0e8ef8b03b2a0548512905484d3f094a99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54d2ef0e8ef8b03b2a0548512905484d3f094a99", "html_url": "https://github.com/rust-lang/rust/commit/54d2ef0e8ef8b03b2a0548512905484d3f094a99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54d2ef0e8ef8b03b2a0548512905484d3f094a99/comments", "author": {"login": "carols10cents", "id": 193874, "node_id": "MDQ6VXNlcjE5Mzg3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/193874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carols10cents", "html_url": "https://github.com/carols10cents", "followers_url": "https://api.github.com/users/carols10cents/followers", "following_url": "https://api.github.com/users/carols10cents/following{/other_user}", "gists_url": "https://api.github.com/users/carols10cents/gists{/gist_id}", "starred_url": "https://api.github.com/users/carols10cents/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carols10cents/subscriptions", "organizations_url": "https://api.github.com/users/carols10cents/orgs", "repos_url": "https://api.github.com/users/carols10cents/repos", "events_url": "https://api.github.com/users/carols10cents/events{/privacy}", "received_events_url": "https://api.github.com/users/carols10cents/received_events", "type": "User", "site_admin": false}, "committer": {"login": "carols10cents", "id": 193874, "node_id": "MDQ6VXNlcjE5Mzg3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/193874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carols10cents", "html_url": "https://github.com/carols10cents", "followers_url": "https://api.github.com/users/carols10cents/followers", "following_url": "https://api.github.com/users/carols10cents/following{/other_user}", "gists_url": "https://api.github.com/users/carols10cents/gists{/gist_id}", "starred_url": "https://api.github.com/users/carols10cents/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carols10cents/subscriptions", "organizations_url": "https://api.github.com/users/carols10cents/orgs", "repos_url": "https://api.github.com/users/carols10cents/repos", "events_url": "https://api.github.com/users/carols10cents/events{/privacy}", "received_events_url": "https://api.github.com/users/carols10cents/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e831c72a299a9f3320f30b4ff22d100092d56640", "url": "https://api.github.com/repos/rust-lang/rust/commits/e831c72a299a9f3320f30b4ff22d100092d56640", "html_url": "https://github.com/rust-lang/rust/commit/e831c72a299a9f3320f30b4ff22d100092d56640"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "d536d3ada3ff7dc77e9354bf360cb863b6a30450", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/54d2ef0e8ef8b03b2a0548512905484d3f094a99/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54d2ef0e8ef8b03b2a0548512905484d3f094a99/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=54d2ef0e8ef8b03b2a0548512905484d3f094a99", "patch": "@@ -126,9 +126,32 @@ pub trait PartialEq<Rhs: ?Sized = Self> {\n /// This property cannot be checked by the compiler, and therefore `Eq` implies\n /// `PartialEq`, and has no extra methods.\n ///\n+/// ## Derivable\n+///\n /// This trait can be used with `#[derive]`. When `derive`d, because `Eq` has\n /// no extra methods, it is only informing the compiler that this is an\n-/// equivalence relation rather than a partial equivalence relation.\n+/// equivalence relation rather than a partial equivalence relation. Note that\n+/// the `derive` strategy requires all fields are `PartialEq`, which isn't\n+/// always desired.\n+///\n+/// ## How can I implement `Eq`?\n+///\n+/// If you cannot use the `derive` strategy, specify that your type implements\n+/// `Eq`, which has no methods:\n+///\n+/// ```\n+/// enum BookFormat { Paperback, Hardback, Ebook }\n+/// struct Book {\n+///     isbn: i32,\n+///     format: BookFormat,\n+/// }\n+/// impl PartialEq for Book {\n+///     fn eq(&self, other: &Self) -> bool {\n+///         self.isbn == other.isbn\n+///     }\n+/// }\n+/// impl Eq for Book {}\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Eq: PartialEq<Self> {\n     // FIXME #13101: this method is used solely by #[deriving] to"}]}