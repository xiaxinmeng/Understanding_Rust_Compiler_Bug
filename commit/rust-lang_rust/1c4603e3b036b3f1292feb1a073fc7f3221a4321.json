{"sha": "1c4603e3b036b3f1292feb1a073fc7f3221a4321", "node_id": "C_kwDOAAsO6NoAKDFjNDYwM2UzYjAzNmIzZjEyOTJmZWIxYTA3M2ZjN2YzMjIxYTQzMjE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-11T23:16:46Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-11T23:16:46Z"}, "message": "Commit some tests for the new solver + lazy norm", "tree": {"sha": "ee8508dde8d03403d49a9834a13e9912188d297c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee8508dde8d03403d49a9834a13e9912188d297c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c4603e3b036b3f1292feb1a073fc7f3221a4321", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c4603e3b036b3f1292feb1a073fc7f3221a4321", "html_url": "https://github.com/rust-lang/rust/commit/1c4603e3b036b3f1292feb1a073fc7f3221a4321", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c4603e3b036b3f1292feb1a073fc7f3221a4321/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a73f50d875840b8077b8ec080fa41881d7ce40d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a73f50d875840b8077b8ec080fa41881d7ce40d", "html_url": "https://github.com/rust-lang/rust/commit/8a73f50d875840b8077b8ec080fa41881d7ce40d"}], "stats": {"total": 172, "additions": 172, "deletions": 0}, "files": [{"sha": "3b261062f782e6c1d227379a4fbb14d6a566d0b4", "filename": "tests/ui/traits/new-solver/cast-checks-handling-projections.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Fcast-checks-handling-projections.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Fcast-checks-handling-projections.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fcast-checks-handling-projections.rs?ref=1c4603e3b036b3f1292feb1a073fc7f3221a4321", "previous_filename": "tests/ui/typeck/lazy-norm/cast-checks-handling-projections.rs"}, {"sha": "019c6e81c50e9affd64e64cc22d04a71a0660172", "filename": "tests/ui/traits/new-solver/equating-projection-cyclically.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Fequating-projection-cyclically.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Fequating-projection-cyclically.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fequating-projection-cyclically.rs?ref=1c4603e3b036b3f1292feb1a073fc7f3221a4321", "previous_filename": "tests/ui/typeck/lazy-norm/equating-projection-cyclically.rs"}, {"sha": "57cbc65a17a925957d70dd881ed4c59badd55f8d", "filename": "tests/ui/traits/new-solver/equating-projection-cyclically.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Fequating-projection-cyclically.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Fequating-projection-cyclically.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fequating-projection-cyclically.stderr?ref=1c4603e3b036b3f1292feb1a073fc7f3221a4321", "previous_filename": "tests/ui/typeck/lazy-norm/equating-projection-cyclically.stderr"}, {"sha": "af00cbb3ba82749f529a25f1482ea4a8076fda65", "filename": "tests/ui/traits/new-solver/lazy-nested-obligations-1.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Flazy-nested-obligations-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Flazy-nested-obligations-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Flazy-nested-obligations-1.rs?ref=1c4603e3b036b3f1292feb1a073fc7f3221a4321", "patch": "@@ -0,0 +1,13 @@\n+// check-pass\n+// compile-flags: -Ztrait-solver=next\n+// Issue 94358\n+\n+fn foo<C>(_: C)\n+where\n+    for <'a> &'a C: IntoIterator,\n+    for <'a> <&'a C as IntoIterator>::IntoIter: ExactSizeIterator,\n+{}\n+\n+fn main() {\n+    foo::<_>(vec![true, false]);\n+}"}, {"sha": "32addd829dcfdf5f42c2a579efe6f67eb75346ab", "filename": "tests/ui/traits/new-solver/lazy-nested-obligations-2.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Flazy-nested-obligations-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Flazy-nested-obligations-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Flazy-nested-obligations-2.rs?ref=1c4603e3b036b3f1292feb1a073fc7f3221a4321", "patch": "@@ -0,0 +1,23 @@\n+// check-pass\n+// compile-flags: -Ztrait-solver=next\n+// Issue 95863\n+\n+pub trait With {\n+    type F;\n+}\n+\n+impl With for i32 {\n+    type F = fn(&str);\n+}\n+\n+fn f(_: &str) {}\n+\n+fn main() {\n+    let _: V<i32> = V(f);\n+    pub struct V<T: With>(<T as With>::F);\n+\n+    pub enum E3<T: With> {\n+        Var(<T as With>::F),\n+    }\n+    let _: E3<i32> = E3::Var(f);\n+}"}, {"sha": "baf399572402311f00f01ca751a8769c931a6e61", "filename": "tests/ui/traits/new-solver/lazy-nested-obligations-3.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Flazy-nested-obligations-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Flazy-nested-obligations-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Flazy-nested-obligations-3.rs?ref=1c4603e3b036b3f1292feb1a073fc7f3221a4321", "patch": "@@ -0,0 +1,38 @@\n+// check-pass\n+// compile-flags: -Ztrait-solver=next\n+// Issue 96750\n+\n+use std::marker::PhantomData;\n+\n+trait AsyncFn<Arg> {\n+    type Output;\n+}\n+trait RequestFamily {\n+    type Type<'a>;\n+}\n+trait Service {}\n+\n+struct MyFn;\n+impl AsyncFn<String> for MyFn {\n+    type Output = ();\n+}\n+\n+impl RequestFamily for String {\n+    type Type<'a> = String;\n+}\n+\n+struct ServiceFromAsyncFn<F, Req>(F, PhantomData<Req>);\n+\n+impl<F, Req, O> Service for ServiceFromAsyncFn<F, Req>\n+where\n+    Req: RequestFamily,\n+    F: AsyncFn<Req>,\n+    F: for<'a> AsyncFn<Req::Type<'a>, Output = O>,\n+{\n+}\n+\n+fn assert_service() -> impl Service {\n+    ServiceFromAsyncFn(MyFn, PhantomData)\n+}\n+\n+fn main() {}"}, {"sha": "b02a5d623307a23c818bf255acf17062310cfb2d", "filename": "tests/ui/traits/new-solver/normalize-param-env-1.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Fnormalize-param-env-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Fnormalize-param-env-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fnormalize-param-env-1.rs?ref=1c4603e3b036b3f1292feb1a073fc7f3221a4321", "patch": "@@ -0,0 +1,40 @@\n+// check-pass\n+// compile-flags: -Ztrait-solver=next\n+// Issue 108933\n+\n+trait Add<Rhs> {\n+    type Sum;\n+}\n+\n+impl Add<()> for () {\n+    type Sum = ();\n+}\n+\n+type Unit = <() as Add<()>>::Sum;\n+\n+trait Trait<C> {\n+    type Output;\n+}\n+\n+fn f<T>()\n+where\n+    T: Trait<()>,\n+    <T as Trait<()>>::Output: Sized,\n+{\n+}\n+\n+fn g<T>()\n+where\n+    T: Trait<Unit>,\n+    <T as Trait<()>>::Output: Sized,\n+{\n+}\n+\n+fn h<T>()\n+where\n+    T: Trait<()>,\n+    <T as Trait<Unit>>::Output: Sized,\n+{\n+}\n+\n+fn main() {}"}, {"sha": "7c2cebdd2002f942afbe5ef7d35408c94702ebdd", "filename": "tests/ui/traits/new-solver/normalize-param-env-2.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Fnormalize-param-env-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Fnormalize-param-env-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fnormalize-param-env-2.rs?ref=1c4603e3b036b3f1292feb1a073fc7f3221a4321", "patch": "@@ -0,0 +1,26 @@\n+// check-pass\n+// compile-flags: -Ztrait-solver=next\n+// Issue 92505\n+\n+trait A<T> {\n+    type I;\n+\n+    fn f()\n+    where\n+        Self::I: A<T>,\n+    {\n+    }\n+}\n+\n+impl<T> A<T> for () {\n+    type I = ();\n+\n+    fn f()\n+    where\n+        Self::I: A<T>,\n+    {\n+        <() as A<T>>::f();\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "ce2974b2a16f4ef06ef2a95969e3c015849170f4", "filename": "tests/ui/traits/new-solver/normalize-param-env-3.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Fnormalize-param-env-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c4603e3b036b3f1292feb1a073fc7f3221a4321/tests%2Fui%2Ftraits%2Fnew-solver%2Fnormalize-param-env-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fnormalize-param-env-3.rs?ref=1c4603e3b036b3f1292feb1a073fc7f3221a4321", "patch": "@@ -0,0 +1,32 @@\n+// check-pass\n+// compile-flags: -Ztrait-solver=next\n+// Issue 100177\n+\n+trait GenericTrait<T> {}\n+\n+trait Channel<I>: GenericTrait<Self::T> {\n+    type T;\n+}\n+\n+trait Sender {\n+    type Msg;\n+\n+    fn send<C>()\n+    where\n+        C: Channel<Self::Msg>;\n+}\n+\n+impl<T> Sender for T {\n+    type Msg = ();\n+\n+    fn send<C>()\n+    where\n+        C: Channel<Self::Msg>,\n+    {\n+    }\n+}\n+\n+// This works\n+fn foo<I, C>(ch: C) where C: Channel<I> {}\n+\n+fn main() {}"}]}