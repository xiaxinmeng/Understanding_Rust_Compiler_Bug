{"sha": "43a2cbdfd33b02be90ab1616e1b706142fa5d498", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzYTJjYmRmZDMzYjAyYmU5MGFiMTYxNmUxYjcwNjE0MmZhNWQ0OTg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-08T13:06:26Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-08T13:06:26Z"}, "message": "lifetime elision: add conforming-to-fn tests.", "tree": {"sha": "2845a91ed0e45ca9bb7655e49cc4797ac8b89d69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2845a91ed0e45ca9bb7655e49cc4797ac8b89d69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43a2cbdfd33b02be90ab1616e1b706142fa5d498", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43a2cbdfd33b02be90ab1616e1b706142fa5d498", "html_url": "https://github.com/rust-lang/rust/commit/43a2cbdfd33b02be90ab1616e1b706142fa5d498", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43a2cbdfd33b02be90ab1616e1b706142fa5d498/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04523404bcae5904fe29a54122040a7101f5c652", "url": "https://api.github.com/repos/rust-lang/rust/commits/04523404bcae5904fe29a54122040a7101f5c652", "html_url": "https://github.com/rust-lang/rust/commit/04523404bcae5904fe29a54122040a7101f5c652"}], "stats": {"total": 341, "additions": 341, "deletions": 0}, "files": [{"sha": "3d5b24a8946aa8b973a75853d81758cea36bd20e", "filename": "src/test/ui/self/elision/alias-async.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/43a2cbdfd33b02be90ab1616e1b706142fa5d498/src%2Ftest%2Fui%2Fself%2Felision%2Falias-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43a2cbdfd33b02be90ab1616e1b706142fa5d498/src%2Ftest%2Fui%2Fself%2Felision%2Falias-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Falias-async.rs?ref=43a2cbdfd33b02be90ab1616e1b706142fa5d498", "patch": "@@ -0,0 +1,39 @@\n+// check-pass\n+// edition:2018\n+\n+#![feature(async_await)]\n+\n+#![feature(arbitrary_self_types)]\n+#![allow(non_snake_case)]\n+\n+use std::rc::Rc;\n+\n+struct Struct { }\n+\n+type Alias = Struct;\n+\n+impl Struct {\n+    // Test using an alias for `Struct`:\n+\n+    async fn alias(self: Alias, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn box_Alias(self: Box<Alias>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn rc_Alias(self: Rc<Alias>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn box_box_Alias(self: Box<Box<Alias>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn box_rc_Alias(self: Box<Rc<Alias>>, f: &u32) -> &u32 {\n+        f\n+    }\n+}\n+\n+fn main() { }"}, {"sha": "0f33f2887726c485949d75ccfaf91be6ef203819", "filename": "src/test/ui/self/elision/assoc-async.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/43a2cbdfd33b02be90ab1616e1b706142fa5d498/src%2Ftest%2Fui%2Fself%2Felision%2Fassoc-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43a2cbdfd33b02be90ab1616e1b706142fa5d498/src%2Ftest%2Fui%2Fself%2Felision%2Fassoc-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fassoc-async.rs?ref=43a2cbdfd33b02be90ab1616e1b706142fa5d498", "patch": "@@ -0,0 +1,43 @@\n+// check-pass\n+// edition:2018\n+\n+#![feature(async_await)]\n+\n+#![feature(arbitrary_self_types)]\n+#![allow(non_snake_case)]\n+\n+use std::rc::Rc;\n+\n+trait Trait {\n+    type AssocType;\n+}\n+\n+struct Struct { }\n+\n+impl Trait for Struct {\n+    type AssocType = Self;\n+}\n+\n+impl Struct {\n+    async fn assoc(self: <Struct as Trait>::AssocType, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn box_AssocType(self: Box<<Struct as Trait>::AssocType>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn rc_AssocType(self: Rc<<Struct as Trait>::AssocType>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn box_box_AssocType(self: Box<Box<<Struct as Trait>::AssocType>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn box_rc_AssocType(self: Box<Rc<<Struct as Trait>::AssocType>>, f: &u32) -> &u32 {\n+        f\n+    }\n+}\n+\n+fn main() { }"}, {"sha": "5a8989f078ef35e5d612cd3a869d5db2cf577bfb", "filename": "src/test/ui/self/elision/lt-alias-async.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/43a2cbdfd33b02be90ab1616e1b706142fa5d498/src%2Ftest%2Fui%2Fself%2Felision%2Flt-alias-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43a2cbdfd33b02be90ab1616e1b706142fa5d498/src%2Ftest%2Fui%2Fself%2Felision%2Flt-alias-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Flt-alias-async.rs?ref=43a2cbdfd33b02be90ab1616e1b706142fa5d498", "patch": "@@ -0,0 +1,41 @@\n+// check-pass\n+// edition:2018\n+\n+#![feature(async_await)]\n+\n+#![feature(arbitrary_self_types)]\n+#![allow(non_snake_case)]\n+\n+use std::rc::Rc;\n+\n+struct Struct<'a> { x: &'a u32 }\n+\n+type Alias<'a> = Struct<'a>;\n+\n+impl<'a> Alias<'a> {\n+    async fn take_self(self, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Alias(self: Alias<'a>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Box_Alias(self: Box<Alias<'a>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Box_Box_Alias(self: Box<Box<Alias<'a>>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Rc_Alias(self: Rc<Alias<'a>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Box_Rc_Alias(self: Box<Rc<Alias<'a>>>, f: &u32) -> &u32 {\n+        f\n+    }\n+}\n+\n+fn main() { }"}, {"sha": "98c9aa3b6c26a5bd49b9802f05fb175de4c17d0a", "filename": "src/test/ui/self/elision/lt-assoc-async.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/43a2cbdfd33b02be90ab1616e1b706142fa5d498/src%2Ftest%2Fui%2Fself%2Felision%2Flt-assoc-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43a2cbdfd33b02be90ab1616e1b706142fa5d498/src%2Ftest%2Fui%2Fself%2Felision%2Flt-assoc-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Flt-assoc-async.rs?ref=43a2cbdfd33b02be90ab1616e1b706142fa5d498", "patch": "@@ -0,0 +1,53 @@\n+// check-pass\n+// edition:2018\n+\n+#![feature(async_await)]\n+\n+#![feature(arbitrary_self_types)]\n+#![allow(non_snake_case)]\n+\n+use std::rc::Rc;\n+\n+trait Trait {\n+    type AssocType;\n+}\n+\n+struct Struct<'a> { x: &'a u32 }\n+\n+impl<'a> Trait for Struct<'a> {\n+    type AssocType = Self;\n+}\n+\n+impl<'a> Struct<'a> {\n+    async fn take_self(self, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_AssocType(self: <Struct<'a> as Trait>::AssocType, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Box_AssocType(self: Box<<Struct<'a> as Trait>::AssocType>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Box_Box_AssocType(\n+        self: Box<Box<<Struct<'a> as Trait>::AssocType>>,\n+        f: &u32\n+    ) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Rc_AssocType(self: Rc<<Struct<'a> as Trait>::AssocType>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Box_Rc_AssocType(\n+        self: Box<Rc<<Struct<'a> as Trait>::AssocType>>,\n+        f: &u32\n+    ) -> &u32 {\n+        f\n+    }\n+}\n+\n+fn main() { }"}, {"sha": "0202db8a63526b5c14b18e12cbc0851a0c158fd9", "filename": "src/test/ui/self/elision/lt-self-async.rs", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/43a2cbdfd33b02be90ab1616e1b706142fa5d498/src%2Ftest%2Fui%2Fself%2Felision%2Flt-self-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43a2cbdfd33b02be90ab1616e1b706142fa5d498/src%2Ftest%2Fui%2Fself%2Felision%2Flt-self-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Flt-self-async.rs?ref=43a2cbdfd33b02be90ab1616e1b706142fa5d498", "patch": "@@ -0,0 +1,52 @@\n+// check-pass\n+// edition:2018\n+\n+#![feature(async_await)]\n+\n+#![feature(arbitrary_self_types)]\n+#![allow(non_snake_case)]\n+\n+use std::pin::Pin;\n+use std::rc::Rc;\n+\n+struct Struct<'a> {\n+    x: &'a u32\n+}\n+\n+impl<'a> Struct<'a> {\n+    async fn take_self(self, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Self(self: Self, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Box_Self(self: Box<Self>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Box_Box_Self(self: Box<Box<Self>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Rc_Self(self: Rc<Self>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Box_Rc_Self(self: Box<Rc<Self>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    // N/A\n+    //fn take_Pin_Self(self: Pin<Self>, f: &u32) -> &u32 {\n+    //    f\n+    //}\n+\n+    // N/A\n+    //fn take_Box_Pin_Self(self: Box<Pin<Self>>, f: &u32) -> &u32 {\n+    //    f\n+    //}\n+}\n+\n+fn main() { }"}, {"sha": "c0fc63d423257e370ae4fb7e37cff9f207a97cd7", "filename": "src/test/ui/self/elision/lt-struct-async.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/43a2cbdfd33b02be90ab1616e1b706142fa5d498/src%2Ftest%2Fui%2Fself%2Felision%2Flt-struct-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43a2cbdfd33b02be90ab1616e1b706142fa5d498/src%2Ftest%2Fui%2Fself%2Felision%2Flt-struct-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Flt-struct-async.rs?ref=43a2cbdfd33b02be90ab1616e1b706142fa5d498", "patch": "@@ -0,0 +1,39 @@\n+// check-pass\n+// edition:2018\n+\n+#![feature(async_await)]\n+\n+#![feature(arbitrary_self_types)]\n+#![allow(non_snake_case)]\n+\n+use std::rc::Rc;\n+\n+struct Struct<'a> { x: &'a u32 }\n+\n+impl<'a> Struct<'a> {\n+    async fn take_self(self, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Struct(self: Struct<'a>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Box_Struct(self: Box<Struct<'a>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Box_Box_Struct(self: Box<Box<Struct<'a>>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Rc_Struct(self: Rc<Struct<'a>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Box_Rc_Struct(self: Box<Rc<Struct<'a>>>, f: &u32) -> &u32 {\n+        f\n+    }\n+}\n+\n+fn main() { }"}, {"sha": "d1dc050be0d1e5f98b8e8fc70489292798d26134", "filename": "src/test/ui/self/elision/self-async.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/43a2cbdfd33b02be90ab1616e1b706142fa5d498/src%2Ftest%2Fui%2Fself%2Felision%2Fself-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43a2cbdfd33b02be90ab1616e1b706142fa5d498/src%2Ftest%2Fui%2Fself%2Felision%2Fself-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fself-async.rs?ref=43a2cbdfd33b02be90ab1616e1b706142fa5d498", "patch": "@@ -0,0 +1,39 @@\n+// check-pass\n+// edition:2018\n+\n+#![feature(async_await)]\n+\n+#![feature(arbitrary_self_types)]\n+#![allow(non_snake_case)]\n+\n+use std::rc::Rc;\n+\n+struct Struct { }\n+\n+impl Struct {\n+    async fn take_self(self, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Self(self: Self, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Box_Self(self: Box<Self>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Box_Box_Self(self: Box<Box<Self>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Rc_Self(self: Rc<Self>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn take_Box_Rc_Self(self: Box<Rc<Self>>, f: &u32) -> &u32 {\n+        f\n+    }\n+}\n+\n+fn main() { }"}, {"sha": "f7c8591ebd31df91a9aca1c7c605a15f81e91ee9", "filename": "src/test/ui/self/elision/struct-async.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/43a2cbdfd33b02be90ab1616e1b706142fa5d498/src%2Ftest%2Fui%2Fself%2Felision%2Fstruct-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43a2cbdfd33b02be90ab1616e1b706142fa5d498/src%2Ftest%2Fui%2Fself%2Felision%2Fstruct-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fstruct-async.rs?ref=43a2cbdfd33b02be90ab1616e1b706142fa5d498", "patch": "@@ -0,0 +1,35 @@\n+// check-pass\n+// edition:2018\n+\n+#![feature(async_await)]\n+\n+#![feature(arbitrary_self_types)]\n+#![allow(non_snake_case)]\n+\n+use std::rc::Rc;\n+\n+struct Struct { }\n+\n+impl Struct {\n+    async fn ref_Struct(self: Struct, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn box_Struct(self: Box<Struct>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn rc_Struct(self: Rc<Struct>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn box_box_Struct(self: Box<Box<Struct>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    async fn box_rc_Struct(self: Box<Rc<Struct>>, f: &u32) -> &u32 {\n+        f\n+    }\n+}\n+\n+fn main() { }"}]}