{"sha": "4a7d0e9754aa75eb0fd37bfeb4f00562806d112f", "node_id": "C_kwDOAAsO6NoAKDRhN2QwZTk3NTRhYTc1ZWIwZmQzN2JmZWI0ZjAwNTYyODA2ZDExMmY", "commit": {"author": {"name": "Kyle Matsuda", "email": "kyle.yoshio.matsuda@gmail.com", "date": "2023-01-20T22:17:01Z"}, "committer": {"name": "Kyle Matsuda", "email": "kyle.yoshio.matsuda@gmail.com", "date": "2023-01-27T03:28:31Z"}, "message": "add method_substs to CallKind", "tree": {"sha": "27573dc0b7d51294c05705da4be0838f2260c38b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27573dc0b7d51294c05705da4be0838f2260c38b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a7d0e9754aa75eb0fd37bfeb4f00562806d112f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a7d0e9754aa75eb0fd37bfeb4f00562806d112f", "html_url": "https://github.com/rust-lang/rust/commit/4a7d0e9754aa75eb0fd37bfeb4f00562806d112f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a7d0e9754aa75eb0fd37bfeb4f00562806d112f/comments", "author": {"login": "kylematsuda", "id": 17287790, "node_id": "MDQ6VXNlcjE3Mjg3Nzkw", "avatar_url": "https://avatars.githubusercontent.com/u/17287790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylematsuda", "html_url": "https://github.com/kylematsuda", "followers_url": "https://api.github.com/users/kylematsuda/followers", "following_url": "https://api.github.com/users/kylematsuda/following{/other_user}", "gists_url": "https://api.github.com/users/kylematsuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylematsuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylematsuda/subscriptions", "organizations_url": "https://api.github.com/users/kylematsuda/orgs", "repos_url": "https://api.github.com/users/kylematsuda/repos", "events_url": "https://api.github.com/users/kylematsuda/events{/privacy}", "received_events_url": "https://api.github.com/users/kylematsuda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kylematsuda", "id": 17287790, "node_id": "MDQ6VXNlcjE3Mjg3Nzkw", "avatar_url": "https://avatars.githubusercontent.com/u/17287790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylematsuda", "html_url": "https://github.com/kylematsuda", "followers_url": "https://api.github.com/users/kylematsuda/followers", "following_url": "https://api.github.com/users/kylematsuda/following{/other_user}", "gists_url": "https://api.github.com/users/kylematsuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylematsuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylematsuda/subscriptions", "organizations_url": "https://api.github.com/users/kylematsuda/orgs", "repos_url": "https://api.github.com/users/kylematsuda/repos", "events_url": "https://api.github.com/users/kylematsuda/events{/privacy}", "received_events_url": "https://api.github.com/users/kylematsuda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a969c194d87f0fe1c30e5eeec981414e8b11dc47", "url": "https://api.github.com/repos/rust-lang/rust/commits/a969c194d87f0fe1c30e5eeec981414e8b11dc47", "html_url": "https://github.com/rust-lang/rust/commit/a969c194d87f0fe1c30e5eeec981414e8b11dc47"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "1011794d7b3b2995671c2946070a4f59df385fcb", "filename": "compiler/rustc_borrowck/src/diagnostics/mod.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4a7d0e9754aa75eb0fd37bfeb4f00562806d112f/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a7d0e9754aa75eb0fd37bfeb4f00562806d112f/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs?ref=4a7d0e9754aa75eb0fd37bfeb4f00562806d112f", "patch": "@@ -1064,7 +1064,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                         );\n                     }\n                 }\n-                CallKind::Normal { self_arg, desugaring, method_did } => {\n+                CallKind::Normal { self_arg, desugaring, method_did, method_substs } => {\n                     let self_arg = self_arg.unwrap();\n                     let tcx = self.infcx.tcx;\n                     if let Some((CallDesugaringKind::ForLoopIntoIter, _)) = desugaring {\n@@ -1136,9 +1136,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                             && let self_ty = infcx.replace_bound_vars_with_fresh_vars(\n                                 fn_call_span,\n                                 LateBoundRegionConversionTime::FnCall,\n-                                // FIXME: should use `subst` with the method substs.\n-                                // Probably need to add `method_substs` to `CallKind`\n-                                tcx.fn_sig(method_did).skip_binder().input(0),\n+                                tcx.fn_sig(method_did).subst(tcx, method_substs).input(0),\n                             )\n                             && infcx.can_eq(self.param_env, ty, self_ty).is_ok()\n                         {"}, {"sha": "995363c0edd92e3e4849b045328b1650ec1225d1", "filename": "compiler/rustc_const_eval/src/util/call_kind.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4a7d0e9754aa75eb0fd37bfeb4f00562806d112f/compiler%2Frustc_const_eval%2Fsrc%2Futil%2Fcall_kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a7d0e9754aa75eb0fd37bfeb4f00562806d112f/compiler%2Frustc_const_eval%2Fsrc%2Futil%2Fcall_kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Futil%2Fcall_kind.rs?ref=4a7d0e9754aa75eb0fd37bfeb4f00562806d112f", "patch": "@@ -40,6 +40,7 @@ pub enum CallKind<'tcx> {\n         self_arg: Option<Ident>,\n         desugaring: Option<(CallDesugaringKind, Ty<'tcx>)>,\n         method_did: DefId,\n+        method_substs: SubstsRef<'tcx>,\n     },\n     /// A call to `Fn(..)::call(..)`, desugared from `my_closure(a, b, c)`\n     FnCall { fn_trait_id: DefId, self_ty: Ty<'tcx> },\n@@ -131,6 +132,6 @@ pub fn call_kind<'tcx>(\n         } else {\n             None\n         };\n-        CallKind::Normal { self_arg, desugaring, method_did }\n+        CallKind::Normal { self_arg, desugaring, method_did, method_substs }\n     })\n }"}]}