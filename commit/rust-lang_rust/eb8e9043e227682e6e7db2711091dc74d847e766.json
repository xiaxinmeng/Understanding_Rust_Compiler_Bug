{"sha": "eb8e9043e227682e6e7db2711091dc74d847e766", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViOGU5MDQzZTIyNzY4MmU2ZTdkYjI3MTEwOTFkYzc0ZDg0N2U3NjY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-08T16:26:38Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-08T16:31:44Z"}, "message": "Where clauses", "tree": {"sha": "5174136ad99ea4bd37f01c4c095c2976c6741403", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5174136ad99ea4bd37f01c4c095c2976c6741403"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb8e9043e227682e6e7db2711091dc74d847e766", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb8e9043e227682e6e7db2711091dc74d847e766", "html_url": "https://github.com/rust-lang/rust/commit/eb8e9043e227682e6e7db2711091dc74d847e766", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb8e9043e227682e6e7db2711091dc74d847e766/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f21afacfc981e93f2ad78cd340e9b6c0e821d92", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f21afacfc981e93f2ad78cd340e9b6c0e821d92", "html_url": "https://github.com/rust-lang/rust/commit/8f21afacfc981e93f2ad78cd340e9b6c0e821d92"}], "stats": {"total": 189, "additions": 162, "deletions": 27}, "files": [{"sha": "0443dd7984e5ae62d0fddc51dbf9f3c703f8f1e8", "filename": "src/grammar.ron", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb8e9043e227682e6e7db2711091dc74d847e766/src%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/eb8e9043e227682e6e7db2711091dc74d847e766/src%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar.ron?ref=eb8e9043e227682e6e7db2711091dc74d847e766", "patch": "@@ -192,6 +192,7 @@ Grammar(\n         \"ALIAS\",\n         \"VISIBILITY\",\n         \"WHERE_CLAUSE\",\n+        \"WHERE_PRED\",\n         \"ABI\",\n         \"NAME\",\n         \"NAME_REF\","}, {"sha": "0a3e8fd0708319b8f511f33362ca7ea46c0cbd7a", "filename": "src/grammar/type_params.rs", "status": "modified", "additions": 46, "deletions": 14, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/eb8e9043e227682e6e7db2711091dc74d847e766/src%2Fgrammar%2Ftype_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb8e9043e227682e6e7db2711091dc74d847e766/src%2Fgrammar%2Ftype_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Ftype_params.rs?ref=eb8e9043e227682e6e7db2711091dc74d847e766", "patch": "@@ -24,13 +24,8 @@ pub(super) fn type_param_list(p: &mut Parser) {\n         assert!(p.at(LIFETIME));\n         let m = p.start();\n         p.bump();\n-        if p.eat(COLON) {\n-            while p.at(LIFETIME) {\n-                p.bump();\n-                if !p.eat(PLUS) {\n-                    break;\n-                }\n-            }\n+        if p.at(COLON) {\n+            lifetime_bounds(p);\n         }\n         m.complete(p, LIFETIME_PARAM);\n     }\n@@ -60,6 +55,17 @@ pub(super) fn bounds(p: &mut Parser) {\n     bounds_without_colon(p);\n }\n \n+fn lifetime_bounds(p: &mut Parser) {\n+    assert!(p.at(COLON));\n+    p.bump();\n+    while p.at(LIFETIME) {\n+        p.bump();\n+        if !p.eat(PLUS) {\n+            break;\n+        }\n+    }\n+}\n+\n pub(super) fn bounds_without_colon(p: &mut Parser) {\n     loop {\n         let has_paren = p.eat(L_PAREN);\n@@ -83,13 +89,39 @@ pub(super) fn bounds_without_colon(p: &mut Parser) {\n     }\n }\n \n+// test where_clause\n+// fn foo()\n+// where\n+//    'a: 'b + 'c,\n+//    T: Clone + Copy + 'static,\n+//    Iterator::Item: 'a,\n+// {}\n pub(super) fn where_clause(p: &mut Parser) {\n-    if p.at(WHERE_KW) {\n-        let m = p.start();\n-        p.bump();\n-        p.expect(IDENT);\n-        p.expect(COLON);\n-        p.expect(IDENT);\n-        m.complete(p, WHERE_CLAUSE);\n+    if !p.at(WHERE_KW) {\n+        return;\n+    }\n+    let m = p.start();\n+    p.bump();\n+    loop {\n+        if !(paths::is_path_start(p) || p.current() == LIFETIME) {\n+            break\n+        }\n+        where_predicate(p);\n+        if p.current() != L_CURLY && p.current() != SEMI {\n+            p.expect(COMMA);\n+        }\n+    }\n+    m.complete(p, WHERE_CLAUSE);\n+}\n+\n+fn where_predicate(p: &mut Parser) {\n+    let m = p.start();\n+    if p.at(LIFETIME) {\n+        p.eat(LIFETIME);\n+        lifetime_bounds(p)\n+    } else {\n+        types::path_type(p);\n+        bounds(p);\n     }\n+    m.complete(p, WHERE_PRED);\n }"}, {"sha": "0d8c6bfba328e1493d599a7ada5f2459a360a1bf", "filename": "src/grammar/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb8e9043e227682e6e7db2711091dc74d847e766/src%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb8e9043e227682e6e7db2711091dc74d847e766/src%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Ftypes.rs?ref=eb8e9043e227682e6e7db2711091dc74d847e766", "patch": "@@ -199,7 +199,7 @@ fn impl_trait_type(p: &mut Parser) {\n // type B = ::Foo;\n // type C = self::Foo;\n // type D = super::Foo;\n-fn path_type(p: &mut Parser) {\n+pub(super) fn path_type(p: &mut Parser) {\n     assert!(paths::is_path_start(p));\n     let m = p.start();\n     paths::type_path(p);"}, {"sha": "9a9c1f223a6341be88b9148622e45321578d864f", "filename": "src/syntax_kinds/generated.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb8e9043e227682e6e7db2711091dc74d847e766/src%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb8e9043e227682e6e7db2711091dc74d847e766/src%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds%2Fgenerated.rs?ref=eb8e9043e227682e6e7db2711091dc74d847e766", "patch": "@@ -175,6 +175,7 @@ pub enum SyntaxKind {\n     ALIAS,\n     VISIBILITY,\n     WHERE_CLAUSE,\n+    WHERE_PRED,\n     ABI,\n     NAME,\n     NAME_REF,\n@@ -415,6 +416,7 @@ impl SyntaxKind {\n             ALIAS => &SyntaxInfo { name: \"ALIAS\" },\n             VISIBILITY => &SyntaxInfo { name: \"VISIBILITY\" },\n             WHERE_CLAUSE => &SyntaxInfo { name: \"WHERE_CLAUSE\" },\n+            WHERE_PRED => &SyntaxInfo { name: \"WHERE_PRED\" },\n             ABI => &SyntaxInfo { name: \"ABI\" },\n             NAME => &SyntaxInfo { name: \"NAME\" },\n             NAME_REF => &SyntaxInfo { name: \"NAME_REF\" },"}, {"sha": "2f3c5296095b521eab33d0b3655db165da20dc49", "filename": "tests/data/parser/inline/0016_type_item_where_clause.txt", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/eb8e9043e227682e6e7db2711091dc74d847e766/tests%2Fdata%2Fparser%2Finline%2F0016_type_item_where_clause.txt", "raw_url": "https://github.com/rust-lang/rust/raw/eb8e9043e227682e6e7db2711091dc74d847e766/tests%2Fdata%2Fparser%2Finline%2F0016_type_item_where_clause.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0016_type_item_where_clause.txt?ref=eb8e9043e227682e6e7db2711091dc74d847e766", "patch": "@@ -8,10 +8,19 @@ FILE@[0; 31)\n     WHERE_CLAUSE@[9; 24)\n       WHERE_KW@[9; 14)\n       WHITESPACE@[14; 15)\n-      IDENT@[15; 18) \"Foo\"\n-      COLON@[18; 19)\n-      WHITESPACE@[19; 20)\n-      IDENT@[20; 24) \"Copy\"\n+      WHERE_PRED@[15; 24)\n+        PATH_TYPE@[15; 18)\n+          PATH@[15; 18)\n+            PATH_SEGMENT@[15; 18)\n+              NAME_REF@[15; 18)\n+                IDENT@[15; 18) \"Foo\"\n+        COLON@[18; 19)\n+        WHITESPACE@[19; 20)\n+        PATH@[20; 24)\n+          PATH_SEGMENT@[20; 24)\n+            NAME_REF@[20; 24)\n+              IDENT@[20; 24) \"Copy\"\n+              err: `expected COMMA`\n     WHITESPACE@[24; 25)\n     EQ@[25; 26)\n     WHITESPACE@[26; 27)"}, {"sha": "ba4e0ebc832262f7e9e8f2e82d7add0cab8c0ddb", "filename": "tests/data/parser/inline/0056_trait_item.txt", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/eb8e9043e227682e6e7db2711091dc74d847e766/tests%2Fdata%2Fparser%2Finline%2F0056_trait_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/eb8e9043e227682e6e7db2711091dc74d847e766/tests%2Fdata%2Fparser%2Finline%2F0056_trait_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0056_trait_item.txt?ref=eb8e9043e227682e6e7db2711091dc74d847e766", "patch": "@@ -27,10 +27,18 @@ FILE@[0; 42)\n     WHERE_CLAUSE@[25; 38)\n       WHERE_KW@[25; 30)\n       WHITESPACE@[30; 31)\n-      IDENT@[31; 32) \"U\"\n-      COLON@[32; 33)\n-      WHITESPACE@[33; 34)\n-      IDENT@[34; 38) \"Copy\"\n+      WHERE_PRED@[31; 38)\n+        PATH_TYPE@[31; 32)\n+          PATH@[31; 32)\n+            PATH_SEGMENT@[31; 32)\n+              NAME_REF@[31; 32)\n+                IDENT@[31; 32) \"U\"\n+        COLON@[32; 33)\n+        WHITESPACE@[33; 34)\n+        PATH@[34; 38)\n+          PATH_SEGMENT@[34; 38)\n+            NAME_REF@[34; 38)\n+              IDENT@[34; 38) \"Copy\"\n     WHITESPACE@[38; 39)\n     L_CURLY@[39; 40)\n     R_CURLY@[40; 41)"}, {"sha": "afedf983e430e7ed6acbdb8dfb8ce912759641a4", "filename": "tests/data/parser/inline/0059_fn_item_where_clause.txt", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/eb8e9043e227682e6e7db2711091dc74d847e766/tests%2Fdata%2Fparser%2Finline%2F0059_fn_item_where_clause.txt", "raw_url": "https://github.com/rust-lang/rust/raw/eb8e9043e227682e6e7db2711091dc74d847e766/tests%2Fdata%2Fparser%2Finline%2F0059_fn_item_where_clause.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0059_fn_item_where_clause.txt?ref=eb8e9043e227682e6e7db2711091dc74d847e766", "patch": "@@ -17,10 +17,18 @@ FILE@[0; 29)\n     WHERE_CLAUSE@[12; 25)\n       WHERE_KW@[12; 17)\n       WHITESPACE@[17; 18)\n-      IDENT@[18; 19) \"T\"\n-      COLON@[19; 20)\n-      WHITESPACE@[20; 21)\n-      IDENT@[21; 25) \"Copy\"\n+      WHERE_PRED@[18; 25)\n+        PATH_TYPE@[18; 19)\n+          PATH@[18; 19)\n+            PATH_SEGMENT@[18; 19)\n+              NAME_REF@[18; 19)\n+                IDENT@[18; 19) \"T\"\n+        COLON@[19; 20)\n+        WHITESPACE@[20; 21)\n+        PATH@[21; 25)\n+          PATH_SEGMENT@[21; 25)\n+            NAME_REF@[21; 25)\n+              IDENT@[21; 25) \"Copy\"\n     WHITESPACE@[25; 26)\n     BLOCK_EXPR@[26; 28)\n       L_CURLY@[26; 27)"}, {"sha": "592a005f9eca991e6557809ca54511ad56355286", "filename": "tests/data/parser/inline/0098_where_clause.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eb8e9043e227682e6e7db2711091dc74d847e766/tests%2Fdata%2Fparser%2Finline%2F0098_where_clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb8e9043e227682e6e7db2711091dc74d847e766/tests%2Fdata%2Fparser%2Finline%2F0098_where_clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0098_where_clause.rs?ref=eb8e9043e227682e6e7db2711091dc74d847e766", "patch": "@@ -0,0 +1,6 @@\n+fn foo()\n+where\n+   'a: 'b + 'c,\n+   T: Clone + Copy + 'static,\n+   Iterator::Item: 'a,\n+{}"}, {"sha": "a1180b554a1c9acf465773f1a830c5de961dbc53", "filename": "tests/data/parser/inline/0098_where_clause.txt", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/eb8e9043e227682e6e7db2711091dc74d847e766/tests%2Fdata%2Fparser%2Finline%2F0098_where_clause.txt", "raw_url": "https://github.com/rust-lang/rust/raw/eb8e9043e227682e6e7db2711091dc74d847e766/tests%2Fdata%2Fparser%2Finline%2F0098_where_clause.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0098_where_clause.txt?ref=eb8e9043e227682e6e7db2711091dc74d847e766", "patch": "@@ -0,0 +1,69 @@\n+FILE@[0; 87)\n+  FN_ITEM@[0; 86)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+    WHITESPACE@[8; 9)\n+    WHERE_CLAUSE@[9; 83)\n+      WHERE_KW@[9; 14)\n+      WHITESPACE@[14; 18)\n+      WHERE_PRED@[18; 29)\n+        LIFETIME@[18; 20) \"'a\"\n+        COLON@[20; 21)\n+        WHITESPACE@[21; 22)\n+        LIFETIME@[22; 24) \"'b\"\n+        WHITESPACE@[24; 25)\n+        PLUS@[25; 26)\n+        WHITESPACE@[26; 27)\n+        LIFETIME@[27; 29) \"'c\"\n+      COMMA@[29; 30)\n+      WHITESPACE@[30; 34)\n+      WHERE_PRED@[34; 59)\n+        PATH_TYPE@[34; 35)\n+          PATH@[34; 35)\n+            PATH_SEGMENT@[34; 35)\n+              NAME_REF@[34; 35)\n+                IDENT@[34; 35) \"T\"\n+        COLON@[35; 36)\n+        WHITESPACE@[36; 37)\n+        PATH@[37; 42)\n+          PATH_SEGMENT@[37; 42)\n+            NAME_REF@[37; 42)\n+              IDENT@[37; 42) \"Clone\"\n+        WHITESPACE@[42; 43)\n+        PLUS@[43; 44)\n+        WHITESPACE@[44; 45)\n+        PATH@[45; 49)\n+          PATH_SEGMENT@[45; 49)\n+            NAME_REF@[45; 49)\n+              IDENT@[45; 49) \"Copy\"\n+        WHITESPACE@[49; 50)\n+        PLUS@[50; 51)\n+        WHITESPACE@[51; 52)\n+        LIFETIME@[52; 59) \"'static\"\n+      COMMA@[59; 60)\n+      WHITESPACE@[60; 64)\n+      WHERE_PRED@[64; 82)\n+        PATH_TYPE@[64; 78)\n+          PATH@[64; 78)\n+            PATH@[64; 72)\n+              PATH_SEGMENT@[64; 72)\n+                NAME_REF@[64; 72)\n+                  IDENT@[64; 72) \"Iterator\"\n+            COLONCOLON@[72; 74)\n+            PATH_SEGMENT@[74; 78)\n+              NAME_REF@[74; 78)\n+                IDENT@[74; 78) \"Item\"\n+        COLON@[78; 79)\n+        WHITESPACE@[79; 80)\n+        LIFETIME@[80; 82) \"'a\"\n+      COMMA@[82; 83)\n+    WHITESPACE@[83; 84)\n+    BLOCK_EXPR@[84; 86)\n+      L_CURLY@[84; 85)\n+      R_CURLY@[85; 86)\n+  WHITESPACE@[86; 87)"}]}