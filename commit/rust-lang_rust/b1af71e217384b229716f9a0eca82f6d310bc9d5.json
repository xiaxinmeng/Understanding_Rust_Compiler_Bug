{"sha": "b1af71e217384b229716f9a0eca82f6d310bc9d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxYWY3MWUyMTczODRiMjI5NzE2ZjlhMGVjYTgyZjZkMzEwYmM5ZDU=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-18T17:52:28Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-18T17:52:28Z"}, "message": "Implement more intrinsics.", "tree": {"sha": "e50e5d8786b710ebbe0ed67bd24ec99d79028e7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e50e5d8786b710ebbe0ed67bd24ec99d79028e7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1af71e217384b229716f9a0eca82f6d310bc9d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1af71e217384b229716f9a0eca82f6d310bc9d5", "html_url": "https://github.com/rust-lang/rust/commit/b1af71e217384b229716f9a0eca82f6d310bc9d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1af71e217384b229716f9a0eca82f6d310bc9d5/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee47ce3978728cfc51f1874d31dbd6d2061c24fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee47ce3978728cfc51f1874d31dbd6d2061c24fd", "html_url": "https://github.com/rust-lang/rust/commit/ee47ce3978728cfc51f1874d31dbd6d2061c24fd"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "b8572efd260acee19f30180c1934b6660d2acac8", "filename": "src/interpreter.rs", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/b1af71e217384b229716f9a0eca82f6d310bc9d5/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1af71e217384b229716f9a0eca82f6d310bc9d5/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=b1af71e217384b229716f9a0eca82f6d310bc9d5", "patch": "@@ -315,12 +315,23 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n         let dest_size = self.lvalue_repr(ret_ptr).size();\n \n         match name {\n-            \"size_of\" => {\n-                let ty = *substs.types.get(subst::FnSpace, 0);\n-                let size = self.ty_size(ty) as u64;\n-                try!(self.memory.write_uint(dest, size, dest_size));\n+            \"copy_nonoverlapping\" => {\n+                let elem_ty = *substs.types.get(subst::FnSpace, 0);\n+                let elem_size = self.ty_size(elem_ty);\n+\n+                let src_arg   = try!(self.eval_operand(&args[0]));\n+                let dest_arg  = try!(self.eval_operand(&args[1]));\n+                let count_arg = try!(self.eval_operand(&args[2]));\n+\n+                let src   = try!(self.memory.read_ptr(src_arg));\n+                let dest  = try!(self.memory.read_ptr(dest_arg));\n+                let count = try!(self.memory.read_int(count_arg, self.memory.pointer_size));\n+\n+                try!(self.memory.copy(src, dest, count as usize * elem_size));\n             }\n \n+            \"forget\" => {}\n+\n             \"offset\" => {\n                 let pointee_ty = *substs.types.get(subst::FnSpace, 0);\n                 let pointee_size = self.ty_size(pointee_ty) as isize;\n@@ -332,6 +343,14 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n                 try!(self.memory.write_ptr(dest, result_ptr));\n             }\n \n+            \"size_of\" => {\n+                let ty = *substs.types.get(subst::FnSpace, 0);\n+                let size = self.ty_size(ty) as u64;\n+                try!(self.memory.write_uint(dest, size, dest_size));\n+            }\n+\n+            \"uninit\" => {}\n+\n             name => panic!(\"can't handle intrinsic: {}\", name),\n         }\n "}]}