{"sha": "63c8cbd3c94bb9c71cc7c23715a982582973fab1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzYzhjYmQzYzk0YmI5YzcxY2M3YzIzNzE1YTk4MjU4Mjk3M2ZhYjE=", "commit": {"author": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-06-03T18:54:21Z"}, "committer": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-06-03T19:16:40Z"}, "message": "Replace a `match` with an `if let`\n\nSeems like a better fit here and saves one level of indentation.", "tree": {"sha": "e573f14f78753dff6a2099fd55b1bafacd181d2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e573f14f78753dff6a2099fd55b1bafacd181d2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63c8cbd3c94bb9c71cc7c23715a982582973fab1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63c8cbd3c94bb9c71cc7c23715a982582973fab1", "html_url": "https://github.com/rust-lang/rust/commit/63c8cbd3c94bb9c71cc7c23715a982582973fab1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63c8cbd3c94bb9c71cc7c23715a982582973fab1/comments", "author": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "835150e70288535bc57bb624792229b9dc94991d", "url": "https://api.github.com/repos/rust-lang/rust/commits/835150e70288535bc57bb624792229b9dc94991d", "html_url": "https://github.com/rust-lang/rust/commit/835150e70288535bc57bb624792229b9dc94991d"}], "stats": {"total": 47, "additions": 22, "deletions": 25}, "files": [{"sha": "40b1a8a2da9fa80b45ebbb1cd41764564ed9a32d", "filename": "compiler/rustc_mir/src/transform/remove_zsts.rs", "status": "modified", "additions": 22, "deletions": 25, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/63c8cbd3c94bb9c71cc7c23715a982582973fab1/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_zsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63c8cbd3c94bb9c71cc7c23715a982582973fab1/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_zsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_zsts.rs?ref=63c8cbd3c94bb9c71cc7c23715a982582973fab1", "patch": "@@ -16,32 +16,29 @@ impl<'tcx> MirPass<'tcx> for RemoveZsts {\n         let (basic_blocks, local_decls) = body.basic_blocks_and_local_decls_mut();\n         for block in basic_blocks.iter_mut() {\n             for statement in block.statements.iter_mut() {\n-                match statement.kind {\n-                    StatementKind::Assign(box (place, _)) => {\n-                        let place_ty = place.ty(local_decls, tcx).ty;\n-                        if !maybe_zst(place_ty) {\n-                            continue;\n-                        }\n-                        let layout = match tcx.layout_of(param_env.and(place_ty)) {\n-                            Ok(layout) => layout,\n-                            Err(_) => continue,\n-                        };\n-                        if !layout.is_zst() {\n-                            continue;\n-                        }\n-                        if involves_a_union(place, local_decls, tcx) {\n-                            continue;\n-                        }\n-                        if tcx.consider_optimizing(|| {\n-                            format!(\n-                                \"RemoveZsts - Place: {:?} SourceInfo: {:?}\",\n-                                place, statement.source_info\n-                            )\n-                        }) {\n-                            statement.make_nop();\n-                        }\n+                if let StatementKind::Assign(box (place, _)) = statement.kind {\n+                    let place_ty = place.ty(local_decls, tcx).ty;\n+                    if !maybe_zst(place_ty) {\n+                        continue;\n+                    }\n+                    let layout = match tcx.layout_of(param_env.and(place_ty)) {\n+                        Ok(layout) => layout,\n+                        Err(_) => continue,\n+                    };\n+                    if !layout.is_zst() {\n+                        continue;\n+                    }\n+                    if involves_a_union(place, local_decls, tcx) {\n+                        continue;\n+                    }\n+                    if tcx.consider_optimizing(|| {\n+                        format!(\n+                            \"RemoveZsts - Place: {:?} SourceInfo: {:?}\",\n+                            place, statement.source_info\n+                        )\n+                    }) {\n+                        statement.make_nop();\n                     }\n-                    _ => {}\n                 }\n             }\n         }"}]}