{"sha": "0d2f1aef02d052b777e70fad48df2139263bb163", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkMmYxYWVmMDJkMDUyYjc3N2U3MGZhZDQ4ZGYyMTM5MjYzYmIxNjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-04T22:42:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-04T22:42:10Z"}, "message": "Auto merge of #6247 - giraffate:fix_suggestion_to_add_space_in_unused_unit, r=ebroto\n\nFix suggestion to add unneeded space in `unused_unit`\n\nFix https://github.com/rust-lang/rust-clippy/issues/6230\n\nchangelog: Fix suggestion to add unneeded space in `unused_unit`", "tree": {"sha": "f1fcaecf9708fba4897c9e1c5076ae053f7d458f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1fcaecf9708fba4897c9e1c5076ae053f7d458f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d2f1aef02d052b777e70fad48df2139263bb163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d2f1aef02d052b777e70fad48df2139263bb163", "html_url": "https://github.com/rust-lang/rust/commit/0d2f1aef02d052b777e70fad48df2139263bb163", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d2f1aef02d052b777e70fad48df2139263bb163/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b52474ae6a63a69e40f4f163ddfbd3548ddac7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b52474ae6a63a69e40f4f163ddfbd3548ddac7d", "html_url": "https://github.com/rust-lang/rust/commit/5b52474ae6a63a69e40f4f163ddfbd3548ddac7d"}, {"sha": "4c58860cbfe51049d48f4f31f76dcc18b39cfe98", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c58860cbfe51049d48f4f31f76dcc18b39cfe98", "html_url": "https://github.com/rust-lang/rust/commit/4c58860cbfe51049d48f4f31f76dcc18b39cfe98"}], "stats": {"total": 119, "additions": 83, "deletions": 36}, "files": [{"sha": "b1339c3d6395de31cb5c56573debb95fdca5806c", "filename": "clippy_lints/src/unused_unit.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0d2f1aef02d052b777e70fad48df2139263bb163/clippy_lints%2Fsrc%2Funused_unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d2f1aef02d052b777e70fad48df2139263bb163/clippy_lints%2Fsrc%2Funused_unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_unit.rs?ref=0d2f1aef02d052b777e70fad48df2139263bb163", "patch": "@@ -123,6 +123,17 @@ fn lint_unneeded_unit_return(cx: &EarlyContext<'_>, ty: &ast::Ty, span: Span) {\n         fn_source\n             .rfind(\"->\")\n             .map_or((ty.span, Applicability::MaybeIncorrect), |rpos| {\n+                let mut rpos = rpos;\n+                let chars: Vec<char> = fn_source.chars().collect();\n+                while rpos > 1 {\n+                    if let Some(c) = chars.get(rpos - 1) {\n+                        if c.is_whitespace() {\n+                            rpos -= 1;\n+                            continue;\n+                        }\n+                    }\n+                    break;\n+                }\n                 (\n                     #[allow(clippy::cast_possible_truncation)]\n                     ty.span.with_lo(BytePos(span.lo().0 + rpos as u32)),"}, {"sha": "7afc5361356333235224a79b64710f13cd76e5cd", "filename": "tests/ui/unused_unit.fixed", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/0d2f1aef02d052b777e70fad48df2139263bb163/tests%2Fui%2Funused_unit.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0d2f1aef02d052b777e70fad48df2139263bb163/tests%2Fui%2Funused_unit.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.fixed?ref=0d2f1aef02d052b777e70fad48df2139263bb163", "patch": "@@ -15,35 +15,35 @@\n struct Unitter;\n impl Unitter {\n     #[allow(clippy::no_effect)]\n-    pub fn get_unit<F: Fn() , G>(&self, f: F, _g: G) \n-    where G: Fn()  {\n-        let _y: &dyn Fn()  = &f;\n+    pub fn get_unit<F: Fn(), G>(&self, f: F, _g: G)\n+    where G: Fn() {\n+        let _y: &dyn Fn() = &f;\n         (); // this should not lint, as it's not in return type position\n     }\n }\n \n impl Into<()> for Unitter {\n     #[rustfmt::skip]\n-    fn into(self)  {\n+    fn into(self) {\n         \n     }\n }\n \n trait Trait {\n-    fn redundant<F: FnOnce() , G, H>(&self, _f: F, _g: G, _h: H)\n+    fn redundant<F: FnOnce(), G, H>(&self, _f: F, _g: G, _h: H)\n     where\n-        G: FnMut() ,\n-        H: Fn() ;\n+        G: FnMut(),\n+        H: Fn();\n }\n \n impl Trait for Unitter {\n-    fn redundant<F: FnOnce() , G, H>(&self, _f: F, _g: G, _h: H)\n+    fn redundant<F: FnOnce(), G, H>(&self, _f: F, _g: G, _h: H)\n     where\n-        G: FnMut() ,\n-        H: Fn()  {}\n+        G: FnMut(),\n+        H: Fn() {}\n }\n \n-fn return_unit()  {  }\n+fn return_unit() {  }\n \n #[allow(clippy::needless_return)]\n #[allow(clippy::never_loop)]\n@@ -70,3 +70,12 @@ fn foo() {\n         recv(rx) -> _x => ()\n     }\n }\n+\n+#[rustfmt::skip]\n+fn test(){}\n+\n+#[rustfmt::skip]\n+fn test2(){}\n+\n+#[rustfmt::skip]\n+fn test3(){}"}, {"sha": "96cef1ed5a5f213dddad7bb987fa034b39ec3f6b", "filename": "tests/ui/unused_unit.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0d2f1aef02d052b777e70fad48df2139263bb163/tests%2Fui%2Funused_unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d2f1aef02d052b777e70fad48df2139263bb163/tests%2Fui%2Funused_unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.rs?ref=0d2f1aef02d052b777e70fad48df2139263bb163", "patch": "@@ -70,3 +70,12 @@ fn foo() {\n         recv(rx) -> _x => ()\n     }\n }\n+\n+#[rustfmt::skip]\n+fn test()->(){}\n+\n+#[rustfmt::skip]\n+fn test2() ->(){}\n+\n+#[rustfmt::skip]\n+fn test3()-> (){}"}, {"sha": "c45634c2b6df71a5131c4c7f8689e5a0edbf7607", "filename": "tests/ui/unused_unit.stderr", "status": "modified", "additions": 43, "deletions": 25, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/0d2f1aef02d052b777e70fad48df2139263bb163/tests%2Fui%2Funused_unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d2f1aef02d052b777e70fad48df2139263bb163/tests%2Fui%2Funused_unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.stderr?ref=0d2f1aef02d052b777e70fad48df2139263bb163", "patch": "@@ -1,8 +1,8 @@\n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:18:29\n+  --> $DIR/unused_unit.rs:18:28\n    |\n LL |     pub fn get_unit<F: Fn() -> (), G>(&self, f: F, _g: G) -> ()\n-   |                             ^^^^^ help: remove the `-> ()`\n+   |                            ^^^^^^ help: remove the `-> ()`\n    |\n note: the lint level is defined here\n   --> $DIR/unused_unit.rs:12:9\n@@ -11,28 +11,28 @@ LL | #![deny(clippy::unused_unit)]\n    |         ^^^^^^^^^^^^^^^^^^^\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:19:19\n+  --> $DIR/unused_unit.rs:19:18\n    |\n LL |     where G: Fn() -> () {\n-   |                   ^^^^^ help: remove the `-> ()`\n+   |                  ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:18:59\n+  --> $DIR/unused_unit.rs:18:58\n    |\n LL |     pub fn get_unit<F: Fn() -> (), G>(&self, f: F, _g: G) -> ()\n-   |                                                           ^^^^^ help: remove the `-> ()`\n+   |                                                          ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:20:27\n+  --> $DIR/unused_unit.rs:20:26\n    |\n LL |         let _y: &dyn Fn() -> () = &f;\n-   |                           ^^^^^ help: remove the `-> ()`\n+   |                          ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:27:19\n+  --> $DIR/unused_unit.rs:27:18\n    |\n LL |     fn into(self) -> () {\n-   |                   ^^^^^ help: remove the `-> ()`\n+   |                  ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit expression\n   --> $DIR/unused_unit.rs:28:9\n@@ -41,46 +41,46 @@ LL |         ()\n    |         ^^ help: remove the final `()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:33:30\n+  --> $DIR/unused_unit.rs:33:29\n    |\n LL |     fn redundant<F: FnOnce() -> (), G, H>(&self, _f: F, _g: G, _h: H)\n-   |                              ^^^^^ help: remove the `-> ()`\n+   |                             ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:35:20\n+  --> $DIR/unused_unit.rs:35:19\n    |\n LL |         G: FnMut() -> (),\n-   |                    ^^^^^ help: remove the `-> ()`\n+   |                   ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:36:17\n+  --> $DIR/unused_unit.rs:36:16\n    |\n LL |         H: Fn() -> ();\n-   |                 ^^^^^ help: remove the `-> ()`\n+   |                ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:40:30\n+  --> $DIR/unused_unit.rs:40:29\n    |\n LL |     fn redundant<F: FnOnce() -> (), G, H>(&self, _f: F, _g: G, _h: H)\n-   |                              ^^^^^ help: remove the `-> ()`\n+   |                             ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:42:20\n+  --> $DIR/unused_unit.rs:42:19\n    |\n LL |         G: FnMut() -> (),\n-   |                    ^^^^^ help: remove the `-> ()`\n+   |                   ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:43:17\n+  --> $DIR/unused_unit.rs:43:16\n    |\n LL |         H: Fn() -> () {}\n-   |                 ^^^^^ help: remove the `-> ()`\n+   |                ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:46:18\n+  --> $DIR/unused_unit.rs:46:17\n    |\n LL | fn return_unit() -> () { () }\n-   |                  ^^^^^ help: remove the `-> ()`\n+   |                 ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit expression\n   --> $DIR/unused_unit.rs:46:26\n@@ -100,5 +100,23 @@ error: unneeded `()`\n LL |     return();\n    |           ^^ help: remove the `()`\n \n-error: aborting due to 16 previous errors\n+error: unneeded unit return type\n+  --> $DIR/unused_unit.rs:75:10\n+   |\n+LL | fn test()->(){}\n+   |          ^^^^ help: remove the `-> ()`\n+\n+error: unneeded unit return type\n+  --> $DIR/unused_unit.rs:78:11\n+   |\n+LL | fn test2() ->(){}\n+   |           ^^^^^ help: remove the `-> ()`\n+\n+error: unneeded unit return type\n+  --> $DIR/unused_unit.rs:81:11\n+   |\n+LL | fn test3()-> (){}\n+   |           ^^^^^ help: remove the `-> ()`\n+\n+error: aborting due to 19 previous errors\n "}]}