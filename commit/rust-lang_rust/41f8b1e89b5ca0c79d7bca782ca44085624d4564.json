{"sha": "41f8b1e89b5ca0c79d7bca782ca44085624d4564", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZjhiMWU4OWI1Y2EwYzc5ZDdiY2E3ODJjYTQ0MDg1NjI0ZDQ1NjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-26T07:01:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-26T07:01:18Z"}, "message": "Auto merge of #22810 - japaric:cow-path, r=alexcrichton\n\nThe Path/PathBuf pair already implements the required `Borrow`/`ToOwned` traits and can be used in a `Cow` pointer, so why not?\r\n\r\nr? @alexcrichton", "tree": {"sha": "6ad85c8b272164c95caae35cf056b1369b704e5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ad85c8b272164c95caae35cf056b1369b704e5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41f8b1e89b5ca0c79d7bca782ca44085624d4564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41f8b1e89b5ca0c79d7bca782ca44085624d4564", "html_url": "https://github.com/rust-lang/rust/commit/41f8b1e89b5ca0c79d7bca782ca44085624d4564", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41f8b1e89b5ca0c79d7bca782ca44085624d4564/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "610d1695d1e0f1bb4e59449d8ba70409b1dc610c", "url": "https://api.github.com/repos/rust-lang/rust/commits/610d1695d1e0f1bb4e59449d8ba70409b1dc610c", "html_url": "https://github.com/rust-lang/rust/commit/610d1695d1e0f1bb4e59449d8ba70409b1dc610c"}, {"sha": "2de7a7c9badf71978c53f07fc6b2db097a8d4213", "url": "https://api.github.com/repos/rust-lang/rust/commits/2de7a7c9badf71978c53f07fc6b2db097a8d4213", "html_url": "https://github.com/rust-lang/rust/commit/2de7a7c9badf71978c53f07fc6b2db097a8d4213"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "b85a0dcec81805cb0a844a926531e5b2501c15dd", "filename": "src/libstd/path.rs", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/41f8b1e89b5ca0c79d7bca782ca44085624d4564/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41f8b1e89b5ca0c79d7bca782ca44085624d4564/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=41f8b1e89b5ca0c79d7bca782ca44085624d4564", "patch": "@@ -108,7 +108,7 @@\n use core::prelude::*;\n \n use ascii::*;\n-use borrow::{Borrow, ToOwned, Cow};\n+use borrow::{Borrow, IntoCow, ToOwned, Cow};\n use cmp;\n use iter::{self, IntoIterator};\n use mem;\n@@ -987,6 +987,18 @@ impl Borrow<Path> for PathBuf {\n     }\n }\n \n+impl IntoCow<'static, Path> for PathBuf {\n+    fn into_cow(self) -> Cow<'static, Path> {\n+        Cow::Owned(self)\n+    }\n+}\n+\n+impl<'a> IntoCow<'a, Path> for &'a Path {\n+    fn into_cow(self) -> Cow<'a, Path> {\n+        Cow::Borrowed(self)\n+    }\n+}\n+\n impl ToOwned for Path {\n     type Owned = PathBuf;\n     fn to_owned(&self) -> PathBuf { self.to_path_buf() }\n@@ -1411,6 +1423,26 @@ mod tests {\n         );\n     );\n \n+    #[test]\n+    fn into_cow() {\n+        use borrow::{Cow, IntoCow};\n+\n+        let static_path = Path::new(\"/home/foo\");\n+        let static_cow_path: Cow<'static, Path> = static_path.into_cow();\n+        let pathbuf = PathBuf::new(\"/home/foo\");\n+\n+        {\n+            let path: &Path = &pathbuf;\n+            let borrowed_cow_path: Cow<Path> = path.into_cow();\n+\n+            assert_eq!(static_cow_path, borrowed_cow_path);\n+        }\n+\n+        let owned_cow_path: Cow<'static, Path> = pathbuf.into_cow();\n+\n+        assert_eq!(static_cow_path, owned_cow_path);\n+    }\n+\n     #[test]\n     #[cfg(unix)]\n     pub fn test_decompositions_unix() {"}]}