{"sha": "575836ebe3caa9963b61355561d16acb57e11aa3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3NTgzNmViZTNjYWE5OTYzYjYxMzU1NTYxZDE2YWNiNTdlMTFhYTM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-07T11:13:54Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-07T11:13:54Z"}, "message": "Check for main in current module before codegen of entry wrapper", "tree": {"sha": "686812e4457b377af56573db5d394f89d52fef18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/686812e4457b377af56573db5d394f89d52fef18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/575836ebe3caa9963b61355561d16acb57e11aa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/575836ebe3caa9963b61355561d16acb57e11aa3", "html_url": "https://github.com/rust-lang/rust/commit/575836ebe3caa9963b61355561d16acb57e11aa3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/575836ebe3caa9963b61355561d16acb57e11aa3/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ecffb6fc42fb5f2fce0ac0620176c5924d69dd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ecffb6fc42fb5f2fce0ac0620176c5924d69dd6", "html_url": "https://github.com/rust-lang/rust/commit/2ecffb6fc42fb5f2fce0ac0620176c5924d69dd6"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "74ee0d8fee81b064696b38b1960ee6edb8ef469c", "filename": "src/main_shim.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/575836ebe3caa9963b61355561d16acb57e11aa3/src%2Fmain_shim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/575836ebe3caa9963b61355561d16acb57e11aa3/src%2Fmain_shim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain_shim.rs?ref=575836ebe3caa9963b61355561d16acb57e11aa3", "patch": "@@ -17,6 +17,11 @@ pub fn maybe_create_entry_wrapper(tcx: TyCtxt<'_>, module: &mut Module<impl Back\n         None => return,\n     };\n \n+    let instance = Instance::mono(tcx, main_def_id);\n+    if module.get_name(&*tcx.symbol_name(instance).name.as_str()).is_none() {\n+        return;\n+    }\n+\n     create_entry_fn(tcx, module, main_def_id, use_start_lang_item);\n \n     fn create_entry_fn("}]}