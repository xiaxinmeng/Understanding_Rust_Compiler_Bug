{"sha": "08cc628e7334b7f200b09f5f2c77700231103fb3", "node_id": "C_kwDOAAsO6NoAKDA4Y2M2MjhlNzMzNGI3ZjIwMGIwOWY1ZjJjNzc3MDAyMzExMDNmYjM", "commit": {"author": {"name": "Martin Gammels\u00e6ter", "email": "martin@mg.am", "date": "2023-02-15T14:51:48Z"}, "committer": {"name": "Martin Gammels\u00e6ter", "email": "martin@mg.am", "date": "2023-02-15T17:44:03Z"}, "message": "Add point-at-inference ui test for wrong arity case", "tree": {"sha": "bd5233d0e8b24d4b857167544929af882a2b8ec5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd5233d0e8b24d4b857167544929af882a2b8ec5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08cc628e7334b7f200b09f5f2c77700231103fb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08cc628e7334b7f200b09f5f2c77700231103fb3", "html_url": "https://github.com/rust-lang/rust/commit/08cc628e7334b7f200b09f5f2c77700231103fb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08cc628e7334b7f200b09f5f2c77700231103fb3/comments", "author": {"login": "martingms", "id": 458783, "node_id": "MDQ6VXNlcjQ1ODc4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/458783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martingms", "html_url": "https://github.com/martingms", "followers_url": "https://api.github.com/users/martingms/followers", "following_url": "https://api.github.com/users/martingms/following{/other_user}", "gists_url": "https://api.github.com/users/martingms/gists{/gist_id}", "starred_url": "https://api.github.com/users/martingms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martingms/subscriptions", "organizations_url": "https://api.github.com/users/martingms/orgs", "repos_url": "https://api.github.com/users/martingms/repos", "events_url": "https://api.github.com/users/martingms/events{/privacy}", "received_events_url": "https://api.github.com/users/martingms/received_events", "type": "User", "site_admin": false}, "committer": {"login": "martingms", "id": 458783, "node_id": "MDQ6VXNlcjQ1ODc4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/458783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martingms", "html_url": "https://github.com/martingms", "followers_url": "https://api.github.com/users/martingms/followers", "following_url": "https://api.github.com/users/martingms/following{/other_user}", "gists_url": "https://api.github.com/users/martingms/gists{/gist_id}", "starred_url": "https://api.github.com/users/martingms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martingms/subscriptions", "organizations_url": "https://api.github.com/users/martingms/orgs", "repos_url": "https://api.github.com/users/martingms/repos", "events_url": "https://api.github.com/users/martingms/events{/privacy}", "received_events_url": "https://api.github.com/users/martingms/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22f853c620d970c6f80c8c206614a3bf766d028f", "url": "https://api.github.com/repos/rust-lang/rust/commits/22f853c620d970c6f80c8c206614a3bf766d028f", "html_url": "https://github.com/rust-lang/rust/commit/22f853c620d970c6f80c8c206614a3bf766d028f"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "647c7d622fa563006384f4048754e074fa059d3e", "filename": "tests/ui/type/type-check/point-at-inference-4.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/08cc628e7334b7f200b09f5f2c77700231103fb3/tests%2Fui%2Ftype%2Ftype-check%2Fpoint-at-inference-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08cc628e7334b7f200b09f5f2c77700231103fb3/tests%2Fui%2Ftype%2Ftype-check%2Fpoint-at-inference-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype%2Ftype-check%2Fpoint-at-inference-4.rs?ref=08cc628e7334b7f200b09f5f2c77700231103fb3", "patch": "@@ -0,0 +1,23 @@\n+struct S<A, B>(Option<(A, B)>);\n+\n+impl<A, B> S<A, B> {\n+    fn infer(&self, a: A, b: B) {}\n+    //~^ NOTE associated function defined here\n+    //~| NOTE\n+    //~| NOTE\n+}\n+\n+fn main() {\n+    let s = S(None);\n+    s.infer(0i32);\n+    //~^ ERROR this method takes 2 arguments but 1 argument was supplied\n+    //~| NOTE an argument is missing\n+    //~| HELP provide the argument\n+    //~| NOTE this is of type `i32`, which causes `s` to be inferred as `S<i32, _>`\n+    //~| HELP change the type of the numeric literal from `i32` to `u32`\n+    let t: S<u32, _> = s;\n+    //~^ ERROR mismatched types\n+    //~| NOTE expected `S<u32, _>`, found `S<i32, _>`\n+    //~| NOTE expected due to this\n+    //~| NOTE expected struct `S<u32, _>`\n+}"}, {"sha": "62e798e56f7cd348e4334b1ac4e25a3ef5d83fc9", "filename": "tests/ui/type/type-check/point-at-inference-4.stderr", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/08cc628e7334b7f200b09f5f2c77700231103fb3/tests%2Fui%2Ftype%2Ftype-check%2Fpoint-at-inference-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/08cc628e7334b7f200b09f5f2c77700231103fb3/tests%2Fui%2Ftype%2Ftype-check%2Fpoint-at-inference-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype%2Ftype-check%2Fpoint-at-inference-4.stderr?ref=08cc628e7334b7f200b09f5f2c77700231103fb3", "patch": "@@ -0,0 +1,38 @@\n+error[E0061]: this method takes 2 arguments but 1 argument was supplied\n+  --> $DIR/point-at-inference-4.rs:12:7\n+   |\n+LL |     s.infer(0i32);\n+   |       ^^^^^------ an argument is missing\n+   |\n+note: associated function defined here\n+  --> $DIR/point-at-inference-4.rs:4:8\n+   |\n+LL |     fn infer(&self, a: A, b: B) {}\n+   |        ^^^^^        ----  ----\n+help: provide the argument\n+   |\n+LL |     s.infer(0i32, /* b */);\n+   |            ~~~~~~~~~~~~~~~\n+\n+error[E0308]: mismatched types\n+  --> $DIR/point-at-inference-4.rs:18:24\n+   |\n+LL |     s.infer(0i32);\n+   |             ---- this is of type `i32`, which causes `s` to be inferred as `S<i32, _>`\n+...\n+LL |     let t: S<u32, _> = s;\n+   |            ---------   ^ expected `S<u32, _>`, found `S<i32, _>`\n+   |            |\n+   |            expected due to this\n+   |\n+   = note: expected struct `S<u32, _>`\n+              found struct `S<i32, _>`\n+help: change the type of the numeric literal from `i32` to `u32`\n+   |\n+LL |     s.infer(0u32);\n+   |              ~~~\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0061, E0308.\n+For more information about an error, try `rustc --explain E0061`."}]}