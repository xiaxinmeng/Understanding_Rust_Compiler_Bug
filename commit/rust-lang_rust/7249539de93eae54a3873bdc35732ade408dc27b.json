{"sha": "7249539de93eae54a3873bdc35732ade408dc27b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNDk1MzlkZTkzZWFlNTRhMzg3M2JkYzM1NzMyYWRlNDA4ZGMyN2I=", "commit": {"author": {"name": "Malo Jaffr\u00e9", "email": "jaffre.malo@gmail.com", "date": "2017-12-31T16:08:04Z"}, "committer": {"name": "Malo Jaffr\u00e9", "email": "jaffre.malo@gmail.com", "date": "2018-01-01T13:44:11Z"}, "message": "Fix broken links in internal docs", "tree": {"sha": "c45dcf3917e49e156ee4fb993b29010e8203e7b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c45dcf3917e49e156ee4fb993b29010e8203e7b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7249539de93eae54a3873bdc35732ade408dc27b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7249539de93eae54a3873bdc35732ade408dc27b", "html_url": "https://github.com/rust-lang/rust/commit/7249539de93eae54a3873bdc35732ade408dc27b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7249539de93eae54a3873bdc35732ade408dc27b/comments", "author": {"login": "MaloJaffre", "id": 16278359, "node_id": "MDQ6VXNlcjE2Mjc4MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/16278359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaloJaffre", "html_url": "https://github.com/MaloJaffre", "followers_url": "https://api.github.com/users/MaloJaffre/followers", "following_url": "https://api.github.com/users/MaloJaffre/following{/other_user}", "gists_url": "https://api.github.com/users/MaloJaffre/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaloJaffre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaloJaffre/subscriptions", "organizations_url": "https://api.github.com/users/MaloJaffre/orgs", "repos_url": "https://api.github.com/users/MaloJaffre/repos", "events_url": "https://api.github.com/users/MaloJaffre/events{/privacy}", "received_events_url": "https://api.github.com/users/MaloJaffre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MaloJaffre", "id": 16278359, "node_id": "MDQ6VXNlcjE2Mjc4MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/16278359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaloJaffre", "html_url": "https://github.com/MaloJaffre", "followers_url": "https://api.github.com/users/MaloJaffre/followers", "following_url": "https://api.github.com/users/MaloJaffre/following{/other_user}", "gists_url": "https://api.github.com/users/MaloJaffre/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaloJaffre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaloJaffre/subscriptions", "organizations_url": "https://api.github.com/users/MaloJaffre/orgs", "repos_url": "https://api.github.com/users/MaloJaffre/repos", "events_url": "https://api.github.com/users/MaloJaffre/events{/privacy}", "received_events_url": "https://api.github.com/users/MaloJaffre/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ed13d643a62cda3f94233bde933efbcba0be17f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ed13d643a62cda3f94233bde933efbcba0be17f", "html_url": "https://github.com/rust-lang/rust/commit/8ed13d643a62cda3f94233bde933efbcba0be17f"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "3816bbc1a3378f06b69017e33fa6acefd22be80b", "filename": "src/librustc/dep_graph/graph.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7249539de93eae54a3873bdc35732ade408dc27b/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7249539de93eae54a3873bdc35732ade408dc27b/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fgraph.rs?ref=7249539de93eae54a3873bdc35732ade408dc27b", "patch": "@@ -158,8 +158,8 @@ impl DepGraph {\n     /// what state they have access to. In particular, we want to\n     /// prevent implicit 'leaks' of tracked state into the task (which\n     /// could then be read without generating correct edges in the\n-    /// dep-graph -- see the [README] for more details on the\n-    /// dep-graph). To this end, the task function gets exactly two\n+    /// dep-graph -- see the module-level [README] for more details on\n+    /// the dep-graph). To this end, the task function gets exactly two\n     /// pieces of state: the context `cx` and an argument `arg`. Both\n     /// of these bits of state must be of some type that implements\n     /// `DepGraphSafe` and hence does not leak.\n@@ -178,7 +178,7 @@ impl DepGraph {\n     /// - If you need 3+ arguments, use a tuple for the\n     ///   `arg` parameter.\n     ///\n-    /// [README]: README.md\n+    /// [README]: https://github.com/rust-lang/rust/blob/master/src/librustc/dep_graph/README.md\n     pub fn with_task<C, A, R, HCX>(&self,\n                                    key: DepNode,\n                                    cx: C,"}, {"sha": "7d3699b35eb23b35377978ca5c10c7226e28eb20", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7249539de93eae54a3873bdc35732ade408dc27b/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7249539de93eae54a3873bdc35732ade408dc27b/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=7249539de93eae54a3873bdc35732ade408dc27b", "patch": "@@ -588,7 +588,9 @@ pub type CrateConfig = HirVec<P<MetaItem>>;\n /// The top-level data structure that stores the entire contents of\n /// the crate currently being compiled.\n ///\n-/// For more details, see [the module-level README](README.md).\n+/// For more details, see the module-level [README].\n+///\n+/// [README]: https://github.com/rust-lang/rust/blob/master/src/librustc/hir/README.md.\n #[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Debug)]\n pub struct Crate {\n     pub module: Mod,"}, {"sha": "c52be9caa4f9143e04456c7b179f2286789f8869", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7249539de93eae54a3873bdc35732ade408dc27b/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7249539de93eae54a3873bdc35732ade408dc27b/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=7249539de93eae54a3873bdc35732ade408dc27b", "patch": "@@ -8,7 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! MIR datatypes and passes. See [the README](README.md) for details.\n+//! MIR datatypes and passes. See the module-level [README] for details.\n+//!\n+//! [README]: https://github.com/rust-lang/rust/blob/master/src/librustc/mir/README.md\n \n use graphviz::IntoCow;\n use middle::const_val::ConstVal;"}, {"sha": "e21eb8bbf8ad25847d91f3770b6ef78fbe7f1680", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7249539de93eae54a3873bdc35732ade408dc27b/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7249539de93eae54a3873bdc35732ade408dc27b/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=7249539de93eae54a3873bdc35732ade408dc27b", "patch": "@@ -778,8 +778,10 @@ impl<'tcx> CommonTypes<'tcx> {\n \n /// The central data structure of the compiler. It stores references\n /// to the various **arenas** and also houses the results of the\n-/// various **compiler queries** that have been performed. See [the\n-/// README](README.md) for more deatils.\n+/// various **compiler queries** that have been performed. See the\n+/// module-level [README] for more details.\n+///\n+/// [README]: https://github.com/rust-lang/rust/blob/master/src/librustc/ty/README.md\n #[derive(Copy, Clone)]\n pub struct TyCtxt<'a, 'gcx: 'a+'tcx, 'tcx: 'a> {\n     gcx: &'a GlobalCtxt<'gcx>,"}, {"sha": "04477b82f29bd50c32ecee55a5f5e303c63f653f", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7249539de93eae54a3873bdc35732ade408dc27b/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7249539de93eae54a3873bdc35732ade408dc27b/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=7249539de93eae54a3873bdc35732ade408dc27b", "patch": "@@ -1647,10 +1647,8 @@ impl<'a, 'gcx, 'tcx> TyS<'tcx> {\n     ///\n     /// Note that during type checking, we use an inference variable\n     /// to represent the closure kind, because it has not yet been\n-    /// inferred. Once [upvar inference] is complete, that type varibale\n-    /// will be unified.\n-    ///\n-    /// [upvar inference]: src/librustc_typeck/check/upvar.rs\n+    /// inferred. Once upvar inference (in `src/librustc_typeck/check/upvar.rs`)\n+    /// is complete, that type variable will be unified.\n     pub fn to_opt_closure_kind(&self) -> Option<ty::ClosureKind> {\n         match self.sty {\n             TyInt(int_ty) => match int_ty {"}, {"sha": "c0f830f1fbe2ec2d846f95c2bd30f8e4554e42de", "filename": "src/librustc_plugin/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7249539de93eae54a3873bdc35732ade408dc27b/src%2Flibrustc_plugin%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7249539de93eae54a3873bdc35732ade408dc27b/src%2Flibrustc_plugin%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Flib.rs?ref=7249539de93eae54a3873bdc35732ade408dc27b", "patch": "@@ -57,7 +57,7 @@\n //! #![plugin(myplugin)]\n //! ```\n //!\n-//! See the [`plugin` feature](../../unstable-book/language-features/plugin.html) of\n+//! See the [`plugin` feature](../unstable-book/language-features/plugin.html) of\n //! the Unstable Book for more examples.\n \n #![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\","}]}