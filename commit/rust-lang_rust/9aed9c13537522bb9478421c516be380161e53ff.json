{"sha": "9aed9c13537522bb9478421c516be380161e53ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhZWQ5YzEzNTM3NTIyYmI5NDc4NDIxYzUxNmJlMzgwMTYxZTUzZmY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-04-08T18:29:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-08T18:29:56Z"}, "message": "Rollup merge of #81764 - jyn514:lint-links, r=GuillaumeGomez\n\nStabilize `rustdoc::bare_urls` lint\n\nCloses https://github.com/rust-lang/rust/issues/77501. Closes https://github.com/rust-lang/rust/issues/83598.", "tree": {"sha": "5b8bf90cbd2e18623d023de6d19f2f49572b46d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b8bf90cbd2e18623d023de6d19f2f49572b46d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9aed9c13537522bb9478421c516be380161e53ff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgb0ukCRBK7hj4Ov3rIwAAdHIIAAVxnRugB7PdD87qMxeM3vMq\nuMJmt+XlkaH3NolJxyYIFv/LlcFDv1pux0Lo5w614YwrXZJd25ORnd6XU0Z6xG4/\nu3PdT/lT6j/OfYDzT0k1w3Hl1SZf4YNVwaCPcMAzvUky0KR7mUeYXDGWpr9fOgTp\ne2dexqoQ05L8XIsVMmFMTsT/qkOEioXx1+CqdwN7hxmr6ksUJP1LnUKTAdD9A6hP\nAZEagmHhKUmns3TA/uWVVnU3rnfq9saMCHtBILOzP8NtuQSMZE/SxZABnklY7d5v\n3VUM2wWnNDGcq8TKfrdpF5ZOGW5ZYXPYD2ZKsx/lhO9Yc9t68ByfQE2K4iyDlYs=\n=+ddW\n-----END PGP SIGNATURE-----\n", "payload": "tree 5b8bf90cbd2e18623d023de6d19f2f49572b46d2\nparent 689978c17636415dbe4a2d87ac83b53cd2c42416\nparent ff245dab413e0ae2dced431392a54755b57e6491\nauthor Dylan DPC <dylan.dpc@gmail.com> 1617906596 +0200\ncommitter GitHub <noreply@github.com> 1617906596 +0200\n\nRollup merge of #81764 - jyn514:lint-links, r=GuillaumeGomez\n\nStabilize `rustdoc::bare_urls` lint\n\nCloses https://github.com/rust-lang/rust/issues/77501. Closes https://github.com/rust-lang/rust/issues/83598.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9aed9c13537522bb9478421c516be380161e53ff", "html_url": "https://github.com/rust-lang/rust/commit/9aed9c13537522bb9478421c516be380161e53ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9aed9c13537522bb9478421c516be380161e53ff/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "689978c17636415dbe4a2d87ac83b53cd2c42416", "url": "https://api.github.com/repos/rust-lang/rust/commits/689978c17636415dbe4a2d87ac83b53cd2c42416", "html_url": "https://github.com/rust-lang/rust/commit/689978c17636415dbe4a2d87ac83b53cd2c42416"}, {"sha": "ff245dab413e0ae2dced431392a54755b57e6491", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff245dab413e0ae2dced431392a54755b57e6491", "html_url": "https://github.com/rust-lang/rust/commit/ff245dab413e0ae2dced431392a54755b57e6491"}], "stats": {"total": 264, "additions": 129, "deletions": 135}, "files": [{"sha": "e0857ad1eb997c11eaf9efc533bb276233c1d730", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9aed9c13537522bb9478421c516be380161e53ff/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9aed9c13537522bb9478421c516be380161e53ff/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=9aed9c13537522bb9478421c516be380161e53ff", "patch": "@@ -464,15 +464,16 @@ impl<'s> LintLevelsBuilder<'s> {\n                 // we don't warn about the name change.\n                 if let CheckLintNameResult::Warning(_, Some(new_name)) = lint_result {\n                     // Ignore any errors or warnings that happen because the new name is inaccurate\n-                    if let CheckLintNameResult::Ok(ids) =\n-                        store.check_lint_name(&new_name, tool_name)\n-                    {\n+                    // NOTE: `new_name` already includes the tool name, so we don't have to add it again.\n+                    if let CheckLintNameResult::Ok(ids) = store.check_lint_name(&new_name, None) {\n                         let src =\n                             LintLevelSource::Node(Symbol::intern(&new_name), li.span(), reason);\n                         for &id in ids {\n                             self.check_gated_lint(id, attr.span);\n                             self.insert_spec(&mut specs, id, (level, src));\n                         }\n+                    } else {\n+                        panic!(\"renamed lint does not exist: {}\", new_name);\n                     }\n                 }\n             }"}, {"sha": "760b8d8cbb06068c87adf42b8006dc6966574aef", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9aed9c13537522bb9478421c516be380161e53ff/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9aed9c13537522bb9478421c516be380161e53ff/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=9aed9c13537522bb9478421c516be380161e53ff", "patch": "@@ -298,7 +298,8 @@ pub mod primitive;\n     unused_imports,\n     unsafe_op_in_unsafe_fn\n )]\n-#[allow(rustdoc::non_autolinks)]\n+#[cfg_attr(bootstrap, allow(rustdoc::non_autolinks))]\n+#[cfg_attr(not(bootstrap), allow(rustdoc::bare_urls))]\n // FIXME: This annotation should be moved into rust-lang/stdarch after clashing_extern_declarations is\n // merged. It currently cannot because bootstrap fails as the lint hasn't been defined yet.\n #[allow(clashing_extern_declarations)]"}, {"sha": "a6626679a7d6035bd6cadc0594bcc6c6b0df281e", "filename": "src/doc/rustdoc/src/lints.md", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9aed9c13537522bb9478421c516be380161e53ff/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "raw_url": "https://github.com/rust-lang/rust/raw/9aed9c13537522bb9478421c516be380161e53ff/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md?ref=9aed9c13537522bb9478421c516be380161e53ff", "patch": "@@ -294,40 +294,33 @@ warning: unclosed HTML tag `h1`\n warning: 2 warnings emitted\n ```\n \n-## non_autolinks\n+## bare_urls\n \n-This lint is **nightly-only** and **warns by default**. It detects links which\n-could use the \"automatic\" link syntax. For example:\n+This lint is **warn-by-default**. It detects URLs which are not links.\n+For example:\n \n ```rust\n /// http://example.org\n-/// [http://example.com](http://example.com)\n /// [http://example.net]\n-///\n-/// [http://example.com]: http://example.com\n pub fn foo() {}\n ```\n \n Which will give:\n \n ```text\n warning: this URL is not a hyperlink\n- --> foo.rs:1:5\n+ --> links.rs:1:5\n   |\n 1 | /// http://example.org\n   |     ^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<http://example.org>`\n   |\n-  = note: `#[warn(rustdoc::non_autolinks)]` on by default\n-\n-warning: unneeded long form for URL\n- --> foo.rs:2:5\n-  |\n-2 | /// [http://example.com](http://example.com)\n-  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<http://example.com>`\n+  = note: `#[warn(rustdoc::bare_urls)]` on by default\n \n warning: this URL is not a hyperlink\n- --> foo.rs:3:6\n+ --> links.rs:3:6\n   |\n 3 | /// [http://example.net]\n   |      ^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<http://example.net>`\n+\n+warning: 2 warnings emitted\n ```"}, {"sha": "1b79811d4b075d3bf004a5853f257924f0850d48", "filename": "src/librustdoc/lint.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9aed9c13537522bb9478421c516be380161e53ff/src%2Flibrustdoc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9aed9c13537522bb9478421c516be380161e53ff/src%2Flibrustdoc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flint.rs?ref=9aed9c13537522bb9478421c516be380161e53ff", "patch": "@@ -148,14 +148,13 @@ declare_rustdoc_lint! {\n }\n \n declare_rustdoc_lint! {\n-    /// The `non_autolinks` lint detects when a URL could be written using\n-    /// only angle brackets. This is a `rustdoc` only lint, see the\n-    /// documentation in the [rustdoc book].\n+    /// The `bare_urls` lint detects when a URL is not a hyperlink.\n+    /// This is a `rustdoc` only lint, see the documentation in the [rustdoc book].\n     ///\n-    /// [rustdoc book]: ../../../rustdoc/lints.html#non_autolinks\n-    NON_AUTOLINKS,\n+    /// [rustdoc book]: ../../../rustdoc/lints.html#bare_urls\n+    BARE_URLS,\n     Warn,\n-    \"detects URLs that could be written using only angle brackets\"\n+    \"detects URLs that are not hyperlinks\"\n }\n \n crate static RUSTDOC_LINTS: Lazy<Vec<&'static Lint>> = Lazy::new(|| {\n@@ -166,7 +165,7 @@ crate static RUSTDOC_LINTS: Lazy<Vec<&'static Lint>> = Lazy::new(|| {\n         PRIVATE_DOC_TESTS,\n         INVALID_CODEBLOCK_ATTRIBUTES,\n         INVALID_HTML_TAGS,\n-        NON_AUTOLINKS,\n+        BARE_URLS,\n         MISSING_CRATE_LEVEL_DOCS,\n     ]\n });\n@@ -185,4 +184,6 @@ crate fn register_lints(_sess: &Session, lint_store: &mut LintStore) {\n     }\n     lint_store\n         .register_renamed(\"intra_doc_link_resolution_failure\", \"rustdoc::broken_intra_doc_links\");\n+    lint_store.register_renamed(\"non_autolinks\", \"rustdoc::bare_urls\");\n+    lint_store.register_renamed(\"rustdoc::non_autolinks\", \"rustdoc::bare_urls\");\n }"}, {"sha": "3f2e1c68c55ababeb5f5d475440de53516052572", "filename": "src/librustdoc/passes/bare_urls.rs", "status": "renamed", "additions": 31, "deletions": 54, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/9aed9c13537522bb9478421c516be380161e53ff/src%2Flibrustdoc%2Fpasses%2Fbare_urls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9aed9c13537522bb9478421c516be380161e53ff/src%2Flibrustdoc%2Fpasses%2Fbare_urls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fbare_urls.rs?ref=9aed9c13537522bb9478421c516be380161e53ff", "patch": "@@ -4,37 +4,42 @@ use crate::core::DocContext;\n use crate::fold::DocFolder;\n use crate::html::markdown::opts;\n use core::ops::Range;\n-use pulldown_cmark::{Event, LinkType, Parser, Tag};\n+use pulldown_cmark::{Event, Parser, Tag};\n use regex::Regex;\n use rustc_errors::Applicability;\n+use std::lazy::SyncLazy;\n+use std::mem;\n \n-crate const CHECK_NON_AUTOLINKS: Pass = Pass {\n-    name: \"check-non-autolinks\",\n-    run: check_non_autolinks,\n-    description: \"detects URLs that could be linkified\",\n+crate const CHECK_BARE_URLS: Pass = Pass {\n+    name: \"check-bare-urls\",\n+    run: check_bare_urls,\n+    description: \"detects URLs that are not hyperlinks\",\n };\n \n-const URL_REGEX: &str = concat!(\n-    r\"https?://\",                          // url scheme\n-    r\"([-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.)+\", // one or more subdomains\n-    r\"[a-zA-Z]{2,63}\",                     // root domain\n-    r\"\\b([-a-zA-Z0-9@:%_\\+.~#?&/=]*)\"      // optional query or url fragments\n-);\n+const URL_REGEX: SyncLazy<Regex> = SyncLazy::new(|| {\n+    Regex::new(concat!(\n+        r\"https?://\",                          // url scheme\n+        r\"([-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.)+\", // one or more subdomains\n+        r\"[a-zA-Z]{2,63}\",                     // root domain\n+        r\"\\b([-a-zA-Z0-9@:%_\\+.~#?&/=]*)\"      // optional query or url fragments\n+    ))\n+    .expect(\"failed to build regex\")\n+});\n \n-struct NonAutolinksLinter<'a, 'tcx> {\n+struct BareUrlsLinter<'a, 'tcx> {\n     cx: &'a mut DocContext<'tcx>,\n-    regex: Regex,\n }\n \n-impl<'a, 'tcx> NonAutolinksLinter<'a, 'tcx> {\n+impl<'a, 'tcx> BareUrlsLinter<'a, 'tcx> {\n     fn find_raw_urls(\n         &self,\n         text: &str,\n         range: Range<usize>,\n         f: &impl Fn(&DocContext<'_>, &str, &str, Range<usize>),\n     ) {\n+        trace!(\"looking for raw urls in {}\", text);\n         // For now, we only check \"full\" URLs (meaning, starting with \"http://\" or \"https://\").\n-        for match_ in self.regex.find_iter(&text) {\n+        for match_ in URL_REGEX.find_iter(&text) {\n             let url = match_.as_str();\n             let url_range = match_.range();\n             f(\n@@ -47,18 +52,11 @@ impl<'a, 'tcx> NonAutolinksLinter<'a, 'tcx> {\n     }\n }\n \n-crate fn check_non_autolinks(krate: Crate, cx: &mut DocContext<'_>) -> Crate {\n-    if !cx.tcx.sess.is_nightly_build() {\n-        krate\n-    } else {\n-        let mut coll =\n-            NonAutolinksLinter { cx, regex: Regex::new(URL_REGEX).expect(\"failed to build regex\") };\n-\n-        coll.fold_crate(krate)\n-    }\n+crate fn check_bare_urls(krate: Crate, cx: &mut DocContext<'_>) -> Crate {\n+    BareUrlsLinter { cx }.fold_crate(krate)\n }\n \n-impl<'a, 'tcx> DocFolder for NonAutolinksLinter<'a, 'tcx> {\n+impl<'a, 'tcx> DocFolder for BareUrlsLinter<'a, 'tcx> {\n     fn fold_item(&mut self, item: Item) -> Option<Item> {\n         let hir_id = match DocContext::as_local_hir_id(self.cx.tcx, item.def_id) {\n             Some(hir_id) => hir_id,\n@@ -73,7 +71,7 @@ impl<'a, 'tcx> DocFolder for NonAutolinksLinter<'a, 'tcx> {\n                 let sp = super::source_span_for_markdown_range(cx.tcx, &dox, &range, &item.attrs)\n                     .or_else(|| span_of_attrs(&item.attrs))\n                     .unwrap_or(item.span.inner());\n-                cx.tcx.struct_span_lint_hir(crate::lint::NON_AUTOLINKS, hir_id, sp, |lint| {\n+                cx.tcx.struct_span_lint_hir(crate::lint::BARE_URLS, hir_id, sp, |lint| {\n                     lint.build(msg)\n                         .span_suggestion(\n                             sp,\n@@ -89,37 +87,16 @@ impl<'a, 'tcx> DocFolder for NonAutolinksLinter<'a, 'tcx> {\n \n             while let Some((event, range)) = p.next() {\n                 match event {\n-                    Event::Start(Tag::Link(kind, _, _)) => {\n-                        let ignore = matches!(kind, LinkType::Autolink | LinkType::Email);\n-                        let mut title = String::new();\n-\n-                        while let Some((event, range)) = p.next() {\n-                            match event {\n-                                Event::End(Tag::Link(_, url, _)) => {\n-                                    // NOTE: links cannot be nested, so we don't need to\n-                                    // check `kind`\n-                                    if url.as_ref() == title && !ignore && self.regex.is_match(&url)\n-                                    {\n-                                        report_diag(\n-                                            self.cx,\n-                                            \"unneeded long form for URL\",\n-                                            &url,\n-                                            range,\n-                                        );\n-                                    }\n-                                    break;\n-                                }\n-                                Event::Text(s) if !ignore => title.push_str(&s),\n-                                _ => {}\n-                            }\n-                        }\n-                    }\n                     Event::Text(s) => self.find_raw_urls(&s, range, &report_diag),\n-                    Event::Start(Tag::CodeBlock(_)) => {\n-                        // We don't want to check the text inside the code blocks.\n+                    // We don't want to check the text inside code blocks or links.\n+                    Event::Start(tag @ (Tag::CodeBlock(_) | Tag::Link(..))) => {\n                         while let Some((event, _)) = p.next() {\n                             match event {\n-                                Event::End(Tag::CodeBlock(_)) => break,\n+                                Event::End(end)\n+                                    if mem::discriminant(&end) == mem::discriminant(&tag) =>\n+                                {\n+                                    break;\n+                                }\n                                 _ => {}\n                             }\n                         }", "previous_filename": "src/librustdoc/passes/non_autolinks.rs"}, {"sha": "4cc2f7120a03ab094e78181c8bb3733b580c8e01", "filename": "src/librustdoc/passes/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9aed9c13537522bb9478421c516be380161e53ff/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9aed9c13537522bb9478421c516be380161e53ff/src%2Flibrustdoc%2Fpasses%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fmod.rs?ref=9aed9c13537522bb9478421c516be380161e53ff", "patch": "@@ -12,8 +12,8 @@ use crate::core::DocContext;\n mod stripper;\n crate use stripper::*;\n \n-mod non_autolinks;\n-crate use self::non_autolinks::CHECK_NON_AUTOLINKS;\n+mod bare_urls;\n+crate use self::bare_urls::CHECK_BARE_URLS;\n \n mod strip_hidden;\n crate use self::strip_hidden::STRIP_HIDDEN;\n@@ -90,7 +90,7 @@ crate const PASSES: &[Pass] = &[\n     COLLECT_TRAIT_IMPLS,\n     CALCULATE_DOC_COVERAGE,\n     CHECK_INVALID_HTML_TAGS,\n-    CHECK_NON_AUTOLINKS,\n+    CHECK_BARE_URLS,\n ];\n \n /// The list of passes run by default.\n@@ -105,7 +105,7 @@ crate const DEFAULT_PASSES: &[ConditionalPass] = &[\n     ConditionalPass::always(CHECK_CODE_BLOCK_SYNTAX),\n     ConditionalPass::always(CHECK_INVALID_HTML_TAGS),\n     ConditionalPass::always(PROPAGATE_DOC_CFG),\n-    ConditionalPass::always(CHECK_NON_AUTOLINKS),\n+    ConditionalPass::always(CHECK_BARE_URLS),\n ];\n \n /// The list of default passes run when `--doc-coverage` is passed to rustdoc."}, {"sha": "05a32d3cc310962fb075ecdae376289a53ed9ceb", "filename": "src/test/rustdoc-ui/renamed-lint-still-applies.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9aed9c13537522bb9478421c516be380161e53ff/src%2Ftest%2Frustdoc-ui%2Frenamed-lint-still-applies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9aed9c13537522bb9478421c516be380161e53ff/src%2Ftest%2Frustdoc-ui%2Frenamed-lint-still-applies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Frenamed-lint-still-applies.rs?ref=9aed9c13537522bb9478421c516be380161e53ff", "patch": "@@ -4,3 +4,8 @@\n // stable channel.\n //! [x]\n //~^ ERROR unresolved link\n+\n+#![deny(rustdoc::non_autolinks)]\n+//~^ WARNING renamed to `rustdoc::bare_urls`\n+//! http://example.com\n+//~^ ERROR not a hyperlink"}, {"sha": "19c253b366b25c828bc8bbb933c00ad5921a4af3", "filename": "src/test/rustdoc-ui/renamed-lint-still-applies.stderr", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9aed9c13537522bb9478421c516be380161e53ff/src%2Ftest%2Frustdoc-ui%2Frenamed-lint-still-applies.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9aed9c13537522bb9478421c516be380161e53ff/src%2Ftest%2Frustdoc-ui%2Frenamed-lint-still-applies.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Frenamed-lint-still-applies.stderr?ref=9aed9c13537522bb9478421c516be380161e53ff", "patch": "@@ -1,3 +1,11 @@\n+warning: lint `rustdoc::non_autolinks` has been renamed to `rustdoc::bare_urls`\n+  --> $DIR/renamed-lint-still-applies.rs:8:9\n+   |\n+LL | #![deny(rustdoc::non_autolinks)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `rustdoc::bare_urls`\n+   |\n+   = note: `#[warn(renamed_and_removed_lints)]` on by default\n+\n error: unresolved link to `x`\n   --> $DIR/renamed-lint-still-applies.rs:5:6\n    |\n@@ -12,5 +20,17 @@ LL | #![deny(broken_intra_doc_links)]\n    = note: `#[deny(rustdoc::broken_intra_doc_links)]` implied by `#[deny(broken_intra_doc_links)]`\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n-error: aborting due to previous error\n+error: this URL is not a hyperlink\n+  --> $DIR/renamed-lint-still-applies.rs:10:5\n+   |\n+LL | //! http://example.com\n+   |     ^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<http://example.com>`\n+   |\n+note: the lint level is defined here\n+  --> $DIR/renamed-lint-still-applies.rs:8:9\n+   |\n+LL | #![deny(rustdoc::non_autolinks)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors; 1 warning emitted\n "}, {"sha": "9096cce127658d93169762c999f749b8d5fe28e4", "filename": "src/test/rustdoc-ui/unknown-renamed-lints.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9aed9c13537522bb9478421c516be380161e53ff/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9aed9c13537522bb9478421c516be380161e53ff/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.rs?ref=9aed9c13537522bb9478421c516be380161e53ff", "patch": "@@ -8,8 +8,12 @@\n //~^ ERROR unknown lint: `rustdoc::x`\n #![deny(intra_doc_link_resolution_failure)]\n //~^ ERROR renamed to `rustdoc::broken_intra_doc_links`\n-\n #![deny(non_autolinks)]\n+//~^ ERROR renamed to `rustdoc::bare_urls`\n+#![deny(rustdoc::non_autolinks)]\n+//~^ ERROR renamed to `rustdoc::bare_urls`\n+\n+#![deny(private_doc_tests)]\n // FIXME: the old names for rustdoc lints should warn by default once `rustdoc::` makes it to the\n // stable channel.\n "}, {"sha": "51e06821cf7ab824b184b4c972e06e2f4b1d6d00", "filename": "src/test/rustdoc-ui/unknown-renamed-lints.stderr", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9aed9c13537522bb9478421c516be380161e53ff/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9aed9c13537522bb9478421c516be380161e53ff/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.stderr?ref=9aed9c13537522bb9478421c516be380161e53ff", "patch": "@@ -28,19 +28,31 @@ note: the lint level is defined here\n LL | #![deny(renamed_and_removed_lints)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n+error: lint `non_autolinks` has been renamed to `rustdoc::bare_urls`\n+  --> $DIR/unknown-renamed-lints.rs:11:9\n+   |\n+LL | #![deny(non_autolinks)]\n+   |         ^^^^^^^^^^^^^ help: use the new name: `rustdoc::bare_urls`\n+\n+error: lint `rustdoc::non_autolinks` has been renamed to `rustdoc::bare_urls`\n+  --> $DIR/unknown-renamed-lints.rs:13:9\n+   |\n+LL | #![deny(rustdoc::non_autolinks)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `rustdoc::bare_urls`\n+\n error: lint `rustdoc` has been removed: use `rustdoc::all` instead\n-  --> $DIR/unknown-renamed-lints.rs:16:9\n+  --> $DIR/unknown-renamed-lints.rs:20:9\n    |\n LL | #![deny(rustdoc)]\n    |         ^^^^^^^\n \n error: unknown lint: `rustdoc::intra_doc_link_resolution_failure`\n-  --> $DIR/unknown-renamed-lints.rs:20:9\n+  --> $DIR/unknown-renamed-lints.rs:24:9\n    |\n LL | #![deny(rustdoc::intra_doc_link_resolution_failure)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Compilation failed, aborting rustdoc\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 8 previous errors\n "}, {"sha": "43a13b02d0ab614a5dfaeb19147e90a14d1088a4", "filename": "src/test/rustdoc-ui/url-improvements.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9aed9c13537522bb9478421c516be380161e53ff/src%2Ftest%2Frustdoc-ui%2Furl-improvements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9aed9c13537522bb9478421c516be380161e53ff/src%2Ftest%2Frustdoc-ui%2Furl-improvements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Furl-improvements.rs?ref=9aed9c13537522bb9478421c516be380161e53ff", "patch": "@@ -1,14 +1,4 @@\n-#![deny(rustdoc::non_autolinks)]\n-\n-/// [http://aa.com](http://aa.com)\n-//~^ ERROR unneeded long form for URL\n-/// [http://bb.com]\n-//~^ ERROR unneeded long form for URL\n-///\n-/// [http://bb.com]: http://bb.com\n-///\n-/// [http://c.com][http://c.com]\n-pub fn a() {}\n+#![deny(rustdoc::bare_urls)]\n \n /// https://somewhere.com\n //~^ ERROR this URL is not a hyperlink\n@@ -54,12 +44,14 @@ pub fn c() {}\n ///\n /// ```\n /// This link should not be linted: http://example.com\n+///\n+/// Nor this one: <http://example.com> or this one: [x](http://example.com)\n /// ```\n ///\n /// [should_not.lint](should_not.lint)\n pub fn everything_is_fine_here() {}\n \n-#[allow(rustdoc::non_autolinks)]\n+#[allow(rustdoc::bare_urls)]\n pub mod foo {\n     /// https://somewhere.com/a?hello=12&bye=11#xyz\n     pub fn bar() {}"}, {"sha": "3d5ebd8be6b677bd318cb9a7d7dbb32f6f144403", "filename": "src/test/rustdoc-ui/url-improvements.stderr", "status": "modified", "additions": 22, "deletions": 34, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/9aed9c13537522bb9478421c516be380161e53ff/src%2Ftest%2Frustdoc-ui%2Furl-improvements.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9aed9c13537522bb9478421c516be380161e53ff/src%2Ftest%2Frustdoc-ui%2Furl-improvements.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Furl-improvements.stderr?ref=9aed9c13537522bb9478421c516be380161e53ff", "patch": "@@ -1,122 +1,110 @@\n-error: unneeded long form for URL\n+error: this URL is not a hyperlink\n   --> $DIR/url-improvements.rs:3:5\n    |\n-LL | /// [http://aa.com](http://aa.com)\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<http://aa.com>`\n+LL | /// https://somewhere.com\n+   |     ^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com>`\n    |\n note: the lint level is defined here\n   --> $DIR/url-improvements.rs:1:9\n    |\n-LL | #![deny(rustdoc::non_autolinks)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: unneeded long form for URL\n-  --> $DIR/url-improvements.rs:5:5\n-   |\n-LL | /// [http://bb.com]\n-   |     ^^^^^^^^^^^^^^^ help: use an automatic link instead: `<http://bb.com>`\n+LL | #![deny(rustdoc::bare_urls)]\n+   |         ^^^^^^^^^^^^^^^^^^\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:13:5\n-   |\n-LL | /// https://somewhere.com\n-   |     ^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com>`\n-\n-error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:15:5\n+  --> $DIR/url-improvements.rs:5:5\n    |\n LL | /// https://somewhere.com/a\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com/a>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:17:5\n+  --> $DIR/url-improvements.rs:7:5\n    |\n LL | /// https://www.somewhere.com\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://www.somewhere.com>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:19:5\n+  --> $DIR/url-improvements.rs:9:5\n    |\n LL | /// https://www.somewhere.com/a\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://www.somewhere.com/a>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:21:5\n+  --> $DIR/url-improvements.rs:11:5\n    |\n LL | /// https://subdomain.example.com\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://subdomain.example.com>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:23:5\n+  --> $DIR/url-improvements.rs:13:5\n    |\n LL | /// https://somewhere.com?\n    |     ^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com?>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:25:5\n+  --> $DIR/url-improvements.rs:15:5\n    |\n LL | /// https://somewhere.com/a?\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com/a?>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:27:5\n+  --> $DIR/url-improvements.rs:17:5\n    |\n LL | /// https://somewhere.com?hello=12\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com?hello=12>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:29:5\n+  --> $DIR/url-improvements.rs:19:5\n    |\n LL | /// https://somewhere.com/a?hello=12\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com/a?hello=12>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:31:5\n+  --> $DIR/url-improvements.rs:21:5\n    |\n LL | /// https://example.com?hello=12#xyz\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://example.com?hello=12#xyz>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:33:5\n+  --> $DIR/url-improvements.rs:23:5\n    |\n LL | /// https://example.com/a?hello=12#xyz\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://example.com/a?hello=12#xyz>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:35:5\n+  --> $DIR/url-improvements.rs:25:5\n    |\n LL | /// https://example.com#xyz\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://example.com#xyz>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:37:5\n+  --> $DIR/url-improvements.rs:27:5\n    |\n LL | /// https://example.com/a#xyz\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://example.com/a#xyz>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:39:5\n+  --> $DIR/url-improvements.rs:29:5\n    |\n LL | /// https://somewhere.com?hello=12&bye=11\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com?hello=12&bye=11>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:41:5\n+  --> $DIR/url-improvements.rs:31:5\n    |\n LL | /// https://somewhere.com/a?hello=12&bye=11\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com/a?hello=12&bye=11>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:43:5\n+  --> $DIR/url-improvements.rs:33:5\n    |\n LL | /// https://somewhere.com?hello=12&bye=11#xyz\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com?hello=12&bye=11#xyz>`\n \n error: this URL is not a hyperlink\n-  --> $DIR/url-improvements.rs:45:10\n+  --> $DIR/url-improvements.rs:35:10\n    |\n LL | /// hey! https://somewhere.com/a?hello=12&bye=11#xyz\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<https://somewhere.com/a?hello=12&bye=11#xyz>`\n \n-error: aborting due to 19 previous errors\n+error: aborting due to 17 previous errors\n "}]}