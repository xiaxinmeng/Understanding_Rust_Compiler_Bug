{"sha": "e340a0e249c2efc069235c9db47e47c3e136570c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzNDBhMGUyNDljMmVmYzA2OTIzNWM5ZGI0N2U0N2MzZTEzNjU3MGM=", "commit": {"author": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-08-27T23:21:25Z"}, "committer": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-08-27T23:21:25Z"}, "message": "Suggested changes", "tree": {"sha": "ded59407e71dee3b2d1faf161b404364f21cb2be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ded59407e71dee3b2d1faf161b404364f21cb2be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e340a0e249c2efc069235c9db47e47c3e136570c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e340a0e249c2efc069235c9db47e47c3e136570c", "html_url": "https://github.com/rust-lang/rust/commit/e340a0e249c2efc069235c9db47e47c3e136570c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e340a0e249c2efc069235c9db47e47c3e136570c/comments", "author": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86bd551e4c8954330e5e0d71c09c4ecbf514a5b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/86bd551e4c8954330e5e0d71c09c4ecbf514a5b6", "html_url": "https://github.com/rust-lang/rust/commit/86bd551e4c8954330e5e0d71c09c4ecbf514a5b6"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "aeb3f9970ab9e6a0cda3cb926d1dc54117c30818", "filename": "compiler/rustc_index/src/bit_set.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e340a0e249c2efc069235c9db47e47c3e136570c/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e340a0e249c2efc069235c9db47e47c3e136570c/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs?ref=e340a0e249c2efc069235c9db47e47c3e136570c", "patch": "@@ -363,7 +363,7 @@ impl<T: Idx> BitRelations<HybridBitSet<T>> for BitSet<T> {\n             HybridBitSet::Sparse(sparse) => {\n                 let (updated, changed) = dense_sparse_intersect(self, sparse);\n \n-                // We can't directly assign the BitSet to the SparseBitSet, and\n+                // We can't directly assign the SparseBitSet to the BitSet, and\n                 // doing `*self = updated.to_dense()` would cause a drop / reallocation. Instead,\n                 // the BitSet is cleared and `updated` is copied into `self`.\n                 self.clear();\n@@ -1071,7 +1071,7 @@ impl<R: Idx, C: Idx> SparseBitMatrix<R, C> {\n         Self { num_columns, rows: IndexVec::new() }\n     }\n \n-    pub fn ensure_row(&mut self, row: R) -> &mut HybridBitSet<C> {\n+    fn ensure_row(&mut self, row: R) -> &mut HybridBitSet<C> {\n         // Instantiate any missing rows up to and including row `row` with an\n         // empty HybridBitSet.\n         self.rows.ensure_contains_elem(row, || None);"}]}