{"sha": "bd80a53407e15f13ce50a07642491680010fa090", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkODBhNTM0MDdlMTVmMTNjZTUwYTA3NjQyNDkxNjgwMDEwZmEwOTA=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2016-03-12T04:18:17Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2016-03-12T04:18:17Z"}, "message": "Further simplify Windows stdout/stderr\n\nThis makes it output as much valid UTF-8 as it can then return failure.", "tree": {"sha": "001d7db59d77afc6c8cb9253c4a599a651dc2b21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/001d7db59d77afc6c8cb9253c4a599a651dc2b21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd80a53407e15f13ce50a07642491680010fa090", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd80a53407e15f13ce50a07642491680010fa090", "html_url": "https://github.com/rust-lang/rust/commit/bd80a53407e15f13ce50a07642491680010fa090", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd80a53407e15f13ce50a07642491680010fa090/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69939392425f160055378f190a65094a96c5cdbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/69939392425f160055378f190a65094a96c5cdbc", "html_url": "https://github.com/rust-lang/rust/commit/69939392425f160055378f190a65094a96c5cdbc"}], "stats": {"total": 21, "additions": 8, "deletions": 13}, "files": [{"sha": "0a0851ffac37aeb2ca88c7d28878237b268f9501", "filename": "src/libstd/sys/windows/stdio.rs", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/bd80a53407e15f13ce50a07642491680010fa090/src%2Flibstd%2Fsys%2Fwindows%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd80a53407e15f13ce50a07642491680010fa090/src%2Flibstd%2Fsys%2Fwindows%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fstdio.rs?ref=bd80a53407e15f13ce50a07642491680010fa090", "patch": "@@ -13,6 +13,7 @@\n use prelude::v1::*;\n use io::prelude::*;\n \n+use cmp;\n use io::{self, Cursor};\n use ptr;\n use str;\n@@ -69,19 +70,13 @@ fn write(out: &Output, data: &[u8]) -> io::Result<usize> {\n     // [1]: https://tahoe-lafs.org/trac/tahoe-lafs/ticket/1232\n     // [2]: http://www.mail-archive.com/log4net-dev@logging.apache.org/msg00661.html\n     const OUT_MAX: usize = 8192;\n-    let (utf16, data_len) = match str::from_utf8(data).ok() {\n-        Some(mut utf8) => {\n-            if utf8.len() > OUT_MAX {\n-                let mut new_len = OUT_MAX;\n-                while !utf8.is_char_boundary(new_len) {\n-                    new_len -= 1;\n-                }\n-                utf8 = &utf8[..new_len];\n-            }\n-            (utf8.encode_utf16().collect::<Vec<u16>>(), utf8.len())\n-        }\n-        None => return Err(invalid_encoding()),\n+    let len = cmp::min(data.len(), OUT_MAX);\n+    let utf8 = match str::from_utf8(&data[..len]) {\n+        Ok(s) => s,\n+        Err(ref e) if e.valid_up_to() == 0 => return Err(invalid_encoding()),\n+        Err(e) => str::from_utf8(&data[..e.valid_up_to()]).unwrap(),\n     };\n+    let utf16 = utf8.encode_utf16().collect::<Vec<u16>>();\n     let mut written = 0;\n     try!(cvt(unsafe {\n         c::WriteConsoleW(handle,\n@@ -94,7 +89,7 @@ fn write(out: &Output, data: &[u8]) -> io::Result<usize> {\n     // FIXME if this only partially writes the utf16 buffer then we need to\n     //       figure out how many bytes of `data` were actually written\n     assert_eq!(written as usize, utf16.len());\n-    Ok(data_len)\n+    Ok(utf8.len())\n }\n \n impl Stdin {"}]}