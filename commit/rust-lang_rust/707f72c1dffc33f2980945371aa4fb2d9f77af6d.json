{"sha": "707f72c1dffc33f2980945371aa4fb2d9f77af6d", "node_id": "C_kwDOAAsO6NoAKDcwN2Y3MmMxZGZmYzMzZjI5ODA5NDUzNzFhYTRmYjJkOWY3N2FmNmQ", "commit": {"author": {"name": "Andy Wang", "email": "cbeuw.andy@gmail.com", "date": "2021-12-13T11:40:59Z"}, "committer": {"name": "Andy Wang", "email": "cbeuw.andy@gmail.com", "date": "2021-12-13T11:40:59Z"}, "message": "Revert \"Produce .dwo file for Packed as well\"\n\nThis reverts commit 32810223c6b743de889eda96b442f621c293a848.", "tree": {"sha": "cba3c78d69a4b2346758d654fb074cf73ce250a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cba3c78d69a4b2346758d654fb074cf73ce250a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/707f72c1dffc33f2980945371aa4fb2d9f77af6d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEE7dcbcBMl24/h63ldGBtJ+fOPM3QFAmG3MVwACgkQGBtJ+fOP\nM3QtqgwAl8lzD8eao2Bsx67oXPRzGF8p4RV5tL7FEjL1Nr4EzeGktXoaZElCx84r\nhKMCGaj1L7+E4q3Uq7KV5BnNzMgFoQCGZn5VCfdoNq2vTMdVCFYXiJZmbEjyY58x\nUrhw64vvZiNvNh85EHvPZDc8EdDn1RgJRLe2pqXe/9mB3iJOUp+8zF5khl898Dvo\nvFYctbIPNULXWfUUwmovKyU5DVwZAAZX86PUMV8Bdwu51KCGVeLc2SsgnU3k+I6J\nR8iodS4elaBIa3Rz3dEwzhYxJrCwApea2by5EST8OMhOmKzeuXx2aKCPS5guHC8j\nib7cfMNGuTvSfgCuWus1kyA8Ar+Sv6XaCBFL8sr/vlClPHXKZ9dwsRF/ZXdiRMNn\nGmTuFEWjWoPYicwWsjrIbEQ5bbW9audXgSdFvunSZRLdM5FdJTc5twynt00RAriU\nk9QpiLbvuy9bZxh6VKmdEhWpbgFpixZbg/oUGvVI8egqYvdTmrDdWR+kLagbUHpn\nJDSAnrxr\n=OBB6\n-----END PGP SIGNATURE-----", "payload": "tree cba3c78d69a4b2346758d654fb074cf73ce250a3\nparent 3d16a20c7aa117773a957db9893f83a1cb3bd653\nauthor Andy Wang <cbeuw.andy@gmail.com> 1639395659 +0000\ncommitter Andy Wang <cbeuw.andy@gmail.com> 1639395659 +0000\n\nRevert \"Produce .dwo file for Packed as well\"\n\nThis reverts commit 32810223c6b743de889eda96b442f621c293a848.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/707f72c1dffc33f2980945371aa4fb2d9f77af6d", "html_url": "https://github.com/rust-lang/rust/commit/707f72c1dffc33f2980945371aa4fb2d9f77af6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/707f72c1dffc33f2980945371aa4fb2d9f77af6d/comments", "author": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d16a20c7aa117773a957db9893f83a1cb3bd653", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d16a20c7aa117773a957db9893f83a1cb3bd653", "html_url": "https://github.com/rust-lang/rust/commit/3d16a20c7aa117773a957db9893f83a1cb3bd653"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "10170bd7b0ebfad5e9aadaa05326f269169f9235", "filename": "compiler/rustc_codegen_llvm/src/back/write.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/707f72c1dffc33f2980945371aa4fb2d9f77af6d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/707f72c1dffc33f2980945371aa4fb2d9f77af6d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs?ref=707f72c1dffc33f2980945371aa4fb2d9f77af6d", "patch": "@@ -904,14 +904,17 @@ pub(crate) unsafe fn codegen(\n                     .generic_activity_with_arg(\"LLVM_module_codegen_emit_obj\", &module.name[..]);\n \n                 let dwo_out = cgcx.output_filenames.temp_path_dwo(module_name);\n-                let dwo_out = if cgcx.target_can_use_split_dwarf\n-                    && cgcx.split_debuginfo != SplitDebuginfo::Off\n-                {\n-                    // Emit (a subset of the) DWARF into a separate file in split mode.\n-                    Some(dwo_out.as_path())\n-                } else {\n+                let dwo_out = match cgcx.split_debuginfo {\n                     // Don't change how DWARF is emitted in single mode (or when disabled).\n-                    None\n+                    SplitDebuginfo::Off | SplitDebuginfo::Packed => None,\n+                    // Emit (a subset of the) DWARF into a separate file in split mode.\n+                    SplitDebuginfo::Unpacked => {\n+                        if cgcx.target_can_use_split_dwarf {\n+                            Some(dwo_out.as_path())\n+                        } else {\n+                            None\n+                        }\n+                    }\n                 };\n \n                 with_codegen(tm, llmod, config.no_builtins, |cpm| {\n@@ -948,7 +951,7 @@ pub(crate) unsafe fn codegen(\n \n     Ok(module.into_compiled_module(\n         config.emit_obj != EmitObj::None,\n-        cgcx.target_can_use_split_dwarf && cgcx.split_debuginfo != SplitDebuginfo::Off,\n+        cgcx.target_can_use_split_dwarf && cgcx.split_debuginfo == SplitDebuginfo::Unpacked,\n         config.emit_bc,\n         &cgcx.output_filenames,\n     ))"}]}