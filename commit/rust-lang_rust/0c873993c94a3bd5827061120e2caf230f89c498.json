{"sha": "0c873993c94a3bd5827061120e2caf230f89c498", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjODczOTkzYzk0YTNiZDU4MjcwNjExMjBlMmNhZjIzMGY4OWM0OTg=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-04-16T00:15:31Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-04-18T18:49:32Z"}, "message": "'Type' renamed to 'type definition'.\n\nThis is basically so people don't confuse a Ref.Item.Type with a\nRef.Type.", "tree": {"sha": "7409bdec87f3357ed167909e03e006d511445d2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7409bdec87f3357ed167909e03e006d511445d2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c873993c94a3bd5827061120e2caf230f89c498", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c873993c94a3bd5827061120e2caf230f89c498", "html_url": "https://github.com/rust-lang/rust/commit/0c873993c94a3bd5827061120e2caf230f89c498", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c873993c94a3bd5827061120e2caf230f89c498/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abd78f2f0483833266ef3aac9e80dd9afba41de0", "url": "https://api.github.com/repos/rust-lang/rust/commits/abd78f2f0483833266ef3aac9e80dd9afba41de0", "html_url": "https://github.com/rust-lang/rust/commit/abd78f2f0483833266ef3aac9e80dd9afba41de0"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "402478d88670d8aaa13c0d9f63f0b1953bf831e0", "filename": "doc/rust.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0c873993c94a3bd5827061120e2caf230f89c498/doc%2Frust.texi", "raw_url": "https://github.com/rust-lang/rust/raw/0c873993c94a3bd5827061120e2caf230f89c498/doc%2Frust.texi", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.texi?ref=0c873993c94a3bd5827061120e2caf230f89c498", "patch": "@@ -1651,7 +1651,7 @@ compile-time, remain constant during execution, and may reside in read-only\n memory.\n \n There are five primary kinds of item: modules, functions, iterators, objects and\n-types.\n+type definitions.\n \n All items form an implicit scope for the declaration of sub-items. In other\n words, within a function, object or iterator, declarations of items can (in\n@@ -1662,8 +1662,8 @@ the item's @emph{path name} within the module namespace is qualified by the\n name of the enclosing item. The exact locations in which sub-items may be\n declared is given by the grammar.  @xref{Ref.Gram}.\n \n-Functions, iterators, objects and types may be @emph{parametrized} by\n-type. Type parameters are given as a comma-separated list of identifiers\n+Functions, iterators, objects and type definitions may be @emph{parametrized}\n+by type. Type parameters are given as a comma-separated list of identifiers\n enclosed in square brackets (@code{[]}), after the name of the item and before\n its definition.  The type parameters of an item are part of the name, not the\n type of the item; in order to refer to the type-parametrized item, a\n@@ -1946,10 +1946,10 @@ variables to initial values.\n @node       Ref.Item.Type\n @subsection Ref.Item.Type\n @c * Ref.Item.Type::          Items defining the types of values and slots.\n-@cindex Types\n+@cindex Type definitions\n \n-A @dfn{type} defines a set of possible values in\n-memory. @xref{Ref.Type}. Types are declared with the keyword\n+A @dfn{type definition} defines a set of possible values in\n+memory. @xref{Ref.Type}. Type definitions are declared with the keyword\n @code{type}. Every value has a single, specific type; the type-specified\n aspects of a value include:\n "}]}