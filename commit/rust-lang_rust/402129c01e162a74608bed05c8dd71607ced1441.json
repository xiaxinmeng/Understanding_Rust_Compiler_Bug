{"sha": "402129c01e162a74608bed05c8dd71607ced1441", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwMjEyOWMwMWUxNjJhNzQ2MDhiZWQwNWM4ZGQ3MTYwN2NlZDE0NDE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-24T22:39:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-24T22:39:55Z"}, "message": "Auto merge of #960 - christianpoveda:chdir-shim, r=oli-obk\n\nAdd `chdir` shim\n\nr? @oli-obk", "tree": {"sha": "622be34487ae35bb87484856471c8cfcf7b242de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/622be34487ae35bb87484856471c8cfcf7b242de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/402129c01e162a74608bed05c8dd71607ced1441", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/402129c01e162a74608bed05c8dd71607ced1441", "html_url": "https://github.com/rust-lang/rust/commit/402129c01e162a74608bed05c8dd71607ced1441", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/402129c01e162a74608bed05c8dd71607ced1441/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e17933eed97f1b0183aa91dc3a960e2adaf99b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e17933eed97f1b0183aa91dc3a960e2adaf99b4", "html_url": "https://github.com/rust-lang/rust/commit/2e17933eed97f1b0183aa91dc3a960e2adaf99b4"}, {"sha": "145a5826d5cc02b15723bb9acb6739abdac28409", "url": "https://api.github.com/repos/rust-lang/rust/commits/145a5826d5cc02b15723bb9acb6739abdac28409", "html_url": "https://github.com/rust-lang/rust/commit/145a5826d5cc02b15723bb9acb6739abdac28409"}], "stats": {"total": 62, "additions": 56, "deletions": 6}, "files": [{"sha": "074baa51f82631f2ee0ab273fc208ba52e198652", "filename": "src/shims/env.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/402129c01e162a74608bed05c8dd71607ced1441/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/402129c01e162a74608bed05c8dd71607ced1441/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=402129c01e162a74608bed05c8dd71607ced1441", "patch": "@@ -1,5 +1,6 @@\n use std::collections::HashMap;\n use std::env;\n+use std::path::Path;\n \n use crate::stacked_borrows::Tag;\n use crate::*;\n@@ -151,4 +152,29 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         }\n         Ok(Scalar::ptr_null(&*this.tcx))\n     }\n+\n+    fn chdir(&mut self, path_op: OpTy<'tcx, Tag>) -> InterpResult<'tcx, i32> {\n+        let this = self.eval_context_mut();\n+\n+        if !this.machine.communicate {\n+            throw_unsup_format!(\"`chdir` not available when isolation is enabled\")\n+        }\n+\n+        let path_bytes = this\n+            .memory()\n+            .read_c_str(this.read_scalar(path_op)?.not_undef()?)?;\n+\n+        let path = Path::new(\n+            std::str::from_utf8(path_bytes)\n+                .map_err(|_| err_unsup_format!(\"{:?} is not a valid utf-8 string\", path_bytes))?,\n+        );\n+\n+        match env::set_current_dir(path) {\n+            Ok(()) => Ok(0),\n+            Err(e) => {\n+                this.machine.last_error = e.raw_os_error().unwrap() as u32;\n+                Ok(-1)\n+            }\n+        }\n+    }\n }"}, {"sha": "fedb6354b820af293ece3477c0ea65f009f94851", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/402129c01e162a74608bed05c8dd71607ced1441/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/402129c01e162a74608bed05c8dd71607ced1441/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=402129c01e162a74608bed05c8dd71607ced1441", "patch": "@@ -441,6 +441,11 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 this.write_scalar(result, dest)?;\n             }\n \n+            \"chdir\" => {\n+                let result = this.chdir(args[0])?;\n+                this.write_scalar(Scalar::from_int(result, dest.layout.size), dest)?;\n+            }\n+\n             \"write\" => {\n                 let fd = this.read_scalar(args[0])?.to_i32()?;\n                 let buf = this.read_scalar(args[1])?.not_undef()?;"}, {"sha": "22b0d723aad8c8c7ff13434929db5029a6f63508", "filename": "tests/compile-fail/chdir_invalid_path.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/402129c01e162a74608bed05c8dd71607ced1441/tests%2Fcompile-fail%2Fchdir_invalid_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/402129c01e162a74608bed05c8dd71607ced1441/tests%2Fcompile-fail%2Fchdir_invalid_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fchdir_invalid_path.rs?ref=402129c01e162a74608bed05c8dd71607ced1441", "patch": "@@ -0,0 +1,11 @@\n+// compile-flags: -Zmiri-disable-isolation\n+\n+extern {\n+    pub fn chdir(dir: *const u8) -> i32;\n+}\n+\n+fn main() {\n+    let path = vec![0xc3u8, 0x28, 0];\n+    // test that `chdir` errors with invalid utf-8 path\n+    unsafe { chdir(path.as_ptr()) };  //~ ERROR is not a valid utf-8 string\n+}"}, {"sha": "fa8220339db063a775e46776d8754fbb1382040c", "filename": "tests/run-pass/change_current_dir.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/402129c01e162a74608bed05c8dd71607ced1441/tests%2Frun-pass%2Fchange_current_dir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/402129c01e162a74608bed05c8dd71607ced1441/tests%2Frun-pass%2Fchange_current_dir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fchange_current_dir.rs?ref=402129c01e162a74608bed05c8dd71607ced1441", "patch": "@@ -0,0 +1,14 @@\n+// ignore-windows: TODO the windows hook is not done yet\n+// compile-flags: -Zmiri-disable-isolation\n+use std::env;\n+use std::path::Path;\n+\n+fn main() {\n+    // test that `getcwd` is available\n+    let cwd = env::current_dir().unwrap();\n+    let parent = cwd.parent().unwrap_or(&cwd);\n+    // test that `chdir` is available\n+    assert!(env::set_current_dir(&Path::new(\"..\")).is_ok());\n+    // test that `..` goes to the parent directory\n+    assert_eq!(env::current_dir().unwrap(), parent);\n+}"}, {"sha": "45efd06d3f670000d4cd1a4607208cc7400c011d", "filename": "tests/run-pass/get_current_dir.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2e17933eed97f1b0183aa91dc3a960e2adaf99b4/tests%2Frun-pass%2Fget_current_dir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e17933eed97f1b0183aa91dc3a960e2adaf99b4/tests%2Frun-pass%2Fget_current_dir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fget_current_dir.rs?ref=2e17933eed97f1b0183aa91dc3a960e2adaf99b4", "patch": "@@ -1,6 +0,0 @@\n-// ignore-windows: TODO the windows hook is not done yet\n-// compile-flags: -Zmiri-disable-isolation\n-\n-fn main() {\n-    std::env::current_dir().unwrap();\n-}"}]}