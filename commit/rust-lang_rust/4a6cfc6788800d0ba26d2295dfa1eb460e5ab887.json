{"sha": "4a6cfc6788800d0ba26d2295dfa1eb460e5ab887", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhNmNmYzY3ODg4MDBkMGJhMjZkMjI5NWRmYTFlYjQ2MGU1YWI4ODc=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-05-02T15:49:32Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-05-02T16:00:20Z"}, "message": "Don't arena allocate Definitions", "tree": {"sha": "973632021eff70b1b868281b1e37221259eb22cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/973632021eff70b1b868281b1e37221259eb22cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a6cfc6788800d0ba26d2295dfa1eb460e5ab887", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a6cfc6788800d0ba26d2295dfa1eb460e5ab887", "html_url": "https://github.com/rust-lang/rust/commit/4a6cfc6788800d0ba26d2295dfa1eb460e5ab887", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a6cfc6788800d0ba26d2295dfa1eb460e5ab887/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0447f91e10d4f95ef2ff35b253e1964ed7c5f9fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/0447f91e10d4f95ef2ff35b253e1964ed7c5f9fc", "html_url": "https://github.com/rust-lang/rust/commit/0447f91e10d4f95ef2ff35b253e1964ed7c5f9fc"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c9510f2deb431e3401b42c07e55260efd375b582", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4a6cfc6788800d0ba26d2295dfa1eb460e5ab887/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a6cfc6788800d0ba26d2295dfa1eb460e5ab887/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=4a6cfc6788800d0ba26d2295dfa1eb460e5ab887", "patch": "@@ -967,7 +967,7 @@ pub struct GlobalCtxt<'tcx> {\n     export_map: ExportMap<LocalDefId>,\n \n     pub(crate) untracked_crate: &'tcx hir::Crate<'tcx>,\n-    pub(crate) definitions: &'tcx Definitions,\n+    pub(crate) definitions: Definitions,\n \n     /// This provides access to the incremental compilation on-disk cache for query results.\n     /// Do not access this directly. It is only meant to be used by\n@@ -1163,7 +1163,7 @@ impl<'tcx> TyCtxt<'tcx> {\n             glob_map: resolutions.glob_map,\n             extern_prelude: resolutions.extern_prelude,\n             untracked_crate: krate,\n-            definitions: arena.alloc(resolutions.definitions),\n+            definitions: resolutions.definitions,\n             on_disk_cache,\n             queries,\n             query_caches: query::QueryCaches::default(),\n@@ -1319,14 +1319,14 @@ impl<'tcx> TyCtxt<'tcx> {\n     pub fn create_stable_hashing_context(self) -> StableHashingContext<'tcx> {\n         let krate = self.gcx.untracked_crate;\n \n-        StableHashingContext::new(self.sess, krate, self.definitions, &*self.cstore)\n+        StableHashingContext::new(self.sess, krate, &self.definitions, &*self.cstore)\n     }\n \n     #[inline(always)]\n     pub fn create_no_span_stable_hashing_context(self) -> StableHashingContext<'tcx> {\n         let krate = self.gcx.untracked_crate;\n \n-        StableHashingContext::ignore_spans(self.sess, krate, self.definitions, &*self.cstore)\n+        StableHashingContext::ignore_spans(self.sess, krate, &self.definitions, &*self.cstore)\n     }\n \n     pub fn serialize_query_result_cache(self, encoder: &mut FileEncoder) -> FileEncodeResult {"}]}