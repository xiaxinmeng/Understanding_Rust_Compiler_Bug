{"sha": "c599fcce7023d714cba3aff76e488a46a1b99f10", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1OTlmY2NlNzAyM2Q3MTRjYmEzYWZmNzZlNDg4YTQ2YTFiOTlmMTA=", "commit": {"author": {"name": "Erin Power", "email": "xampprocky@gmail.com", "date": "2019-07-13T12:15:01Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-30T20:19:56Z"}, "message": "Updated RELEASES.md for 1.37.0", "tree": {"sha": "f68e08ca6c5e270ce95efbfa64b68f648a9817c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f68e08ca6c5e270ce95efbfa64b68f648a9817c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c599fcce7023d714cba3aff76e488a46a1b99f10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c599fcce7023d714cba3aff76e488a46a1b99f10", "html_url": "https://github.com/rust-lang/rust/commit/c599fcce7023d714cba3aff76e488a46a1b99f10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c599fcce7023d714cba3aff76e488a46a1b99f10/comments", "author": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f690098e6d65ad7b33dc7fdefccc387806782027", "url": "https://api.github.com/repos/rust-lang/rust/commits/f690098e6d65ad7b33dc7fdefccc387806782027", "html_url": "https://github.com/rust-lang/rust/commit/f690098e6d65ad7b33dc7fdefccc387806782027"}], "stats": {"total": 120, "additions": 119, "deletions": 1}, "files": [{"sha": "51cd6578ec5312305a61d1bcfa1b5d51fdb333f3", "filename": "RELEASES.md", "status": "modified", "additions": 119, "deletions": 1, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/c599fcce7023d714cba3aff76e488a46a1b99f10/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/c599fcce7023d714cba3aff76e488a46a1b99f10/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=c599fcce7023d714cba3aff76e488a46a1b99f10", "patch": "@@ -1,3 +1,121 @@\n+Version 1.37.0 (2019-08-15)\n+==========================\n+\n+Language\n+--------\n+- `#[must_use]` will now warn if the type is contained in a [tuple][61100],\n+  [`Box`][62228], or an [array][62235] and unused.\n+- [You can now use the `cfg` and `cfg_attr` attributes on\n+  generic parameters.][61547]\n+- [You can now use enum variants through type alias.][61682] e.g. You can\n+  write the following:\n+  ```rust\n+  type MyOption = Option<u8>;\n+\n+  fn increment_or_zero(x: MyOption) -> u8 {\n+      match x {\n+          MyOption::Some(y) => y + 1,\n+          MyOption::None => 0,\n+      }\n+  }\n+  ```\n+- [You can now use `_` as an identifier for consts.][61347] e.g. You can write\n+  `const _: u32 = 5;`.\n+- [You can now use `#[repr(align(X)]` on enums.][61229]\n+- [The  `?`/_\"Kleene\"_ macro operator is now available in the\n+  2015 edition.][60932]\n+\n+Compiler\n+--------\n+- [You can now enable Profile-Guided Optimization with the `-C profile-generate`\n+  and `-C profile-use` flags.][61268] For more information on how to use profile\n+  guided optimization, please refer to the [rustc book][rustc-book-pgo].\n+- [The `rust-lldb` wrapper script should now work again.][61827]\n+\n+Libraries\n+---------\n+- [`mem::MaybeUninit<T>` is now ABI-compatible with `T`.][61802]\n+\n+Stabilized APIs\n+---------------\n+- [`BufReader::buffer`]\n+- [`BufWriter::buffer`]\n+- [`Cell::from_mut`]\n+- [`Cell<[T]>::as_slice_of_cells`][`Cell<slice>::as_slice_of_cells`]\n+- [`DoubleEndedIterator::nth_back`]\n+- [`Option::xor`]\n+- [`Wrapping::reverse_bits`]\n+- [`i128::reverse_bits`]\n+- [`i16::reverse_bits`]\n+- [`i32::reverse_bits`]\n+- [`i64::reverse_bits`]\n+- [`i8::reverse_bits`]\n+- [`isize::reverse_bits`]\n+- [`slice::copy_within`]\n+- [`u128::reverse_bits`]\n+- [`u16::reverse_bits`]\n+- [`u32::reverse_bits`]\n+- [`u64::reverse_bits`]\n+- [`u8::reverse_bits`]\n+- [`usize::reverse_bits`]\n+\n+Cargo\n+-----\n+- [`Cargo.lock` files are now included by default when publishing executable crates\n+  with executables.][cargo/7026]\n+- [You can now specify `default-run=\"foo\"` in `[package]` to specify the\n+  default executable to use for `cargo run`.][cargo/7056]\n+\n+Misc\n+----\n+\n+Compatibility Notes\n+-------------------\n+- [Using `...` for inclusive range patterns will now warn by default.][61342]\n+  Please transition your code to using the `..=` syntax for inclusive\n+  ranges instead.\n+- [Using a trait object without the `dyn` will now warn by default.][61203]\n+  Please transition your code to use `dyn Trait` for trait objects instead.\n+\n+[62228]: https://github.com/rust-lang/rust/pull/62228/\n+[62235]: https://github.com/rust-lang/rust/pull/62235/\n+[61802]: https://github.com/rust-lang/rust/pull/61802/\n+[61827]: https://github.com/rust-lang/rust/pull/61827/\n+[61547]: https://github.com/rust-lang/rust/pull/61547/\n+[61682]: https://github.com/rust-lang/rust/pull/61682/\n+[61268]: https://github.com/rust-lang/rust/pull/61268/\n+[61342]: https://github.com/rust-lang/rust/pull/61342/\n+[61347]: https://github.com/rust-lang/rust/pull/61347/\n+[61100]: https://github.com/rust-lang/rust/pull/61100/\n+[61203]: https://github.com/rust-lang/rust/pull/61203/\n+[61229]: https://github.com/rust-lang/rust/pull/61229/\n+[60932]: https://github.com/rust-lang/rust/pull/60932/\n+[cargo/7026]: https://github.com/rust-lang/cargo/pull/7026/\n+[cargo/7056]: https://github.com/rust-lang/cargo/pull/7056/\n+[`BufReader::buffer`]: https://doc.rust-lang.org/std/io/struct.BufReader.html#method.buffer\n+[`BufWriter::buffer`]: https://doc.rust-lang.org/std/io/struct.BufWriter.html#method.buffer\n+[`Cell::from_mut`]: https://doc.rust-lang.org/std/cell/struct.Cell.html#method.from_mut\n+[`Cell<slice>::as_slice_of_cells`]: https://doc.rust-lang.org/std/cell/struct.Cell.html#method.as_slice_of_cells\n+[`DoubleEndedIterator::nth_back`]: https://doc.rust-lang.org/std/iter/trait.DoubleEndedIterator.html#method.nth_back\n+[`Option::xor`]: https://doc.rust-lang.org/std/option/enum.Option.html#method.xor\n+[`RefCell::try_borrow_unguarded`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html#method.try_borrow_unguarded\n+[`Wrapping::reverse_bits`]: https://doc.rust-lang.org/std/num/struct.Wrapping.html#method.reverse_bits\n+[`i128::reverse_bits`]: https://doc.rust-lang.org/std/primitive.i128.html#method.reverse_bits\n+[`i16::reverse_bits`]: https://doc.rust-lang.org/std/primitive.i16.html#method.reverse_bits\n+[`i32::reverse_bits`]: https://doc.rust-lang.org/std/primitive.i32.html#method.reverse_bits\n+[`i64::reverse_bits`]: https://doc.rust-lang.org/std/primitive.i64.html#method.reverse_bits\n+[`i8::reverse_bits`]: https://doc.rust-lang.org/std/primitive.i8.html#method.reverse_bits\n+[`isize::reverse_bits`]: https://doc.rust-lang.org/std/primitive.isize.html#method.reverse_bits\n+[`slice::copy_within`]: https://doc.rust-lang.org/std/primitive.slice.html#method.copy_within\n+[`u128::reverse_bits`]: https://doc.rust-lang.org/std/primitive.u128.html#method.reverse_bits\n+[`u16::reverse_bits`]: https://doc.rust-lang.org/std/primitive.u16.html#method.reverse_bits\n+[`u32::reverse_bits`]: https://doc.rust-lang.org/std/primitive.u32.html#method.reverse_bits\n+[`u64::reverse_bits`]: https://doc.rust-lang.org/std/primitive.u64.html#method.reverse_bits\n+[`u8::reverse_bits`]: https://doc.rust-lang.org/std/primitive.u8.html#method.reverse_bits\n+[`usize::reverse_bits`]: https://doc.rust-lang.org/std/primitive.usize.html#method.reverse_bits\n+[rustc-book-pgo]: https://doc.rust-lang.org/rustc/profile-guided-optimization.html\n+\n+\n Version 1.36.0 (2019-07-04)\n ==========================\n \n@@ -39,7 +157,7 @@ Stabilized APIs\n - [`mem::MaybeUninit`]\n - [`pointer::align_offset`]\n - [`future::Future`]\n-- [`task::Context`] \n+- [`task::Context`]\n - [`task::RawWaker`]\n - [`task::RawWakerVTable`]\n - [`task::Waker`]"}]}