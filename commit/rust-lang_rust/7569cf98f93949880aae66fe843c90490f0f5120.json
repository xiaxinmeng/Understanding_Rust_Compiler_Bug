{"sha": "7569cf98f93949880aae66fe843c90490f0f5120", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1NjljZjk4ZjkzOTQ5ODgwYWFlNjZmZTg0M2M5MDQ5MGYwZjUxMjA=", "commit": {"author": {"name": "Surya Midatala", "email": "surya.midatala@protonmail.com", "date": "2020-08-26T16:25:42Z"}, "committer": {"name": "Surya Midatala", "email": "surya.midatala@protonmail.com", "date": "2020-08-26T16:25:42Z"}, "message": "Merge conflict fix: disambiguate f32 -> prim@f32 and u32 -> prim@u32", "tree": {"sha": "8854de67d30f4a7da63defe1dda8da2a6682e18e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8854de67d30f4a7da63defe1dda8da2a6682e18e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7569cf98f93949880aae66fe843c90490f0f5120", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7569cf98f93949880aae66fe843c90490f0f5120", "html_url": "https://github.com/rust-lang/rust/commit/7569cf98f93949880aae66fe843c90490f0f5120", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7569cf98f93949880aae66fe843c90490f0f5120/comments", "author": {"login": "kofls", "id": 12569767, "node_id": "MDQ6VXNlcjEyNTY5NzY3", "avatar_url": "https://avatars.githubusercontent.com/u/12569767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kofls", "html_url": "https://github.com/kofls", "followers_url": "https://api.github.com/users/kofls/followers", "following_url": "https://api.github.com/users/kofls/following{/other_user}", "gists_url": "https://api.github.com/users/kofls/gists{/gist_id}", "starred_url": "https://api.github.com/users/kofls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kofls/subscriptions", "organizations_url": "https://api.github.com/users/kofls/orgs", "repos_url": "https://api.github.com/users/kofls/repos", "events_url": "https://api.github.com/users/kofls/events{/privacy}", "received_events_url": "https://api.github.com/users/kofls/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kofls", "id": 12569767, "node_id": "MDQ6VXNlcjEyNTY5NzY3", "avatar_url": "https://avatars.githubusercontent.com/u/12569767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kofls", "html_url": "https://github.com/kofls", "followers_url": "https://api.github.com/users/kofls/followers", "following_url": "https://api.github.com/users/kofls/following{/other_user}", "gists_url": "https://api.github.com/users/kofls/gists{/gist_id}", "starred_url": "https://api.github.com/users/kofls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kofls/subscriptions", "organizations_url": "https://api.github.com/users/kofls/orgs", "repos_url": "https://api.github.com/users/kofls/repos", "events_url": "https://api.github.com/users/kofls/events{/privacy}", "received_events_url": "https://api.github.com/users/kofls/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25c034c52e90969d53aba3351a204c6ae3473a0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/25c034c52e90969d53aba3351a204c6ae3473a0c", "html_url": "https://github.com/rust-lang/rust/commit/25c034c52e90969d53aba3351a204c6ae3473a0c"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "2339ca527bd832f2734496aaf72d3067c2539ad5", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7569cf98f93949880aae66fe843c90490f0f5120/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7569cf98f93949880aae66fe843c90490f0f5120/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=7569cf98f93949880aae66fe843c90490f0f5120", "patch": "@@ -99,6 +99,7 @@ mod prim_bool {}\n /// at all we know it can never produce a value which isn't a [`u32`]. This illustrates another\n /// behaviour of the `!` type - expressions with type `!` will coerce into any other type.\n ///\n+/// [`u32`]: prim@u32\n /// [`exit`]: process::exit\n ///\n /// # `!` and generics\n@@ -801,6 +802,7 @@ mod prim_f32 {}\n ///\n /// *[See also the `std::f64::consts` module][`crate::f64::consts`].*\n ///\n+/// [`f32`]: prim@f32\n /// [wikipedia]: https://en.wikipedia.org/wiki/Double-precision_floating-point_format\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n mod prim_f64 {}"}]}