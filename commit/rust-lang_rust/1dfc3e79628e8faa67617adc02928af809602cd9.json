{"sha": "1dfc3e79628e8faa67617adc02928af809602cd9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkZmMzZTc5NjI4ZThmYWE2NzYxN2FkYzAyOTI4YWY4MDk2MDJjZDk=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-09-29T14:08:57Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-09-29T15:06:07Z"}, "message": "Get the type of a local from `local_decls` in `schedule_drop`\n\nPassing around a separate type is unnecessary and error-prone.", "tree": {"sha": "25af009dd8958c3ea9c02cf9106084252e92bdab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25af009dd8958c3ea9c02cf9106084252e92bdab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1dfc3e79628e8faa67617adc02928af809602cd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1dfc3e79628e8faa67617adc02928af809602cd9", "html_url": "https://github.com/rust-lang/rust/commit/1dfc3e79628e8faa67617adc02928af809602cd9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1dfc3e79628e8faa67617adc02928af809602cd9/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "url": "https://api.github.com/repos/rust-lang/rust/commits/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50", "html_url": "https://github.com/rust-lang/rust/commit/d046ffddc4bd50e04ffc3ff9f766e2ac71f74d50"}], "stats": {"total": 26, "additions": 9, "deletions": 17}, "files": [{"sha": "7e8c83fe9d3cb02ee26a705e9d6bf98c490d6ab9", "filename": "src/librustc_mir/build/expr/as_rvalue.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1dfc3e79628e8faa67617adc02928af809602cd9/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dfc3e79628e8faa67617adc02928af809602cd9/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=1dfc3e79628e8faa67617adc02928af809602cd9", "patch": "@@ -128,7 +128,6 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                         expr_span,\n                         scope,\n                         result,\n-                        expr.ty,\n                     );\n                 }\n \n@@ -569,7 +568,6 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                 upvar_span,\n                 temp_lifetime,\n                 temp,\n-                upvar_ty,\n             );\n         }\n "}, {"sha": "c56a149d8614c9aaca5e70263b3383db8d40a711", "filename": "src/librustc_mir/build/expr/as_temp.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1dfc3e79628e8faa67617adc02928af809602cd9/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_temp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dfc3e79628e8faa67617adc02928af809602cd9/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_temp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_temp.rs?ref=1dfc3e79628e8faa67617adc02928af809602cd9", "patch": "@@ -103,7 +103,6 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                         expr_span,\n                         temp_lifetime,\n                         temp,\n-                        expr_ty,\n                         DropKind::Storage,\n                     );\n                 }"}, {"sha": "b223d528d72fe98746bdf7b0b3301c787f954509", "filename": "src/librustc_mir/build/matches/mod.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1dfc3e79628e8faa67617adc02928af809602cd9/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dfc3e79628e8faa67617adc02928af809602cd9/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs?ref=1dfc3e79628e8faa67617adc02928af809602cd9", "patch": "@@ -535,21 +535,18 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                 kind: StatementKind::StorageLive(local_id),\n             },\n         );\n-        let var_ty = self.local_decls[local_id].ty;\n         let region_scope = self.hir.region_scope_tree.var_scope(var.local_id);\n-        self.schedule_drop(span, region_scope, local_id, var_ty, DropKind::Storage);\n+        self.schedule_drop(span, region_scope, local_id, DropKind::Storage);\n         Place::from(local_id)\n     }\n \n     pub fn schedule_drop_for_binding(&mut self, var: HirId, span: Span, for_guard: ForGuard) {\n         let local_id = self.var_local_id(var, for_guard);\n-        let var_ty = self.local_decls[local_id].ty;\n         let region_scope = self.hir.region_scope_tree.var_scope(var.local_id);\n         self.schedule_drop(\n             span,\n             region_scope,\n             local_id,\n-            var_ty,\n             DropKind::Value,\n         );\n     }"}, {"sha": "9414113cefb528272c017fb62104a3a6689a7f4e", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1dfc3e79628e8faa67617adc02928af809602cd9/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dfc3e79628e8faa67617adc02928af809602cd9/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=1dfc3e79628e8faa67617adc02928af809602cd9", "patch": "@@ -829,12 +829,12 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n             // Function arguments always get the first Local indices after the return place\n             let local = Local::new(index + 1);\n             let place = Place::from(local);\n-            let &ArgInfo(ty, opt_ty_info, arg_opt, ref self_binding) = arg_info;\n+            let &ArgInfo(_, opt_ty_info, arg_opt, ref self_binding) = arg_info;\n \n             // Make sure we drop (parts of) the argument even when not matched on.\n             self.schedule_drop(\n                 arg_opt.as_ref().map_or(ast_body.span, |arg| arg.pat.span),\n-                argument_scope, local, ty, DropKind::Value,\n+                argument_scope, local, DropKind::Value,\n             );\n \n             if let Some(arg) = arg_opt {"}, {"sha": "9b4ea175e2a9461d7ceff62be455d1e3e7608e6b", "filename": "src/librustc_mir/build/scope.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1dfc3e79628e8faa67617adc02928af809602cd9/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dfc3e79628e8faa67617adc02928af809602cd9/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fscope.rs?ref=1dfc3e79628e8faa67617adc02928af809602cd9", "patch": "@@ -85,7 +85,6 @@ should go to.\n use crate::build::{BlockAnd, BlockAndExtension, BlockFrame, Builder, CFG};\n use crate::hair::{Expr, ExprRef, LintLevel};\n use rustc::middle::region;\n-use rustc::ty::Ty;\n use rustc::hir;\n use rustc::mir::*;\n use syntax_pos::{DUMMY_SP, Span};\n@@ -173,11 +172,11 @@ struct BreakableScope<'tcx> {\n     region_scope: region::Scope,\n     /// Where the body of the loop begins. `None` if block\n     continue_block: Option<BasicBlock>,\n-    /// Block to branch into when the loop or block terminates (either by being `break`-en out\n-    /// from, or by having its condition to become false)\n+    /// Block to branch into when the loop or block terminates (either by being\n+    /// `break`-en out from, or by having its condition to become false)\n     break_block: BasicBlock,\n-    /// The destination of the loop/block expression itself (i.e., where to put the result of a\n-    /// `break` expression)\n+    /// The destination of the loop/block expression itself (i.e., where to put\n+    /// the result of a `break` expression)\n     break_destination: Place<'tcx>,\n }\n \n@@ -728,10 +727,9 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         span: Span,\n         region_scope: region::Scope,\n         local: Local,\n-        place_ty: Ty<'tcx>,\n     ) {\n-        self.schedule_drop(span, region_scope, local, place_ty, DropKind::Storage);\n-        self.schedule_drop(span, region_scope, local, place_ty, DropKind::Value);\n+        self.schedule_drop(span, region_scope, local, DropKind::Storage);\n+        self.schedule_drop(span, region_scope, local, DropKind::Value);\n     }\n \n     /// Indicates that `place` should be dropped on exit from"}]}