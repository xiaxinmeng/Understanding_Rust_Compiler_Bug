{"sha": "84bfc33face2cecadace55af6efd1db5fb3aee6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0YmZjMzNmYWNlMmNlY2FkYWNlNTVhZjZlZmQxZGI1ZmIzYWVlNmY=", "commit": {"author": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2017-07-25T07:52:36Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-09-05T16:19:35Z"}, "message": "Unify intercrate ambiguity emitters into a function.", "tree": {"sha": "054429b57971f811e5b41466f12cfac207fac74b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/054429b57971f811e5b41466f12cfac207fac74b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84bfc33face2cecadace55af6efd1db5fb3aee6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84bfc33face2cecadace55af6efd1db5fb3aee6f", "html_url": "https://github.com/rust-lang/rust/commit/84bfc33face2cecadace55af6efd1db5fb3aee6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84bfc33face2cecadace55af6efd1db5fb3aee6f/comments", "author": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "043786dcdfbb245cb13d54fa0cfb8a198e8a479b", "url": "https://api.github.com/repos/rust-lang/rust/commits/043786dcdfbb245cb13d54fa0cfb8a198e8a479b", "html_url": "https://github.com/rust-lang/rust/commit/043786dcdfbb245cb13d54fa0cfb8a198e8a479b"}], "stats": {"total": 45, "additions": 22, "deletions": 23}, "files": [{"sha": "366bb6aeb5caf4d2728b5d1b6b702de555ba08a1", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/84bfc33face2cecadace55af6efd1db5fb3aee6f/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84bfc33face2cecadace55af6efd1db5fb3aee6f/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=84bfc33face2cecadace55af6efd1db5fb3aee6f", "patch": "@@ -100,6 +100,26 @@ pub enum IntercrateAmbiguityCause {\n     UpstreamCrateUpdate(DefId),\n }\n \n+impl IntercrateAmbiguityCause {\n+    /// Emits notes when the overlap is caused by complex intercrate ambiguities.\n+    /// See #23980 for details.\n+    pub fn add_intercrate_ambiguity_hint<'a, 'tcx>(&self,\n+                                                   tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+                                                   err: &mut ::errors::DiagnosticBuilder) {\n+        match self {\n+            &IntercrateAmbiguityCause::DownstreamCrate(def_id) => {\n+                err.note(&format!(\"downstream crates may implement `{}`\",\n+                                  tcx.item_path_str(def_id)));\n+            }\n+            &IntercrateAmbiguityCause::UpstreamCrateUpdate(def_id) => {\n+                err.note(&format!(\"upstream crates may add new impl for `{}` \\\n+                                  in future versions\",\n+                                  tcx.item_path_str(def_id)));\n+            }\n+        }\n+    }\n+}\n+\n // A stack that walks back up the stack frame.\n struct TraitObligationStack<'prev, 'tcx: 'prev> {\n     obligation: &'prev TraitObligation<'tcx>,"}, {"sha": "98d8c64634c6b9f87a574af79caced25a6ac690b", "filename": "src/librustc/traits/specialize/mod.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/84bfc33face2cecadace55af6efd1db5fb3aee6f/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84bfc33face2cecadace55af6efd1db5fb3aee6f/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs?ref=84bfc33face2cecadace55af6efd1db5fb3aee6f", "patch": "@@ -340,17 +340,7 @@ pub(super) fn specialization_graph_provider<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx\n                 }\n \n                 for cause in &overlap.intercrate_ambiguity_causes {\n-                    match cause {\n-                        &IntercrateAmbiguityCause::DownstreamCrate(def_id) => {\n-                            err.note(&format!(\"downstream crates may implement `{}`\",\n-                                              tcx.item_path_str(def_id)));\n-                        }\n-                        &IntercrateAmbiguityCause::UpstreamCrateUpdate(def_id) => {\n-                            err.note(&format!(\"upstream crates may add new impl for `{}` \\\n-                                              in future versions\",\n-                                              tcx.item_path_str(def_id)));\n-                        }\n-                    }\n+                    cause.add_intercrate_ambiguity_hint(tcx, &mut err);\n                 }\n \n                 err.emit();"}, {"sha": "0fad16c95822222a2ef0a768827deb597b41e858", "filename": "src/librustc_typeck/coherence/inherent_impls_overlap.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/84bfc33face2cecadace55af6efd1db5fb3aee6f/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84bfc33face2cecadace55af6efd1db5fb3aee6f/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs?ref=84bfc33face2cecadace55af6efd1db5fb3aee6f", "patch": "@@ -12,7 +12,6 @@ use rustc::hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc::hir;\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::traits;\n-use rustc::traits::IntercrateAmbiguityCause;\n use rustc::ty::{self, TyCtxt};\n \n pub fn crate_inherent_impls_overlap_check<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n@@ -64,17 +63,7 @@ impl<'a, 'tcx> InherentOverlapChecker<'a, 'tcx> {\n                                    format!(\"other definition for `{}`\", name));\n \n                     for cause in &overlap.intercrate_ambiguity_causes {\n-                        match cause {\n-                            &IntercrateAmbiguityCause::DownstreamCrate(def_id) => {\n-                                err.note(&format!(\"downstream crates may implement `{}`\",\n-                                                  self.tcx.item_path_str(def_id)));\n-                            }\n-                            &IntercrateAmbiguityCause::UpstreamCrateUpdate(def_id) => {\n-                                err.note(&format!(\"upstream crates may add new impl for `{}` \\\n-                                                  in future versions\",\n-                                                  self.tcx.item_path_str(def_id)));\n-                            }\n-                        }\n+                        cause.add_intercrate_ambiguity_hint(self.tcx, &mut err);\n                     }\n \n                     err.emit();"}]}