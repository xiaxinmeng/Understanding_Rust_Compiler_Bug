{"sha": "ee914a4ee9071bc94a4d48e6b726a802bd50b3f5", "node_id": "C_kwDOAAsO6NoAKGVlOTE0YTRlZTkwNzFiYzk0YTRkNDhlNmI3MjZhODAyYmQ1MGIzZjU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-15T08:58:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-15T08:58:41Z"}, "message": "Rollup merge of #111560 - m-ou-se:span-char-boundary-stuff, r=cjgillot\n\nSimplify find_width_of_character_at_span.\n\nThis makes `find_width_of_character_at_span` simpler and more robust against bad spans.\n\nFixes (but does not close, per beta policy) https://github.com/rust-lang/rust/issues/111485", "tree": {"sha": "7ae7d8896ab57e16f56b84ee47fa8a930a3f5462", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ae7d8896ab57e16f56b84ee47fa8a930a3f5462"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee914a4ee9071bc94a4d48e6b726a802bd50b3f5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkYfRBCRBK7hj4Ov3rIwAAiX4IAGKfpQfIoRj7tILQSnfOaZGb\nBrqZVzwRQbIAHmseQ5qd2MA2DrQVAOYBrNx1xiGUuoJgwdZdNQ4X3dEqZ2FINSZN\npMlKagjPj/o4WtJBnyfwt1xNRFPPD6wDROoDrzHRGtX4F3u5T8kOBuWq9WfNo6rD\nneVztqugkc7IPTvr3m+1hOIK/LbtDxEclmZtR2/S09Oaaz73QTRDceN/UFFSTFMW\niG/yxF+FkR0BhB1F9/NoslE7lkXfc5wS5lnzMv7MwJb+4qVORsWZ/bYjUYQPnJ2J\nzHDEHbG20rsVh4fSaT0qF/EeE/1Qcq7qGY9ogk1t3fOx+BDFo+gzP8tbkBQh+DQ=\n=WscD\n-----END PGP SIGNATURE-----\n", "payload": "tree 7ae7d8896ab57e16f56b84ee47fa8a930a3f5462\nparent 916ba6dec1b5d223c1fdb8799cc1f0b57d404115\nparent 6289c57dc0ee8ebbe9e20fad808f85aed0afeceb\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1684141121 +0200\ncommitter GitHub <noreply@github.com> 1684141121 +0200\n\nRollup merge of #111560 - m-ou-se:span-char-boundary-stuff, r=cjgillot\n\nSimplify find_width_of_character_at_span.\n\nThis makes `find_width_of_character_at_span` simpler and more robust against bad spans.\n\nFixes (but does not close, per beta policy) https://github.com/rust-lang/rust/issues/111485\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee914a4ee9071bc94a4d48e6b726a802bd50b3f5", "html_url": "https://github.com/rust-lang/rust/commit/ee914a4ee9071bc94a4d48e6b726a802bd50b3f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee914a4ee9071bc94a4d48e6b726a802bd50b3f5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "916ba6dec1b5d223c1fdb8799cc1f0b57d404115", "url": "https://api.github.com/repos/rust-lang/rust/commits/916ba6dec1b5d223c1fdb8799cc1f0b57d404115", "html_url": "https://github.com/rust-lang/rust/commit/916ba6dec1b5d223c1fdb8799cc1f0b57d404115"}, {"sha": "6289c57dc0ee8ebbe9e20fad808f85aed0afeceb", "url": "https://api.github.com/repos/rust-lang/rust/commits/6289c57dc0ee8ebbe9e20fad808f85aed0afeceb", "html_url": "https://github.com/rust-lang/rust/commit/6289c57dc0ee8ebbe9e20fad808f85aed0afeceb"}], "stats": {"total": 32, "additions": 8, "deletions": 24}, "files": [{"sha": "97cb734619e3c79a481e4a20728dc7002106da97", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ee914a4ee9071bc94a4d48e6b726a802bd50b3f5/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee914a4ee9071bc94a4d48e6b726a802bd50b3f5/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=ee914a4ee9071bc94a4d48e6b726a802bd50b3f5", "patch": "@@ -20,6 +20,7 @@\n #![feature(min_specialization)]\n #![feature(rustc_attrs)]\n #![feature(let_chains)]\n+#![feature(round_char_boundary)]\n #![deny(rustc::untranslatable_diagnostic)]\n #![deny(rustc::diagnostic_outside_of_impl)]\n "}, {"sha": "11ea5fe4ddf9f8e89cc606d4016311d5d7eb3ed8", "filename": "compiler/rustc_span/src/source_map.rs", "status": "modified", "additions": 7, "deletions": 24, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/ee914a4ee9071bc94a4d48e6b726a802bd50b3f5/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee914a4ee9071bc94a4d48e6b726a802bd50b3f5/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs?ref=ee914a4ee9071bc94a4d48e6b726a802bd50b3f5", "patch": "@@ -1019,36 +1019,19 @@ impl SourceMap {\n \n         let src = local_begin.sf.external_src.borrow();\n \n-        // We need to extend the snippet to the end of the src rather than to end_index so when\n-        // searching forwards for boundaries we've got somewhere to search.\n-        let snippet = if let Some(ref src) = local_begin.sf.src {\n-            &src[start_index..]\n+        let snippet = if let Some(src) = &local_begin.sf.src {\n+            src\n         } else if let Some(src) = src.get_source() {\n-            &src[start_index..]\n+            src\n         } else {\n             return 1;\n         };\n-        debug!(\"snippet=`{:?}`\", snippet);\n \n-        let mut target = if forwards { end_index + 1 } else { end_index - 1 };\n-        debug!(\"initial target=`{:?}`\", target);\n-\n-        while !snippet.is_char_boundary(target - start_index) && target < source_len {\n-            target = if forwards {\n-                target + 1\n-            } else {\n-                match target.checked_sub(1) {\n-                    Some(target) => target,\n-                    None => {\n-                        break;\n-                    }\n-                }\n-            };\n-            debug!(\"target=`{:?}`\", target);\n+        if forwards {\n+            (snippet.ceil_char_boundary(end_index + 1) - end_index) as u32\n+        } else {\n+            (end_index - snippet.floor_char_boundary(end_index - 1)) as u32\n         }\n-        debug!(\"final target=`{:?}`\", target);\n-\n-        if forwards { (target - end_index) as u32 } else { (end_index - target) as u32 }\n     }\n \n     pub fn get_source_file(&self, filename: &FileName) -> Option<Lrc<SourceFile>> {"}]}