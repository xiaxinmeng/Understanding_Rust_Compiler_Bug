{"sha": "f89cc11827a36e6d1eb4e22322a51eb9b1153450", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4OWNjMTE4MjdhMzZlNmQxZWI0ZTIyMzIyYTUxZWI5YjExNTM0NTA=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-07-02T00:20:39Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-07-02T00:29:54Z"}, "message": "rustdoc: s/nil/unit/ internally.\n\nQuick poll on IRC suggested that unit was the preferred name for ().", "tree": {"sha": "3846040c14f25aa330d0726f839453f142ad0953", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3846040c14f25aa330d0726f839453f142ad0953"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f89cc11827a36e6d1eb4e22322a51eb9b1153450", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f89cc11827a36e6d1eb4e22322a51eb9b1153450", "html_url": "https://github.com/rust-lang/rust/commit/f89cc11827a36e6d1eb4e22322a51eb9b1153450", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f89cc11827a36e6d1eb4e22322a51eb9b1153450/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44ec28cfac9fa3f738e0e77ccca1d804125fd1dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/44ec28cfac9fa3f738e0e77ccca1d804125fd1dd", "html_url": "https://github.com/rust-lang/rust/commit/44ec28cfac9fa3f738e0e77ccca1d804125fd1dd"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "be761341f1bf491971576de13e55d19491fa171e", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f89cc11827a36e6d1eb4e22322a51eb9b1153450/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f89cc11827a36e6d1eb4e22322a51eb9b1153450/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=f89cc11827a36e6d1eb4e22322a51eb9b1153450", "patch": "@@ -1079,7 +1079,7 @@ pub enum Primitive {\n     F32, F64,\n     Char,\n     Bool,\n-    Nil,\n+    Unit,\n     Str,\n     Slice,\n     PrimitiveTuple,\n@@ -1110,7 +1110,7 @@ impl Primitive {\n             \"u32\" => Some(U32),\n             \"u64\" => Some(U64),\n             \"bool\" => Some(Bool),\n-            \"nil\" => Some(Nil),\n+            \"unit\" => Some(Unit),\n             \"char\" => Some(Char),\n             \"str\" => Some(Str),\n             \"f32\" => Some(F32),\n@@ -1159,15 +1159,15 @@ impl Primitive {\n             Str => \"str\",\n             Bool => \"bool\",\n             Char => \"char\",\n-            Nil => \"()\",\n+            Unit => \"()\",\n             Slice => \"slice\",\n             PrimitiveTuple => \"tuple\",\n         }\n     }\n \n     pub fn to_url_str(&self) -> &'static str {\n         match *self {\n-            Nil => \"nil\",\n+            Unit => \"unit\",\n             other => other.to_str(),\n         }\n     }\n@@ -1184,7 +1184,7 @@ impl Clean<Type> for ast::Ty {\n     fn clean(&self) -> Type {\n         use syntax::ast::*;\n         match self.node {\n-            TyNil => Primitive(Nil),\n+            TyNil => Primitive(Unit),\n             TyPtr(ref m) => RawPointer(m.mutbl.clean(), box m.ty.clean()),\n             TyRptr(ref l, ref m) =>\n                 BorrowedRef {lifetime: l.clean(), mutability: m.mutbl.clean(),\n@@ -1214,7 +1214,7 @@ impl Clean<Type> for ty::t {\n     fn clean(&self) -> Type {\n         match ty::get(*self).sty {\n             ty::ty_bot => Bottom,\n-            ty::ty_nil => Primitive(Nil),\n+            ty::ty_nil => Primitive(Unit),\n             ty::ty_bool => Primitive(Bool),\n             ty::ty_char => Primitive(Char),\n             ty::ty_int(ast::TyI) => Primitive(Int),"}, {"sha": "cec665768d1ee86ab4aad758480f60792d7f5283", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f89cc11827a36e6d1eb4e22322a51eb9b1153450/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f89cc11827a36e6d1eb4e22322a51eb9b1153450/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=f89cc11827a36e6d1eb4e22322a51eb9b1153450", "patch": "@@ -362,7 +362,7 @@ impl fmt::Show for clean::Type {\n                        },\n                        args = decl.decl.inputs,\n                        arrow = match decl.decl.output {\n-                           clean::Primitive(clean::Nil) => \"\".to_string(),\n+                           clean::Primitive(clean::Unit) => \"\".to_string(),\n                            _ => format!(\" -&gt; {}\", decl.decl.output),\n                        },\n                        bounds = {\n@@ -411,7 +411,7 @@ impl fmt::Show for clean::Type {\n                                m.collect::<Vec<String>>().connect(\" + \"))\n                        },\n                        arrow = match decl.decl.output {\n-                           clean::Primitive(clean::Nil) => \"\".to_string(),\n+                           clean::Primitive(clean::Unit) => \"\".to_string(),\n                            _ => format!(\" -&gt; {}\", decl.decl.output)\n                        })\n             }\n@@ -472,7 +472,7 @@ impl fmt::Show for clean::FnDecl {\n         write!(f, \"({args}){arrow}\",\n                args = self.inputs,\n                arrow = match self.output {\n-                   clean::Primitive(clean::Nil) => \"\".to_string(),\n+                   clean::Primitive(clean::Unit) => \"\".to_string(),\n                    _ => format!(\" -&gt; {}\", self.output),\n                })\n     }\n@@ -505,7 +505,7 @@ impl<'a> fmt::Show for Method<'a> {\n         write!(f, \"({args}){arrow}\",\n                args = args,\n                arrow = match d.output {\n-                   clean::Primitive(clean::Nil) => \"\".to_string(),\n+                   clean::Primitive(clean::Unit) => \"\".to_string(),\n                    _ => format!(\" -&gt; {}\", d.output),\n                })\n     }"}]}