{"sha": "1d5b2dc945124c619ebb3641c096c063ca8ca1e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkNWIyZGM5NDUxMjRjNjE5ZWJiMzY0MWMwOTZjMDYzY2E4Y2ExZTU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-07T01:41:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-07T01:41:10Z"}, "message": "Rollup merge of #82292 - SkiFire13:fix-issue-82291, r=m-ou-se\n\nPrevent specialized ZipImpl from calling `__iterator_get_unchecked` twice with the same index\n\nFixes #82291\n\nIt's open for review, but conflicts with #82289, wait before merging. The conflict involves only the new test, so it should be rather trivial to fix.", "tree": {"sha": "0493d162283b25eb4b95860afe03d40822d45abe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0493d162283b25eb4b95860afe03d40822d45abe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d5b2dc945124c619ebb3641c096c063ca8ca1e5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgRC82CRBK7hj4Ov3rIwAAdHIIAAmOswSyi3D+4fLknAagaYqO\nHHvt3G+DRJhrtWsrJmhyHWAw77TW1A8AvnfxBxP4BAhZa/F2Da82OaCq753EW7fQ\nrM1Yr+XkXwbLWhF20ZGQwvxwuM3ytn1at6BUCSmhipAqqH88mv9yfBnW+ShiNCIC\nV2rlh309YrV/WpOlVXCeghVRkYsc68cKNJoyYygPiVceJArIrhczF/geWa06lJrh\n+J0sYWnIlLKrRsk7C1Ys1Q8iaXBe0v1iO8X9xPgQPaKIsrulPOHXx3jbX9P4IgHq\nnkfJmIfyvjoy/Rieuc4rqwsrVA6O4Y/w7eu/i2r/sTQrkS8sOzy2acbdVPQy0K4=\n=ubD/\n-----END PGP SIGNATURE-----\n", "payload": "tree 0493d162283b25eb4b95860afe03d40822d45abe\nparent 0adc1965218bb24290c74f680d94c20799ff8f70\nparent c1bfb9a78db6d481be1d03355672712c766e20b0\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1615081270 +0900\ncommitter GitHub <noreply@github.com> 1615081270 +0900\n\nRollup merge of #82292 - SkiFire13:fix-issue-82291, r=m-ou-se\n\nPrevent specialized ZipImpl from calling `__iterator_get_unchecked` twice with the same index\n\nFixes #82291\n\nIt's open for review, but conflicts with #82289, wait before merging. The conflict involves only the new test, so it should be rather trivial to fix.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d5b2dc945124c619ebb3641c096c063ca8ca1e5", "html_url": "https://github.com/rust-lang/rust/commit/1d5b2dc945124c619ebb3641c096c063ca8ca1e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d5b2dc945124c619ebb3641c096c063ca8ca1e5/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0adc1965218bb24290c74f680d94c20799ff8f70", "url": "https://api.github.com/repos/rust-lang/rust/commits/0adc1965218bb24290c74f680d94c20799ff8f70", "html_url": "https://github.com/rust-lang/rust/commit/0adc1965218bb24290c74f680d94c20799ff8f70"}, {"sha": "c1bfb9a78db6d481be1d03355672712c766e20b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1bfb9a78db6d481be1d03355672712c766e20b0", "html_url": "https://github.com/rust-lang/rust/commit/c1bfb9a78db6d481be1d03355672712c766e20b0"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "ea7a809c6badb61f34f55ee3bd82ab25a2bf2fb9", "filename": "library/core/src/iter/adapters/zip.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1d5b2dc945124c619ebb3641c096c063ca8ca1e5/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d5b2dc945124c619ebb3641c096c063ca8ca1e5/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs?ref=1d5b2dc945124c619ebb3641c096c063ca8ca1e5", "patch": "@@ -13,9 +13,10 @@ use crate::iter::{InPlaceIterable, SourceIter, TrustedLen};\n pub struct Zip<A, B> {\n     a: A,\n     b: B,\n-    // index and len are only used by the specialized version of zip\n+    // index, len and a_len are only used by the specialized version of zip\n     index: usize,\n     len: usize,\n+    a_len: usize,\n }\n impl<A: Iterator, B: Iterator> Zip<A, B> {\n     pub(in crate::iter) fn new(a: A, b: B) -> Zip<A, B> {\n@@ -110,6 +111,7 @@ where\n             b,\n             index: 0, // unused\n             len: 0,   // unused\n+            a_len: 0, // unused\n         }\n     }\n \n@@ -184,8 +186,9 @@ where\n     B: TrustedRandomAccess + Iterator,\n {\n     fn new(a: A, b: B) -> Self {\n-        let len = cmp::min(a.size(), b.size());\n-        Zip { a, b, index: 0, len }\n+        let a_len = a.size();\n+        let len = cmp::min(a_len, b.size());\n+        Zip { a, b, index: 0, len, a_len }\n     }\n \n     #[inline]\n@@ -197,7 +200,7 @@ where\n             unsafe {\n                 Some((self.a.__iterator_get_unchecked(i), self.b.__iterator_get_unchecked(i)))\n             }\n-        } else if A::MAY_HAVE_SIDE_EFFECT && self.index < self.a.size() {\n+        } else if A::MAY_HAVE_SIDE_EFFECT && self.index < self.a_len {\n             let i = self.index;\n             self.index += 1;\n             self.len += 1;\n@@ -262,6 +265,7 @@ where\n                     for _ in 0..sz_a - self.len {\n                         self.a.next_back();\n                     }\n+                    self.a_len = self.len;\n                 }\n                 let sz_b = self.b.size();\n                 if B::MAY_HAVE_SIDE_EFFECT && sz_b > self.len {\n@@ -273,6 +277,7 @@ where\n         }\n         if self.index < self.len {\n             self.len -= 1;\n+            self.a_len -= 1;\n             let i = self.len;\n             // SAFETY: `i` is smaller than the previous value of `self.len`,\n             // which is also smaller than or equal to `self.a.len()` and `self.b.len()`"}, {"sha": "000c15f72c886d35df0fb64dc6958c3bf9df621b", "filename": "library/core/tests/iter/adapters/zip.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1d5b2dc945124c619ebb3641c096c063ca8ca1e5/library%2Fcore%2Ftests%2Fiter%2Fadapters%2Fzip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d5b2dc945124c619ebb3641c096c063ca8ca1e5/library%2Fcore%2Ftests%2Fiter%2Fadapters%2Fzip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fiter%2Fadapters%2Fzip.rs?ref=1d5b2dc945124c619ebb3641c096c063ca8ca1e5", "patch": "@@ -265,3 +265,26 @@ fn test_issue_82282() {\n         panic!();\n     }\n }\n+\n+#[test]\n+fn test_issue_82291() {\n+    use std::cell::Cell;\n+\n+    let mut v1 = [()];\n+    let v2 = [()];\n+\n+    let called = Cell::new(0);\n+\n+    let mut zip = v1\n+        .iter_mut()\n+        .map(|r| {\n+            called.set(called.get() + 1);\n+            r\n+        })\n+        .zip(&v2);\n+\n+    zip.next_back();\n+    assert_eq!(called.get(), 1);\n+    zip.next();\n+    assert_eq!(called.get(), 1);\n+}"}]}