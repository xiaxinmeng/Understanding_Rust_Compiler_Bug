{"sha": "97d8d04f3fffd0984a2d2af2f24c104e75be8f01", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3ZDhkMDRmM2ZmZmQwOTg0YTJkMmFmMmYyNGMxMDRlNzViZThmMDE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-11-25T14:20:07Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-11-25T15:50:27Z"}, "message": "Remove index type check (review comment)", "tree": {"sha": "3afce58fcf689eead02b82d4668816cc2799dece", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3afce58fcf689eead02b82d4668816cc2799dece"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97d8d04f3fffd0984a2d2af2f24c104e75be8f01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97d8d04f3fffd0984a2d2af2f24c104e75be8f01", "html_url": "https://github.com/rust-lang/rust/commit/97d8d04f3fffd0984a2d2af2f24c104e75be8f01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97d8d04f3fffd0984a2d2af2f24c104e75be8f01/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cde0023b5b71eb4ceafef31dd9036a268ba3b08d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cde0023b5b71eb4ceafef31dd9036a268ba3b08d", "html_url": "https://github.com/rust-lang/rust/commit/cde0023b5b71eb4ceafef31dd9036a268ba3b08d"}], "stats": {"total": 35, "additions": 6, "deletions": 29}, "files": [{"sha": "39ec33eef1fec518542f3001a5335fd914459042", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/97d8d04f3fffd0984a2d2af2f24c104e75be8f01/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97d8d04f3fffd0984a2d2af2f24c104e75be8f01/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=97d8d04f3fffd0984a2d2af2f24c104e75be8f01", "patch": "@@ -244,23 +244,6 @@ impl Path {\n     pub fn is_global(&self) -> bool {\n         !self.segments.is_empty() && self.segments[0].name == keywords::CrateRoot.name()\n     }\n-\n-    /// Wether this path is any of `::std::ops::{Range, RangeTo, RangeFrom}`.\n-    pub fn is_range(&self) -> bool {\n-        let mut base = [\"{{root}}\", \"std\", \"ops\"].iter().map(|p| p.to_string()).collect::<Vec<_>>();\n-        let range_paths = [\"Range\", \"RangeTo\", \"RangeFrom\"];\n-        let segments = self.segments.iter()\n-            .map(|segment| format!(\"{}\", segment.name))\n-            .collect::<Vec<String>>();\n-        for path in &range_paths {\n-            base.push(path.to_string());\n-            if base == segments {\n-                return true;\n-            }\n-            base.pop();\n-        }\n-        false\n-    }\n }\n \n impl fmt::Debug for Path {"}, {"sha": "46e2c3af5e632c2220f2e4f8e9c960c8951fadc6", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/97d8d04f3fffd0984a2d2af2f24c104e75be8f01/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97d8d04f3fffd0984a2d2af2f24c104e75be8f01/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=97d8d04f3fffd0984a2d2af2f24c104e75be8f01", "patch": "@@ -832,17 +832,11 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n             let parent_node = self.tcx.hir.get_parent_node(node_id);\n             if let Some(hir::map::NodeLocal(ref local)) = self.tcx.hir.find(parent_node) {\n                 if let Some(ref expr) = local.init {\n-                    if let hir::ExprIndex(_, ref index) = expr.node {\n-                        if let hir::ExprStruct(hir::QPath::Resolved(None, ref path),\n-                                               ..) = index.node {\n-                            if let (Ok(snippet), true) = (\n-                                self.tcx.sess.codemap().span_to_snippet(expr.span),\n-                                path.is_range()\n-                            ) {\n-                                err.span_suggestion(expr.span,\n-                                                    \"consider a slice instead\",\n-                                                    format!(\"&{}\", snippet));\n-                            }\n+                    if let hir::ExprIndex(_, _) = expr.node {\n+                        if let Ok(snippet) = self.tcx.sess.codemap().span_to_snippet(expr.span) {\n+                            err.span_suggestion(expr.span,\n+                                                \"consider a slice instead\",\n+                                                format!(\"&{}\", snippet));\n                         }\n                     }\n                 }"}, {"sha": "adec495e72a9f0135d9b4e649bb4d3b26c505e5c", "filename": "src/test/ui/suggestions/str-array-assignment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97d8d04f3fffd0984a2d2af2f24c104e75be8f01/src%2Ftest%2Fui%2Fsuggestions%2Fstr-array-assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97d8d04f3fffd0984a2d2af2f24c104e75be8f01/src%2Ftest%2Fui%2Fsuggestions%2Fstr-array-assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fstr-array-assignment.rs?ref=97d8d04f3fffd0984a2d2af2f24c104e75be8f01", "patch": "@@ -20,7 +20,7 @@ fn main() { //~ NOTE expected `()` because of default return type\n   //~| NOTE expected type\n   let v = s[..2];\n   //~^ ERROR the trait bound `str: std::marker::Sized` is not satisfied\n-  //~| NOTE consider a slice instead\n+  //~| HELP consider a slice instead\n   //~| NOTE `str` does not have a constant size known at compile-time\n   //~| HELP the trait `std::marker::Sized` is not implemented for `str`\n   //~| NOTE all local variables must have a statically known size"}]}