{"sha": "29c9443d854073feeceb7ec2afa5841d9d1242af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5Yzk0NDNkODU0MDczZmVlY2ViN2VjMmFmYTU4NDFkOWQxMjQyYWY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-07-09T01:06:17Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-07-09T01:06:17Z"}, "message": "std: Add a yield implementation for newsched", "tree": {"sha": "f15338cfc8d0b3e5ac3336eaf33d82e5c7460982", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f15338cfc8d0b3e5ac3336eaf33d82e5c7460982"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29c9443d854073feeceb7ec2afa5841d9d1242af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29c9443d854073feeceb7ec2afa5841d9d1242af", "html_url": "https://github.com/rust-lang/rust/commit/29c9443d854073feeceb7ec2afa5841d9d1242af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29c9443d854073feeceb7ec2afa5841d9d1242af/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7826651335b81f4630aa4d0d43a5de95b96d2311", "url": "https://api.github.com/repos/rust-lang/rust/commits/7826651335b81f4630aa4d0d43a5de95b96d2311", "html_url": "https://github.com/rust-lang/rust/commit/7826651335b81f4630aa4d0d43a5de95b96d2311"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "5a3ff10ae83e66263ead7fe3cedc6d5b1e59f7fc", "filename": "src/libstd/task/mod.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/29c9443d854073feeceb7ec2afa5841d9d1242af/src%2Flibstd%2Ftask%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c9443d854073feeceb7ec2afa5841d9d1242af/src%2Flibstd%2Ftask%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftask%2Fmod.rs?ref=29c9443d854073feeceb7ec2afa5841d9d1242af", "patch": "@@ -497,11 +497,26 @@ pub fn try<T:Send>(f: ~fn() -> T) -> Result<T,()> {\n pub fn yield() {\n     //! Yield control to the task scheduler\n \n+    use rt::{context, OldTaskContext};\n+    use rt::local::Local;\n+    use rt::sched::Scheduler;\n+\n     unsafe {\n-        let task_ = rt::rust_get_task();\n-        let killed = rt::rust_task_yield(task_);\n-        if killed && !failing() {\n-            fail!(\"killed\");\n+        match context() {\n+            OldTaskContext => {\n+                let task_ = rt::rust_get_task();\n+                let killed = rt::rust_task_yield(task_);\n+                if killed && !failing() {\n+                    fail!(\"killed\");\n+                }\n+            }\n+            _ => {\n+                // XXX: What does yield really mean in newsched?\n+                let sched = Local::take::<Scheduler>();\n+                do sched.deschedule_running_task_and_then |sched, task| {\n+                    sched.enqueue_task(task);\n+                }\n+            }\n         }\n     }\n }"}]}