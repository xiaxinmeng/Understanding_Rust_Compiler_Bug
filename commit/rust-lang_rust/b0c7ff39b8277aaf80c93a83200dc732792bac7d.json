{"sha": "b0c7ff39b8277aaf80c93a83200dc732792bac7d", "node_id": "C_kwDOAAsO6NoAKGIwYzdmZjM5YjgyNzdhYWY4MGM5M2E4MzIwMGRjNzMyNzkyYmFjN2Q", "commit": {"author": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2021-11-30T04:50:09Z"}, "committer": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2021-11-30T04:50:09Z"}, "message": "remove one need for semantics", "tree": {"sha": "9640bdf0508080da368b3ff6784bdbd68e5d8b3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9640bdf0508080da368b3ff6784bdbd68e5d8b3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0c7ff39b8277aaf80c93a83200dc732792bac7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0c7ff39b8277aaf80c93a83200dc732792bac7d", "html_url": "https://github.com/rust-lang/rust/commit/b0c7ff39b8277aaf80c93a83200dc732792bac7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0c7ff39b8277aaf80c93a83200dc732792bac7d/comments", "author": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54fc98920b1f28b5a9ba42a67fcd2868cc0b614a", "url": "https://api.github.com/repos/rust-lang/rust/commits/54fc98920b1f28b5a9ba42a67fcd2868cc0b614a", "html_url": "https://github.com/rust-lang/rust/commit/54fc98920b1f28b5a9ba42a67fcd2868cc0b614a"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "7deb6cae38b18a077fbb32c988c36ca99fe7e4a0", "filename": "crates/ide/src/navigation_target.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b0c7ff39b8277aaf80c93a83200dc732792bac7d/crates%2Fide%2Fsrc%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0c7ff39b8277aaf80c93a83200dc732792bac7d/crates%2Fide%2Fsrc%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fnavigation_target.rs?ref=b0c7ff39b8277aaf80c93a83200dc732792bac7d", "patch": "@@ -169,9 +169,8 @@ impl NavigationTarget {\n \n impl TryToNav for FileSymbol {\n     fn try_to_nav(&self, db: &RootDatabase) -> Option<NavigationTarget> {\n-        let semantics = Semantics::new(db);\n-        let full_range = self.loc.original_range(&semantics)?;\n-        let name_range = self.loc.original_name_range(&semantics)?;\n+        let full_range = self.loc.original_range(db)?;\n+        let name_range = self.loc.original_name_range(db)?;\n \n         Some(NavigationTarget {\n             file_id: full_range.file_id,"}, {"sha": "f2629f69a0d98216e84a7eaff9b5ee84ef467453", "filename": "crates/ide_db/src/symbol_index.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b0c7ff39b8277aaf80c93a83200dc732792bac7d/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0c7ff39b8277aaf80c93a83200dc732792bac7d/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs?ref=b0c7ff39b8277aaf80c93a83200dc732792bac7d", "patch": "@@ -382,28 +382,25 @@ impl DeclarationLocation {\n         Some(self.ptr.to_node(&root))\n     }\n \n-    pub fn original_range(&self, semantics: &Semantics<'_, RootDatabase>) -> Option<FileRange> {\n-        find_original_file_range(semantics, self.hir_file_id, &self.ptr)\n+    pub fn original_range(&self, db: &dyn HirDatabase) -> Option<FileRange> {\n+        find_original_file_range(db, self.hir_file_id, &self.ptr)\n     }\n \n-    pub fn original_name_range(\n-        &self,\n-        semantics: &Semantics<'_, RootDatabase>,\n-    ) -> Option<FileRange> {\n-        find_original_file_range(semantics, self.hir_file_id, &self.name_ptr)\n+    pub fn original_name_range(&self, db: &dyn HirDatabase) -> Option<FileRange> {\n+        find_original_file_range(db, self.hir_file_id, &self.name_ptr)\n     }\n }\n \n fn find_original_file_range(\n-    semantics: &Semantics<'_, RootDatabase>,\n+    db: &dyn HirDatabase,\n     file_id: HirFileId,\n     ptr: &SyntaxNodePtr,\n ) -> Option<FileRange> {\n-    let root = semantics.parse_or_expand(file_id)?;\n+    let root = db.parse_or_expand(file_id)?;\n     let node = ptr.to_node(&root);\n     let node = InFile::new(file_id, &node);\n \n-    Some(node.original_file_range(semantics.db.upcast()))\n+    Some(node.original_file_range(db.upcast()))\n }\n \n #[derive(PartialEq, Eq, Hash, Clone, Copy, Debug)]"}]}