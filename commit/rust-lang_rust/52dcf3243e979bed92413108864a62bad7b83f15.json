{"sha": "52dcf3243e979bed92413108864a62bad7b83f15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZGNmMzI0M2U5NzliZWQ5MjQxMzEwODg2NGE2MmJhZDdiODNmMTU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-14T14:06:10Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-14T14:10:49Z"}, "message": "Minor", "tree": {"sha": "caed68c18c1d43279b22a7f4a19b850976a64ee5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/caed68c18c1d43279b22a7f4a19b850976a64ee5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52dcf3243e979bed92413108864a62bad7b83f15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52dcf3243e979bed92413108864a62bad7b83f15", "html_url": "https://github.com/rust-lang/rust/commit/52dcf3243e979bed92413108864a62bad7b83f15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52dcf3243e979bed92413108864a62bad7b83f15/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a19f52f9ae1634fa2267c3bc7647a0d47b6014ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/a19f52f9ae1634fa2267c3bc7647a0d47b6014ac", "html_url": "https://github.com/rust-lang/rust/commit/a19f52f9ae1634fa2267c3bc7647a0d47b6014ac"}], "stats": {"total": 50, "additions": 19, "deletions": 31}, "files": [{"sha": "a279598b9744eda824aaa6cba0db31e0afc6a75a", "filename": "xtask/src/install.rs", "status": "modified", "additions": 19, "deletions": 31, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/52dcf3243e979bed92413108864a62bad7b83f15/xtask%2Fsrc%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52dcf3243e979bed92413108864a62bad7b83f15/xtask%2Fsrc%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Finstall.rs?ref=52dcf3243e979bed92413108864a62bad7b83f15", "patch": "@@ -2,7 +2,7 @@\n \n use std::{env, path::PathBuf, str};\n \n-use anyhow::{Context, Result};\n+use anyhow::{bail, format_err, Context, Result};\n \n use crate::cmd::{run, run_with_output, Cmd};\n \n@@ -55,7 +55,7 @@ fn fix_path_for_mac() -> Result<()> {\n         const ROOT_DIR: &str = \"\";\n         let home_dir = match env::var(\"HOME\") {\n             Ok(home) => home,\n-            Err(e) => anyhow::bail!(\"Failed getting HOME from environment with error: {}.\", e),\n+            Err(e) => bail!(\"Failed getting HOME from environment with error: {}.\", e),\n         };\n \n         [ROOT_DIR, &home_dir]\n@@ -69,7 +69,7 @@ fn fix_path_for_mac() -> Result<()> {\n     if !vscode_path.is_empty() {\n         let vars = match env::var_os(\"PATH\") {\n             Some(path) => path,\n-            None => anyhow::bail!(\"Could not get PATH variable from env.\"),\n+            None => bail!(\"Could not get PATH variable from env.\"),\n         };\n \n         let mut paths = env::split_paths(&vars).collect::<Vec<_>>();\n@@ -90,7 +90,7 @@ fn install_client(ClientOpt::VsCode: ClientOpt) -> Result<()> {\n     .run();\n \n     if npm_version.is_err() {\n-        eprintln!(\"\\nERROR: `npm --version` failed, `npm` is required to build the VS Code plugin\")\n+        bail!(\"`npm --version` failed, `npm` is required to build the VS Code plugin\")\n     }\n \n     Cmd { unix: r\"npm install\", windows: r\"cmd.exe /c npm install\", work_dir: \"./editors/code\" }\n@@ -102,20 +102,20 @@ fn install_client(ClientOpt::VsCode: ClientOpt) -> Result<()> {\n     }\n     .run()?;\n \n-    let code_binary = [\"code\", \"code-insiders\", \"codium\", \"code-oss\"].iter().find(|bin| {\n-        Cmd {\n-            unix: &format!(\"{} --version\", bin),\n-            windows: &format!(\"cmd.exe /c {}.cmd --version\", bin),\n-            work_dir: \"./editors/code\",\n-        }\n-        .run()\n-        .is_ok()\n-    });\n-\n-    let code_binary = match code_binary {\n-        Some(it) => it,\n-        None => anyhow::bail!(\"Can't execute `code --version`. Perhaps it is not in $PATH?\"),\n-    };\n+    let code_binary = [\"code\", \"code-insiders\", \"codium\", \"code-oss\"]\n+        .iter()\n+        .find(|bin| {\n+            Cmd {\n+                unix: &format!(\"{} --version\", bin),\n+                windows: &format!(\"cmd.exe /c {}.cmd --version\", bin),\n+                work_dir: \"./editors/code\",\n+            }\n+            .run()\n+            .is_ok()\n+        })\n+        .ok_or_else(|| {\n+            format_err!(\"Can't execute `code --version`. Perhaps it is not in $PATH?\")\n+        })?;\n \n     Cmd {\n         unix: &format!(r\"{} --install-extension ./rust-analyzer-0.1.0.vsix --force\", code_binary),\n@@ -135,24 +135,12 @@ fn install_client(ClientOpt::VsCode: ClientOpt) -> Result<()> {\n     .run_with_output()?;\n \n     if !installed_extensions.contains(\"rust-analyzer\") {\n-        anyhow::bail!(\n+        bail!(\n             \"Could not install the Visual Studio Code extension. \\\n              Please make sure you have at least NodeJS 10.x together with the latest version of VS Code installed and try again.\"\n         );\n     }\n \n-    if installed_extensions.contains(\"ra-lsp\") {\n-        Cmd {\n-            unix: &format!(r\"{} --uninstall-extension matklad.ra-lsp\", code_binary),\n-            windows: &format!(\n-                r\"cmd.exe /c {}.cmd --uninstall-extension matklad.ra-lsp\",\n-                code_binary\n-            ),\n-            work_dir: \"./editors/code\",\n-        }\n-        .run()?;\n-    }\n-\n     Ok(())\n }\n "}]}