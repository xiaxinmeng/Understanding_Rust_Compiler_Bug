{"sha": "682dd4dac0cf003998359d5fe8551daa126e50f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4MmRkNGRhYzBjZjAwMzk5ODM1OWQ1ZmU4NTUxZGFhMTI2ZTUwZjY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-11-16T16:27:36Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-11-16T16:27:36Z"}, "message": "Prepare to recompute completions on every keystroke\n\nIf we set `is_incomplete: true`, VS Code will re-query completions\nafter every keypress.", "tree": {"sha": "e2e2a0206bc45c6351eb3f6ed8f5b0755d444fb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2e2a0206bc45c6351eb3f6ed8f5b0755d444fb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/682dd4dac0cf003998359d5fe8551daa126e50f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/682dd4dac0cf003998359d5fe8551daa126e50f6", "html_url": "https://github.com/rust-lang/rust/commit/682dd4dac0cf003998359d5fe8551daa126e50f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/682dd4dac0cf003998359d5fe8551daa126e50f6/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "789d9ca1d32afd55c7cb8d0db45652048abd7341", "url": "https://api.github.com/repos/rust-lang/rust/commits/789d9ca1d32afd55c7cb8d0db45652048abd7341", "html_url": "https://github.com/rust-lang/rust/commit/789d9ca1d32afd55c7cb8d0db45652048abd7341"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "4d1ebf6bf9890004dddb4c094a0f96acb830f293", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/682dd4dac0cf003998359d5fe8551daa126e50f6/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/682dd4dac0cf003998359d5fe8551daa126e50f6/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=682dd4dac0cf003998359d5fe8551daa126e50f6", "patch": "@@ -573,7 +573,8 @@ pub(crate) fn handle_completion(\n         .flat_map(|item| to_proto::completion_item(&line_index, line_endings, item))\n         .collect();\n \n-    Ok(Some(items.into()))\n+    let completion_list = lsp_types::CompletionList { is_incomplete: false, items };\n+    Ok(Some(completion_list.into()))\n }\n \n pub(crate) fn handle_folding_range("}]}