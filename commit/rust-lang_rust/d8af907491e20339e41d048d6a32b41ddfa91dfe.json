{"sha": "d8af907491e20339e41d048d6a32b41ddfa91dfe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4YWY5MDc0OTFlMjAzMzllNDFkMDQ4ZDZhMzJiNDFkZGZhOTFkZmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-23T17:13:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-23T17:13:51Z"}, "message": "Auto merge of #85602 - GuillaumeGomez:donthide-inherent-impls, r=jsha\n\nDon't hide inherent implementations by default\n\nFixes a regression introduced in #85575.\n\nr? `@jsha`", "tree": {"sha": "fd160923924753261adb12017fedae222a72016c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd160923924753261adb12017fedae222a72016c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8af907491e20339e41d048d6a32b41ddfa91dfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8af907491e20339e41d048d6a32b41ddfa91dfe", "html_url": "https://github.com/rust-lang/rust/commit/d8af907491e20339e41d048d6a32b41ddfa91dfe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8af907491e20339e41d048d6a32b41ddfa91dfe/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13bf0b2a3cc38ba9ed9a1542d8f2a7e98059a8aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/13bf0b2a3cc38ba9ed9a1542d8f2a7e98059a8aa", "html_url": "https://github.com/rust-lang/rust/commit/13bf0b2a3cc38ba9ed9a1542d8f2a7e98059a8aa"}, {"sha": "d7579b91343fb878a34e1c398d8d878b8b00c20e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7579b91343fb878a34e1c398d8d878b8b00c20e", "html_url": "https://github.com/rust-lang/rust/commit/d7579b91343fb878a34e1c398d8d878b8b00c20e"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "29b10fb8457b0e40e5e9dad216207c031c7e76c8", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d8af907491e20339e41d048d6a32b41ddfa91dfe/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8af907491e20339e41d048d6a32b41ddfa91dfe/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=d8af907491e20339e41d048d6a32b41ddfa91dfe", "patch": "@@ -1542,24 +1542,33 @@ fn render_impl(\n         }\n     }\n     let toggled = !impl_items.is_empty() || !default_impl_items.is_empty();\n-    let open_details = |close_tags: &mut String| {\n+    let open_details = |close_tags: &mut String, is_collapsed: bool| {\n         if toggled {\n             close_tags.insert_str(0, \"</details>\");\n-            \"<details class=\\\"rustdoc-toggle implementors-toggle\\\"><summary>\"\n+            if is_collapsed {\n+                \"<details class=\\\"rustdoc-toggle implementors-toggle\\\"><summary>\"\n+            } else {\n+                \"<details class=\\\"rustdoc-toggle implementors-toggle\\\" open><summary>\"\n+            }\n         } else {\n             \"\"\n         }\n     };\n     if render_mode == RenderMode::Normal {\n+        let is_implementing_trait;\n         let id = cx.derive_id(match i.inner_impl().trait_ {\n             Some(ref t) => {\n+                is_implementing_trait = true;\n                 if is_on_foreign_type {\n                     get_id_for_impl_on_foreign_type(&i.inner_impl().for_, t, cx)\n                 } else {\n                     format!(\"impl-{}\", small_url_encode(format!(\"{:#}\", t.print(cx))))\n                 }\n             }\n-            None => \"impl\".to_string(),\n+            None => {\n+                is_implementing_trait = false;\n+                \"impl\".to_string()\n+            }\n         });\n         let aliases = if aliases.is_empty() {\n             String::new()\n@@ -1570,7 +1579,7 @@ fn render_impl(\n             write!(\n                 w,\n                 \"{}<h3 id=\\\"{}\\\" class=\\\"impl\\\"{}><code class=\\\"in-band\\\">\",\n-                open_details(&mut close_tags),\n+                open_details(&mut close_tags, is_implementing_trait),\n                 id,\n                 aliases\n             );\n@@ -1597,7 +1606,7 @@ fn render_impl(\n             write!(\n                 w,\n                 \"{}<h3 id=\\\"{}\\\" class=\\\"impl\\\"{}><code class=\\\"in-band\\\">{}</code>\",\n-                open_details(&mut close_tags),\n+                open_details(&mut close_tags, is_implementing_trait),\n                 id,\n                 aliases,\n                 i.inner_impl().print(false, cx)"}]}