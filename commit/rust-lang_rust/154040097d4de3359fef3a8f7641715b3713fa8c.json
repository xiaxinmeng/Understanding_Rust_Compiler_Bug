{"sha": "154040097d4de3359fef3a8f7641715b3713fa8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1NDA0MDA5N2Q0ZGUzMzU5ZmVmM2E4Zjc2NDE3MTViMzcxM2ZhOGM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-17T13:42:27Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-01T17:59:49Z"}, "message": "pacify the parallel compiler", "tree": {"sha": "d4310416b05009e33c65a9fd52cc3bfc222db3e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4310416b05009e33c65a9fd52cc3bfc222db3e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/154040097d4de3359fef3a8f7641715b3713fa8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/154040097d4de3359fef3a8f7641715b3713fa8c", "html_url": "https://github.com/rust-lang/rust/commit/154040097d4de3359fef3a8f7641715b3713fa8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/154040097d4de3359fef3a8f7641715b3713fa8c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e233331a519408edf60ac1c7dee4a9cefe8c8756", "url": "https://api.github.com/repos/rust-lang/rust/commits/e233331a519408edf60ac1c7dee4a9cefe8c8756", "html_url": "https://github.com/rust-lang/rust/commit/e233331a519408edf60ac1c7dee4a9cefe8c8756"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "393125f278c035b98d60f7d903bc78f659c379c7", "filename": "src/librustc/ty/query/job.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/154040097d4de3359fef3a8f7641715b3713fa8c/src%2Flibrustc%2Fty%2Fquery%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/154040097d4de3359fef3a8f7641715b3713fa8c/src%2Flibrustc%2Fty%2Fquery%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fjob.rs?ref=154040097d4de3359fef3a8f7641715b3713fa8c", "patch": "@@ -435,11 +435,11 @@ pub unsafe fn handle_deadlock() {\n     let rustc_span_globals =\n         rustc_span::GLOBALS.with(|rustc_span_globals| rustc_span_globals as *const _);\n     let rustc_span_globals = &*rustc_span_globals;\n-    let syntax_globals = syntax::GLOBALS.with(|syntax_globals| syntax_globals as *const _);\n+    let syntax_globals = syntax::attr::GLOBALS.with(|syntax_globals| syntax_globals as *const _);\n     let syntax_globals = &*syntax_globals;\n     thread::spawn(move || {\n         tls::GCX_PTR.set(gcx_ptr, || {\n-            syntax::GLOBALS.set(syntax_globals, || {\n+            syntax::attr::GLOBALS.set(syntax_globals, || {\n                 rustc_span::GLOBALS\n                     .set(rustc_span_globals, || tls::with_global(|tcx| deadlock(tcx, &registry)))\n             });"}, {"sha": "3f59a0ca34a24f6bfd518a78a3d620107d8140c9", "filename": "src/librustc_interface/util.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/154040097d4de3359fef3a8f7641715b3713fa8c/src%2Flibrustc_interface%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/154040097d4de3359fef3a8f7641715b3713fa8c/src%2Flibrustc_interface%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Futil.rs?ref=154040097d4de3359fef3a8f7641715b3713fa8c", "patch": "@@ -183,15 +183,15 @@ pub fn spawn_thread_pool<F: FnOnce() -> R + Send, R: Send>(\n \n     let with_pool = move |pool: &ThreadPool| pool.install(move || f());\n \n-    syntax::with_globals(edition, || {\n-        syntax::GLOBALS.with(|syntax_globals| {\n+    syntax::attr::with_globals(edition, || {\n+        syntax::attr::GLOBALS.with(|syntax_globals| {\n             rustc_span::GLOBALS.with(|rustc_span_globals| {\n                 // The main handler runs for each Rayon worker thread and sets up\n                 // the thread local rustc uses. syntax_globals and rustc_span_globals are\n                 // captured and set on the new threads. ty::tls::with_thread_locals sets up\n                 // thread local callbacks from libsyntax\n                 let main_handler = move |thread: ThreadBuilder| {\n-                    syntax::GLOBALS.set(syntax_globals, || {\n+                    syntax::attr::GLOBALS.set(syntax_globals, || {\n                         rustc_span::GLOBALS.set(rustc_span_globals, || {\n                             if let Some(stderr) = stderr {\n                                 io::set_panic(Some(box Sink(stderr.clone())));"}]}