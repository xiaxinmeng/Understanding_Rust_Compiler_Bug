{"sha": "419c87fb35fac37312bda238b58b9c493b0e909a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxOWM4N2ZiMzVmYWMzNzMxMmJkYTIzOGI1OGI5YzQ5M2IwZTkwOWE=", "commit": {"author": {"name": "Jeremy Stucki", "email": "stucki.jeremy@gmail.com", "date": "2019-08-23T12:36:00Z"}, "committer": {"name": "Jeremy Stucki", "email": "stucki.jeremy@gmail.com", "date": "2019-08-23T12:36:00Z"}, "message": "Refactor 'check_unwrap_or_default'", "tree": {"sha": "6a384a47927b55353183145e0a20cb1388ade190", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a384a47927b55353183145e0a20cb1388ade190"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/419c87fb35fac37312bda238b58b9c493b0e909a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEnLVrz+MJS3aQxZ9oj1SKWi7RP1gFAl1f3bAACgkQj1SKWi7R\nP1g1XA//aZpsu3mDsxLdfQd795N56WZsD8s6M1/POZwOjwjL98cJVLnpt2xk/gXw\nfx84vAGffMuEd5JlLucDKOSRgTEhsinVd7IW7GpE9LILWeQVxfElN2WsRwV1M2/z\ndaoCkoesr/vX1u0lWK5Zc1dSI2fZ7hqSxgmcCa4fVPrWV4bvYM1kJGETRwDwBQYs\n1c0EkoOQSolqpKFEupEdRk9o6NK7YjLqZIjO4ls0Zxv1AzqabWxc4cUpXKWv2+RS\nOzijbs/iTgbGNKieU1/2xsTpKJiUhOSlelThOd5mVhvaJ1odHhNKJtYFeW2vMiK+\n68lv8WSj2ij/zLMq8HwWjod73PGFAMjtcK2gBvdAmHyYGyBIWfG6WdhpCdEq7R7D\nw3ZkHxU+OeYd19w3I9fszCrsWxVNOXL8yBFmA1wLeI8mCtxYmi57nYvkBNMXuoRE\nB4lbaJEtjN38/4A9hgqn9XsndhnUlfoE27ZqsI5Y24LCioyCjB8PoBGWagoYSEAP\nCLmRQTvwzknbR/8sc5ltsmGOEz/F6YloNPWbpnfkMf0vMTCKbN6sVl9G2G7YafMG\nK9AsEgWYRiMHLo4llh1HI9Gza52pVfd3JvM/9N25U5topN1R+X1eyNmt4pahQPsn\n6CC0BB+XeXnkNIAHB8wYUM++JUxvBuzBKR9oEJXHKBWsTK7equk=\n=+KSe\n-----END PGP SIGNATURE-----", "payload": "tree 6a384a47927b55353183145e0a20cb1388ade190\nparent 1436fea271e3df5db241e1ff3b879ef48c38beed\nauthor Jeremy Stucki <stucki.jeremy@gmail.com> 1566563760 +0200\ncommitter Jeremy Stucki <stucki.jeremy@gmail.com> 1566563760 +0200\n\nRefactor 'check_unwrap_or_default'\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/419c87fb35fac37312bda238b58b9c493b0e909a", "html_url": "https://github.com/rust-lang/rust/commit/419c87fb35fac37312bda238b58b9c493b0e909a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/419c87fb35fac37312bda238b58b9c493b0e909a/comments", "author": {"login": "jeremystucki", "id": 7629727, "node_id": "MDQ6VXNlcjc2Mjk3Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/7629727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremystucki", "html_url": "https://github.com/jeremystucki", "followers_url": "https://api.github.com/users/jeremystucki/followers", "following_url": "https://api.github.com/users/jeremystucki/following{/other_user}", "gists_url": "https://api.github.com/users/jeremystucki/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremystucki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremystucki/subscriptions", "organizations_url": "https://api.github.com/users/jeremystucki/orgs", "repos_url": "https://api.github.com/users/jeremystucki/repos", "events_url": "https://api.github.com/users/jeremystucki/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremystucki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jeremystucki", "id": 7629727, "node_id": "MDQ6VXNlcjc2Mjk3Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/7629727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremystucki", "html_url": "https://github.com/jeremystucki", "followers_url": "https://api.github.com/users/jeremystucki/followers", "following_url": "https://api.github.com/users/jeremystucki/following{/other_user}", "gists_url": "https://api.github.com/users/jeremystucki/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremystucki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremystucki/subscriptions", "organizations_url": "https://api.github.com/users/jeremystucki/orgs", "repos_url": "https://api.github.com/users/jeremystucki/repos", "events_url": "https://api.github.com/users/jeremystucki/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremystucki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1436fea271e3df5db241e1ff3b879ef48c38beed", "url": "https://api.github.com/repos/rust-lang/rust/commits/1436fea271e3df5db241e1ff3b879ef48c38beed", "html_url": "https://github.com/rust-lang/rust/commit/1436fea271e3df5db241e1ff3b879ef48c38beed"}], "stats": {"total": 59, "additions": 26, "deletions": 33}, "files": [{"sha": "bd2bfbd8d4d99319f31dc9f7c0a2be89c3721c19", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 26, "deletions": 33, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/419c87fb35fac37312bda238b58b9c493b0e909a/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/419c87fb35fac37312bda238b58b9c493b0e909a/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=419c87fb35fac37312bda238b58b9c493b0e909a", "patch": "@@ -1229,43 +1229,36 @@ fn lint_or_fun_call<'a, 'tcx>(\n         or_has_args: bool,\n         span: Span,\n     ) -> bool {\n-        if or_has_args {\n-            return false;\n-        }\n-\n-        if name == \"unwrap_or\" {\n-            if let hir::ExprKind::Path(ref qpath) = fun.node {\n-                let path = &*last_path_segment(qpath).ident.as_str();\n+        if_chain! {\n+            if !or_has_args;\n+            if name == \"unwrap_or\";\n+            if let hir::ExprKind::Path(ref qpath) = fun.node;\n+            let path = &*last_path_segment(qpath).ident.as_str();\n+            if [\"default\", \"new\"].contains(&path);\n+            let arg_ty = cx.tables.expr_ty(arg);\n+            if let Some(default_trait_id) = get_trait_def_id(cx, &paths::DEFAULT_TRAIT);\n+            if implements_trait(cx, arg_ty, default_trait_id, &[]);\n \n-                if [\"default\", \"new\"].contains(&path) {\n-                    let arg_ty = cx.tables.expr_ty(arg);\n-                    let default_trait_id = if let Some(default_trait_id) = get_trait_def_id(cx, &paths::DEFAULT_TRAIT) {\n-                        default_trait_id\n-                    } else {\n-                        return false;\n-                    };\n+            then {\n+                let mut applicability = Applicability::MachineApplicable;\n+                span_lint_and_sugg(\n+                    cx,\n+                    OR_FUN_CALL,\n+                    span,\n+                    &format!(\"use of `{}` followed by a call to `{}`\", name, path),\n+                    \"try this\",\n+                    format!(\n+                        \"{}.unwrap_or_default()\",\n+                        snippet_with_applicability(cx, self_expr.span, \"_\", &mut applicability)\n+                    ),\n+                    applicability,\n+                );\n \n-                    if implements_trait(cx, arg_ty, default_trait_id, &[]) {\n-                        let mut applicability = Applicability::MachineApplicable;\n-                        span_lint_and_sugg(\n-                            cx,\n-                            OR_FUN_CALL,\n-                            span,\n-                            &format!(\"use of `{}` followed by a call to `{}`\", name, path),\n-                            \"try this\",\n-                            format!(\n-                                \"{}.unwrap_or_default()\",\n-                                snippet_with_applicability(cx, self_expr.span, \"_\", &mut applicability)\n-                            ),\n-                            applicability,\n-                        );\n-                        return true;\n-                    }\n-                }\n+                true\n+            } else {\n+                false\n             }\n         }\n-\n-        false\n     }\n \n     /// Checks for `*or(foo())`."}]}