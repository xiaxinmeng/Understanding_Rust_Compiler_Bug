{"sha": "3bfa4570393977ea01a216bd97350fdf1cbf2fdf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZmE0NTcwMzkzOTc3ZWEwMWEyMTZiZDk3MzUwZmRmMWNiZjJmZGY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-27T07:10:12Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-27T07:10:12Z"}, "message": "rustdoc: Rename util mod to par", "tree": {"sha": "28033cdcaeeef88be9ee2ae7577bedcb5a72fb9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28033cdcaeeef88be9ee2ae7577bedcb5a72fb9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bfa4570393977ea01a216bd97350fdf1cbf2fdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bfa4570393977ea01a216bd97350fdf1cbf2fdf", "html_url": "https://github.com/rust-lang/rust/commit/3bfa4570393977ea01a216bd97350fdf1cbf2fdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c15127fe3ece95eacc9839458710d6e72bd014af", "url": "https://api.github.com/repos/rust-lang/rust/commits/c15127fe3ece95eacc9839458710d6e72bd014af", "html_url": "https://github.com/rust-lang/rust/commit/c15127fe3ece95eacc9839458710d6e72bd014af"}], "stats": {"total": 60, "additions": 30, "deletions": 30}, "files": [{"sha": "1f894c579b7fd76d384f894daee7f53a849a3608", "filename": "src/rustdoc/attr_pass.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Fattr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Fattr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_pass.rs?ref=3bfa4570393977ea01a216bd97350fdf1cbf2fdf", "patch": "@@ -154,7 +154,7 @@ fn merge_arg_attrs(\n     docs: [doc::argdoc],\n     attrs: [attr_parser::arg_attrs]\n ) -> [doc::argdoc] {\n-    util::anymap(docs) {|doc|\n+    par::anymap(docs) {|doc|\n         alt vec::find(attrs) {|attr|\n             attr.name == doc.name\n         } {\n@@ -239,7 +239,7 @@ fn fold_enum(\n     let doc = fold::default_seq_fold_enum(fold, doc);\n \n     {\n-        variants: util::anymap(doc.variants) {|variant|\n+        variants: par::anymap(doc.variants) {|variant|\n             let attrs = astsrv::exec(srv) {|ctxt|\n                 alt check ctxt.ast_map.get(doc.id()) {\n                   ast_map::node_item(@{\n@@ -288,7 +288,7 @@ fn fold_res(\n     let attrs = parse_item_attrs(srv, doc.id(), attr_parser::parse_res);\n \n     {\n-        args: util::anymap(doc.args) {|doc|\n+        args: par::anymap(doc.args) {|doc|\n             alt vec::find(attrs.args) {|attr|\n                 attr.name == doc.name\n             } {\n@@ -349,7 +349,7 @@ fn merge_method_attrs(\n           ast_map::node_item(@{\n             node: ast::item_iface(_, methods), _\n           }, _) {\n-            util::seqmap(methods) {|method|\n+            par::seqmap(methods) {|method|\n                 (method.ident,\n                  (attr_parser::parse_basic(method.attrs),\n                   attr_parser::parse_method(method.attrs)\n@@ -359,7 +359,7 @@ fn merge_method_attrs(\n           ast_map::node_item(@{\n             node: ast::item_impl(_, _, _, methods), _\n           }, _) {\n-            util::seqmap(methods) {|method|\n+            par::seqmap(methods) {|method|\n                 (method.ident,\n                  (attr_parser::parse_basic(method.attrs),\n                   attr_parser::parse_method(method.attrs)"}, {"sha": "42d5e62ffc72b7d971c97026051d2cdeda80e7b3", "filename": "src/rustdoc/desc_pass.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Fdesc_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Fdesc_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fdesc_pass.rs?ref=3bfa4570393977ea01a216bd97350fdf1cbf2fdf", "patch": "@@ -45,7 +45,7 @@ fn fold_fn(fold: fold::fold<op>, doc: doc::fndoc) -> doc::fndoc {\n     let doc = fold::default_seq_fold_fn(fold, doc);\n \n     {\n-        args: util::anymap(doc.args) {|doc|\n+        args: par::anymap(doc.args) {|doc|\n             {\n                 desc: maybe_apply_op(fold.ctxt, doc.desc)\n                 with doc\n@@ -64,7 +64,7 @@ fn fold_enum(fold: fold::fold<op>, doc: doc::enumdoc) -> doc::enumdoc {\n     let doc = fold::default_seq_fold_enum(fold, doc);\n \n     {\n-        variants: util::anymap(doc.variants) {|variant|\n+        variants: par::anymap(doc.variants) {|variant|\n             {\n                 desc: maybe_apply_op(fold.ctxt, variant.desc)\n                 with variant\n@@ -78,7 +78,7 @@ fn fold_res(fold: fold::fold<op>, doc: doc::resdoc) -> doc::resdoc {\n     let doc = fold::default_seq_fold_res(fold, doc);\n \n     {\n-        args: util::anymap(doc.args) {|arg|\n+        args: par::anymap(doc.args) {|arg|\n             {\n                 desc: maybe_apply_op(fold.ctxt, arg.desc)\n                 with arg\n@@ -98,11 +98,11 @@ fn fold_iface(fold: fold::fold<op>, doc: doc::ifacedoc) -> doc::ifacedoc {\n }\n \n fn apply_to_methods(op: op, docs: [doc::methoddoc]) -> [doc::methoddoc] {\n-    util::anymap(docs) {|doc|\n+    par::anymap(docs) {|doc|\n         {\n             brief: maybe_apply_op(op, doc.brief),\n             desc: maybe_apply_op(op, doc.desc),\n-            args: util::anymap(doc.args) {|doc|\n+            args: par::anymap(doc.args) {|doc|\n                 {\n                     desc: maybe_apply_op(op, doc.desc)\n                     with doc"}, {"sha": "f463852703edfc79de8c25ee37b3c52018143fe7", "filename": "src/rustdoc/desc_to_brief_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Fdesc_to_brief_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Fdesc_to_brief_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fdesc_to_brief_pass.rs?ref=3bfa4570393977ea01a216bd97350fdf1cbf2fdf", "patch": "@@ -41,7 +41,7 @@ fn fold_iface(fold: fold::fold<()>, doc: doc::ifacedoc) -> doc::ifacedoc {\n     let doc =fold::default_seq_fold_iface(fold, doc);\n \n     {\n-        methods: util::anymap(doc.methods) {|doc|\n+        methods: par::anymap(doc.methods) {|doc|\n             let (brief, desc) = modify(doc.brief, doc.desc);\n \n             {\n@@ -58,7 +58,7 @@ fn fold_impl(fold: fold::fold<()>, doc: doc::impldoc) -> doc::impldoc {\n     let doc =fold::default_seq_fold_impl(fold, doc);\n \n     {\n-        methods: util::anymap(doc.methods) {|doc|\n+        methods: par::anymap(doc.methods) {|doc|\n             let (brief, desc) = modify(doc.brief, doc.desc);\n \n             {"}, {"sha": "21f60fc8f6637a52672011634e22dcf2ab59246b", "filename": "src/rustdoc/extract.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Fextract.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Fextract.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fextract.rs?ref=3bfa4570393977ea01a216bd97350fdf1cbf2fdf", "patch": "@@ -112,7 +112,7 @@ fn nmoddoc_from_mod(\n ) -> doc::nmoddoc {\n     {\n         item: itemdoc,\n-        fns: util::seqmap(module.items) {|item|\n+        fns: par::seqmap(module.items) {|item|\n             let itemdoc = mk_itemdoc(item.id, item.ident);\n             alt item.node {\n               ast::native_item_fn(decl, _) {\n@@ -150,7 +150,7 @@ fn should_extract_fn_args() {\n }\n \n fn argdocs_from_args(args: [ast::arg]) -> [doc::argdoc] {\n-    util::seqmap(args, argdoc_from_arg)\n+    par::seqmap(args, argdoc_from_arg)\n }\n \n fn argdoc_from_arg(arg: ast::arg) -> doc::argdoc {\n@@ -188,7 +188,7 @@ fn enumdoc_from_enum(\n fn variantdocs_from_variants(\n     variants: [ast::variant]\n ) -> [doc::variantdoc] {\n-    util::seqmap(variants, variantdoc_from_variant)\n+    par::seqmap(variants, variantdoc_from_variant)\n }\n \n fn variantdoc_from_variant(variant: ast::variant) -> doc::variantdoc {\n@@ -242,7 +242,7 @@ fn ifacedoc_from_iface(\n ) -> doc::ifacedoc {\n     {\n         item: itemdoc,\n-        methods: util::seqmap(methods) {|method|\n+        methods: par::seqmap(methods) {|method|\n             {\n                 name: method.ident,\n                 brief: none,\n@@ -285,7 +285,7 @@ fn impldoc_from_impl(\n         item: itemdoc,\n         iface_ty: none,\n         self_ty: none,\n-        methods: util::seqmap(methods) {|method|\n+        methods: par::seqmap(methods) {|method|\n             {\n                 name: method.ident,\n                 brief: none,"}, {"sha": "6be24de0057ece06b1160d2d55e004e5a6b409ec", "filename": "src/rustdoc/fold.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ffold.rs?ref=3bfa4570393977ea01a216bd97350fdf1cbf2fdf", "patch": "@@ -153,7 +153,7 @@ fn default_any_fold_mod<T:send>(\n ) -> doc::moddoc {\n     {\n         item: fold.fold_item(fold, doc.item),\n-        items: util::anymap(doc.items) {|itemtag|\n+        items: par::anymap(doc.items) {|itemtag|\n             fold_itemtag(fold, itemtag)\n         }\n         with doc\n@@ -166,7 +166,7 @@ fn default_seq_fold_mod<T>(\n ) -> doc::moddoc {\n     {\n         item: fold.fold_item(fold, doc.item),\n-        items: util::seqmap(doc.items) {|itemtag|\n+        items: par::seqmap(doc.items) {|itemtag|\n             fold_itemtag(fold, itemtag)\n         }\n         with doc\n@@ -179,7 +179,7 @@ fn default_par_fold_mod<T:send>(\n ) -> doc::moddoc {\n     {\n         item: fold.fold_item(fold, doc.item),\n-        items: util::parmap(doc.items) {|itemtag|\n+        items: par::parmap(doc.items) {|itemtag|\n             fold_itemtag(fold, itemtag)\n         }\n         with doc\n@@ -192,7 +192,7 @@ fn default_any_fold_nmod<T:send>(\n ) -> doc::nmoddoc {\n     {\n         item: fold.fold_item(fold, doc.item),\n-        fns: util::anymap(doc.fns) {|fndoc|\n+        fns: par::anymap(doc.fns) {|fndoc|\n             fold.fold_fn(fold, fndoc)\n         }\n         with doc\n@@ -205,7 +205,7 @@ fn default_seq_fold_nmod<T>(\n ) -> doc::nmoddoc {\n     {\n         item: fold.fold_item(fold, doc.item),\n-        fns: util::seqmap(doc.fns) {|fndoc|\n+        fns: par::seqmap(doc.fns) {|fndoc|\n             fold.fold_fn(fold, fndoc)\n         }\n         with doc\n@@ -218,7 +218,7 @@ fn default_par_fold_nmod<T:send>(\n ) -> doc::nmoddoc {\n     {\n         item: fold.fold_item(fold, doc.item),\n-        fns: util::parmap(doc.fns) {|fndoc|\n+        fns: par::parmap(doc.fns) {|fndoc|\n             fold.fold_fn(fold, fndoc)\n         }\n         with doc"}, {"sha": "41b33688390c9602ad3627fd72cb04fb6ef34406", "filename": "src/rustdoc/markdown_pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Fmarkdown_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Fmarkdown_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fmarkdown_pass.rs?ref=3bfa4570393977ea01a216bd97350fdf1cbf2fdf", "patch": "@@ -228,7 +228,7 @@ fn write_sig(ctxt: ctxt, sig: option<str>) {\n \n fn code_block_indent(s: str) -> str {\n     let lines = str::lines_any(s);\n-    let indented = util::anymap(lines, { |line| #fmt(\"    %s\", line) });\n+    let indented = par::anymap(lines, { |line| #fmt(\"    %s\", line) });\n     str::connect(indented, \"\\n\")\n }\n "}, {"sha": "861dea83bc6fe404e2aa0e0c2ba4426c752227e1", "filename": "src/rustdoc/par.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Fpar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Fpar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fpar.rs?ref=3bfa4570393977ea01a216bd97350fdf1cbf2fdf", "previous_filename": "src/rustdoc/util.rs"}, {"sha": "5fbb24fc5c90aaf0ae81028835ec263ce0d655f1", "filename": "src/rustdoc/prune_undoc_details_pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Fprune_undoc_details_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Fprune_undoc_details_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fprune_undoc_details_pass.rs?ref=3bfa4570393977ea01a216bd97350fdf1cbf2fdf", "patch": "@@ -105,7 +105,7 @@ fn fold_iface(\n }\n \n fn prune_methods(docs: [doc::methoddoc]) -> [doc::methoddoc] {\n-    util::anymap(docs) {|doc|\n+    par::anymap(docs) {|doc|\n         {\n             args: prune_args(doc.args),\n             return: prune_return(doc.return)"}, {"sha": "e317ade9d16638e2baebecee1496206553c860c7", "filename": "src/rustdoc/rustdoc.rc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Frustdoc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Frustdoc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rc?ref=3bfa4570393977ea01a216bd97350fdf1cbf2fdf", "patch": "@@ -35,4 +35,4 @@ mod sort_pass;\n mod sort_item_name_pass;\n mod sort_item_type_pass;\n mod reexport_pass;\n-mod util;\n+mod par;"}, {"sha": "33eab67b1f861de0c2dbc71b194e899b890a051a", "filename": "src/rustdoc/tystr_pass.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Ftystr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Ftystr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ftystr_pass.rs?ref=3bfa4570393977ea01a216bd97350fdf1cbf2fdf", "patch": "@@ -165,7 +165,7 @@ fn get_arg_tys(srv: astsrv::srv, fn_id: doc::ast_id) -> [(str, str)] {\n }\n \n fn decl_arg_tys(decl: ast::fn_decl) -> [(str, str)] {\n-    util::seqmap(decl.inputs) {|arg|\n+    par::seqmap(decl.inputs) {|arg|\n         (arg.ident, pprust::ty_to_str(arg.ty))\n     }\n }\n@@ -217,7 +217,7 @@ fn fold_enum(\n     let srv = fold.ctxt;\n \n     {\n-        variants: util::anymap(doc.variants) {|variant|\n+        variants: par::anymap(doc.variants) {|variant|\n             let sig = astsrv::exec(srv) {|ctxt|\n                 alt check ctxt.ast_map.get(doc.id()) {\n                   ast_map::node_item(@{\n@@ -296,7 +296,7 @@ fn merge_methods(\n     item_id: doc::ast_id,\n     docs: [doc::methoddoc]\n ) -> [doc::methoddoc] {\n-    util::anymap(docs) {|doc|\n+    par::anymap(docs) {|doc|\n         {\n             args: merge_method_arg_tys(\n                 srv,"}, {"sha": "f7d6311690cec5f141f65fd43b7846e1b2fecd36", "filename": "src/rustdoc/unindent_pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Funindent_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bfa4570393977ea01a216bd97350fdf1cbf2fdf/src%2Frustdoc%2Funindent_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Funindent_pass.rs?ref=3bfa4570393977ea01a216bd97350fdf1cbf2fdf", "patch": "@@ -63,7 +63,7 @@ fn unindent(s: str) -> str {\n \n     if check vec::is_not_empty(lines) {\n         let unindented = [str::trim(vec::head(lines))]\n-            + util::anymap(vec::tail(lines)) {|line|\n+            + par::anymap(vec::tail(lines)) {|line|\n             if str::is_whitespace(line) {\n                 line\n             } else {"}]}