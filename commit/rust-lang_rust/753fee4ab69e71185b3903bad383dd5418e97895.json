{"sha": "753fee4ab69e71185b3903bad383dd5418e97895", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1M2ZlZTRhYjY5ZTcxMTg1YjM5MDNiYWQzODNkZDU0MThlOTc4OTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-20T07:22:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-20T07:22:38Z"}, "message": "Auto merge of #42495 - alexcrichton:new-stage0, r=Mark-Simulacrum\n\nBump to 1.20.0 and update stage0 compiler\n\nBetas are hot off the bots, let's get them while they're fresh.", "tree": {"sha": "822ee160eb43c6ed0b530bc8dfde9bc0e8631b86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/822ee160eb43c6ed0b530bc8dfde9bc0e8631b86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/753fee4ab69e71185b3903bad383dd5418e97895", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/753fee4ab69e71185b3903bad383dd5418e97895", "html_url": "https://github.com/rust-lang/rust/commit/753fee4ab69e71185b3903bad383dd5418e97895", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/753fee4ab69e71185b3903bad383dd5418e97895/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1143eb26a2e405cdccbf6789c89d4581ad969868", "url": "https://api.github.com/repos/rust-lang/rust/commits/1143eb26a2e405cdccbf6789c89d4581ad969868", "html_url": "https://github.com/rust-lang/rust/commit/1143eb26a2e405cdccbf6789c89d4581ad969868"}, {"sha": "be7ebdd512e8b4de29c0e0cf5aabf486e988867b", "url": "https://api.github.com/repos/rust-lang/rust/commits/be7ebdd512e8b4de29c0e0cf5aabf486e988867b", "html_url": "https://github.com/rust-lang/rust/commit/be7ebdd512e8b4de29c0e0cf5aabf486e988867b"}], "stats": {"total": 307, "additions": 24, "deletions": 283}, "files": [{"sha": "4adc0a1e3ca1035d3fdb8936b3e34b08dfedb477", "filename": "src/Cargo.lock", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -329,7 +329,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libz-sys 1.0.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libz-sys 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"openssl-sys 0.9.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"vcpkg 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -621,7 +621,7 @@ dependencies = [\n  \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libssh2-sys 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libz-sys 1.0.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libz-sys 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"openssl-sys 0.9.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -633,14 +633,14 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cmake 0.1.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libz-sys 1.0.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libz-sys 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"openssl-sys 0.9.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pkg-config 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"libz-sys\"\n-version = \"1.0.14\"\n+version = \"1.0.16\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"gcc 0.3.51 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2071,7 +2071,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum libc 0.2.24 (registry+https://github.com/rust-lang/crates.io-index)\" = \"38f5c2b18a287cf78b4097db62e20f43cace381dc76ae5c0a3073067f78b7ddc\"\n \"checksum libgit2-sys 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)\" = \"df18a822100352d9863b302faf6f8f25c0e77f0e60feb40e5dbe1238b7f13b1d\"\n \"checksum libssh2-sys 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0db4ec23611747ef772db1c4d650f8bd762f07b461727ec998f953c614024b75\"\n-\"checksum libz-sys 1.0.14 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e70195f655a44af531ad7135b1ec2a0a82522b451fe09730fbb25674a85996e7\"\n+\"checksum libz-sys 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3fdd64ef8ee652185674455c1d450b83cbc8ad895625d543b5324d923f82e4d8\"\n \"checksum log 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"880f77541efa6e5cc74e76910c9884d9859683118839d6a1dc3b11e63512565b\"\n \"checksum lzma-sys 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"013fa6506eb7d26040c46dab9ecb7ccb4e2896b5bf24a9d65932501ea9f67af8\"\n \"checksum matches 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"100aabe6b8ff4e4a7e32c1c13523379802df0772b82466207ac25b013f193376\""}, {"sha": "12152fc439901cea052eddc52a04f8a5ab901358", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -118,13 +118,6 @@ fn main() {\n             cmd.arg(\"-Cprefer-dynamic\");\n         }\n \n-        // Pass the `rustbuild` feature flag to crates which rustbuild is\n-        // building. See the comment in bootstrap/lib.rs where this env var is\n-        // set for more details.\n-        if env::var_os(\"RUSTBUILD_UNSTABLE\").is_some() {\n-            cmd.arg(\"--cfg\").arg(\"rustbuild\");\n-        }\n-\n         // Help the libc crate compile by assisting it in finding the MUSL\n         // native libraries.\n         if let Some(s) = env::var_os(\"MUSL_ROOT\") {\n@@ -218,11 +211,7 @@ fn main() {\n                 // do that we pass a weird flag to the compiler to get it to do\n                 // so. Note that this is definitely a hack, and we should likely\n                 // flesh out rpath support more fully in the future.\n-                //\n-                // FIXME: remove condition after next stage0\n-                if stage != \"0\" {\n-                    cmd.arg(\"-Z\").arg(\"osx-rpath-install-name\");\n-                }\n+                cmd.arg(\"-Z\").arg(\"osx-rpath-install-name\");\n                 Some(\"-Wl,-rpath,@loader_path/../lib\")\n             } else if !target.contains(\"windows\") {\n                 Some(\"-Wl,-rpath,$ORIGIN/../lib\")\n@@ -242,12 +231,8 @@ fn main() {\n         // Force all crates compiled by this compiler to (a) be unstable and (b)\n         // allow the `rustc_private` feature to link to other unstable crates\n         // also in the sysroot.\n-        //\n-        // FIXME: remove condition after next stage0\n         if env::var_os(\"RUSTC_FORCE_UNSTABLE\").is_some() {\n-            if stage != \"0\" {\n-                cmd.arg(\"-Z\").arg(\"force-unstable-if-unmarked\");\n-            }\n+            cmd.arg(\"-Z\").arg(\"force-unstable-if-unmarked\");\n         }\n     }\n "}, {"sha": "1d3b77916d601e9e4312d991831a378f56351775", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -385,6 +385,7 @@ def build_bootstrap(self):\n         if self.clean and os.path.exists(build_dir):\n             shutil.rmtree(build_dir)\n         env = os.environ.copy()\n+        env[\"RUSTC_BOOTSTRAP\"] = '1'\n         env[\"CARGO_TARGET_DIR\"] = build_dir\n         env[\"RUSTC\"] = self.rustc()\n         env[\"LD_LIBRARY_PATH\"] = os.path.join(self.bin_root(), \"lib\") + \\"}, {"sha": "4664b1f765e630a9595a3f985f709b5ae3ff2796", "filename": "src/bootstrap/channel.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Fbootstrap%2Fchannel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Fbootstrap%2Fchannel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fchannel.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -23,7 +23,7 @@ use build_helper::output;\n use Build;\n \n // The version number\n-pub const CFG_RELEASE_NUM: &'static str = \"1.19.0\";\n+pub const CFG_RELEASE_NUM: &'static str = \"1.20.0\";\n \n // An optional number to put after the label, e.g. '.2' -> '-beta.2'\n // Be sure to make this starts with a dot to conform to semver pre-release"}, {"sha": "068efe18cce3d74737ac3bf792dfb59508f2e023", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -672,6 +672,7 @@ pub fn bootstrap(build: &Build) {\n     cmd.arg(\"test\")\n        .current_dir(build.src.join(\"src/bootstrap\"))\n        .env(\"CARGO_TARGET_DIR\", build.out.join(\"bootstrap\"))\n+       .env(\"RUSTC_BOOTSTRAP\", \"1\")\n        .env(\"RUSTC\", &build.rustc);\n     if build.flags.cmd.no_fail_fast() {\n         cmd.arg(\"--no-fail-fast\");"}, {"sha": "ca8cc3212d7c734743de2c1dde5af3256ca9d753", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -429,29 +429,6 @@ impl Build {\n                  .env(\"RUSTC_SNAPSHOT_LIBDIR\", self.rustc_libdir(compiler));\n         }\n \n-        // There are two invariants we must maintain:\n-        // * stable crates cannot depend on unstable crates (general Rust rule),\n-        // * crates that end up in the sysroot must be unstable (rustbuild rule).\n-        //\n-        // In order to do enforce the latter, we pass the env var\n-        // `RUSTBUILD_UNSTABLE` down the line for any crates which will end up\n-        // in the sysroot. We read this in bootstrap/bin/rustc.rs and if it is\n-        // set, then we pass the `rustbuild` feature to rustc when building the\n-        // the crate.\n-        //\n-        // In turn, crates that can be used here should recognise the `rustbuild`\n-        // feature and opt-in to `rustc_private`.\n-        //\n-        // We can't always pass `rustbuild` because crates which are outside of\n-        // the compiler, libs, and tests are stable and we don't want to make\n-        // their deps unstable (since this would break the first invariant\n-        // above).\n-        //\n-        // FIXME: remove this after next stage0\n-        if mode != Mode::Tool && stage == 0 {\n-            cargo.env(\"RUSTBUILD_UNSTABLE\", \"1\");\n-        }\n-\n         // Ignore incremental modes except for stage0, since we're\n         // not guaranteeing correctness across builds if the compiler\n         // is changing under your feet.`"}, {"sha": "a5e6965faec42151041a8ad48f65dda7a6769fd2", "filename": "src/doc/unstable-book/src/library-features/question-mark-carrier.md", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1143eb26a2e405cdccbf6789c89d4581ad969868/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fquestion-mark-carrier.md", "raw_url": "https://github.com/rust-lang/rust/raw/1143eb26a2e405cdccbf6789c89d4581ad969868/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fquestion-mark-carrier.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fquestion-mark-carrier.md?ref=1143eb26a2e405cdccbf6789c89d4581ad969868", "patch": "@@ -1,13 +0,0 @@\n-# `question_mark_carrier`\n-\n-The tracking issue for this feature is: [#31436]\n-\n-[#31436]: https://github.com/rust-lang/rust/issues/31436\n-\n-------------------------\n-\n-This feature has been superseded by [`try_trait`][try_trait].\n-\n-It exists only in stage0 for bootstrapping.\n-\n-[try_trait]: library-features/try-trait.html"}, {"sha": "23677bca9f1ae8a551627999bdc8e515c2992582", "filename": "src/liballoc_jemalloc/build.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Fliballoc_jemalloc%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Fliballoc_jemalloc%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_jemalloc%2Fbuild.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -154,6 +154,11 @@ fn main() {\n     make.current_dir(&native.out_dir)\n         .arg(\"build_lib_static\");\n \n+    // These are intended for mingw32-make which we don't use\n+    if cfg!(windows) {\n+        make.env_remove(\"MAKEFLAGS\").env_remove(\"MFLAGS\");\n+    }\n+\n     // mingw make seems... buggy? unclear...\n     if !host.contains(\"windows\") {\n         make.arg(\"-j\")"}, {"sha": "8e3b3f2074da953386ddfa2f7b789189c9942856", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -19,7 +19,6 @@\n //! objects of a single type.\n \n #![crate_name = \"arena\"]\n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n #![crate_type = \"rlib\"]\n #![crate_type = \"dylib\"]\n #![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n@@ -33,7 +32,6 @@\n #![feature(dropck_eyepatch)]\n #![feature(generic_param_attrs)]\n #![feature(needs_drop)]\n-#![cfg_attr(stage0, feature(staged_api))]\n #![cfg_attr(test, feature(test))]\n \n #![allow(deprecated)]"}, {"sha": "981ab5b6c462f5c8f54d29918e9e64d76aee6b45", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -572,7 +572,6 @@ extern \"rust-intrinsic\" {\n     ///\n     /// The `locality` argument must be a constant integer and is a temporal locality specifier\n     /// ranging from (0) - no locality, to (3) - extremely local keep in cache\n-    #[cfg(not(stage0))]\n     pub fn prefetch_read_data<T>(data: *const T, locality: i32);\n     /// The `prefetch` intrinsic is a hint to the code generator to insert a prefetch instruction\n     /// if supported; otherwise, it is a noop.\n@@ -581,7 +580,6 @@ extern \"rust-intrinsic\" {\n     ///\n     /// The `locality` argument must be a constant integer and is a temporal locality specifier\n     /// ranging from (0) - no locality, to (3) - extremely local keep in cache\n-    #[cfg(not(stage0))]\n     pub fn prefetch_write_data<T>(data: *const T, locality: i32);\n     /// The `prefetch` intrinsic is a hint to the code generator to insert a prefetch instruction\n     /// if supported; otherwise, it is a noop.\n@@ -590,7 +588,6 @@ extern \"rust-intrinsic\" {\n     ///\n     /// The `locality` argument must be a constant integer and is a temporal locality specifier\n     /// ranging from (0) - no locality, to (3) - extremely local keep in cache\n-    #[cfg(not(stage0))]\n     pub fn prefetch_read_instruction<T>(data: *const T, locality: i32);\n     /// The `prefetch` intrinsic is a hint to the code generator to insert a prefetch instruction\n     /// if supported; otherwise, it is a noop.\n@@ -599,20 +596,9 @@ extern \"rust-intrinsic\" {\n     ///\n     /// The `locality` argument must be a constant integer and is a temporal locality specifier\n     /// ranging from (0) - no locality, to (3) - extremely local keep in cache\n-    #[cfg(not(stage0))]\n     pub fn prefetch_write_instruction<T>(data: *const T, locality: i32);\n }\n \n-// Empty bootstrap implementations for stage0 compilation\n-#[cfg(stage0)]\n-pub fn prefetch_read_data<T>(_data: *const T, _locality: i32) { /* EMPTY */ }\n-#[cfg(stage0)]\n-pub fn prefetch_write_data<T>(_data: *const T, _locality: i32) { /* EMPTY */ }\n-#[cfg(stage0)]\n-pub fn prefetch_read_instruction<T>(_data: *const T, _locality: i32) { /* EMPTY */ }\n-#[cfg(stage0)]\n-pub fn prefetch_write_instruction<T>(_data: *const T, _locality: i32) { /* EMPTY */ }\n-\n extern \"rust-intrinsic\" {\n \n     pub fn atomic_fence();"}, {"sha": "a78f4fe28a6b411078325ada32db8f4381561c3c", "filename": "src/libcore/ops/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibcore%2Fops%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibcore%2Fops%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Fmod.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -186,9 +186,6 @@ pub use self::range::{Range, RangeFrom, RangeFull, RangeTo};\n #[unstable(feature = \"inclusive_range\", reason = \"recently added, follows RFC\", issue = \"28237\")]\n pub use self::range::{RangeInclusive, RangeToInclusive};\n \n-#[unstable(feature = \"question_mark_carrier\", issue = \"31436\")]\n-#[cfg(stage0)]\n-pub use self::try::Carrier;\n #[unstable(feature = \"try_trait\", issue = \"42327\")]\n pub use self::try::Try;\n "}, {"sha": "2f0639d1a6031eae3e1594efacd8e1378aaeb434", "filename": "src/libcore/ops/try.rs", "status": "modified", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibcore%2Fops%2Ftry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibcore%2Fops%2Ftry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Ftry.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -8,70 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-/// This trait has been superseded by the `Try` trait, but must remain\n-/// here as `?` is still lowered to it in stage0 .\n-#[cfg(stage0)]\n-#[unstable(feature = \"question_mark_carrier\", issue = \"31436\")]\n-pub trait Carrier {\n-    /// The type of the value when computation succeeds.\n-    type Success;\n-    /// The type of the value when computation errors out.\n-    type Error;\n-\n-    /// Create a `Carrier` from a success value.\n-    fn from_success(_: Self::Success) -> Self;\n-\n-    /// Create a `Carrier` from an error value.\n-    fn from_error(_: Self::Error) -> Self;\n-\n-    /// Translate this `Carrier` to another implementation of `Carrier` with the\n-    /// same associated types.\n-    fn translate<T>(self) -> T where T: Carrier<Success=Self::Success, Error=Self::Error>;\n-}\n-\n-#[cfg(stage0)]\n-#[unstable(feature = \"question_mark_carrier\", issue = \"31436\")]\n-impl<U, V> Carrier for Result<U, V> {\n-    type Success = U;\n-    type Error = V;\n-\n-    fn from_success(u: U) -> Result<U, V> {\n-        Ok(u)\n-    }\n-\n-    fn from_error(e: V) -> Result<U, V> {\n-        Err(e)\n-    }\n-\n-    fn translate<T>(self) -> T\n-        where T: Carrier<Success=U, Error=V>\n-    {\n-        match self {\n-            Ok(u) => T::from_success(u),\n-            Err(e) => T::from_error(e),\n-        }\n-    }\n-}\n-\n-struct _DummyErrorType;\n-\n-impl Try for _DummyErrorType {\n-    type Ok = ();\n-    type Error = ();\n-\n-    fn into_result(self) -> Result<Self::Ok, Self::Error> {\n-        Ok(())\n-    }\n-\n-    fn from_ok(_: ()) -> _DummyErrorType {\n-        _DummyErrorType\n-    }\n-\n-    fn from_error(_: ()) -> _DummyErrorType {\n-        _DummyErrorType\n-    }\n-}\n-\n /// A trait for customizing the behaviour of the `?` operator.\n ///\n /// A type implementing `Try` is one that has a canonical way to view it"}, {"sha": "ce5da9ec2d521494cd1552ce2dcdbc74b3f3fefb", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -1030,47 +1030,38 @@ impl<T> SliceIndex<[T]> for ops::RangeInclusive<usize> {\n     }\n }\n \n-#[cfg(stage0)] // The bootstrap compiler has a different `...` desugar\n-fn inclusive(start: usize, end: usize) -> ops::RangeInclusive<usize> {\n-    ops::RangeInclusive { start, end }\n-}\n-#[cfg(not(stage0))]\n-fn inclusive(start: usize, end: usize) -> ops::RangeInclusive<usize> {\n-    start...end\n-}\n-\n #[unstable(feature = \"inclusive_range\", reason = \"recently added, follows RFC\", issue = \"28237\")]\n impl<T> SliceIndex<[T]> for ops::RangeToInclusive<usize> {\n     type Output = [T];\n \n     #[inline]\n     fn get(self, slice: &[T]) -> Option<&[T]> {\n-        inclusive(0, self.end).get(slice)\n+        (0...self.end).get(slice)\n     }\n \n     #[inline]\n     fn get_mut(self, slice: &mut [T]) -> Option<&mut [T]> {\n-        inclusive(0, self.end).get_mut(slice)\n+        (0...self.end).get_mut(slice)\n     }\n \n     #[inline]\n     unsafe fn get_unchecked(self, slice: &[T]) -> &[T] {\n-        inclusive(0, self.end).get_unchecked(slice)\n+        (0...self.end).get_unchecked(slice)\n     }\n \n     #[inline]\n     unsafe fn get_unchecked_mut(self, slice: &mut [T]) -> &mut [T] {\n-        inclusive(0, self.end).get_unchecked_mut(slice)\n+        (0...self.end).get_unchecked_mut(slice)\n     }\n \n     #[inline]\n     fn index(self, slice: &[T]) -> &[T] {\n-        inclusive(0, self.end).index(slice)\n+        (0...self.end).index(slice)\n     }\n \n     #[inline]\n     fn index_mut(self, slice: &mut [T]) -> &mut [T] {\n-        inclusive(0, self.end).index_mut(slice)\n+        (0...self.end).index_mut(slice)\n     }\n }\n "}, {"sha": "bc34e7810be3d7abd895ff51933397494e8a7061", "filename": "src/libflate/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibflate%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibflate%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibflate%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -15,7 +15,6 @@\n //! [mz]: https://code.google.com/p/miniz/\n \n #![crate_name = \"flate\"]\n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n #![crate_type = \"rlib\"]\n #![crate_type = \"dylib\"]\n #![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n@@ -25,7 +24,6 @@\n #![deny(warnings)]\n \n #![feature(libc)]\n-#![cfg_attr(stage0, feature(staged_api))]\n #![feature(unique)]\n #![cfg_attr(test, feature(rand))]\n "}, {"sha": "493ce04f672a6dee01ae19b1e331dce09f2375fe", "filename": "src/libfmt_macros/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibfmt_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibfmt_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfmt_macros%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -15,7 +15,6 @@\n //! generated instead.\n \n #![crate_name = \"fmt_macros\"]\n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n #![crate_type = \"rlib\"]\n #![crate_type = \"dylib\"]\n #![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n@@ -25,9 +24,6 @@\n        test(attr(deny(warnings))))]\n #![deny(warnings)]\n \n-#![cfg_attr(stage0, feature(staged_api))]\n-#![feature(rustc_private)]\n-\n pub use self::Piece::*;\n pub use self::Position::*;\n pub use self::Alignment::*;"}, {"sha": "f41fc5aa29fa42339a45fed41543b489f1c5f168", "filename": "src/libgetopts/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibgetopts%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibgetopts%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgetopts%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -78,9 +78,6 @@\n //! ```\n \n #![crate_name = \"getopts\"]\n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\",\n-            reason = \"use the crates.io `getopts` library instead\",\n-            issue = \"27812\"))]\n #![crate_type = \"rlib\"]\n #![crate_type = \"dylib\"]\n #![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n@@ -91,7 +88,6 @@\n \n #![deny(missing_docs)]\n #![deny(warnings)]\n-#![cfg_attr(stage0, feature(staged_api))]\n \n use self::Name::*;\n use self::HasArg::*;"}, {"sha": "6a5edc9f9e90f332d5d6c01de86854689ab550ce", "filename": "src/libgraphviz/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibgraphviz%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibgraphviz%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgraphviz%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -284,8 +284,6 @@\n //! * [DOT language](http://www.graphviz.org/doc/info/lang.html)\n \n #![crate_name = \"graphviz\"]\n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(staged_api))]\n #![crate_type = \"rlib\"]\n #![crate_type = \"dylib\"]\n #![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\","}, {"sha": "d1bc0966eb567188dbc15d2e6c39f6a82eedf64f", "filename": "src/libproc_macro_plugin/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibproc_macro_plugin%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibproc_macro_plugin%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro_plugin%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -72,7 +72,6 @@\n //! }\n //! ```\n #![crate_name = \"proc_macro_plugin\"]\n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n #![feature(plugin_registrar)]\n #![crate_type = \"dylib\"]\n #![crate_type = \"rlib\"]\n@@ -81,9 +80,7 @@\n        html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![deny(warnings)]\n \n-#![cfg_attr(stage0, feature(staged_api))]\n #![feature(rustc_diagnostic_macros)]\n-#![cfg_attr(stage0, feature(rustc_private))]\n \n extern crate rustc_plugin;\n extern crate syntax;"}, {"sha": "7be8c8f5e3f0b8b3a400b0fc65a57d9dd6ca9051", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -42,11 +42,6 @@\n #![feature(sort_unstable)]\n #![feature(trace_macros)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-#![cfg_attr(stage0, feature(loop_break_value))]\n-\n #![recursion_limit=\"256\"]\n \n extern crate arena;"}, {"sha": "c776f28ecd0ba68c619d6dc81491279f2b2164ac", "filename": "src/librustc_back/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_back%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_back%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -35,10 +35,6 @@\n #![feature(rand)]\n #![cfg_attr(test, feature(rand))]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n extern crate syntax;\n extern crate libc;\n extern crate serialize;"}, {"sha": "7576d9eeb3f750432abff625bb239fb9a7c8ad5a", "filename": "src/librustc_bitflags/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_bitflags%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_bitflags%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_bitflags%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -14,8 +14,6 @@\n #![crate_type = \"rlib\"]\n #![no_std]\n #![deny(warnings)]\n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(staged_api))]\n \n //! A typesafe bitmask flag generator.\n "}, {"sha": "9c980ddf08acef195b0e574c4aa858e4d83c7b1c", "filename": "src/librustc_borrowck/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_borrowck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_borrowck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -23,10 +23,6 @@\n #![feature(associated_consts)]\n #![feature(nonzero)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;\n extern crate syntax_pos;"}, {"sha": "5a61f35ed1ce96bec0cedc32676cc8ced801fe4a", "filename": "src/librustc_const_eval/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_const_eval%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_const_eval%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -29,10 +29,6 @@\n #![feature(const_fn)]\n #![feature(i128_type)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n extern crate arena;\n #[macro_use] extern crate syntax;\n #[macro_use] extern crate log;"}, {"sha": "0dce0e1fb026f0ab7f180d67fd92291af82242d1", "filename": "src/librustc_const_math/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_const_math%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_const_math%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_math%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -26,10 +26,6 @@\n #![feature(i128)]\n #![feature(i128_type)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n extern crate syntax;\n \n extern crate serialize as rustc_serialize; // used by deriving"}, {"sha": "d63b4c9c31b5bc8081c76593cd2e927a4d9de09d", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -37,9 +37,6 @@\n #![feature(specialization)]\n #![feature(manually_drop)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n #![cfg_attr(stage0, feature(struct_field_attributes))]\n \n #![cfg_attr(unix, feature(libc))]"}, {"sha": "cf5d963ff7344d2ee29221ecd58a1705455eb15e", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -28,11 +28,6 @@\n #![feature(rustc_diagnostic_macros)]\n #![feature(set_stdio)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-#![cfg_attr(stage0, feature(loop_break_value))]\n-\n extern crate arena;\n extern crate getopts;\n extern crate graphviz;"}, {"sha": "ada1c632bc014a2e2489515d5b087ee8d4c97af0", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -22,10 +22,6 @@\n #![feature(libc)]\n #![feature(conservative_impl_trait)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n extern crate term;\n extern crate libc;\n extern crate serialize as rustc_serialize;"}, {"sha": "5bd7a24bdafb246e77ccbfdb8316a70533e407e2", "filename": "src/librustc_incremental/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_incremental%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_incremental%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -22,10 +22,6 @@\n #![feature(conservative_impl_trait)]\n #![feature(sort_unstable)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n extern crate graphviz;\n #[macro_use] extern crate rustc;\n extern crate rustc_data_structures;"}, {"sha": "f5c43c7b57d2c309ff5301dcd5d5ebadf857aa79", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -35,10 +35,6 @@\n #![feature(rustc_diagnostic_macros)]\n #![feature(slice_patterns)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n #[macro_use]\n extern crate syntax;\n #[macro_use]"}, {"sha": "bb555077cdb969f0f027911e7fa2343b4794e8c7", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -28,10 +28,6 @@\n #![feature(link_args)]\n #![feature(static_nobundle)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n extern crate libc;\n #[macro_use]\n #[no_link]"}, {"sha": "9439bb4a3634c50696b5de89ea591c51388acd5f", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -26,9 +26,6 @@\n #![feature(specialization)]\n #![feature(discriminant_value)]\n #![feature(rustc_private)]\n-\n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(staged_api))]\n #![feature(sort_unstable)]\n \n #[macro_use]"}, {"sha": "bfa31c052e4edeb3dbdf2a65c9c17ef189842997", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -27,10 +27,6 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n #![feature(placement_in_syntax)]\n #![feature(collection_placement)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n #[macro_use] extern crate log;\n extern crate graphviz as dot;\n #[macro_use]"}, {"sha": "3949152e84896eb40087840a8fbe2a6493d8df13", "filename": "src/librustc_passes/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_passes%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_passes%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -24,10 +24,6 @@\n \n #![feature(rustc_diagnostic_macros)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n #[macro_use]\n extern crate rustc;\n extern crate rustc_const_eval;"}, {"sha": "347708a4f9baddd31531a5488711ae99e8a00f04", "filename": "src/librustc_platform_intrinsics/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_platform_intrinsics%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_platform_intrinsics%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_platform_intrinsics%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -9,10 +9,8 @@\n // except according to those terms.\n \n #![crate_name = \"rustc_platform_intrinsics\"]\n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n #![crate_type = \"dylib\"]\n #![crate_type = \"rlib\"]\n-#![cfg_attr(stage0, feature(staged_api))]\n #![deny(warnings)]\n #![allow(bad_style)]\n "}, {"sha": "d43625e3c23ff7f6e88dd65e56f6892a98a6b966", "filename": "src/librustc_plugin/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_plugin%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_plugin%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -60,10 +60,6 @@\n \n #![feature(rustc_diagnostic_macros)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n #[macro_use] extern crate syntax;\n \n extern crate rustc;"}, {"sha": "fb7258d42662253c012e2e08890af8e59236c773", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -18,10 +18,6 @@\n \n #![feature(rustc_diagnostic_macros)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n extern crate rustc;\n #[macro_use] extern crate syntax;\n extern crate syntax_pos;"}, {"sha": "50ff23453a1b4d4da3bf5b5a28a1554861873c11", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -19,10 +19,6 @@\n #![feature(associated_consts)]\n #![feature(rustc_diagnostic_macros)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n #[macro_use]\n extern crate log;\n #[macro_use]"}, {"sha": "f54973e08975cd04c44a8dcaea7abbb3414491e2", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -19,10 +19,6 @@\n #![feature(custom_attribute)]\n #![allow(unused_attributes)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n #[macro_use] extern crate rustc;\n \n #[macro_use] extern crate log;"}, {"sha": "c808a6597c836473eed315457b7af59c40c7884e", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -36,10 +36,6 @@\n #![feature(conservative_impl_trait)]\n #![feature(command_envs)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n use rustc::dep_graph::WorkProduct;\n use syntax_pos::symbol::Symbol;\n "}, {"sha": "9e99af633d517579ee64c07c23de9745a1e95f6c", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -82,11 +82,6 @@ This API is completely unstable and subject to change.\n #![feature(rustc_diagnostic_macros)]\n #![feature(slice_patterns)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-#![cfg_attr(stage0, feature(loop_break_value))]\n-\n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;\n extern crate syntax_pos;"}, {"sha": "f0b16ccf97531ccc6a2274be6b483530a840f591", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -26,10 +26,6 @@\n #![feature(unicode)]\n #![feature(vec_remove_item)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n extern crate arena;\n extern crate getopts;\n extern crate env_logger;"}, {"sha": "c3107d1f190c2b3afbc7d249bd358a791f8fa7a8", "filename": "src/libserialize/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibserialize%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibserialize%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -15,9 +15,6 @@ Core encoding and decoding interfaces.\n */\n \n #![crate_name = \"serialize\"]\n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\",\n-            reason = \"deprecated in favor of rustc-serialize on crates.io\",\n-            issue = \"27812\"))]\n #![crate_type = \"rlib\"]\n #![crate_type = \"dylib\"]\n #![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n@@ -31,7 +28,6 @@ Core encoding and decoding interfaces.\n #![feature(core_intrinsics)]\n #![feature(i128_type)]\n #![feature(specialization)]\n-#![cfg_attr(stage0, feature(staged_api))]\n #![cfg_attr(test, feature(test))]\n \n pub use self::serialize::{Decoder, Encoder, Decodable, Encodable};"}, {"sha": "a8338fccb6b10e5761b6ba5889a8bee5c8823a23", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -27,10 +27,6 @@\n #![feature(rustc_diagnostic_macros)]\n #![feature(i128_type)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n extern crate serialize;\n #[macro_use] extern crate log;\n #[macro_use] extern crate bitflags;"}, {"sha": "2016fc4fbe1531ceffa9d79c3d96c0b8525fe410", "filename": "src/libsyntax_ext/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibsyntax_ext%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibsyntax_ext%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -20,10 +20,6 @@\n \n #![feature(proc_macro_internals)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n extern crate fmt_macros;\n extern crate log;\n #[macro_use]"}, {"sha": "bb62efd376a0b8247e9bf3165b1adc06fdecddab", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -29,17 +29,13 @@\n #![allow(unused_attributes)]\n #![feature(specialization)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(rustc_private))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n use std::borrow::Cow;\n use std::cell::{Cell, RefCell};\n-use std::ops::{Add, Sub};\n-use std::rc::Rc;\n use std::cmp;\n use std::fmt;\n use std::hash::Hasher;\n+use std::ops::{Add, Sub};\n+use std::rc::Rc;\n \n use rustc_data_structures::stable_hasher::StableHasher;\n "}, {"sha": "753dfbe4cee013f791b5aa6722eaa7c5d128bcea", "filename": "src/libterm/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibterm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Flibterm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Flib.rs?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -57,9 +57,6 @@\n #![feature(custom_attribute)]\n #![allow(unused_attributes)]\n \n-#![cfg_attr(stage0, unstable(feature = \"rustc_private\", issue = \"27812\"))]\n-#![cfg_attr(stage0, feature(staged_api))]\n-\n use std::io::prelude::*;\n \n pub use terminfo::TerminfoTerminal;"}, {"sha": "12a56ba48e4a67b1f22f2bd046d88ac0d73a28c1", "filename": "src/stage0.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/753fee4ab69e71185b3903bad383dd5418e97895/src%2Fstage0.txt", "raw_url": "https://github.com/rust-lang/rust/raw/753fee4ab69e71185b3903bad383dd5418e97895/src%2Fstage0.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstage0.txt?ref=753fee4ab69e71185b3903bad383dd5418e97895", "patch": "@@ -12,7 +12,7 @@\n # source tarball for a stable release you'll likely see `1.x.0` for rustc and\n # `0.x.0` for Cargo where they were released on `date`.\n \n-date: 2017-04-25\n+date: 2017-06-15\n rustc: beta\n cargo: beta\n "}]}