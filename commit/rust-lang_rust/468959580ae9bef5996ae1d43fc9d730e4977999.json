{"sha": "468959580ae9bef5996ae1d43fc9d730e4977999", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2ODk1OTU4MGFlOWJlZjU5OTZhZTFkNDNmYzlkNzMwZTQ5Nzc5OTk=", "commit": {"author": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-12-23T10:28:24Z"}, "committer": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2016-01-12T07:43:52Z"}, "message": "HW_AVAILCPU is unavailable under openbsd\n\ndefine `num_cpus()` function for openbsd that use `HW_NCPU` for grabbing\nthe current number of cpus that could be used.", "tree": {"sha": "8ce71c91f2628ed77c41153a6b45673c414f962b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ce71c91f2628ed77c41153a6b45673c414f962b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/468959580ae9bef5996ae1d43fc9d730e4977999", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/468959580ae9bef5996ae1d43fc9d730e4977999", "html_url": "https://github.com/rust-lang/rust/commit/468959580ae9bef5996ae1d43fc9d730e4977999", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/468959580ae9bef5996ae1d43fc9d730e4977999/comments", "author": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb3999cd83a3fbfbd79aaeef3a295aff46c9ea14", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb3999cd83a3fbfbd79aaeef3a295aff46c9ea14", "html_url": "https://github.com/rust-lang/rust/commit/cb3999cd83a3fbfbd79aaeef3a295aff46c9ea14"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "dcc344c4ffd2140f6d6b9965aba5c936bbd12924", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/468959580ae9bef5996ae1d43fc9d730e4977999/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/468959580ae9bef5996ae1d43fc9d730e4977999/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=468959580ae9bef5996ae1d43fc9d730e4977999", "patch": "@@ -919,7 +919,6 @@ fn get_concurrency() -> usize {\n     #[cfg(any(target_os = \"freebsd\",\n               target_os = \"dragonfly\",\n               target_os = \"bitrig\",\n-              target_os = \"openbsd\",\n               target_os = \"netbsd\"))]\n     fn num_cpus() -> usize {\n         let mut cpus: libc::c_uint = 0;\n@@ -946,6 +945,24 @@ fn get_concurrency() -> usize {\n         }\n         cpus as usize\n     }\n+\n+    #[cfg(target_os = \"openbsd\")]\n+    fn num_cpus() -> usize {\n+        let mut cpus: libc::c_uint = 0;\n+        let mut cpus_size = std::mem::size_of_val(&cpus);\n+        let mut mib = [libc::CTL_HW, libc::HW_NCPU, 0, 0];\n+\n+        unsafe {\n+            libc::sysctl(mib.as_mut_ptr(), 2,\n+                         &mut cpus as *mut _ as *mut _,\n+                         &mut cpus_size as *mut _ as *mut _,\n+                         0 as *mut _, 0);\n+        }\n+        if cpus < 1 {\n+            cpus = 1;\n+        }\n+        cpus as usize\n+    }\n }\n \n pub fn filter_tests(opts: &TestOpts, tests: Vec<TestDescAndFn>) -> Vec<TestDescAndFn> {"}]}