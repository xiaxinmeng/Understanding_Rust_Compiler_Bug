{"sha": "9b0c1ebc183bbf0fab5fbbe5ac8b2f94e5e56b87", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliMGMxZWJjMTgzYmJmMGZhYjVmYmJlNWFjOGIyZjk0ZTVlNTZiODc=", "commit": {"author": {"name": "Yoshitomo Nakanishi", "email": "yurayura.rounin.3@gmail.com", "date": "2021-02-16T09:07:09Z"}, "committer": {"name": "Yoshitomo Nakanishi", "email": "yurayura.rounin.3@gmail.com", "date": "2021-02-16T09:07:09Z"}, "message": "Change to span_lint_and_sugg from span_lint_and_help", "tree": {"sha": "04139d3c923e86affde2ada59aabb3f1e45f9e09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04139d3c923e86affde2ada59aabb3f1e45f9e09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b0c1ebc183bbf0fab5fbbe5ac8b2f94e5e56b87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b0c1ebc183bbf0fab5fbbe5ac8b2f94e5e56b87", "html_url": "https://github.com/rust-lang/rust/commit/9b0c1ebc183bbf0fab5fbbe5ac8b2f94e5e56b87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b0c1ebc183bbf0fab5fbbe5ac8b2f94e5e56b87/comments", "author": {"login": "Y-Nak", "id": 6376004, "node_id": "MDQ6VXNlcjYzNzYwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6376004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Y-Nak", "html_url": "https://github.com/Y-Nak", "followers_url": "https://api.github.com/users/Y-Nak/followers", "following_url": "https://api.github.com/users/Y-Nak/following{/other_user}", "gists_url": "https://api.github.com/users/Y-Nak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Y-Nak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Y-Nak/subscriptions", "organizations_url": "https://api.github.com/users/Y-Nak/orgs", "repos_url": "https://api.github.com/users/Y-Nak/repos", "events_url": "https://api.github.com/users/Y-Nak/events{/privacy}", "received_events_url": "https://api.github.com/users/Y-Nak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Y-Nak", "id": 6376004, "node_id": "MDQ6VXNlcjYzNzYwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6376004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Y-Nak", "html_url": "https://github.com/Y-Nak", "followers_url": "https://api.github.com/users/Y-Nak/followers", "following_url": "https://api.github.com/users/Y-Nak/following{/other_user}", "gists_url": "https://api.github.com/users/Y-Nak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Y-Nak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Y-Nak/subscriptions", "organizations_url": "https://api.github.com/users/Y-Nak/orgs", "repos_url": "https://api.github.com/users/Y-Nak/repos", "events_url": "https://api.github.com/users/Y-Nak/events{/privacy}", "received_events_url": "https://api.github.com/users/Y-Nak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f8ee3cc19f9259eea5e633affef968280d2ed1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f8ee3cc19f9259eea5e633affef968280d2ed1a", "html_url": "https://github.com/rust-lang/rust/commit/1f8ee3cc19f9259eea5e633affef968280d2ed1a"}], "stats": {"total": 114, "additions": 38, "deletions": 76}, "files": [{"sha": "6ace9aa6bdfc0d1e06c4bfc1c7906e6b4488a7fc", "filename": "clippy_lints/src/default_numeric_fallback.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9b0c1ebc183bbf0fab5fbbe5ac8b2f94e5e56b87/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b0c1ebc183bbf0fab5fbbe5ac8b2f94e5e56b87/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs?ref=9b0c1ebc183bbf0fab5fbbe5ac8b2f94e5e56b87", "patch": "@@ -1,4 +1,5 @@\n use rustc_ast::ast::{LitFloatType, LitIntType, LitKind};\n+use rustc_errors::Applicability;\n use rustc_hir::{\n     intravisit::{walk_expr, walk_stmt, NestedVisitorMap, Visitor},\n     Body, Expr, ExprKind, HirId, Lit, Stmt, StmtKind,\n@@ -12,7 +13,7 @@ use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use if_chain::if_chain;\n \n-use crate::utils::span_lint_and_help;\n+use crate::utils::{snippet, span_lint_and_sugg};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of unconstrained numeric literals which may cause default numeric fallback in type\n@@ -75,16 +76,24 @@ impl<'a, 'tcx> NumericFallbackVisitor<'a, 'tcx> {\n                 if let Some(ty_bound) = self.ty_bounds.last();\n                 if matches!(lit.node,\n                             LitKind::Int(_, LitIntType::Unsuffixed) | LitKind::Float(_, LitFloatType::Unsuffixed));\n-                if matches!(lit_ty.kind(), ty::Int(IntTy::I32) | ty::Float(FloatTy::F64));\n                 if !ty_bound.is_integral();\n                 then {\n-                    span_lint_and_help(\n+                    let suffix = match lit_ty.kind() {\n+                        ty::Int(IntTy::I32) => \"i32\",\n+                        ty::Float(FloatTy::F64) => \"f64\",\n+                        // Default numeric fallback never results in other types.\n+                        _ => return,\n+                    };\n+\n+                    let sugg = format!(\"{}_{}\", snippet(self.cx, lit.span, \"\"), suffix);\n+                    span_lint_and_sugg(\n                         self.cx,\n                         DEFAULT_NUMERIC_FALLBACK,\n                         lit.span,\n                         \"default numeric fallback might occur\",\n-                        None,\n-                        \"consider adding suffix to avoid default numeric fallback\",\n+                        \"consider adding suffix\",\n+                        sugg,\n+                        Applicability::MaybeIncorrect,\n                     );\n                 }\n         }"}, {"sha": "b31aa4ebcf8e4a3efd54ff94ca83a39355fc53ea", "filename": "tests/ui/default_numeric_fallback.stderr", "status": "modified", "additions": 24, "deletions": 71, "changes": 95, "blob_url": "https://github.com/rust-lang/rust/blob/9b0c1ebc183bbf0fab5fbbe5ac8b2f94e5e56b87/tests%2Fui%2Fdefault_numeric_fallback.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b0c1ebc183bbf0fab5fbbe5ac8b2f94e5e56b87/tests%2Fui%2Fdefault_numeric_fallback.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_numeric_fallback.stderr?ref=9b0c1ebc183bbf0fab5fbbe5ac8b2f94e5e56b87", "patch": "@@ -2,194 +2,147 @@ error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:10:17\n    |\n LL |         let x = 22;\n-   |                 ^^\n+   |                 ^^ help: consider adding suffix: `22_i32`\n    |\n    = note: `-D clippy::default-numeric-fallback` implied by `-D warnings`\n-   = help: consider adding suffix to avoid default numeric fallback\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:11:18\n    |\n LL |         let x = [1, 2, 3];\n-   |                  ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                  ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:11:21\n    |\n LL |         let x = [1, 2, 3];\n-   |                     ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                     ^ help: consider adding suffix: `2_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:11:24\n    |\n LL |         let x = [1, 2, 3];\n-   |                        ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                        ^ help: consider adding suffix: `3_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:12:28\n    |\n LL |         let x = if true { (1, 2) } else { (3, 4) };\n-   |                            ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                            ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:12:31\n    |\n LL |         let x = if true { (1, 2) } else { (3, 4) };\n-   |                               ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                               ^ help: consider adding suffix: `2_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:12:44\n    |\n LL |         let x = if true { (1, 2) } else { (3, 4) };\n-   |                                            ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                                            ^ help: consider adding suffix: `3_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:12:47\n    |\n LL |         let x = if true { (1, 2) } else { (3, 4) };\n-   |                                               ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                                               ^ help: consider adding suffix: `4_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:13:23\n    |\n LL |         let x = match 1 {\n-   |                       ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                       ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:14:13\n    |\n LL |             1 => 1,\n-   |             ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |             ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:14:18\n    |\n LL |             1 => 1,\n-   |                  ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                  ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:15:18\n    |\n LL |             _ => 2,\n-   |                  ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                  ^ help: consider adding suffix: `2_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:19:17\n    |\n LL |         let x = 0.12;\n-   |                 ^^^^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                 ^^^^ help: consider adding suffix: `0.12_f64`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:37:21\n    |\n LL |             let y = 1;\n-   |                     ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                     ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:45:21\n    |\n LL |             let y = 1;\n-   |                     ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                     ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:51:21\n    |\n LL |             let y = 1;\n-   |                     ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                     ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:63:9\n    |\n LL |         1\n-   |         ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |         ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:69:27\n    |\n LL |         let f = || -> _ { 1 };\n-   |                           ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                           ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:73:29\n    |\n LL |         let f = || -> i32 { 1 };\n-   |                             ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                             ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:87:21\n    |\n LL |         generic_arg(1);\n-   |                     ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                     ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:90:32\n    |\n LL |         let x: _ = generic_arg(1);\n-   |                                ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                                ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:108:28\n    |\n LL |         GenericStruct { x: 1 };\n-   |                            ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                            ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:111:36\n    |\n LL |         let _ = GenericStruct { x: 1 };\n-   |                                    ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                                    ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n   --> $DIR/default_numeric_fallback.rs:131:23\n    |\n LL |         s.generic_arg(1);\n-   |                       ^\n-   |\n-   = help: consider adding suffix to avoid default numeric fallback\n+   |                       ^ help: consider adding suffix: `1_i32`\n \n error: aborting due to 24 previous errors\n "}]}