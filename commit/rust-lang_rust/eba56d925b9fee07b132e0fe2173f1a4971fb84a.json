{"sha": "eba56d925b9fee07b132e0fe2173f1a4971fb84a", "node_id": "C_kwDOAAsO6NoAKGViYTU2ZDkyNWI5ZmVlMDdiMTMyZTBmZTIxNzNmMWE0OTcxZmI4NGE", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-03-27T04:01:30Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-03-27T04:09:06Z"}, "message": "Give a hard error when filtering tests for a file that does not exist\n\nA common issue people run into when running compiletest is that filtering for files that don't exist is only a warning and not an error; running the whole test suite instead.\nSee for example https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/Question.20about.20compiletest.\nThis is especially bad when using `--bless`, which will modify all `.stderr` files.\n\nChange bootstrap to require valid filters instead of discarding invalid filters and continuing.\n\nBefore:\n\n```\nWarning: Skipping \"/home/jnelson/rust-lang/rust/src/test/rustdoc-ui/intra-doc/feature-gate-intra-doc-pointers.r\": not a regular file or directory\nCheck compiletest suite=rustdoc-ui mode=ui (x86_64-unknown-linux-gnu(x86_64-unknown-linux-gnu) -> x86_64-unknown-linux-gnu(x86_64-unknown-linux-gnu))\n\nrunning 163 tests\niiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii.......................... 100/163\n...............................................................\ntest result: ok. 89 passed; 0 failed; 74 ignored; 0 measured; 0 filtered out; finished in 7.20s\n\n        finished in 7.248 seconds\nBuild completed successfully in 0:00:08\n```\n\nAfter:\n```\nthread 'main' panicked at 'Invalid test suite filter \"/home/jnelson/rust-lang/rust/src/test/rustdoc-ui/intra-doc/feature-gate-intra-doc-pointers.r\": file or directory does not exist', src/bootstrap/util.rs:311:\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nBuild completed unsuccessfully in 0:00:08\n```", "tree": {"sha": "198cb40bd545237d7d024e99ec202b64c4869fa4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/198cb40bd545237d7d024e99ec202b64c4869fa4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eba56d925b9fee07b132e0fe2173f1a4971fb84a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eba56d925b9fee07b132e0fe2173f1a4971fb84a", "html_url": "https://github.com/rust-lang/rust/commit/eba56d925b9fee07b132e0fe2173f1a4971fb84a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eba56d925b9fee07b132e0fe2173f1a4971fb84a/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37b55c8a0cafdb60b9168da34f904acc70157df8", "url": "https://api.github.com/repos/rust-lang/rust/commits/37b55c8a0cafdb60b9168da34f904acc70157df8", "html_url": "https://github.com/rust-lang/rust/commit/37b55c8a0cafdb60b9168da34f904acc70157df8"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "defb1e4d83baee78ad5f3c184206aaa64c5e21f2", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eba56d925b9fee07b132e0fe2173f1a4971fb84a/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eba56d925b9fee07b132e0fe2173f1a4971fb84a/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=eba56d925b9fee07b132e0fe2173f1a4971fb84a", "patch": "@@ -308,10 +308,10 @@ pub fn is_valid_test_suite_arg<'a, P: AsRef<Path>>(\n     let abs_path = builder.src.join(path);\n     let exists = abs_path.is_dir() || abs_path.is_file();\n     if !exists {\n-        if let Some(p) = abs_path.to_str() {\n-            builder.info(&format!(\"Warning: Skipping \\\"{}\\\": not a regular file or directory\", p));\n-        }\n-        return None;\n+        panic!(\n+            \"Invalid test suite filter \\\"{}\\\": file or directory does not exist\",\n+            abs_path.display()\n+        );\n     }\n     // Since test suite paths are themselves directories, if we don't\n     // specify a directory or file, we'll get an empty string here"}]}