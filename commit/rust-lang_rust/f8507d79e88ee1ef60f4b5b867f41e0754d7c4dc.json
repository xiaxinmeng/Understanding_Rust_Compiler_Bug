{"sha": "f8507d79e88ee1ef60f4b5b867f41e0754d7c4dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4NTA3ZDc5ZTg4ZWUxZWY2MGY0YjViODY3ZjQxZTA3NTRkN2M0ZGM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-09-24T21:34:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-24T21:34:34Z"}, "message": "Merge pull request #459 from solson/rustup\n\nRustup", "tree": {"sha": "99ba611d83d02f5db10825a18db8db87da2c6905", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99ba611d83d02f5db10825a18db8db87da2c6905"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8507d79e88ee1ef60f4b5b867f41e0754d7c4dc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbqVhqCRBK7hj4Ov3rIwAAdHIIADcO15jEkB7GWbFLonHAPaV7\n9mFZy2AUYhyeAFaYUhKb6h6tMVyXAXgCnztFG4RUgurYzHltfymzsJZweNj9v/SJ\nJTQ136Vbdc8746mDDtgEq1N/c7P8ZCNzfHG1y7VjfLSdZz/VP6PQPJ4JxTQ6FN/c\nljVQSl65kO1op64pB/wGGyY1qRVR7/Yow0/HjWTMi/GmRlFGhmq0C0C6K+RkvkrA\nOKmyiynHDAiPkmNxtJWNuZ4Y/7TZ7EECysibjjtgvTTaAUeuPFQsaSLzkSjLwlLf\n0m9pSFsYrWz8OrFtEhyMpWFvQ42R/7cMjWR6+zAuRNFlqMnA5rJtJ6dRWqJxYr0=\n=Qt4p\n-----END PGP SIGNATURE-----\n", "payload": "tree 99ba611d83d02f5db10825a18db8db87da2c6905\nparent 7433c6fc8febf9c710db4ac97fe73367ea95d288\nparent 4b11792259698b056615cffe06c84f6329eff9e0\nauthor Ralf Jung <post@ralfj.de> 1537824874 +0200\ncommitter GitHub <noreply@github.com> 1537824874 +0200\n\nMerge pull request #459 from solson/rustup\n\nRustup"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8507d79e88ee1ef60f4b5b867f41e0754d7c4dc", "html_url": "https://github.com/rust-lang/rust/commit/f8507d79e88ee1ef60f4b5b867f41e0754d7c4dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8507d79e88ee1ef60f4b5b867f41e0754d7c4dc/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7433c6fc8febf9c710db4ac97fe73367ea95d288", "url": "https://api.github.com/repos/rust-lang/rust/commits/7433c6fc8febf9c710db4ac97fe73367ea95d288", "html_url": "https://github.com/rust-lang/rust/commit/7433c6fc8febf9c710db4ac97fe73367ea95d288"}, {"sha": "4b11792259698b056615cffe06c84f6329eff9e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b11792259698b056615cffe06c84f6329eff9e0", "html_url": "https://github.com/rust-lang/rust/commit/4b11792259698b056615cffe06c84f6329eff9e0"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "8a63ffb87c6af7adbf981c991cf43ea843583171", "filename": "rust-toolchain", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8507d79e88ee1ef60f4b5b867f41e0754d7c4dc/rust-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/f8507d79e88ee1ef60f4b5b867f41e0754d7c4dc/rust-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-toolchain?ref=f8507d79e88ee1ef60f4b5b867f41e0754d7c4dc", "patch": "@@ -1 +1 @@\n-nightly-2018-09-22\n+nightly-2018-09-24"}, {"sha": "e25ae3a27d1effc2a340f17ec20cda90f0713e15", "filename": "src/lib.rs", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f8507d79e88ee1ef60f4b5b867f41e0754d7c4dc/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8507d79e88ee1ef60f4b5b867f41e0754d7c4dc/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=f8507d79e88ee1ef60f4b5b867f41e0754d7c4dc", "patch": "@@ -228,15 +228,14 @@ pub struct Evaluator<'tcx> {\n     pub(crate) tls: TlsData<'tcx>,\n }\n \n-impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'tcx> {\n+impl<'a, 'mir, 'tcx> Machine<'a, 'mir, 'tcx> for Evaluator<'tcx> {\n     type MemoryData = ();\n     type MemoryKinds = MiriMemoryKind;\n \n     const MUT_STATIC_KIND: Option<MiriMemoryKind> = Some(MiriMemoryKind::MutStatic);\n-    const DETECT_LOOPS: bool = false;\n \n     /// Returns Ok() when the function was handled, fail otherwise\n-    fn find_fn<'a>(\n+    fn find_fn(\n         ecx: &mut EvalContext<'a, 'mir, 'tcx, Self>,\n         instance: ty::Instance<'tcx>,\n         args: &[OpTy<'tcx>],\n@@ -246,7 +245,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'tcx> {\n         ecx.find_fn(instance, args, dest, ret)\n     }\n \n-    fn call_intrinsic<'a>(\n+    fn call_intrinsic(\n         ecx: &mut rustc_mir::interpret::EvalContext<'a, 'mir, 'tcx, Self>,\n         instance: ty::Instance<'tcx>,\n         args: &[OpTy<'tcx>],\n@@ -255,7 +254,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'tcx> {\n         ecx.call_intrinsic(instance, args, dest)\n     }\n \n-    fn ptr_op<'a>(\n+    fn ptr_op(\n         ecx: &rustc_mir::interpret::EvalContext<'a, 'mir, 'tcx, Self>,\n         bin_op: mir::BinOp,\n         left: Scalar,\n@@ -266,7 +265,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'tcx> {\n         ecx.ptr_op(bin_op, left, left_layout, right, right_layout)\n     }\n \n-    fn box_alloc<'a>(\n+    fn box_alloc(\n         ecx: &mut EvalContext<'a, 'mir, 'tcx, Self>,\n         dest: PlaceTy<'tcx>,\n     ) -> EvalResult<'tcx> {\n@@ -305,7 +304,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'tcx> {\n         Ok(())\n     }\n \n-    fn find_foreign_static<'a>(\n+    fn find_foreign_static(\n         tcx: TyCtxtAt<'a, 'tcx, 'tcx>,\n         def_id: DefId,\n     ) -> EvalResult<'tcx, &'tcx Allocation> {\n@@ -329,7 +328,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'tcx> {\n         Ok(alloc)\n     }\n \n-    fn validation_op<'a>(\n+    fn validation_op(\n         _ecx: &mut EvalContext<'a, 'mir, 'tcx, Self>,\n         _op: ::rustc::mir::ValidationOp,\n         _operand: &::rustc::mir::ValidationOperand<'tcx, ::rustc::mir::Place<'tcx>>,\n@@ -338,4 +337,10 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'tcx> {\n         //ecx.validation_op(op, operand)\n         Ok(())\n     }\n+\n+    fn before_terminator(_ecx: &mut EvalContext<'a, 'mir, 'tcx, Self>) -> EvalResult<'tcx>\n+    {\n+        // We are not interested in detecting loops\n+        Ok(())\n+    }\n }"}]}