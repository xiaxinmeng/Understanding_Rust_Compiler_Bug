{"sha": "e365236bfb2d24c5e8b04a1eeec5ee4ccb4a3715", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzNjUyMzZiZmIyZDI0YzVlOGIwNGExZWVlYzVlZTRjY2I0YTM3MTU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-09-06T16:34:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-06T16:34:38Z"}, "message": "Merge #1755\n\n1755: feat(docs): add coc-rust-analyzer r=JeanMertz a=fannheyward\n\n\n\nCo-authored-by: Heyward Fann <fannheyward@gmail.com>", "tree": {"sha": "48585f13ae3772ca0653cd50a82a4383ea587f5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48585f13ae3772ca0653cd50a82a4383ea587f5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e365236bfb2d24c5e8b04a1eeec5ee4ccb4a3715", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdcoqeCRBK7hj4Ov3rIwAAdHIIAAXyNHVQFh3kJygrtPCcyv+S\n/57mrGStZXt00t0ICMZ1qpAt8xBTK2zjB9qIpWh5we2Wjx8nYFPplA/wcQpr8/wE\nd0Ik7kLJLqdBj3vybtp4WFt8uL6UYZMht65X8cr8i6IWbJHVDD4GseOEb+Yopd3u\n2k6bEI2Nl1HyuyftIgPca10LsncF2dAWEzTUF6y8F4PzWqiVZrP4Uigzqs67CiIZ\nu8x+I53NfToc+h1k8e3h8hdP3N/3cV4EUCF/e8yUzhxrK2tKe+Q5pKISVaUQa5TF\nxazh4VuZ+Km2bSiiSlGDVeQhbRToYltBxiikgRyHe0yhYN/I7O9IkPksWN0/7Iw=\n=kw7Y\n-----END PGP SIGNATURE-----\n", "payload": "tree 48585f13ae3772ca0653cd50a82a4383ea587f5d\nparent 1acd9d5540bf755e87173fe16a803cfe8b2bb500\nparent 31017d6dc466082573457009c346776fb01049fc\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1567787678 +0000\ncommitter GitHub <noreply@github.com> 1567787678 +0000\n\nMerge #1755\n\n1755: feat(docs): add coc-rust-analyzer r=JeanMertz a=fannheyward\n\n\n\nCo-authored-by: Heyward Fann <fannheyward@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e365236bfb2d24c5e8b04a1eeec5ee4ccb4a3715", "html_url": "https://github.com/rust-lang/rust/commit/e365236bfb2d24c5e8b04a1eeec5ee4ccb4a3715", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e365236bfb2d24c5e8b04a1eeec5ee4ccb4a3715/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1acd9d5540bf755e87173fe16a803cfe8b2bb500", "url": "https://api.github.com/repos/rust-lang/rust/commits/1acd9d5540bf755e87173fe16a803cfe8b2bb500", "html_url": "https://github.com/rust-lang/rust/commit/1acd9d5540bf755e87173fe16a803cfe8b2bb500"}, {"sha": "31017d6dc466082573457009c346776fb01049fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/31017d6dc466082573457009c346776fb01049fc", "html_url": "https://github.com/rust-lang/rust/commit/31017d6dc466082573457009c346776fb01049fc"}], "stats": {"total": 31, "additions": 4, "deletions": 27}, "files": [{"sha": "c11e0fcb6dc6c962314dc4b3137ace1e948701be", "filename": "docs/user/README.md", "status": "modified", "additions": 4, "deletions": 27, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/e365236bfb2d24c5e8b04a1eeec5ee4ccb4a3715/docs%2Fuser%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/e365236bfb2d24c5e8b04a1eeec5ee4ccb4a3715/docs%2Fuser%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2FREADME.md?ref=e365236bfb2d24c5e8b04a1eeec5ee4ccb4a3715", "patch": "@@ -106,35 +106,12 @@ to load path and require it in `init.el`\n   - Note that if you use a plugin manager other than `vim-plug`, you may need to manually\n     checkout the `release` branch wherever your plugin manager cloned it. Otherwise you will\n     get errors about a missing javascript file.\n-* Add rust analyzer using: [coc.nvim wiki][coc-wiki]\n-  - Use `:CocConfig` in command mode to edit the config file.\n-\n-```jsonc\n- \"languageserver\": {\n-  \"rust\": {\n-    \"command\": \"ra_lsp_server\",\n-    \"filetypes\": [\"rust\"],\n-    \"rootPatterns\": [\"Cargo.toml\"]\n-  }\n- }\n-```\n-\n-For those not familiar with js, the whole file should be enclosed in `{` and `}`, with all of your config options in between. So for example, if rust-analyzer was your only language server, you could do the following:\n-\n-```jsonc\n-{\n- \"languageserver\": {\n-  \"rust\": {\n-    \"command\": \"ra_lsp_server\",\n-    \"filetypes\": [\"rust\"],\n-    \"rootPatterns\": [\"Cargo.toml\"]\n-  }\n- }\n-}\n-```\n+* Run `:CocInstall coc-rust-analyzer` to install `coc-rust-analyzer`, this extension already implemented _almost_ all features supported in VSCode extension:\n+  - same configurations as VSCode extension, `rust-analyzer.raLspServerPath`, `rust-analyzer.enableCargoWatchOnStartup` etc.\n+  - same commands too, `rust-analyzer.analyzerStatus`, `rust-analyzer.startCargoWatch` etc.\n+  - highlighting and inlay_hints is not works by now\n \n [coc.nvim]: https://github.com/neoclide/coc.nvim\n-[coc-wiki]: https://github.com/neoclide/coc.nvim/wiki/Language-servers#rust\n [coc-vim-conf]: https://github.com/neoclide/coc.nvim/#example-vim-configuration\n \n "}]}