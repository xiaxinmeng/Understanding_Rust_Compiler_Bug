{"sha": "b53d37479079d820290e21c424f0a6f9af112afe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1M2QzNzQ3OTA3OWQ4MjAyOTBlMjFjNDI0ZjBhNmY5YWYxMTJhZmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-20T04:55:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-20T04:55:01Z"}, "message": "Auto merge of #38603 - arielb1:supertrait-self-3, r=nikomatsakis\n\ntraits with self-containing supertraits are not object safe\n\nThis should be the last time I fix this function.\n\nFixes #38404.", "tree": {"sha": "024664de02e9a09764a050f46409be5a6e4e5d2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/024664de02e9a09764a050f46409be5a6e4e5d2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b53d37479079d820290e21c424f0a6f9af112afe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b53d37479079d820290e21c424f0a6f9af112afe", "html_url": "https://github.com/rust-lang/rust/commit/b53d37479079d820290e21c424f0a6f9af112afe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b53d37479079d820290e21c424f0a6f9af112afe/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0b42075981d9914c39e848377a3e12f0adf37d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0b42075981d9914c39e848377a3e12f0adf37d7", "html_url": "https://github.com/rust-lang/rust/commit/f0b42075981d9914c39e848377a3e12f0adf37d7"}, {"sha": "c85fb1933f0924401f89f935f8f0b436bf177b14", "url": "https://api.github.com/repos/rust-lang/rust/commits/c85fb1933f0924401f89f935f8f0b436bf177b14", "html_url": "https://github.com/rust-lang/rust/commit/c85fb1933f0924401f89f935f8f0b436bf177b14"}], "stats": {"total": 62, "additions": 57, "deletions": 5}, "files": [{"sha": "60808fbc741fb9898bde442a1f568641256b68d9", "filename": "src/librustc/traits/object_safety.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b53d37479079d820290e21c424f0a6f9af112afe/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b53d37479079d820290e21c424f0a6f9af112afe/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fobject_safety.rs?ref=b53d37479079d820290e21c424f0a6f9af112afe", "patch": "@@ -81,8 +81,10 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n     {\n         let mut violations = vec![];\n \n-        if self.supertraits_reference_self(trait_def_id) {\n-            violations.push(ObjectSafetyViolation::SupertraitSelf);\n+        for def_id in traits::supertrait_def_ids(self, trait_def_id) {\n+            if self.predicates_reference_self(def_id, true) {\n+                violations.push(ObjectSafetyViolation::SupertraitSelf);\n+            }\n         }\n \n         debug!(\"astconv_object_safety_violations(trait_def_id={:?}) = {:?}\",\n@@ -115,7 +117,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         if self.trait_has_sized_self(trait_def_id) {\n             violations.push(ObjectSafetyViolation::SizedSelf);\n         }\n-        if self.supertraits_reference_self(trait_def_id) {\n+        if self.predicates_reference_self(trait_def_id, false) {\n             violations.push(ObjectSafetyViolation::SupertraitSelf);\n         }\n \n@@ -126,12 +128,20 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         violations\n     }\n \n-    fn supertraits_reference_self(self, trait_def_id: DefId) -> bool {\n+    fn predicates_reference_self(\n+        self,\n+        trait_def_id: DefId,\n+        supertraits_only: bool) -> bool\n+    {\n         let trait_ref = ty::Binder(ty::TraitRef {\n             def_id: trait_def_id,\n             substs: Substs::identity_for_item(self, trait_def_id)\n         });\n-        let predicates = self.item_super_predicates(trait_def_id);\n+        let predicates = if supertraits_only {\n+            self.item_super_predicates(trait_def_id)\n+        } else {\n+            self.item_predicates(trait_def_id)\n+        };\n         predicates\n             .predicates\n             .into_iter()"}, {"sha": "a2b0d0a60c0dbda44bd00ffeedabe2729d2742f0", "filename": "src/test/compile-fail/issue-38404.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b53d37479079d820290e21c424f0a6f9af112afe/src%2Ftest%2Fcompile-fail%2Fissue-38404.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b53d37479079d820290e21c424f0a6f9af112afe/src%2Ftest%2Fcompile-fail%2Fissue-38404.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-38404.rs?ref=b53d37479079d820290e21c424f0a6f9af112afe", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait A<T>: std::ops::Add<Self> + Sized {}\n+trait B<T>: A<T> {}\n+trait C<T>: A<B<T, Output=usize>> {}\n+//~^ ERROR the trait `B` cannot be made into an object\n+\n+fn main() {}"}, {"sha": "c1939a7707f3992393ce2fedd92a9c447a77688d", "filename": "src/test/compile-fail/issue-38604.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b53d37479079d820290e21c424f0a6f9af112afe/src%2Ftest%2Fcompile-fail%2Fissue-38604.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b53d37479079d820290e21c424f0a6f9af112afe/src%2Ftest%2Fcompile-fail%2Fissue-38604.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-38604.rs?ref=b53d37479079d820290e21c424f0a6f9af112afe", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Q<T:?Sized> {}\n+trait Foo where u32: Q<Self> {\n+    fn foo(&self);\n+}\n+\n+impl Q<()> for u32 {}\n+impl Foo for () {\n+    fn foo(&self) {\n+        println!(\"foo!\");\n+    }\n+}\n+\n+fn main() {\n+    let _f: Box<Foo> = //~ ERROR `Foo` cannot be made into an object\n+        Box::new(()); //~ ERROR `Foo` cannot be made into an object\n+}"}]}