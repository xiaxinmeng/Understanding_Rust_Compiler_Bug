{"sha": "7dadd14d6c671ca5c159acb635f62dbc909e7cc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkYWRkMTRkNmM2NzFjYTVjMTU5YWNiNjM1ZjYyZGJjOTA5ZTdjYzQ=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-01-04T03:16:36Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-01-04T18:38:11Z"}, "message": "Pull out downcasting into caller of iter_variant\n\nRenames iter_variant to iter_variant_fields to more clearly communicate\nthe purpose of the function.", "tree": {"sha": "c442a4b6d8452be923433d71bae165f441f620a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c442a4b6d8452be923433d71bae165f441f620a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dadd14d6c671ca5c159acb635f62dbc909e7cc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dadd14d6c671ca5c159acb635f62dbc909e7cc4", "html_url": "https://github.com/rust-lang/rust/commit/7dadd14d6c671ca5c159acb635f62dbc909e7cc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dadd14d6c671ca5c159acb635f62dbc909e7cc4/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d25fc9ec5f41b0b608432e7b9fb45d7377380755", "url": "https://api.github.com/repos/rust-lang/rust/commits/d25fc9ec5f41b0b608432e7b9fb45d7377380755", "html_url": "https://github.com/rust-lang/rust/commit/d25fc9ec5f41b0b608432e7b9fb45d7377380755"}], "stats": {"total": 37, "additions": 23, "deletions": 14}, "files": [{"sha": "ed58b17e0cb63c84b06ad30c47694b1939851f47", "filename": "src/librustc_trans/glue.rs", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/7dadd14d6c671ca5c159acb635f62dbc909e7cc4/src%2Flibrustc_trans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dadd14d6c671ca5c159acb635f62dbc909e7cc4/src%2Flibrustc_trans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fglue.rs?ref=7dadd14d6c671ca5c159acb635f62dbc909e7cc4", "patch": "@@ -395,22 +395,21 @@ pub fn size_and_align_of_dst<'a, 'tcx>(bcx: &Builder<'a, 'tcx>, t: Ty<'tcx>, inf\n }\n \n // Iterates through the elements of a structural type, dropping them.\n-fn drop_structural_ty<'a, 'tcx>(cx: Builder<'a, 'tcx>, ptr: LvalueRef<'tcx>) -> Builder<'a, 'tcx> {\n-    fn iter_variant<'a, 'tcx>(cx: &'a Builder<'a, 'tcx>,\n-                              av: LvalueRef<'tcx>,\n-                              adt_def: &'tcx AdtDef,\n-                              variant_index: usize,\n-                              substs: &'tcx Substs<'tcx>) {\n+fn drop_structural_ty<'a, 'tcx>(\n+    cx: Builder<'a, 'tcx>,\n+    mut ptr: LvalueRef<'tcx>\n+) -> Builder<'a, 'tcx> {\n+    fn iter_variant_fields<'a, 'tcx>(\n+        cx: &'a Builder<'a, 'tcx>,\n+        av: LvalueRef<'tcx>,\n+        adt_def: &'tcx AdtDef,\n+        variant_index: usize,\n+        substs: &'tcx Substs<'tcx>\n+    ) {\n         let variant = &adt_def.variants[variant_index];\n         let tcx = cx.tcx();\n         for (i, field) in variant.fields.iter().enumerate() {\n             let arg = monomorphize::field_ty(tcx, substs, field);\n-            let mut av = av.clone();\n-            av.ty = LvalueTy::Downcast {\n-                adt_def: adt_def,\n-                substs: substs,\n-                variant_index: variant_index,\n-            };\n             let field_ptr = av.trans_field_ptr(&cx, i);\n             drop_ty(&cx, LvalueRef::new_sized_ty(field_ptr, arg));\n         }\n@@ -479,7 +478,12 @@ fn drop_structural_ty<'a, 'tcx>(cx: Builder<'a, 'tcx>, ptr: LvalueRef<'tcx>) ->\n                     layout::UntaggedUnion { .. } => {\n                         if n_variants != 0 {\n                             assert!(n_variants == 1);\n-                            iter_variant(&cx, ptr, &adt, 0, substs);\n+                            ptr.ty = LvalueTy::Downcast {\n+                                adt_def: adt,\n+                                substs: substs,\n+                                variant_index: 0,\n+                            };\n+                            iter_variant_fields(&cx, ptr, &adt, 0, substs);\n                         }\n                     }\n                     layout::CEnum { .. } |\n@@ -514,7 +518,12 @@ fn drop_structural_ty<'a, 'tcx>(cx: Builder<'a, 'tcx>, ptr: LvalueRef<'tcx>) ->\n                             let variant_cx = cx.build_sibling_block(&variant_cx_name);\n                             let case_val = adt::trans_case(&cx, t, Disr::from(variant.disr_val));\n                             variant_cx.add_case(llswitch, case_val, variant_cx.llbb());\n-                            iter_variant(&variant_cx, ptr, &adt, i, substs);\n+                            ptr.ty = LvalueTy::Downcast {\n+                                adt_def: adt,\n+                                substs: substs,\n+                                variant_index: i,\n+                            };\n+                            iter_variant_fields(&variant_cx, ptr, &adt, i, substs);\n                             variant_cx.br(next_cx.llbb());\n                         }\n                         cx = next_cx;"}]}