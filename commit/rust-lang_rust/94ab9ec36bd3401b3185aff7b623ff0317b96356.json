{"sha": "94ab9ec36bd3401b3185aff7b623ff0317b96356", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0YWI5ZWMzNmJkMzQwMWIzMTg1YWZmN2I2MjNmZjAzMTdiOTYzNTY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-10T22:15:38Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-10T22:15:38Z"}, "message": "Avoid invalid suggestion by checking the snippet in const fn call", "tree": {"sha": "1119f01aa3cd68f4cfeb516fe86c94b07708d234", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1119f01aa3cd68f4cfeb516fe86c94b07708d234"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94ab9ec36bd3401b3185aff7b623ff0317b96356", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94ab9ec36bd3401b3185aff7b623ff0317b96356", "html_url": "https://github.com/rust-lang/rust/commit/94ab9ec36bd3401b3185aff7b623ff0317b96356", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94ab9ec36bd3401b3185aff7b623ff0317b96356/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "860c7e425ba07a4f5f9a5d5990227a857378a8e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/860c7e425ba07a4f5f9a5d5990227a857378a8e0", "html_url": "https://github.com/rust-lang/rust/commit/860c7e425ba07a4f5f9a5d5990227a857378a8e0"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "233d195766fe699e76885281f635a043f7dec048", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/94ab9ec36bd3401b3185aff7b623ff0317b96356/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94ab9ec36bd3401b3185aff7b623ff0317b96356/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=94ab9ec36bd3401b3185aff7b623ff0317b96356", "patch": "@@ -1999,7 +1999,28 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                     &obligation.cause.code,\n                 ) {\n                     let generics = self.tcx.generics_of(*def_id);\n-                    if !generics.params.is_empty() {\n+                    if !generics.params.is_empty() && !snippet.ends_with('>'){\n+                        // FIXME: To avoid spurious suggestions in functions where type arguments\n+                        // where already supplied, we check the snippet to make sure it doesn't\n+                        // end with a turbofish. Ideally we would have access to a `PathSegment`\n+                        // instead. Otherwise we would produce the following output:\n+                        //\n+                        // error[E0283]: type annotations needed\n+                        //   --> $DIR/issue-54954.rs:3:24\n+                        //    |\n+                        // LL | const ARR_LEN: usize = Tt::const_val::<[i8; 123]>();\n+                        //    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+                        //    |                        |\n+                        //    |                        cannot infer type\n+                        //    |                        help: consider specifying the type argument\n+                        //    |                        in the function call:\n+                        //    |                        `Tt::const_val::<[i8; 123]>::<T>`\n+                        // ...\n+                        // LL |     const fn const_val<T: Sized>() -> usize {\n+                        //    |              --------- - required by this bound in `Tt::const_val`\n+                        //    |\n+                        //    = note: cannot resolve `_: Tt`\n+\n                         err.span_suggestion(\n                             span,\n                             &format!("}, {"sha": "d99a5772e8a4c7c64098118338b18729b8f0edce", "filename": "src/test/ui/issues/issue-54954.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/94ab9ec36bd3401b3185aff7b623ff0317b96356/src%2Ftest%2Fui%2Fissues%2Fissue-54954.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/94ab9ec36bd3401b3185aff7b623ff0317b96356/src%2Ftest%2Fui%2Fissues%2Fissue-54954.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54954.stderr?ref=94ab9ec36bd3401b3185aff7b623ff0317b96356", "patch": "@@ -8,10 +8,7 @@ error[E0283]: type annotations needed\n   --> $DIR/issue-54954.rs:3:24\n    |\n LL | const ARR_LEN: usize = Tt::const_val::<[i8; 123]>();\n-   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |                        |\n-   |                        cannot infer type\n-   |                        help: consider specifying the type argument in the function call: `Tt::const_val::<[i8; 123]>::<T>`\n+   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type\n ...\n LL |     const fn const_val<T: Sized>() -> usize {\n    |              --------- - required by this bound in `Tt::const_val`"}]}