{"sha": "729bf447ab51887a8775ebc544b51f5549424b73", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyOWJmNDQ3YWI1MTg4N2E4Nzc1ZWJjNTQ0YjUxZjU1NDk0MjRiNzM=", "commit": {"author": {"name": "Ricky Taylor", "email": "rickytaylor26@gmail.com", "date": "2014-11-16T18:20:19Z"}, "committer": {"name": "Ricky Taylor", "email": "rickytaylor26@gmail.com", "date": "2014-11-23T12:24:34Z"}, "message": "Search for implemented kinds recursively on Trait types. Fixes #15155 and #13155.", "tree": {"sha": "fe465e19c03310a08cfa8f1f1a87125a6b2643de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe465e19c03310a08cfa8f1f1a87125a6b2643de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/729bf447ab51887a8775ebc544b51f5549424b73", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/729bf447ab51887a8775ebc544b51f5549424b73", "html_url": "https://github.com/rust-lang/rust/commit/729bf447ab51887a8775ebc544b51f5549424b73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/729bf447ab51887a8775ebc544b51f5549424b73/comments", "author": {"login": "ricky26", "id": 262786, "node_id": "MDQ6VXNlcjI2Mjc4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/262786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricky26", "html_url": "https://github.com/ricky26", "followers_url": "https://api.github.com/users/ricky26/followers", "following_url": "https://api.github.com/users/ricky26/following{/other_user}", "gists_url": "https://api.github.com/users/ricky26/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricky26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricky26/subscriptions", "organizations_url": "https://api.github.com/users/ricky26/orgs", "repos_url": "https://api.github.com/users/ricky26/repos", "events_url": "https://api.github.com/users/ricky26/events{/privacy}", "received_events_url": "https://api.github.com/users/ricky26/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ricky26", "id": 262786, "node_id": "MDQ6VXNlcjI2Mjc4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/262786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricky26", "html_url": "https://github.com/ricky26", "followers_url": "https://api.github.com/users/ricky26/followers", "following_url": "https://api.github.com/users/ricky26/following{/other_user}", "gists_url": "https://api.github.com/users/ricky26/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricky26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricky26/subscriptions", "organizations_url": "https://api.github.com/users/ricky26/orgs", "repos_url": "https://api.github.com/users/ricky26/repos", "events_url": "https://api.github.com/users/ricky26/events{/privacy}", "received_events_url": "https://api.github.com/users/ricky26/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ff10d5a230acde7e530ccee8cd4f805d6be7713", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ff10d5a230acde7e530ccee8cd4f805d6be7713", "html_url": "https://github.com/rust-lang/rust/commit/5ff10d5a230acde7e530ccee8cd4f805d6be7713"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "d1cc851c41f20efdeaeb84ddb90bced2d6a66d5a", "filename": "src/librustc/middle/traits/select.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/729bf447ab51887a8775ebc544b51f5549424b73/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/729bf447ab51887a8775ebc544b51f5549424b73/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs?ref=729bf447ab51887a8775ebc544b51f5549424b73", "patch": "@@ -1327,7 +1327,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 }\n             }\n \n-            ty::ty_trait(box ty::TyTrait { bounds, .. }) => {\n+            ty::ty_trait(box ty::TyTrait { ref principal, bounds }) => {\n                 match bound {\n                     ty::BoundSized => {\n                         Err(Unimplemented)\n@@ -1336,6 +1336,23 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                         if bounds.builtin_bounds.contains(&bound) {\n                             Ok(If(Vec::new()))\n                         } else {\n+                            // Recursively check all supertraits to find out if any further\n+                            // bounds are required and thus we must fulfill.\n+                            // We have to create a temp trait ref here since TyTraits don't\n+                            // have actual self type info (which is required for the\n+                            // supertraits iterator).\n+                            let tmp_tr = Rc::new(ty::TraitRef {\n+                                def_id: principal.def_id,\n+                                substs: principal.substs.with_self_ty(ty::mk_err())\n+                            });\n+                            for tr in util::supertraits(self.tcx(), tmp_tr) {\n+                                let td = ty::lookup_trait_def(self.tcx(), tr.def_id);\n+\n+                                if td.bounds.builtin_bounds.contains(&bound) {\n+                                    return Ok(If(Vec::new()))\n+                                }\n+                            }\n+\n                             Err(Unimplemented)\n                         }\n                     }"}, {"sha": "053a4916e229a6c3e679b7ad607b48a7fd9d9cd9", "filename": "src/test/run-pass/issue-15155.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/729bf447ab51887a8775ebc544b51f5549424b73/src%2Ftest%2Frun-pass%2Fissue-15155.rs", "raw_url": "https://github.com/rust-lang/rust/raw/729bf447ab51887a8775ebc544b51f5549424b73/src%2Ftest%2Frun-pass%2Fissue-15155.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15155.rs?ref=729bf447ab51887a8775ebc544b51f5549424b73", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait TraitWithSend: Send {}\n+trait IndirectTraitWithSend: TraitWithSend {}\n+\n+// Check struct instantiation (Box<TraitWithSend> will only have Send if TraitWithSend has Send)\n+#[allow(dead_code)]\n+struct Blah { x: Box<TraitWithSend> }\n+impl TraitWithSend for Blah {}\n+\n+// Struct instantiation 2-levels deep\n+#[allow(dead_code)]\n+struct IndirectBlah { x: Box<IndirectTraitWithSend> }\n+impl TraitWithSend for IndirectBlah {}\n+impl IndirectTraitWithSend for IndirectBlah {}\n+\n+fn test_trait<Sized? T: Send>() { println!(\"got here!\") }\n+\n+fn main() {\n+    test_trait::<TraitWithSend>();\n+    test_trait::<IndirectTraitWithSend>();\n+}\n+\n+"}]}