{"sha": "6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkOWRkMDU1ZDE1YTYzMWE5ZmI2ODVlYjRjOWJjMGU2ZDhkZGQ2NGE=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-04T21:31:25Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-04T23:35:32Z"}, "message": "Get rid of warnings from instantiating typarams with non-implicitly copyable types.", "tree": {"sha": "4b674c83c5b697ba9d631fdef0336bca38bef3ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b674c83c5b697ba9d631fdef0336bca38bef3ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a", "html_url": "https://github.com/rust-lang/rust/commit/6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d5d43beaee01fbec830365b12d893ac3ca6b7ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d5d43beaee01fbec830365b12d893ac3ca6b7ad", "html_url": "https://github.com/rust-lang/rust/commit/4d5d43beaee01fbec830365b12d893ac3ca6b7ad"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "e6b89ce786bebab5ce49231716df13e13a69d614", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a", "patch": "@@ -1,5 +1,7 @@\n // cargo.rs - Rust package manager\n \n+#[warn(no_non_implicitly_copyable_typarams)];\n+\n import syntax::{ast, codemap};\n import syntax::parse;\n import rustc::metadata::filesearch::{get_cargo_root, get_cargo_root_nearest,\n@@ -1169,4 +1171,4 @@ fn main(argv: [str]) {\n         \"usage\" { cmd_usage(); }\n         _ { cmd_usage(); }\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "77de2cc1d157fcd971c7abaca755e3121906a8fc", "filename": "src/libstd/test.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a/src%2Flibstd%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a/src%2Flibstd%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftest.rs?ref=6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a", "patch": "@@ -290,7 +290,7 @@ fn run_tests(opts: test_opts, tests: [test_desc],\n \n     while done_idx < total {\n         while wait_idx < concurrency && run_idx < total {\n-            let test = vec::shift(filtered_tests);\n+            let test = copy filtered_tests[run_idx];\n             if concurrency == 1u {\n                 // We are doing one test at a time so we can print the name\n                 // of the test before we run it. Useful for debugging tests\n@@ -327,6 +327,7 @@ fn get_concurrency() -> uint {\n     else { threads * sched_overcommit }\n }\n \n+#[warn(no_non_implicitly_copyable_typarams)]\n fn filter_tests(opts: test_opts,\n                 tests: [test_desc]) -> [test_desc] {\n     let mut filtered = copy tests;"}, {"sha": "1fb17d4f3855e3c393f4e622ce2ed642fd5bfe11", "filename": "src/rustc/middle/alias.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a/src%2Frustc%2Fmiddle%2Falias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a/src%2Frustc%2Fmiddle%2Falias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Falias.rs?ref=6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a", "patch": "@@ -323,6 +323,7 @@ fn check_call(cx: @ctx, sc: scope, f: @ast::expr, args: [@ast::expr],\n     }\n }\n \n+#[warn(no_non_implicitly_copyable_typarams)]\n fn check_alt(cx: ctx, input: @ast::expr, arms: [ast::arm], sc: scope,\n              v: vt<scope>) {\n     v.visit_expr(input, sc, v);"}, {"sha": "41d97275c55da4c505e8da109026e5c5fbe99ce7", "filename": "src/rustdoc/path_pass.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a/src%2Frustdoc%2Fpath_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a/src%2Frustdoc%2Fpath_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fpath_pass.rs?ref=6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a", "patch": "@@ -16,6 +16,7 @@ type ctxt = {\n     mut path: [str]\n };\n \n+#[warn(no_non_implicitly_copyable_typarams)]\n fn run(srv: astsrv::srv, doc: doc::doc) -> doc::doc {\n     let ctxt = {\n         srv: srv,\n@@ -37,6 +38,7 @@ fn fold_item(fold: fold::fold<ctxt>, doc: doc::itemdoc) -> doc::itemdoc {\n     }\n }\n \n+#[warn(no_non_implicitly_copyable_typarams)]\n fn fold_mod(fold: fold::fold<ctxt>, doc: doc::moddoc) -> doc::moddoc {\n     let is_topmod = doc.id() == ast::crate_node_id;\n \n@@ -102,4 +104,4 @@ fn should_record_native_fn_paths() {\n         let doc = run(srv, doc);\n         assert doc.cratemod().nmods()[0].fns[0].path() == [\"a\"];\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "794e190fa5b6c100b5492b4c21e5a1a3072d4088", "filename": "src/rustdoc/sort_pass.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a/src%2Frustdoc%2Fsort_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a/src%2Frustdoc%2Fsort_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fsort_pass.rs?ref=6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a", "patch": "@@ -15,6 +15,7 @@ fn mk_pass(name: str, +lteq: item_lteq) -> pass {\n     }\n }\n \n+#[warn(no_non_implicitly_copyable_typarams)]\n fn run(\n     _srv: astsrv::srv,\n     doc: doc::doc,\n@@ -27,6 +28,7 @@ fn run(\n     fold.fold_doc(fold, doc)\n }\n \n+#[warn(no_non_implicitly_copyable_typarams)]\n fn fold_mod(\n     fold: fold::fold<item_lteq>,\n     doc: doc::moddoc"}, {"sha": "fa14367a3160507142c724b4e86205562d201f6e", "filename": "src/rustdoc/text_pass.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a/src%2Frustdoc%2Ftext_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a/src%2Frustdoc%2Ftext_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ftext_pass.rs?ref=6d9dd055d15a631a9fb685eb4c9bc0e6d8ddd64a", "patch": "@@ -13,6 +13,7 @@ fn mk_pass(name: str, +op: fn~(str) -> str) -> pass {\n \n type op = fn~(str) -> str;\n \n+#[warn(no_non_implicitly_copyable_typarams)]\n fn run(\n     _srv: astsrv::srv,\n     doc: doc::doc,"}]}