{"sha": "0d82fb55dbb9b28798ea7c2004fa91fe3ae23b86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkODJmYjU1ZGJiOWIyODc5OGVhN2MyMDA0ZmE5MWZlM2FlMjNiODY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-15T09:02:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-15T09:02:31Z"}, "message": "Auto merge of #26307 - nrc:save-bugs, r=cmr\n\nr? @brson (or anyone, really)", "tree": {"sha": "2aab8478f66bed0dc97012de5d19c9e64a122ea3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2aab8478f66bed0dc97012de5d19c9e64a122ea3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d82fb55dbb9b28798ea7c2004fa91fe3ae23b86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d82fb55dbb9b28798ea7c2004fa91fe3ae23b86", "html_url": "https://github.com/rust-lang/rust/commit/0d82fb55dbb9b28798ea7c2004fa91fe3ae23b86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d82fb55dbb9b28798ea7c2004fa91fe3ae23b86/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7517ecf4fc9cfe2adff8a38ecc2ef660692a4b5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7517ecf4fc9cfe2adff8a38ecc2ef660692a4b5b", "html_url": "https://github.com/rust-lang/rust/commit/7517ecf4fc9cfe2adff8a38ecc2ef660692a4b5b"}, {"sha": "a54bbac99af8240d78e161ac68653726c4ff27cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a54bbac99af8240d78e161ac68653726c4ff27cc", "html_url": "https://github.com/rust-lang/rust/commit/a54bbac99af8240d78e161ac68653726c4ff27cc"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "3ea628704ebc6790beffacd37993412e5927ff35", "filename": "src/librustc_trans/save/mod.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0d82fb55dbb9b28798ea7c2004fa91fe3ae23b86/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d82fb55dbb9b28798ea7c2004fa91fe3ae23b86/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fmod.rs?ref=0d82fb55dbb9b28798ea7c2004fa91fe3ae23b86", "patch": "@@ -255,16 +255,17 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n                 match typ.node {\n                     // Common case impl for a struct or something basic.\n                     ast::TyPath(None, ref path) => {\n-                        sub_span = self.span_utils.sub_span_for_type_name(path.span);\n+                        sub_span = self.span_utils.sub_span_for_type_name(path.span).unwrap();\n                         type_data = self.lookup_ref_id(typ.id).map(|id| TypeRefData {\n-                            span: sub_span.unwrap(),\n+                            span: sub_span,\n                             scope: parent,\n                             ref_id: id,\n                         });\n                     },\n                     _ => {\n                         // Less useful case, impl for a compound type.\n-                        sub_span = self.span_utils.sub_span_for_type_name(typ.span);\n+                        let span = typ.span;\n+                        sub_span = self.span_utils.sub_span_for_type_name(span).unwrap_or(span);\n                     }\n                 }\n \n@@ -273,7 +274,7 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n \n                 Data::ImplData(ImplData {\n                     id: item.id,\n-                    span: sub_span.unwrap(),\n+                    span: sub_span,\n                     scope: parent,\n                     trait_ref: trait_data,\n                     self_ref: type_data,\n@@ -320,9 +321,10 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n                               parent: NodeId)\n                               -> Option<TypeRefData> {\n         self.lookup_ref_id(trait_ref.ref_id).map(|def_id| {\n-            let sub_span = self.span_utils.sub_span_for_type_name(trait_ref.path.span);\n+            let span = trait_ref.path.span;\n+            let sub_span = self.span_utils.sub_span_for_type_name(span).unwrap_or(span);\n             TypeRefData {\n-                span: sub_span.unwrap(),\n+                span: sub_span,\n                 scope: parent,\n                 ref_id: def_id,\n             }"}]}