{"sha": "208a74ca5079d2f605f7dd7cd3864e355c12be22", "node_id": "C_kwDOAAsO6NoAKDIwOGE3NGNhNTA3OWQyZjYwNWY3ZGQ3Y2QzODY0ZTM1NWMxMmJlMjI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-11T07:22:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-11T07:22:40Z"}, "message": "Auto merge of #14535 - davidbarsky:davidbarsky/use-parent-folder-for-discovery-cwd, r=Veykril\n\nfix: when running the \"discoverProjectCommand\", use the Rust file's parent directory instead of the workspace folder\n\nThis is a quick fix to allow the `discoverProjectCommand` to run successfully when the user has a workspace that does not, e.g., have a `.buckconfig` defined.\n\n(It's also probably _more correct_ to set the `pwd` of the command to the parent of the Rust file _anyways_ rather than relying on the workspace folders, which may be entirely unrelated.)", "tree": {"sha": "5cd9800ab07622cb6e4498c3030147ad7ada1e6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cd9800ab07622cb6e4498c3030147ad7ada1e6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/208a74ca5079d2f605f7dd7cd3864e355c12be22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/208a74ca5079d2f605f7dd7cd3864e355c12be22", "html_url": "https://github.com/rust-lang/rust/commit/208a74ca5079d2f605f7dd7cd3864e355c12be22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/208a74ca5079d2f605f7dd7cd3864e355c12be22/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44cf8ef49ad3db5e82f18a89b20e925353389121", "url": "https://api.github.com/repos/rust-lang/rust/commits/44cf8ef49ad3db5e82f18a89b20e925353389121", "html_url": "https://github.com/rust-lang/rust/commit/44cf8ef49ad3db5e82f18a89b20e925353389121"}, {"sha": "b99c129b74a0ba1eb2307fa6151be81b544a3794", "url": "https://api.github.com/repos/rust-lang/rust/commits/b99c129b74a0ba1eb2307fa6151be81b544a3794", "html_url": "https://github.com/rust-lang/rust/commit/b99c129b74a0ba1eb2307fa6151be81b544a3794"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "4438d475ad914bdfaae791406580606b2d0524da", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/208a74ca5079d2f605f7dd7cd3864e355c12be22/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/208a74ca5079d2f605f7dd7cd3864e355c12be22/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=208a74ca5079d2f605f7dd7cd3864e355c12be22", "patch": "@@ -761,12 +761,13 @@ export function addProject(ctx: CtxInit): Cmd {\n         }\n \n         const workspaces: JsonProject[] = await Promise.all(\n-            vscode.workspace.workspaceFolders!.map(async (folder): Promise<JsonProject> => {\n-                const rustDocuments = vscode.workspace.textDocuments.filter(isRustDocument);\n-                return discoverWorkspace(rustDocuments, discoverProjectCommand, {\n-                    cwd: folder.uri.fsPath,\n-                });\n-            })\n+            vscode.workspace.textDocuments\n+                .filter(isRustDocument)\n+                .map(async (file): Promise<JsonProject> => {\n+                    return discoverWorkspace([file], discoverProjectCommand, {\n+                        cwd: path.dirname(file.uri.fsPath),\n+                    });\n+                })\n         );\n \n         ctx.addToDiscoveredWorkspaces(workspaces);"}, {"sha": "0ffa42c2a5a1f551b64dc75e304e8a2ed3f55ef5", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/208a74ca5079d2f605f7dd7cd3864e355c12be22/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/208a74ca5079d2f605f7dd7cd3864e355c12be22/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=208a74ca5079d2f605f7dd7cd3864e355c12be22", "patch": "@@ -1,6 +1,7 @@\n import * as vscode from \"vscode\";\n import * as lc from \"vscode-languageclient/node\";\n import * as ra from \"./lsp_ext\";\n+import * as path from \"path\";\n \n import { Config, prepareVSCodeConfig } from \"./config\";\n import { createClient } from \"./client\";\n@@ -192,12 +193,13 @@ export class Ctx {\n             const discoverProjectCommand = this.config.discoverProjectCommand;\n             if (discoverProjectCommand) {\n                 const workspaces: JsonProject[] = await Promise.all(\n-                    vscode.workspace.workspaceFolders!.map(async (folder): Promise<JsonProject> => {\n-                        const rustDocuments = vscode.workspace.textDocuments.filter(isRustDocument);\n-                        return discoverWorkspace(rustDocuments, discoverProjectCommand, {\n-                            cwd: folder.uri.fsPath,\n-                        });\n-                    })\n+                    vscode.workspace.textDocuments\n+                        .filter(isRustDocument)\n+                        .map(async (file): Promise<JsonProject> => {\n+                            return discoverWorkspace([file], discoverProjectCommand, {\n+                                cwd: path.dirname(file.uri.fsPath),\n+                            });\n+                        })\n                 );\n \n                 this.addToDiscoveredWorkspaces(workspaces);"}]}