{"sha": "b144adf3be09bc31f4d306be9e5992b000fc7b1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxNDRhZGYzYmUwOWJjMzFmNGQzMDZiZTllNTk5MmIwMDBmYzdiMWY=", "commit": {"author": {"name": "Otavio Salvador", "email": "otavio@ossystems.com.br", "date": "2018-10-12T23:07:25Z"}, "committer": {"name": "Otavio Salvador", "email": "otavio@ossystems.com.br", "date": "2018-10-12T23:07:25Z"}, "message": "closures: replace `.unwrap_or` with `.map_or`\n\nSigned-off-by: Otavio Salvador <otavio@ossystems.com.br>", "tree": {"sha": "dc8b1f9eaa6dc4b734a27fe1ad95b5294cb9f56f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc8b1f9eaa6dc4b734a27fe1ad95b5294cb9f56f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b144adf3be09bc31f4d306be9e5992b000fc7b1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b144adf3be09bc31f4d306be9e5992b000fc7b1f", "html_url": "https://github.com/rust-lang/rust/commit/b144adf3be09bc31f4d306be9e5992b000fc7b1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b144adf3be09bc31f4d306be9e5992b000fc7b1f/comments", "author": {"login": "otavio", "id": 25278, "node_id": "MDQ6VXNlcjI1Mjc4", "avatar_url": "https://avatars.githubusercontent.com/u/25278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/otavio", "html_url": "https://github.com/otavio", "followers_url": "https://api.github.com/users/otavio/followers", "following_url": "https://api.github.com/users/otavio/following{/other_user}", "gists_url": "https://api.github.com/users/otavio/gists{/gist_id}", "starred_url": "https://api.github.com/users/otavio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/otavio/subscriptions", "organizations_url": "https://api.github.com/users/otavio/orgs", "repos_url": "https://api.github.com/users/otavio/repos", "events_url": "https://api.github.com/users/otavio/events{/privacy}", "received_events_url": "https://api.github.com/users/otavio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "otavio", "id": 25278, "node_id": "MDQ6VXNlcjI1Mjc4", "avatar_url": "https://avatars.githubusercontent.com/u/25278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/otavio", "html_url": "https://github.com/otavio", "followers_url": "https://api.github.com/users/otavio/followers", "following_url": "https://api.github.com/users/otavio/following{/other_user}", "gists_url": "https://api.github.com/users/otavio/gists{/gist_id}", "starred_url": "https://api.github.com/users/otavio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/otavio/subscriptions", "organizations_url": "https://api.github.com/users/otavio/orgs", "repos_url": "https://api.github.com/users/otavio/repos", "events_url": "https://api.github.com/users/otavio/events{/privacy}", "received_events_url": "https://api.github.com/users/otavio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b709c0019244d8554c0799084815146a5ce800a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b709c0019244d8554c0799084815146a5ce800a", "html_url": "https://github.com/rust-lang/rust/commit/8b709c0019244d8554c0799084815146a5ce800a"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "fa656cc351eea68c857d6bbe8ce99cdd3acaa384", "filename": "src/closures.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b144adf3be09bc31f4d306be9e5992b000fc7b1f/src%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b144adf3be09bc31f4d306be9e5992b000fc7b1f/src%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fclosures.rs?ref=b144adf3be09bc31f4d306be9e5992b000fc7b1f", "patch": "@@ -345,9 +345,9 @@ pub fn rewrite_last_closure(\n \n         // When overflowing the closure which consists of a single control flow expression,\n         // force to use block if its condition uses multi line.\n-        let is_multi_lined_cond = rewrite_cond(context, body, body_shape)\n-            .map(|cond| cond.contains('\\n') || cond.len() > body_shape.width)\n-            .unwrap_or(false);\n+        let is_multi_lined_cond = rewrite_cond(context, body, body_shape).map_or(false, |cond| {\n+            cond.contains('\\n') || cond.len() > body_shape.width\n+        });\n         if is_multi_lined_cond {\n             return rewrite_closure_with_block(body, &prefix, context, body_shape);\n         }"}]}