{"sha": "0f847ba74da083124f3d5d38d36fc1135737c12c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmODQ3YmE3NGRhMDgzMTI0ZjNkNWQzOGQzNmZjMTEzNTczN2MxMmM=", "commit": {"author": {"name": "Stuart Pernsteiner", "email": "spernsteiner@mozilla.com", "date": "2014-08-12T16:19:47Z"}, "committer": {"name": "Stuart Pernsteiner", "email": "spernsteiner@mozilla.com", "date": "2014-08-12T23:14:27Z"}, "message": "more consistent handling of inner items", "tree": {"sha": "c087b59a6a0124a60e8611fd3b4a1b7df70f2ca9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c087b59a6a0124a60e8611fd3b4a1b7df70f2ca9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f847ba74da083124f3d5d38d36fc1135737c12c", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f847ba74da083124f3d5d38d36fc1135737c12c", "html_url": "https://github.com/rust-lang/rust/commit/0f847ba74da083124f3d5d38d36fc1135737c12c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f847ba74da083124f3d5d38d36fc1135737c12c/comments", "author": {"login": "spernsteiner", "id": 3031136, "node_id": "MDQ6VXNlcjMwMzExMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3031136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spernsteiner", "html_url": "https://github.com/spernsteiner", "followers_url": "https://api.github.com/users/spernsteiner/followers", "following_url": "https://api.github.com/users/spernsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/spernsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/spernsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spernsteiner/subscriptions", "organizations_url": "https://api.github.com/users/spernsteiner/orgs", "repos_url": "https://api.github.com/users/spernsteiner/repos", "events_url": "https://api.github.com/users/spernsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/spernsteiner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spernsteiner", "id": 3031136, "node_id": "MDQ6VXNlcjMwMzExMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3031136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spernsteiner", "html_url": "https://github.com/spernsteiner", "followers_url": "https://api.github.com/users/spernsteiner/followers", "following_url": "https://api.github.com/users/spernsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/spernsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/spernsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spernsteiner/subscriptions", "organizations_url": "https://api.github.com/users/spernsteiner/orgs", "repos_url": "https://api.github.com/users/spernsteiner/repos", "events_url": "https://api.github.com/users/spernsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/spernsteiner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "428d5ac5b94b2470ce379b0751861ec903825d7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/428d5ac5b94b2470ce379b0751861ec903825d7b", "html_url": "https://github.com/rust-lang/rust/commit/428d5ac5b94b2470ce379b0751861ec903825d7b"}], "stats": {"total": 59, "additions": 50, "deletions": 9}, "files": [{"sha": "35d32d995250645884240321304b06fa972ca31d", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0f847ba74da083124f3d5d38d36fc1135737c12c/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f847ba74da083124f3d5d38d36fc1135737c12c/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=0f847ba74da083124f3d5d38d36fc1135737c12c", "patch": "@@ -2070,12 +2070,12 @@ pub fn trans_item(ccx: &CrateContext, item: &ast::Item) {\n                          item.id,\n                          item.attrs.as_slice());\n             }\n-        } else {\n-            // Be sure to travel more than just one layer deep to catch nested\n-            // items in blocks and such.\n-            let mut v = TransItemVisitor{ ccx: ccx };\n-            v.visit_block(&**body, ());\n         }\n+\n+        // Be sure to travel more than just one layer deep to catch nested\n+        // items in blocks and such.\n+        let mut v = TransItemVisitor{ ccx: ccx };\n+        v.visit_block(&**body, ());\n       }\n       ast::ItemImpl(ref generics, _, _, ref ms) => {\n         meth::trans_impl(ccx, item.ident, ms.as_slice(), generics, item.id);"}, {"sha": "a481f92db33916345a1635176feb38926b38d280", "filename": "src/librustc/middle/trans/controlflow.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0f847ba74da083124f3d5d38d36fc1135737c12c/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f847ba74da083124f3d5d38d36fc1135737c12c/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs?ref=0f847ba74da083124f3d5d38d36fc1135737c12c", "patch": "@@ -69,7 +69,8 @@ pub fn trans_stmt<'a>(cx: &'a Block<'a>,\n                         debuginfo::create_local_var_metadata(bcx, &**local);\n                     }\n                 }\n-                ast::DeclItem(ref i) => trans_item(cx.fcx.ccx, &**i)\n+                // Inner items are visited by `trans_item`/`trans_meth`.\n+                ast::DeclItem(_) => {},\n             }\n         }\n         ast::StmtMac(..) => cx.tcx().sess.bug(\"unexpanded macro\")"}, {"sha": "3578b25c83957edfaade6f1a5a379711255b37d4", "filename": "src/librustc/middle/trans/meth.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f847ba74da083124f3d5d38d36fc1135737c12c/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f847ba74da083124f3d5d38d36fc1135737c12c/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs?ref=0f847ba74da083124f3d5d38d36fc1135737c12c", "patch": "@@ -76,10 +76,9 @@ pub fn trans_impl(ccx: &CrateContext,\n                      &param_substs::empty(),\n                      method.id,\n                      []);\n-        } else {\n-            let mut v = TransItemVisitor{ ccx: ccx };\n-            visit::walk_method_helper(&mut v, &**method, ());\n         }\n+        let mut v = TransItemVisitor{ ccx: ccx };\n+        visit::walk_method_helper(&mut v, &**method, ());\n     }\n }\n "}, {"sha": "7f715a475beadf1321a7921ed5ca7049c8827cba", "filename": "src/test/run-make/issue-7349/Makefile", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0f847ba74da083124f3d5d38d36fc1135737c12c/src%2Ftest%2Frun-make%2Fissue-7349%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/0f847ba74da083124f3d5d38d36fc1135737c12c/src%2Ftest%2Frun-make%2Fissue-7349%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-7349%2FMakefile?ref=0f847ba74da083124f3d5d38d36fc1135737c12c", "patch": "@@ -0,0 +1,11 @@\n+-include ../tools.mk\n+\n+# Test to make sure that inner functions within a polymorphic outer function\n+# don't get re-translated when the outer function is monomorphized.  The test\n+# code monomorphizes the outer functions several times, but the magic constants\n+# used in the inner functions should each appear only once in the generated IR.\n+\n+all:\n+\t$(RUSTC) foo.rs --emit=ir\n+\t[ \"$$(grep -c 8675309 \"$(TMPDIR)/foo.ll\")\" -eq \"1\" ]\n+\t[ \"$$(grep -c 11235813 \"$(TMPDIR)/foo.ll\")\" -eq \"1\" ]"}, {"sha": "870d1749278d7253eab8042255685f47e9afd4c5", "filename": "src/test/run-make/issue-7349/foo.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/0f847ba74da083124f3d5d38d36fc1135737c12c/src%2Ftest%2Frun-make%2Fissue-7349%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f847ba74da083124f3d5d38d36fc1135737c12c/src%2Ftest%2Frun-make%2Fissue-7349%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-7349%2Ffoo.rs?ref=0f847ba74da083124f3d5d38d36fc1135737c12c", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn outer<T>() {\n+    #[allow(dead_code)]\n+    fn inner() -> uint {\n+        8675309\n+    }\n+}\n+\n+extern \"C\" fn outer_foreign<T>() {\n+    #[allow(dead_code)]\n+    fn inner() -> uint {\n+        11235813\n+    }\n+}\n+\n+fn main() {\n+    outer::<int>();\n+    outer::<uint>();\n+    outer_foreign::<int>();\n+    outer_foreign::<uint>();\n+}"}]}