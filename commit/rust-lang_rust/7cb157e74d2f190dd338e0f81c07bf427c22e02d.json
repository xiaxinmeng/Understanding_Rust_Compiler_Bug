{"sha": "7cb157e74d2f190dd338e0f81c07bf427c22e02d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjYjE1N2U3NGQyZjE5MGRkMzM4ZTBmODFjMDdiZjQyN2MyMmUwMmQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-07-17T15:17:43Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-07-20T16:51:29Z"}, "message": "Register new snapshots\n\nThese new snapshots contain the knowledge of how to build the new triples of\n32-bit MSVC and 32-bit FreeBSD, both of which should soon start having\nnightlies/auto builders!\n\nThis does not currently register bitrig/freebsd snapshots but I believe those\nwill be retroactively added in the near future.", "tree": {"sha": "1a7fb1325fa862e23325732d0bc834019509070a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a7fb1325fa862e23325732d0bc834019509070a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cb157e74d2f190dd338e0f81c07bf427c22e02d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cb157e74d2f190dd338e0f81c07bf427c22e02d", "html_url": "https://github.com/rust-lang/rust/commit/7cb157e74d2f190dd338e0f81c07bf427c22e02d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cb157e74d2f190dd338e0f81c07bf427c22e02d/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39d4faf989cea236e2e1669ab85d060d1c62cd85", "url": "https://api.github.com/repos/rust-lang/rust/commits/39d4faf989cea236e2e1669ab85d060d1c62cd85", "html_url": "https://github.com/rust-lang/rust/commit/39d4faf989cea236e2e1669ab85d060d1c62cd85"}], "stats": {"total": 39, "additions": 8, "deletions": 31}, "files": [{"sha": "ead0b4259a987cdf4f0357fca67e3305b1e499e7", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7cb157e74d2f190dd338e0f81c07bf427c22e02d/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb157e74d2f190dd338e0f81c07bf427c22e02d/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=7cb157e74d2f190dd338e0f81c07bf427c22e02d", "patch": "@@ -135,20 +135,3 @@ pub fn oom() -> ! {\n     //                allocate.\n     unsafe { core::intrinsics::abort() }\n }\n-\n-// FIXME(#14344): When linking liballoc with libstd, this library will be linked\n-//                as an rlib (it only exists as an rlib). It turns out that an\n-//                optimized standard library doesn't actually use *any* symbols\n-//                from this library. Everything is inlined and optimized away.\n-//                This means that linkers will actually omit the object for this\n-//                file, even though it may be needed in the future.\n-//\n-//                To get around this for now, we define a dummy symbol which\n-//                will never get inlined so the stdlib can call it. The stdlib's\n-//                reference to this symbol will cause this library's object file\n-//                to get linked in to libstd successfully (the linker won't\n-//                optimize it out).\n-#[doc(hidden)]\n-#[unstable(feature = \"issue_14344_fixme\")]\n-#[cfg(stage0)]\n-pub fn fixme_14344_be_sure_to_link_to_collections() {}"}, {"sha": "1f94838499218ee1bc22168ed3f7024c5e816c4f", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7cb157e74d2f190dd338e0f81c07bf427c22e02d/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb157e74d2f190dd338e0f81c07bf427c22e02d/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=7cb157e74d2f190dd338e0f81c07bf427c22e02d", "patch": "@@ -133,13 +133,6 @@ pub mod btree_set {\n     pub use btree::set::*;\n }\n \n-\n-// FIXME(#14344) this shouldn't be necessary\n-#[doc(hidden)]\n-#[unstable(feature = \"issue_14344_fixme\")]\n-#[cfg(stage0)]\n-pub fn fixme_14344_be_sure_to_link_to_collections() {}\n-\n #[cfg(not(test))]\n mod std {\n     pub use core::ops;      // RangeFull"}, {"sha": "cc58952be600a341451a12c81af1b00b9f4379c3", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7cb157e74d2f190dd338e0f81c07bf427c22e02d/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb157e74d2f190dd338e0f81c07bf427c22e02d/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=7cb157e74d2f190dd338e0f81c07bf427c22e02d", "patch": "@@ -979,23 +979,20 @@ impl ops::Index<ops::RangeFull> for String {\n     }\n }\n \n-#[cfg(not(stage0))]\n #[stable(feature = \"derefmut_for_string\", since = \"1.2.0\")]\n impl ops::IndexMut<ops::Range<usize>> for String {\n     #[inline]\n     fn index_mut(&mut self, index: ops::Range<usize>) -> &mut str {\n         &mut self[..][index]\n     }\n }\n-#[cfg(not(stage0))]\n #[stable(feature = \"derefmut_for_string\", since = \"1.2.0\")]\n impl ops::IndexMut<ops::RangeTo<usize>> for String {\n     #[inline]\n     fn index_mut(&mut self, index: ops::RangeTo<usize>) -> &mut str {\n         &mut self[..][index]\n     }\n }\n-#[cfg(not(stage0))]\n #[stable(feature = \"derefmut_for_string\", since = \"1.2.0\")]\n impl ops::IndexMut<ops::RangeFrom<usize>> for String {\n     #[inline]"}, {"sha": "c229df34ccf8918ab1f51c9c16ffd35d92e5df43", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7cb157e74d2f190dd338e0f81c07bf427c22e02d/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb157e74d2f190dd338e0f81c07bf427c22e02d/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=7cb157e74d2f190dd338e0f81c07bf427c22e02d", "patch": "@@ -6535,8 +6535,4 @@ pub mod funcs {\n     }\n }\n \n-#[doc(hidden)]\n-#[cfg(stage0)]\n-pub fn issue_14344_workaround() {} // FIXME #14344 force linkage to happen correctly\n-\n #[test] fn work_on_windows() { } // FIXME #10872 needed for a happy windows"}, {"sha": "cb5790b34f4d365f6ae6a4b51a4493d5ec544189", "filename": "src/snapshots.txt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7cb157e74d2f190dd338e0f81c07bf427c22e02d/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7cb157e74d2f190dd338e0f81c07bf427c22e02d/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=7cb157e74d2f190dd338e0f81c07bf427c22e02d", "patch": "@@ -1,3 +1,11 @@\n+S 2015-07-17 d4432b3\n+  linux-i386 93f6216a35d3bed3cedf244c9aff4cd716336bd9\n+  linux-x86_64 d8f4967fc71a153c925faecf95a7feadf7e463a4\n+  macos-i386 29852c4d4b5a851f16d627856a279cae5bf9bd01\n+  macos-x86_64 1a20259899321062a0325edb1d22990f05d18708\n+  winnt-i386 df50210f41db9a6f2968be5773b8e3bae32bb823\n+  winnt-x86_64 d7774b724988485652781a804bdf8e05d28ead48\n+\n S 2015-05-24 ba0e1cd\n   bitrig-x86_64 2a710e16e3e3ef3760df1f724d66b3af34c1ef3f\n   freebsd-x86_64 370db40613f5c08563ed7e38357826dd42d4e0f8"}]}