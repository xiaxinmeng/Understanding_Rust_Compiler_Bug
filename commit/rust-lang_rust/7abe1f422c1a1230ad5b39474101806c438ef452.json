{"sha": "7abe1f422c1a1230ad5b39474101806c438ef452", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhYmUxZjQyMmMxYTEyMzBhZDViMzk0NzQxMDE4MDZjNDM4ZWY0NTI=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-28T11:39:02Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-28T11:39:02Z"}, "message": "Merge #678\n\n678: WIP: automatically collect garbage r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "2da2a92660b4410e91cb14c0dc3b9bbacdef08ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2da2a92660b4410e91cb14c0dc3b9bbacdef08ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7abe1f422c1a1230ad5b39474101806c438ef452", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7abe1f422c1a1230ad5b39474101806c438ef452", "html_url": "https://github.com/rust-lang/rust/commit/7abe1f422c1a1230ad5b39474101806c438ef452", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7abe1f422c1a1230ad5b39474101806c438ef452/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "6e36d3f6537f80071e7ed8ff45ca2271a9ffe7a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e36d3f6537f80071e7ed8ff45ca2271a9ffe7a7", "html_url": "https://github.com/rust-lang/rust/commit/6e36d3f6537f80071e7ed8ff45ca2271a9ffe7a7"}, {"sha": "53e3e82d919e36cc2225d4f7f867a45f0cede53a", "url": "https://api.github.com/repos/rust-lang/rust/commits/53e3e82d919e36cc2225d4f7f867a45f0cede53a", "html_url": "https://github.com/rust-lang/rust/commit/53e3e82d919e36cc2225d4f7f867a45f0cede53a"}], "stats": {"total": 183, "additions": 152, "deletions": 31}, "files": [{"sha": "628e431bd16eb0ba9c44c0ca5e9964a5057f0448", "filename": "Cargo.lock", "status": "modified", "additions": 48, "deletions": 9, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/7abe1f422c1a1230ad5b39474101806c438ef452/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/7abe1f422c1a1230ad5b39474101806c438ef452/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=7abe1f422c1a1230ad5b39474101806c438ef452", "patch": "@@ -380,6 +380,11 @@ name = \"fnv\"\n version = \"1.0.6\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"fs_extra\"\n+version = \"1.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"fsevent\"\n version = \"0.2.17\"\n@@ -551,6 +556,34 @@ name = \"itoa\"\n version = \"0.4.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"jemalloc-ctl\"\n+version = \"0.2.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"jemalloc-sys 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"jemalloc-sys\"\n+version = \"0.1.8\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"cc 1.0.28 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"fs_extra 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"jemallocator\"\n+version = \"0.1.9\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"jemalloc-sys 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.48 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"join_to_string\"\n version = \"0.1.3\"\n@@ -890,7 +923,7 @@ dependencies = [\n  \"ra_syntax 0.1.0\",\n  \"relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"salsa 0.10.0-alpha5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"salsa 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"test_utils 0.1.0\",\n ]\n \n@@ -920,6 +953,8 @@ dependencies = [\n  \"fst 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"insta 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"jemalloc-ctl 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"jemallocator 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"join_to_string 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1061,7 +1096,7 @@ version = \"0.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"autocfg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rand_core 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1090,7 +1125,7 @@ name = \"rand_hc\"\n version = \"0.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"rand_core 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1128,7 +1163,7 @@ name = \"rand_xorshift\"\n version = \"0.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"rand_core 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1266,7 +1301,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"salsa\"\n-version = \"0.10.0-alpha5\"\n+version = \"0.10.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"derive-new 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1275,13 +1310,13 @@ dependencies = [\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"salsa-macros 0.10.0-alpha5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"salsa-macros 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smallvec 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"salsa-macros\"\n-version = \"0.10.0-alpha5\"\n+version = \"0.10.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1868,6 +1903,7 @@ dependencies = [\n \"checksum filetime 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a2df5c1a8c4be27e7707789dc42ae65976e60b394afd293d1419ab915833e646\"\n \"checksum flexi_logger 0.10.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bbd731387787f54fa333fa426e173fe42ea3d1123636b2b27ad802025fc5d182\"\n \"checksum fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2fad85553e09a6f881f739c29f0b00b0f01357c743266d478b68951ce23285f3\"\n+\"checksum fs_extra 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5f2a4a2034423744d2cc7ca2068453168dcdb82c438419e639a26bd87839c674\"\n \"checksum fsevent 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c4bbbf71584aeed076100b5665ac14e3d85eeb31fdbb45fbd41ef9a682b5ec05\"\n \"checksum fsevent-sys 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1a772d36c338d07a032d5375a36f15f9a7043bf0cb8ce7cee658e037c6032874\"\n \"checksum fst 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"db72126ca7dff566cdbbdd54af44668c544897d9d3862b198141f176f1238bdf\"\n@@ -1887,6 +1923,9 @@ dependencies = [\n \"checksum iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dbe6e417e7d0975db6512b90796e8ce223145ac4e33c377e4a42882a0e88bb08\"\n \"checksum itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5b8467d9c1cebe26feb08c640139247fac215782d35371ade9a2136ed6085358\"\n \"checksum itoa 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1306f3464951f30e30d12373d31c79fbd52d236e5e896fd92f96ec7babbbe60b\"\n+\"checksum jemalloc-ctl 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4e93b0f37e7d735c6b610176d5b1bde8e1621ff3f6f7ac23cdfa4e7f7d0111b5\"\n+\"checksum jemalloc-sys 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bfc62c8e50e381768ce8ee0428ee53741929f7ebd73e4d83f669bcf7693e00ae\"\n+\"checksum jemallocator 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9f0cd42ac65f758063fea55126b0148b1ce0a6354ff78e07a4d6806bc65c4ab3\"\n \"checksum join_to_string 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4dc7a5290e8c2606ce2be49f456d50f69173cb96d1541e4f66e34ac8b331a98f\"\n \"checksum kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d\"\n \"checksum lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a374c89b9db55895453a74c1e38861d9deec0b01b405a82516e9d5de4820dea1\"\n@@ -1950,8 +1989,8 @@ dependencies = [\n \"checksum rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a\"\n \"checksum rusty-fork 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9591f190d2852720b679c21f66ad929f9f1d7bb09d1193c26167586029d8489c\"\n \"checksum ryu 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"eb9e9b8cde282a9fe6a42dd4681319bfb63f121b8a8ee9439c6f4107e58a46f7\"\n-\"checksum salsa 0.10.0-alpha5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8b5e2535d707dc5ced81106d3b71d806cfeef8a6e8a567472fde7ffd56b770dd\"\n-\"checksum salsa-macros 0.10.0-alpha5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e7c5da4c649f6d4fc1864fcd9a379b1f7c6d570b278559c84a6e15981c949cc6\"\n+\"checksum salsa 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cad0e2348e2f80725b2980914a08a00267136c3ecf720896d3f7f08eef51e08f\"\n+\"checksum salsa-macros 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7c79744109df21b80aef1367669b0a9e4985bc966e76bf0e9321b222ec0b9fbb\"\n \"checksum same-file 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8f20c4be53a8a1ff4c1f1b2bd14570d2f634628709752f0702ecdd2b3f9a5267\"\n \"checksum scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"94258f53601af11e6a49f722422f6e3425c52b06245a5cf9bc09908b174f5e27\"\n \"checksum semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403\""}, {"sha": "3bae22c743a3caaa7fbf0239eff4168b05b36f63", "filename": "crates/ra_db/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7abe1f422c1a1230ad5b39474101806c438ef452/crates%2Fra_db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7abe1f422c1a1230ad5b39474101806c438ef452/crates%2Fra_db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2FCargo.toml?ref=7abe1f422c1a1230ad5b39474101806c438ef452", "patch": "@@ -5,8 +5,8 @@ version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n \n [dependencies]\n+salsa = \"0.10.0\"\n relative-path = \"0.4.0\"\n-salsa = \"0.10.0-alpha5\"\n rustc-hash = \"1.0\"\n parking_lot = \"0.7.0\"\n "}, {"sha": "ad9dd20882f045586d0ae01eccc8c74970e366b7", "filename": "crates/ra_ide_api/Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7abe1f422c1a1230ad5b39474101806c438ef452/crates%2Fra_ide_api%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7abe1f422c1a1230ad5b39474101806c438ef452/crates%2Fra_ide_api%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2FCargo.toml?ref=7abe1f422c1a1230ad5b39474101806c438ef452", "patch": "@@ -14,6 +14,8 @@ fst = \"0.3.1\"\n rustc-hash = \"1.0\"\n parking_lot = \"0.7.0\"\n unicase = \"2.2.0\"\n+jemallocator = \"0.1.9\"\n+jemalloc-ctl = \"0.2.0\"\n \n ra_syntax = { path = \"../ra_syntax\" }\n ra_ide_api_light = { path = \"../ra_ide_api_light\" }"}, {"sha": "6850811d75be46d51830b5f67e649552891fd604", "filename": "crates/ra_ide_api/src/db.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7abe1f422c1a1230ad5b39474101806c438ef452/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7abe1f422c1a1230ad5b39474101806c438ef452/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdb.rs?ref=7abe1f422c1a1230ad5b39474101806c438ef452", "patch": "@@ -1,4 +1,7 @@\n-use std::sync::Arc;\n+use std::{\n+    sync::Arc,\n+    time,\n+};\n \n use ra_db::{\n     CheckCanceled, FileId, Canceled, SourceDatabase,\n@@ -17,6 +20,8 @@ use crate::{LineIndex, symbol_index::{self, SymbolsDatabase}};\n pub(crate) struct RootDatabase {\n     runtime: salsa::Runtime<RootDatabase>,\n     interner: Arc<hir::HirInterner>,\n+    pub(crate) last_gc: time::Instant,\n+    pub(crate) last_gc_check: time::Instant,\n }\n \n impl salsa::Database for RootDatabase {\n@@ -33,6 +38,8 @@ impl Default for RootDatabase {\n         let mut db = RootDatabase {\n             runtime: salsa::Runtime::default(),\n             interner: Default::default(),\n+            last_gc: time::Instant::now(),\n+            last_gc_check: time::Instant::now(),\n         };\n         db.set_crate_graph(Default::default());\n         db.set_local_roots(Default::default());\n@@ -46,6 +53,8 @@ impl salsa::ParallelDatabase for RootDatabase {\n         salsa::Snapshot::new(RootDatabase {\n             runtime: self.runtime.snapshot(self),\n             interner: Arc::clone(&self.interner),\n+            last_gc: self.last_gc.clone(),\n+            last_gc_check: self.last_gc_check.clone(),\n         })\n     }\n }"}, {"sha": "31e0f5d6de2d6d98e24ce95b8a1a9802b4d7c342", "filename": "crates/ra_ide_api/src/imp.rs", "status": "modified", "additions": 36, "deletions": 13, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/7abe1f422c1a1230ad5b39474101806c438ef452/crates%2Fra_ide_api%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7abe1f422c1a1230ad5b39474101806c438ef452/crates%2Fra_ide_api%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fimp.rs?ref=7abe1f422c1a1230ad5b39474101806c438ef452", "patch": "@@ -1,4 +1,7 @@\n-use std::sync::Arc;\n+use std::{\n+    sync::Arc,\n+    time,\n+};\n \n use hir::{\n     self, Problem, source_binder\n@@ -19,12 +22,14 @@ use crate::{\n     CrateId, db, Diagnostic, FileId, FilePosition, FileRange, FileSystemEdit,\n     Query, RootChange, SourceChange, SourceFileEdit,\n     symbol_index::{FileSymbol, SymbolsDatabase},\n+    status::syntax_tree_stats\n };\n \n+const GC_COOLDOWN: time::Duration = time::Duration::from_millis(100);\n+\n impl db::RootDatabase {\n     pub(crate) fn apply_change(&mut self, change: AnalysisChange) {\n         log::info!(\"apply_change {:?}\", change);\n-        // self.gc_syntax_trees();\n         if !change.new_roots.is_empty() {\n             let mut local_roots = Vec::clone(&self.local_roots());\n             for (root_id, is_local) in change.new_roots {\n@@ -72,18 +77,36 @@ impl db::RootDatabase {\n         self.set_source_root(root_id, Arc::new(source_root));\n     }\n \n-    /// Ideally, we should call this function from time to time to collect heavy\n-    /// syntax trees. However, if we actually do that, everything is recomputed\n-    /// for some reason. Needs investigation.\n+    pub(crate) fn maybe_collect_garbage(&mut self) {\n+        if self.last_gc_check.elapsed() > GC_COOLDOWN {\n+            self.last_gc_check = time::Instant::now();\n+            let retained_trees = syntax_tree_stats(self).retained;\n+            if retained_trees > 100 {\n+                log::info!(\n+                    \"automatic garbadge collection, {} retained trees\",\n+                    retained_trees\n+                );\n+                self.collect_garbage();\n+            }\n+        }\n+    }\n+\n     pub(crate) fn collect_garbage(&mut self) {\n-        self.query(ra_db::ParseQuery)\n-            .sweep(SweepStrategy::default().discard_values());\n-        self.query(hir::db::HirParseQuery)\n-            .sweep(SweepStrategy::default().discard_values());\n-        self.query(hir::db::FileItemsQuery)\n-            .sweep(SweepStrategy::default().discard_values());\n-        self.query(hir::db::FileItemQuery)\n-            .sweep(SweepStrategy::default().discard_values());\n+        self.last_gc = time::Instant::now();\n+\n+        let sweep = SweepStrategy::default()\n+            .discard_values()\n+            .sweep_all_revisions();\n+\n+        self.query(ra_db::ParseQuery).sweep(sweep);\n+\n+        self.query(hir::db::HirParseQuery).sweep(sweep);\n+        self.query(hir::db::FileItemsQuery).sweep(sweep);\n+        self.query(hir::db::FileItemQuery).sweep(sweep);\n+\n+        self.query(hir::db::LowerModuleQuery).sweep(sweep);\n+        self.query(hir::db::LowerModuleSourceMapQuery).sweep(sweep);\n+        self.query(hir::db::BodySyntaxMappingQuery).sweep(sweep);\n     }\n }\n "}, {"sha": "dc531e068d248be3ae19a803217aef606e6fb382", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7abe1f422c1a1230ad5b39474101806c438ef452/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7abe1f422c1a1230ad5b39474101806c438ef452/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=7abe1f422c1a1230ad5b39474101806c438ef452", "patch": "@@ -59,6 +59,11 @@ pub use ra_db::{\n     Canceled, CrateGraph, CrateId, FileId, FilePosition, FileRange, SourceRootId\n };\n \n+// We use jemalloc mainly to get heap usage statistics, actual performance\n+// differnece is not measures.\n+#[global_allocator]\n+static ALLOC: jemallocator::Jemalloc = jemallocator::Jemalloc;\n+\n pub type Cancelable<T> = Result<T, Canceled>;\n \n #[derive(Default)]\n@@ -286,6 +291,10 @@ impl AnalysisHost {\n         self.db.apply_change(change)\n     }\n \n+    pub fn maybe_collect_garbage(&mut self) {\n+        self.db.maybe_collect_garbage();\n+    }\n+\n     pub fn collect_garbage(&mut self) {\n         self.db.collect_garbage();\n     }"}, {"sha": "c3e5745d5e15bae98889ddc6960caa51d08ef925", "filename": "crates/ra_ide_api/src/status.rs", "status": "modified", "additions": 39, "deletions": 5, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/7abe1f422c1a1230ad5b39474101806c438ef452/crates%2Fra_ide_api%2Fsrc%2Fstatus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7abe1f422c1a1230ad5b39474101806c438ef452/crates%2Fra_ide_api%2Fsrc%2Fstatus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fstatus.rs?ref=7abe1f422c1a1230ad5b39474101806c438ef452", "patch": "@@ -15,9 +15,13 @@ use crate::{\n     symbol_index::{SymbolIndex, LibrarySymbolsQuery},\n };\n \n+pub(crate) fn syntax_tree_stats(db: &RootDatabase) -> SyntaxTreeStats {\n+    db.query(ParseQuery).entries::<SyntaxTreeStats>()\n+}\n+\n pub(crate) fn status(db: &RootDatabase) -> String {\n     let files_stats = db.query(FileTextQuery).entries::<FilesStats>();\n-    let syntax_tree_stats = db.query(ParseQuery).entries::<SyntaxTreeStats>();\n+    let syntax_tree_stats = syntax_tree_stats(db);\n     let symbols_stats = db\n         .query(LibrarySymbolsQuery)\n         .entries::<LibrarySymbolsStats>();\n@@ -26,8 +30,13 @@ pub(crate) fn status(db: &RootDatabase) -> String {\n         interner.len()\n     };\n     format!(\n-        \"{}\\n{}\\n{}\\nn_defs {}\\n\",\n-        files_stats, symbols_stats, syntax_tree_stats, n_defs\n+        \"{}\\n{}\\n{}\\n{} defs\\n\\nmemory:\\n{}\\ngc {:?} seconds ago\",\n+        files_stats,\n+        symbols_stats,\n+        syntax_tree_stats,\n+        n_defs,\n+        MemoryStats::current(),\n+        db.last_gc.elapsed().as_secs(),\n     )\n }\n \n@@ -58,9 +67,9 @@ impl FromIterator<TableEntry<FileId, Arc<String>>> for FilesStats {\n }\n \n #[derive(Default)]\n-struct SyntaxTreeStats {\n+pub(crate) struct SyntaxTreeStats {\n     total: usize,\n-    retained: usize,\n+    pub(crate) retained: usize,\n     retained_size: Bytes,\n }\n \n@@ -118,6 +127,31 @@ impl FromIterator<TableEntry<SourceRootId, Arc<SymbolIndex>>> for LibrarySymbols\n     }\n }\n \n+struct MemoryStats {\n+    allocated: Bytes,\n+    resident: Bytes,\n+}\n+\n+impl MemoryStats {\n+    fn current() -> MemoryStats {\n+        jemalloc_ctl::epoch().unwrap();\n+        MemoryStats {\n+            allocated: Bytes(jemalloc_ctl::stats::allocated().unwrap()),\n+            resident: Bytes(jemalloc_ctl::stats::resident().unwrap()),\n+        }\n+    }\n+}\n+\n+impl fmt::Display for MemoryStats {\n+    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n+        write!(\n+            fmt,\n+            \"{} allocated {} resident\",\n+            self.allocated, self.resident,\n+        )\n+    }\n+}\n+\n #[derive(Default)]\n struct Bytes(usize);\n "}, {"sha": "e430ac6dec0856c0dacf64864ab36fbddeaf42bb", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7abe1f422c1a1230ad5b39474101806c438ef452/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7abe1f422c1a1230ad5b39474101806c438ef452/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=7abe1f422c1a1230ad5b39474101806c438ef452", "patch": "@@ -172,6 +172,7 @@ fn main_loop_inner(\n \n     let (libdata_sender, libdata_receiver) = unbounded();\n     loop {\n+        state.maybe_collect_garbage();\n         log::trace!(\"selecting\");\n         let event = select! {\n             recv(msg_receiver) -> msg => match msg {\n@@ -207,7 +208,7 @@ fn main_loop_inner(\n                     };\n                     match req.cast::<req::CollectGarbage>() {\n                         Ok((id, ())) => {\n-                            state.collect_garbadge();\n+                            state.collect_garbage();\n                             let resp = RawResponse::ok::<req::CollectGarbage>(id, &());\n                             msg_sender.send(RawMessage::Response(resp)).unwrap()\n                         }"}, {"sha": "c2167c5d80342c69a2eb283accdfd45f9c4a0eb0", "filename": "crates/ra_lsp_server/src/server_world.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7abe1f422c1a1230ad5b39474101806c438ef452/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7abe1f422c1a1230ad5b39474101806c438ef452/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs?ref=7abe1f422c1a1230ad5b39474101806c438ef452", "patch": "@@ -232,7 +232,11 @@ impl ServerWorldState {\n         }\n     }\n \n-    pub fn collect_garbadge(&mut self) {\n+    pub fn maybe_collect_garbage(&mut self) {\n+        self.analysis_host.maybe_collect_garbage()\n+    }\n+\n+    pub fn collect_garbage(&mut self) {\n         self.analysis_host.collect_garbage()\n     }\n }"}]}