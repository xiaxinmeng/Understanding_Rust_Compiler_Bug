{"sha": "224c789ef26cea705d299cc160073879ad1be2b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNGM3ODllZjI2Y2VhNzA1ZDI5OWNjMTYwMDczODc5YWQxYmUyYjM=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-11-12T20:34:41Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-11-12T20:34:41Z"}, "message": "Fix a bad span for binops", "tree": {"sha": "6002dedc34b63e1870f3b7aec03b7df5a33b2b3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6002dedc34b63e1870f3b7aec03b7df5a33b2b3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/224c789ef26cea705d299cc160073879ad1be2b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/224c789ef26cea705d299cc160073879ad1be2b3", "html_url": "https://github.com/rust-lang/rust/commit/224c789ef26cea705d299cc160073879ad1be2b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/224c789ef26cea705d299cc160073879ad1be2b3/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "098ea175568b9bf4884985a729c211da4d913aed", "url": "https://api.github.com/repos/rust-lang/rust/commits/098ea175568b9bf4884985a729c211da4d913aed", "html_url": "https://github.com/rust-lang/rust/commit/098ea175568b9bf4884985a729c211da4d913aed"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "db61feb41139bb4797532a73218ac69dc5f40446", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/224c789ef26cea705d299cc160073879ad1be2b3/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/224c789ef26cea705d299cc160073879ad1be2b3/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=224c789ef26cea705d299cc160073879ad1be2b3", "patch": "@@ -2681,9 +2681,9 @@ impl<'a> Parser<'a> {\n             // Semi-statement forms are odd. See https://github.com/rust-lang/rust/issues/29071\n             return Ok(lhs);\n         }\n-        let cur_op_span = self.span;\n         self.expected_tokens.push(TokenType::Operator);\n         while let Some(op) = AssocOp::from_token(&self.token) {\n+            let cur_op_span = self.span;\n             let restrictions = if op.is_assign_like() {\n                 self.restrictions & Restrictions::RESTRICTION_NO_STRUCT_LITERAL\n             } else {"}]}