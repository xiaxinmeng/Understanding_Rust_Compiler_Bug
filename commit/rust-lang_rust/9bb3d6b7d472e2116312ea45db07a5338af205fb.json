{"sha": "9bb3d6b7d472e2116312ea45db07a5338af205fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliYjNkNmI3ZDQ3MmUyMTE2MzEyZWE0NWRiMDdhNTMzOGFmMjA1ZmI=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-11-11T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-11-12T18:52:03Z"}, "message": "Remove check for impossible condition\n\nThe callee body is already transformed; the condition is always false.", "tree": {"sha": "97f4b02ab1e20d7fe75c0545a5ab47557e19a426", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97f4b02ab1e20d7fe75c0545a5ab47557e19a426"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9bb3d6b7d472e2116312ea45db07a5338af205fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9bb3d6b7d472e2116312ea45db07a5338af205fb", "html_url": "https://github.com/rust-lang/rust/commit/9bb3d6b7d472e2116312ea45db07a5338af205fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9bb3d6b7d472e2116312ea45db07a5338af205fb/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae4332643de6a672ab3aefd62a3063c9af21166c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae4332643de6a672ab3aefd62a3063c9af21166c", "html_url": "https://github.com/rust-lang/rust/commit/ae4332643de6a672ab3aefd62a3063c9af21166c"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "0d6d9e397ac9f100f3873f46bcc52d97ff116829", "filename": "compiler/rustc_mir/src/transform/inline.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9bb3d6b7d472e2116312ea45db07a5338af205fb/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bb3d6b7d472e2116312ea45db07a5338af205fb/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs?ref=9bb3d6b7d472e2116312ea45db07a5338af205fb", "patch": "@@ -203,12 +203,6 @@ impl Inliner<'tcx> {\n         debug!(\"should_inline({:?})\", callsite);\n         let tcx = self.tcx;\n \n-        // Cannot inline generators which haven't been transformed yet\n-        if callee_body.yield_ty.is_some() {\n-            debug!(\"    yield ty present - not inlining\");\n-            return false;\n-        }\n-\n         let codegen_fn_attrs = tcx.codegen_fn_attrs(callsite.callee.def_id());\n \n         let self_features = &self.codegen_fn_attrs.target_features;"}]}