{"sha": "0d651c72ff4c8833046dbdad0049893fbc57bef2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkNjUxYzcyZmY0Yzg4MzMwNDZkYmRhZDAwNDk4OTNmYmM1N2JlZjI=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-05-25T23:45:15Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-05-25T23:45:15Z"}, "message": "made macro test even simpler, added a few tests", "tree": {"sha": "6c1120f811487482af81d2c58144085e1923463f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c1120f811487482af81d2c58144085e1923463f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d651c72ff4c8833046dbdad0049893fbc57bef2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d651c72ff4c8833046dbdad0049893fbc57bef2", "html_url": "https://github.com/rust-lang/rust/commit/0d651c72ff4c8833046dbdad0049893fbc57bef2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d651c72ff4c8833046dbdad0049893fbc57bef2/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a67e0f6e2f088f930c2f7447b9a8f407cc830c94", "url": "https://api.github.com/repos/rust-lang/rust/commits/a67e0f6e2f088f930c2f7447b9a8f407cc830c94", "html_url": "https://github.com/rust-lang/rust/commit/a67e0f6e2f088f930c2f7447b9a8f407cc830c94"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "3c7d9be64e36a894ef253e94b2ea82da1fea3089", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d651c72ff4c8833046dbdad0049893fbc57bef2/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0d651c72ff4c8833046dbdad0049893fbc57bef2/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=0d651c72ff4c8833046dbdad0049893fbc57bef2", "patch": "@@ -17,3 +17,5 @@ plugin = true\n \n [dev-dependencies]\n compiletest_rs = \"*\"\n+regex = \"*\"\n+regex_macros = \"*\""}, {"sha": "92cc7ef254cc7998121178e2ac0506274cb0d679", "filename": "src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0d651c72ff4c8833046dbdad0049893fbc57bef2/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d651c72ff4c8833046dbdad0049893fbc57bef2/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=0d651c72ff4c8833046dbdad0049893fbc57bef2", "patch": "@@ -1,6 +1,5 @@\n #![feature(plugin_registrar, box_syntax)]\n #![feature(rustc_private, collections)]\n-\n #![allow(unused_imports)]\n \n #[macro_use]"}, {"sha": "160b99a1d1510aef5d9d2d972ba00cddc6c6fbdb", "filename": "src/mut_mut.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0d651c72ff4c8833046dbdad0049893fbc57bef2/src%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d651c72ff4c8833046dbdad0049893fbc57bef2/src%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmut_mut.rs?ref=0d651c72ff4c8833046dbdad0049893fbc57bef2", "patch": "@@ -27,7 +27,7 @@ impl LintPass for MutMut {\n }\n \n fn check_expr_expd(cx: &Context, expr: &Expr, info: Option<&ExpnInfo>) {\n-\tif in_external_macro(info) { return; }\n+\tif in_macro(info) { return; }\n \n \tfn unwrap_addr(expr : &Expr) -> Option<&Expr> {\n \t\tmatch expr.node {\n@@ -51,8 +51,8 @@ fn check_expr_expd(cx: &Context, expr: &Expr, info: Option<&ExpnInfo>) {\n \t})\n }\n \n-fn in_external_macro(info: Option<&ExpnInfo>) -> bool {\n-\tinfo.map_or(false, |i| i.callee.span.is_some())\n+fn in_macro(info: Option<&ExpnInfo>) -> bool {\n+\tinfo.is_some()\n }\n \n fn unwrap_mut(ty : &Ty) -> Option<&Ty> {"}, {"sha": "64c3c84c7b6e9eea5b86d3c98272b206f0015d48", "filename": "src/ptr_arg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d651c72ff4c8833046dbdad0049893fbc57bef2/src%2Fptr_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d651c72ff4c8833046dbdad0049893fbc57bef2/src%2Fptr_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fptr_arg.rs?ref=0d651c72ff4c8833046dbdad0049893fbc57bef2", "patch": "@@ -27,7 +27,7 @@ impl LintPass for PtrArg {\n     }\n     \n     fn check_item(&mut self, cx: &Context, item: &Item) {\n-\t\tif let &ItemFn(ref decl, _, _, _, _) = &item.node {\n+\t\tif let &ItemFn(ref decl, _, _, _, _, _) = &item.node {\n \t\t\tcheck_fn(cx, decl);\n \t\t}\n \t}"}, {"sha": "d7adc067740f4c7abddf6429e164c18df3309d56", "filename": "tests/compile-fail/mut_mut.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0d651c72ff4c8833046dbdad0049893fbc57bef2/tests%2Fcompile-fail%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d651c72ff4c8833046dbdad0049893fbc57bef2/tests%2Fcompile-fail%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmut_mut.rs?ref=0d651c72ff4c8833046dbdad0049893fbc57bef2", "patch": "@@ -1,11 +1,18 @@\n #![feature(plugin)]\n #![plugin(clippy)]\n \n+//#![plugin(regex_macros)]\n+//extern crate regex;\n+\n #[deny(mut_mut)]\n fn fun(x : &mut &mut u32) -> bool { //~ERROR\n \t**x > 0\n }\n \n+macro_rules! mut_ptr {\n+\t($p:expr) => { &mut $p }\n+} \n+\n #[deny(mut_mut)]\n #[allow(unused_mut, unused_variables)]\n fn main() {\n@@ -22,4 +29,6 @@ fn main() {\n \t\t\t\t\t\t\t\t\t   //~^^^^ ERROR\n \t\t***y + **x;\n \t}\n+\t\n+\tlet mut z = mut_ptr!(&mut 3u32); //~ERROR\n }"}, {"sha": "6fcf71d38ad2996efed6ca2a7ecdc5ef4eeb75d1", "filename": "tests/compile-test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d651c72ff4c8833046dbdad0049893fbc57bef2/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d651c72ff4c8833046dbdad0049893fbc57bef2/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=0d651c72ff4c8833046dbdad0049893fbc57bef2", "patch": "@@ -5,7 +5,7 @@ use std::path::PathBuf;\n fn run_mode(mode: &'static str) {\n     let mut config = compiletest::default_config();\n     let cfg_mode = mode.parse().ok().expect(\"Invalid mode\");\n-    config.target_rustcflags = Some(\"-L target/debug/\".to_string());\n+    config.target_rustcflags = Some(\"-l regex_macros -L target/debug/\".to_string());\n \n     config.mode = cfg_mode;\n     config.src_base = PathBuf::from(format!(\"tests/{}\", mode));"}, {"sha": "bc39278606c71ea2b9490004e15c57716fad8716", "filename": "tests/run-pass.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0d651c72ff4c8833046dbdad0049893fbc57bef2/tests%2Frun-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d651c72ff4c8833046dbdad0049893fbc57bef2/tests%2Frun-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass.rs?ref=0d651c72ff4c8833046dbdad0049893fbc57bef2", "patch": "@@ -0,0 +1,11 @@\n+#![feature(plugin)]\n+#![plugin(clippy, regex_macros)]\n+\n+extern crate regex;\n+\n+#[test]\n+#[deny(mut_mut)]\n+fn test_regex() {\n+\tlet pattern = regex!(r\"^(?P<level>[#]+)\\s(?P<title>.+)$\");\n+\tassert!(pattern.is_match(\"# headline\"));\n+}"}]}