{"sha": "5947db1c535242a0a83d4e1ad9932044e4a8169b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NDdkYjFjNTM1MjQyYTBhODNkNGUxYWQ5OTMyMDQ0ZTRhODE2OWI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-08-01T00:20:03Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-08-01T22:59:01Z"}, "message": "librustc_target: Unconfigure tests during normal build", "tree": {"sha": "9b5e94bbe355ddd4c5f58f9e469b98b7a431cf30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b5e94bbe355ddd4c5f58f9e469b98b7a431cf30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5947db1c535242a0a83d4e1ad9932044e4a8169b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5947db1c535242a0a83d4e1ad9932044e4a8169b", "html_url": "https://github.com/rust-lang/rust/commit/5947db1c535242a0a83d4e1ad9932044e4a8169b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5947db1c535242a0a83d4e1ad9932044e4a8169b/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36d8f869245e931744b5e93a9eaa8bc5a1092778", "url": "https://api.github.com/repos/rust-lang/rust/commits/36d8f869245e931744b5e93a9eaa8bc5a1092778", "html_url": "https://github.com/rust-lang/rust/commit/36d8f869245e931744b5e93a9eaa8bc5a1092778"}], "stats": {"total": 59, "additions": 31, "deletions": 28}, "files": [{"sha": "909f0fc53fcea63197a9323ba9e4abfa602738f1", "filename": "src/librustc_target/spec/abi.rs", "status": "modified", "additions": 3, "deletions": 26, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5947db1c535242a0a83d4e1ad9932044e4a8169b/src%2Flibrustc_target%2Fspec%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5947db1c535242a0a83d4e1ad9932044e4a8169b/src%2Flibrustc_target%2Fspec%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fabi.rs?ref=5947db1c535242a0a83d4e1ad9932044e4a8169b", "patch": "@@ -1,5 +1,8 @@\n use std::fmt;\n \n+#[cfg(test)]\n+mod tests;\n+\n #[derive(PartialEq, Eq, PartialOrd, Ord, Hash, RustcEncodable, RustcDecodable, Clone, Copy, Debug)]\n pub enum Abi {\n     // N.B., this ordering MUST match the AbiDatas array below.\n@@ -100,29 +103,3 @@ impl fmt::Display for Abi {\n         write!(f, \"\\\"{}\\\"\", self.name())\n     }\n }\n-\n-#[allow(non_snake_case)]\n-#[test]\n-fn lookup_Rust() {\n-    let abi = lookup(\"Rust\");\n-    assert!(abi.is_some() && abi.unwrap().data().name == \"Rust\");\n-}\n-\n-#[test]\n-fn lookup_cdecl() {\n-    let abi = lookup(\"cdecl\");\n-    assert!(abi.is_some() && abi.unwrap().data().name == \"cdecl\");\n-}\n-\n-#[test]\n-fn lookup_baz() {\n-    let abi = lookup(\"baz\");\n-    assert!(abi.is_none());\n-}\n-\n-#[test]\n-fn indices_are_correct() {\n-    for (i, abi_data) in AbiDatas.iter().enumerate() {\n-        assert_eq!(i, abi_data.abi.index());\n-    }\n-}"}, {"sha": "8bea5e5efe3b0b04442f6552c3d8712a34d3b589", "filename": "src/librustc_target/spec/abi/tests.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/5947db1c535242a0a83d4e1ad9932044e4a8169b/src%2Flibrustc_target%2Fspec%2Fabi%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5947db1c535242a0a83d4e1ad9932044e4a8169b/src%2Flibrustc_target%2Fspec%2Fabi%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fabi%2Ftests.rs?ref=5947db1c535242a0a83d4e1ad9932044e4a8169b", "patch": "@@ -0,0 +1,27 @@\n+use super::*;\n+\n+#[allow(non_snake_case)]\n+#[test]\n+fn lookup_Rust() {\n+    let abi = lookup(\"Rust\");\n+    assert!(abi.is_some() && abi.unwrap().data().name == \"Rust\");\n+}\n+\n+#[test]\n+fn lookup_cdecl() {\n+    let abi = lookup(\"cdecl\");\n+    assert!(abi.is_some() && abi.unwrap().data().name == \"cdecl\");\n+}\n+\n+#[test]\n+fn lookup_baz() {\n+    let abi = lookup(\"baz\");\n+    assert!(abi.is_none());\n+}\n+\n+#[test]\n+fn indices_are_correct() {\n+    for (i, abi_data) in AbiDatas.iter().enumerate() {\n+        assert_eq!(i, abi_data.abi.index());\n+    }\n+}"}, {"sha": "53d66186c368c3b02c3b5a53a7c48d63aef83d12", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5947db1c535242a0a83d4e1ad9932044e4a8169b/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5947db1c535242a0a83d4e1ad9932044e4a8169b/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=5947db1c535242a0a83d4e1ad9932044e4a8169b", "patch": "@@ -312,7 +312,7 @@ macro_rules! supported_targets {\n             $(use super::$module;)+\n \n             $(\n-                #[test]\n+                #[test] // `#[test]` - this is hard to put into a separate file, make an exception\n                 fn $module() {\n                     // Grab the TargetResult struct. If we successfully retrieved\n                     // a Target, then the test JSON encoding/decoding can run for this"}, {"sha": "7c0cc985880db00580790bde36fd5f8ebe63f63c", "filename": "src/tools/tidy/src/unit_tests.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5947db1c535242a0a83d4e1ad9932044e4a8169b/src%2Ftools%2Ftidy%2Fsrc%2Funit_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5947db1c535242a0a83d4e1ad9932044e4a8169b/src%2Ftools%2Ftidy%2Fsrc%2Funit_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Funit_tests.rs?ref=5947db1c535242a0a83d4e1ad9932044e4a8169b", "patch": "@@ -30,7 +30,6 @@ pub fn check(root_path: &Path, bad: &mut bool) {\n         \"librustc\",\n         \"librustc_data_structures\",\n         \"librustc_incremental/persist\",\n-        \"librustc_target/spec\",\n         \"librustdoc\",\n         \"libstd\",\n         \"libsyntax\","}]}