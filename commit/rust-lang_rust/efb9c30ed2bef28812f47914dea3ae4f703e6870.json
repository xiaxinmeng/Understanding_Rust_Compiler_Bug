{"sha": "efb9c30ed2bef28812f47914dea3ae4f703e6870", "node_id": "C_kwDOAAsO6NoAKGVmYjljMzBlZDJiZWYyODgxMmY0NzkxNGRlYTNhZTRmNzAzZTY4NzA", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-12T12:01:28Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-05-11T14:35:09Z"}, "message": "Fix fs miri test on AArch64", "tree": {"sha": "d4ed8c3fce3e0240c4778797a4512d0378a68f06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4ed8c3fce3e0240c4778797a4512d0378a68f06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efb9c30ed2bef28812f47914dea3ae4f703e6870", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efb9c30ed2bef28812f47914dea3ae4f703e6870", "html_url": "https://github.com/rust-lang/rust/commit/efb9c30ed2bef28812f47914dea3ae4f703e6870", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efb9c30ed2bef28812f47914dea3ae4f703e6870/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9506011d32a55941dcda1c4e588ff7c0954648a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9506011d32a55941dcda1c4e588ff7c0954648a5", "html_url": "https://github.com/rust-lang/rust/commit/9506011d32a55941dcda1c4e588ff7c0954648a5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3258a2be460b0a2684df2dbbf12d0201a8f72f9a", "filename": "src/tools/miri/tests/pass/shims/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/efb9c30ed2bef28812f47914dea3ae4f703e6870/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efb9c30ed2bef28812f47914dea3ae4f703e6870/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Ffs.rs?ref=efb9c30ed2bef28812f47914dea3ae4f703e6870", "patch": "@@ -31,7 +31,7 @@ fn main() {\n }\n \n fn host_to_target_path(path: String) -> PathBuf {\n-    use std::ffi::{CStr, CString};\n+    use std::ffi::{c_char, CStr, CString};\n \n     let path = CString::new(path).unwrap();\n     let mut out = Vec::with_capacity(1024);"}]}