{"sha": "1bd04d9064399cc2e1c490906b897397ff6929b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiZDA0ZDkwNjQzOTljYzJlMWM0OTA5MDZiODk3Mzk3ZmY2OTI5YjE=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-06-04T18:36:43Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-06-04T18:43:48Z"}, "message": "Don't inline mutable locals in 'inline_local_variable'", "tree": {"sha": "9eb4a1f061f9dd2c07244a41b7788776272a7fe0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9eb4a1f061f9dd2c07244a41b7788776272a7fe0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bd04d9064399cc2e1c490906b897397ff6929b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bd04d9064399cc2e1c490906b897397ff6929b1", "html_url": "https://github.com/rust-lang/rust/commit/1bd04d9064399cc2e1c490906b897397ff6929b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bd04d9064399cc2e1c490906b897397ff6929b1/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98395f29a417b37a5969594f0cac5ae23585da85", "url": "https://api.github.com/repos/rust-lang/rust/commits/98395f29a417b37a5969594f0cac5ae23585da85", "html_url": "https://github.com/rust-lang/rust/commit/98395f29a417b37a5969594f0cac5ae23585da85"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "2441dbb8b286a7c0bfb49e7d21712761bc072fad", "filename": "crates/ide_assists/src/handlers/inline_local_variable.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1bd04d9064399cc2e1c490906b897397ff6929b1/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bd04d9064399cc2e1c490906b897397ff6929b1/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs?ref=1bd04d9064399cc2e1c490906b897397ff6929b1", "patch": "@@ -182,6 +182,10 @@ fn inline_usage(ctx: &AssistContext) -> Option<InlineData> {\n         PathResolution::Local(local) => local,\n         _ => return None,\n     };\n+    if local.is_mut(ctx.sema.db) {\n+        cov_mark::hit!(test_not_inline_mut_variable_use);\n+        return None;\n+    }\n \n     let bind_pat = match local.source(ctx.db()).value {\n         Either::Left(ident) => ident,\n@@ -426,6 +430,19 @@ fn foo() {\n         );\n     }\n \n+    #[test]\n+    fn test_not_inline_mut_variable_use() {\n+        cov_mark::check!(test_not_inline_mut_variable_use);\n+        check_assist_not_applicable(\n+            inline_local_variable,\n+            r\"\n+fn foo() {\n+    let mut a = 1 + 1;\n+    a$0 + 1;\n+}\",\n+        );\n+    }\n+\n     #[test]\n     fn test_call_expr() {\n         check_assist("}]}