{"sha": "0f2e45b18f47c9cb93267a82ed685f5d37f79367", "node_id": "C_kwDOAAsO6NoAKDBmMmU0NWIxOGY0N2M5Y2I5MzI2N2E4MmVkNjg1ZjVkMzdmNzkzNjc", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-03-29T15:32:20Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-11-10T21:18:06Z"}, "message": "make `Sized` coinductive", "tree": {"sha": "a5192fc2867ddc4a7533641cce39a24e8ebba1c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5192fc2867ddc4a7533641cce39a24e8ebba1c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f2e45b18f47c9cb93267a82ed685f5d37f79367", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f2e45b18f47c9cb93267a82ed685f5d37f79367", "html_url": "https://github.com/rust-lang/rust/commit/0f2e45b18f47c9cb93267a82ed685f5d37f79367", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f2e45b18f47c9cb93267a82ed685f5d37f79367/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3c0a023611fcaf5ae3ec242d7d60e356041d25f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3c0a023611fcaf5ae3ec242d7d60e356041d25f", "html_url": "https://github.com/rust-lang/rust/commit/a3c0a023611fcaf5ae3ec242d7d60e356041d25f"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "49bb3d03621f3379a844c8162383b5a8b0ea285a", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f2e45b18f47c9cb93267a82ed685f5d37f79367/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f2e45b18f47c9cb93267a82ed685f5d37f79367/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=0f2e45b18f47c9cb93267a82ed685f5d37f79367", "patch": "@@ -959,7 +959,10 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n \n     fn coinductive_predicate(&self, predicate: ty::Predicate<'tcx>) -> bool {\n         let result = match predicate.kind().skip_binder() {\n-            ty::PredicateKind::Trait(ref data) => self.tcx().trait_is_auto(data.def_id()),\n+            ty::PredicateKind::Trait(ref data) => {\n+                self.tcx().trait_is_auto(data.def_id())\n+                    || self.tcx().lang_items().sized_trait() == Some(data.def_id())\n+            }\n             ty::PredicateKind::WellFormed(_) => true,\n             _ => false,\n         };"}, {"sha": "7bcd0f1fdaf6d55eac6f68382c99f508bf50df4e", "filename": "src/test/ui/sized/coinductive-1.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0f2e45b18f47c9cb93267a82ed685f5d37f79367/src%2Ftest%2Fui%2Fsized%2Fcoinductive-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f2e45b18f47c9cb93267a82ed685f5d37f79367/src%2Ftest%2Fui%2Fsized%2Fcoinductive-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsized%2Fcoinductive-1.rs?ref=0f2e45b18f47c9cb93267a82ed685f5d37f79367", "patch": "@@ -0,0 +1,14 @@\n+// check-pass\n+struct Node<C: Trait<Self>>(C::Assoc);\n+\n+trait Trait<T> {\n+    type Assoc;\n+}\n+\n+impl<T> Trait<T> for Vec<()> {\n+    type Assoc = Vec<T>;\n+}\n+\n+fn main() {\n+    let _ = Node::<Vec<()>>(Vec::new());\n+}"}, {"sha": "212274d2e4b6c8350c25bc6c9a66037a64d775b3", "filename": "src/test/ui/sized/coinductive-2.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/0f2e45b18f47c9cb93267a82ed685f5d37f79367/src%2Ftest%2Fui%2Fsized%2Fcoinductive-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f2e45b18f47c9cb93267a82ed685f5d37f79367/src%2Ftest%2Fui%2Fsized%2Fcoinductive-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsized%2Fcoinductive-2.rs?ref=0f2e45b18f47c9cb93267a82ed685f5d37f79367", "patch": "@@ -0,0 +1,28 @@\n+// run-pass\n+struct Node<C: CollectionFactory<Self>> {\n+    _children: C::Collection,\n+}\n+\n+trait CollectionFactory<T> {\n+    type Collection;\n+}\n+\n+impl<T> CollectionFactory<T> for Vec<()> {\n+    type Collection = Vec<T>;\n+}\n+\n+trait Collection<T>: Sized {\n+    fn push(&mut self, v: T);\n+}\n+\n+impl<T> Collection<T> for Vec<T> {\n+    fn push(&mut self, v: T) {\n+        self.push(v)\n+    }\n+}\n+\n+fn main() {\n+    let _ = Node::<Vec<()>> {\n+        _children: Vec::new(),\n+    };\n+}"}]}