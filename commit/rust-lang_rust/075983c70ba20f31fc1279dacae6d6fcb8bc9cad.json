{"sha": "075983c70ba20f31fc1279dacae6d6fcb8bc9cad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NTk4M2M3MGJhMjBmMzFmYzEyNzlkYWNhZTZkNmZjYjhiYzljYWQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-12T08:00:39Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-12T08:01:57Z"}, "message": "global allocators: add a few comments", "tree": {"sha": "88b86bc44baa77c078878ae2a650eed69052c36e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88b86bc44baa77c078878ae2a650eed69052c36e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/075983c70ba20f31fc1279dacae6d6fcb8bc9cad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/075983c70ba20f31fc1279dacae6d6fcb8bc9cad", "html_url": "https://github.com/rust-lang/rust/commit/075983c70ba20f31fc1279dacae6d6fcb8bc9cad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/075983c70ba20f31fc1279dacae6d6fcb8bc9cad/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1d79ae3ad36e82e2be33bea108d6a4e98ddce0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1d79ae3ad36e82e2be33bea108d6a4e98ddce0b", "html_url": "https://github.com/rust-lang/rust/commit/d1d79ae3ad36e82e2be33bea108d6a4e98ddce0b"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "1a8a081e16fadc105ae6c1b46221f66f4673b149", "filename": "src/liballoc/alloc.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/075983c70ba20f31fc1279dacae6d6fcb8bc9cad/src%2Fliballoc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/075983c70ba20f31fc1279dacae6d6fcb8bc9cad/src%2Fliballoc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Falloc.rs?ref=075983c70ba20f31fc1279dacae6d6fcb8bc9cad", "patch": "@@ -21,6 +21,10 @@ use core::usize;\n pub use core::alloc::*;\n \n extern \"Rust\" {\n+    // These are the magic symbols to call the global allocator.  rustc generates\n+    // them from the `#[global_allocator]` attribute if there is one, or uses the\n+    // default implementations in libstd (`__rdl_alloc` etc in `src/libstd/alloc.rs`)\n+    // otherwise.\n     #[allocator]\n     #[rustc_allocator_nounwind]\n     fn __rust_alloc(size: usize, align: usize) -> *mut u8;"}, {"sha": "9c0573964702e7425428534f0d5aad79fe150add", "filename": "src/libstd/alloc.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/075983c70ba20f31fc1279dacae6d6fcb8bc9cad/src%2Flibstd%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/075983c70ba20f31fc1279dacae6d6fcb8bc9cad/src%2Flibstd%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Falloc.rs?ref=075983c70ba20f31fc1279dacae6d6fcb8bc9cad", "patch": "@@ -142,6 +142,7 @@ pub use alloc_crate::alloc::*;\n #[derive(Debug, Copy, Clone)]\n pub struct System;\n \n+// The Alloc impl just forwards to the GlobalAlloc impl, which is in `std::sys::*::alloc`.\n #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n unsafe impl Alloc for System {\n     #[inline]\n@@ -226,6 +227,10 @@ pub fn rust_oom(layout: Layout) -> ! {\n #[unstable(feature = \"alloc_internals\", issue = \"0\")]\n pub mod __default_lib_allocator {\n     use super::{System, Layout, GlobalAlloc};\n+    // These magic symbol names are used as a fallback for implementing the\n+    // `__rust_alloc` etc symbols (see `src/liballoc/alloc.rs) when there is\n+    // no `#[global_allocator]` attribute.\n+\n     // for symbol names src/librustc/middle/allocator.rs\n     // for signatures src/librustc_allocator/lib.rs\n "}]}