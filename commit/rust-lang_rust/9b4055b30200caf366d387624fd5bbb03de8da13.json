{"sha": "9b4055b30200caf366d387624fd5bbb03de8da13", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliNDA1NWIzMDIwMGNhZjM2NmQzODc2MjRmZDViYmIwM2RlOGRhMTM=", "commit": {"author": {"name": "Angelos Oikonomopoulos", "email": "a.oikonomopoulos@vu.nl", "date": "2019-02-26T15:48:12Z"}, "committer": {"name": "Angelos Oikonomopoulos", "email": "a.oikonomopoulos@vu.nl", "date": "2019-02-26T16:22:13Z"}, "message": "Normalize the type Self resolves to in an impl\n\nThis is required at the very least in order to evaluate associated\nconstants for arrays (see #58212).", "tree": {"sha": "509075113b03725d220b8f8a2bfeeca5ea706df6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/509075113b03725d220b8f8a2bfeeca5ea706df6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b4055b30200caf366d387624fd5bbb03de8da13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b4055b30200caf366d387624fd5bbb03de8da13", "html_url": "https://github.com/rust-lang/rust/commit/9b4055b30200caf366d387624fd5bbb03de8da13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b4055b30200caf366d387624fd5bbb03de8da13/comments", "author": null, "committer": null, "parents": [{"sha": "ea43c3c688980edd6f09a4cb632c9eb996c4f2af", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea43c3c688980edd6f09a4cb632c9eb996c4f2af", "html_url": "https://github.com/rust-lang/rust/commit/ea43c3c688980edd6f09a4cb632c9eb996c4f2af"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "c52ff8bf650cd38eb6528809c728895421e3f83f", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9b4055b30200caf366d387624fd5bbb03de8da13/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b4055b30200caf366d387624fd5bbb03de8da13/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=9b4055b30200caf366d387624fd5bbb03de8da13", "patch": "@@ -1700,7 +1700,8 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx> + 'o {\n                 // `Self` in impl (we know the concrete type).\n                 assert_eq!(opt_self_ty, None);\n                 self.prohibit_generics(&path.segments);\n-                tcx.at(span).type_of(def_id)\n+                // Try to evaluate any array length constants\n+                self.normalize_ty(span, tcx.at(span).type_of(def_id))\n             }\n             Def::SelfTy(Some(_), None) => {\n                 // `Self` in trait."}, {"sha": "76437630309af1603364579864c03d0eb304c236", "filename": "src/test/run-pass/issues/issue-58212.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9b4055b30200caf366d387624fd5bbb03de8da13/src%2Ftest%2Frun-pass%2Fissues%2Fissue-58212.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b4055b30200caf366d387624fd5bbb03de8da13/src%2Ftest%2Frun-pass%2Fissues%2Fissue-58212.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-58212.rs?ref=9b4055b30200caf366d387624fd5bbb03de8da13", "patch": "@@ -0,0 +1,13 @@\n+trait FromUnchecked {\n+    unsafe fn from_unchecked();\n+}\n+\n+impl FromUnchecked for [u8; 1] {\n+    unsafe fn from_unchecked() {\n+        let mut array: Self = std::mem::uninitialized();\n+        let _ptr = &mut array as *mut [u8] as *mut u8;\n+    }\n+}\n+\n+fn main() {\n+}"}]}