{"sha": "dbe7ede2eebc1301a40f0e1a3a408e11a86a0e84", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZTdlZGUyZWViYzEzMDFhNDBmMGUxYTNhNDA4ZTExYTg2YTBlODQ=", "commit": {"author": {"name": "Veetaha", "email": "veetaha2@gmail.com", "date": "2020-08-09T21:41:48Z"}, "committer": {"name": "Veetaha", "email": "veetaha2@gmail.com", "date": "2020-08-09T21:49:53Z"}, "message": "Let shutdown request to pass through when status == Loading", "tree": {"sha": "57d429b52959d9f7bf6d8231421da2460aae93f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57d429b52959d9f7bf6d8231421da2460aae93f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbe7ede2eebc1301a40f0e1a3a408e11a86a0e84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbe7ede2eebc1301a40f0e1a3a408e11a86a0e84", "html_url": "https://github.com/rust-lang/rust/commit/dbe7ede2eebc1301a40f0e1a3a408e11a86a0e84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbe7ede2eebc1301a40f0e1a3a408e11a86a0e84/comments", "author": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e43811c1645f78818d5d7fe0054b54a462145847", "url": "https://api.github.com/repos/rust-lang/rust/commits/e43811c1645f78818d5d7fe0054b54a462145847", "html_url": "https://github.com/rust-lang/rust/commit/e43811c1645f78818d5d7fe0054b54a462145847"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "eb7c96933c05ef4571080b83c62924fb9dd4bb9b", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbe7ede2eebc1301a40f0e1a3a408e11a86a0e84/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbe7ede2eebc1301a40f0e1a3a408e11a86a0e84/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=dbe7ede2eebc1301a40f0e1a3a408e11a86a0e84", "patch": "@@ -337,7 +337,7 @@ impl GlobalState {\n     fn on_request(&mut self, request_received: Instant, req: Request) -> Result<()> {\n         self.register_request(&req, request_received);\n \n-        if self.status == Status::Loading {\n+        if self.status == Status::Loading && req.method != \"shutdown\" {\n             self.respond(lsp_server::Response::new_err(\n                 req.id,\n                 // FIXME: i32 should impl From<ErrorCode> (from() guarantees lossless conversion)"}]}