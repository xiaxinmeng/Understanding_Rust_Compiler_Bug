{"sha": "1c389ffeff814726dec325f0f2b0c99107df2673", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjMzg5ZmZlZmY4MTQ3MjZkZWMzMjVmMGYyYjBjOTkxMDdkZjI2NzM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-24T20:58:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-24T20:58:20Z"}, "message": "Auto merge of #78548 - camelid:driver-tty, r=oli-obk\n\ndriver: Only output ANSI logging if connected to a terminal\n\nFixes #78435.\n\nSee #78435 for more.\n\nCc `@RalfJung` `@oli-obk`", "tree": {"sha": "fe14d296d3d3877bb4829d990be9428b58ff2d99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe14d296d3d3877bb4829d990be9428b58ff2d99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c389ffeff814726dec325f0f2b0c99107df2673", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c389ffeff814726dec325f0f2b0c99107df2673", "html_url": "https://github.com/rust-lang/rust/commit/1c389ffeff814726dec325f0f2b0c99107df2673", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c389ffeff814726dec325f0f2b0c99107df2673/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74459930a951db7a68b3ecd86f3b796339e59fe5", "url": "https://api.github.com/repos/rust-lang/rust/commits/74459930a951db7a68b3ecd86f3b796339e59fe5", "html_url": "https://github.com/rust-lang/rust/commit/74459930a951db7a68b3ecd86f3b796339e59fe5"}, {"sha": "173a7dbace4f3d9921dd1c66830c847aff9ba23b", "url": "https://api.github.com/repos/rust-lang/rust/commits/173a7dbace4f3d9921dd1c66830c847aff9ba23b", "html_url": "https://github.com/rust-lang/rust/commit/173a7dbace4f3d9921dd1c66830c847aff9ba23b"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "e87d8b7ab45d6bb6533c13708118c50bd68d5cfa", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1c389ffeff814726dec325f0f2b0c99107df2673/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c389ffeff814726dec325f0f2b0c99107df2673/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=1c389ffeff814726dec325f0f2b0c99107df2673", "patch": "@@ -1284,11 +1284,30 @@ pub fn init_env_logger(env: &str) {\n         Ok(s) if s.is_empty() => return,\n         Ok(_) => {}\n     }\n+    let color_logs = match std::env::var(String::from(env) + \"_COLOR\") {\n+        Ok(value) => match value.as_ref() {\n+            \"always\" => true,\n+            \"never\" => false,\n+            \"auto\" => stdout_isatty(),\n+            _ => early_error(\n+                ErrorOutputType::default(),\n+                &format!(\n+                    \"invalid log color value '{}': expected one of always, never, or auto\",\n+                    value\n+                ),\n+            ),\n+        },\n+        Err(std::env::VarError::NotPresent) => stdout_isatty(),\n+        Err(std::env::VarError::NotUnicode(_value)) => early_error(\n+            ErrorOutputType::default(),\n+            \"non-Unicode log color value: expected one of always, never, or auto\",\n+        ),\n+    };\n     let filter = tracing_subscriber::EnvFilter::from_env(env);\n     let layer = tracing_tree::HierarchicalLayer::default()\n         .with_writer(io::stderr)\n         .with_indent_lines(true)\n-        .with_ansi(true)\n+        .with_ansi(color_logs)\n         .with_targets(true)\n         .with_wraparound(10)\n         .with_verbose_exit(true)\n@@ -1314,7 +1333,7 @@ pub fn main() -> ! {\n                 arg.into_string().unwrap_or_else(|arg| {\n                     early_error(\n                         ErrorOutputType::default(),\n-                        &format!(\"Argument {} is not valid Unicode: {:?}\", i, arg),\n+                        &format!(\"argument {} is not valid Unicode: {:?}\", i, arg),\n                     )\n                 })\n             })"}]}