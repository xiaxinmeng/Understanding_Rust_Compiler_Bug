{"sha": "6365c4307adb56bb5019f48c50d33b734daffddd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzNjVjNDMwN2FkYjU2YmI1MDE5ZjQ4YzUwZDMzYjczNGRhZmZkZGQ=", "commit": {"author": {"name": "Sean Leffler", "email": "sean@errno.com", "date": "2017-01-11T02:19:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-11T02:19:01Z"}, "message": "Add PartialOrd, Ord derivations to TypeId\n\nI want to be able to sort a `Vec` of types which contain `TypeId`s, so an `Ord` derivation would be very useful to me. `Hash` already exists, so the missing `PartialOrd` and `Ord` derivations feel like an oversight to me.", "tree": {"sha": "e461c5382135808f5a84de95885482d06ae949d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e461c5382135808f5a84de95885482d06ae949d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6365c4307adb56bb5019f48c50d33b734daffddd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6365c4307adb56bb5019f48c50d33b734daffddd", "html_url": "https://github.com/rust-lang/rust/commit/6365c4307adb56bb5019f48c50d33b734daffddd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6365c4307adb56bb5019f48c50d33b734daffddd/comments", "author": {"login": "sdleffler", "id": 5241142, "node_id": "MDQ6VXNlcjUyNDExNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5241142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdleffler", "html_url": "https://github.com/sdleffler", "followers_url": "https://api.github.com/users/sdleffler/followers", "following_url": "https://api.github.com/users/sdleffler/following{/other_user}", "gists_url": "https://api.github.com/users/sdleffler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdleffler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdleffler/subscriptions", "organizations_url": "https://api.github.com/users/sdleffler/orgs", "repos_url": "https://api.github.com/users/sdleffler/repos", "events_url": "https://api.github.com/users/sdleffler/events{/privacy}", "received_events_url": "https://api.github.com/users/sdleffler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0500fbf6ba83b9a6634a5e0580963b44683b44c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0500fbf6ba83b9a6634a5e0580963b44683b44c6", "html_url": "https://github.com/rust-lang/rust/commit/0500fbf6ba83b9a6634a5e0580963b44683b44c6"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1dbe443925e43729a0109d13a3259299ae5980e6", "filename": "src/libcore/any.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6365c4307adb56bb5019f48c50d33b734daffddd/src%2Flibcore%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6365c4307adb56bb5019f48c50d33b734daffddd/src%2Flibcore%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fany.rs?ref=6365c4307adb56bb5019f48c50d33b734daffddd", "patch": "@@ -338,7 +338,7 @@ impl Any+Send {\n ///\n /// A `TypeId` is currently only available for types which ascribe to `'static`,\n /// but this limitation may be removed in the future.\n-#[derive(Clone, Copy, PartialEq, Eq, Debug, Hash)]\n+#[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Debug, Hash)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct TypeId {\n     t: u64,"}]}