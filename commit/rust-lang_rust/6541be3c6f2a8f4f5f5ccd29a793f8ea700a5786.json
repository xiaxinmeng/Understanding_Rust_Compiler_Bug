{"sha": "6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1NDFiZTNjNmYyYThmNGY1ZjVjY2QyOWE3OTNmOGVhNzAwYTU3ODY=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-05-21T03:32:27Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-05-21T03:32:27Z"}, "message": "Replace `use_colored_tty` with iatty crate", "tree": {"sha": "abf3635c2fab3042f379924e9b7a6e698addaed5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abf3635c2fab3042f379924e9b7a6e698addaed5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786", "html_url": "https://github.com/rust-lang/rust/commit/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a7fac63c8867fc5cf45b3f262f2e385f6992fb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a7fac63c8867fc5cf45b3f262f2e385f6992fb3", "html_url": "https://github.com/rust-lang/rust/commit/9a7fac63c8867fc5cf45b3f262f2e385f6992fb3"}], "stats": {"total": 94, "additions": 53, "deletions": 41}, "files": [{"sha": "4729142004376f4bd2c6028c4eaf3955919b3484", "filename": "Cargo.lock", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786", "patch": "@@ -238,6 +238,17 @@ dependencies = [\n  \"quick-error 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"isatty\"\n+version = \"0.1.7\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"redox_syscall 0.1.37 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"itertools\"\n version = \"0.7.8\"\n@@ -251,6 +262,15 @@ name = \"itoa\"\n version = \"0.4.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"kernel32-sys\"\n+version = \"0.2.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"lazy_static\"\n version = \"0.2.11\"\n@@ -523,9 +543,9 @@ dependencies = [\n  \"env_logger 0.5.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"failure 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"getopts 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"isatty 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-ap-rustc_target 134.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -536,7 +556,6 @@ dependencies = [\n  \"term 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"toml 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-segmentation 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -722,6 +741,11 @@ name = \"void\"\n version = \"1.0.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"winapi\"\n+version = \"0.2.8\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"winapi\"\n version = \"0.3.4\"\n@@ -731,6 +755,11 @@ dependencies = [\n  \"winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"winapi-build\"\n+version = \"0.1.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"winapi-i686-pc-windows-gnu\"\n version = \"0.4.0\"\n@@ -780,8 +809,10 @@ dependencies = [\n \"checksum fuchsia-zircon-sys 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7\"\n \"checksum getopts 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b900c08c1939860ce8b54dc6a89e26e00c04c380fd0e09796799bd7f12861e05\"\n \"checksum humantime 1.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0484fda3e7007f2a4a0d9c3a703ca38c71c54c55602ce4660c419fd32e188c9e\"\n+\"checksum isatty 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a118a53ba42790ef25c82bb481ecf36e2da892646cccd361e69a6bb881e19398\"\n \"checksum itertools 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f58856976b776fedd95533137617a02fb25719f40e7d9b01c7043cd65474f450\"\n \"checksum itoa 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c069bbec61e1ca5a596166e55dfe4773ff745c3d16b700013bcaff9a6df2c682\"\n+\"checksum kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d\"\n \"checksum lazy_static 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"76f033c7ad61445c5b347c7382dd1237847eb1bce590fe50365dcb33d546be73\"\n \"checksum lazy_static 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c8f31047daa365f19be14b47c29df4f7c3b581832407daabe6ae77397619237d\"\n \"checksum libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6fd41f331ac7c5b8ac259b8bf82c75c0fb2e469bbf37d2becbba9a6a2221965b\"\n@@ -839,7 +870,9 @@ dependencies = [\n \"checksum unreachable 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"382810877fe448991dfc7f0dd6e3ae5d58088fd0ea5e35189655f84e6814fa56\"\n \"checksum utf8-ranges 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"662fab6525a98beff2921d7f61a39e7d59e0b425ebc7d0d9e66d316e55124122\"\n \"checksum void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d\"\n+\"checksum winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a\"\n \"checksum winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"04e3bd221fcbe8a271359c04f21a76db7d0c6028862d1bb5512d85e1e2eb5bb3\"\n+\"checksum winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc\"\n \"checksum winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n \"checksum winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n \"checksum wincolor 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"eeb06499a3a4d44302791052df005d5232b927ed1a9658146d842165c4de7767\""}, {"sha": "369b963a39c8f240f37fcfc682c2d0f330795891", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786", "patch": "@@ -32,6 +32,7 @@ cargo-fmt = []\n rustfmt-format-diff = []\n \n [dependencies]\n+isatty = \"0.1\"\n itertools = \"0.7\"\n toml = \"0.4\"\n serde = \"1.0\"\n@@ -53,9 +54,3 @@ failure = \"0.1.1\"\n [dev-dependencies]\n assert_cli = \"0.6\"\n lazy_static = \"1.0.0\"\n-\n-[target.'cfg(unix)'.dependencies]\n-libc = \"0.2.11\"\n-\n-[target.'cfg(windows)'.dependencies]\n-winapi = { version = \"0.3\" }"}, {"sha": "fad9eeae6bb7991ed20f7f5d4a8df4e375aadb60", "filename": "src/bin/main.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786/src%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786/src%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmain.rs?ref=6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786", "patch": "@@ -28,8 +28,8 @@ use failure::err_msg;\n use getopts::{Matches, Options};\n \n use rustfmt::{\n-    checkstyle_footer, checkstyle_header, format_input, load_config, use_colored_tty, CliOptions,\n-    Color, Config, EmitMode, ErrorKind, FileLines, FileName, Input, Summary, Verbosity,\n+    checkstyle_footer, checkstyle_header, format_input, load_config, CliOptions, Color, Config,\n+    EmitMode, ErrorKind, FileLines, FileName, Input, Summary, Verbosity,\n };\n \n fn main() {\n@@ -316,7 +316,7 @@ fn format_and_emit_report(input: Input, config: &Config) -> Result<Summary, fail\n             if report.has_warnings() {\n                 match term::stderr() {\n                     Some(ref t)\n-                        if use_colored_tty(config.color())\n+                        if config.color().use_colored_tty()\n                             && t.supports_color()\n                             && t.supports_attr(term::Attr::Bold) =>\n                     {"}, {"sha": "8d3b332e8e6fcafd660f500599a070657e5eef9f", "filename": "src/config/options.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786/src%2Fconfig%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786/src%2Fconfig%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Foptions.rs?ref=6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786", "patch": "@@ -12,6 +12,8 @@ use config::config_type::ConfigType;\n use config::lists::*;\n use config::{Config, FileName};\n \n+use isatty::stdout_isatty;\n+\n use std::collections::HashSet;\n use std::path::{Path, PathBuf};\n \n@@ -191,6 +193,16 @@ configuration_option_enum! { Color:\n     Auto,\n }\n \n+impl Color {\n+    pub fn use_colored_tty(&self) -> bool {\n+        match self {\n+            Color::Always => true,\n+            Color::Never => false,\n+            Color::Auto => stdout_isatty(),\n+        }\n+    }\n+}\n+\n configuration_option_enum! { Verbosity:\n     // Emit more.\n     Verbose,"}, {"sha": "38b169c5170d70ce175cc124dd977df23aafb668", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786", "patch": "@@ -19,6 +19,7 @@\n extern crate derive_new;\n extern crate diff;\n extern crate failure;\n+extern crate isatty;\n extern crate itertools;\n #[cfg(test)]\n #[macro_use]\n@@ -61,7 +62,6 @@ pub use config::summary::Summary;\n pub use config::{\n     load_config, CliOptions, Color, Config, EmitMode, FileLines, FileName, Verbosity,\n };\n-pub use utils::use_colored_tty;\n \n #[macro_use]\n mod utils;"}, {"sha": "de52b28c08bb76caee865a9f5fc78593582efc55", "filename": "src/rustfmt_diff.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786/src%2Frustfmt_diff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786/src%2Frustfmt_diff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustfmt_diff.rs?ref=6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786", "patch": "@@ -13,7 +13,6 @@ use diff;\n use std::collections::VecDeque;\n use std::io;\n use std::io::Write;\n-use utils::use_colored_tty;\n \n #[derive(Debug, PartialEq)]\n pub enum DiffLine {\n@@ -53,7 +52,7 @@ impl OutputWriter {\n     // for colorized output and the capabilities of the terminal.\n     pub fn new(color: Color) -> Self {\n         if let Some(t) = term::stdout() {\n-            if use_colored_tty(color) && t.supports_color() {\n+            if color.use_colored_tty() && t.supports_color() {\n                 return OutputWriter { terminal: Some(t) };\n             }\n         }"}, {"sha": "127a7ddb59e1eef66d56b738107f7834eea40c63", "filename": "src/utils.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=6541be3c6f2a8f4f5f5ccd29a793f8ea700a5786", "patch": "@@ -18,7 +18,6 @@ use syntax::ast::{\n use syntax::codemap::{BytePos, Span, NO_EXPANSION};\n use syntax::ptr;\n \n-use config::Color;\n use rewrite::RewriteContext;\n use shape::Shape;\n \n@@ -376,32 +375,6 @@ pub fn left_most_sub_expr(e: &ast::Expr) -> &ast::Expr {\n     }\n }\n \n-// isatty shamelessly adapted from cargo.\n-#[cfg(unix)]\n-pub fn isatty() -> bool {\n-    extern crate libc;\n-\n-    unsafe { libc::isatty(libc::STDOUT_FILENO) != 0 }\n-}\n-#[cfg(windows)]\n-pub fn isatty() -> bool {\n-    extern crate winapi;\n-\n-    unsafe {\n-        let handle = winapi::um::processenv::GetStdHandle(winapi::um::winbase::STD_OUTPUT_HANDLE);\n-        let mut out = 0;\n-        winapi::um::consoleapi::GetConsoleMode(handle, &mut out) != 0\n-    }\n-}\n-\n-pub fn use_colored_tty(color: Color) -> bool {\n-    match color {\n-        Color::Always => true,\n-        Color::Never => false,\n-        Color::Auto => isatty(),\n-    }\n-}\n-\n pub fn starts_with_newline(s: &str) -> bool {\n     s.starts_with('\\n') || s.starts_with(\"\\r\\n\")\n }"}]}