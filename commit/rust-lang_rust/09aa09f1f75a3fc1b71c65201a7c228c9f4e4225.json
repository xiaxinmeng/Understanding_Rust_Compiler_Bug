{"sha": "09aa09f1f75a3fc1b71c65201a7c228c9f4e4225", "node_id": "C_kwDOAAsO6NoAKDA5YWEwOWYxZjc1YTNmYzFiNzFjNjUyMDFhN2MyMjhjOWY0ZTQyMjU", "commit": {"author": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-02-28T20:55:50Z"}, "committer": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-02-28T20:55:50Z"}, "message": "Enable drop-tracking tests behind -Zdrop-tracking\n\nThese were still disabled from the soft revert of drop tracking, which\nmeant we were not catching regressions that were introduced while trying\nto fix drop tracking.", "tree": {"sha": "4c5f8275a9c1bb6da1597c94db7bc87841b23722", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c5f8275a9c1bb6da1597c94db7bc87841b23722"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225", "html_url": "https://github.com/rust-lang/rust/commit/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f73491589d99ad60d785add0309637423fe7368", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f73491589d99ad60d785add0309637423fe7368", "html_url": "https://github.com/rust-lang/rust/commit/3f73491589d99ad60d785add0309637423fe7368"}], "stats": {"total": 60, "additions": 22, "deletions": 38}, "files": [{"sha": "d7f8d7ac546c052884c439298b52ff48e66e413b", "filename": "src/test/ui/async-await/async-fn-nonsend.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225/src%2Ftest%2Fui%2Fasync-await%2Fasync-fn-nonsend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225/src%2Ftest%2Fui%2Fasync-await%2Fasync-fn-nonsend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-fn-nonsend.rs?ref=09aa09f1f75a3fc1b71c65201a7c228c9f4e4225", "patch": "@@ -1,9 +1,5 @@\n // edition:2018\n-// compile-flags: --crate-type lib\n-\n-// FIXME(eholk): temporarily disabled while drop range tracking is disabled\n-// (see generator_interior.rs:27)\n-// ignore-test\n+// compile-flags: --crate-type lib -Zdrop-tracking\n \n use std::{cell::RefCell, fmt::Debug, rc::Rc};\n "}, {"sha": "6d6d80614910403afb7e5d2816d21c72eca30d14", "filename": "src/test/ui/async-await/unresolved_type_param.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225/src%2Ftest%2Fui%2Fasync-await%2Funresolved_type_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225/src%2Ftest%2Fui%2Fasync-await%2Funresolved_type_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Funresolved_type_param.rs?ref=09aa09f1f75a3fc1b71c65201a7c228c9f4e4225", "patch": "@@ -2,10 +2,7 @@\n // Error message should pinpoint the type parameter T as needing to be bound\n // (rather than give a general error message)\n // edition:2018\n-\n-// FIXME(eholk): temporarily disabled while drop range tracking is disabled\n-// (see generator_interior.rs:27)\n-// ignore-test\n+// compile-flags: -Zdrop-tracking\n \n async fn bar<T>() -> () {}\n "}, {"sha": "7236c681f341cef1080752841952136c960f3472", "filename": "src/test/ui/async-await/unresolved_type_param.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225/src%2Ftest%2Fui%2Fasync-await%2Funresolved_type_param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225/src%2Ftest%2Fui%2Fasync-await%2Funresolved_type_param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Funresolved_type_param.stderr?ref=09aa09f1f75a3fc1b71c65201a7c228c9f4e4225", "patch": "@@ -1,35 +1,35 @@\n error[E0698]: type inside `async fn` body must be known in this context\n-  --> $DIR/unresolved_type_param.rs:9:5\n+  --> $DIR/unresolved_type_param.rs:10:5\n    |\n LL |     bar().await;\n    |     ^^^ cannot infer type for type parameter `T` declared on the function `bar`\n    |\n note: the type is part of the `async fn` body because of this `await`\n-  --> $DIR/unresolved_type_param.rs:9:10\n+  --> $DIR/unresolved_type_param.rs:10:10\n    |\n LL |     bar().await;\n    |          ^^^^^^\n \n error[E0698]: type inside `async fn` body must be known in this context\n-  --> $DIR/unresolved_type_param.rs:9:5\n+  --> $DIR/unresolved_type_param.rs:10:5\n    |\n LL |     bar().await;\n    |     ^^^ cannot infer type for type parameter `T` declared on the function `bar`\n    |\n note: the type is part of the `async fn` body because of this `await`\n-  --> $DIR/unresolved_type_param.rs:9:10\n+  --> $DIR/unresolved_type_param.rs:10:10\n    |\n LL |     bar().await;\n    |          ^^^^^^\n \n error[E0698]: type inside `async fn` body must be known in this context\n-  --> $DIR/unresolved_type_param.rs:9:5\n+  --> $DIR/unresolved_type_param.rs:10:5\n    |\n LL |     bar().await;\n    |     ^^^ cannot infer type for type parameter `T` declared on the function `bar`\n    |\n note: the type is part of the `async fn` body because of this `await`\n-  --> $DIR/unresolved_type_param.rs:9:10\n+  --> $DIR/unresolved_type_param.rs:10:10\n    |\n LL |     bar().await;\n    |          ^^^^^^"}, {"sha": "d383680002f4b9fcdde3eadb3a3d6c7d0f923293", "filename": "src/test/ui/generator/drop-control-flow.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225/src%2Ftest%2Fui%2Fgenerator%2Fdrop-control-flow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225/src%2Ftest%2Fui%2Fgenerator%2Fdrop-control-flow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fdrop-control-flow.rs?ref=09aa09f1f75a3fc1b71c65201a7c228c9f4e4225", "patch": "@@ -1,10 +1,6 @@\n // build-pass\n // compile-flags: -Zdrop-tracking\n \n-// FIXME(eholk): temporarily disabled while drop range tracking is disabled\n-// (see generator_interior.rs:27)\n-// ignore-test\n-\n // A test to ensure generators capture values that were conditionally dropped,\n // and also that values that are dropped along all paths to a yield do not get\n // included in the generator type."}, {"sha": "91407ea1844f54922c084cb77f34619928f7d1e9", "filename": "src/test/ui/generator/issue-57478.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225/src%2Ftest%2Fui%2Fgenerator%2Fissue-57478.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225/src%2Ftest%2Fui%2Fgenerator%2Fissue-57478.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fissue-57478.rs?ref=09aa09f1f75a3fc1b71c65201a7c228c9f4e4225", "patch": "@@ -1,8 +1,5 @@\n // check-pass\n-\n-// FIXME(eholk): temporarily disabled while drop range tracking is disabled\n-// (see generator_interior.rs:27)\n-// ignore-test\n+// compile-flags: -Zdrop-tracking\n \n #![feature(negative_impls, generators)]\n "}, {"sha": "c872fb7f3e6305745d3d4ff91c3d6a32aebdf3f7", "filename": "src/test/ui/generator/partial-drop.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225/src%2Ftest%2Fui%2Fgenerator%2Fpartial-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225/src%2Ftest%2Fui%2Fgenerator%2Fpartial-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fpartial-drop.rs?ref=09aa09f1f75a3fc1b71c65201a7c228c9f4e4225", "patch": "@@ -1,6 +1,4 @@\n-// FIXME(eholk): temporarily disabled while drop range tracking is disabled\n-// (see generator_interior.rs:27)\n-// ignore-test\n+// compile-flags: -Zdrop-tracking\n \n #![feature(negative_impls, generators)]\n "}, {"sha": "16b34c917ece43395c24d729324f3d22188f11d9", "filename": "src/test/ui/generator/partial-drop.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225/src%2Ftest%2Fui%2Fgenerator%2Fpartial-drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/09aa09f1f75a3fc1b71c65201a7c228c9f4e4225/src%2Ftest%2Fui%2Fgenerator%2Fpartial-drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fpartial-drop.stderr?ref=09aa09f1f75a3fc1b71c65201a7c228c9f4e4225", "patch": "@@ -1,12 +1,12 @@\n error: generator cannot be sent between threads safely\n-  --> $DIR/partial-drop.rs:12:5\n+  --> $DIR/partial-drop.rs:14:5\n    |\n LL |     assert_send(|| {\n    |     ^^^^^^^^^^^ generator is not `Send`\n    |\n-   = help: within `[generator@$DIR/partial-drop.rs:12:17: 18:6]`, the trait `Send` is not implemented for `Foo`\n+   = help: within `[generator@$DIR/partial-drop.rs:14:17: 20:6]`, the trait `Send` is not implemented for `Foo`\n note: generator is not `Send` as this value is used across a yield\n-  --> $DIR/partial-drop.rs:17:9\n+  --> $DIR/partial-drop.rs:19:9\n    |\n LL |         let guard = Bar { foo: Foo, x: 42 };\n    |             ----- has type `Bar` which is not `Send`\n@@ -16,20 +16,20 @@ LL |         yield;\n LL |     });\n    |     - `guard` is later dropped here\n note: required by a bound in `assert_send`\n-  --> $DIR/partial-drop.rs:40:19\n+  --> $DIR/partial-drop.rs:42:19\n    |\n LL | fn assert_send<T: Send>(_: T) {}\n    |                   ^^^^ required by this bound in `assert_send`\n \n error: generator cannot be sent between threads safely\n-  --> $DIR/partial-drop.rs:20:5\n+  --> $DIR/partial-drop.rs:22:5\n    |\n LL |     assert_send(|| {\n    |     ^^^^^^^^^^^ generator is not `Send`\n    |\n-   = help: within `[generator@$DIR/partial-drop.rs:20:17: 28:6]`, the trait `Send` is not implemented for `Foo`\n+   = help: within `[generator@$DIR/partial-drop.rs:22:17: 30:6]`, the trait `Send` is not implemented for `Foo`\n note: generator is not `Send` as this value is used across a yield\n-  --> $DIR/partial-drop.rs:27:9\n+  --> $DIR/partial-drop.rs:29:9\n    |\n LL |         let guard = Bar { foo: Foo, x: 42 };\n    |             ----- has type `Bar` which is not `Send`\n@@ -39,20 +39,20 @@ LL |         yield;\n LL |     });\n    |     - `guard` is later dropped here\n note: required by a bound in `assert_send`\n-  --> $DIR/partial-drop.rs:40:19\n+  --> $DIR/partial-drop.rs:42:19\n    |\n LL | fn assert_send<T: Send>(_: T) {}\n    |                   ^^^^ required by this bound in `assert_send`\n \n error: generator cannot be sent between threads safely\n-  --> $DIR/partial-drop.rs:30:5\n+  --> $DIR/partial-drop.rs:32:5\n    |\n LL |     assert_send(|| {\n    |     ^^^^^^^^^^^ generator is not `Send`\n    |\n-   = help: within `[generator@$DIR/partial-drop.rs:30:17: 37:6]`, the trait `Send` is not implemented for `Foo`\n+   = help: within `[generator@$DIR/partial-drop.rs:32:17: 39:6]`, the trait `Send` is not implemented for `Foo`\n note: generator is not `Send` as this value is used across a yield\n-  --> $DIR/partial-drop.rs:36:9\n+  --> $DIR/partial-drop.rs:38:9\n    |\n LL |         let guard = Bar { foo: Foo, x: 42 };\n    |             ----- has type `Bar` which is not `Send`\n@@ -62,7 +62,7 @@ LL |         yield;\n LL |     });\n    |     - `guard` is later dropped here\n note: required by a bound in `assert_send`\n-  --> $DIR/partial-drop.rs:40:19\n+  --> $DIR/partial-drop.rs:42:19\n    |\n LL | fn assert_send<T: Send>(_: T) {}\n    |                   ^^^^ required by this bound in `assert_send`"}]}