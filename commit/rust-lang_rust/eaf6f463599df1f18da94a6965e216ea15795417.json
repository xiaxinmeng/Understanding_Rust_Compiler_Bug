{"sha": "eaf6f463599df1f18da94a6965e216ea15795417", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZjZmNDYzNTk5ZGYxZjE4ZGE5NGE2OTY1ZTIxNmVhMTU3OTU0MTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-09T08:19:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-09T08:19:19Z"}, "message": "Auto merge of #87820 - elichai:patch-2, r=kennytm\n\nReplace read_to_string with read_line in Stdin example\n\nThe current example results in infinitely reading from stdin, which can confuse newcomers trying to read from stdin.\n(`@razmag` encountered this while learning the language from the docs)", "tree": {"sha": "8158c7d5411dcbfaa4f853727129ac35c5a769fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8158c7d5411dcbfaa4f853727129ac35c5a769fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eaf6f463599df1f18da94a6965e216ea15795417", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eaf6f463599df1f18da94a6965e216ea15795417", "html_url": "https://github.com/rust-lang/rust/commit/eaf6f463599df1f18da94a6965e216ea15795417", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eaf6f463599df1f18da94a6965e216ea15795417/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b52ad00cb492f65855014b2aab9f2abe9be3324", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b52ad00cb492f65855014b2aab9f2abe9be3324", "html_url": "https://github.com/rust-lang/rust/commit/7b52ad00cb492f65855014b2aab9f2abe9be3324"}, {"sha": "4763ef2bd3b785eab2198348035289f05ffd9548", "url": "https://api.github.com/repos/rust-lang/rust/commits/4763ef2bd3b785eab2198348035289f05ffd9548", "html_url": "https://github.com/rust-lang/rust/commit/4763ef2bd3b785eab2198348035289f05ffd9548"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "14a63303711fc44e84781c837555e35315ffb63d", "filename": "library/std/src/io/stdio.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/eaf6f463599df1f18da94a6965e216ea15795417/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eaf6f463599df1f18da94a6965e216ea15795417/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs?ref=eaf6f463599df1f18da94a6965e216ea15795417", "patch": "@@ -216,12 +216,12 @@ fn handle_ebadf<T>(r: io::Result<T>, default: T) -> io::Result<T> {\n /// # Examples\n ///\n /// ```no_run\n-/// use std::io::{self, Read};\n+/// use std::io;\n ///\n /// fn main() -> io::Result<()> {\n ///     let mut buffer = String::new();\n ///     let mut stdin = io::stdin(); // We get `Stdin` here.\n-///     stdin.read_to_string(&mut buffer)?;\n+///     stdin.read_line(&mut buffer)?;\n ///     Ok(())\n /// }\n /// ```\n@@ -244,14 +244,14 @@ pub struct Stdin {\n /// # Examples\n ///\n /// ```no_run\n-/// use std::io::{self, Read};\n+/// use std::io::{self, BufRead};\n ///\n /// fn main() -> io::Result<()> {\n ///     let mut buffer = String::new();\n ///     let stdin = io::stdin(); // We get `Stdin` here.\n ///     {\n ///         let mut handle = stdin.lock(); // We get `StdinLock` here.\n-///         handle.read_to_string(&mut buffer)?;\n+///         handle.read_line(&mut buffer)?;\n ///     } // `StdinLock` is dropped here.\n ///     Ok(())\n /// }\n@@ -277,26 +277,26 @@ pub struct StdinLock<'a> {\n /// Using implicit synchronization:\n ///\n /// ```no_run\n-/// use std::io::{self, Read};\n+/// use std::io;\n ///\n /// fn main() -> io::Result<()> {\n ///     let mut buffer = String::new();\n-///     io::stdin().read_to_string(&mut buffer)?;\n+///     io::stdin().read_line(&mut buffer)?;\n ///     Ok(())\n /// }\n /// ```\n ///\n /// Using explicit synchronization:\n ///\n /// ```no_run\n-/// use std::io::{self, Read};\n+/// use std::io::{self, BufRead};\n ///\n /// fn main() -> io::Result<()> {\n ///     let mut buffer = String::new();\n ///     let stdin = io::stdin();\n ///     let mut handle = stdin.lock();\n ///\n-///     handle.read_to_string(&mut buffer)?;\n+///     handle.read_line(&mut buffer)?;\n ///     Ok(())\n /// }\n /// ```\n@@ -337,13 +337,13 @@ pub fn stdin() -> Stdin {\n ///\n /// ```no_run\n /// #![feature(stdio_locked)]\n-/// use std::io::{self, Read};\n+/// use std::io::{self, BufRead};\n ///\n /// fn main() -> io::Result<()> {\n ///     let mut buffer = String::new();\n ///     let mut handle = io::stdin_locked();\n ///\n-///     handle.read_to_string(&mut buffer)?;\n+///     handle.read_line(&mut buffer)?;\n ///     Ok(())\n /// }\n /// ```\n@@ -363,14 +363,14 @@ impl Stdin {\n     /// # Examples\n     ///\n     /// ```no_run\n-    /// use std::io::{self, Read};\n+    /// use std::io::{self, BufRead};\n     ///\n     /// fn main() -> io::Result<()> {\n     ///     let mut buffer = String::new();\n     ///     let stdin = io::stdin();\n     ///     let mut handle = stdin.lock();\n     ///\n-    ///     handle.read_to_string(&mut buffer)?;\n+    ///     handle.read_line(&mut buffer)?;\n     ///     Ok(())\n     /// }\n     /// ```\n@@ -432,13 +432,13 @@ impl Stdin {\n     ///\n     /// ```no_run\n     /// #![feature(stdio_locked)]\n-    /// use std::io::{self, Read};\n+    /// use std::io::{self, BufRead};\n     ///\n     /// fn main() -> io::Result<()> {\n     ///     let mut buffer = String::new();\n     ///     let mut handle = io::stdin().into_locked();\n     ///\n-    ///     handle.read_to_string(&mut buffer)?;\n+    ///     handle.read_line(&mut buffer)?;\n     ///     Ok(())\n     /// }\n     /// ```"}]}