{"sha": "9d33008da1f533915416be550e25fd52b6a2354b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkMzMwMDhkYTFmNTMzOTE1NDE2YmU1NTBlMjVmZDUyYjZhMjM1NGI=", "commit": {"author": {"name": "ILYONG CHO", "email": "ilyoan@gmail.com", "date": "2013-04-29T08:59:25Z"}, "committer": {"name": "ILYONG CHO", "email": "ilyoan@gmail.com", "date": "2013-04-29T08:59:25Z"}, "message": "tutorial: Fix 'self' to 'Self'", "tree": {"sha": "8b3c6e11e4a1ba11f94f0cbb8cf428dce5caf9a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b3c6e11e4a1ba11f94f0cbb8cf428dce5caf9a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d33008da1f533915416be550e25fd52b6a2354b", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d33008da1f533915416be550e25fd52b6a2354b", "html_url": "https://github.com/rust-lang/rust/commit/9d33008da1f533915416be550e25fd52b6a2354b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d33008da1f533915416be550e25fd52b6a2354b/comments", "author": {"login": "ILyoan", "id": 2672194, "node_id": "MDQ6VXNlcjI2NzIxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2672194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ILyoan", "html_url": "https://github.com/ILyoan", "followers_url": "https://api.github.com/users/ILyoan/followers", "following_url": "https://api.github.com/users/ILyoan/following{/other_user}", "gists_url": "https://api.github.com/users/ILyoan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ILyoan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ILyoan/subscriptions", "organizations_url": "https://api.github.com/users/ILyoan/orgs", "repos_url": "https://api.github.com/users/ILyoan/repos", "events_url": "https://api.github.com/users/ILyoan/events{/privacy}", "received_events_url": "https://api.github.com/users/ILyoan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ILyoan", "id": 2672194, "node_id": "MDQ6VXNlcjI2NzIxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2672194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ILyoan", "html_url": "https://github.com/ILyoan", "followers_url": "https://api.github.com/users/ILyoan/followers", "following_url": "https://api.github.com/users/ILyoan/following{/other_user}", "gists_url": "https://api.github.com/users/ILyoan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ILyoan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ILyoan/subscriptions", "organizations_url": "https://api.github.com/users/ILyoan/orgs", "repos_url": "https://api.github.com/users/ILyoan/repos", "events_url": "https://api.github.com/users/ILyoan/events{/privacy}", "received_events_url": "https://api.github.com/users/ILyoan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea74f6845e08150e3b38766f57a4af928aea1376", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea74f6845e08150e3b38766f57a4af928aea1376", "html_url": "https://github.com/rust-lang/rust/commit/ea74f6845e08150e3b38766f57a4af928aea1376"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "07eb3bc7681d7d9adab4802d9bd8d1b2548836ed", "filename": "doc/tutorial.md", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9d33008da1f533915416be550e25fd52b6a2354b/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/9d33008da1f533915416be550e25fd52b6a2354b/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=9d33008da1f533915416be550e25fd52b6a2354b", "patch": "@@ -2056,11 +2056,10 @@ method declarations. So, re-declaring the type parameter\n `T` as an explicit type parameter for `len`, in either the trait or\n the impl, would be a compile-time error.\n \n-Within a trait definition, `self` is a special type that you can think\n+Within a trait definition, `Self` is a special type that you can think\n of as a type parameter. An implementation of the trait for any given\n-type `T` replaces the `self` type parameter with `T`. Simply, in a\n-trait, `self` is a type, and in an impl, `self` is a value. The\n-following trait describes types that support an equality operation:\n+type `T` replaces the `Self` type parameter with `T`. The following\n+trait describes types that support an equality operation:\n \n ~~~~\n // In a trait, `self` refers to the self argument.\n@@ -2076,7 +2075,7 @@ impl Eq for int {\n ~~~~\n \n Notice that in the trait definition, `equals` takes a\n-second parameter of type `self`.\n+second parameter of type `Self`.\n In contrast, in the `impl`, `equals` takes a second parameter of\n type `int`, only using `self` as the name of the receiver.\n "}]}