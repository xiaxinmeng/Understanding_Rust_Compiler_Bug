{"sha": "fed81c2cfc2c16e4a2c66f25b83e34985af70f8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZDgxYzJjZmMyYzE2ZTRhMmM2NmYyNWI4M2UzNDk4NWFmNzBmOGQ=", "commit": {"author": {"name": "Chris Peterson", "email": "cpeterson@mozilla.com", "date": "2012-02-20T07:15:35Z"}, "committer": {"name": "Chris Peterson", "email": "cpeterson@mozilla.com", "date": "2012-02-20T07:15:35Z"}, "message": "rt: Add some lock_and_signal assertions\n\nAssert that locks are not reentered on the same thread, unlocked by a\ndifferent thread, or deleted while locked.", "tree": {"sha": "177f7980a4f1ec422a12bba0c45df1bd298723c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/177f7980a4f1ec422a12bba0c45df1bd298723c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fed81c2cfc2c16e4a2c66f25b83e34985af70f8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fed81c2cfc2c16e4a2c66f25b83e34985af70f8d", "html_url": "https://github.com/rust-lang/rust/commit/fed81c2cfc2c16e4a2c66f25b83e34985af70f8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fed81c2cfc2c16e4a2c66f25b83e34985af70f8d/comments", "author": {"login": "cpeterso", "id": 629193, "node_id": "MDQ6VXNlcjYyOTE5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/629193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpeterso", "html_url": "https://github.com/cpeterso", "followers_url": "https://api.github.com/users/cpeterso/followers", "following_url": "https://api.github.com/users/cpeterso/following{/other_user}", "gists_url": "https://api.github.com/users/cpeterso/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpeterso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpeterso/subscriptions", "organizations_url": "https://api.github.com/users/cpeterso/orgs", "repos_url": "https://api.github.com/users/cpeterso/repos", "events_url": "https://api.github.com/users/cpeterso/events{/privacy}", "received_events_url": "https://api.github.com/users/cpeterso/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cpeterso", "id": 629193, "node_id": "MDQ6VXNlcjYyOTE5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/629193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpeterso", "html_url": "https://github.com/cpeterso", "followers_url": "https://api.github.com/users/cpeterso/followers", "following_url": "https://api.github.com/users/cpeterso/following{/other_user}", "gists_url": "https://api.github.com/users/cpeterso/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpeterso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpeterso/subscriptions", "organizations_url": "https://api.github.com/users/cpeterso/orgs", "repos_url": "https://api.github.com/users/cpeterso/repos", "events_url": "https://api.github.com/users/cpeterso/events{/privacy}", "received_events_url": "https://api.github.com/users/cpeterso/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f492932324aded094042759eeb5824c64aa98e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f492932324aded094042759eeb5824c64aa98e0", "html_url": "https://github.com/rust-lang/rust/commit/9f492932324aded094042759eeb5824c64aa98e0"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "fa19b63385dd26da0dccc8bb12285877f93aa702", "filename": "src/rt/sync/lock_and_signal.cpp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fed81c2cfc2c16e4a2c66f25b83e34985af70f8d/src%2Frt%2Fsync%2Flock_and_signal.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/fed81c2cfc2c16e4a2c66f25b83e34985af70f8d/src%2Frt%2Fsync%2Flock_and_signal.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fsync%2Flock_and_signal.cpp?ref=fed81c2cfc2c16e4a2c66f25b83e34985af70f8d", "patch": "@@ -43,6 +43,7 @@ lock_and_signal::lock_and_signal()\n #endif\n \n lock_and_signal::~lock_and_signal() {\n+    assert(_holding_thread == INVALID_THREAD);\n #if defined(__WIN32__)\n     CloseHandle(_event);\n     DeleteCriticalSection(&_cs);\n@@ -53,6 +54,7 @@ lock_and_signal::~lock_and_signal() {\n }\n \n void lock_and_signal::lock() {\n+    assert(!lock_held_by_current_thread());\n #if defined(__WIN32__)\n     EnterCriticalSection(&_cs);\n     _holding_thread = GetCurrentThreadId();\n@@ -63,6 +65,7 @@ void lock_and_signal::lock() {\n }\n \n void lock_and_signal::unlock() {\n+    assert(lock_held_by_current_thread());\n     _holding_thread = INVALID_THREAD;\n #if defined(__WIN32__)\n     LeaveCriticalSection(&_cs);\n@@ -81,9 +84,11 @@ void lock_and_signal::wait() {\n     LeaveCriticalSection(&_cs);\n     WaitForSingleObject(_event, INFINITE);\n     EnterCriticalSection(&_cs);\n+    assert(_holding_thread == INVALID_THREAD);\n     _holding_thread = GetCurrentThreadId();\n #else\n     CHECKED(pthread_cond_wait(&_cond, &_mutex));\n+    assert(_holding_thread == INVALID_THREAD);\n     _holding_thread = pthread_self();\n #endif\n }"}]}