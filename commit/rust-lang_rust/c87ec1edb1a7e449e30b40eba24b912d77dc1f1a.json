{"sha": "c87ec1edb1a7e449e30b40eba24b912d77dc1f1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4N2VjMWVkYjFhN2U0NDllMzBiNDBlYmEyNGI5MTJkNzdkYzFmMWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-11T01:59:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-11T01:59:18Z"}, "message": "Auto merge of #24186 - richo:pad-pointers, r=alexcrichton\n\nThis pads out the printing of pointers to their native width.\r\n\r\nExtracted from and rebased on top of #24144", "tree": {"sha": "2dbdc2bea3a9d3d7546ae8de6d6bbb7d8d827a20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2dbdc2bea3a9d3d7546ae8de6d6bbb7d8d827a20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c87ec1edb1a7e449e30b40eba24b912d77dc1f1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c87ec1edb1a7e449e30b40eba24b912d77dc1f1a", "html_url": "https://github.com/rust-lang/rust/commit/c87ec1edb1a7e449e30b40eba24b912d77dc1f1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c87ec1edb1a7e449e30b40eba24b912d77dc1f1a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93f7fe32d30b67baa6abf09c073c5862a978dc57", "url": "https://api.github.com/repos/rust-lang/rust/commits/93f7fe32d30b67baa6abf09c073c5862a978dc57", "html_url": "https://github.com/rust-lang/rust/commit/93f7fe32d30b67baa6abf09c073c5862a978dc57"}, {"sha": "64da4e171d7fa5715b76becde4e8fd40712eaf9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/64da4e171d7fa5715b76becde4e8fd40712eaf9f", "html_url": "https://github.com/rust-lang/rust/commit/64da4e171d7fa5715b76becde4e8fd40712eaf9f"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "67781b73ae23c8b76e8941aa33dc84034a6d2182", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c87ec1edb1a7e449e30b40eba24b912d77dc1f1a/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c87ec1edb1a7e449e30b40eba24b912d77dc1f1a/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=c87ec1edb1a7e449e30b40eba24b912d77dc1f1a", "patch": "@@ -847,9 +847,32 @@ impl Display for char {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> Pointer for *const T {\n     fn fmt(&self, f: &mut Formatter) -> Result {\n+        let old_width = f.width;\n+        let old_flags = f.flags;\n+\n+        // The alternate flag is already treated by LowerHex as being special-\n+        // it denotes whether to prefix with 0x. We use it to work out whether\n+        // or not to zero extend, and then unconditionally set it to get the\n+        // prefix.\n+        if f.flags & 1 << (FlagV1::Alternate as u32) > 0 {\n+            f.flags |= 1 << (FlagV1::SignAwareZeroPad as u32);\n+\n+            if let None = f.width {\n+                // The formats need two extra bytes, for the 0x\n+                if cfg!(target_pointer_width = \"32\") {\n+                    f.width = Some(10);\n+                } else {\n+                    f.width = Some(18);\n+                }\n+            }\n+        }\n         f.flags |= 1 << (FlagV1::Alternate as u32);\n+\n         let ret = LowerHex::fmt(&(*self as usize), f);\n-        f.flags &= !(1 << (FlagV1::Alternate as u32));\n+\n+        f.width = old_width;\n+        f.flags = old_flags;\n+\n         ret\n     }\n }"}, {"sha": "96f31891f2f34bbea5d042a635f3f6abd3a11f08", "filename": "src/test/run-pass/fmt-pointer-trait.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c87ec1edb1a7e449e30b40eba24b912d77dc1f1a/src%2Ftest%2Frun-pass%2Ffmt-pointer-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c87ec1edb1a7e449e30b40eba24b912d77dc1f1a/src%2Ftest%2Frun-pass%2Ffmt-pointer-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffmt-pointer-trait.rs?ref=c87ec1edb1a7e449e30b40eba24b912d77dc1f1a", "patch": "@@ -23,6 +23,13 @@ fn main() {\n     let _ = format!(\"{:p}{:p}{:p}\",\n                     rc, arc, b);\n \n+    if cfg!(target_pointer_width = \"32\") {\n+        assert_eq!(format!(\"{:#p}\", p),\n+                   \"0x00000000\");\n+    } else {\n+        assert_eq!(format!(\"{:#p}\", p),\n+                   \"0x0000000000000000\");\n+    }\n     assert_eq!(format!(\"{:p}\", p),\n                \"0x0\");\n }"}, {"sha": "3a7af0976441927fe03799d32ce185bb6bd16b40", "filename": "src/test/run-pass/ifmt.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c87ec1edb1a7e449e30b40eba24b912d77dc1f1a/src%2Ftest%2Frun-pass%2Fifmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c87ec1edb1a7e449e30b40eba24b912d77dc1f1a/src%2Ftest%2Frun-pass%2Fifmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fifmt.rs?ref=c87ec1edb1a7e449e30b40eba24b912d77dc1f1a", "patch": "@@ -72,6 +72,13 @@ pub fn main() {\n     t!(format!(\"{:X}\", 10_usize), \"A\");\n     t!(format!(\"{}\", \"foo\"), \"foo\");\n     t!(format!(\"{}\", \"foo\".to_string()), \"foo\");\n+    if cfg!(target_pointer_width = \"32\") {\n+        t!(format!(\"{:#p}\", 0x1234 as *const isize), \"0x00001234\");\n+        t!(format!(\"{:#p}\", 0x1234 as *mut isize), \"0x00001234\");\n+    } else {\n+        t!(format!(\"{:#p}\", 0x1234 as *const isize), \"0x0000000000001234\");\n+        t!(format!(\"{:#p}\", 0x1234 as *mut isize), \"0x0000000000001234\");\n+    }\n     t!(format!(\"{:p}\", 0x1234 as *const isize), \"0x1234\");\n     t!(format!(\"{:p}\", 0x1234 as *mut isize), \"0x1234\");\n     t!(format!(\"{:x}\", A), \"aloha\");\n@@ -85,9 +92,8 @@ pub fn main() {\n     t!(format!(\"{}\", 5 + 5), \"10\");\n     t!(format!(\"{:#4}\", C), \"\u2603123\");\n \n-    // FIXME(#20676)\n-    // let a: &fmt::Debug = &1;\n-    // t!(format!(\"{:?}\", a), \"1\");\n+    let a: &fmt::Debug = &1;\n+    t!(format!(\"{:?}\", a), \"1\");\n \n \n     // Formatting strings and their arguments"}]}