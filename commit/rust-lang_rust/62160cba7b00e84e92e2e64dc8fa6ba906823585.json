{"sha": "62160cba7b00e84e92e2e64dc8fa6ba906823585", "node_id": "C_kwDOAAsO6NoAKDYyMTYwY2JhN2IwMGU4NGU5MmUyZTY0ZGM4ZmE2YmE5MDY4MjM1ODU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-10T14:01:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-10T14:01:44Z"}, "message": "Rollup merge of #105410 - TaKO8Ki:fix-105257, r=BoxyUwU\n\nConsider `parent_count` for const param defaults\n\nFixes #105257", "tree": {"sha": "b30b0b6b02e4f920f47c2c9a3d84e77054792b29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b30b0b6b02e4f920f47c2c9a3d84e77054792b29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62160cba7b00e84e92e2e64dc8fa6ba906823585", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjlJFICRBK7hj4Ov3rIwAA2bwIAJF4McOH3Ti3h7fBVxIqXlJh\nuRWEFci7Ar+2KzEfWIymaATwIDTRNd+PdBUE9MSmU8l7swYc+4LO8X3R6MC5HbYu\nItxIvzV0cklObYblAePWOWBYSt74l3lT55CHUSPlrnClQ8AL/ANfcDexFLlwQz4E\nyGQiN2fj/zEdLBpy5kBIa3A6HyNekqBJI2j9eGshz9PC+v6AbD3+LcEMT0NkApCk\nsInai48bh2aj32XoinXdmzosTK9pnL1fSGolXOy7Rx7k9vr1ZzARKInVccD63r4a\nBn4yN7GeF/vCKs1PxjjOfRE3QrotoEgOJo8FO+tncCjR/odiQ17vPcxKz4YFVeQ=\n=71Mm\n-----END PGP SIGNATURE-----\n", "payload": "tree b30b0b6b02e4f920f47c2c9a3d84e77054792b29\nparent 43bee03a677f1a942dabe872d7e2965659c73e27\nparent 85d7d9b6b748d896831502fd2776e9fb356d6d09\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670680904 +0100\ncommitter GitHub <noreply@github.com> 1670680904 +0100\n\nRollup merge of #105410 - TaKO8Ki:fix-105257, r=BoxyUwU\n\nConsider `parent_count` for const param defaults\n\nFixes #105257\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62160cba7b00e84e92e2e64dc8fa6ba906823585", "html_url": "https://github.com/rust-lang/rust/commit/62160cba7b00e84e92e2e64dc8fa6ba906823585", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62160cba7b00e84e92e2e64dc8fa6ba906823585/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43bee03a677f1a942dabe872d7e2965659c73e27", "url": "https://api.github.com/repos/rust-lang/rust/commits/43bee03a677f1a942dabe872d7e2965659c73e27", "html_url": "https://github.com/rust-lang/rust/commit/43bee03a677f1a942dabe872d7e2965659c73e27"}, {"sha": "85d7d9b6b748d896831502fd2776e9fb356d6d09", "url": "https://api.github.com/repos/rust-lang/rust/commits/85d7d9b6b748d896831502fd2776e9fb356d6d09", "html_url": "https://github.com/rust-lang/rust/commit/85d7d9b6b748d896831502fd2776e9fb356d6d09"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "cb4c35c0ce177e527e1bab8feba86b319ce53878", "filename": "compiler/rustc_hir_analysis/src/collect/generics_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62160cba7b00e84e92e2e64dc8fa6ba906823585/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fgenerics_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62160cba7b00e84e92e2e64dc8fa6ba906823585/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fgenerics_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fgenerics_of.rs?ref=62160cba7b00e84e92e2e64dc8fa6ba906823585", "patch": "@@ -78,7 +78,7 @@ pub(super) fn generics_of(tcx: TyCtxt<'_>, def_id: DefId) -> ty::Generics {\n                     let generics = tcx.generics_of(parent_def_id.to_def_id());\n                     let param_def_idx = generics.param_def_id_to_index[&param_id.to_def_id()];\n                     // In the above example this would be .params[..N#0]\n-                    let params = generics.params[..param_def_idx as usize].to_owned();\n+                    let params = generics.params_to(param_def_idx as usize, tcx).to_owned();\n                     let param_def_id_to_index =\n                         params.iter().map(|param| (param.def_id, param.index)).collect();\n "}, {"sha": "2e70ac256a71973a768abfcd73cb943e66293cbf", "filename": "compiler/rustc_middle/src/ty/generics.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/62160cba7b00e84e92e2e64dc8fa6ba906823585/compiler%2Frustc_middle%2Fsrc%2Fty%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62160cba7b00e84e92e2e64dc8fa6ba906823585/compiler%2Frustc_middle%2Fsrc%2Fty%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fgenerics.rs?ref=62160cba7b00e84e92e2e64dc8fa6ba906823585", "patch": "@@ -234,6 +234,15 @@ impl<'tcx> Generics {\n         }\n     }\n \n+    pub fn params_to(&'tcx self, param_index: usize, tcx: TyCtxt<'tcx>) -> &'tcx [GenericParamDef] {\n+        if let Some(index) = param_index.checked_sub(self.parent_count) {\n+            &self.params[..index]\n+        } else {\n+            tcx.generics_of(self.parent.expect(\"parent_count > 0 but no parent?\"))\n+                .params_to(param_index, tcx)\n+        }\n+    }\n+\n     /// Returns the `GenericParamDef` associated with this `EarlyBoundRegion`.\n     pub fn region_param(\n         &'tcx self,"}, {"sha": "d8b23bc01a96dc40d8c2eac272745c8bf8e56be7", "filename": "src/test/ui/const-generics/generic_const_exprs/issue-105257.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/62160cba7b00e84e92e2e64dc8fa6ba906823585/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-105257.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62160cba7b00e84e92e2e64dc8fa6ba906823585/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-105257.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-105257.rs?ref=62160cba7b00e84e92e2e64dc8fa6ba906823585", "patch": "@@ -0,0 +1,9 @@\n+#![feature(generic_const_exprs)]\n+#![allow(incomplete_features)]\n+\n+trait Trait<T> {\n+    fn fnc<const N: usize = \"\">(&self) {} //~ERROR defaults for const parameters are only allowed in `struct`, `enum`, `type`, or `trait` definitions\n+    fn foo<const N: usize = { std::mem::size_of::<T>() }>(&self) {} //~ERROR defaults for const parameters are only allowed in `struct`, `enum`, `type`, or `trait` definitions\n+}\n+\n+fn main() {}"}, {"sha": "ed7a8cb19a4a5fc45b7d3e1b0a4c64e22adf16fb", "filename": "src/test/ui/const-generics/generic_const_exprs/issue-105257.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/62160cba7b00e84e92e2e64dc8fa6ba906823585/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-105257.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/62160cba7b00e84e92e2e64dc8fa6ba906823585/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-105257.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-105257.stderr?ref=62160cba7b00e84e92e2e64dc8fa6ba906823585", "patch": "@@ -0,0 +1,14 @@\n+error: defaults for const parameters are only allowed in `struct`, `enum`, `type`, or `trait` definitions\n+  --> $DIR/issue-105257.rs:5:12\n+   |\n+LL |     fn fnc<const N: usize = \"\">(&self) {}\n+   |            ^^^^^^^^^^^^^^^^^^^\n+\n+error: defaults for const parameters are only allowed in `struct`, `enum`, `type`, or `trait` definitions\n+  --> $DIR/issue-105257.rs:6:12\n+   |\n+LL |     fn foo<const N: usize = { std::mem::size_of::<T>() }>(&self) {}\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}]}