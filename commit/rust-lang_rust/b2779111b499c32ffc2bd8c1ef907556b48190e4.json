{"sha": "b2779111b499c32ffc2bd8c1ef907556b48190e4", "node_id": "C_kwDOAAsO6NoAKGIyNzc5MTExYjQ5OWMzMmZmYzJiZDhjMWVmOTA3NTU2YjQ4MTkwZTQ", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-05-19T13:29:35Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-05-19T13:29:35Z"}, "message": "simplify", "tree": {"sha": "c3e5f7b11cc8d8eda60081151edc41c8562de855", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3e5f7b11cc8d8eda60081151edc41c8562de855"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2779111b499c32ffc2bd8c1ef907556b48190e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2779111b499c32ffc2bd8c1ef907556b48190e4", "html_url": "https://github.com/rust-lang/rust/commit/b2779111b499c32ffc2bd8c1ef907556b48190e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2779111b499c32ffc2bd8c1ef907556b48190e4/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f7d1a9d699ce7d30946f4ae26622b95e2c75372", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f7d1a9d699ce7d30946f4ae26622b95e2c75372", "html_url": "https://github.com/rust-lang/rust/commit/4f7d1a9d699ce7d30946f4ae26622b95e2c75372"}], "stats": {"total": 26, "additions": 11, "deletions": 15}, "files": [{"sha": "e72903e55fe8684e38bc94766bac69b11c229d4e", "filename": "crates/project-model/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2779111b499c32ffc2bd8c1ef907556b48190e4/crates%2Fproject-model%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2779111b499c32ffc2bd8c1ef907556b48190e4/crates%2Fproject-model%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Ftests.rs?ref=b2779111b499c32ffc2bd8c1ef907556b48190e4", "patch": "@@ -88,7 +88,7 @@ fn rooted_project_json(data: ProjectJsonData) -> ProjectJson {\n }\n \n fn to_crate_graph(project_workspace: ProjectWorkspace) -> CrateGraph {\n-    project_workspace.to_crate_graph(&Default::default(), &mut |_, _| Vec::new(), &mut {\n+    project_workspace.to_crate_graph(&mut |_, _| Vec::new(), &mut {\n         let mut counter = 0;\n         move |_path| {\n             counter += 1;"}, {"sha": "ace1d455c46db7fd96df7317a04a929341a80fbd", "filename": "crates/project-model/src/workspace.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b2779111b499c32ffc2bd8c1ef907556b48190e4/crates%2Fproject-model%2Fsrc%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2779111b499c32ffc2bd8c1ef907556b48190e4/crates%2Fproject-model%2Fsrc%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Fworkspace.rs?ref=b2779111b499c32ffc2bd8c1ef907556b48190e4", "patch": "@@ -389,14 +389,10 @@ impl ProjectWorkspace {\n \n     pub fn to_crate_graph(\n         &self,\n-        dummy_replace: &FxHashMap<Box<str>, Box<[Box<str>]>>,\n-        load_proc_macro: &mut dyn FnMut(&AbsPath, &[Box<str>]) -> Vec<ProcMacro>,\n+        load_proc_macro: &mut dyn FnMut(&str, &AbsPath) -> Vec<ProcMacro>,\n         load: &mut dyn FnMut(&AbsPath) -> Option<FileId>,\n     ) -> CrateGraph {\n         let _p = profile::span(\"ProjectWorkspace::to_crate_graph\");\n-        let load_proc_macro = &mut |crate_name: &_, path: &_| {\n-            load_proc_macro(path, dummy_replace.get(crate_name).map(|it| &**it).unwrap_or_default())\n-        };\n \n         let mut crate_graph = match self {\n             ProjectWorkspace::Json { project, sysroot, rustc_cfg } => project_json_to_crate_graph("}, {"sha": "4243af25ff1a19d47147494215fa3ca8441e0c2a", "filename": "crates/rust-analyzer/src/cli/load_cargo.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b2779111b499c32ffc2bd8c1ef907556b48190e4/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2779111b499c32ffc2bd8c1ef907556b48190e4/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs?ref=b2779111b499c32ffc2bd8c1ef907556b48190e4", "patch": "@@ -66,8 +66,7 @@ pub fn load_workspace(\n     };\n \n     let crate_graph = ws.to_crate_graph(\n-        &Default::default(),\n-        &mut |path: &AbsPath, _| load_proc_macro(proc_macro_client.as_ref(), path, &[]),\n+        &mut |_, path: &AbsPath| load_proc_macro(proc_macro_client.as_ref(), path, &[]),\n         &mut |path: &AbsPath| {\n             let contents = loader.load_sync(path);\n             let path = vfs::VfsPath::from(path.to_path_buf());"}, {"sha": "ed8c24acd1cad07466880cf2ba7b641127a3551d", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b2779111b499c32ffc2bd8c1ef907556b48190e4/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2779111b499c32ffc2bd8c1ef907556b48190e4/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=b2779111b499c32ffc2bd8c1ef907556b48190e4", "patch": "@@ -319,8 +319,13 @@ impl GlobalState {\n         // Create crate graph from all the workspaces\n         let crate_graph = {\n             let proc_macro_client = self.proc_macro_client.as_ref();\n-            let mut load_proc_macro = move |path: &AbsPath, dummy_replace: &_| {\n-                load_proc_macro(proc_macro_client, path, dummy_replace)\n+            let dummy_replacements = self.config.dummy_replacements();\n+            let mut load_proc_macro = move |crate_name: &str, path: &AbsPath| {\n+                load_proc_macro(\n+                    proc_macro_client,\n+                    path,\n+                    dummy_replacements.get(crate_name).map(|v| &**v).unwrap_or_default(),\n+                )\n             };\n \n             let vfs = &mut self.vfs.write().0;\n@@ -342,11 +347,7 @@ impl GlobalState {\n \n             let mut crate_graph = CrateGraph::default();\n             for ws in self.workspaces.iter() {\n-                crate_graph.extend(ws.to_crate_graph(\n-                    self.config.dummy_replacements(),\n-                    &mut load_proc_macro,\n-                    &mut load,\n-                ));\n+                crate_graph.extend(ws.to_crate_graph(&mut load_proc_macro, &mut load));\n             }\n             crate_graph\n         };"}]}