{"sha": "b7bfdbe68147f2ea8ca4870270643180bef76e02", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3YmZkYmU2ODE0N2YyZWE4Y2E0ODcwMjcwNjQzMTgwYmVmNzZlMDI=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-12-22T18:42:15Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-12-23T11:16:51Z"}, "message": "Improve invalid assignment error", "tree": {"sha": "fb88c336f1511d88f844f31703e7b14391b04b02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb88c336f1511d88f844f31703e7b14391b04b02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7bfdbe68147f2ea8ca4870270643180bef76e02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7bfdbe68147f2ea8ca4870270643180bef76e02", "html_url": "https://github.com/rust-lang/rust/commit/b7bfdbe68147f2ea8ca4870270643180bef76e02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7bfdbe68147f2ea8ca4870270643180bef76e02/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5991c57cf4430d1f67886637c65f2178ff1b372", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5991c57cf4430d1f67886637c65f2178ff1b372", "html_url": "https://github.com/rust-lang/rust/commit/a5991c57cf4430d1f67886637c65f2178ff1b372"}], "stats": {"total": 141, "additions": 92, "deletions": 49}, "files": [{"sha": "27f6b3cb45f4bf78b5e4dbf4b43d120099dcac93", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=b7bfdbe68147f2ea8ca4870270643180bef76e02", "patch": "@@ -753,9 +753,12 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n             err.emit();\n         } else if !lhs.is_syntactic_place_expr() {\n-            struct_span_err!(self.tcx.sess, expr.span, E0070, \"invalid left-hand side expression\")\n-                .span_label(expr.span, \"left-hand of expression not valid\")\n-                .emit();\n+            struct_span_err!(\n+                self.tcx.sess,\n+                expr.span,\n+                E0070,\n+                \"invalid left-hand side of assignment\",\n+            ).span_label(lhs.span, \"cannot assign to this expression\").emit();\n         }\n \n         self.require_type_is_sized(lhs_ty, lhs.span, traits::AssignmentLhsSized);"}, {"sha": "eeee7dea4d1c18968418f26363702ac61b1ad5e7", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=b7bfdbe68147f2ea8ca4870270643180bef76e02", "patch": "@@ -36,12 +36,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         if !lhs_expr.is_syntactic_place_expr() {\n             struct_span_err!(\n                 self.tcx.sess,\n-                lhs_expr.span,\n+                op.span,\n                 E0067,\n-                \"invalid left-hand side expression\"\n-            )\n-            .span_label(lhs_expr.span, \"invalid expression for left-hand side\")\n-            .emit();\n+                \"invalid left-hand side of assignment\",\n+            ).span_label(lhs_expr.span, \"cannot assign to this expression\").emit();\n         }\n         ty\n     }"}, {"sha": "d7cf1b77005145bd74e9ae31b847ebdcb1b5934a", "filename": "src/test/ui/bad/bad-expr-lhs.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Fbad%2Fbad-expr-lhs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Fbad%2Fbad-expr-lhs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad%2Fbad-expr-lhs.rs?ref=b7bfdbe68147f2ea8ca4870270643180bef76e02", "patch": "@@ -1,10 +1,10 @@\n fn main() {\n-    1 = 2; //~ ERROR invalid left-hand side expression\n-    1 += 2; //~ ERROR invalid left-hand side expression\n-    (1, 2) = (3, 4); //~ ERROR invalid left-hand side expression\n+    1 = 2; //~ ERROR invalid left-hand side of assignment\n+    1 += 2; //~ ERROR invalid left-hand side of assignment\n+    (1, 2) = (3, 4); //~ ERROR invalid left-hand side of assignment\n \n     let (a, b) = (1, 2);\n-    (a, b) = (3, 4); //~ ERROR invalid left-hand side expression\n+    (a, b) = (3, 4); //~ ERROR invalid left-hand side of assignment\n \n-    None = Some(3); //~ ERROR invalid left-hand side expression\n+    None = Some(3); //~ ERROR invalid left-hand side of assignment\n }"}, {"sha": "07cffbe97a8d965e8a91bde45790e0b88c8a0aa4", "filename": "src/test/ui/bad/bad-expr-lhs.stderr", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Fbad%2Fbad-expr-lhs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Fbad%2Fbad-expr-lhs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad%2Fbad-expr-lhs.stderr?ref=b7bfdbe68147f2ea8ca4870270643180bef76e02", "patch": "@@ -1,32 +1,42 @@\n-error[E0070]: invalid left-hand side expression\n+error[E0070]: invalid left-hand side of assignment\n   --> $DIR/bad-expr-lhs.rs:2:5\n    |\n LL |     1 = 2;\n-   |     ^^^^^ left-hand of expression not valid\n+   |     -^^^^\n+   |     |\n+   |     cannot assign to this expression\n \n-error[E0067]: invalid left-hand side expression\n-  --> $DIR/bad-expr-lhs.rs:3:5\n+error[E0067]: invalid left-hand side of assignment\n+  --> $DIR/bad-expr-lhs.rs:3:7\n    |\n LL |     1 += 2;\n-   |     ^ invalid expression for left-hand side\n+   |     - ^^\n+   |     |\n+   |     cannot assign to this expression\n \n-error[E0070]: invalid left-hand side expression\n+error[E0070]: invalid left-hand side of assignment\n   --> $DIR/bad-expr-lhs.rs:4:5\n    |\n LL |     (1, 2) = (3, 4);\n-   |     ^^^^^^^^^^^^^^^ left-hand of expression not valid\n+   |     ------^^^^^^^^^\n+   |     |\n+   |     cannot assign to this expression\n \n-error[E0070]: invalid left-hand side expression\n+error[E0070]: invalid left-hand side of assignment\n   --> $DIR/bad-expr-lhs.rs:7:5\n    |\n LL |     (a, b) = (3, 4);\n-   |     ^^^^^^^^^^^^^^^ left-hand of expression not valid\n+   |     ------^^^^^^^^^\n+   |     |\n+   |     cannot assign to this expression\n \n-error[E0070]: invalid left-hand side expression\n+error[E0070]: invalid left-hand side of assignment\n   --> $DIR/bad-expr-lhs.rs:9:5\n    |\n LL |     None = Some(3);\n-   |     ^^^^^^^^^^^^^^ left-hand of expression not valid\n+   |     ----^^^^^^^^^^\n+   |     |\n+   |     cannot assign to this expression\n \n error: aborting due to 5 previous errors\n "}, {"sha": "526503798b3d47d203fffa9b768b5b9301bf9bff", "filename": "src/test/ui/error-codes/E0067.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Ferror-codes%2FE0067.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Ferror-codes%2FE0067.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0067.stderr?ref=b7bfdbe68147f2ea8ca4870270643180bef76e02", "patch": "@@ -8,11 +8,13 @@ LL |     LinkedList::new() += 1;\n    |\n    = note: an implementation of `std::ops::AddAssign` might be missing for `std::collections::LinkedList<_>`\n \n-error[E0067]: invalid left-hand side expression\n-  --> $DIR/E0067.rs:4:5\n+error[E0067]: invalid left-hand side of assignment\n+  --> $DIR/E0067.rs:4:23\n    |\n LL |     LinkedList::new() += 1;\n-   |     ^^^^^^^^^^^^^^^^^ invalid expression for left-hand side\n+   |     ----------------- ^^\n+   |     |\n+   |     cannot assign to this expression\n \n error: aborting due to 2 previous errors\n "}, {"sha": "1fb812d94672fbed954ed51ed70453f9c102110a", "filename": "src/test/ui/error-codes/E0070.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Ferror-codes%2FE0070.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Ferror-codes%2FE0070.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0070.stderr?ref=b7bfdbe68147f2ea8ca4870270643180bef76e02", "patch": "@@ -1,26 +1,32 @@\n-error[E0070]: invalid left-hand side expression\n+error[E0070]: invalid left-hand side of assignment\n   --> $DIR/E0070.rs:6:5\n    |\n LL |     SOME_CONST = 14;\n-   |     ^^^^^^^^^^^^^^^ left-hand of expression not valid\n+   |     ----------^^^^^\n+   |     |\n+   |     cannot assign to this expression\n \n-error[E0070]: invalid left-hand side expression\n+error[E0070]: invalid left-hand side of assignment\n   --> $DIR/E0070.rs:7:5\n    |\n LL |     1 = 3;\n-   |     ^^^^^ left-hand of expression not valid\n+   |     -^^^^\n+   |     |\n+   |     cannot assign to this expression\n \n error[E0308]: mismatched types\n   --> $DIR/E0070.rs:8:25\n    |\n LL |     some_other_func() = 4;\n    |                         ^ expected `()`, found integer\n \n-error[E0070]: invalid left-hand side expression\n+error[E0070]: invalid left-hand side of assignment\n   --> $DIR/E0070.rs:8:5\n    |\n LL |     some_other_func() = 4;\n-   |     ^^^^^^^^^^^^^^^^^^^^^ left-hand of expression not valid\n+   |     -----------------^^^^\n+   |     |\n+   |     cannot assign to this expression\n \n error: aborting due to 4 previous errors\n "}, {"sha": "fa53d55f5b3d7240b7dc9a97224ee00976c38c2c", "filename": "src/test/ui/issues/issue-13407.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Fissues%2Fissue-13407.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Fissues%2Fissue-13407.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13407.rs?ref=b7bfdbe68147f2ea8ca4870270643180bef76e02", "patch": "@@ -4,7 +4,7 @@ mod A {\n \n fn main() {\n     A::C = 1;\n-    //~^ ERROR: invalid left-hand side expression\n+    //~^ ERROR: invalid left-hand side of assignment\n     //~| ERROR: mismatched types\n     //~| ERROR: struct `C` is private\n }"}, {"sha": "05fd97b025f60df9083195105e837f675e3afa02", "filename": "src/test/ui/issues/issue-13407.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Fissues%2Fissue-13407.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Fissues%2Fissue-13407.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13407.stderr?ref=b7bfdbe68147f2ea8ca4870270643180bef76e02", "patch": "@@ -10,11 +10,13 @@ error[E0308]: mismatched types\n LL |     A::C = 1;\n    |            ^ expected struct `A::C`, found integer\n \n-error[E0070]: invalid left-hand side expression\n+error[E0070]: invalid left-hand side of assignment\n   --> $DIR/issue-13407.rs:6:5\n    |\n LL |     A::C = 1;\n-   |     ^^^^^^^^ left-hand of expression not valid\n+   |     ----^^^^\n+   |     |\n+   |     cannot assign to this expression\n \n error: aborting due to 3 previous errors\n "}, {"sha": "c838515caf997e6f6a8ba6ad2a06ea124256354a", "filename": "src/test/ui/issues/issue-26093.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Fissues%2Fissue-26093.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Fissues%2Fissue-26093.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-26093.rs?ref=b7bfdbe68147f2ea8ca4870270643180bef76e02", "patch": "@@ -1,7 +1,9 @@\n macro_rules! not_a_place {\n     ($thing:expr) => {\n         $thing = 42;\n-        //~^ ERROR invalid left-hand side expression\n+        //~^ ERROR invalid left-hand side of assignment\n+        $thing += 42;\n+        //~^ ERROR invalid left-hand side of assignment\n     }\n }\n "}, {"sha": "48f72cef0a85ae45389997324c792378102166ec", "filename": "src/test/ui/issues/issue-26093.stderr", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Fissues%2Fissue-26093.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Fissues%2Fissue-26093.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-26093.stderr?ref=b7bfdbe68147f2ea8ca4870270643180bef76e02", "patch": "@@ -1,12 +1,28 @@\n-error[E0070]: invalid left-hand side expression\n+error[E0070]: invalid left-hand side of assignment\n   --> $DIR/issue-26093.rs:3:9\n    |\n LL |         $thing = 42;\n-   |         ^^^^^^^^^^^ left-hand of expression not valid\n+   |         ^^^^^^^^^^^\n ...\n LL |     not_a_place!(99);\n-   |     ----------------- in this macro invocation\n+   |     -----------------\n+   |     |            |\n+   |     |            cannot assign to this expression\n+   |     in this macro invocation\n \n-error: aborting due to previous error\n+error[E0067]: invalid left-hand side of assignment\n+  --> $DIR/issue-26093.rs:5:16\n+   |\n+LL |         $thing += 42;\n+   |                ^^\n+...\n+LL |     not_a_place!(99);\n+   |     -----------------\n+   |     |            |\n+   |     |            cannot assign to this expression\n+   |     in this macro invocation\n+\n+error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0070`.\n+Some errors have detailed explanations: E0067, E0070.\n+For more information about an error, try `rustc --explain E0067`."}, {"sha": "e34b5c9a0f47e3a7b84a3902ce756769ce4808d1", "filename": "src/test/ui/issues/issue-34334.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Fissues%2Fissue-34334.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Fissues%2Fissue-34334.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-34334.rs?ref=b7bfdbe68147f2ea8ca4870270643180bef76e02", "patch": "@@ -3,7 +3,7 @@ fn main () {\n     //~^ ERROR expected one of `,` or `>`, found `=`\n     //~| ERROR expected value, found struct `Vec`\n     //~| ERROR mismatched types\n-    //~| ERROR invalid left-hand side expression\n+    //~| ERROR invalid left-hand side of assignment\n     //~| ERROR expected expression, found reserved identifier `_`\n     //~| ERROR expected expression, found reserved identifier `_`\n     let sr2: Vec<(u32, _, _)> = sr.iter().map(|(faction, th_sender, th_receiver)| {}).collect();"}, {"sha": "e54f0c77cd9733a473ef7a7ced5268c6f1a0d0b0", "filename": "src/test/ui/issues/issue-34334.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Fissues%2Fissue-34334.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Fissues%2Fissue-34334.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-34334.stderr?ref=b7bfdbe68147f2ea8ca4870270643180bef76e02", "patch": "@@ -35,11 +35,13 @@ LL |     let sr: Vec<(u32, _, _) = vec![];\n             found struct `std::vec::Vec<_>`\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n-error[E0070]: invalid left-hand side expression\n+error[E0070]: invalid left-hand side of assignment\n   --> $DIR/issue-34334.rs:2:13\n    |\n LL |     let sr: Vec<(u32, _, _) = vec![];\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^ left-hand of expression not valid\n+   |             ---------------^^^^^^^^^\n+   |             |\n+   |             cannot assign to this expression\n \n error[E0599]: no method named `iter` found for type `()` in the current scope\n   --> $DIR/issue-34334.rs:9:36"}, {"sha": "191939bdb705b4d09d02df1d8ca3ea056db351cf", "filename": "src/test/ui/type/type-check/assignment-expected-bool.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-expected-bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-expected-bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-expected-bool.rs?ref=b7bfdbe68147f2ea8ca4870270643180bef76e02", "patch": "@@ -30,5 +30,5 @@ fn main() {\n     // A test to check that not expecting `bool` behaves well:\n     let _: usize = 0 = 0;\n     //~^ ERROR mismatched types [E0308]\n-    //~| ERROR invalid left-hand side expression [E0070]\n+    //~| ERROR invalid left-hand side of assignment [E0070]\n }"}, {"sha": "bbd961f8450169fd0db39e224cdca249fb2e3eee", "filename": "src/test/ui/type/type-check/assignment-expected-bool.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-expected-bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-expected-bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-expected-bool.stderr?ref=b7bfdbe68147f2ea8ca4870270643180bef76e02", "patch": "@@ -97,11 +97,13 @@ LL |         || (0 = 0);\n    |            expected `bool`, found `()`\n    |            help: try comparing for equality: `0 == 0`\n \n-error[E0070]: invalid left-hand side expression\n+error[E0070]: invalid left-hand side of assignment\n   --> $DIR/assignment-expected-bool.rs:31:20\n    |\n LL |     let _: usize = 0 = 0;\n-   |                    ^^^^^ left-hand of expression not valid\n+   |                    -^^^^\n+   |                    |\n+   |                    cannot assign to this expression\n \n error[E0308]: mismatched types\n   --> $DIR/assignment-expected-bool.rs:31:20"}, {"sha": "8da7b32b47b14ca21f015c09dc69251041aea895", "filename": "src/test/ui/type/type-check/assignment-in-if.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-in-if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7bfdbe68147f2ea8ca4870270643180bef76e02/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-in-if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-in-if.rs?ref=b7bfdbe68147f2ea8ca4870270643180bef76e02", "patch": "@@ -26,7 +26,7 @@ fn main() {\n         //~^ ERROR mismatched types\n         println!(\"{}\", x);\n     }\n-    // \"invalid left-hand side expression\" error is suppresed\n+    // \"invalid left-hand side of assignment\" error is suppresed\n     if 3 = x {\n         //~^ ERROR mismatched types\n         println!(\"{}\", x);"}]}