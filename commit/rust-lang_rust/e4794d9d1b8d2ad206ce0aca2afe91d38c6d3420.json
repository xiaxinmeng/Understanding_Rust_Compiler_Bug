{"sha": "e4794d9d1b8d2ad206ce0aca2afe91d38c6d3420", "node_id": "C_kwDOAAsO6NoAKGU0Nzk0ZDlkMWI4ZDJhZDIwNmNlMGFjYTJhZmU5MWQzOGM2ZDM0MjA", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-01-27T15:46:59Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-02-02T15:40:12Z"}, "message": "Undo a change that is now unnecessary", "tree": {"sha": "0eb7dda7add412433ef562e1a1bc40510d47e240", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0eb7dda7add412433ef562e1a1bc40510d47e240"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4794d9d1b8d2ad206ce0aca2afe91d38c6d3420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4794d9d1b8d2ad206ce0aca2afe91d38c6d3420", "html_url": "https://github.com/rust-lang/rust/commit/e4794d9d1b8d2ad206ce0aca2afe91d38c6d3420", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4794d9d1b8d2ad206ce0aca2afe91d38c6d3420/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5648981108e50cf706d146ad9e1b35742102a27", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5648981108e50cf706d146ad9e1b35742102a27", "html_url": "https://github.com/rust-lang/rust/commit/c5648981108e50cf706d146ad9e1b35742102a27"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "85132317824076160bf8b538e3d2f0ab582625fc", "filename": "compiler/rustc_typeck/src/check/fallback.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4794d9d1b8d2ad206ce0aca2afe91d38c6d3420/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffallback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4794d9d1b8d2ad206ce0aca2afe91d38c6d3420/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffallback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffallback.rs?ref=e4794d9d1b8d2ad206ce0aca2afe91d38c6d3420", "patch": "@@ -218,7 +218,7 @@ impl<'tcx> FnCtxt<'_, 'tcx> {\n             .diverging_type_vars\n             .borrow()\n             .iter()\n-            .map(|(&ty, _)| self.infcx.shallow_resolve(ty))\n+            .map(|&ty| self.infcx.shallow_resolve(ty))\n             .filter_map(|ty| ty.ty_vid())\n             .map(|vid| self.infcx.root_var(vid))\n             .collect();"}, {"sha": "e60893a658b3dc31b1211ebca0e5f1d9dda7de9d", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4794d9d1b8d2ad206ce0aca2afe91d38c6d3420/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4794d9d1b8d2ad206ce0aca2afe91d38c6d3420/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs?ref=e4794d9d1b8d2ad206ce0aca2afe91d38c6d3420", "patch": "@@ -274,7 +274,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         for a in &adj {\n             if let Adjust::NeverToAny = a.kind {\n                 if a.target.is_ty_var() {\n-                    self.diverging_type_vars.borrow_mut().insert(a.target, expr.span);\n+                    self.diverging_type_vars.borrow_mut().insert(a.target);\n                     debug!(\"apply_adjustments: adding `{:?}` as diverging type var\", a.target);\n                 }\n             }"}, {"sha": "b775f24f8efd85f506b0b10cb01e720d0716873e", "filename": "compiler/rustc_typeck/src/check/inherited.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e4794d9d1b8d2ad206ce0aca2afe91d38c6d3420/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Finherited.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4794d9d1b8d2ad206ce0aca2afe91d38c6d3420/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Finherited.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Finherited.rs?ref=e4794d9d1b8d2ad206ce0aca2afe91d38c6d3420", "patch": "@@ -1,7 +1,7 @@\n use super::callee::DeferredCallResolution;\n use super::MaybeInProgressTables;\n \n-use rustc_data_structures::fx::FxHashMap;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefIdMap, LocalDefId};\n use rustc_hir::HirIdMap;\n@@ -58,7 +58,7 @@ pub struct Inherited<'a, 'tcx> {\n     /// Whenever we introduce an adjustment from `!` into a type variable,\n     /// we record that type variable here. This is later used to inform\n     /// fallback. See the `fallback` module for details.\n-    pub(super) diverging_type_vars: RefCell<FxHashMap<Ty<'tcx>, Span>>,\n+    pub(super) diverging_type_vars: RefCell<FxHashSet<Ty<'tcx>>>,\n }\n \n impl<'a, 'tcx> Deref for Inherited<'a, 'tcx> {"}]}