{"sha": "90a7b6041319085634666d1ca1a28d79bd7ba6cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwYTdiNjA0MTMxOTA4NTYzNDY2NmQxY2ExYTI4ZDc5YmQ3YmE2Y2Q=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-08-08T12:33:34Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-08-08T14:21:59Z"}, "message": "Use snippet_with_macro_callsite suggested by flip1995", "tree": {"sha": "72cd855c34841c02acb64bbe04aaf75ff70168a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72cd855c34841c02acb64bbe04aaf75ff70168a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90a7b6041319085634666d1ca1a28d79bd7ba6cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90a7b6041319085634666d1ca1a28d79bd7ba6cd", "html_url": "https://github.com/rust-lang/rust/commit/90a7b6041319085634666d1ca1a28d79bd7ba6cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90a7b6041319085634666d1ca1a28d79bd7ba6cd/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0487b58f9afc249e850dc1bf2c8ae6d660237244", "url": "https://api.github.com/repos/rust-lang/rust/commits/0487b58f9afc249e850dc1bf2c8ae6d660237244", "html_url": "https://github.com/rust-lang/rust/commit/0487b58f9afc249e850dc1bf2c8ae6d660237244"}], "stats": {"total": 21, "additions": 6, "deletions": 15}, "files": [{"sha": "7eba331ae0f326bdaef8bba3291200f957c5e0e2", "filename": "clippy_lints/src/try_err.rs", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/90a7b6041319085634666d1ca1a28d79bd7ba6cd/clippy_lints%2Fsrc%2Ftry_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90a7b6041319085634666d1ca1a28d79bd7ba6cd/clippy_lints%2Fsrc%2Ftry_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftry_err.rs?ref=90a7b6041319085634666d1ca1a28d79bd7ba6cd", "patch": "@@ -1,11 +1,10 @@\n-use crate::utils::{in_macro_or_desugar, match_qpath, paths, snippet, span_lint_and_sugg};\n+use crate::utils::{in_macro_or_desugar, match_qpath, paths, snippet, snippet_with_macro_callsite, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty::Ty;\n use rustc::{declare_lint_pass, declare_tool_lint};\n use rustc_errors::Applicability;\n-use syntax::source_map::Span;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for usages of `Err(x)?`.\n@@ -68,15 +67,15 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TryErr {\n \n             then {\n                 let err_type = cx.tables.expr_ty(err_arg);\n-                let span = if in_macro_or_desugar(err_arg.span) {\n-                    span_to_outer_expn(err_arg.span)\n+                let origin_snippet = if in_macro_or_desugar(err_arg.span) {\n+                    snippet_with_macro_callsite(cx, err_arg.span, \"_\")\n                 } else {\n-                    err_arg.span\n+                    snippet(cx, err_arg.span, \"_\")\n                 };\n                 let suggestion = if err_type == return_type {\n-                    format!(\"return Err({})\", snippet(cx, span, \"_\"))\n+                    format!(\"return Err({})\", origin_snippet)\n                 } else {\n-                    format!(\"return Err({}.into())\", snippet(cx, span, \"_\"))\n+                    format!(\"return Err({}.into())\", origin_snippet)\n                 };\n \n                 span_lint_and_sugg(\n@@ -93,14 +92,6 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TryErr {\n     }\n }\n \n-fn span_to_outer_expn(span: Span) -> Span {\n-    let mut span = span;\n-    while let Some(expr) = span.ctxt().outer_expn_info() {\n-        span = expr.call_site;\n-    }\n-    span\n-}\n-\n // In order to determine whether to suggest `.into()` or not, we need to find the error type the\n // function returns. To do that, we look for the From::from call (see tree above), and capture\n // its output type."}]}