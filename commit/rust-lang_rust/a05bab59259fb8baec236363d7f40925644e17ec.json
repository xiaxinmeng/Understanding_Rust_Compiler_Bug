{"sha": "a05bab59259fb8baec236363d7f40925644e17ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwNWJhYjU5MjU5ZmI4YmFlYzIzNjM2M2Q3ZjQwOTI1NjQ0ZTE3ZWM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-11T09:36:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-11T09:36:31Z"}, "message": "Rollup merge of #69891 - Centril:fix-69875, r=varkor\n\nExhaustiveness checking, `Matrix::push`: recursively expand or-patterns\n\n> There's an implicit invariant that there should be no or-patterns directly in the first column of the matrix, but this invariant is broken exactly when an or-pattern has a child that is itself an or-pattern.\n\nHere we preserve this broken invariant by recursively expanding `PatKind::Or`s in `Matrix::push`.\nFixes https://github.com/rust-lang/rust/issues/69875.\n\nr? @varkor\ncc @Nadrieril\ncc https://github.com/rust-lang/rust/issues/54883", "tree": {"sha": "f75c028fcd2ffc05672003db33bb2fae66548181", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f75c028fcd2ffc05672003db33bb2fae66548181"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a05bab59259fb8baec236363d7f40925644e17ec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeaLEfCRBK7hj4Ov3rIwAAdHIIABtwPOsVYAjEWbehZIp4NErR\ncGUyjwlmuuOCngGr5d/OpO/duwcls5F4E/1cZxu5NyYcb04t+6wVq38I3gbgN6YP\nTleMoCAmFmGjdIKC1PkVKufgCezKgNEu5mhwOPC214sBcBqVcTwozORAszPXR39U\nPVznR/H6qPKPs4PeSMDAATd/ex6Jfelpu/OLedjkILAsAK1pAOTyQcSFIacieX+N\n7NzmicU+fDSQfff9T1YuRqZmrGzQa31W4P9cVzsccCKw451ORaal+C+fHXRzfKFQ\nSP8zv79v9zdIzXgRLP6fLnuACyf4FrCw+foDpBDoZOwIN1cUUVKo3gRw+wnRJOU=\n=6tnQ\n-----END PGP SIGNATURE-----\n", "payload": "tree f75c028fcd2ffc05672003db33bb2fae66548181\nparent 62e3daee3f0f239625de5c7fe54d38e624a3eaa5\nparent 4d16c217b8074784b1faad07f5a284e4a6999b53\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1583919391 +0100\ncommitter GitHub <noreply@github.com> 1583919391 +0100\n\nRollup merge of #69891 - Centril:fix-69875, r=varkor\n\nExhaustiveness checking, `Matrix::push`: recursively expand or-patterns\n\n> There's an implicit invariant that there should be no or-patterns directly in the first column of the matrix, but this invariant is broken exactly when an or-pattern has a child that is itself an or-pattern.\n\nHere we preserve this broken invariant by recursively expanding `PatKind::Or`s in `Matrix::push`.\nFixes https://github.com/rust-lang/rust/issues/69875.\n\nr? @varkor\ncc @Nadrieril\ncc https://github.com/rust-lang/rust/issues/54883\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a05bab59259fb8baec236363d7f40925644e17ec", "html_url": "https://github.com/rust-lang/rust/commit/a05bab59259fb8baec236363d7f40925644e17ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a05bab59259fb8baec236363d7f40925644e17ec/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62e3daee3f0f239625de5c7fe54d38e624a3eaa5", "url": "https://api.github.com/repos/rust-lang/rust/commits/62e3daee3f0f239625de5c7fe54d38e624a3eaa5", "html_url": "https://github.com/rust-lang/rust/commit/62e3daee3f0f239625de5c7fe54d38e624a3eaa5"}, {"sha": "4d16c217b8074784b1faad07f5a284e4a6999b53", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d16c217b8074784b1faad07f5a284e4a6999b53", "html_url": "https://github.com/rust-lang/rust/commit/4d16c217b8074784b1faad07f5a284e4a6999b53"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "37ad5f5ea4e382a3ff804baf36812670ab4652ef", "filename": "src/librustc_mir_build/hair/pattern/_match.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a05bab59259fb8baec236363d7f40925644e17ec/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a05bab59259fb8baec236363d7f40925644e17ec/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs?ref=a05bab59259fb8baec236363d7f40925644e17ec", "patch": "@@ -480,7 +480,11 @@ impl<'p, 'tcx> Matrix<'p, 'tcx> {\n     /// Pushes a new row to the matrix. If the row starts with an or-pattern, this expands it.\n     crate fn push(&mut self, row: PatStack<'p, 'tcx>) {\n         if let Some(rows) = row.expand_or_pat() {\n-            self.0.extend(rows);\n+            for row in rows {\n+                // We recursively expand the or-patterns of the new rows.\n+                // This is necessary as we might have `0 | (1 | 2)` or e.g., `x @ 0 | x @ (1 | 2)`.\n+                self.push(row)\n+            }\n         } else {\n             self.0.push(row);\n         }"}, {"sha": "59533cefea64c8caf97c259725fd31478432b3ae", "filename": "src/test/ui/or-patterns/issue-69875-should-have-been-expanded-earlier-non-exhaustive.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a05bab59259fb8baec236363d7f40925644e17ec/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier-non-exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a05bab59259fb8baec236363d7f40925644e17ec/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier-non-exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier-non-exhaustive.rs?ref=a05bab59259fb8baec236363d7f40925644e17ec", "patch": "@@ -0,0 +1,9 @@\n+#![feature(or_patterns)]\n+\n+fn main() {\n+    let 0 | (1 | 2) = 0; //~ ERROR refutable pattern in local binding\n+    match 0 {\n+        //~^ ERROR non-exhaustive patterns\n+        0 | (1 | 2) => {}\n+    }\n+}"}, {"sha": "58286e87869a421e8dc720781effa0aae5a644b7", "filename": "src/test/ui/or-patterns/issue-69875-should-have-been-expanded-earlier-non-exhaustive.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a05bab59259fb8baec236363d7f40925644e17ec/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier-non-exhaustive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a05bab59259fb8baec236363d7f40925644e17ec/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier-non-exhaustive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier-non-exhaustive.stderr?ref=a05bab59259fb8baec236363d7f40925644e17ec", "patch": "@@ -0,0 +1,25 @@\n+error[E0005]: refutable pattern in local binding: `std::i32::MIN..=-1i32` and `3i32..=std::i32::MAX` not covered\n+  --> $DIR/issue-69875-should-have-been-expanded-earlier-non-exhaustive.rs:4:9\n+   |\n+LL |     let 0 | (1 | 2) = 0;\n+   |         ^^^^^^^^^^^ patterns `std::i32::MIN..=-1i32` and `3i32..=std::i32::MAX` not covered\n+   |\n+   = note: `let` bindings require an \"irrefutable pattern\", like a `struct` or an `enum` with only one variant\n+   = note: for more information, visit https://doc.rust-lang.org/book/ch18-02-refutability.html\n+help: you might want to use `if let` to ignore the variant that isn't matched\n+   |\n+LL |     if let 0 | (1 | 2) = 0 { /* */ }\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0004]: non-exhaustive patterns: `std::i32::MIN..=-1i32` and `3i32..=std::i32::MAX` not covered\n+  --> $DIR/issue-69875-should-have-been-expanded-earlier-non-exhaustive.rs:5:11\n+   |\n+LL |     match 0 {\n+   |           ^ patterns `std::i32::MIN..=-1i32` and `3i32..=std::i32::MAX` not covered\n+   |\n+   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0004, E0005.\n+For more information about an error, try `rustc --explain E0004`."}, {"sha": "1de563dedbf18b6c6822d72cf4b7383b9623aa60", "filename": "src/test/ui/or-patterns/issue-69875-should-have-been-expanded-earlier.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a05bab59259fb8baec236363d7f40925644e17ec/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a05bab59259fb8baec236363d7f40925644e17ec/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier.rs?ref=a05bab59259fb8baec236363d7f40925644e17ec", "patch": "@@ -0,0 +1,9 @@\n+// check-pass\n+\n+#![feature(or_patterns)]\n+\n+fn main() {\n+    let 0 | (1 | _) = 0;\n+    if let 0 | (1 | 2) = 0 {}\n+    if let x @ 0 | x @ (1 | 2) = 0 {}\n+}"}]}