{"sha": "d234e131b8651ccf4bf8df05c9182e1085fa48fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMzRlMTMxYjg2NTFjY2Y0YmY4ZGYwNWM5MTgyZTEwODVmYTQ4ZmE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-25T04:53:21Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-25T04:53:21Z"}, "message": "check_pat_ref: use pattern_cause", "tree": {"sha": "ff023673232d510bbd58054457c983912ee7c4e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff023673232d510bbd58054457c983912ee7c4e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d234e131b8651ccf4bf8df05c9182e1085fa48fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d234e131b8651ccf4bf8df05c9182e1085fa48fa", "html_url": "https://github.com/rust-lang/rust/commit/d234e131b8651ccf4bf8df05c9182e1085fa48fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d234e131b8651ccf4bf8df05c9182e1085fa48fa/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1de8f16ca6a4715fcdc3720c76d8416e3d6315d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d", "html_url": "https://github.com/rust-lang/rust/commit/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "1df7c64f2c6f0e233475d100aff5a003600b5ab5", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d234e131b8651ccf4bf8df05c9182e1085fa48fa/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d234e131b8651ccf4bf8df05c9182e1085fa48fa/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=d234e131b8651ccf4bf8df05c9182e1085fa48fa", "patch": "@@ -1222,7 +1222,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     });\n                     let rptr_ty = self.new_ref_ty(pat.span, mutbl, inner_ty);\n                     debug!(\"check_pat_ref: demanding {:?} = {:?}\", expected, rptr_ty);\n-                    let err = self.demand_eqtype_diag(pat.span, expected, rptr_ty);\n+                    let err = self.demand_eqtype_pat_diag(pat.span, expected, rptr_ty, ti);\n \n                     // Look for a case like `fn foo(&foo: u32)` and suggest\n                     // `fn foo(foo: &u32)`"}, {"sha": "1382cf643a17331cd7c18d2a7f8f619da16b3a2c", "filename": "src/test/ui/destructure-trait-ref.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d234e131b8651ccf4bf8df05c9182e1085fa48fa/src%2Ftest%2Fui%2Fdestructure-trait-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d234e131b8651ccf4bf8df05c9182e1085fa48fa/src%2Ftest%2Fui%2Fdestructure-trait-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructure-trait-ref.stderr?ref=d234e131b8651ccf4bf8df05c9182e1085fa48fa", "patch": "@@ -20,7 +20,7 @@ error[E0308]: mismatched types\n   --> $DIR/destructure-trait-ref.rs:32:10\n    |\n LL |     let &&x = &1isize as &dyn T;\n-   |          ^^\n+   |          ^^   ----------------- this expression has type `&dyn T`\n    |          |\n    |          expected trait object `dyn T`, found reference\n    |          help: you can probably remove the explicit borrow: `x`\n@@ -32,7 +32,7 @@ error[E0308]: mismatched types\n   --> $DIR/destructure-trait-ref.rs:36:11\n    |\n LL |     let &&&x = &(&1isize as &dyn T);\n-   |           ^^\n+   |           ^^   -------------------- this expression has type `&&dyn T`\n    |           |\n    |           expected trait object `dyn T`, found reference\n    |           help: you can probably remove the explicit borrow: `x`"}, {"sha": "c81d6dcaf02173df0c0cfec556685c5da3b4cf7b", "filename": "src/test/ui/issues/issue-5100.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d234e131b8651ccf4bf8df05c9182e1085fa48fa/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d234e131b8651ccf4bf8df05c9182e1085fa48fa/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr?ref=d234e131b8651ccf4bf8df05c9182e1085fa48fa", "patch": "@@ -45,6 +45,8 @@ LL |         box (true, false) => ()\n error[E0308]: mismatched types\n   --> $DIR/issue-5100.rs:40:9\n    |\n+LL |     match (true, false) {\n+   |           ------------- this expression has type `(bool, bool)`\n LL |         &(true, false) => ()\n    |         ^^^^^^^^^^^^^^ expected tuple, found reference\n    |"}, {"sha": "c2bce305877b4048f3ead8d07f7fcb217917cb4c", "filename": "src/test/ui/mismatched_types/issue-38371.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d234e131b8651ccf4bf8df05c9182e1085fa48fa/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-38371.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d234e131b8651ccf4bf8df05c9182e1085fa48fa/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-38371.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-38371.stderr?ref=d234e131b8651ccf4bf8df05c9182e1085fa48fa", "patch": "@@ -3,7 +3,8 @@ error[E0308]: mismatched types\n    |\n LL | fn foo(&foo: Foo) {\n    |        ^^^^------\n-   |        |\n+   |        |     |\n+   |        |     expected due to this\n    |        expected struct `Foo`, found reference\n    |        help: did you mean `foo`: `&Foo`\n    |\n@@ -14,7 +15,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-38371.rs:18:9\n    |\n LL | fn agh(&&bar: &u32) {\n-   |         ^^^^\n+   |         ^^^^  ---- expected due to this\n    |         |\n    |         expected `u32`, found reference\n    |         help: you can probably remove the explicit borrow: `bar`\n@@ -26,7 +27,9 @@ error[E0308]: mismatched types\n   --> $DIR/issue-38371.rs:21:8\n    |\n LL | fn bgh(&&bar: u32) {\n-   |        ^^^^^ expected `u32`, found reference\n+   |        ^^^^^  --- expected due to this\n+   |        |\n+   |        expected `u32`, found reference\n    |\n    = note:   expected type `u32`\n            found reference `&_`"}, {"sha": "cad1cef5155d5f1ba54e81808a613ebbaa467129", "filename": "src/test/ui/mut/mut-pattern-mismatched.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d234e131b8651ccf4bf8df05c9182e1085fa48fa/src%2Ftest%2Fui%2Fmut%2Fmut-pattern-mismatched.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d234e131b8651ccf4bf8df05c9182e1085fa48fa/src%2Ftest%2Fui%2Fmut%2Fmut-pattern-mismatched.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmut%2Fmut-pattern-mismatched.stderr?ref=d234e131b8651ccf4bf8df05c9182e1085fa48fa", "patch": "@@ -3,6 +3,9 @@ error[E0308]: mismatched types\n    |\n LL |      let &_\n    |          ^^ types differ in mutability\n+...\n+LL |         = foo;\n+   |           --- this expression has type `&mut {integer}`\n    |\n    = note: expected mutable reference `&mut {integer}`\n                       found reference `&_`\n@@ -12,6 +15,9 @@ error[E0308]: mismatched types\n    |\n LL |     let &mut _\n    |         ^^^^^^ types differ in mutability\n+...\n+LL |          = bar;\n+   |            --- this expression has type `&{integer}`\n    |\n    = note:      expected reference `&{integer}`\n            found mutable reference `&mut _`"}, {"sha": "559a2d29551d32295bc3e55c642ca7c1fb17cfb2", "filename": "src/test/ui/suggestions/match-ergonomics.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d234e131b8651ccf4bf8df05c9182e1085fa48fa/src%2Ftest%2Fui%2Fsuggestions%2Fmatch-ergonomics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d234e131b8651ccf4bf8df05c9182e1085fa48fa/src%2Ftest%2Fui%2Fsuggestions%2Fmatch-ergonomics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmatch-ergonomics.stderr?ref=d234e131b8651ccf4bf8df05c9182e1085fa48fa", "patch": "@@ -1,6 +1,8 @@\n error[E0308]: mismatched types\n   --> $DIR/match-ergonomics.rs:4:10\n    |\n+LL |     match &x[..] {\n+   |           ------ this expression has type `&[i32]`\n LL |         [&v] => {},\n    |          ^^\n    |          |\n@@ -25,6 +27,8 @@ LL |         [v] => {},\n error[E0308]: mismatched types\n   --> $DIR/match-ergonomics.rs:29:9\n    |\n+LL |     match y {\n+   |           - this expression has type `i32`\n LL |         &v => {},\n    |         ^^\n    |         |\n@@ -38,7 +42,7 @@ error[E0308]: mismatched types\n   --> $DIR/match-ergonomics.rs:40:13\n    |\n LL |     if let [&v] = &x[..] {}\n-   |             ^^\n+   |             ^^    ------ this expression has type `&[i32]`\n    |             |\n    |             expected `i32`, found reference\n    |             help: you can probably remove the explicit borrow: `v`"}]}