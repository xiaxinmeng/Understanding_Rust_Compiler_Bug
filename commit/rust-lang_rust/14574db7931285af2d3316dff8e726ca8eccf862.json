{"sha": "14574db7931285af2d3316dff8e726ca8eccf862", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0NTc0ZGI3OTMxMjg1YWYyZDMzMTZkZmY4ZTcyNmNhOGVjY2Y4NjI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-12T16:54:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-12T16:54:32Z"}, "message": "Rollup merge of #48928 - zackmdavis:span_suggestion_field_day, r=estebank\n\nin which some labels and notes are upgraded to structured suggestions\n\n(Meanwhile, a couple of parse-fail tests are moved to UI tests so that\nthe reader can see the new output, and an existing UI test is given a\nmore evocative name.)\n\nr? @estebank", "tree": {"sha": "c21893274175e3ab05b696cff0ff7cd8817d5bc0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c21893274175e3ab05b696cff0ff7cd8817d5bc0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14574db7931285af2d3316dff8e726ca8eccf862", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaprDICRBK7hj4Ov3rIwAAdHIIAEHB3Lg/umYmpGFPMV3WQbY6\nQaMJcPtizJpfEbtzxtTWocwQdGaFPXZ0+Yk6hDAQToCs/6Ej4nomk0kn3Nsh8Oo1\n+3rH9Z76Cw1j3f/0Pk/Ubkb4kmzQ5VsbOEjPorY/Mp174jIlVmYZf6e2QmKjq6SE\nt/WXq19VrGKHdHOawc4bvZk1a2x8bOySksNAG3KApA6SQWBhsWeuk3Xy5kthpfDY\n1/4TYiZdVwvXCLIruLsnptBoHRurH3+GDlaHVchuRQLm2G8IC7NE31IA9pXooklG\nZwJ775ztiXDyi2BVO60NYPaYmewH/jqPQO7lLlFGNBDg0qC6CfHrgVHO7DoczAY=\n=ONHo\n-----END PGP SIGNATURE-----\n", "payload": "tree c21893274175e3ab05b696cff0ff7cd8817d5bc0\nparent 2d13cc4d79028166f372c14734d991c98e24e517\nparent 9b599856a4b7e375e4e54eb759c250be969f5562\nauthor kennytm <kennytm@gmail.com> 1520873672 +0800\ncommitter GitHub <noreply@github.com> 1520873672 +0800\n\nRollup merge of #48928 - zackmdavis:span_suggestion_field_day, r=estebank\n\nin which some labels and notes are upgraded to structured suggestions\n\n(Meanwhile, a couple of parse-fail tests are moved to UI tests so that\nthe reader can see the new output, and an existing UI test is given a\nmore evocative name.)\n\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14574db7931285af2d3316dff8e726ca8eccf862", "html_url": "https://github.com/rust-lang/rust/commit/14574db7931285af2d3316dff8e726ca8eccf862", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14574db7931285af2d3316dff8e726ca8eccf862/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d13cc4d79028166f372c14734d991c98e24e517", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d13cc4d79028166f372c14734d991c98e24e517", "html_url": "https://github.com/rust-lang/rust/commit/2d13cc4d79028166f372c14734d991c98e24e517"}, {"sha": "9b599856a4b7e375e4e54eb759c250be969f5562", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b599856a4b7e375e4e54eb759c250be969f5562", "html_url": "https://github.com/rust-lang/rust/commit/9b599856a4b7e375e4e54eb759c250be969f5562"}], "stats": {"total": 75, "additions": 46, "deletions": 29}, "files": [{"sha": "1ea1ff1fae24df1a533514a58f67b3a5d2dfabdd", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/14574db7931285af2d3316dff8e726ca8eccf862/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14574db7931285af2d3316dff8e726ca8eccf862/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=14574db7931285af2d3316dff8e726ca8eccf862", "patch": "@@ -3096,10 +3096,10 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                             };\n                     }\n                     ty::TyRawPtr(..) => {\n-                        err.note(&format!(\"`{0}` is a native pointer; perhaps you need to deref \\\n-                                           with `(*{0}).{1}`\",\n-                                          self.tcx.hir.node_to_pretty_string(base.id),\n-                                          field.node));\n+                        let base = self.tcx.hir.node_to_pretty_string(base.id);\n+                        let msg = format!(\"`{}` is a native pointer; try dereferencing it\", base);\n+                        let suggestion = format!(\"(*{}).{}\", base, field.node);\n+                        err.span_suggestion(field.span, &msg, suggestion);\n                     }\n                     _ => {}\n                 }"}, {"sha": "bd0ca0e670487edcd466dac06fe47c22e0ae5e79", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/14574db7931285af2d3316dff8e726ca8eccf862/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14574db7931285af2d3316dff8e726ca8eccf862/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=14574db7931285af2d3316dff8e726ca8eccf862", "patch": "@@ -2831,9 +2831,10 @@ impl<'a> Parser<'a> {\n                 let (span, e) = self.interpolated_or_expr_span(e)?;\n                 let span_of_tilde = lo;\n                 let mut err = self.diagnostic().struct_span_err(span_of_tilde,\n-                        \"`~` can not be used as a unary operator\");\n-                err.span_label(span_of_tilde, \"did you mean `!`?\");\n-                err.help(\"use `!` instead of `~` if you meant to perform bitwise negation\");\n+                        \"`~` cannot be used as a unary operator\");\n+                err.span_suggestion_short(span_of_tilde,\n+                                          \"use `!` to perform bitwise negation\",\n+                                          \"!\".to_owned());\n                 err.emit();\n                 (lo.to(span), self.mk_unary(UnOp::Not, e))\n             }\n@@ -3389,7 +3390,7 @@ impl<'a> Parser<'a> {\n                                                None)?;\n         if let Err(mut e) = self.expect(&token::OpenDelim(token::Brace)) {\n             if self.token == token::Token::Semi {\n-                e.span_note(match_span, \"did you mean to remove this `match` keyword?\");\n+                e.span_suggestion_short(match_span, \"try removing this `match`\", \"\".to_owned());\n             }\n             return Err(e)\n         }\n@@ -5361,7 +5362,9 @@ impl<'a> Parser<'a> {\n                 if is_macro_rules {\n                     let mut err = self.diagnostic()\n                         .struct_span_err(sp, \"can't qualify macro_rules invocation with `pub`\");\n-                    err.help(\"did you mean #[macro_export]?\");\n+                    err.span_suggestion(sp,\n+                                        \"try exporting the macro\",\n+                                        \"#[macro_export]\".to_owned());\n                     Err(err)\n                 } else {\n                     let mut err = self.diagnostic()"}, {"sha": "e8fd248011cb85398e707b8dcc0f97328f19c54e", "filename": "src/test/ui/did_you_mean/issue-41679-tilde-bitwise-negation-attempt.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14574db7931285af2d3316dff8e726ca8eccf862/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679-tilde-bitwise-negation-attempt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14574db7931285af2d3316dff8e726ca8eccf862/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679-tilde-bitwise-negation-attempt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679-tilde-bitwise-negation-attempt.rs?ref=14574db7931285af2d3316dff8e726ca8eccf862", "patch": "@@ -9,5 +9,5 @@\n // except according to those terms.\n \n fn main() {\n-    let x = ~1; //~ ERROR can not be used as a unary operator\n+    let x = ~1; //~ ERROR cannot be used as a unary operator\n }", "previous_filename": "src/test/ui/did_you_mean/issue-41679.rs"}, {"sha": "f13f15f63771da929f6d7b087cb838fa64ae942b", "filename": "src/test/ui/did_you_mean/issue-41679-tilde-bitwise-negation-attempt.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/14574db7931285af2d3316dff8e726ca8eccf862/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679-tilde-bitwise-negation-attempt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/14574db7931285af2d3316dff8e726ca8eccf862/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679-tilde-bitwise-negation-attempt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679-tilde-bitwise-negation-attempt.stderr?ref=14574db7931285af2d3316dff8e726ca8eccf862", "patch": "@@ -0,0 +1,8 @@\n+error: `~` cannot be used as a unary operator\n+  --> $DIR/issue-41679-tilde-bitwise-negation-attempt.rs:12:13\n+   |\n+LL |     let x = ~1; //~ ERROR cannot be used as a unary operator\n+   |             ^ help: use `!` to perform bitwise negation\n+\n+error: aborting due to previous error\n+"}, {"sha": "c17812fc0cb9dc5719423ac82d05f8dd10c0e107", "filename": "src/test/ui/did_you_mean/issue-41679.stderr", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2d13cc4d79028166f372c14734d991c98e24e517/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2d13cc4d79028166f372c14734d991c98e24e517/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679.stderr?ref=2d13cc4d79028166f372c14734d991c98e24e517", "patch": "@@ -1,10 +0,0 @@\n-error: `~` can not be used as a unary operator\n-  --> $DIR/issue-41679.rs:12:13\n-   |\n-LL |     let x = ~1; //~ ERROR can not be used as a unary operator\n-   |             ^ did you mean `!`?\n-   |\n-   = help: use `!` instead of `~` if you meant to perform bitwise negation\n-\n-error: aborting due to previous error\n-"}, {"sha": "3c88608697aadb7b1302ba7f10ef6a73154f63e6", "filename": "src/test/ui/did_you_mean/match-refactor-to-expr.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14574db7931285af2d3316dff8e726ca8eccf862/src%2Ftest%2Fui%2Fdid_you_mean%2Fmatch-refactor-to-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14574db7931285af2d3316dff8e726ca8eccf862/src%2Ftest%2Fui%2Fdid_you_mean%2Fmatch-refactor-to-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fmatch-refactor-to-expr.rs?ref=14574db7931285af2d3316dff8e726ca8eccf862", "patch": "@@ -12,7 +12,7 @@\n \n fn main() {\n     let foo =\n-        match //~ NOTE did you mean to remove this `match` keyword?\n+        match\n         Some(4).unwrap_or_else(5)\n         //~^ NOTE expected one of `.`, `?`, `{`, or an operator here\n         ; //~ NOTE unexpected token", "previous_filename": "src/test/parse-fail/match-refactor-to-expr.rs"}, {"sha": "ecca781684cec16190056242678e66a03f3d9a97", "filename": "src/test/ui/did_you_mean/match-refactor-to-expr.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/14574db7931285af2d3316dff8e726ca8eccf862/src%2Ftest%2Fui%2Fdid_you_mean%2Fmatch-refactor-to-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/14574db7931285af2d3316dff8e726ca8eccf862/src%2Ftest%2Fui%2Fdid_you_mean%2Fmatch-refactor-to-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fmatch-refactor-to-expr.stderr?ref=14574db7931285af2d3316dff8e726ca8eccf862", "patch": "@@ -0,0 +1,13 @@\n+error: expected one of `.`, `?`, `{`, or an operator, found `;`\n+  --> $DIR/match-refactor-to-expr.rs:18:9\n+   |\n+LL |         match\n+   |         ----- help: try removing this `match`\n+LL |         Some(4).unwrap_or_else(5)\n+   |                                  - expected one of `.`, `?`, `{`, or an operator here\n+LL |         //~^ NOTE expected one of `.`, `?`, `{`, or an operator here\n+LL |         ; //~ NOTE unexpected token\n+   |         ^ unexpected token\n+\n+error: aborting due to previous error\n+"}, {"sha": "65a0d642cd7d19c6042946f7a84a473f83431276", "filename": "src/test/ui/did_you_mean/pub-macro-rules.rs", "status": "renamed", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/14574db7931285af2d3316dff8e726ca8eccf862/src%2Ftest%2Fui%2Fdid_you_mean%2Fpub-macro-rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14574db7931285af2d3316dff8e726ca8eccf862/src%2Ftest%2Fui%2Fdid_you_mean%2Fpub-macro-rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fpub-macro-rules.rs?ref=14574db7931285af2d3316dff8e726ca8eccf862", "patch": "@@ -9,8 +9,7 @@\n // except according to those terms.\n \n #[macro_use] mod bleh {\n-    pub macro_rules! foo { //~ ERROR can't qualify macro_rules invocation with `pub`\n-    //~^ HELP did you mean #[macro_export]?\n+    pub macro_rules! foo { //~ ERROR can't qualify macro_rules invocation\n         ($n:ident) => (\n             fn $n () -> i32 {\n                 1", "previous_filename": "src/test/parse-fail/pub-macro-rules.rs"}, {"sha": "dfeab75525ba3c2189a9e745942bd0f5380c7cb0", "filename": "src/test/ui/did_you_mean/pub-macro-rules.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/14574db7931285af2d3316dff8e726ca8eccf862/src%2Ftest%2Fui%2Fdid_you_mean%2Fpub-macro-rules.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/14574db7931285af2d3316dff8e726ca8eccf862/src%2Ftest%2Fui%2Fdid_you_mean%2Fpub-macro-rules.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fpub-macro-rules.stderr?ref=14574db7931285af2d3316dff8e726ca8eccf862", "patch": "@@ -0,0 +1,8 @@\n+error: can't qualify macro_rules invocation with `pub`\n+  --> $DIR/pub-macro-rules.rs:12:5\n+   |\n+LL |     pub macro_rules! foo { //~ ERROR can't qualify macro_rules invocation\n+   |     ^^^ help: try exporting the macro: `#[macro_export]`\n+\n+error: aborting due to previous error\n+"}, {"sha": "268c3cd6d2afd8325c0d62c7205dae555dda9ade", "filename": "src/test/ui/issue-11004.stderr", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/14574db7931285af2d3316dff8e726ca8eccf862/src%2Ftest%2Fui%2Fissue-11004.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/14574db7931285af2d3316dff8e726ca8eccf862/src%2Ftest%2Fui%2Fissue-11004.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-11004.stderr?ref=14574db7931285af2d3316dff8e726ca8eccf862", "patch": "@@ -2,17 +2,13 @@ error[E0609]: no field `x` on type `*mut A`\n   --> $DIR/issue-11004.rs:17:21\n    |\n LL |     let x : i32 = n.x; //~ no field `x` on type `*mut A`\n-   |                     ^\n-   |\n-   = note: `n` is a native pointer; perhaps you need to deref with `(*n).x`\n+   |                     ^ help: `n` is a native pointer; try dereferencing it: `(*n).x`\n \n error[E0609]: no field `y` on type `*mut A`\n   --> $DIR/issue-11004.rs:18:21\n    |\n LL |     let y : f64 = n.y; //~ no field `y` on type `*mut A`\n-   |                     ^\n-   |\n-   = note: `n` is a native pointer; perhaps you need to deref with `(*n).y`\n+   |                     ^ help: `n` is a native pointer; try dereferencing it: `(*n).y`\n \n error: aborting due to 2 previous errors\n "}]}