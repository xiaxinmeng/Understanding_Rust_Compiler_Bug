{"sha": "2e12b220be89a9253bb43ee19cb6de755add9c5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlMTJiMjIwYmU4OWE5MjUzYmI0M2VlMTljYjZkZTc1NWFkZDljNWY=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-21T02:15:13Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-21T02:15:13Z"}, "message": "Stop unintentionally clearing source relocations when copying.", "tree": {"sha": "82acc0e1dbc6758a6f0626c412a0436d499cb88e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82acc0e1dbc6758a6f0626c412a0436d499cb88e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e12b220be89a9253bb43ee19cb6de755add9c5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e12b220be89a9253bb43ee19cb6de755add9c5f", "html_url": "https://github.com/rust-lang/rust/commit/2e12b220be89a9253bb43ee19cb6de755add9c5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e12b220be89a9253bb43ee19cb6de755add9c5f/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "493b5f649c3de3fd511a39dd6bcf4ebce8553810", "url": "https://api.github.com/repos/rust-lang/rust/commits/493b5f649c3de3fd511a39dd6bcf4ebce8553810", "html_url": "https://github.com/rust-lang/rust/commit/493b5f649c3de3fd511a39dd6bcf4ebce8553810"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "496c757beafb94de833cd54a881be278b68c8e7f", "filename": "src/memory.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2e12b220be89a9253bb43ee19cb6de755add9c5f/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e12b220be89a9253bb43ee19cb6de755add9c5f/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=2e12b220be89a9253bb43ee19cb6de755add9c5f", "patch": "@@ -106,25 +106,25 @@ impl Memory {\n     }\n \n     pub fn copy(&mut self, src: Pointer, dest: Pointer, size: usize) -> EvalResult<()> {\n-        let (src_bytes, relocations) = {\n+        let (src_bytes, mut relocations) = {\n             let alloc = try!(self.get_mut(src.alloc_id));\n             try!(alloc.check_relocation_edges(src.offset, src.offset + size));\n             let bytes = alloc.bytes[src.offset..src.offset + size].as_mut_ptr();\n \n-            let mut relocations: Vec<(usize, AllocId)> = alloc.relocations\n+            let relocations: Vec<(usize, AllocId)> = alloc.relocations\n                 .range(Included(&src.offset), Excluded(&(src.offset + size)))\n                 .map(|(&k, &v)| (k, v))\n                 .collect();\n \n-            for &mut (ref mut offset, _) in &mut relocations {\n-                alloc.relocations.remove(offset);\n-                *offset += dest.offset;\n-                *offset -= src.offset;\n-            }\n-\n             (bytes, relocations)\n         };\n \n+        // Update relocation offsets for the new positions in the destination allocation.\n+        for &mut (ref mut offset, _) in &mut relocations {\n+            *offset += dest.offset;\n+            *offset -= src.offset;\n+        }\n+\n         let dest_bytes = try!(self.get_bytes_mut(dest, size)).as_mut_ptr();\n \n         // TODO(tsion): Clear the destination range's existing relocations."}]}