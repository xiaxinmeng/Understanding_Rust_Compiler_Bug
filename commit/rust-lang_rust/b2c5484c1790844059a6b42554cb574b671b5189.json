{"sha": "b2c5484c1790844059a6b42554cb574b671b5189", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyYzU0ODRjMTc5MDg0NDA1OWE2YjQyNTU0Y2I1NzRiNjcxYjUxODk=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-01-17T17:57:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-17T17:57:24Z"}, "message": "Rollup merge of #47479 - zackmdavis:and_the_case_of_the_suggested_double-pub, r=estebank\n\nprivate no-mangle lints: only suggest `pub` if it doesn't already exist\n\nFixes #47383 (function or static can be `pub` but unreachable because it's in a private module; adding another `pub` is nonsensical).\n\nr? @estebank", "tree": {"sha": "76aa10a2fc3b0c55b28759415f94be3ddf126bf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76aa10a2fc3b0c55b28759415f94be3ddf126bf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2c5484c1790844059a6b42554cb574b671b5189", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2c5484c1790844059a6b42554cb574b671b5189", "html_url": "https://github.com/rust-lang/rust/commit/b2c5484c1790844059a6b42554cb574b671b5189", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2c5484c1790844059a6b42554cb574b671b5189/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be916ce584f508ad03e507dac8f65db06304cccb", "url": "https://api.github.com/repos/rust-lang/rust/commits/be916ce584f508ad03e507dac8f65db06304cccb", "html_url": "https://github.com/rust-lang/rust/commit/be916ce584f508ad03e507dac8f65db06304cccb"}, {"sha": "661e03383c99c577db3791e0846e165fe5c21510", "url": "https://api.github.com/repos/rust-lang/rust/commits/661e03383c99c577db3791e0846e165fe5c21510", "html_url": "https://github.com/rust-lang/rust/commit/661e03383c99c577db3791e0846e165fe5c21510"}], "stats": {"total": 58, "additions": 42, "deletions": 16}, "files": [{"sha": "de55710bdf3d0bce54d919117777403d9fe3d6cc", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b2c5484c1790844059a6b42554cb574b671b5189/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2c5484c1790844059a6b42554cb574b671b5189/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=b2c5484c1790844059a6b42554cb574b671b5189", "patch": "@@ -1154,9 +1154,11 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for InvalidNoMangleItems {\n                         let msg = \"function is marked #[no_mangle], but not exported\";\n                         let mut err = cx.struct_span_lint(PRIVATE_NO_MANGLE_FNS, it.span, msg);\n                         let insertion_span = it.span.with_hi(it.span.lo());\n-                        err.span_suggestion(insertion_span,\n-                                            \"try making it public\",\n-                                            \"pub \".to_owned());\n+                        if it.vis == hir::Visibility::Inherited {\n+                            err.span_suggestion(insertion_span,\n+                                                \"try making it public\",\n+                                                \"pub \".to_owned());\n+                        }\n                         err.emit();\n                     }\n                     if generics.is_type_parameterized() {\n@@ -1177,9 +1179,11 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for InvalidNoMangleItems {\n                        let msg = \"static is marked #[no_mangle], but not exported\";\n                        let mut err = cx.struct_span_lint(PRIVATE_NO_MANGLE_STATICS, it.span, msg);\n                        let insertion_span = it.span.with_hi(it.span.lo());\n-                       err.span_suggestion(insertion_span,\n-                                           \"try making it public\",\n-                                           \"pub \".to_owned());\n+                       if it.vis == hir::Visibility::Inherited {\n+                           err.span_suggestion(insertion_span,\n+                                               \"try making it public\",\n+                                               \"pub \".to_owned());\n+                       }\n                        err.emit();\n                 }\n             }"}, {"sha": "dfcaede1402da372ac99f6bc1bcd12964503189c", "filename": "src/test/ui/lint/suggestions.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b2c5484c1790844059a6b42554cb574b671b5189/src%2Ftest%2Fui%2Flint%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2c5484c1790844059a6b42554cb574b671b5189/src%2Ftest%2Fui%2Flint%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fsuggestions.rs?ref=b2c5484c1790844059a6b42554cb574b671b5189", "patch": "@@ -24,6 +24,16 @@ pub fn defiant<T>(_t: T) {}\n fn rio_grande() {} // should suggest `pub`\n //~^ WARN function is marked\n \n+mod badlands {\n+    // The private-no-mangle lints shouldn't suggest inserting `pub` when the\n+    // item is already `pub` (but triggered the lint because, e.g., it's in a\n+    // private module). (Issue #47383)\n+    #[no_mangle] pub static DAUNTLESS: bool = true;\n+    //~^ WARN static is marked\n+    #[no_mangle] pub fn val_jean() {}\n+    //~^ WARN function is marked\n+}\n+\n struct Equinox {\n     warp_factor: f32,\n }"}, {"sha": "8b30f552d377140a0d49f171ab67e46685819a8b", "filename": "src/test/ui/lint/suggestions.stderr", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b2c5484c1790844059a6b42554cb574b671b5189/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2c5484c1790844059a6b42554cb574b671b5189/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr?ref=b2c5484c1790844059a6b42554cb574b671b5189", "patch": "@@ -1,7 +1,7 @@\n warning: unnecessary parentheses around assigned value\n-  --> $DIR/suggestions.rs:36:21\n+  --> $DIR/suggestions.rs:46:21\n    |\n-36 |         let mut a = (1); // should suggest no `mut`, no parens\n+46 |         let mut a = (1); // should suggest no `mut`, no parens\n    |                     ^^^ help: remove these parentheses\n    |\n note: lint level defined here\n@@ -11,17 +11,17 @@ note: lint level defined here\n    |                     ^^^^^^^^^^^^^\n \n warning: use of deprecated attribute `no_debug`: the `#[no_debug]` attribute was an experimental feature that has been deprecated due to lack of demand. See https://github.com/rust-lang/rust/issues/29721\n-  --> $DIR/suggestions.rs:31:1\n+  --> $DIR/suggestions.rs:41:1\n    |\n-31 | #[no_debug] // should suggest removal of deprecated attribute\n+41 | #[no_debug] // should suggest removal of deprecated attribute\n    | ^^^^^^^^^^^ help: remove this attribute\n    |\n    = note: #[warn(deprecated)] on by default\n \n warning: variable does not need to be mutable\n-  --> $DIR/suggestions.rs:36:13\n+  --> $DIR/suggestions.rs:46:13\n    |\n-36 |         let mut a = (1); // should suggest no `mut`, no parens\n+46 |         let mut a = (1); // should suggest no `mut`, no parens\n    |             ---^^\n    |             |\n    |             help: remove this `mut`\n@@ -72,18 +72,30 @@ warning: function is marked #[no_mangle], but not exported\n    |\n    = note: #[warn(private_no_mangle_fns)] on by default\n \n+warning: static is marked #[no_mangle], but not exported\n+  --> $DIR/suggestions.rs:31:18\n+   |\n+31 |     #[no_mangle] pub static DAUNTLESS: bool = true;\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+warning: function is marked #[no_mangle], but not exported\n+  --> $DIR/suggestions.rs:33:18\n+   |\n+33 |     #[no_mangle] pub fn val_jean() {}\n+   |                  ^^^^^^^^^^^^^^^^^^^^\n+\n warning: denote infinite loops with `loop { ... }`\n-  --> $DIR/suggestions.rs:34:5\n+  --> $DIR/suggestions.rs:44:5\n    |\n-34 |     while true { // should suggest `loop`\n+44 |     while true { // should suggest `loop`\n    |     ^^^^^^^^^^ help: use `loop`\n    |\n    = note: #[warn(while_true)] on by default\n \n warning: the `warp_factor:` in this pattern is redundant\n-  --> $DIR/suggestions.rs:41:23\n+  --> $DIR/suggestions.rs:51:23\n    |\n-41 |             Equinox { warp_factor: warp_factor } => {} // should suggest shorthand\n+51 |             Equinox { warp_factor: warp_factor } => {} // should suggest shorthand\n    |                       ------------^^^^^^^^^^^^\n    |                       |\n    |                       help: remove this"}]}