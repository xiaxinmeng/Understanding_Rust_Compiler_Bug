{"sha": "c3d6ee9e7b652546b892bc2eac56896a8a39415a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzZDZlZTllN2I2NTI1NDZiODkyYmMyZWFjNTY4OTZhOGEzOTQxNWE=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-06-25T14:27:37Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-06-25T14:27:37Z"}, "message": "Make find_breakable_scope non-mutable", "tree": {"sha": "bc2ff66b33cf1a1684006223b78cd4b58fe3755b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc2ff66b33cf1a1684006223b78cd4b58fe3755b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3d6ee9e7b652546b892bc2eac56896a8a39415a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3d6ee9e7b652546b892bc2eac56896a8a39415a", "html_url": "https://github.com/rust-lang/rust/commit/c3d6ee9e7b652546b892bc2eac56896a8a39415a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3d6ee9e7b652546b892bc2eac56896a8a39415a/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee7e30f14aa8437294aca766440ef1897d1a5703", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee7e30f14aa8437294aca766440ef1897d1a5703", "html_url": "https://github.com/rust-lang/rust/commit/ee7e30f14aa8437294aca766440ef1897d1a5703"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "b9d6486d9174a9117ca38c11d7aed88c4567fb17", "filename": "src/librustc_mir/build/scope.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c3d6ee9e7b652546b892bc2eac56896a8a39415a/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3d6ee9e7b652546b892bc2eac56896a8a39415a/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fscope.rs?ref=c3d6ee9e7b652546b892bc2eac56896a8a39415a", "patch": "@@ -540,12 +540,12 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n     // ==============\n     /// Finds the breakable scope for a given label. This is used for\n     /// resolving `break` and `continue`.\n-    pub fn find_breakable_scope(&mut self,\n+    pub fn find_breakable_scope(&self,\n                            span: Span,\n                            label: region::Scope)\n-                           -> &mut BreakableScope<'tcx> {\n+                           -> &BreakableScope<'tcx> {\n         // find the loop-scope with the correct id\n-        self.breakable_scopes.iter_mut()\n+        self.breakable_scopes.iter()\n             .rev()\n             .filter(|breakable_scope| breakable_scope.region_scope == label)\n             .next()"}]}