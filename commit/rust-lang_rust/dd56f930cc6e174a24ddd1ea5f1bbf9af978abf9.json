{"sha": "dd56f930cc6e174a24ddd1ea5f1bbf9af978abf9", "node_id": "C_kwDOAAsO6NoAKGRkNTZmOTMwY2M2ZTE3NGEyNGRkZDFlYTVmMWJiZjlhZjk3OGFiZjk", "commit": {"author": {"name": "Ziru Niu", "email": "zirconium.n@gmail.com", "date": "2023-05-25T10:37:58Z"}, "committer": {"name": "Ziru Niu", "email": "zirconium.n@gmail.com", "date": "2023-05-25T10:38:38Z"}, "message": "Clarify safety concern of `io::Read::read` is only relevant in unsafe code", "tree": {"sha": "c3df00e5076ecdea408d425676eb369381df5796", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3df00e5076ecdea408d425676eb369381df5796"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd56f930cc6e174a24ddd1ea5f1bbf9af978abf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd56f930cc6e174a24ddd1ea5f1bbf9af978abf9", "html_url": "https://github.com/rust-lang/rust/commit/dd56f930cc6e174a24ddd1ea5f1bbf9af978abf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd56f930cc6e174a24ddd1ea5f1bbf9af978abf9/comments", "author": {"login": "zirconium-n", "id": 20034023, "node_id": "MDQ6VXNlcjIwMDM0MDIz", "avatar_url": "https://avatars.githubusercontent.com/u/20034023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zirconium-n", "html_url": "https://github.com/zirconium-n", "followers_url": "https://api.github.com/users/zirconium-n/followers", "following_url": "https://api.github.com/users/zirconium-n/following{/other_user}", "gists_url": "https://api.github.com/users/zirconium-n/gists{/gist_id}", "starred_url": "https://api.github.com/users/zirconium-n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zirconium-n/subscriptions", "organizations_url": "https://api.github.com/users/zirconium-n/orgs", "repos_url": "https://api.github.com/users/zirconium-n/repos", "events_url": "https://api.github.com/users/zirconium-n/events{/privacy}", "received_events_url": "https://api.github.com/users/zirconium-n/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zirconium-n", "id": 20034023, "node_id": "MDQ6VXNlcjIwMDM0MDIz", "avatar_url": "https://avatars.githubusercontent.com/u/20034023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zirconium-n", "html_url": "https://github.com/zirconium-n", "followers_url": "https://api.github.com/users/zirconium-n/followers", "following_url": "https://api.github.com/users/zirconium-n/following{/other_user}", "gists_url": "https://api.github.com/users/zirconium-n/gists{/gist_id}", "starred_url": "https://api.github.com/users/zirconium-n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zirconium-n/subscriptions", "organizations_url": "https://api.github.com/users/zirconium-n/orgs", "repos_url": "https://api.github.com/users/zirconium-n/repos", "events_url": "https://api.github.com/users/zirconium-n/events{/privacy}", "received_events_url": "https://api.github.com/users/zirconium-n/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a767b6b9e1e53c3cfc25103ed7c88d77ee65d5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a767b6b9e1e53c3cfc25103ed7c88d77ee65d5d", "html_url": "https://github.com/rust-lang/rust/commit/9a767b6b9e1e53c3cfc25103ed7c88d77ee65d5d"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "8a007d095d5e3a8f42474c0c4530d06f451c04af", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dd56f930cc6e174a24ddd1ea5f1bbf9af978abf9/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd56f930cc6e174a24ddd1ea5f1bbf9af978abf9/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=dd56f930cc6e174a24ddd1ea5f1bbf9af978abf9", "patch": "@@ -593,7 +593,8 @@ pub trait Read {\n     /// This may happen for example because fewer bytes are actually available right now\n     /// (e. g. being close to end-of-file) or because read() was interrupted by a signal.\n     ///\n-    /// As this trait is safe to implement, callers cannot rely on `n <= buf.len()` for safety.\n+    /// As this trait is safe to implement, callers in unsafe code cannot rely on\n+    /// `n <= buf.len()` for safety.\n     /// Extra care needs to be taken when `unsafe` functions are used to access the read bytes.\n     /// Callers have to ensure that no unchecked out-of-bounds accesses are possible even if\n     /// `n > buf.len()`.\n@@ -603,8 +604,8 @@ pub trait Read {\n     /// contents of `buf` being true. It is recommended that *implementations*\n     /// only write data to `buf` instead of reading its contents.\n     ///\n-    /// Correspondingly, however, *callers* of this method must not assume any guarantees\n-    /// about how the implementation uses `buf`. The trait is safe to implement,\n+    /// Correspondingly, however, *callers* of this method in unsafe code must not assume\n+    /// any guarantees about how the implementation uses `buf`. The trait is safe to implement,\n     /// so it is possible that the code that's supposed to write to the buffer might also read\n     /// from it. It is your responsibility to make sure that `buf` is initialized\n     /// before calling `read`. Calling `read` with an uninitialized `buf` (of the kind one"}]}