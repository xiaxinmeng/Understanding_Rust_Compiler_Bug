{"sha": "f6725c0a9833b48d3d8bc463385872b3a5227dad", "node_id": "C_kwDOAAsO6NoAKGY2NzI1YzBhOTgzM2I0OGQzZDhiYzQ2MzM4NTg3MmIzYTUyMjdkYWQ", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-12-22T07:19:15Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-01-12T02:28:38Z"}, "message": "fix fn_sig ice", "tree": {"sha": "73b8f1b040ed7782fcc2c386426bc2bcbcf789e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73b8f1b040ed7782fcc2c386426bc2bcbcf789e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6725c0a9833b48d3d8bc463385872b3a5227dad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6725c0a9833b48d3d8bc463385872b3a5227dad", "html_url": "https://github.com/rust-lang/rust/commit/f6725c0a9833b48d3d8bc463385872b3a5227dad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6725c0a9833b48d3d8bc463385872b3a5227dad/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e63f7be54d084b3ba31b3706b3a1eb36a98b43f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e63f7be54d084b3ba31b3706b3a1eb36a98b43f", "html_url": "https://github.com/rust-lang/rust/commit/6e63f7be54d084b3ba31b3706b3a1eb36a98b43f"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "d4c75cd55ce1e4fe89170c96bffe7fcc8b7d88b8", "filename": "compiler/rustc_const_eval/src/transform/check_consts/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6725c0a9833b48d3d8bc463385872b3a5227dad/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6725c0a9833b48d3d8bc463385872b3a5227dad/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs?ref=f6725c0a9833b48d3d8bc463385872b3a5227dad", "patch": "@@ -242,7 +242,7 @@ impl<'mir, 'tcx> Checker<'mir, 'tcx> {\n             // impl trait is gone in MIR, so check the return type of a const fn by its signature\n             // instead of the type of the return place.\n             self.span = body.local_decls[RETURN_PLACE].source_info.span;\n-            let return_ty = tcx.fn_sig(def_id).output();\n+            let return_ty = self.ccx.fn_sig().output();\n             self.check_local_or_return_ty(return_ty.skip_binder(), RETURN_PLACE);\n         }\n "}, {"sha": "b528bc923301383af587ba3cbd794620aa5e87da", "filename": "compiler/rustc_const_eval/src/transform/check_consts/mod.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f6725c0a9833b48d3d8bc463385872b3a5227dad/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6725c0a9833b48d3d8bc463385872b3a5227dad/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs?ref=f6725c0a9833b48d3d8bc463385872b3a5227dad", "patch": "@@ -8,7 +8,7 @@ use rustc_attr as attr;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_middle::mir;\n-use rustc_middle::ty::{self, TyCtxt};\n+use rustc_middle::ty::{self, TyCtxt, PolyFnSig};\n use rustc_span::Symbol;\n \n pub use self::qualifs::Qualif;\n@@ -64,6 +64,17 @@ impl<'mir, 'tcx> ConstCx<'mir, 'tcx> {\n     fn is_async(&self) -> bool {\n         self.tcx.asyncness(self.def_id()).is_async()\n     }\n+\n+    pub fn fn_sig(&self) -> PolyFnSig<'tcx> {\n+        let did = self.def_id().to_def_id();\n+        if self.tcx.is_closure(did) {\n+            let ty = self.tcx.type_of(did);\n+            let ty::Closure(_, substs) = ty.kind() else { bug!(\"type_of closure not ty::Closure\") };\n+            substs.as_closure().sig()\n+        } else {\n+            self.tcx.fn_sig(did)\n+        }\n+    }\n }\n \n pub fn rustc_allow_const_fn_unstable("}, {"sha": "cd8bb5963ada23f319a31aa1a6fb19b31b76b29c", "filename": "src/test/ui/rfc-2632-const-trait-impl/const_closures/non-const-op-const-closure-non-const-outer.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f6725c0a9833b48d3d8bc463385872b3a5227dad/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst_closures%2Fnon-const-op-const-closure-non-const-outer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6725c0a9833b48d3d8bc463385872b3a5227dad/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst_closures%2Fnon-const-op-const-closure-non-const-outer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst_closures%2Fnon-const-op-const-closure-non-const-outer.rs?ref=f6725c0a9833b48d3d8bc463385872b3a5227dad", "patch": "@@ -0,0 +1,15 @@\n+#![feature(const_closures, const_trait_impl)]\n+#![allow(incomplete_features)]\n+\n+trait Foo {\n+    fn foo(&self);\n+}\n+\n+impl Foo for () {\n+    fn foo(&self) {}\n+}\n+\n+fn main() {\n+    (const || { (()).foo() })();\n+    //~^ ERROR: cannot call non-const fn\n+}"}]}