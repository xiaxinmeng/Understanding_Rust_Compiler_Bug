{"sha": "a143ff0248320bfd234aad0d93f2a59baf78216f", "node_id": "C_kwDOAAsO6NoAKGExNDNmZjAyNDgzMjBiZmQyMzRhYWQwZDkzZjJhNTliYWY3ODIxNmY", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-11-11T13:36:27Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-11-11T13:36:27Z"}, "message": "fix: Fix r-a eagerly showing no discovered workspace errors", "tree": {"sha": "51766269228019d841e511e18759b1a023240ab5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51766269228019d841e511e18759b1a023240ab5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a143ff0248320bfd234aad0d93f2a59baf78216f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a143ff0248320bfd234aad0d93f2a59baf78216f", "html_url": "https://github.com/rust-lang/rust/commit/a143ff0248320bfd234aad0d93f2a59baf78216f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a143ff0248320bfd234aad0d93f2a59baf78216f/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "add85397ae3ddb7653ab1b66428985ee7ee2ca3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/add85397ae3ddb7653ab1b66428985ee7ee2ca3f", "html_url": "https://github.com/rust-lang/rust/commit/add85397ae3ddb7653ab1b66428985ee7ee2ca3f"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "4e8bc8d6462ce58362d04a5a625eccb3ac565d59", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a143ff0248320bfd234aad0d93f2a59baf78216f/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a143ff0248320bfd234aad0d93f2a59baf78216f/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=a143ff0248320bfd234aad0d93f2a59baf78216f", "patch": "@@ -100,7 +100,7 @@ pub(crate) struct GlobalState {\n     /// the user just adds comments or whitespace to Cargo.toml, we do not want\n     /// to invalidate any salsa caches.\n     pub(crate) workspaces: Arc<Vec<ProjectWorkspace>>,\n-    pub(crate) fetch_workspaces_queue: OpQueue<Vec<anyhow::Result<ProjectWorkspace>>>,\n+    pub(crate) fetch_workspaces_queue: OpQueue<Option<Vec<anyhow::Result<ProjectWorkspace>>>>,\n     pub(crate) fetch_build_data_queue:\n         OpQueue<(Arc<Vec<ProjectWorkspace>>, Vec<anyhow::Result<WorkspaceBuildScripts>>)>,\n "}, {"sha": "274588ce0e0764f9953c09402edfca046fc02ada", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a143ff0248320bfd234aad0d93f2a59baf78216f/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a143ff0248320bfd234aad0d93f2a59baf78216f/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=a143ff0248320bfd234aad0d93f2a59baf78216f", "patch": "@@ -451,7 +451,7 @@ impl GlobalState {\n                     ProjectWorkspaceProgress::Begin => (Progress::Begin, None),\n                     ProjectWorkspaceProgress::Report(msg) => (Progress::Report, Some(msg)),\n                     ProjectWorkspaceProgress::End(workspaces) => {\n-                        self.fetch_workspaces_queue.op_completed(workspaces);\n+                        self.fetch_workspaces_queue.op_completed(Some(workspaces));\n \n                         let old = Arc::clone(&self.workspaces);\n                         self.switch_workspaces(\"fetched workspace\".to_string());"}, {"sha": "aa0510a4ea6a0bf16187e9c76746877770f6d3a7", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a143ff0248320bfd234aad0d93f2a59baf78216f/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a143ff0248320bfd234aad0d93f2a59baf78216f/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=a143ff0248320bfd234aad0d93f2a59baf78216f", "patch": "@@ -206,12 +206,9 @@ impl GlobalState {\n             self.show_and_log_error(\"failed to run build scripts\".to_string(), Some(error));\n         }\n \n-        let workspaces = self\n-            .fetch_workspaces_queue\n-            .last_op_result()\n-            .iter()\n-            .filter_map(|res| res.as_ref().ok().cloned())\n-            .collect::<Vec<_>>();\n+        let Some(workspaces) = self.fetch_workspaces_queue.last_op_result() else { return; };\n+        let workspaces =\n+            workspaces.iter().filter_map(|res| res.as_ref().ok().cloned()).collect::<Vec<_>>();\n \n         fn eq_ignore_build_data<'a>(\n             left: &'a ProjectWorkspace,\n@@ -435,7 +432,7 @@ impl GlobalState {\n     fn fetch_workspace_error(&self) -> Result<(), String> {\n         let mut buf = String::new();\n \n-        let last_op_result = self.fetch_workspaces_queue.last_op_result();\n+        let Some(last_op_result) = self.fetch_workspaces_queue.last_op_result() else { return Ok(()) };\n         if last_op_result.is_empty() {\n             stdx::format_to!(buf, \"rust-analyzer failed to discover workspace\");\n         } else {"}]}