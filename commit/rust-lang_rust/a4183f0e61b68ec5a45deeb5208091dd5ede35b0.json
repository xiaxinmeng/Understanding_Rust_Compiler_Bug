{"sha": "a4183f0e61b68ec5a45deeb5208091dd5ede35b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MTgzZjBlNjFiNjhlYzVhNDVkZWViNTIwODA5MWRkNWVkZTM1YjA=", "commit": {"author": {"name": "Alistair Francis", "email": "alistair.francis@wdc.com", "date": "2020-07-07T20:35:55Z"}, "committer": {"name": "Alistair Francis", "email": "alistair.francis@wdc.com", "date": "2020-09-15T00:40:29Z"}, "message": "librustc_target: Initial support for riscv32gc_unknown_linux_gnu\n\nSigned-off-by: Alistair Francis <alistair.francis@wdc.com>", "tree": {"sha": "040a60c92b89df7f329d853892f30cc5bf75525f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/040a60c92b89df7f329d853892f30cc5bf75525f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4183f0e61b68ec5a45deeb5208091dd5ede35b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4183f0e61b68ec5a45deeb5208091dd5ede35b0", "html_url": "https://github.com/rust-lang/rust/commit/a4183f0e61b68ec5a45deeb5208091dd5ede35b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4183f0e61b68ec5a45deeb5208091dd5ede35b0/comments", "author": {"login": "alistair23", "id": 171674, "node_id": "MDQ6VXNlcjE3MTY3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/171674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alistair23", "html_url": "https://github.com/alistair23", "followers_url": "https://api.github.com/users/alistair23/followers", "following_url": "https://api.github.com/users/alistair23/following{/other_user}", "gists_url": "https://api.github.com/users/alistair23/gists{/gist_id}", "starred_url": "https://api.github.com/users/alistair23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alistair23/subscriptions", "organizations_url": "https://api.github.com/users/alistair23/orgs", "repos_url": "https://api.github.com/users/alistair23/repos", "events_url": "https://api.github.com/users/alistair23/events{/privacy}", "received_events_url": "https://api.github.com/users/alistair23/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alistair23", "id": 171674, "node_id": "MDQ6VXNlcjE3MTY3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/171674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alistair23", "html_url": "https://github.com/alistair23", "followers_url": "https://api.github.com/users/alistair23/followers", "following_url": "https://api.github.com/users/alistair23/following{/other_user}", "gists_url": "https://api.github.com/users/alistair23/gists{/gist_id}", "starred_url": "https://api.github.com/users/alistair23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alistair23/subscriptions", "organizations_url": "https://api.github.com/users/alistair23/orgs", "repos_url": "https://api.github.com/users/alistair23/repos", "events_url": "https://api.github.com/users/alistair23/events{/privacy}", "received_events_url": "https://api.github.com/users/alistair23/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b4154193e8471f36b1a9e781f1ef7d492fc6a6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b4154193e8471f36b1a9e781f1ef7d492fc6a6c", "html_url": "https://github.com/rust-lang/rust/commit/9b4154193e8471f36b1a9e781f1ef7d492fc6a6c"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "f1e8330425e25c099c5e3669e6c64dfa57045939", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a4183f0e61b68ec5a45deeb5208091dd5ede35b0/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4183f0e61b68ec5a45deeb5208091dd5ede35b0/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=a4183f0e61b68ec5a45deeb5208091dd5ede35b0", "patch": "@@ -654,6 +654,7 @@ supported_targets! {\n     (\"riscv32i-unknown-none-elf\", riscv32i_unknown_none_elf),\n     (\"riscv32imc-unknown-none-elf\", riscv32imc_unknown_none_elf),\n     (\"riscv32imac-unknown-none-elf\", riscv32imac_unknown_none_elf),\n+    (\"riscv32gc-unknown-linux-gnu\", riscv32gc_unknown_linux_gnu),\n     (\"riscv64imac-unknown-none-elf\", riscv64imac_unknown_none_elf),\n     (\"riscv64gc-unknown-none-elf\", riscv64gc_unknown_none_elf),\n     (\"riscv64gc-unknown-linux-gnu\", riscv64gc_unknown_linux_gnu),"}, {"sha": "53963fbb2fd7636d04938e88d3ded5bd57f7b98c", "filename": "compiler/rustc_target/src/spec/riscv32gc_unknown_linux_gnu.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a4183f0e61b68ec5a45deeb5208091dd5ede35b0/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv32gc_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4183f0e61b68ec5a45deeb5208091dd5ede35b0/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv32gc_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Friscv32gc_unknown_linux_gnu.rs?ref=a4183f0e61b68ec5a45deeb5208091dd5ede35b0", "patch": "@@ -0,0 +1,25 @@\n+use crate::spec::{CodeModel, LinkerFlavor, Target, TargetOptions, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    Ok(Target {\n+        llvm_target: \"riscv32-unknown-linux-gnu\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        target_env: \"gnu\".to_string(),\n+        data_layout: \"e-m:e-p:32:32-i64:64-n32-S128\".to_string(),\n+        arch: \"riscv32\".to_string(),\n+        target_os: \"linux\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        linker_flavor: LinkerFlavor::Gcc,\n+        options: TargetOptions {\n+            abi_blacklist: super::riscv_base::abi_blacklist(),\n+            code_model: Some(CodeModel::Medium),\n+            cpu: \"generic-rv32\".to_string(),\n+            features: \"+m,+a,+f,+d,+c\".to_string(),\n+            llvm_abiname: \"ilp32d\".to_string(),\n+            max_atomic_width: Some(32),\n+            ..super::linux_base::opts()\n+        },\n+    })\n+}"}]}