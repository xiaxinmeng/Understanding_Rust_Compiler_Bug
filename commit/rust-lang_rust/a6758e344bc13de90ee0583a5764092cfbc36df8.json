{"sha": "a6758e344bc13de90ee0583a5764092cfbc36df8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2NzU4ZTM0NGJjMTNkZTkwZWUwNTgzYTU3NjQwOTJjZmJjMzZkZjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-19T23:56:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-19T23:56:02Z"}, "message": "auto merge of #16584 : luqmana/rust/psfo, r=alexcrichton\n\nFixes #16574.", "tree": {"sha": "4b2ce0009f0051f0380f0d234369d35bad57f2cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b2ce0009f0051f0380f0d234369d35bad57f2cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6758e344bc13de90ee0583a5764092cfbc36df8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6758e344bc13de90ee0583a5764092cfbc36df8", "html_url": "https://github.com/rust-lang/rust/commit/a6758e344bc13de90ee0583a5764092cfbc36df8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6758e344bc13de90ee0583a5764092cfbc36df8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0600a3befaad1fa564885a2d3cd3716ce8ecb304", "url": "https://api.github.com/repos/rust-lang/rust/commits/0600a3befaad1fa564885a2d3cd3716ce8ecb304", "html_url": "https://github.com/rust-lang/rust/commit/0600a3befaad1fa564885a2d3cd3716ce8ecb304"}, {"sha": "7382554496238f4feceb5a299a20ab135ab607f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7382554496238f4feceb5a299a20ab135ab607f0", "html_url": "https://github.com/rust-lang/rust/commit/7382554496238f4feceb5a299a20ab135ab607f0"}], "stats": {"total": 60, "additions": 56, "deletions": 4}, "files": [{"sha": "2ab4814fa0cc3c633e3a2a579d6efc37ca9c0bc6", "filename": "src/librustc/middle/trans/cabi_x86_64.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a6758e344bc13de90ee0583a5764092cfbc36df8/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6758e344bc13de90ee0583a5764092cfbc36df8/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86_64.rs?ref=a6758e344bc13de90ee0583a5764092cfbc36df8", "patch": "@@ -176,11 +176,15 @@ fn classify_ty(ty: Type) -> Vec<RegClass> {\n     }\n \n     fn classify_struct(tys: &[Type],\n-                       cls: &mut [RegClass], i: uint,\n-                       off: uint) {\n+                       cls: &mut [RegClass],\n+                       i: uint,\n+                       off: uint,\n+                       packed: bool) {\n         let mut field_off = off;\n         for ty in tys.iter() {\n-            field_off = align(field_off, *ty);\n+            if !packed {\n+                field_off = align(field_off, *ty);\n+            }\n             classify(*ty, cls, i, field_off);\n             field_off += ty_size(*ty);\n         }\n@@ -219,7 +223,7 @@ fn classify_ty(ty: Type) -> Vec<RegClass> {\n                 unify(cls, ix + off / 8u, SSEDs);\n             }\n             Struct => {\n-                classify_struct(ty.field_types().as_slice(), cls, ix, off);\n+                classify_struct(ty.field_types().as_slice(), cls, ix, off, ty.is_packed());\n             }\n             Array => {\n                 let len = ty.array_length();"}, {"sha": "ea6971853fe998aa42fc23e3d7421f300a71ef9f", "filename": "src/test/run-make/extern-fn-with-packed-struct/Makefile", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a6758e344bc13de90ee0583a5764092cfbc36df8/src%2Ftest%2Frun-make%2Fextern-fn-with-packed-struct%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/a6758e344bc13de90ee0583a5764092cfbc36df8/src%2Ftest%2Frun-make%2Fextern-fn-with-packed-struct%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-fn-with-packed-struct%2FMakefile?ref=a6758e344bc13de90ee0583a5764092cfbc36df8", "patch": "@@ -0,0 +1,7 @@\n+-include ../tools.mk\n+\n+all:\n+\t$(CC) -std=c99 test.c -c -o $(TMPDIR)/test.o\n+\t$(AR) rcs $(TMPDIR)/libtest.a $(TMPDIR)/test.o\n+\t$(RUSTC) test.rs -L $(TMPDIR)\n+\t$(call RUN,test) || exit 1"}, {"sha": "c3456a64b9bc40bdcbc7af04ba00be8f5e6e30e6", "filename": "src/test/run-make/extern-fn-with-packed-struct/test.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a6758e344bc13de90ee0583a5764092cfbc36df8/src%2Ftest%2Frun-make%2Fextern-fn-with-packed-struct%2Ftest.c", "raw_url": "https://github.com/rust-lang/rust/raw/a6758e344bc13de90ee0583a5764092cfbc36df8/src%2Ftest%2Frun-make%2Fextern-fn-with-packed-struct%2Ftest.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-fn-with-packed-struct%2Ftest.c?ref=a6758e344bc13de90ee0583a5764092cfbc36df8", "patch": "@@ -0,0 +1,11 @@\n+// Pragma needed cause of gcc bug on windows: http://gcc.gnu.org/bugzilla/show_bug.cgi?id=52991\n+#pragma pack(1)\n+struct __attribute__((packed)) Foo {\n+    char a;\n+    short b;\n+    char c;\n+};\n+\n+struct Foo foo(struct Foo foo) {\n+    return foo;\n+}"}, {"sha": "4b07b7f39f56ddcc170b5b0b221c13d0f23f6da2", "filename": "src/test/run-make/extern-fn-with-packed-struct/test.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a6758e344bc13de90ee0583a5764092cfbc36df8/src%2Ftest%2Frun-make%2Fextern-fn-with-packed-struct%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6758e344bc13de90ee0583a5764092cfbc36df8/src%2Ftest%2Frun-make%2Fextern-fn-with-packed-struct%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-fn-with-packed-struct%2Ftest.rs?ref=a6758e344bc13de90ee0583a5764092cfbc36df8", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[packed]\n+#[deriving(PartialEq, Show)]\n+struct Foo {\n+    a: i8,\n+    b: i16,\n+    c: i8\n+}\n+\n+#[link(name = \"test\", kind = \"static\")]\n+extern {\n+    fn foo(f: Foo) -> Foo;\n+}\n+\n+fn main() {\n+    unsafe {\n+        let a = Foo { a: 1, b: 2, c: 3 };\n+        let b = foo(a);\n+        assert_eq!(a, b);\n+    }\n+}"}]}