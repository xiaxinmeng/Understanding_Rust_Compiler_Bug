{"sha": "479aefb6709eaa0ed83253aeab36a553e826c417", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3OWFlZmI2NzA5ZWFhMGVkODMyNTNhZWFiMzZhNTUzZTgyNmM0MTc=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-29T15:11:11Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-29T15:11:11Z"}, "message": "std::str: Fix bug in .slice_chars()\n\n`s.slice_chars(a, b)` did not allow the case where `a == s.len()`, this\nis a bug I introduced last time I touched the method; add a test for\nthis case.", "tree": {"sha": "19e836910c7f817529eafef7daab172c528cea8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19e836910c7f817529eafef7daab172c528cea8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/479aefb6709eaa0ed83253aeab36a553e826c417", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/479aefb6709eaa0ed83253aeab36a553e826c417", "html_url": "https://github.com/rust-lang/rust/commit/479aefb6709eaa0ed83253aeab36a553e826c417", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/479aefb6709eaa0ed83253aeab36a553e826c417/comments", "author": null, "committer": null, "parents": [{"sha": "d8801ceabcf039708e448e07460f859d60771e18", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8801ceabcf039708e448e07460f859d60771e18", "html_url": "https://github.com/rust-lang/rust/commit/d8801ceabcf039708e448e07460f859d60771e18"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "802fb0e4b990bb8675418dc873770481848c578e", "filename": "src/libstd/str.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/479aefb6709eaa0ed83253aeab36a553e826c417/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/479aefb6709eaa0ed83253aeab36a553e826c417/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=479aefb6709eaa0ed83253aeab36a553e826c417", "patch": "@@ -1713,6 +1713,7 @@ impl<'self> StrSlice<'self> for &'self str {\n             if count == end { end_byte = Some(idx); break; }\n             count += 1;\n         }\n+        if begin_byte.is_none() && count == begin { begin_byte = Some(self.len()) }\n         if end_byte.is_none() && count == end { end_byte = Some(self.len()) }\n \n         match (begin_byte, end_byte) {\n@@ -2700,8 +2701,11 @@ mod tests {\n         fn t(a: &str, b: &str, start: uint) {\n             assert_eq!(a.slice_chars(start, start + b.char_len()), b);\n         }\n+        t(\"\", \"\", 0);\n         t(\"hello\", \"llo\", 2);\n         t(\"hello\", \"el\", 1);\n+        t(\"\u03b1\u03b2\u03bb\", \"\u03b2\", 1);\n+        t(\"\u03b1\u03b2\u03bb\", \"\", 3);\n         assert_eq!(\"\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\", \"\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam\".slice_chars(2, 8));\n     }\n "}]}