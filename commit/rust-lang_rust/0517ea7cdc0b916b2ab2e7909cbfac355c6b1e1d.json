{"sha": "0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1MTdlYTdjZGMwYjkxNmIyYWIyZTc5MDljYmZhYzM1NWM2YjFlMWQ=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-01-18T06:14:01Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-03-02T00:29:15Z"}, "message": "Address review comments\n\n- Move MISSING_CRATE_LEVEL_DOCS to rustdoc directly\n- Update documentation\n\nThis also takes the opportunity to make the `no-crate-level-doc-lint`\ntest more specific.", "tree": {"sha": "ff40fac1cd73d6cded142d589bb86fe6021596ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff40fac1cd73d6cded142d589bb86fe6021596ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d", "html_url": "https://github.com/rust-lang/rust/commit/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8ddfda8138d9c282eee16cfae892ed232d8b422", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8ddfda8138d9c282eee16cfae892ed232d8b422", "html_url": "https://github.com/rust-lang/rust/commit/e8ddfda8138d9c282eee16cfae892ed232d8b422"}], "stats": {"total": 88, "additions": 54, "deletions": 34}, "files": [{"sha": "a15a972cce7214c5b0f8473e8cae96ac8bef0558", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d", "patch": "@@ -329,6 +329,7 @@ fn register_builtins(store: &mut LintStore, no_interleave_lints: bool) {\n     const RUSTDOC_LINTS: &[&str] = &[\n         \"broken_intra_doc_links\",\n         \"private_intra_doc_links\",\n+        \"missing_crate_level_docs\",\n         \"missing_doc_code_examples\",\n         \"private_doc_tests\",\n         \"invalid_codeblock_attributes\","}, {"sha": "12d849e3b946691f994470a464c8b4f365ebf42d", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d", "patch": "@@ -1875,17 +1875,6 @@ declare_lint! {\n     \"detects labels that are never used\"\n }\n \n-declare_lint! {\n-    /// The `missing_crate_level_docs` lint detects if documentation is\n-    /// missing at the crate root. This is a `rustdoc` only lint, see the\n-    /// documentation in the [rustdoc book].\n-    ///\n-    /// [rustdoc book]: ../../../rustdoc/lints.html#missing_crate_level_docs\n-    pub MISSING_CRATE_LEVEL_DOCS,\n-    Allow,\n-    \"detects crates with no crate-level documentation\"\n-}\n-\n declare_lint! {\n     /// The `where_clauses_object_safety` lint detects for [object safety] of\n     /// [where clauses].\n@@ -2944,7 +2933,6 @@ declare_lint_pass! {\n         ABSOLUTE_PATHS_NOT_STARTING_WITH_CRATE,\n         UNSTABLE_NAME_COLLISIONS,\n         IRREFUTABLE_LET_PATTERNS,\n-        MISSING_CRATE_LEVEL_DOCS,\n         WHERE_CLAUSES_OBJECT_SAFETY,\n         PROC_MACRO_DERIVE_RESOLUTION_FALLBACK,\n         MACRO_USE_EXTERN_CRATE,"}, {"sha": "174db711bcee71f0f64a903c272378a68f6e7e3b", "filename": "src/doc/rustdoc/src/lints.md", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "raw_url": "https://github.com/rust-lang/rust/raw/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md?ref=0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d", "patch": "@@ -4,12 +4,13 @@\n can use them like any other lints by doing this:\n \n ```rust\n-#![allow(missing_docs)] // allows the lint, no diagnostics will be reported\n-#![warn(missing_docs)] // warn if there are missing docs\n-#![deny(missing_docs)] // error if there are missing docs\n-# //! Crate docs.\n+#![allow(rustdoc::broken_intra_doc_links)] // allows the lint, no diagnostics will be reported\n+#![warn(rustdoc::broken_intra_doc_links)] // warn if there are broken intra-doc links\n+#![deny(rustdoc::broken_intra_doc_links)] // error if there are broken intra-doc links\n ```\n \n+Note that, except for `missing_docs`, these lints are only available when running `rustdoc`, not `rustc`.\n+\n Here is the list of the lints provided by `rustdoc`:\n \n ## broken_intra_doc_links\n@@ -51,7 +52,7 @@ warning: `Foo` is both an enum and a function\n 1 | /// [`Foo`]\n   |      ^^^^^ ambiguous link\n   |\n-  = note: `#[warn(broken_intra_doc_links)]` on by default\n+  = note: `#[warn(rustdoc::broken_intra_doc_links)]` on by default\n help: to link to the enum, prefix with the item type\n   |\n 1 | /// [`enum@Foo`]\n@@ -83,7 +84,7 @@ warning: public documentation for `public` links to private item `private`\n 1 | /// [private]\n   |      ^^^^^^^ this item is private\n   |\n-  = note: `#[warn(private_intra_doc_links)]` on by default\n+  = note: `#[warn(rustdoc::private_intra_doc_links)]` on by default\n   = note: this link will resolve properly if you pass `--document-private-items`\n ```\n \n@@ -97,7 +98,7 @@ warning: public documentation for `public` links to private item `private`\n 1 | /// [private]\n   |      ^^^^^^^ this item is private\n   |\n-  = note: `#[warn(private_intra_doc_links)]` on by default\n+  = note: `#[warn(rustdoc::private_intra_doc_links)]` on by default\n   = note: this link resolves only because you passed `--document-private-items`, but will break without\n ```\n \n@@ -125,13 +126,15 @@ warning: missing documentation for a function\n    | ^^^^^^^^^^^^^^^^^^^^^\n ```\n \n+Note that unlike other rustdoc lints, this lint is also available from `rustc` directly.\n+\n ## missing_crate_level_docs\n \n This lint is **allowed by default**. It detects if there is no documentation\n at the crate root. For example:\n \n ```rust\n-#![warn(missing_crate_level_docs)]\n+#![warn(rustdoc::missing_crate_level_docs)]\n ```\n \n This will generate the following warning:\n@@ -155,7 +158,7 @@ This lint is **allowed by default** and is **nightly-only**. It detects when a d\n is missing a code example. For example:\n \n ```rust\n-#![warn(missing_doc_code_examples)]\n+#![warn(rustdoc::missing_doc_code_examples)]\n \n /// There is no code example!\n pub fn no_code_example() {}\n@@ -191,7 +194,7 @@ This lint is **allowed by default**. It detects documentation tests when they\n are on a private item. For example:\n \n ```rust\n-#![warn(private_doc_tests)]\n+#![warn(rustdoc::private_doc_tests)]\n \n mod foo {\n     /// private doc test\n@@ -245,7 +248,7 @@ warning: unknown attribute `should-panic`. Did you mean `should_panic`?\n 5 | | /// ```\n   | |_______^\n   |\n-  = note: `#[warn(invalid_codeblock_attributes)]` on by default\n+  = note: `#[warn(rustdoc::invalid_codeblock_attributes)]` on by default\n   = help: the code block will either not be tested if not marked as a rust one or won't fail if it doesn't panic when running\n ```\n \n@@ -258,7 +261,7 @@ This lint is **allowed by default** and is **nightly-only**. It detects unclosed\n or invalid HTML tags. For example:\n \n ```rust\n-#![warn(invalid_html_tags)]\n+#![warn(rustdoc::invalid_html_tags)]\n \n /// <h1>\n /// </script>\n@@ -275,7 +278,11 @@ warning: unopened HTML tag `script`\n 2 | | /// </script>\n   | |_____________^\n   |\n-  = note: `#[warn(invalid_html_tags)]` on by default\n+  note: the lint level is defined here\n+ --> foo.rs:1:9\n+  |\n+1 | #![warn(rustdoc::invalid_html_tags)]\n+  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unclosed HTML tag `h1`\n  --> foo.rs:1:1\n@@ -310,7 +317,7 @@ warning: this URL is not a hyperlink\n 1 | /// http://example.org\n   |     ^^^^^^^^^^^^^^^^^^ help: use an automatic link instead: `<http://example.org>`\n   |\n-  = note: `#[warn(non_autolinks)]` on by default\n+  = note: `#[warn(rustdoc::non_autolinks)]` on by default\n \n warning: unneeded long form for URL\n  --> foo.rs:2:5"}, {"sha": "9580a6d1ddc82b6781c73d275562c7c0bba2ed4f", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d", "patch": "@@ -260,9 +260,8 @@ crate fn create_config(\n     // By default, rustdoc ignores all lints.\n     // Specifically unblock lints relevant to documentation or the lint machinery itself.\n     let mut lints_to_show = vec![\n-        // it's unclear whether these should be part of rustdoc directly\n+        // it's unclear whether this should be part of rustdoc directly (#77364)\n         rustc_lint::builtin::MISSING_DOCS.name.to_string(),\n-        rustc_lint::builtin::MISSING_CRATE_LEVEL_DOCS.name.to_string(),\n         // these are definitely not part of rustdoc, but we want to warn on them anyway.\n         rustc_lint::builtin::RENAMED_AND_REMOVED_LINTS.name.to_string(),\n         rustc_lint::builtin::UNKNOWN_LINTS.name.to_string(),\n@@ -482,7 +481,7 @@ crate fn run_global_ctxt(\n             let help = \"The following guide may be of use:\\n\\\n                 https://doc.rust-lang.org/nightly/rustdoc/how-to-write-documentation.html\";\n             tcx.struct_lint_node(\n-                rustc_lint::builtin::MISSING_CRATE_LEVEL_DOCS,\n+                crate::lint::MISSING_CRATE_LEVEL_DOCS,\n                 ctxt.as_local_hir_id(m.def_id).unwrap(),\n                 |lint| {\n                     let mut diag ="}, {"sha": "e8806c1b6d7873976495798b86669562728b3c35", "filename": "src/librustdoc/lint.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d/src%2Flibrustdoc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d/src%2Flibrustdoc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flint.rs?ref=0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d", "patch": "@@ -104,6 +104,17 @@ declare_rustdoc_lint! {\n     \"codeblock attribute looks a lot like a known one\"\n }\n \n+declare_rustdoc_lint! {\n+    /// The `missing_crate_level_docs` lint detects if documentation is\n+    /// missing at the crate root. This is a `rustdoc` only lint, see the\n+    /// documentation in the [rustdoc book].\n+    ///\n+    /// [rustdoc book]: ../../../rustdoc/lints.html#missing_crate_level_docs\n+    MISSING_CRATE_LEVEL_DOCS,\n+    Allow,\n+    \"detects crates with no crate-level documentation\"\n+}\n+\n declare_rustdoc_lint! {\n     /// The `missing_doc_code_examples` lint detects publicly-exported items\n     /// without code samples in their documentation. This is a `rustdoc` only\n@@ -156,6 +167,7 @@ crate static RUSTDOC_LINTS: Lazy<Vec<&'static Lint>> = Lazy::new(|| {\n         INVALID_CODEBLOCK_ATTRIBUTES,\n         INVALID_HTML_TAGS,\n         NON_AUTOLINKS,\n+        MISSING_CRATE_LEVEL_DOCS,\n     ]\n });\n "}, {"sha": "e6ba9df9b0555df8c4f61fd1b3acaa91805207c9", "filename": "src/test/rustdoc-ui/check.stderr", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d/src%2Ftest%2Frustdoc-ui%2Fcheck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d/src%2Ftest%2Frustdoc-ui%2Fcheck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck.stderr?ref=0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d", "patch": "@@ -21,6 +21,17 @@ warning: missing documentation for a function\n LL | pub fn foo() {}\n    | ^^^^^^^^^^^^\n \n+warning: no documentation found for this crate's top-level module\n+   |\n+note: the lint level is defined here\n+  --> $DIR/check.rs:7:9\n+   |\n+LL | #![warn(rustdoc)]\n+   |         ^^^^^^^\n+   = note: `#[warn(rustdoc::missing_crate_level_docs)]` implied by `#[warn(rustdoc)]`\n+   = help: The following guide may be of use:\n+           https://doc.rust-lang.org/nightly/rustdoc/how-to-write-documentation.html\n+\n warning: missing code example in this documentation\n   --> $DIR/check.rs:4:1\n    |\n@@ -45,5 +56,5 @@ warning: missing code example in this documentation\n LL | pub fn foo() {}\n    | ^^^^^^^^^^^^^^^\n \n-warning: 4 warnings emitted\n+warning: 5 warnings emitted\n "}, {"sha": "3939ec6827adea26c8369e901bd356895a326a67", "filename": "src/test/rustdoc-ui/no-crate-level-doc-lint.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d/src%2Ftest%2Frustdoc-ui%2Fno-crate-level-doc-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d/src%2Ftest%2Frustdoc-ui%2Fno-crate-level-doc-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fno-crate-level-doc-lint.rs?ref=0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d", "patch": "@@ -1,3 +1,5 @@\n-#![deny(missing_crate_level_docs)]\n+// error-pattern: no documentation found\n+#![deny(rustdoc::missing_crate_level_docs)]\n+//^~ NOTE defined here\n \n pub fn foo() {}"}, {"sha": "55ead1a55cfcd76aabf517a93f55bf56f367268a", "filename": "src/test/rustdoc-ui/no-crate-level-doc-lint.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d/src%2Ftest%2Frustdoc-ui%2Fno-crate-level-doc-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d/src%2Ftest%2Frustdoc-ui%2Fno-crate-level-doc-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fno-crate-level-doc-lint.stderr?ref=0517ea7cdc0b916b2ab2e7909cbfac355c6b1e1d", "patch": "@@ -1,10 +1,10 @@\n error: no documentation found for this crate's top-level module\n    |\n note: the lint level is defined here\n-  --> $DIR/no-crate-level-doc-lint.rs:1:9\n+  --> $DIR/no-crate-level-doc-lint.rs:2:9\n    |\n-LL | #![deny(missing_crate_level_docs)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::missing_crate_level_docs)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: The following guide may be of use:\n            https://doc.rust-lang.org/nightly/rustdoc/how-to-write-documentation.html\n "}]}