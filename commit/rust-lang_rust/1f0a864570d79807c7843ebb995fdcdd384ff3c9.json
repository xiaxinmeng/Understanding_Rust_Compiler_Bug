{"sha": "1f0a864570d79807c7843ebb995fdcdd384ff3c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmMGE4NjQ1NzBkNzk4MDdjNzg0M2ViYjk5NWZkY2RkMzg0ZmYzYzk=", "commit": {"author": {"name": "Samrat Man Singh", "email": "samratmansingh@gmail.com", "date": "2020-04-27T18:43:37Z"}, "committer": {"name": "Samrat Man Singh", "email": "samratmansingh@gmail.com", "date": "2020-04-27T19:13:20Z"}, "message": "Suggest `into` instead of `try_into` if possible with int types\n\nIf it is possible to convert an integer type into another using\n`into`, don't suggest `try_into`. This commit changes the suggested\nmethod to convert from one integer type to another for the following\ncases:\n\n- u{n} -> i{m} where n < m\n- u8 -> isize\n- i{n} -> isize where n <= 16\n- u{n} -> usize where n <= 16", "tree": {"sha": "6076d6f01de52e7b74b75db5fb7eaa6c6d342eb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6076d6f01de52e7b74b75db5fb7eaa6c6d342eb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f0a864570d79807c7843ebb995fdcdd384ff3c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f0a864570d79807c7843ebb995fdcdd384ff3c9", "html_url": "https://github.com/rust-lang/rust/commit/1f0a864570d79807c7843ebb995fdcdd384ff3c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f0a864570d79807c7843ebb995fdcdd384ff3c9/comments", "author": {"login": "samrat", "id": 480806, "node_id": "MDQ6VXNlcjQ4MDgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/480806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samrat", "html_url": "https://github.com/samrat", "followers_url": "https://api.github.com/users/samrat/followers", "following_url": "https://api.github.com/users/samrat/following{/other_user}", "gists_url": "https://api.github.com/users/samrat/gists{/gist_id}", "starred_url": "https://api.github.com/users/samrat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samrat/subscriptions", "organizations_url": "https://api.github.com/users/samrat/orgs", "repos_url": "https://api.github.com/users/samrat/repos", "events_url": "https://api.github.com/users/samrat/events{/privacy}", "received_events_url": "https://api.github.com/users/samrat/received_events", "type": "User", "site_admin": false}, "committer": {"login": "samrat", "id": 480806, "node_id": "MDQ6VXNlcjQ4MDgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/480806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samrat", "html_url": "https://github.com/samrat", "followers_url": "https://api.github.com/users/samrat/followers", "following_url": "https://api.github.com/users/samrat/following{/other_user}", "gists_url": "https://api.github.com/users/samrat/gists{/gist_id}", "starred_url": "https://api.github.com/users/samrat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samrat/subscriptions", "organizations_url": "https://api.github.com/users/samrat/orgs", "repos_url": "https://api.github.com/users/samrat/repos", "events_url": "https://api.github.com/users/samrat/events{/privacy}", "received_events_url": "https://api.github.com/users/samrat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46ec74e60f238f694b46c976d6217e7cf8d4cf1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/46ec74e60f238f694b46c976d6217e7cf8d4cf1a", "html_url": "https://github.com/rust-lang/rust/commit/46ec74e60f238f694b46c976d6217e7cf8d4cf1a"}], "stats": {"total": 71, "additions": 70, "deletions": 1}, "files": [{"sha": "980aefa710ff597b986fd36963bfbcaa37027438", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1f0a864570d79807c7843ebb995fdcdd384ff3c9/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f0a864570d79807c7843ebb995fdcdd384ff3c9/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=1f0a864570d79807c7843ebb995fdcdd384ff3c9", "patch": "@@ -767,7 +767,16 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     suggest_to_change_suffix_or_into(err, is_fallible);\n                     true\n                 }\n-                (&ty::Int(_), &ty::Uint(_)) | (&ty::Uint(_), &ty::Int(_)) => {\n+                (&ty::Int(exp), &ty::Uint(found)) => {\n+                    let is_fallible = match (exp.bit_width(), found.bit_width()) {\n+                        (Some(exp), Some(found)) if found < exp => false,\n+                        (None, Some(found)) if found <= 16 => false,\n+                        _ => true\n+                    };\n+                    suggest_to_change_suffix_or_into(err, is_fallible);\n+                    true\n+                },\n+                (&ty::Uint(_), &ty::Int(_)) => {\n                     suggest_to_change_suffix_or_into(err, true);\n                     true\n                 }"}, {"sha": "409b27a4eab310652ec0c9799d3dff3101440887", "filename": "src/test/ui/suggestions/integer-into.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1f0a864570d79807c7843ebb995fdcdd384ff3c9/src%2Ftest%2Fui%2Fsuggestions%2Finteger-into.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f0a864570d79807c7843ebb995fdcdd384ff3c9/src%2Ftest%2Fui%2Fsuggestions%2Finteger-into.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Finteger-into.rs?ref=1f0a864570d79807c7843ebb995fdcdd384ff3c9", "patch": "@@ -0,0 +1,17 @@\n+fn main() {\n+    let a = 1u8;\n+    let _: i64 = a;\n+    //~^ ERROR mismatched types\n+\n+    let b = 1i8;\n+    let _: isize = b;\n+    //~^ ERROR mismatched types\n+\n+    let c = 1u8;\n+    let _: isize = c;\n+    //~^ ERROR mismatched types\n+\n+    let d = 1u8;\n+    let _: usize = d;\n+    //~^ ERROR mismatched types\n+}"}, {"sha": "a15cf81f71fe76ad216375a77ebf9ef6ff5a2278", "filename": "src/test/ui/suggestions/integer-into.stderr", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/1f0a864570d79807c7843ebb995fdcdd384ff3c9/src%2Ftest%2Fui%2Fsuggestions%2Finteger-into.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f0a864570d79807c7843ebb995fdcdd384ff3c9/src%2Ftest%2Fui%2Fsuggestions%2Finteger-into.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Finteger-into.stderr?ref=1f0a864570d79807c7843ebb995fdcdd384ff3c9", "patch": "@@ -0,0 +1,43 @@\n+error[E0308]: mismatched types\n+  --> $DIR/integer-into.rs:3:18\n+   |\n+LL |     let _: i64 = a;\n+   |            ---   ^\n+   |            |     |\n+   |            |     expected `i64`, found `u8`\n+   |            |     help: you can convert an `u8` to `i64`: `a.into()`\n+   |            expected due to this\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-into.rs:7:20\n+   |\n+LL |     let _: isize = b;\n+   |            -----   ^\n+   |            |       |\n+   |            |       expected `isize`, found `i8`\n+   |            |       help: you can convert an `i8` to `isize`: `b.into()`\n+   |            expected due to this\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-into.rs:11:20\n+   |\n+LL |     let _: isize = c;\n+   |            -----   ^\n+   |            |       |\n+   |            |       expected `isize`, found `u8`\n+   |            |       help: you can convert an `u8` to `isize`: `c.into()`\n+   |            expected due to this\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-into.rs:15:20\n+   |\n+LL |     let _: usize = d;\n+   |            -----   ^\n+   |            |       |\n+   |            |       expected `usize`, found `u8`\n+   |            |       help: you can convert an `u8` to `usize`: `d.into()`\n+   |            expected due to this\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}