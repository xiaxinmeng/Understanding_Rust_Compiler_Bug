{"sha": "42cf6da6af4dd738bacf851fc6361a8e3dfb8138", "node_id": "C_kwDOAAsO6NoAKDQyY2Y2ZGE2YWY0ZGQ3MzhiYWNmODUxZmM2MzYxYThlM2RmYjgxMzg", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-06-07T12:31:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-07T12:31:30Z"}, "message": "Rollup merge of #112345 - bvanjoi:fix-112342, r=nilstrieb,est31\n\nfix(expand): prevent infinity loop in macro containing only \"///\"\n\nFixes https://github.com/rust-lang/rust/issues/112342\n\nIssue #112342 was caused by an infinity loop in `parse_tt_inner`, and the state of it is as follows:\n\n- `matcher`: `[Sequence, Token(Doc), SequenceKleeneOpNoSep(op: ZeroOrMore), Eof]`\n\n-  loop:\n\n| Iteration | Action |\n| - | - |\n| 0   |  enter `Sequence`|\n| 1    |  enter `Token(Doc)` and `mp.idx += 1` had been executed |\n| 2   |  enter `SequenceKleeneOpNoSep` and reset `mp.idx` to `1` |\n| 3   | enter `Token(Doc)` again|\n\nTo prevent the infinite loop, a check for whether it only contains `DocComment` in `check_lhs_no_empty_seq` had been added.", "tree": {"sha": "9fb0f9884feb95524bc6837b05b2768891c7234d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fb0f9884feb95524bc6837b05b2768891c7234d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42cf6da6af4dd738bacf851fc6361a8e3dfb8138", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkgHiiCRBK7hj4Ov3rIwAAyV8IALAQS4Lf2vQTKy6MSkpO+RZY\n6hkYq/vOsIKlSw/9JF0Kaw4aTbf4Bm+C7o9wDKYpW1sSbqZgCg/90NI1TNJ08ozn\nMrxLuORXY5u/KZOXBsBcYsdKQxdIF6rofqIKwxoJDQcUskjaLGxkuoH9QCkfKWRq\nGw4mYt74+BIif+jbuAMmT19lZoQx3gtJ0/+fhxVmMHG+o+SfXObzEcBHCg0MzBbg\n0DW4fcxjBAPIdGfZ5Es10LH2h8BXXAWnMO4PwH8Pr+buZv6G54dBPj4xpRHGcjZj\n+QLSIn5KKL6hZ1xsTc5+gqCwYZYLn4FItan9Exzgxh581rFqk9NOPHHZ0yot9Bg=\n=c4T9\n-----END PGP SIGNATURE-----\n", "payload": "tree 9fb0f9884feb95524bc6837b05b2768891c7234d\nparent c6fda401f6d03c3947c6604a709e6a6239c76c4f\nparent 5eafab30ba0721451f5114c5b27b37870bb3955a\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1686141090 +0530\ncommitter GitHub <noreply@github.com> 1686141090 +0530\n\nRollup merge of #112345 - bvanjoi:fix-112342, r=nilstrieb,est31\n\nfix(expand): prevent infinity loop in macro containing only \"///\"\n\nFixes https://github.com/rust-lang/rust/issues/112342\n\nIssue #112342 was caused by an infinity loop in `parse_tt_inner`, and the state of it is as follows:\n\n- `matcher`: `[Sequence, Token(Doc), SequenceKleeneOpNoSep(op: ZeroOrMore), Eof]`\n\n-  loop:\n\n| Iteration | Action |\n| - | - |\n| 0   |  enter `Sequence`|\n| 1    |  enter `Token(Doc)` and `mp.idx += 1` had been executed |\n| 2   |  enter `SequenceKleeneOpNoSep` and reset `mp.idx` to `1` |\n| 3   | enter `Token(Doc)` again|\n\nTo prevent the infinite loop, a check for whether it only contains `DocComment` in `check_lhs_no_empty_seq` had been added.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42cf6da6af4dd738bacf851fc6361a8e3dfb8138", "html_url": "https://github.com/rust-lang/rust/commit/42cf6da6af4dd738bacf851fc6361a8e3dfb8138", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42cf6da6af4dd738bacf851fc6361a8e3dfb8138/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6fda401f6d03c3947c6604a709e6a6239c76c4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6fda401f6d03c3947c6604a709e6a6239c76c4f", "html_url": "https://github.com/rust-lang/rust/commit/c6fda401f6d03c3947c6604a709e6a6239c76c4f"}, {"sha": "5eafab30ba0721451f5114c5b27b37870bb3955a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5eafab30ba0721451f5114c5b27b37870bb3955a", "html_url": "https://github.com/rust-lang/rust/commit/5eafab30ba0721451f5114c5b27b37870bb3955a"}], "stats": {"total": 222, "additions": 212, "deletions": 10}, "files": [{"sha": "f0e67cfd50e0818199127fc6c688860bc1214a4b", "filename": "compiler/rustc_expand/src/mbe/macro_parser.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42cf6da6af4dd738bacf851fc6361a8e3dfb8138/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42cf6da6af4dd738bacf851fc6361a8e3dfb8138/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs?ref=42cf6da6af4dd738bacf851fc6361a8e3dfb8138", "patch": "@@ -249,6 +249,7 @@ pub(super) fn compute_locs(matcher: &[TokenTree]) -> Vec<MatcherLoc> {\n }\n \n /// A single matcher position, representing the state of matching.\n+#[derive(Debug)]\n struct MatcherPos {\n     /// The index into `TtParser::locs`, which represents the \"dot\".\n     idx: usize,"}, {"sha": "ee9616a0f0a9df94b36dc5d18b23e2657be39c10", "filename": "compiler/rustc_expand/src/mbe/macro_rules.rs", "status": "modified", "additions": 35, "deletions": 10, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/42cf6da6af4dd738bacf851fc6361a8e3dfb8138/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42cf6da6af4dd738bacf851fc6361a8e3dfb8138/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs?ref=42cf6da6af4dd738bacf851fc6361a8e3dfb8138", "patch": "@@ -628,6 +628,40 @@ fn check_lhs_nt_follows(sess: &ParseSess, def: &ast::Item, lhs: &mbe::TokenTree)\n     // after parsing/expansion. we can report every error in every macro this way.\n }\n \n+fn is_empty_token_tree(sess: &ParseSess, seq: &mbe::SequenceRepetition) -> bool {\n+    if seq.separator.is_some() {\n+        false\n+    } else {\n+        let mut is_empty = true;\n+        let mut iter = seq.tts.iter().peekable();\n+        while let Some(tt) = iter.next() {\n+            match tt {\n+                mbe::TokenTree::MetaVarDecl(_, _, Some(NonterminalKind::Vis)) => {}\n+                mbe::TokenTree::Token(t @ Token { kind: DocComment(..), .. }) => {\n+                    let mut now = t;\n+                    while let Some(&mbe::TokenTree::Token(\n+                        next @ Token { kind: DocComment(..), .. },\n+                    )) = iter.peek()\n+                    {\n+                        now = next;\n+                        iter.next();\n+                    }\n+                    let span = t.span.to(now.span);\n+                    sess.span_diagnostic.span_note_without_error(\n+                        span,\n+                        \"doc comments are ignored in matcher position\",\n+                    );\n+                }\n+                mbe::TokenTree::Sequence(_, sub_seq)\n+                    if (sub_seq.kleene.op == mbe::KleeneOp::ZeroOrMore\n+                        || sub_seq.kleene.op == mbe::KleeneOp::ZeroOrOne) => {}\n+                _ => is_empty = false,\n+            }\n+        }\n+        is_empty\n+    }\n+}\n+\n /// Checks that the lhs contains no repetition which could match an empty token\n /// tree, because then the matcher would hang indefinitely.\n fn check_lhs_no_empty_seq(sess: &ParseSess, tts: &[mbe::TokenTree]) -> bool {\n@@ -644,16 +678,7 @@ fn check_lhs_no_empty_seq(sess: &ParseSess, tts: &[mbe::TokenTree]) -> bool {\n                 }\n             }\n             TokenTree::Sequence(span, seq) => {\n-                if seq.separator.is_none()\n-                    && seq.tts.iter().all(|seq_tt| match seq_tt {\n-                        TokenTree::MetaVarDecl(_, _, Some(NonterminalKind::Vis)) => true,\n-                        TokenTree::Sequence(_, sub_seq) => {\n-                            sub_seq.kleene.op == mbe::KleeneOp::ZeroOrMore\n-                                || sub_seq.kleene.op == mbe::KleeneOp::ZeroOrOne\n-                        }\n-                        _ => false,\n-                    })\n-                {\n+                if is_empty_token_tree(sess, seq) {\n                     let sp = span.entire();\n                     sess.span_diagnostic.span_err(sp, \"repetition matches empty token tree\");\n                     return false;"}, {"sha": "bd2abe7f697f4f8d66e56cff3681b75ab73f6d55", "filename": "tests/ui/macros/issue-112342-1.rs", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/42cf6da6af4dd738bacf851fc6361a8e3dfb8138/tests%2Fui%2Fmacros%2Fissue-112342-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42cf6da6af4dd738bacf851fc6361a8e3dfb8138/tests%2Fui%2Fmacros%2Fissue-112342-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Fissue-112342-1.rs?ref=42cf6da6af4dd738bacf851fc6361a8e3dfb8138", "patch": "@@ -0,0 +1,49 @@\n+// same as #95267, ignore doc comment although it's a bug.\n+\n+macro_rules! m1 {\n+    (\n+        $(\n+            ///\n+        )*\n+        //~^^^ERROR repetition matches empty token tree\n+    ) => {};\n+}\n+\n+m1! {}\n+\n+macro_rules! m2 {\n+    (\n+        $(\n+            ///\n+        )+\n+        //~^^^ERROR repetition matches empty token tree\n+    ) => {};\n+}\n+\n+m2! {}\n+\n+macro_rules! m3 {\n+    (\n+        $(\n+            ///\n+        )?\n+        //~^^^ERROR repetition matches empty token tree\n+    ) => {};\n+}\n+\n+m3! {}\n+\n+\n+macro_rules! m4 {\n+    (\n+        $(\n+            ///\n+            ///\n+        )*\n+        //~^^^^ERROR repetition matches empty token tree\n+    ) => {};\n+}\n+\n+m4! {}\n+\n+fn main() {}"}, {"sha": "f2d82bf599e99fdff6eacc658290356e4b310586", "filename": "tests/ui/macros/issue-112342-1.stderr", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/42cf6da6af4dd738bacf851fc6361a8e3dfb8138/tests%2Fui%2Fmacros%2Fissue-112342-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/42cf6da6af4dd738bacf851fc6361a8e3dfb8138/tests%2Fui%2Fmacros%2Fissue-112342-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Fissue-112342-1.stderr?ref=42cf6da6af4dd738bacf851fc6361a8e3dfb8138", "patch": "@@ -0,0 +1,64 @@\n+note: doc comments are ignored in matcher position\n+  --> $DIR/issue-112342-1.rs:6:13\n+   |\n+LL |             ///\n+   |             ^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-112342-1.rs:5:10\n+   |\n+LL |           $(\n+   |  __________^\n+LL | |             ///\n+LL | |         )*\n+   | |_________^\n+\n+note: doc comments are ignored in matcher position\n+  --> $DIR/issue-112342-1.rs:17:13\n+   |\n+LL |             ///\n+   |             ^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-112342-1.rs:16:10\n+   |\n+LL |           $(\n+   |  __________^\n+LL | |             ///\n+LL | |         )+\n+   | |_________^\n+\n+note: doc comments are ignored in matcher position\n+  --> $DIR/issue-112342-1.rs:28:13\n+   |\n+LL |             ///\n+   |             ^^^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-112342-1.rs:27:10\n+   |\n+LL |           $(\n+   |  __________^\n+LL | |             ///\n+LL | |         )?\n+   | |_________^\n+\n+note: doc comments are ignored in matcher position\n+  --> $DIR/issue-112342-1.rs:40:13\n+   |\n+LL | /             ///\n+LL | |             ///\n+   | |_______________^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-112342-1.rs:39:10\n+   |\n+LL |           $(\n+   |  __________^\n+LL | |             ///\n+LL | |             ///\n+LL | |         )*\n+   | |_________^\n+\n+error: aborting due to 4 previous errors\n+"}, {"sha": "e797aff94d2f3e69e7a613ca4c8a2dcc91b9e2e9", "filename": "tests/ui/macros/issue-112342-2.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/42cf6da6af4dd738bacf851fc6361a8e3dfb8138/tests%2Fui%2Fmacros%2Fissue-112342-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42cf6da6af4dd738bacf851fc6361a8e3dfb8138/tests%2Fui%2Fmacros%2Fissue-112342-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Fissue-112342-2.rs?ref=42cf6da6af4dd738bacf851fc6361a8e3dfb8138", "patch": "@@ -0,0 +1,39 @@\n+// check-pass\n+\n+// same as #95267, ignore doc comment although it's a bug.\n+\n+macro_rules! m1 {\n+    (\n+        $(\n+            ///\n+            $expr: expr,\n+        )*\n+    ) => {};\n+}\n+\n+m1! {}\n+\n+macro_rules! m2 {\n+    (\n+        $(\n+            ///\n+            $expr: expr,\n+            ///\n+        )*\n+    ) => {};\n+}\n+\n+m2! {}\n+\n+macro_rules! m3 {\n+    (\n+        $(\n+            ///\n+            $tt: tt,\n+        )*\n+    ) => {};\n+}\n+\n+m3! {}\n+\n+fn main() {}"}, {"sha": "8c1b6f9471bcea6b61415b08660fb9cbcb7a1ae7", "filename": "tests/ui/macros/issue-112342-2.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/42cf6da6af4dd738bacf851fc6361a8e3dfb8138/tests%2Fui%2Fmacros%2Fissue-112342-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/42cf6da6af4dd738bacf851fc6361a8e3dfb8138/tests%2Fui%2Fmacros%2Fissue-112342-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Fissue-112342-2.stderr?ref=42cf6da6af4dd738bacf851fc6361a8e3dfb8138", "patch": "@@ -0,0 +1,24 @@\n+note: doc comments are ignored in matcher position\n+  --> $DIR/issue-112342-2.rs:8:13\n+   |\n+LL |             ///\n+   |             ^^^\n+\n+note: doc comments are ignored in matcher position\n+  --> $DIR/issue-112342-2.rs:19:13\n+   |\n+LL |             ///\n+   |             ^^^\n+\n+note: doc comments are ignored in matcher position\n+  --> $DIR/issue-112342-2.rs:21:13\n+   |\n+LL |             ///\n+   |             ^^^\n+\n+note: doc comments are ignored in matcher position\n+  --> $DIR/issue-112342-2.rs:31:13\n+   |\n+LL |             ///\n+   |             ^^^\n+"}]}