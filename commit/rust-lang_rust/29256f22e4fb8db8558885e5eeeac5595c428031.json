{"sha": "29256f22e4fb8db8558885e5eeeac5595c428031", "node_id": "C_kwDOAAsO6NoAKDI5MjU2ZjIyZTRmYjhkYjg1NTg4ODVlNWVlZWFjNTU5NWM0MjgwMzE", "commit": {"author": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-04T02:15:14Z"}, "committer": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-06T07:49:23Z"}, "message": "Make non-hash an external lib", "tree": {"sha": "750064c54e49bd7086821ca853993f684e89a85c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/750064c54e49bd7086821ca853993f684e89a85c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29256f22e4fb8db8558885e5eeeac5595c428031", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29256f22e4fb8db8558885e5eeeac5595c428031", "html_url": "https://github.com/rust-lang/rust/commit/29256f22e4fb8db8558885e5eeeac5595c428031", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29256f22e4fb8db8558885e5eeeac5595c428031/comments", "author": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4966c92829f945d3846eb0ca0e240ac7f7c8c60", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4966c92829f945d3846eb0ca0e240ac7f7c8c60", "html_url": "https://github.com/rust-lang/rust/commit/a4966c92829f945d3846eb0ca0e240ac7f7c8c60"}], "stats": {"total": 47, "additions": 42, "deletions": 5}, "files": [{"sha": "d0f074271655426c8222e63dcdf0add8d6d323ec", "filename": "Cargo.lock", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/29256f22e4fb8db8558885e5eeeac5595c428031/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/29256f22e4fb8db8558885e5eeeac5595c428031/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=29256f22e4fb8db8558885e5eeeac5595c428031", "patch": "@@ -1054,6 +1054,10 @@ dependencies = [\n  \"static_assertions\",\n ]\n \n+[[package]]\n+name = \"non-hash\"\n+version = \"0.1.0\"\n+\n [[package]]\n name = \"notify\"\n version = \"5.1.0\"\n@@ -1693,6 +1697,7 @@ dependencies = [\n  \"backtrace\",\n  \"libc\",\n  \"miow\",\n+ \"non-hash\",\n  \"winapi\",\n ]\n "}, {"sha": "7be9ddaffffbfb3e54e18684c6fc650db39c23f0", "filename": "crates/stdx/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/29256f22e4fb8db8558885e5eeeac5595c428031/crates%2Fstdx%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/29256f22e4fb8db8558885e5eeeac5595c428031/crates%2Fstdx%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fstdx%2FCargo.toml?ref=29256f22e4fb8db8558885e5eeeac5595c428031", "patch": "@@ -15,6 +15,7 @@ doctest = false\n libc = \"0.2.135\"\n backtrace = { version = \"0.3.65\", optional = true }\n always-assert = { version = \"0.1.2\", features = [\"log\"] }\n+non-hash = { version = \"0.1.0\", path = \"../../lib/non-hash\" }\n # Think twice before adding anything here\n \n [target.'cfg(windows)'.dependencies]"}, {"sha": "c8f1d8bca119e09e53c4a0b3ef81e2f5c1100a65", "filename": "crates/stdx/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29256f22e4fb8db8558885e5eeeac5595c428031/crates%2Fstdx%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29256f22e4fb8db8558885e5eeeac5595c428031/crates%2Fstdx%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fstdx%2Fsrc%2Flib.rs?ref=29256f22e4fb8db8558885e5eeeac5595c428031", "patch": "@@ -7,13 +7,13 @@ use std::process::Command;\n use std::{cmp::Ordering, ops, time::Instant};\n \n mod macros;\n-pub mod hash;\n pub mod process;\n pub mod panic_context;\n pub mod non_empty_vec;\n pub mod rand;\n \n pub use always_assert::{always, never};\n+pub use non_hash as hash;\n \n #[inline(always)]\n pub fn is_ci() -> bool {"}, {"sha": "27b35a76295224d8d4de13c9e22d4d777ed10f86", "filename": "lib/non-hash/Cargo.toml", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/29256f22e4fb8db8558885e5eeeac5595c428031/lib%2Fnon-hash%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/29256f22e4fb8db8558885e5eeeac5595c428031/lib%2Fnon-hash%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Fnon-hash%2FCargo.toml?ref=29256f22e4fb8db8558885e5eeeac5595c428031", "patch": "@@ -0,0 +1,7 @@\n+[package]\n+name = \"non-hash\"\n+version = \"0.1.0\"\n+description = \"A non-hashing `Hasher` implementation.\"\n+license = \"MIT OR Apache-2.0\"\n+repository = \"https://github.com/rust-lang/rust-analyzer/tree/master/lib/non-hash\"\n+edition = \"2021\""}, {"sha": "af03f3d7920c57ddeb1f7921e137a143ddbb47b6", "filename": "lib/non-hash/src/lib.rs", "status": "renamed", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/29256f22e4fb8db8558885e5eeeac5595c428031/lib%2Fnon-hash%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29256f22e4fb8db8558885e5eeeac5595c428031/lib%2Fnon-hash%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Fnon-hash%2Fsrc%2Flib.rs?ref=29256f22e4fb8db8558885e5eeeac5595c428031", "patch": "@@ -1,25 +1,49 @@\n-//! A none hashing [`Hasher`] implementation.\n+//! A non-hashing [`Hasher`] implementation.\n+\n+#![deny(clippy::pedantic, missing_debug_implementations, missing_docs, rust_2018_idioms)]\n+\n use std::{\n     hash::{BuildHasher, Hasher},\n     marker::PhantomData,\n };\n \n+/// A [`std::collections::HashMap`] with [`NoHashHasherBuilder`].\n pub type NoHashHashMap<K, V> = std::collections::HashMap<K, V, NoHashHasherBuilder<K>>;\n+\n+/// A [`std::collections::HashSet`] with [`NoHashHasherBuilder`].\n pub type NoHashHashSet<K> = std::collections::HashSet<K, NoHashHasherBuilder<K>>;\n \n+/// A hasher builder for [`NoHashHasher`].\n #[derive(Copy, Clone, Debug, PartialEq, Eq)]\n pub struct NoHashHasherBuilder<T>(PhantomData<T>);\n \n impl<T> Default for NoHashHasherBuilder<T> {\n     fn default() -> Self {\n-        Self(Default::default())\n+        Self(PhantomData)\n     }\n }\n \n+/// Types for which an acceptable hash function is to return itself.\n+///\n+/// This trait is implemented by sufficiently-small integer types. It should only be implemented for\n+/// foreign types that are newtypes of these types. If it is implemented on more complex types,\n+/// hashing will panic.\n pub trait NoHashHashable {}\n-impl NoHashHashable for usize {}\n+\n+impl NoHashHashable for u8 {}\n+impl NoHashHashable for u16 {}\n impl NoHashHashable for u32 {}\n+impl NoHashHashable for u64 {}\n+impl NoHashHashable for usize {}\n+\n+impl NoHashHashable for i8 {}\n+impl NoHashHashable for i16 {}\n+impl NoHashHashable for i32 {}\n+impl NoHashHashable for i64 {}\n+impl NoHashHashable for isize {}\n \n+/// A hasher for [`NoHashHashable`] types.\n+#[derive(Debug)]\n pub struct NoHashHasher(u64);\n \n impl<T: NoHashHashable> BuildHasher for NoHashHasherBuilder<T> {\n@@ -35,7 +59,7 @@ impl Hasher for NoHashHasher {\n     }\n \n     fn write(&mut self, _: &[u8]) {\n-        unimplemented!(\"NoHashHasher should only be used for hashing primitive integers\")\n+        unimplemented!(\"NoHashHasher should only be used for hashing sufficiently-small integer types and their newtypes\")\n     }\n \n     fn write_u8(&mut self, i: u8) {", "previous_filename": "crates/stdx/src/hash.rs"}]}