{"sha": "1761b39fb0da5a9b1ebd1b78bf6bc7109c63caf9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3NjFiMzlmYjBkYTVhOWIxZWJkMWI3OGJmNmJjNzEwOWM2M2NhZjk=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-19T17:12:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-19T17:12:09Z"}, "message": "Rollup merge of #69142 - ehuss:linkcheck-script, r=alexcrichton\n\nAdd shared script for linkchecking books.\n\nThis adds a script that can be used on each book's CI to ensure they don't break local links.\n\nI've been running something similar on the reference CI.  The intent here is to add this to all the external books' CI scripts. This will help avoid dealing with broken links when updating submodules on rust-lang/rust.", "tree": {"sha": "4ba9b79c1ee7bd8d8b10cfc115580cad374849a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ba9b79c1ee7bd8d8b10cfc115580cad374849a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1761b39fb0da5a9b1ebd1b78bf6bc7109c63caf9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeTWxpCRBK7hj4Ov3rIwAAdHIIAApgFzgBJYafORsWeQ7RuZFX\n7wwEr1tKvg8OePbiCgD1atL1ymKLYyJD8+Qu+pH6LPdjLZfCM1KPtPBYwxKouRoc\nelIYGe0WewN3YKjYWGQYNMIeoVFIJGrPCeUTRtTVBvLrq3gLQubC2H6cTMcO+l1a\nx3tF3d4y1ihtTVv5odYY4Cy95X0viR255hMsHxMzEk0d+r7PQhjqt6d6L1Thb3KB\nDzDz0lUhC3zR2AzFLSb2PjVA4r8D2o+CELv1BrczwHlZStEXmxD5cXEns5RT2ywt\nFE3g/VfFzi1ERY45LhBwAl8ppGLdXvoIpfQLYaUDlGFIXwSZyGn6gLazvASjrdI=\n=uv/B\n-----END PGP SIGNATURE-----\n", "payload": "tree 4ba9b79c1ee7bd8d8b10cfc115580cad374849a2\nparent 2f914bf3278fa855ec0efa79698b8a481ff81b68\nparent 4810c4712f9edc4c378142ace1b868fc2fd1eeea\nauthor Dylan DPC <dylan.dpc@gmail.com> 1582132329 +0100\ncommitter GitHub <noreply@github.com> 1582132329 +0100\n\nRollup merge of #69142 - ehuss:linkcheck-script, r=alexcrichton\n\nAdd shared script for linkchecking books.\n\nThis adds a script that can be used on each book's CI to ensure they don't break local links.\n\nI've been running something similar on the reference CI.  The intent here is to add this to all the external books' CI scripts. This will help avoid dealing with broken links when updating submodules on rust-lang/rust.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1761b39fb0da5a9b1ebd1b78bf6bc7109c63caf9", "html_url": "https://github.com/rust-lang/rust/commit/1761b39fb0da5a9b1ebd1b78bf6bc7109c63caf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1761b39fb0da5a9b1ebd1b78bf6bc7109c63caf9/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f914bf3278fa855ec0efa79698b8a481ff81b68", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f914bf3278fa855ec0efa79698b8a481ff81b68", "html_url": "https://github.com/rust-lang/rust/commit/2f914bf3278fa855ec0efa79698b8a481ff81b68"}, {"sha": "4810c4712f9edc4c378142ace1b868fc2fd1eeea", "url": "https://api.github.com/repos/rust-lang/rust/commits/4810c4712f9edc4c378142ace1b868fc2fd1eeea", "html_url": "https://github.com/rust-lang/rust/commit/4810c4712f9edc4c378142ace1b868fc2fd1eeea"}], "stats": {"total": 113, "additions": 113, "deletions": 0}, "files": [{"sha": "bbccc17e494c88325b181dc8ebe3d3ef9e831690", "filename": "src/tools/linkchecker/linkcheck.sh", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/rust-lang/rust/blob/1761b39fb0da5a9b1ebd1b78bf6bc7109c63caf9/src%2Ftools%2Flinkchecker%2Flinkcheck.sh", "raw_url": "https://github.com/rust-lang/rust/raw/1761b39fb0da5a9b1ebd1b78bf6bc7109c63caf9/src%2Ftools%2Flinkchecker%2Flinkcheck.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flinkchecker%2Flinkcheck.sh?ref=1761b39fb0da5a9b1ebd1b78bf6bc7109c63caf9", "patch": "@@ -0,0 +1,113 @@\n+#!/bin/sh\n+#\n+# This is a script that can be used in each book's CI to validate links using\n+# the same tool as rust-lang/rust.\n+#\n+# This requires the rust-docs rustup component to be installed in the nightly\n+# toolchain.\n+#\n+# Usage:\n+#   ./linkcheck.sh <name-of-book>\n+#\n+# Options:\n+#\n+# -i        \"Iterative\" mode. The script will not clean up after it is done so\n+#           you can inspect the result, and re-run more quickly.\n+#\n+# --all     Check all books. This can help make sure you don't break links\n+#           from other books into your book.\n+\n+set -e\n+\n+if [ ! -f book.toml ] && [ ! -f src/SUMMARY.md ]\n+then\n+    echo \"Run command in root directory of the book.\"\n+    exit 1\n+fi\n+\n+html_dir=\"$(rustc +nightly --print sysroot)/share/doc/rust/html\"\n+\n+if [ ! -d \"$html_dir\" ]\n+then\n+    echo \"HTML docs are missing from sysroot: $html_dir\"\n+    echo \"Make sure the nightly rust-docs rustup component is installed.\"\n+    exit 1\n+fi\n+\n+book_name=\"\"\n+# Iterative will avoid cleaning up, so you can quickly run it repeatedly.\n+iterative=0\n+# If \"1\", test all books, else only this book.\n+all_books=0\n+\n+while [ \"$1\" != \"\" ]\n+do\n+    case \"$1\" in\n+        -i)\n+            iterative=1\n+            ;;\n+        --all)\n+            all_books=1\n+            ;;\n+        *)\n+            if [ -n \"$book_name\" ]\n+            then\n+                echo \"only one argument allowed\"\n+                exit 1\n+            fi\n+            book_name=\"$1\"\n+            ;;\n+    esac\n+    shift\n+done\n+\n+if [ -z \"$book_name\" ]\n+then\n+    echo \"usage: $0 <name-of-book>\"\n+    exit 1\n+fi\n+\n+if [ ! -d \"$html_dir/$book_name\" ]\n+then\n+    echo \"book name \\\"$book_name\\\" not found in sysroot \\\"$html_dir\\\"\"\n+    exit 1\n+fi\n+\n+if [ \"$iterative\" = \"0\" ]\n+then\n+    echo \"Cleaning old directories...\"\n+    rm -rf linkcheck linkchecker\n+fi\n+\n+if [ ! -e \"linkchecker/main.rs\" ] || [ \"$iterative\" = \"0\" ]\n+then\n+    echo \"Downloading linkchecker source...\"\n+    mkdir linkchecker\n+    curl -o linkchecker/Cargo.toml \\\n+        https://raw.githubusercontent.com/rust-lang/rust/master/src/tools/linkchecker/Cargo.toml\n+    curl -o linkchecker/main.rs \\\n+        https://raw.githubusercontent.com/rust-lang/rust/master/src/tools/linkchecker/main.rs\n+fi\n+\n+echo \"Building book \\\"$book_name\\\"...\"\n+mdbook build\n+\n+cp -R \"$html_dir\" linkcheck\n+rm -rf \"linkcheck/$book_name\"\n+cp -R book \"linkcheck/$book_name\"\n+\n+if [ \"$all_books\" = \"1\" ]\n+then\n+    check_path=\"linkcheck\"\n+else\n+    check_path=\"linkcheck/$book_name\"\n+fi\n+echo \"Running linkchecker on \\\"$check_path\\\"...\"\n+cargo run --manifest-path=linkchecker/Cargo.toml -- \"$check_path\"\n+\n+if [ \"$iterative\" = \"0\" ]\n+then\n+    rm -rf linkcheck linkchecker\n+fi\n+\n+echo \"Link check completed successfully!\""}]}