{"sha": "daafeb35b731a599fc8b6c4cf37b81f838dae319", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYWZlYjM1YjczMWE1OTlmYzhiNmM0Y2YzN2I4MWY4MzhkYWUzMTk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-09-17T06:58:51Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-09-17T06:58:51Z"}, "message": "document Miri error categories", "tree": {"sha": "3845a67e0f8351aacbfe809e65c5bbfef05f217f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3845a67e0f8351aacbfe809e65c5bbfef05f217f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/daafeb35b731a599fc8b6c4cf37b81f838dae319", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/daafeb35b731a599fc8b6c4cf37b81f838dae319", "html_url": "https://github.com/rust-lang/rust/commit/daafeb35b731a599fc8b6c4cf37b81f838dae319", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/daafeb35b731a599fc8b6c4cf37b81f838dae319/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5670d048c0f88af9976b5505c7853b23dd06770d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5670d048c0f88af9976b5505c7853b23dd06770d", "html_url": "https://github.com/rust-lang/rust/commit/5670d048c0f88af9976b5505c7853b23dd06770d"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "2975944c7fba7b927ff260d021784cde4b6b2a85", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/daafeb35b731a599fc8b6c4cf37b81f838dae319/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daafeb35b731a599fc8b6c4cf37b81f838dae319/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=daafeb35b731a599fc8b6c4cf37b81f838dae319", "patch": "@@ -313,6 +313,9 @@ impl<O: fmt::Debug> fmt::Debug for PanicInfo<O> {\n     }\n }\n \n+/// Error information for when the program we executed turned out not to actually be a valid\n+/// program. This cannot happen in stand-alone Miri, but it can happen during CTFE/ConstProp\n+/// where we work on generic code or execution does not have all information available.\n #[derive(Clone, RustcEncodable, RustcDecodable, HashStable)]\n pub enum InvalidProgramInfo<'tcx> {\n     /// Resolution can fail if we are in a too generic context.\n@@ -342,6 +345,7 @@ impl fmt::Debug for InvalidProgramInfo<'tcx> {\n     }\n }\n \n+/// Error information for when the program caused Undefined Behavior.\n #[derive(Clone, RustcEncodable, RustcDecodable, HashStable)]\n pub enum UndefinedBehaviorInfo {\n     /// Free-form case. Only for errors that are never caught!\n@@ -364,12 +368,19 @@ impl fmt::Debug for UndefinedBehaviorInfo {\n     }\n }\n \n+/// Error information for when the program did something that might (or might not) be correct\n+/// to do according to the Rust spec, but due to limitations in the interpreter, the\n+/// operation could not be carried out. These limitations can differ between CTFE and the\n+/// Miri engine, e.g., CTFE does not support casting pointers to \"real\" integers.\n+///\n+/// Currently, we also use this as fall-back error kind for errors that have not been\n+/// categorized yet.\n #[derive(Clone, RustcEncodable, RustcDecodable, HashStable)]\n pub enum UnsupportedOpInfo<'tcx> {\n     /// Free-form case. Only for errors that are never caught!\n     Unsupported(String),\n \n-    // -- Everything below is not classified yet --\n+    // -- Everything below is not categorized yet --\n     FunctionAbiMismatch(Abi, Abi),\n     FunctionArgMismatch(Ty<'tcx>, Ty<'tcx>),\n     FunctionRetMismatch(Ty<'tcx>, Ty<'tcx>),\n@@ -536,6 +547,8 @@ impl fmt::Debug for UnsupportedOpInfo<'tcx> {\n     }\n }\n \n+/// Error information for when the program exhausted the resources granted to it\n+/// by the interpreter.\n #[derive(Clone, RustcEncodable, RustcDecodable, HashStable)]\n pub enum ResourceExhaustionInfo {\n     /// The stack grew too big."}]}