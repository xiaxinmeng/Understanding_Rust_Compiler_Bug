{"sha": "4bb65e1c79a79fadce297a41d15003c82cabf61b", "node_id": "C_kwDOAAsO6NoAKDRiYjY1ZTFjNzlhNzlmYWRjZTI5N2E0MWQxNTAwM2M4MmNhYmY2MWI", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-12-16T13:38:54Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-12-16T13:38:54Z"}, "message": "Fix default_method_body_is_const when used across crates", "tree": {"sha": "90520b0349e83f06d95cc093ce34b140539b3a1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90520b0349e83f06d95cc093ce34b140539b3a1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bb65e1c79a79fadce297a41d15003c82cabf61b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3RQPHNISvvEnSKtjbQF6ltjmwvkFAmG7QW4ACgkQbQF6ltjm\nwvnoVQ/+MnhKU3VmorJfEdtjy3VORQjBj5D40QdSsxS5W4QANViNxdmeNL3opgBT\nUVAUlDJXZV6hbYs4yYoAOKSgauaTVmn2QzYRvMF0A2rJctrDn2PD6gWrwLv5oYOX\nerM6/BHgOwbLPziS6hUtY1ExLs775lQxTTqTDj/hLWLjL13OSaoPXkf6+sjRGlIc\nJ5npcSX0Hql1jWU8Mk2QW2FpUI/hVitRss1StAGo44Jum6TTBYMqLx+ldzAUbvYu\noEsWKYgRmU70dTgBzzDEH6YwMeXGd0xkx8xN191trzky0HTDXNNOhvhAijR20P/o\nFPyIZXWkKh5mc+PnJJ2QYo22hpY7ZzVW3J6mtp/FfNtQfb65AiJ2C2YcGmKwaUBB\nJovhrcM3+G+/zKZ7pG7whh91JdmdnR8RndeibTNsYOU0FYMk7X1MBmvjU2kw7BBK\nkOsu6Dy0lIUaa4FBklt1FsjJjPQRtThxzFMTpAuHSE0TZcqIeynUbhjbdo3UsL0W\n7jydJDfifgvIALBavEV0l7K+z5DAAdfKHgBgD5BAumrqAXSOJK6heLFTvCLVM+vj\nFor4QzJHP8udqiqrRd336rcWs8YyuiiyobqHMx/MMqfJ1EqAwN/cVPM5BBblzmJz\n+jxtk/L7Z30S6Lakc5VaoMJ7hl8RR+ADbWMzoktRWHQC0LaTt1w=\n=42Jv\n-----END PGP SIGNATURE-----", "payload": "tree 90520b0349e83f06d95cc093ce34b140539b3a1a\nparent df89fd2063aaa060c72c81254db0b930ff379e9a\nauthor Deadbeef <ent3rm4n@gmail.com> 1639661934 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1639661934 +0800\n\nFix default_method_body_is_const when used across crates\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bb65e1c79a79fadce297a41d15003c82cabf61b", "html_url": "https://github.com/rust-lang/rust/commit/4bb65e1c79a79fadce297a41d15003c82cabf61b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bb65e1c79a79fadce297a41d15003c82cabf61b/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df89fd2063aaa060c72c81254db0b930ff379e9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/df89fd2063aaa060c72c81254db0b930ff379e9a", "html_url": "https://github.com/rust-lang/rust/commit/df89fd2063aaa060c72c81254db0b930ff379e9a"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "75676389df719c3295602bc24d2aeae07fe25ee0", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4bb65e1c79a79fadce297a41d15003c82cabf61b/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bb65e1c79a79fadce297a41d15003c82cabf61b/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=4bb65e1c79a79fadce297a41d15003c82cabf61b", "patch": "@@ -869,8 +869,9 @@ fn should_encode_mir(tcx: TyCtxt<'_>, def_id: LocalDefId) -> (bool, bool) {\n             let needs_inline = (generics.requires_monomorphization(tcx)\n                 || tcx.codegen_fn_attrs(def_id).requests_inline())\n                 && tcx.sess.opts.output_types.should_codegen();\n-            // Only check the presence of the `const` modifier.\n-            let is_const_fn = tcx.is_const_fn_raw(def_id.to_def_id());\n+            // The function has a `const` modifier or is annotated with `default_method_body_is_const`.\n+            let is_const_fn = tcx.is_const_fn_raw(def_id.to_def_id())\n+                || tcx.has_attr(def_id.to_def_id(), sym::default_method_body_is_const);\n             let always_encode_mir = tcx.sess.opts.debugging_opts.always_encode_mir;\n             (is_const_fn, needs_inline || always_encode_mir)\n         }"}, {"sha": "2d049277d7fcf44e1950d2e0fd9804e98f20f1c4", "filename": "src/test/ui/rfc-2632-const-trait-impl/auxiliary/cross-crate.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4bb65e1c79a79fadce297a41d15003c82cabf61b/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fauxiliary%2Fcross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bb65e1c79a79fadce297a41d15003c82cabf61b/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fauxiliary%2Fcross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fauxiliary%2Fcross-crate.rs?ref=4bb65e1c79a79fadce297a41d15003c82cabf61b", "patch": "@@ -1,6 +1,9 @@\n+#![feature(const_fn_trait_bound)]\n #![feature(const_trait_impl)]\n \n pub trait MyTrait {\n+    #[default_method_body_is_const]\n+    fn defaulted_func(&self) {}\n     fn func(self);\n }\n "}, {"sha": "c0f90c116e459d09a77afcbe9ab24f0e90790982", "filename": "src/test/ui/rfc-2632-const-trait-impl/cross-crate-default-method-body-is-const.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4bb65e1c79a79fadce297a41d15003c82cabf61b/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate-default-method-body-is-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bb65e1c79a79fadce297a41d15003c82cabf61b/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate-default-method-body-is-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate-default-method-body-is-const.rs?ref=4bb65e1c79a79fadce297a41d15003c82cabf61b", "patch": "@@ -0,0 +1,18 @@\n+// This tests that `default_method_body_is_const` methods can\n+// be called from a const context when used across crates.\n+//\n+// check-pass\n+\n+#![feature(const_trait_impl)]\n+\n+// aux-build: cross-crate.rs\n+extern crate cross_crate;\n+\n+use cross_crate::*;\n+\n+const _: () = {\n+    Const.func();\n+    Const.defaulted_func();\n+};\n+\n+fn main() {}"}]}