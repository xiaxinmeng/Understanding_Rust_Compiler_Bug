{"sha": "8009ccc27d35a0886ef61ef804666a284ae5c114", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwMDljY2MyN2QzNWEwODg2ZWY2MWVmODA0NjY2YTI4NGFlNWMxMTQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-19T08:34:25Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-19T08:34:25Z"}, "message": "minor: improve readability", "tree": {"sha": "5907f69d520bac27eed8f5d7140680bbc92cb2fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5907f69d520bac27eed8f5d7140680bbc92cb2fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8009ccc27d35a0886ef61ef804666a284ae5c114", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8009ccc27d35a0886ef61ef804666a284ae5c114", "html_url": "https://github.com/rust-lang/rust/commit/8009ccc27d35a0886ef61ef804666a284ae5c114", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8009ccc27d35a0886ef61ef804666a284ae5c114/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25adc5e9f01885e71bf065afd5e5b8cdc823876c", "url": "https://api.github.com/repos/rust-lang/rust/commits/25adc5e9f01885e71bf065afd5e5b8cdc823876c", "html_url": "https://github.com/rust-lang/rust/commit/25adc5e9f01885e71bf065afd5e5b8cdc823876c"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "3b9444a6ff2b8e4fd1ddb94f79c43cee283b0524", "filename": "crates/parser/src/grammar/generic_args.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8009ccc27d35a0886ef61ef804666a284ae5c114/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8009ccc27d35a0886ef61ef804666a284ae5c114/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs?ref=8009ccc27d35a0886ef61ef804666a284ae5c114", "patch": "@@ -27,11 +27,7 @@ pub(super) fn opt_generic_arg_list(p: &mut Parser, colon_colon_required: bool) {\n // type A = B<'static, i32, 1, { 2 }, Item=u64, true, false>;\n fn generic_arg(p: &mut Parser) {\n     match p.current() {\n-        LIFETIME_IDENT => {\n-            let m = p.start();\n-            lifetime(p);\n-            m.complete(p, LIFETIME_ARG);\n-        }\n+        LIFETIME_IDENT => lifetime_arg(p),\n         // test associated_type_bounds\n         // fn print_all<T: Iterator<Item, Item::Item, Item::<true>, Item: Display, Item<'a> = Item>>(printables: T) {}\n         IDENT if [T![<], T![=], T![:]].contains(&p.nth(1)) => {\n@@ -83,14 +79,16 @@ fn generic_arg(p: &mut Parser) {\n         // fn f() { S::<-1> }\n         T!['{'] | T![true] | T![false] | T![-] => const_arg(p),\n         k if k.is_literal() => const_arg(p),\n-        _ => {\n-            let m = p.start();\n-            types::type_(p);\n-            m.complete(p, TYPE_ARG);\n-        }\n+        _ => type_arg(p),\n     }\n }\n \n+fn lifetime_arg(p: &mut Parser) {\n+    let m = p.start();\n+    lifetime(p);\n+    m.complete(p, LIFETIME_ARG);\n+}\n+\n pub(super) fn const_arg(p: &mut Parser) {\n     let m = p.start();\n     match p.current() {\n@@ -121,3 +119,9 @@ pub(super) fn const_arg(p: &mut Parser) {\n         }\n     }\n }\n+\n+fn type_arg(p: &mut Parser) {\n+    let m = p.start();\n+    types::type_(p);\n+    m.complete(p, TYPE_ARG);\n+}"}]}