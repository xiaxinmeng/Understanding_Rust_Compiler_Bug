{"sha": "b79de6b76cbdcb8f2a8e44433d262c3389f28058", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3OWRlNmI3NmNiZGNiOGYyYThlNDQ0MzNkMjYyYzMzODlmMjgwNTg=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-02T22:38:24Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-02T22:38:32Z"}, "message": "Typecheck the box and deref unops properly.", "tree": {"sha": "2aa21030462e60e187b61b4276d3dffdcf4472d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2aa21030462e60e187b61b4276d3dffdcf4472d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b79de6b76cbdcb8f2a8e44433d262c3389f28058", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b79de6b76cbdcb8f2a8e44433d262c3389f28058", "html_url": "https://github.com/rust-lang/rust/commit/b79de6b76cbdcb8f2a8e44433d262c3389f28058", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b79de6b76cbdcb8f2a8e44433d262c3389f28058/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "376b35e6186d68e431b32b6632bf52f5433ab4d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/376b35e6186d68e431b32b6632bf52f5433ab4d7", "html_url": "https://github.com/rust-lang/rust/commit/376b35e6186d68e431b32b6632bf52f5433ab4d7"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "7f427c323187563e696e2152999f0329c8d145de", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b79de6b76cbdcb8f2a8e44433d262c3389f28058/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b79de6b76cbdcb8f2a8e44433d262c3389f28058/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=b79de6b76cbdcb8f2a8e44433d262c3389f28058", "patch": "@@ -1223,7 +1223,23 @@ fn check_expr(&fn_ctxt fcx, @ast.expr expr) -> @ast.expr {\n         case (ast.expr_unary(?unop, ?oper, _)) {\n             auto oper_1 = check_expr(fcx, oper);\n             auto oper_t = expr_ty(oper_1);\n-            // FIXME: Unops have a bit more subtlety than this.\n+            alt (unop) {\n+                case (ast.box) { oper_t = plain_ty(ty_box(oper_t)); }\n+                case (ast.deref) {\n+                    alt (oper_t.struct) {\n+                        case (ty_box(?inner_t)) {\n+                            oper_t = inner_t;\n+                        }\n+                        case (_) {\n+                            fcx.ccx.sess.span_err\n+                                (expr.span,\n+                                 \"dereferencing non-box type: \"\n+                                 + ty_to_str(oper_t));\n+                        }\n+                    }\n+                }\n+                case (_) { /* fall through */ }\n+            }\n             ret @fold.respan[ast.expr_](expr.span,\n                                         ast.expr_unary(unop, oper_1,\n                                                        ast.ann_type(oper_t)));"}]}