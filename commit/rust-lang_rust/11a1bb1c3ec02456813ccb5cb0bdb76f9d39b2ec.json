{"sha": "11a1bb1c3ec02456813ccb5cb0bdb76f9d39b2ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExYTFiYjFjM2VjMDI0NTY4MTNjY2I1Y2IwYmRiNzZmOWQzOWIyZWM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-19T15:41:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-19T15:41:56Z"}, "message": "Inline trivial function", "tree": {"sha": "face1eb5c4a3cf3817b6cefab96f94663f3b792f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/face1eb5c4a3cf3817b6cefab96f94663f3b792f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11a1bb1c3ec02456813ccb5cb0bdb76f9d39b2ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11a1bb1c3ec02456813ccb5cb0bdb76f9d39b2ec", "html_url": "https://github.com/rust-lang/rust/commit/11a1bb1c3ec02456813ccb5cb0bdb76f9d39b2ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11a1bb1c3ec02456813ccb5cb0bdb76f9d39b2ec/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9778c6d73c1ae609d9068a5aeb3e225d8154f59", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9778c6d73c1ae609d9068a5aeb3e225d8154f59", "html_url": "https://github.com/rust-lang/rust/commit/a9778c6d73c1ae609d9068a5aeb3e225d8154f59"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "ad49f8e1713e3f63e4ae40d1191e4e1d7e11a174", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/11a1bb1c3ec02456813ccb5cb0bdb76f9d39b2ec/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11a1bb1c3ec02456813ccb5cb0bdb76f9d39b2ec/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=11a1bb1c3ec02456813ccb5cb0bdb76f9d39b2ec", "patch": "@@ -454,13 +454,6 @@ fn macro_call_range(macro_call: &ast::MacroCall) -> Option<TextRange> {\n     Some(TextRange::new(range_start, range_end))\n }\n \n-fn is_possibly_unsafe(name_ref: &ast::NameRef) -> bool {\n-    match name_ref.syntax().parent() {\n-        Some(parent) => matches!(parent.kind(), FIELD_EXPR | RECORD_PAT_FIELD),\n-        None => false,\n-    }\n-}\n-\n fn highlight_element(\n     sema: &Semantics<RootDatabase>,\n     bindings_shadow_count: &mut FxHashMap<Name, u32>,\n@@ -526,7 +519,12 @@ fn highlight_element(\n                                     binding_hash = Some(calc_binding_hash(&name, *shadow_count))\n                                 }\n                             };\n-                            let possibly_unsafe = is_possibly_unsafe(&name_ref);\n+                            let possibly_unsafe = match name_ref.syntax().parent() {\n+                                Some(parent) => {\n+                                    matches!(parent.kind(), FIELD_EXPR | RECORD_PAT_FIELD)\n+                                }\n+                                None => false,\n+                            };\n                             highlight_def(sema, db, def, Some(name_ref), possibly_unsafe)\n                         }\n                         NameRefClass::FieldShorthand { .. } => HighlightTag::Field.into(),"}]}