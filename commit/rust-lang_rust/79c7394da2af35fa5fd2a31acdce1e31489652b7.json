{"sha": "79c7394da2af35fa5fd2a31acdce1e31489652b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5YzczOTRkYTJhZjM1ZmE1ZmQyYTMxYWNkY2UxZTMxNDg5NjUyYjc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-13T13:48:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-13T13:48:13Z"}, "message": "Merge pull request #2820 from rust-analyzer/releases\n\nGitHub releases", "tree": {"sha": "04a8388303c1855795b4af1d0d48105845ceb4a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04a8388303c1855795b4af1d0d48105845ceb4a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79c7394da2af35fa5fd2a31acdce1e31489652b7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeHHUdCRBK7hj4Ov3rIwAAdHIIAIBm7yikVuUvaUD2WE1jNEXs\nDbchoQRWDXKNjO/1USLQHhtBE6oPg33R1MhKNFept5l0/WRFr/AIvkFmI5Ylhcea\nO1Z8ejW7JgHeai/NWR0ZRJoVMqZWxsuou2qUgk1OQwQlGpkK0C7MctJOs8pIufGj\nA0oSOB85y0IhAIYzuOw4+bywZbsvuO/DdN7KxKxLS9Y5Mg/ivRXeSO4wkYMkTDSX\nITpqdeoBX7EWPOrZc6Xt26FSJcHlb7X41CFzJ7D5OZeKOOZYSkUQnw676lAcn8sJ\nqTj8VNjw2ZYxAVKrFQ5Ekj4TtNviR09VgLRxMkHDf5CxBXqR6LRiPEp/aIyqVkI=\n=hCe2\n-----END PGP SIGNATURE-----\n", "payload": "tree 04a8388303c1855795b4af1d0d48105845ceb4a1\nparent 875352b2b64220e4e76d1aa49d51e85a46344d6a\nparent 5514ca39979659d90deef6c6830906c07b3fce56\nauthor Aleksey Kladov <aleksey.kladov@gmail.com> 1578923293 +0100\ncommitter GitHub <noreply@github.com> 1578923293 +0100\n\nMerge pull request #2820 from rust-analyzer/releases\n\nGitHub releases"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79c7394da2af35fa5fd2a31acdce1e31489652b7", "html_url": "https://github.com/rust-lang/rust/commit/79c7394da2af35fa5fd2a31acdce1e31489652b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79c7394da2af35fa5fd2a31acdce1e31489652b7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "875352b2b64220e4e76d1aa49d51e85a46344d6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/875352b2b64220e4e76d1aa49d51e85a46344d6a", "html_url": "https://github.com/rust-lang/rust/commit/875352b2b64220e4e76d1aa49d51e85a46344d6a"}, {"sha": "5514ca39979659d90deef6c6830906c07b3fce56", "url": "https://api.github.com/repos/rust-lang/rust/commits/5514ca39979659d90deef6c6830906c07b3fce56", "html_url": "https://github.com/rust-lang/rust/commit/5514ca39979659d90deef6c6830906c07b3fce56"}], "stats": {"total": 111, "additions": 98, "deletions": 13}, "files": [{"sha": "95b56cebccc6b4a02adb94104a4bc8d68a968dd9", "filename": ".github/workflows/release.yaml", "status": "modified", "additions": 98, "deletions": 13, "changes": 111, "blob_url": "https://github.com/rust-lang/rust/blob/79c7394da2af35fa5fd2a31acdce1e31489652b7/.github%2Fworkflows%2Frelease.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/79c7394da2af35fa5fd2a31acdce1e31489652b7/.github%2Fworkflows%2Frelease.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Frelease.yaml?ref=79c7394da2af35fa5fd2a31acdce1e31489652b7", "patch": "@@ -5,8 +5,8 @@ on:\n       - release\n \n jobs:\n-  rust:\n-    name: Rust\n+  build-server:\n+    name: build-server\n     runs-on: ${{ matrix.os }}\n     strategy:\n       matrix:\n@@ -35,13 +35,12 @@ jobs:\n           toolchain: stable\n           profile: minimal\n           override: true\n-          components: rustfmt, rust-src\n \n       - name: Build\n         uses: actions-rs/cargo@v1\n         with:\n           command: build\n-          args: --release --package ra_lsp_server --bin ra_lsp_server\n+          args: --package ra_lsp_server --bin ra_lsp_server --release\n \n       - name: Strip symbols\n         if: matrix.os == 'ubuntu-latest'\n@@ -50,22 +49,26 @@ jobs:\n       - name: Create distribution dir\n         run: mkdir ./dist\n \n-      - name: Copy binaries (unix)\n-        if: matrix.os != 'windows-latest'\n-        run: cp ./target/release/ra_lsp_server ./dist\n+      - name: Copy binary\n+        if: matrix.os == 'ubuntu-latest'\n+        run: cp ./target/release/ra_lsp_server ./dist/ra_lsp_server-linux\n+\n+      - name: Copy binary\n+        if: matrix.os == 'macos-latest'\n+        run: cp ./target/release/ra_lsp_server ./dist/ra_lsp_server-mac\n \n-      - name: Copy binaries (win)\n+      - name: Copy binary\n         if: matrix.os == 'windows-latest'\n-        run: copy ./target/release/ra_lsp_server.exe ./dist\n+        run: copy ./target/release/ra_lsp_server.exe ./dist/ra_lsp_server-windows.exe\n \n       - name: Upload artifacts\n         uses: actions/upload-artifact@v1\n         with:\n           name: server-${{ matrix.os }}\n           path: ./dist\n \n-  type-script:\n-    name: TypeScript\n+  build-clients:\n+    name: build-clients\n     runs-on: ubuntu-latest\n     steps:\n       - name: Checkout repository\n@@ -83,13 +86,95 @@ jobs:\n         working-directory: ./editors/code\n \n       - name: Copy vscode extension\n-        run: mkdir -p ./dist/code && cp ./editors/code/*.vsix ./dist/code/\n+        run: mkdir -p ./dist/code && cp ./editors/code/*.vsix ./dist/\n \n       - name: Copy emacs mode\n-        run: cp -R ./editors/emacs ./dist/\n+        run: cp ./editors/emacs/rust-analyzer.el ./dist/rust-analyzer.el\n \n       - name: Upload artifacts\n         uses: actions/upload-artifact@v1\n         with:\n           name: editor-plugins\n           path: ./dist\n+\n+  make-release:\n+    name: make-release\n+    runs-on: ubuntu-latest\n+    needs: ['build-server', 'build-clients']\n+    steps:\n+      - uses: actions/download-artifact@v1\n+        with:\n+          name: editor-plugins\n+          path: dist\n+      - uses: actions/download-artifact@v1\n+        with:\n+          name: server-macos-latest\n+          path: dist\n+      - uses: actions/download-artifact@v1\n+        with:\n+          name: server-ubuntu-latest\n+          path: dist\n+      - uses: actions/download-artifact@v1\n+        with:\n+          name: server-windows-latest\n+          path: dist\n+      - run: ls -all ./dist\n+\n+      - run: echo \"::set-env name=TAG::$(date --iso)\"\n+      - run: 'echo \"TAG: $TAG\"'\n+\n+      - name: Create Release\n+        id: create_release\n+        uses: actions/create-release@v1\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+        with:\n+          tag_name: ${{ env.TAG }}\n+          release_name: ${{ env.TAG }}\n+          draft: false\n+          prerelease: false\n+\n+      - uses: actions/upload-release-asset@v1.0.1\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+        with:\n+          upload_url: ${{ steps.create_release.outputs.upload_url }}\n+          asset_path: ./dist/ra_lsp_server-linux\n+          asset_name: ra_lsp_server-linux\n+          asset_content_type: application/octet-stream\n+\n+      - uses: actions/upload-release-asset@v1.0.1\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+        with:\n+          upload_url: ${{ steps.create_release.outputs.upload_url }}\n+          asset_path: ./dist/ra_lsp_server-mac\n+          asset_name: ra_lsp_server-mac\n+          asset_content_type: application/octet-stream\n+\n+      - uses: actions/upload-release-asset@v1.0.1\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+        with:\n+          upload_url: ${{ steps.create_release.outputs.upload_url }}\n+          asset_path: ./dist/ra_lsp_server-windows.exe\n+          asset_name: ra_lsp_server-windows.exe\n+          asset_content_type: application/octet-stream\n+\n+      - uses: actions/upload-release-asset@v1.0.1\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+        with:\n+          upload_url: ${{ steps.create_release.outputs.upload_url }}\n+          asset_path: ./dist/rust-analyzer-0.1.0.vsix\n+          asset_name: rust-analyzer-0.1.0.vsix\n+          asset_content_type: application/octet-stream\n+\n+      - uses: actions/upload-release-asset@v1.0.1\n+        env:\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+        with:\n+          upload_url: ${{ steps.create_release.outputs.upload_url }}\n+          asset_path: ./dist/rust-analyzer.el\n+          asset_name: rust-analyzer.el\n+          asset_content_type: text/plain"}]}