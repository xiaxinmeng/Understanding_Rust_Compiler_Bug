{"sha": "242a5cd4c673c02d817fb5cbadd5bd3ff08f10eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0MmE1Y2Q0YzY3M2MwMmQ4MTdmYjVjYmFkZDViZDNmZjA4ZjEwZWI=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-06-20T01:37:52Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-06-24T21:53:29Z"}, "message": "Allow calling GeneratorSubsts::variant_name() without substs", "tree": {"sha": "1457601d932ac3b1307bfe5aecdb7c655dddae88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1457601d932ac3b1307bfe5aecdb7c655dddae88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/242a5cd4c673c02d817fb5cbadd5bd3ff08f10eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/242a5cd4c673c02d817fb5cbadd5bd3ff08f10eb", "html_url": "https://github.com/rust-lang/rust/commit/242a5cd4c673c02d817fb5cbadd5bd3ff08f10eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/242a5cd4c673c02d817fb5cbadd5bd3ff08f10eb/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "367858aedc1e1dbee5560676c00618a386ed8e37", "url": "https://api.github.com/repos/rust-lang/rust/commits/367858aedc1e1dbee5560676c00618a386ed8e37", "html_url": "https://github.com/rust-lang/rust/commit/367858aedc1e1dbee5560676c00618a386ed8e37"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "0338aff50965847e90cde38ce166eb8535311ff1", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/242a5cd4c673c02d817fb5cbadd5bd3ff08f10eb/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/242a5cd4c673c02d817fb5cbadd5bd3ff08f10eb/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=242a5cd4c673c02d817fb5cbadd5bd3ff08f10eb", "patch": "@@ -33,9 +33,9 @@ use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use rustc_middle::mir::interpret::truncate;\n use rustc_middle::mir::{self, Field, GeneratorLayout};\n use rustc_middle::ty::layout::{self, IntegerExt, PrimitiveExt, TyAndLayout};\n-use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n+use rustc_middle::ty::subst::GenericArgKind;\n use rustc_middle::ty::Instance;\n-use rustc_middle::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n+use rustc_middle::ty::{self, AdtKind, GeneratorSubsts, ParamEnv, Ty, TyCtxt};\n use rustc_middle::{bug, span_bug};\n use rustc_session::config::{self, DebugInfo};\n use rustc_span::symbol::{Interner, Symbol};\n@@ -1381,12 +1381,11 @@ impl EnumMemberDescriptionFactory<'ll, 'tcx> {\n \n         let variant_info_for = |index: VariantIdx| match self.enum_type.kind {\n             ty::Adt(adt, _) => VariantInfo::Adt(&adt.variants[index]),\n-            ty::Generator(def_id, substs, _) => {\n+            ty::Generator(def_id, _, _) => {\n                 let (generator_layout, generator_saved_local_names) =\n                     generator_variant_info_data.as_ref().unwrap();\n                 VariantInfo::Generator {\n                     def_id,\n-                    substs,\n                     generator_layout: *generator_layout,\n                     generator_saved_local_names,\n                     variant_index: index,\n@@ -1693,7 +1692,6 @@ enum VariantInfo<'a, 'tcx> {\n     Adt(&'tcx ty::VariantDef),\n     Generator {\n         def_id: DefId,\n-        substs: SubstsRef<'tcx>,\n         generator_layout: &'tcx GeneratorLayout<'tcx>,\n         generator_saved_local_names: &'a IndexVec<mir::GeneratorSavedLocal, Option<Symbol>>,\n         variant_index: VariantIdx,\n@@ -1704,8 +1702,8 @@ impl<'tcx> VariantInfo<'_, 'tcx> {\n     fn map_struct_name<R>(&self, f: impl FnOnce(&str) -> R) -> R {\n         match self {\n             VariantInfo::Adt(variant) => f(&variant.ident.as_str()),\n-            VariantInfo::Generator { substs, variant_index, .. } => {\n-                f(&substs.as_generator().variant_name(*variant_index))\n+            VariantInfo::Generator { variant_index, .. } => {\n+                f(&GeneratorSubsts::variant_name(*variant_index))\n             }\n         }\n     }\n@@ -1900,7 +1898,7 @@ fn prepare_enum_metadata(\n                 .variant_range(enum_def_id, tcx)\n                 .map(|variant_index| {\n                     debug_assert_eq!(tcx.types.u32, substs.as_generator().discr_ty(tcx));\n-                    let name = substs.as_generator().variant_name(variant_index);\n+                    let name = GeneratorSubsts::variant_name(variant_index);\n                     unsafe {\n                         Some(llvm::LLVMRustDIBuilderCreateEnumerator(\n                             DIB(cx),"}, {"sha": "5a0da6be5980ed8d1192e63bf7eae7d189df5762", "filename": "src/librustc_codegen_llvm/type_of.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/242a5cd4c673c02d817fb5cbadd5bd3ff08f10eb/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/242a5cd4c673c02d817fb5cbadd5bd3ff08f10eb/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_of.rs?ref=242a5cd4c673c02d817fb5cbadd5bd3ff08f10eb", "patch": "@@ -70,10 +70,10 @@ fn uncached_llvm_type<'a, 'tcx>(\n                     write!(&mut name, \"::{}\", def.variants[index].ident).unwrap();\n                 }\n             }\n-            if let (&ty::Generator(_, substs, _), &Variants::Single { index })\n+            if let (&ty::Generator(_, _, _), &Variants::Single { index })\n                  = (&layout.ty.kind, &layout.variants)\n             {\n-                write!(&mut name, \"::{}\", substs.as_generator().variant_name(index)).unwrap();\n+                write!(&mut name, \"::{}\", ty::GeneratorSubsts::variant_name(index)).unwrap();\n             }\n             Some(name)\n         }"}, {"sha": "79fa06790bd4a164125629bf8ac35650f64b2669", "filename": "src/librustc_middle/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/242a5cd4c673c02d817fb5cbadd5bd3ff08f10eb/src%2Flibrustc_middle%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/242a5cd4c673c02d817fb5cbadd5bd3ff08f10eb/src%2Flibrustc_middle%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fsty.rs?ref=242a5cd4c673c02d817fb5cbadd5bd3ff08f10eb", "patch": "@@ -523,7 +523,7 @@ impl<'tcx> GeneratorSubsts<'tcx> {\n     /// Calls `f` with a reference to the name of the enumerator for the given\n     /// variant `v`.\n     #[inline]\n-    pub fn variant_name(self, v: VariantIdx) -> Cow<'static, str> {\n+    pub fn variant_name(v: VariantIdx) -> Cow<'static, str> {\n         match v.as_usize() {\n             Self::UNRESUMED => Cow::from(Self::UNRESUMED_NAME),\n             Self::RETURNED => Cow::from(Self::RETURNED_NAME),"}]}