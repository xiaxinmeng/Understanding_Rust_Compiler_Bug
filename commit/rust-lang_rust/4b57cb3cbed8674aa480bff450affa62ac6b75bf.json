{"sha": "4b57cb3cbed8674aa480bff450affa62ac6b75bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNTdjYjNjYmVkODY3NGFhNDgwYmZmNDUwYWZmYTYyYWM2Yjc1YmY=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-01-06T22:12:31Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-02-16T10:53:12Z"}, "message": "Make librustc_typeck compile.", "tree": {"sha": "0e1cb6973ca7a79faa921909ae3bfdf8612a9325", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e1cb6973ca7a79faa921909ae3bfdf8612a9325"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b57cb3cbed8674aa480bff450affa62ac6b75bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b57cb3cbed8674aa480bff450affa62ac6b75bf", "html_url": "https://github.com/rust-lang/rust/commit/4b57cb3cbed8674aa480bff450affa62ac6b75bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b57cb3cbed8674aa480bff450affa62ac6b75bf/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f07e8891458259bb4373bb6aa59d158304f637b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f07e8891458259bb4373bb6aa59d158304f637b1", "html_url": "https://github.com/rust-lang/rust/commit/f07e8891458259bb4373bb6aa59d158304f637b1"}], "stats": {"total": 167, "additions": 84, "deletions": 83}, "files": [{"sha": "c0574d6d9fdd7c198d27d24bba557b3314f4dbd3", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -14,10 +14,6 @@ use crate::require_c_abi_if_c_variadic;\n use crate::util::common::ErrorReported;\n use rustc::lint::builtin::AMBIGUOUS_ASSOCIATED_ITEMS;\n use rustc::session::parse::feature_err;\n-use rustc::traits;\n-use rustc::traits::astconv_object_safety_violations;\n-use rustc::traits::error_reporting::report_object_safety_error;\n-use rustc::traits::wf::object_region_bounds;\n use rustc::ty::subst::{self, InternalSubsts, Subst, SubstsRef};\n use rustc::ty::{self, Const, DefIdTree, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n use rustc::ty::{GenericParamDef, GenericParamDefKind};\n@@ -29,6 +25,10 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::Visitor;\n use rustc_hir::print;\n use rustc_hir::{Constness, ExprKind, GenericArg, GenericArgs};\n+use rustc_infer::traits;\n+use rustc_infer::traits::astconv_object_safety_violations;\n+use rustc_infer::traits::error_reporting::report_object_safety_error;\n+use rustc_infer::traits::wf::object_region_bounds;\n use rustc_span::symbol::sym;\n use rustc_span::{MultiSpan, Span, DUMMY_SP};\n use rustc_target::spec::abi;"}, {"sha": "2c71fec6809f7747194ac1860449f4a9f938e0ac", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -1,11 +1,11 @@\n use crate::check::coercion::CoerceMany;\n use crate::check::{Diverges, Expectation, FnCtxt, Needs};\n-use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n-use rustc::traits::ObligationCauseCode;\n-use rustc::traits::{IfExpressionCause, MatchExpressionArmCause, ObligationCause};\n use rustc::ty::Ty;\n use rustc_hir as hir;\n use rustc_hir::ExprKind;\n+use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc_infer::traits::ObligationCauseCode;\n+use rustc_infer::traits::{IfExpressionCause, MatchExpressionArmCause, ObligationCause};\n use rustc_span::Span;\n \n impl<'a, 'tcx> FnCtxt<'a, 'tcx> {"}, {"sha": "00e91decf78b83585c7b315bb8b0607e65880a6f", "filename": "src/librustc_typeck/check/autoderef.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fautoderef.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -1,14 +1,14 @@\n use super::method::MethodCallee;\n use super::{FnCtxt, Needs, PlaceOp};\n \n-use rustc::infer::{InferCtxt, InferOk};\n use rustc::session::DiagnosticMessageId;\n-use rustc::traits::{self, TraitEngine};\n use rustc::ty::adjustment::{Adjust, Adjustment, OverloadedDeref};\n use rustc::ty::{self, TraitRef, Ty, TyCtxt, WithConstness};\n use rustc::ty::{ToPredicate, TypeFoldable};\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n+use rustc_infer::infer::{InferCtxt, InferOk};\n+use rustc_infer::traits::{self, TraitEngine};\n \n use rustc_span::Span;\n use syntax::ast::Ident;"}, {"sha": "d0d07334fa515c3850c10403da58bbdc094776b3", "filename": "src/librustc_typeck/check/callee.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -3,15 +3,15 @@ use super::method::MethodCallee;\n use super::{Expectation, FnCtxt, Needs, TupleArgumentsFlag};\n use crate::type_error_struct;\n \n-use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc::ty::adjustment::{Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability};\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n-use rustc::{infer, traits};\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc_infer::{infer, traits};\n use rustc_span::Span;\n use rustc_target::spec::abi;\n use syntax::ast::Ident;"}, {"sha": "18f6a78804b408b5c859137c1745c5f2d6754c17", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -36,16 +36,16 @@ use crate::type_error_struct;\n use crate::util::common::ErrorReported;\n use rustc::middle::lang_items;\n use rustc::session::Session;\n-use rustc::traits;\n-use rustc::traits::error_reporting::report_object_safety_error;\n-use rustc::traits::object_safety_violations;\n use rustc::ty::adjustment::AllowTwoPhase;\n use rustc::ty::cast::{CastKind, CastTy};\n use rustc::ty::error::TypeError;\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, Ty, TypeAndMut, TypeFoldable};\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n+use rustc_infer::traits;\n+use rustc_infer::traits::error_reporting::report_object_safety_error;\n+use rustc_infer::traits::object_safety_violations;\n use rustc_span::Span;\n use syntax::ast;\n "}, {"sha": "ae6bed476f316b207bb73b893098d9c8639284c9", "filename": "src/librustc_typeck/check/closure.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -4,16 +4,16 @@ use super::{check_fn, Expectation, FnCtxt, GeneratorTypes};\n \n use crate::astconv::AstConv;\n use crate::middle::{lang_items, region};\n-use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n-use rustc::infer::LateBoundRegionConversionTime;\n-use rustc::infer::{InferOk, InferResult};\n-use rustc::traits::error_reporting::ArgKind;\n-use rustc::traits::Obligation;\n use rustc::ty::fold::TypeFoldable;\n use rustc::ty::subst::InternalSubsts;\n use rustc::ty::{self, GenericParamDefKind, Ty};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc_infer::infer::LateBoundRegionConversionTime;\n+use rustc_infer::infer::{InferOk, InferResult};\n+use rustc_infer::traits::error_reporting::ArgKind;\n+use rustc_infer::traits::Obligation;\n use rustc_span::source_map::Span;\n use rustc_target::spec::abi::Abi;\n use std::cmp;"}, {"sha": "ce44fdab32314284bc38ce0f3e3a9f9d2bf2e537", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -52,11 +52,7 @@\n \n use crate::astconv::AstConv;\n use crate::check::{FnCtxt, Needs};\n-use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n-use rustc::infer::{Coercion, InferOk, InferResult};\n use rustc::session::parse::feature_err;\n-use rustc::traits::object_safety_violations;\n-use rustc::traits::{self, ObligationCause, ObligationCauseCode};\n use rustc::ty::adjustment::{\n     Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability, PointerCast,\n };\n@@ -68,6 +64,10 @@ use rustc::ty::{self, Ty, TypeAndMut};\n use rustc_errors::{struct_span_err, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n+use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc_infer::infer::{Coercion, InferOk, InferResult};\n+use rustc_infer::traits::object_safety_violations;\n+use rustc_infer::traits::{self, ObligationCause, ObligationCauseCode};\n use rustc_span::symbol::sym;\n use rustc_span::{self, Span};\n use rustc_target::spec::abi::Abi;"}, {"sha": "8b54b5343756ad7771e30f909fb71cd4a69d8fb0", "filename": "src/librustc_typeck/check/compare_method.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -1,6 +1,4 @@\n use rustc::hir::map::Map;\n-use rustc::infer::{self, InferOk};\n-use rustc::traits::{self, ObligationCause, ObligationCauseCode, Reveal};\n use rustc::ty::error::{ExpectedFound, TypeError};\n use rustc::ty::subst::{InternalSubsts, Subst};\n use rustc::ty::util::ExplicitSelf;\n@@ -11,6 +9,8 @@ use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::intravisit;\n use rustc_hir::{GenericParamKind, ImplItemKind, TraitItemKind};\n+use rustc_infer::infer::{self, InferOk, TyCtxtInferExt};\n+use rustc_infer::traits::{self, ObligationCause, ObligationCauseCode, Reveal};\n use rustc_span::Span;\n \n use super::{potentially_plural_count, FnCtxt, Inherited};"}, {"sha": "bf74ab696d6ca2e5174008363d29ef147539d466", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -1,6 +1,6 @@\n use crate::check::FnCtxt;\n-use rustc::infer::InferOk;\n-use rustc::traits::{self, ObligationCause};\n+use rustc_infer::infer::InferOk;\n+use rustc_infer::traits::{self, ObligationCause};\n \n use rustc::ty::adjustment::AllowTwoPhase;\n use rustc::ty::{self, AssocItem, Ty};"}, {"sha": "ead7536f8c664a9a23599998a40e93332541a140", "filename": "src/librustc_typeck/check/dropck.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -2,16 +2,15 @@ use crate::check::regionck::RegionCtxt;\n use crate::hir;\n use crate::hir::def_id::DefId;\n use crate::util::common::ErrorReported;\n-use rustc::infer::outlives::env::OutlivesEnvironment;\n-use rustc::infer::{InferOk, SuppressRegionErrors};\n use rustc::middle::region;\n-use rustc::traits::{ObligationCause, TraitEngine, TraitEngineExt};\n use rustc::ty::error::TypeError;\n use rustc::ty::relate::{Relate, RelateResult, TypeRelation};\n use rustc::ty::subst::{Subst, SubstsRef};\n use rustc::ty::{self, Predicate, Ty, TyCtxt};\n use rustc_errors::struct_span_err;\n-\n+use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n+use rustc_infer::infer::{InferOk, SuppressRegionErrors, TyCtxtInferExt};\n+use rustc_infer::traits::{ObligationCause, TraitEngine, TraitEngineExt};\n use rustc_span::Span;\n \n /// This function confirms that the `Drop` implementation identified by"}, {"sha": "d947544d182cd7db4bdd10913dc5c95d45da3693", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -17,10 +17,7 @@ use crate::check::TupleArgumentsFlag::DontTupleArguments;\n use crate::type_error_struct;\n use crate::util::common::ErrorReported;\n \n-use rustc::infer;\n-use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc::middle::lang_items;\n-use rustc::traits::{self, ObligationCauseCode};\n use rustc::ty;\n use rustc::ty::adjustment::{Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability};\n use rustc::ty::Ty;\n@@ -32,6 +29,9 @@ use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};\n use rustc_hir::def_id::DefId;\n use rustc_hir::{ExprKind, QPath};\n+use rustc_infer::infer;\n+use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc_infer::traits::{self, ObligationCauseCode};\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::source_map::Span;\n use rustc_span::symbol::{kw, sym, Symbol};"}, {"sha": "17842be9a43922a567093aa6e14bf0961ee05eb8", "filename": "src/librustc_typeck/check/method/confirm.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -4,14 +4,14 @@ use crate::astconv::AstConv;\n use crate::check::{callee, FnCtxt, Needs, PlaceOp};\n use crate::hir::def_id::DefId;\n use crate::hir::GenericArg;\n-use rustc::infer::{self, InferOk};\n-use rustc::traits;\n use rustc::ty::adjustment::{Adjust, Adjustment, OverloadedDeref, PointerCast};\n use rustc::ty::adjustment::{AllowTwoPhase, AutoBorrow, AutoBorrowMutability};\n use rustc::ty::fold::TypeFoldable;\n use rustc::ty::subst::{Subst, SubstsRef};\n use rustc::ty::{self, GenericParamDefKind, Ty};\n use rustc_hir as hir;\n+use rustc_infer::infer::{self, InferOk};\n+use rustc_infer::traits;\n use rustc_span::Span;\n \n use std::ops::Deref;"}, {"sha": "1856157fffb38e24a7cee4450db67f9bf152ac96", "filename": "src/librustc_typeck/check/method/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -12,8 +12,6 @@ pub use self::MethodError::*;\n \n use crate::check::FnCtxt;\n use crate::namespace::Namespace;\n-use rustc::infer::{self, InferOk};\n-use rustc::traits;\n use rustc::ty::subst::Subst;\n use rustc::ty::subst::{InternalSubsts, SubstsRef};\n use rustc::ty::GenericParamDefKind;\n@@ -23,6 +21,8 @@ use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorOf, DefKind};\n use rustc_hir::def_id::DefId;\n+use rustc_infer::infer::{self, InferOk};\n+use rustc_infer::traits;\n use rustc_span::Span;\n use syntax::ast;\n "}, {"sha": "346406fff56bff9137ab0e8efcb5a20aab07ea2f", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -9,18 +9,9 @@ use crate::hir::def::DefKind;\n use crate::hir::def_id::DefId;\n use crate::namespace::Namespace;\n \n-use rustc::infer::canonical::OriginalQueryValues;\n-use rustc::infer::canonical::{Canonical, QueryResponse};\n-use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n-use rustc::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind};\n-use rustc::infer::{self, InferOk};\n use rustc::lint;\n use rustc::middle::stability;\n use rustc::session::config::nightly_options;\n-use rustc::traits::query::method_autoderef::MethodAutoderefBadTy;\n-use rustc::traits::query::method_autoderef::{CandidateStep, MethodAutoderefStepsResult};\n-use rustc::traits::query::CanonicalTyGoal;\n-use rustc::traits::{self, ObligationCause};\n use rustc::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use rustc::ty::GenericParamDefKind;\n use rustc::ty::{\n@@ -31,6 +22,15 @@ use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n+use rustc_infer::infer::canonical::OriginalQueryValues;\n+use rustc_infer::infer::canonical::{Canonical, QueryResponse};\n+use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc_infer::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind};\n+use rustc_infer::infer::{self, InferOk, TyCtxtInferExt};\n+use rustc_infer::traits::query::method_autoderef::MethodAutoderefBadTy;\n+use rustc_infer::traits::query::method_autoderef::{CandidateStep, MethodAutoderefStepsResult};\n+use rustc_infer::traits::query::CanonicalTyGoal;\n+use rustc_infer::traits::{self, ObligationCause};\n use rustc_span::{symbol::Symbol, Span, DUMMY_SP};\n use std::cmp::max;\n use std::iter;"}, {"sha": "83f063acedab9ce1fe12ab6f0eb74df38630d840", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -6,8 +6,6 @@ use crate::middle::lang_items::FnOnceTraitLangItem;\n use crate::namespace::Namespace;\n use rustc::hir::map as hir_map;\n use rustc::hir::map::Map;\n-use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n-use rustc::traits::Obligation;\n use rustc::ty::print::with_crate_prefix;\n use rustc::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness};\n use rustc_data_structures::fx::FxHashSet;\n@@ -17,6 +15,8 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::intravisit;\n use rustc_hir::{ExprKind, Node, QPath};\n+use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc_infer::traits::Obligation;\n use rustc_span::{source_map, FileName, Span};\n use syntax::ast;\n use syntax::util::lev_distance;"}, {"sha": "748a44a7297d7fe4cbe14130f9f79f6aa6effab6", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -92,17 +92,9 @@ use crate::middle::lang_items;\n use crate::namespace::Namespace;\n use rustc::hir::map::blocks::FnLikeNode;\n use rustc::hir::map::Map;\n-use rustc::infer::canonical::{Canonical, OriginalQueryValues, QueryResponse};\n-use rustc::infer::error_reporting::TypeAnnotationNeeded::E0282;\n-use rustc::infer::opaque_types::OpaqueTypeDecl;\n-use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n-use rustc::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind};\n-use rustc::infer::{self, InferCtxt, InferOk, InferResult};\n use rustc::middle::region;\n use rustc::mir::interpret::ConstValue;\n use rustc::session::parse::feature_err;\n-use rustc::traits::error_reporting::recursive_type_with_infinite_size_error;\n-use rustc::traits::{self, ObligationCause, ObligationCauseCode, TraitEngine};\n use rustc::ty::adjustment::{\n     Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability, PointerCast,\n };\n@@ -126,6 +118,14 @@ use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::{ExprKind, GenericArg, HirIdMap, Item, ItemKind, Node, PatKind, QPath};\n use rustc_index::vec::Idx;\n+use rustc_infer::infer::canonical::{Canonical, OriginalQueryValues, QueryResponse};\n+use rustc_infer::infer::error_reporting::TypeAnnotationNeeded::E0282;\n+use rustc_infer::infer::opaque_types::OpaqueTypeDecl;\n+use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc_infer::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind};\n+use rustc_infer::infer::{self, InferCtxt, InferOk, InferResult, TyCtxtInferExt};\n+use rustc_infer::traits::error_reporting::recursive_type_with_infinite_size_error;\n+use rustc_infer::traits::{self, ObligationCause, ObligationCauseCode, TraitEngine};\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::source_map::{original_sp, DUMMY_SP};\n use rustc_span::symbol::{kw, sym, Ident};"}, {"sha": "86b00c2f0d3f04fac4edc20a4a84c795feda4888", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -2,12 +2,12 @@\n \n use super::method::MethodCallee;\n use super::{FnCtxt, Needs};\n-use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc::ty::adjustment::{Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability};\n use rustc::ty::TyKind::{Adt, Array, Char, FnDef, Never, Ref, Str, Tuple, Uint};\n use rustc::ty::{self, Ty, TypeFoldable};\n use rustc_errors::{self, struct_span_err, Applicability};\n use rustc_hir as hir;\n+use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_span::Span;\n use syntax::ast::Ident;\n "}, {"sha": "2c7cbed6a2d36a4c44f1d3b29fcbbc4f1a8f9917", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -1,7 +1,4 @@\n use crate::check::FnCtxt;\n-use rustc::infer;\n-use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n-use rustc::traits::Pattern;\n use rustc::ty::subst::GenericArg;\n use rustc::ty::{self, BindingMode, Ty, TypeFoldable};\n use rustc_data_structures::fx::FxHashMap;\n@@ -10,6 +7,9 @@ use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};\n use rustc_hir::pat_util::EnumerateAndAdjustIterator;\n use rustc_hir::{HirId, Pat, PatKind};\n+use rustc_infer::infer;\n+use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n+use rustc_infer::traits::Pattern;\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::Span;\n use syntax::ast;"}, {"sha": "c0e33637fd0477577901ba29a38ff3b31874eb2a", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -77,15 +77,15 @@ use crate::check::FnCtxt;\n use crate::mem_categorization as mc;\n use crate::middle::region;\n use rustc::hir::map::Map;\n-use rustc::infer::outlives::env::OutlivesEnvironment;\n-use rustc::infer::{self, RegionObligation, SuppressRegionErrors};\n use rustc::ty::adjustment;\n use rustc::ty::subst::{GenericArgKind, SubstsRef};\n use rustc::ty::{self, Ty};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::PatKind;\n+use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n+use rustc_infer::infer::{self, RegionObligation, SuppressRegionErrors};\n use rustc_span::Span;\n use std::mem;\n use std::ops::Deref;"}, {"sha": "f42611c63408bc018fd72052a53578cae37ab9c2", "filename": "src/librustc_typeck/check/upvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -36,13 +36,13 @@ use crate::expr_use_visitor as euv;\n use crate::mem_categorization as mc;\n use crate::mem_categorization::PlaceBase;\n use rustc::hir::map::Map;\n-use rustc::infer::UpvarRegion;\n use rustc::ty::{self, Ty, TyCtxt, UpvarSubsts};\n use rustc_data_structures::fx::FxIndexMap;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::def_id::LocalDefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n+use rustc_infer::infer::UpvarRegion;\n use rustc_span::Span;\n use syntax::ast;\n "}, {"sha": "ef5188c94ff26cb5874eac65fe458995bac76d07", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -1,10 +1,8 @@\n use crate::check::{FnCtxt, Inherited};\n use crate::constrained_generic_params::{identify_constrained_generic_params, Parameter};\n \n-use rustc::infer::opaque_types::may_define_opaque_type;\n use rustc::middle::lang_items;\n use rustc::session::parse::feature_err;\n-use rustc::traits::{self, ObligationCause, ObligationCauseCode};\n use rustc::ty::subst::{InternalSubsts, Subst};\n use rustc::ty::{\n     self, AdtKind, GenericParamDefKind, ToPredicate, Ty, TyCtxt, TypeFoldable, WithConstness,\n@@ -13,6 +11,8 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir::def_id::DefId;\n use rustc_hir::ItemKind;\n+use rustc_infer::infer::opaque_types::may_define_opaque_type;\n+use rustc_infer::traits::{self, ObligationCause, ObligationCauseCode};\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::ast;\n@@ -223,7 +223,7 @@ fn check_object_unsafe_self_trait_by_name(tcx: TyCtxt<'_>, item: &hir::TraitItem\n         _ => {}\n     }\n     if !trait_should_be_self.is_empty() {\n-        if rustc::traits::object_safety_violations(tcx, trait_def_id).is_empty() {\n+        if rustc_infer::traits::object_safety_violations(tcx, trait_def_id).is_empty() {\n             return;\n         }\n         let sugg = trait_should_be_self.iter().map(|span| (*span, \"Self\".to_string())).collect();"}, {"sha": "380e256c9fc9a0d15e92cf627b68a040ca8fea48", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -5,15 +5,15 @@\n use crate::check::FnCtxt;\n \n use rustc::hir::map::Map;\n-use rustc::infer::error_reporting::TypeAnnotationNeeded::E0282;\n-use rustc::infer::InferCtxt;\n use rustc::ty::adjustment::{Adjust, Adjustment, PointerCast};\n use rustc::ty::fold::{TypeFoldable, TypeFolder};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc_data_structures::sync::Lrc;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, DefIdSet, DefIndex};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n+use rustc_infer::infer::error_reporting::TypeAnnotationNeeded::E0282;\n+use rustc_infer::infer::InferCtxt;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n "}, {"sha": "aa39a191b3df6e3ee8ac3276c70c4d0e790273c1", "filename": "src/librustc_typeck/coherence/builtin.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -1,21 +1,21 @@\n //! Check properties that are required by built-in traits and set\n //! up data structures required by type-checking/codegen.\n \n-use rustc::infer;\n-use rustc::infer::outlives::env::OutlivesEnvironment;\n-use rustc::infer::SuppressRegionErrors;\n use rustc::middle::lang_items::UnsizeTraitLangItem;\n use rustc::middle::region;\n-use rustc::traits::misc::{can_type_implement_copy, CopyImplementationError};\n-use rustc::traits::predicate_for_trait_def;\n-use rustc::traits::{self, ObligationCause, TraitEngine};\n use rustc::ty::adjustment::CoerceUnsizedInfo;\n use rustc::ty::TypeFoldable;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::ItemKind;\n+use rustc_infer::infer;\n+use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n+use rustc_infer::infer::{SuppressRegionErrors, TyCtxtInferExt};\n+use rustc_infer::traits::misc::{can_type_implement_copy, CopyImplementationError};\n+use rustc_infer::traits::predicate_for_trait_def;\n+use rustc_infer::traits::{self, ObligationCause, TraitEngine};\n \n pub fn check_trait(tcx: TyCtxt<'_>, trait_def_id: DefId) {\n     let lang_items = tcx.lang_items();"}, {"sha": "2a0d19b69fd936c9bc56048c7d3b06455ef795d3", "filename": "src/librustc_typeck/coherence/inherent_impls_overlap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -1,10 +1,10 @@\n use crate::namespace::Namespace;\n-use rustc::traits::{self, SkipLeakCheck};\n use rustc::ty::{AssocItem, TyCtxt};\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_infer::traits::{self, SkipLeakCheck};\n \n pub fn crate_inherent_impls_overlap_check(tcx: TyCtxt<'_>, crate_num: CrateNum) {\n     assert_eq!(crate_num, LOCAL_CRATE);"}, {"sha": "d24ee5f156bcf2d14383e32d77e65a347e214784", "filename": "src/librustc_typeck/coherence/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -5,11 +5,11 @@\n // done by the orphan and overlap modules. Then we build up various\n // mappings. That mapping code resides here.\n \n-use rustc::traits;\n use rustc::ty::query::Providers;\n use rustc::ty::{self, TyCtxt, TypeFoldable};\n use rustc_errors::struct_span_err;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc_infer::traits;\n use rustc_span::Span;\n \n mod builtin;"}, {"sha": "6ce0da666a78792aa39aa4cc4216f52e2c5d2206", "filename": "src/librustc_typeck/coherence/orphan.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -1,11 +1,12 @@\n //! Orphan checker: every impl either implements a trait defined in this\n //! crate or pertains to a type defined in this crate.\n \n-use rustc::traits;\n use rustc::ty::{self, TyCtxt};\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_infer::infer::TyCtxtInferExt;\n+use rustc_infer::traits;\n \n pub fn check(tcx: TyCtxt<'_>) {\n     let mut orphan = OrphanChecker { tcx };"}, {"sha": "2ba97055a680a590b3f22f2e7c0f9217e5506a69", "filename": "src/librustc_typeck/collect/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -1,6 +1,5 @@\n use rustc::hir::map::Map;\n use rustc::session::parse::feature_err;\n-use rustc::traits;\n use rustc::ty::subst::{GenericArgKind, InternalSubsts, Subst};\n use rustc::ty::util::IntTypeExt;\n use rustc::ty::{self, DefIdTree, Ty, TyCtxt, TypeFoldable};\n@@ -12,6 +11,7 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit;\n use rustc_hir::intravisit::Visitor;\n use rustc_hir::Node;\n+use rustc_infer::traits;\n use rustc_span::symbol::{sym, Ident};\n use rustc_span::{Span, DUMMY_SP};\n "}, {"sha": "6666b1699943e71dc50f7b2da226e0ec5bd022ba", "filename": "src/librustc_typeck/expr_use_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fexpr_use_visitor.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -7,12 +7,12 @@ pub use self::ConsumeMode::*;\n // Export these here so that Clippy can use them.\n pub use mc::{Place, PlaceBase, Projection};\n \n-use rustc::infer::InferCtxt;\n use rustc::ty::{self, adjustment, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_hir::def_id::DefId;\n use rustc_hir::PatKind;\n+use rustc_infer::infer::InferCtxt;\n \n use crate::mem_categorization as mc;\n use rustc_span::Span;"}, {"sha": "0a1c61b8aead86d50854818476fc3f54851ca2b0", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -88,12 +88,10 @@ mod outlives;\n mod structured_errors;\n mod variance;\n \n-use rustc::infer::InferOk;\n use rustc::lint;\n use rustc::middle;\n use rustc::session;\n use rustc::session::config::EntryFnType;\n-use rustc::traits::{ObligationCause, ObligationCauseCode, TraitEngine, TraitEngineExt};\n use rustc::ty::query::Providers;\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, Ty, TyCtxt};\n@@ -103,6 +101,8 @@ use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::Node;\n+use rustc_infer::infer::{InferOk, TyCtxtInferExt};\n+use rustc_infer::traits::{ObligationCause, ObligationCauseCode, TraitEngine, TraitEngineExt};\n use rustc_span::{Span, DUMMY_SP};\n use rustc_target::spec::abi::Abi;\n "}, {"sha": "a4569a147567f4635033de4c6dd858fc1cb6e2f9", "filename": "src/librustc_typeck/mem_categorization.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b57cb3cbed8674aa480bff450affa62ac6b75bf/src%2Flibrustc_typeck%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fmem_categorization.rs?ref=4b57cb3cbed8674aa480bff450affa62ac6b75bf", "patch": "@@ -48,15 +48,16 @@\n //! result of `*x'`, effectively, where `x'` is a `Categorization::Upvar` reference\n //! tied to `x`. The type of `x'` will be a borrowed pointer.\n \n-use rustc::infer::InferCtxt;\n use rustc::ty::adjustment;\n use rustc::ty::fold::TypeFoldable;\n use rustc::ty::{self, Ty, TyCtxt};\n+\n use rustc_data_structures::fx::FxIndexMap;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::DefId;\n use rustc_hir::PatKind;\n+use rustc_infer::infer::InferCtxt;\n use rustc_span::Span;\n \n #[derive(Clone, Debug)]"}]}