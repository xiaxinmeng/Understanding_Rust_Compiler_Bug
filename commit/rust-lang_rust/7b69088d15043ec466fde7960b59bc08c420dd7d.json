{"sha": "7b69088d15043ec466fde7960b59bc08c420dd7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiNjkwODhkMTUwNDNlYzQ2NmZkZTc5NjBiNTliYzA4YzQyMGRkN2Q=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-09-15T20:57:07Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-10-05T07:40:19Z"}, "message": "expansion: Expand attribute macros registered by legacy plugins in usual left-to-right order", "tree": {"sha": "8597dea08cc674a01374e1c68ff19fb4089c98c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8597dea08cc674a01374e1c68ff19fb4089c98c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b69088d15043ec466fde7960b59bc08c420dd7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b69088d15043ec466fde7960b59bc08c420dd7d", "html_url": "https://github.com/rust-lang/rust/commit/7b69088d15043ec466fde7960b59bc08c420dd7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b69088d15043ec466fde7960b59bc08c420dd7d/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd6347a6b930850557d61fa3f230476ffaf5630f", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd6347a6b930850557d61fa3f230476ffaf5630f", "html_url": "https://github.com/rust-lang/rust/commit/dd6347a6b930850557d61fa3f230476ffaf5630f"}], "stats": {"total": 18, "additions": 3, "deletions": 15}, "files": [{"sha": "1fc29a0bb7964513a8c31ce69e5cd8dde2309352", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7b69088d15043ec466fde7960b59bc08c420dd7d/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b69088d15043ec466fde7960b59bc08c420dd7d/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=7b69088d15043ec466fde7960b59bc08c420dd7d", "patch": "@@ -22,7 +22,7 @@ use rustc::{ty, lint};\n use syntax::ast::{self, Name, Ident};\n use syntax::attr;\n use syntax::errors::DiagnosticBuilder;\n-use syntax::ext::base::{self, Determinacy, MultiModifier, MultiDecorator};\n+use syntax::ext::base::{self, Determinacy};\n use syntax::ext::base::{MacroKind, SyntaxExtension, Resolver as SyntaxResolver};\n use syntax::ext::expand::{AstFragment, Invocation, InvocationKind, TogetherWith};\n use syntax::ext::hygiene::{self, Mark};\n@@ -245,22 +245,10 @@ impl<'a, 'crateloader: 'a> base::Resolver for Resolver<'a, 'crateloader> {\n     // Resolves attribute and derive legacy macros from `#![plugin(..)]`.\n     fn find_legacy_attr_invoc(&mut self, attrs: &mut Vec<ast::Attribute>, allow_derive: bool)\n                               -> Option<ast::Attribute> {\n-        for i in 0..attrs.len() {\n-            let name = attrs[i].name();\n-\n-            match self.builtin_macros.get(&name).cloned() {\n-                Some(binding) => match *binding.get_macro(self) {\n-                    MultiModifier(..) | MultiDecorator(..) | SyntaxExtension::AttrProcMacro(..) => {\n-                        return Some(attrs.remove(i))\n-                    }\n-                    _ => {}\n-                },\n-                None => {}\n-            }\n+        if !allow_derive {\n+            return None;\n         }\n \n-        if !allow_derive { return None }\n-\n         // Check for legacy derives\n         for i in 0..attrs.len() {\n             let name = attrs[i].name();"}]}