{"sha": "d75723e9fe07b71eeaf9dad2d8a76080ea201b83", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3NTcyM2U5ZmUwN2I3MWVlYWY5ZGFkMmQ4YTc2MDgwZWEyMDFiODM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-30T06:37:02Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-30T06:37:02Z"}, "message": "mod-level doc comment for validity check", "tree": {"sha": "91f72f688313393ba02e307acabcea861f4fd8ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91f72f688313393ba02e307acabcea861f4fd8ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d75723e9fe07b71eeaf9dad2d8a76080ea201b83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d75723e9fe07b71eeaf9dad2d8a76080ea201b83", "html_url": "https://github.com/rust-lang/rust/commit/d75723e9fe07b71eeaf9dad2d8a76080ea201b83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d75723e9fe07b71eeaf9dad2d8a76080ea201b83/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "235ee34a15a272aa7eb540a632e719fbae68329b", "url": "https://api.github.com/repos/rust-lang/rust/commits/235ee34a15a272aa7eb540a632e719fbae68329b", "html_url": "https://github.com/rust-lang/rust/commit/235ee34a15a272aa7eb540a632e719fbae68329b"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "3e14ba3efcc584d51267ef462e4dc7f29b37ec3a", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d75723e9fe07b71eeaf9dad2d8a76080ea201b83/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d75723e9fe07b71eeaf9dad2d8a76080ea201b83/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=d75723e9fe07b71eeaf9dad2d8a76080ea201b83", "patch": "@@ -1,3 +1,9 @@\n+//! Check the validity invariant of a given value, and tell the user\n+//! where in the value it got violated.\n+//! In const context, this goes even further and tries to approximate const safety.\n+//! That's useful because it means other passes (e.g. promotion) can rely on `const`s\n+//! to be const-safe.\n+\n use std::fmt::Write;\n use std::ops::RangeInclusive;\n "}]}