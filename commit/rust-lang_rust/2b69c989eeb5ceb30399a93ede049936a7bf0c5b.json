{"sha": "2b69c989eeb5ceb30399a93ede049936a7bf0c5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiNjljOTg5ZWViNWNlYjMwMzk5YTkzZWRlMDQ5OTM2YTdiZjBjNWI=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas@schievink.net", "date": "2016-02-08T22:42:39Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas@schievink.net", "date": "2016-02-12T18:27:20Z"}, "message": "Use more autoderef in rustc_driver", "tree": {"sha": "b7addb1e4fae872ca95da7edf51281f692773598", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7addb1e4fae872ca95da7edf51281f692773598"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b69c989eeb5ceb30399a93ede049936a7bf0c5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b69c989eeb5ceb30399a93ede049936a7bf0c5b", "html_url": "https://github.com/rust-lang/rust/commit/2b69c989eeb5ceb30399a93ede049936a7bf0c5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b69c989eeb5ceb30399a93ede049936a7bf0c5b/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fc61657c9d3eb5e8fe140149b05aa2ff8ec28cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fc61657c9d3eb5e8fe140149b05aa2ff8ec28cf", "html_url": "https://github.com/rust-lang/rust/commit/5fc61657c9d3eb5e8fe140149b05aa2ff8ec28cf"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "43871e73218365d5547dbf8090ed3e535cc98613", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b69c989eeb5ceb30399a93ede049936a7bf0c5b/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b69c989eeb5ceb30399a93ede049936a7bf0c5b/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=2b69c989eeb5ceb30399a93ede049936a7bf0c5b", "patch": "@@ -567,7 +567,7 @@ pub fn phase_2_configure_and_expand(sess: &Session,\n \n     // Lint plugins are registered; now we can process command line flags.\n     if sess.opts.describe_lints {\n-        super::describe_lints(&*sess.lint_store.borrow(), true);\n+        super::describe_lints(&sess.lint_store.borrow(), true);\n         return Err(0);\n     }\n     try!(sess.track_errors(|| sess.lint_store.borrow_mut().process_command_line(sess)));"}, {"sha": "faf11de53c43a050a1dd24e413dc8023656ffd0e", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b69c989eeb5ceb30399a93ede049936a7bf0c5b/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b69c989eeb5ceb30399a93ede049936a7bf0c5b/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=2b69c989eeb5ceb30399a93ede049936a7bf0c5b", "patch": "@@ -1018,7 +1018,7 @@ pub fn diagnostics_registry() -> diagnostics::registry::Registry {\n     all_errors.extend_from_slice(&rustc_privacy::DIAGNOSTICS);\n     all_errors.extend_from_slice(&rustc_trans::DIAGNOSTICS);\n \n-    Registry::new(&*all_errors)\n+    Registry::new(&all_errors)\n }\n \n pub fn main() {"}, {"sha": "4a82aa7282599e2c18c5c65c172492f7e2c0a38f", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2b69c989eeb5ceb30399a93ede049936a7bf0c5b/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b69c989eeb5ceb30399a93ede049936a7bf0c5b/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=2b69c989eeb5ceb30399a93ede049936a7bf0c5b", "patch": "@@ -870,8 +870,8 @@ fn print_flowgraph<W: Write>(variants: Vec<borrowck_dot::Variant>,\n                              mut out: W)\n                              -> io::Result<()> {\n     let cfg = match code {\n-        blocks::BlockCode(block) => cfg::CFG::new(tcx, &*block),\n-        blocks::FnLikeCode(fn_like) => cfg::CFG::new(tcx, &*fn_like.body()),\n+        blocks::BlockCode(block) => cfg::CFG::new(tcx, &block),\n+        blocks::FnLikeCode(fn_like) => cfg::CFG::new(tcx, &fn_like.body()),\n     };\n     let labelled_edges = mode != PpFlowGraphMode::UnlabelledEdges;\n     let lcfg = LabelledCFG {"}]}