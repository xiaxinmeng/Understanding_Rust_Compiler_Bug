{"sha": "d6f35b3454376183b80f67fbbebebbca20d4e7bc", "node_id": "C_kwDOAAsO6NoAKGQ2ZjM1YjM0NTQzNzYxODNiODBmNjdmYmJlYmViYmNhMjBkNGU3YmM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-06-03T09:18:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-03T09:18:27Z"}, "message": "Rollup merge of #97668 - notriddle:notriddle/slice-link, r=jsha\n\nrustdoc: clean up primitive.slice.html links\n\nBefore: <a href=\"https://doc.rust-lang.org/stable/std/boxed/struct.Box.html\">Box</a>&lt;<a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html\">[</a>T<a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html\">]</a>&gt;\n\nAfter: <a href=\"https://doc.rust-lang.org/stable/std/boxed/struct.Box.html\">Box</a>&lt;<a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html\">[T]</a>&gt;", "tree": {"sha": "155208948fc06c15c3eb1ad060948a3452eca06f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/155208948fc06c15c3eb1ad060948a3452eca06f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6f35b3454376183b80f67fbbebebbca20d4e7bc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJimdHkCRBK7hj4Ov3rIwAAumMIAAphjQIHpMXUFKtFHFT0oWCa\nkn7LgLsrfnUh/IS+IRroLyGCv5qblz4gf07VTAXTASRm3pTEu2THiAqtNZyvwFsw\n/2Z1N/dr8x8lB5ev60/fKdR8U+FYTgsIXiZ7NAdXIQrJwT02h13ba6t1haLR7OIW\ngnB8w8ysiEN4Z38xchqJZAZCBX3gQDmbjITN3DK2rwrjfa0BCHRoSxkzLZi8yx+U\nMR3r75c8fRKSp4+v210ztSmm5VPsKMS7w6zKbNRaHN3WbonTrG24Zn34vphBSQK7\nbCnkK/ypIqEzEszrpQpLvcQW+s3yyUUNhbEISOkgxZlSY3sdVVFWFRiCL9tUoG4=\n=k5ud\n-----END PGP SIGNATURE-----\n", "payload": "tree 155208948fc06c15c3eb1ad060948a3452eca06f\nparent b71ddd68619b417272f77a89b5eab04f6bc64534\nparent dadf3bdefff6c38d7f64d7ae4b14fbaca66ab96a\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1654247907 +0200\ncommitter GitHub <noreply@github.com> 1654247907 +0200\n\nRollup merge of #97668 - notriddle:notriddle/slice-link, r=jsha\n\nrustdoc: clean up primitive.slice.html links\n\nBefore: <a href=\"https://doc.rust-lang.org/stable/std/boxed/struct.Box.html\">Box</a>&lt;<a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html\">[</a>T<a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html\">]</a>&gt;\n\nAfter: <a href=\"https://doc.rust-lang.org/stable/std/boxed/struct.Box.html\">Box</a>&lt;<a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html\">[T]</a>&gt;\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6f35b3454376183b80f67fbbebebbca20d4e7bc", "html_url": "https://github.com/rust-lang/rust/commit/d6f35b3454376183b80f67fbbebebbca20d4e7bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6f35b3454376183b80f67fbbebebbca20d4e7bc/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b71ddd68619b417272f77a89b5eab04f6bc64534", "url": "https://api.github.com/repos/rust-lang/rust/commits/b71ddd68619b417272f77a89b5eab04f6bc64534", "html_url": "https://github.com/rust-lang/rust/commit/b71ddd68619b417272f77a89b5eab04f6bc64534"}, {"sha": "dadf3bdefff6c38d7f64d7ae4b14fbaca66ab96a", "url": "https://api.github.com/repos/rust-lang/rust/commits/dadf3bdefff6c38d7f64d7ae4b14fbaca66ab96a", "html_url": "https://github.com/rust-lang/rust/commit/dadf3bdefff6c38d7f64d7ae4b14fbaca66ab96a"}], "stats": {"total": 72, "additions": 50, "deletions": 22}, "files": [{"sha": "5eb70ab13dba06f89175116d2d1b385ae7b1551c", "filename": "src/etc/htmldocck.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d6f35b3454376183b80f67fbbebebbca20d4e7bc/src%2Fetc%2Fhtmldocck.py", "raw_url": "https://github.com/rust-lang/rust/raw/d6f35b3454376183b80f67fbbebebbca20d4e7bc/src%2Fetc%2Fhtmldocck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fhtmldocck.py?ref=d6f35b3454376183b80f67fbbebebbca20d4e7bc", "patch": "@@ -423,6 +423,8 @@ def check_snapshot(snapshot_name, actual_tree, normalize_to_text):\n     else:\n         actual_str = flatten(actual_tree)\n \n+    expected_str = expected_str.replace(\"{{channel}}\", channel)\n+\n     # Conditions:\n     #  1. Is --bless\n     #  2. Are actual and expected tree different"}, {"sha": "b7789493df647a65bcfe6acec7b55bf979559a43", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 16, "deletions": 22, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/d6f35b3454376183b80f67fbbebebbca20d4e7bc/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6f35b3454376183b80f67fbbebebbca20d4e7bc/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=d6f35b3454376183b80f67fbbebebbca20d4e7bc", "patch": "@@ -881,11 +881,16 @@ fn fmt_type<'cx>(\n                 }\n             }\n         }\n-        clean::Slice(ref t) => {\n-            primitive_link(f, PrimitiveType::Slice, \"[\", cx)?;\n-            fmt::Display::fmt(&t.print(cx), f)?;\n-            primitive_link(f, PrimitiveType::Slice, \"]\", cx)\n-        }\n+        clean::Slice(ref t) => match **t {\n+            clean::Generic(name) => {\n+                primitive_link(f, PrimitiveType::Slice, &format!(\"[{name}]\"), cx)\n+            }\n+            _ => {\n+                primitive_link(f, PrimitiveType::Slice, \"[\", cx)?;\n+                fmt::Display::fmt(&t.print(cx), f)?;\n+                primitive_link(f, PrimitiveType::Slice, \"]\", cx)\n+            }\n+        },\n         clean::Array(ref t, ref n) => {\n             primitive_link(f, PrimitiveType::Array, \"[\", cx)?;\n             fmt::Display::fmt(&t.print(cx), f)?;\n@@ -924,23 +929,12 @@ fn fmt_type<'cx>(\n                 clean::Slice(ref bt) => {\n                     // `BorrowedRef{ ... Slice(T) }` is `&[T]`\n                     match **bt {\n-                        clean::Generic(_) => {\n-                            if f.alternate() {\n-                                primitive_link(\n-                                    f,\n-                                    PrimitiveType::Slice,\n-                                    &format!(\"{}{}{}[{:#}]\", amp, lt, m, bt.print(cx)),\n-                                    cx,\n-                                )\n-                            } else {\n-                                primitive_link(\n-                                    f,\n-                                    PrimitiveType::Slice,\n-                                    &format!(\"{}{}{}[{}]\", amp, lt, m, bt.print(cx)),\n-                                    cx,\n-                                )\n-                            }\n-                        }\n+                        clean::Generic(name) => primitive_link(\n+                            f,\n+                            PrimitiveType::Slice,\n+                            &format!(\"{amp}{lt}{m}[{name}]\"),\n+                            cx,\n+                        ),\n                         _ => {\n                             primitive_link(\n                                 f,"}, {"sha": "38aaf20808cf124e7bbd79aa869cb6a4eab2bce7", "filename": "src/test/rustdoc/slice-links.link_box_generic.html", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d6f35b3454376183b80f67fbbebebbca20d4e7bc/src%2Ftest%2Frustdoc%2Fslice-links.link_box_generic.html", "raw_url": "https://github.com/rust-lang/rust/raw/d6f35b3454376183b80f67fbbebebbca20d4e7bc/src%2Ftest%2Frustdoc%2Fslice-links.link_box_generic.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fslice-links.link_box_generic.html?ref=d6f35b3454376183b80f67fbbebebbca20d4e7bc", "patch": "@@ -0,0 +1 @@\n+<code>pub fn delta&lt;T&gt;() -&gt; <a class=\"struct\" href=\"struct.MyBox.html\" title=\"struct foo::MyBox\">MyBox</a>&lt;<a class=\"primitive\" href=\"{{channel}}/core/primitive.slice.html\">[T]</a>&gt;</code>\n\\ No newline at end of file"}, {"sha": "42fd721a4acf1e678496785bb585cad650d26cdf", "filename": "src/test/rustdoc/slice-links.link_box_u32.html", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d6f35b3454376183b80f67fbbebebbca20d4e7bc/src%2Ftest%2Frustdoc%2Fslice-links.link_box_u32.html", "raw_url": "https://github.com/rust-lang/rust/raw/d6f35b3454376183b80f67fbbebebbca20d4e7bc/src%2Ftest%2Frustdoc%2Fslice-links.link_box_u32.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fslice-links.link_box_u32.html?ref=d6f35b3454376183b80f67fbbebebbca20d4e7bc", "patch": "@@ -0,0 +1 @@\n+<code>pub fn gamma() -&gt; <a class=\"struct\" href=\"struct.MyBox.html\" title=\"struct foo::MyBox\">MyBox</a>&lt;<a class=\"primitive\" href=\"{{channel}}/core/primitive.slice.html\">[</a><a class=\"primitive\" href=\"{{channel}}/core/primitive.u32.html\">u32</a><a class=\"primitive\" href=\"{{channel}}/core/primitive.slice.html\">]</a>&gt;</code>\n\\ No newline at end of file"}, {"sha": "fe79ca7a82da30f59d57fcde30b029d63e1e5f4f", "filename": "src/test/rustdoc/slice-links.link_slice_generic.html", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d6f35b3454376183b80f67fbbebebbca20d4e7bc/src%2Ftest%2Frustdoc%2Fslice-links.link_slice_generic.html", "raw_url": "https://github.com/rust-lang/rust/raw/d6f35b3454376183b80f67fbbebebbca20d4e7bc/src%2Ftest%2Frustdoc%2Fslice-links.link_slice_generic.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fslice-links.link_slice_generic.html?ref=d6f35b3454376183b80f67fbbebebbca20d4e7bc", "patch": "@@ -0,0 +1 @@\n+<code>pub fn beta&lt;T&gt;() -&gt; <a class=\"primitive\" href=\"{{channel}}/core/primitive.slice.html\">&amp;'static [T]</a></code>\n\\ No newline at end of file"}, {"sha": "c7e430b0607f7039028f3734a58fa3031b6f253c", "filename": "src/test/rustdoc/slice-links.link_slice_u32.html", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d6f35b3454376183b80f67fbbebebbca20d4e7bc/src%2Ftest%2Frustdoc%2Fslice-links.link_slice_u32.html", "raw_url": "https://github.com/rust-lang/rust/raw/d6f35b3454376183b80f67fbbebebbca20d4e7bc/src%2Ftest%2Frustdoc%2Fslice-links.link_slice_u32.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fslice-links.link_slice_u32.html?ref=d6f35b3454376183b80f67fbbebebbca20d4e7bc", "patch": "@@ -0,0 +1 @@\n+<code>pub fn alpha() -&gt; <a class=\"primitive\" href=\"{{channel}}/core/primitive.slice.html\">&amp;'static [</a><a class=\"primitive\" href=\"{{channel}}/core/primitive.u32.html\">u32</a><a class=\"primitive\" href=\"{{channel}}/core/primitive.slice.html\">]</a></code>\n\\ No newline at end of file"}, {"sha": "9a78e963e30363a6ac195cc84c110cd5daef41a8", "filename": "src/test/rustdoc/slice-links.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d6f35b3454376183b80f67fbbebebbca20d4e7bc/src%2Ftest%2Frustdoc%2Fslice-links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6f35b3454376183b80f67fbbebebbca20d4e7bc/src%2Ftest%2Frustdoc%2Fslice-links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fslice-links.rs?ref=d6f35b3454376183b80f67fbbebebbca20d4e7bc", "patch": "@@ -0,0 +1,28 @@\n+#![crate_name = \"foo\"]\n+#![no_std]\n+\n+pub struct MyBox<T: ?Sized>(*const T);\n+\n+// @has 'foo/fn.alpha.html'\n+// @snapshot link_slice_u32 - '//pre[@class=\"rust fn\"]/code'\n+pub fn alpha() -> &'static [u32] {\n+    loop {}\n+}\n+\n+// @has 'foo/fn.beta.html'\n+// @snapshot link_slice_generic - '//pre[@class=\"rust fn\"]/code'\n+pub fn beta<T>() -> &'static [T] {\n+    loop {}\n+}\n+\n+// @has 'foo/fn.gamma.html'\n+// @snapshot link_box_u32 - '//pre[@class=\"rust fn\"]/code'\n+pub fn gamma() -> MyBox<[u32]> {\n+    loop {}\n+}\n+\n+// @has 'foo/fn.delta.html'\n+// @snapshot link_box_generic - '//pre[@class=\"rust fn\"]/code'\n+pub fn delta<T>() -> MyBox<[T]> {\n+    loop {}\n+}"}]}