{"sha": "48ea0fa416077e89f036c5081020730a7743df88", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4ZWEwZmE0MTYwNzdlODlmMDM2YzUwODEwMjA3MzBhNzc0M2RmODg=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-04T20:51:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-04T20:51:50Z"}, "message": "Rollup merge of #68758 - daboross:fix-59191, r=petrochenkov\n\nFix 59191 - ICE when macro replaces crate root with non-module item\n\nHi,\n\nThis should fix #59191! My friend and I are working on learning the rustc codebase through contributions, so please feel free to mention anything amiss or that could be done better.\n\nThe code adds an explicit case for when a macro applied to the crate root (via an inner attribute) replaces it with something nonsensical, like a function. The crate root must be a module, and the error message reflects this.\n\n---\n\nI should note that there are a few other weird edge cases here, like if they do output a module, it succeeds but uses that module's name as a prefix for all names in the crate. I'm assuming that's an issue for stabilizing #54726, though.", "tree": {"sha": "00fe341a535b9fb9ee18ba4ab70f6f40a993768c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00fe341a535b9fb9ee18ba4ab70f6f40a993768c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48ea0fa416077e89f036c5081020730a7743df88", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeOdlmCRBK7hj4Ov3rIwAAdHIIAGHGR2sSGMOV3Vz3EGJu+Pxp\nvAfZr4+686Mq1bgfhwR5kuaxNhr3qTQ8yYssj8cbQa5riBkXET3Bu15V2nSraHyM\n7X2SzwfSDH8WaXGYEarmkRtsi9aYxjcLvfPkVgbKkV8//YbN+ddGPXQk2hqkYjE+\njhrWOhrVS4UxTOHt3S0j5CtyrP75B3CrWktSjYGi6km9kCEFOZ3/f4NW3lqQFWdJ\nS/ALi04/zHMfXS7iPyHueHuGOzXlFCfS/6nwSdeYHtGgQMLBhYQjceDixfSV5sax\nbcuUYGpc2Zm9XRyYJco5aIYlIG/+AIC1e2daNmYkULVFri845x2Rdk0eGUDF4+0=\n=oC2f\n-----END PGP SIGNATURE-----\n", "payload": "tree 00fe341a535b9fb9ee18ba4ab70f6f40a993768c\nparent 1921fc099403a2d1bc030771a9976573339d9ec5\nparent 152811d8bf389fce7328ba7bc50c26c34afb0d81\nauthor Dylan DPC <dylan.dpc@gmail.com> 1580849510 +0100\ncommitter GitHub <noreply@github.com> 1580849510 +0100\n\nRollup merge of #68758 - daboross:fix-59191, r=petrochenkov\n\nFix 59191 - ICE when macro replaces crate root with non-module item\n\nHi,\n\nThis should fix #59191! My friend and I are working on learning the rustc codebase through contributions, so please feel free to mention anything amiss or that could be done better.\n\nThe code adds an explicit case for when a macro applied to the crate root (via an inner attribute) replaces it with something nonsensical, like a function. The crate root must be a module, and the error message reflects this.\n\n---\n\nI should note that there are a few other weird edge cases here, like if they do output a module, it succeeds but uses that module's name as a prefix for all names in the crate. I'm assuming that's an issue for stabilizing #54726, though.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48ea0fa416077e89f036c5081020730a7743df88", "html_url": "https://github.com/rust-lang/rust/commit/48ea0fa416077e89f036c5081020730a7743df88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48ea0fa416077e89f036c5081020730a7743df88/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1921fc099403a2d1bc030771a9976573339d9ec5", "url": "https://api.github.com/repos/rust-lang/rust/commits/1921fc099403a2d1bc030771a9976573339d9ec5", "html_url": "https://github.com/rust-lang/rust/commit/1921fc099403a2d1bc030771a9976573339d9ec5"}, {"sha": "152811d8bf389fce7328ba7bc50c26c34afb0d81", "url": "https://api.github.com/repos/rust-lang/rust/commits/152811d8bf389fce7328ba7bc50c26c34afb0d81", "html_url": "https://github.com/rust-lang/rust/commit/152811d8bf389fce7328ba7bc50c26c34afb0d81"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "0b8cbd3a7833301e861501af778423255aa1b99a", "filename": "src/librustc_expand/expand.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/48ea0fa416077e89f036c5081020730a7743df88/src%2Flibrustc_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48ea0fa416077e89f036c5081020730a7743df88/src%2Flibrustc_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fexpand.rs?ref=48ea0fa416077e89f036c5081020730a7743df88", "patch": "@@ -363,7 +363,17 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n                 krate.attrs = vec![];\n                 krate.module = ast::Mod { inner: orig_mod_span, items: vec![], inline: true };\n             }\n-            _ => unreachable!(),\n+            Some(ast::Item { span, kind, .. }) => {\n+                krate.attrs = vec![];\n+                krate.module = ast::Mod { inner: orig_mod_span, items: vec![], inline: true };\n+                self.cx.span_err(\n+                    span,\n+                    &format!(\n+                        \"expected crate top-level item to be a module after macro expansion, found a {}\",\n+                        kind.descriptive_variant()\n+                    ),\n+                );\n+            }\n         };\n         self.cx.trace_macros_diag();\n         krate"}, {"sha": "d9ee77067ecb7d713bdbc4e242b40fb3b996533e", "filename": "src/test/ui/proc-macro/auxiliary/issue-59191.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/48ea0fa416077e89f036c5081020730a7743df88/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue-59191.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48ea0fa416077e89f036c5081020730a7743df88/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue-59191.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue-59191.rs?ref=48ea0fa416077e89f036c5081020730a7743df88", "patch": "@@ -0,0 +1,16 @@\n+// edition:2018\n+// force-host\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+use proc_macro::TokenStream;\n+\n+#[proc_macro_attribute]\n+pub fn no_main(_attrs: TokenStream, _input: TokenStream) -> TokenStream {\n+    let new_krate = r#\"\n+        fn main() {}\n+    \"#;\n+    new_krate.parse().unwrap()\n+}"}, {"sha": "a59cacb8bde1f6ab1b895a5a54098a6a6d4fe0ff", "filename": "src/test/ui/proc-macro/issue-59191-replace-root-with-fn.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/48ea0fa416077e89f036c5081020730a7743df88/src%2Ftest%2Fui%2Fproc-macro%2Fissue-59191-replace-root-with-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48ea0fa416077e89f036c5081020730a7743df88/src%2Ftest%2Fui%2Fproc-macro%2Fissue-59191-replace-root-with-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-59191-replace-root-with-fn.rs?ref=48ea0fa416077e89f036c5081020730a7743df88", "patch": "@@ -0,0 +1,8 @@\n+// edition:2018\n+// aux-crate:issue_59191=issue-59191.rs\n+// Test that using a macro to replace the entire crate tree with a non-'mod' item errors out nicely.\n+// `issue_59191::no_main` replaces whatever's passed in with `fn main() {}`.\n+#![feature(custom_inner_attributes)]\n+//~^ ERROR `main` function not found in crate `issue_59191_replace_root_with_fn` [E0601]\n+#![issue_59191::no_main]\n+//~^ ERROR expected crate top-level item to be a module after macro expansion, found a function"}, {"sha": "e0a3caef9db889d5383364f57d890c52af9c66e3", "filename": "src/test/ui/proc-macro/issue-59191-replace-root-with-fn.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/48ea0fa416077e89f036c5081020730a7743df88/src%2Ftest%2Fui%2Fproc-macro%2Fissue-59191-replace-root-with-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48ea0fa416077e89f036c5081020730a7743df88/src%2Ftest%2Fui%2Fproc-macro%2Fissue-59191-replace-root-with-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-59191-replace-root-with-fn.stderr?ref=48ea0fa416077e89f036c5081020730a7743df88", "patch": "@@ -0,0 +1,17 @@\n+error: expected crate top-level item to be a module after macro expansion, found a function\n+  --> $DIR/issue-59191-replace-root-with-fn.rs:7:1\n+   |\n+LL | #![issue_59191::no_main]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0601]: `main` function not found in crate `issue_59191_replace_root_with_fn`\n+  --> $DIR/issue-59191-replace-root-with-fn.rs:5:1\n+   |\n+LL | / #![feature(custom_inner_attributes)]\n+LL | |\n+LL | | #![issue_59191::no_main]\n+   | |________________________^ consider adding a `main` function to `$DIR/issue-59191-replace-root-with-fn.rs`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0601`."}]}