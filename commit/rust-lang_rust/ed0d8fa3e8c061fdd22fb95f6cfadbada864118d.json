{"sha": "ed0d8fa3e8c061fdd22fb95f6cfadbada864118d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkMGQ4ZmEzZThjMDYxZmRkMjJmYjk1ZjZjZmFkYmFkYTg2NDExOGQ=", "commit": {"author": {"name": "AngelicosPhosphoros", "email": "xuzin.timur@gmail.com", "date": "2021-04-03T17:58:15Z"}, "committer": {"name": "AngelicosPhosphoros", "email": "xuzin.timur@gmail.com", "date": "2021-04-04T17:37:48Z"}, "message": "Optimize PartialOrd le\n\nCloses https://github.com/rust-lang/rust/issues/73338\nThis change stops default implementation of `le()` method from generating jumps.", "tree": {"sha": "5837cfff4937ffad5d36c881cfdea4234550c4b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5837cfff4937ffad5d36c881cfdea4234550c4b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed0d8fa3e8c061fdd22fb95f6cfadbada864118d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed0d8fa3e8c061fdd22fb95f6cfadbada864118d", "html_url": "https://github.com/rust-lang/rust/commit/ed0d8fa3e8c061fdd22fb95f6cfadbada864118d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed0d8fa3e8c061fdd22fb95f6cfadbada864118d/comments", "author": {"login": "AngelicosPhosphoros", "id": 13154246, "node_id": "MDQ6VXNlcjEzMTU0MjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/13154246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AngelicosPhosphoros", "html_url": "https://github.com/AngelicosPhosphoros", "followers_url": "https://api.github.com/users/AngelicosPhosphoros/followers", "following_url": "https://api.github.com/users/AngelicosPhosphoros/following{/other_user}", "gists_url": "https://api.github.com/users/AngelicosPhosphoros/gists{/gist_id}", "starred_url": "https://api.github.com/users/AngelicosPhosphoros/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AngelicosPhosphoros/subscriptions", "organizations_url": "https://api.github.com/users/AngelicosPhosphoros/orgs", "repos_url": "https://api.github.com/users/AngelicosPhosphoros/repos", "events_url": "https://api.github.com/users/AngelicosPhosphoros/events{/privacy}", "received_events_url": "https://api.github.com/users/AngelicosPhosphoros/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AngelicosPhosphoros", "id": 13154246, "node_id": "MDQ6VXNlcjEzMTU0MjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/13154246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AngelicosPhosphoros", "html_url": "https://github.com/AngelicosPhosphoros", "followers_url": "https://api.github.com/users/AngelicosPhosphoros/followers", "following_url": "https://api.github.com/users/AngelicosPhosphoros/following{/other_user}", "gists_url": "https://api.github.com/users/AngelicosPhosphoros/gists{/gist_id}", "starred_url": "https://api.github.com/users/AngelicosPhosphoros/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AngelicosPhosphoros/subscriptions", "organizations_url": "https://api.github.com/users/AngelicosPhosphoros/orgs", "repos_url": "https://api.github.com/users/AngelicosPhosphoros/repos", "events_url": "https://api.github.com/users/AngelicosPhosphoros/events{/privacy}", "received_events_url": "https://api.github.com/users/AngelicosPhosphoros/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "836c31742687ba4e2f857b5b698e1e9e6b67619c", "url": "https://api.github.com/repos/rust-lang/rust/commits/836c31742687ba4e2f857b5b698e1e9e6b67619c", "html_url": "https://github.com/rust-lang/rust/commit/836c31742687ba4e2f857b5b698e1e9e6b67619c"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "adb033e6bdf1ba7e1c92a32378797dc3358c79b3", "filename": "library/core/src/cmp.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ed0d8fa3e8c061fdd22fb95f6cfadbada864118d/library%2Fcore%2Fsrc%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed0d8fa3e8c061fdd22fb95f6cfadbada864118d/library%2Fcore%2Fsrc%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcmp.rs?ref=ed0d8fa3e8c061fdd22fb95f6cfadbada864118d", "patch": "@@ -981,7 +981,8 @@ pub trait PartialOrd<Rhs: ?Sized = Self>: PartialEq<Rhs> {\n     #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn le(&self, other: &Rhs) -> bool {\n-        matches!(self.partial_cmp(other), Some(Less | Equal))\n+        // Pattern `Some(Less | Eq)` optimizes worse than negating `None | Some(Greater)`.\n+        !matches!(self.partial_cmp(other), None | Some(Greater))\n     }\n \n     /// This method tests greater than (for `self` and `other`) and is used by the `>` operator."}, {"sha": "85c2bbfd040bdb7b7d8993a93c509cb58506af5b", "filename": "src/test/codegen/issue-73338-effecient-cmp.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/ed0d8fa3e8c061fdd22fb95f6cfadbada864118d/src%2Ftest%2Fcodegen%2Fissue-73338-effecient-cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed0d8fa3e8c061fdd22fb95f6cfadbada864118d/src%2Ftest%2Fcodegen%2Fissue-73338-effecient-cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fissue-73338-effecient-cmp.rs?ref=ed0d8fa3e8c061fdd22fb95f6cfadbada864118d", "patch": "@@ -0,0 +1,39 @@\n+// This test checks that comparison operation\n+// generated by #[derive(PartialOrd)]\n+// doesn't contain jumps for C enums\n+\n+// compile-flags: -Copt-level=3\n+\n+#![crate_type=\"lib\"]\n+\n+#[repr(u32)]\n+#[derive(Copy, Clone, Eq, PartialEq, PartialOrd)]\n+pub enum Foo {\n+    Zero,\n+    One,\n+    Two,\n+}\n+\n+#[no_mangle]\n+pub fn compare_less(a: Foo, b: Foo)->bool{\n+    // CHECK-NOT: br {{.*}}\n+    a < b\n+}\n+\n+#[no_mangle]\n+pub fn compare_le(a: Foo, b: Foo)->bool{\n+    // CHECK-NOT: br {{.*}}\n+    a <= b\n+}\n+\n+#[no_mangle]\n+pub fn compare_ge(a: Foo, b: Foo)->bool{\n+    // CHECK-NOT: br {{.*}}\n+    a >= b\n+}\n+\n+#[no_mangle]\n+pub fn compare_greater(a: Foo, b: Foo)->bool{\n+    // CHECK-NOT: br {{.*}}\n+    a > b\n+}"}]}