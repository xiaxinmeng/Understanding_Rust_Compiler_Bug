{"sha": "adcc02ed8ac1cdf040719d5b32574fb6fccb674a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkY2MwMmVkOGFjMWNkZjA0MDcxOWQ1YjMyNTc0ZmI2ZmNjYjY3NGE=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-07-06T17:35:08Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-07-06T17:35:08Z"}, "message": "Address reviews", "tree": {"sha": "cd46c2ee2fdbee38ca24a0ac37bf7c79674a0e01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd46c2ee2fdbee38ca24a0ac37bf7c79674a0e01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adcc02ed8ac1cdf040719d5b32574fb6fccb674a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adcc02ed8ac1cdf040719d5b32574fb6fccb674a", "html_url": "https://github.com/rust-lang/rust/commit/adcc02ed8ac1cdf040719d5b32574fb6fccb674a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adcc02ed8ac1cdf040719d5b32574fb6fccb674a/comments", "author": null, "committer": null, "parents": [{"sha": "0579c3e0aa21df8c63cc10036107027aee723fd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0579c3e0aa21df8c63cc10036107027aee723fd8", "html_url": "https://github.com/rust-lang/rust/commit/0579c3e0aa21df8c63cc10036107027aee723fd8"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "c3ca1de3a23b9a13aca4c314951b7eae816c7546", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/adcc02ed8ac1cdf040719d5b32574fb6fccb674a/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcc02ed8ac1cdf040719d5b32574fb6fccb674a/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=adcc02ed8ac1cdf040719d5b32574fb6fccb674a", "patch": "@@ -488,7 +488,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Loops {\n                 },\n                 NeverLoopResult::MayContinueMainLoop | NeverLoopResult::Otherwise => (),\n             }\n-        };\n+        }\n \n         // check for `loop { if let {} else break }` that could be `while let`\n         // (also matches an explicit \"match\" instead of \"if let\")\n@@ -587,16 +587,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Loops {\n             }\n         }\n \n-        if_chain! {\n-            if let ExprKind::Loop(block, _, LoopSource::While) = &expr.node;\n-            if let Block { expr: Some(expr), .. } = &**block;\n-            if let ExprKind::Match(cond, arms, MatchSource::WhileDesugar) = &expr.node;\n-            if let ExprKind::DropTemps(cond) = &cond.node;\n-            if let [arm, ..] = &arms[..];\n-            if let Arm { body, .. } = arm;\n-            then {\n-                check_infinite_loop(cx, cond, body);\n-            }\n+        if let Some((cond, body)) = higher::while_loop(&expr) {\n+            check_infinite_loop(cx, cond, body);\n         }\n \n         check_needless_collect(expr, cx);"}, {"sha": "f419338097d2bd2af31b5e0aa49c10dbb1d93c93", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adcc02ed8ac1cdf040719d5b32574fb6fccb674a/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcc02ed8ac1cdf040719d5b32574fb6fccb674a/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=adcc02ed8ac1cdf040719d5b32574fb6fccb674a", "patch": "@@ -702,7 +702,7 @@ fn loop_desugaring_name(des: hir::LoopSource) -> &'static str {\n     match des {\n         hir::LoopSource::ForLoop => \"LoopSource::ForLoop\",\n         hir::LoopSource::Loop => \"LoopSource::Loop\",\n-        hir::LoopSource::While => \"LoopSource::WhileDesugar\",\n+        hir::LoopSource::While => \"LoopSource::While\",\n         hir::LoopSource::WhileLet => \"LoopSource::WhileLet\",\n     }\n }"}, {"sha": "6fb2a3622c603e1efcde4394a659d85f29469d63", "filename": "clippy_lints/src/utils/higher.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/adcc02ed8ac1cdf040719d5b32574fb6fccb674a/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcc02ed8ac1cdf040719d5b32574fb6fccb674a/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhigher.rs?ref=adcc02ed8ac1cdf040719d5b32574fb6fccb674a", "patch": "@@ -199,6 +199,23 @@ pub fn for_loop(expr: &hir::Expr) -> Option<(&hir::Pat, &hir::Expr, &hir::Expr)>\n     None\n }\n \n+/// Recover the essential nodes of a desugared while loop:\n+/// `while cond { body }` becomes `(cond, body)`.\n+pub fn while_loop(expr: &hir::Expr) -> Option<(&hir::Expr, &hir::Expr)> {\n+    if_chain! {\n+        if let hir::ExprKind::Loop(block, _, hir::LoopSource::While) = &expr.node;\n+        if let hir::Block { expr: Some(expr), .. } = &**block;\n+        if let hir::ExprKind::Match(cond, arms, hir::MatchSource::WhileDesugar) = &expr.node;\n+        if let hir::ExprKind::DropTemps(cond) = &cond.node;\n+        if let [arm, ..] = &arms[..];\n+        if let hir::Arm { body, .. } = arm;\n+        then {\n+            return Some((cond, body));\n+        }\n+    }\n+    None\n+}\n+\n /// Recover the essential nodes of a desugared if block\n /// `if cond { then } else { els }` becomes `(cond, then, Some(els))`\n pub fn if_block(expr: &hir::Expr) -> Option<(&hir::Expr, &hir::Expr, Option<&hir::Expr>)> {"}]}