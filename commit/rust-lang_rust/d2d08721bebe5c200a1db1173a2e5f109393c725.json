{"sha": "d2d08721bebe5c200a1db1173a2e5f109393c725", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyZDA4NzIxYmViZTVjMjAwYTFkYjExNzNhMmU1ZjEwOTM5M2M3MjU=", "commit": {"author": {"name": "Simon Mazur", "email": "semmaz.box@gmail.com", "date": "2015-09-29T18:25:40Z"}, "committer": {"name": "Simon Mazur", "email": "semmaz.box@gmail.com", "date": "2015-09-30T15:05:09Z"}, "message": "Implement `size_hint` for `EscapeDefault`", "tree": {"sha": "680dadde6b6462d381f7b78e04c81e8e4555a27a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/680dadde6b6462d381f7b78e04c81e8e4555a27a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2d08721bebe5c200a1db1173a2e5f109393c725", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2d08721bebe5c200a1db1173a2e5f109393c725", "html_url": "https://github.com/rust-lang/rust/commit/d2d08721bebe5c200a1db1173a2e5f109393c725", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2d08721bebe5c200a1db1173a2e5f109393c725/comments", "author": {"login": "semmaz", "id": 3989426, "node_id": "MDQ6VXNlcjM5ODk0MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/3989426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semmaz", "html_url": "https://github.com/semmaz", "followers_url": "https://api.github.com/users/semmaz/followers", "following_url": "https://api.github.com/users/semmaz/following{/other_user}", "gists_url": "https://api.github.com/users/semmaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/semmaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semmaz/subscriptions", "organizations_url": "https://api.github.com/users/semmaz/orgs", "repos_url": "https://api.github.com/users/semmaz/repos", "events_url": "https://api.github.com/users/semmaz/events{/privacy}", "received_events_url": "https://api.github.com/users/semmaz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semmaz", "id": 3989426, "node_id": "MDQ6VXNlcjM5ODk0MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/3989426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semmaz", "html_url": "https://github.com/semmaz", "followers_url": "https://api.github.com/users/semmaz/followers", "following_url": "https://api.github.com/users/semmaz/following{/other_user}", "gists_url": "https://api.github.com/users/semmaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/semmaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semmaz/subscriptions", "organizations_url": "https://api.github.com/users/semmaz/orgs", "repos_url": "https://api.github.com/users/semmaz/repos", "events_url": "https://api.github.com/users/semmaz/events{/privacy}", "received_events_url": "https://api.github.com/users/semmaz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "025ca11ab909a2f2eda4ae8ccb891acf83b296f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/025ca11ab909a2f2eda4ae8ccb891acf83b296f3", "html_url": "https://github.com/rust-lang/rust/commit/025ca11ab909a2f2eda4ae8ccb891acf83b296f3"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "8d1af46691c70ed3a74b5d8d1c26514007787c28", "filename": "src/libcore/char.rs", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d2d08721bebe5c200a1db1173a2e5f109393c725/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2d08721bebe5c200a1db1173a2e5f109393c725/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=d2d08721bebe5c200a1db1173a2e5f109393c725", "patch": "@@ -147,7 +147,6 @@ pub trait CharExt {\n     fn to_digit(self, radix: u32) -> Option<u32>;\n     fn escape_unicode(self) -> EscapeUnicode;\n     fn escape_default(self) -> EscapeDefault;\n-    fn needs_escape_default(self) -> bool;\n     fn len_utf8(self) -> usize;\n     fn len_utf16(self) -> usize;\n     fn encode_utf8(self, dst: &mut [u8]) -> Option<usize>;\n@@ -186,24 +185,13 @@ impl CharExt for char {\n             '\\t' => EscapeDefaultState::Backslash('t'),\n             '\\r' => EscapeDefaultState::Backslash('r'),\n             '\\n' => EscapeDefaultState::Backslash('n'),\n-            '\\\\' => EscapeDefaultState::Backslash('\\\\'),\n-            '\\'' => EscapeDefaultState::Backslash('\\''),\n-            '\"'  => EscapeDefaultState::Backslash('\"'),\n+            '\\\\' | '\\'' | '\"' => EscapeDefaultState::Backslash(self),\n             '\\x20' ... '\\x7e' => EscapeDefaultState::Char(self),\n             _ => EscapeDefaultState::Unicode(self.escape_unicode())\n         };\n         EscapeDefault { state: init_state }\n     }\n \n-    #[inline]\n-    fn needs_escape_default(self) -> bool {\n-        match self {\n-            '\\\\' | '\\'' | '\"' => true,\n-            '\\x20' ... '\\x7e' => false,\n-            _ => true\n-        }\n-    }\n-\n     #[inline]\n     fn len_utf8(self) -> usize {\n         let code = self as u32;\n@@ -390,4 +378,13 @@ impl Iterator for EscapeDefault {\n             EscapeDefaultState::Unicode(ref mut iter) => iter.next()\n         }\n     }\n+\n+    fn size_hint(&self) -> (usize, Option<usize>) {\n+        match self.state {\n+            EscapeDefaultState::Char(_) => (1, Some(1)),\n+            EscapeDefaultState::Backslash(_) => (2, Some(2)),\n+            EscapeDefaultState::Unicode(_) => (0, Some(10)),\n+            _ => (0, Some(0))\n+        }\n+    }\n }"}, {"sha": "88b3963df8d9b5e2eb30b661cad2d19ba2a6351e", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d2d08721bebe5c200a1db1173a2e5f109393c725/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2d08721bebe5c200a1db1173a2e5f109393c725/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=d2d08721bebe5c200a1db1173a2e5f109393c725", "patch": "@@ -1313,11 +1313,12 @@ impl Debug for str {\n         try!(f.write_char('\"'));\n         let mut from = 0;\n         for (i, c) in self.char_indices() {\n+            let esc = c.escape_default();\n             // If char needs escaping, flush backlog so far and write, else skip\n-            if c.needs_escape_default() {\n+            if esc.size_hint().0 != 1 {\n                 try!(f.write_str(&self[from..i]));\n-                for e in c.escape_default() {\n-                    try!(f.write_char(e));\n+                for c in esc {\n+                    try!(f.write_char(c));\n                 }\n                 from = i + c.len_utf8();\n             }"}]}