{"sha": "5b74a33b8d03da897553b42270cdab541d28b33f", "node_id": "C_kwDOAAsO6NoAKDViNzRhMzNiOGQwM2RhODk3NTUzYjQyMjcwY2RhYjU0MWQyOGIzM2Y", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-31T05:26:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-31T05:26:34Z"}, "message": "Rollup merge of #106248 - dtolnay:revertupcastlint, r=jackh726\n\nRevert \"Implement allow-by-default `multiple_supertrait_upcastable` lint\"\n\nThis is a clean revert of #105484.\n\nI confirmed that reverting that PR fixes the regression reported in #106247. ~~I can't say I understand what this code is doing, but maybe it can be re-landed with a different implementation.~~ **Edit:** https://github.com/rust-lang/rust/issues/106247#issuecomment-1367174384 has an explanation of why #105484 ends up surfacing spurious `where_clause_object_safety` errors. The implementation of `where_clause_object_safety` assumes we only check whether a trait is object safe when somebody actually uses that trait with `dyn`. However the implementation of `multiple_supertrait_upcastable` added in the problematic PR involves checking *every* trait for whether it is object-safe.\n\nFYI `@nbdd0121` `@compiler-errors`", "tree": {"sha": "416bf3006b05d1a7ba7d7067c9d4542a5ef1cd43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/416bf3006b05d1a7ba7d7067c9d4542a5ef1cd43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b74a33b8d03da897553b42270cdab541d28b33f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjr8gKCRBK7hj4Ov3rIwAAmnkIAFp174YHPIzogqqaIGxDrfx3\nXo2ChuY8tc60SfSdqxCUXJc5c1g1DdNnwtRx38evLPL64FW3S29jCm83VDWYPPaq\nQuLuqPdY+ZcWAm35NxA3bUJGpYE1mk/jyiWzmwS+LzxWzrKHSsBcI0rx/S3yb4DV\n/or2EdZ/dJzpc6l+7Ecx7jgU5qiSMRsy57t2Isr8RAo5DhVfZH0YocBMBHc/BWB8\ngcHYQvWy+dy9dg+HTvjinXSWPOTINYoKHOka0+TnOF297XYnQfNcROkNI2nATh7N\nY1ZAcnTBRhMeaC2y3wHA8ncKDUiuSVkGRrhH3BF1ODWw6JEF+5AGgyTE8yG/pgw=\n=dHI3\n-----END PGP SIGNATURE-----\n", "payload": "tree 416bf3006b05d1a7ba7d7067c9d4542a5ef1cd43\nparent fad73392dc8659f34385f418c8f936bafa562dfb\nparent 4271ed48e90d40eb42030e153d3c7b403789c5be\nauthor Michael Goulet <michael@errs.io> 1672464394 -0800\ncommitter GitHub <noreply@github.com> 1672464394 -0800\n\nRollup merge of #106248 - dtolnay:revertupcastlint, r=jackh726\n\nRevert \"Implement allow-by-default `multiple_supertrait_upcastable` lint\"\n\nThis is a clean revert of #105484.\n\nI confirmed that reverting that PR fixes the regression reported in #106247. ~~I can't say I understand what this code is doing, but maybe it can be re-landed with a different implementation.~~ **Edit:** https://github.com/rust-lang/rust/issues/106247#issuecomment-1367174384 has an explanation of why #105484 ends up surfacing spurious `where_clause_object_safety` errors. The implementation of `where_clause_object_safety` assumes we only check whether a trait is object safe when somebody actually uses that trait with `dyn`. However the implementation of `multiple_supertrait_upcastable` added in the problematic PR involves checking *every* trait for whether it is object-safe.\n\nFYI `@nbdd0121` `@compiler-errors`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b74a33b8d03da897553b42270cdab541d28b33f", "html_url": "https://github.com/rust-lang/rust/commit/5b74a33b8d03da897553b42270cdab541d28b33f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b74a33b8d03da897553b42270cdab541d28b33f/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fad73392dc8659f34385f418c8f936bafa562dfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/fad73392dc8659f34385f418c8f936bafa562dfb", "html_url": "https://github.com/rust-lang/rust/commit/fad73392dc8659f34385f418c8f936bafa562dfb"}, {"sha": "4271ed48e90d40eb42030e153d3c7b403789c5be", "url": "https://api.github.com/repos/rust-lang/rust/commits/4271ed48e90d40eb42030e153d3c7b403789c5be", "html_url": "https://github.com/rust-lang/rust/commit/4271ed48e90d40eb42030e153d3c7b403789c5be"}], "stats": {"total": 176, "additions": 9, "deletions": 167}, "files": [{"sha": "deb37bdebda638a77701537f008000a80452a4d6", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b74a33b8d03da897553b42270cdab541d28b33f/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b74a33b8d03da897553b42270cdab541d28b33f/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=5b74a33b8d03da897553b42270cdab541d28b33f", "patch": "@@ -160,8 +160,6 @@ declare_features! (\n     (active, intrinsics, \"1.0.0\", None, None),\n     /// Allows using `#[lang = \"..\"]` attribute for linking items to special compiler logic.\n     (active, lang_items, \"1.0.0\", None, None),\n-    /// Allows the `multiple_supertrait_upcastable` lint.\n-    (active, multiple_supertrait_upcastable, \"CURRENT_RUSTC_VERSION\", None, None),\n     /// Allows using `#[omit_gdb_pretty_printer_section]`.\n     (active, omit_gdb_pretty_printer_section, \"1.5.0\", None, None),\n     /// Allows using `#[prelude_import]` on glob `use` items."}, {"sha": "1275d6f223c7a38ebe5fbfd42cc50c04c4990149", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5b74a33b8d03da897553b42270cdab541d28b33f/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b74a33b8d03da897553b42270cdab541d28b33f/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=5b74a33b8d03da897553b42270cdab541d28b33f", "patch": "@@ -61,7 +61,6 @@ mod late;\n mod let_underscore;\n mod levels;\n mod methods;\n-mod multiple_supertrait_upcastable;\n mod non_ascii_idents;\n mod non_fmt_panic;\n mod nonstandard_style;\n@@ -96,7 +95,6 @@ use hidden_unicode_codepoints::*;\n use internal::*;\n use let_underscore::*;\n use methods::*;\n-use multiple_supertrait_upcastable::*;\n use non_ascii_idents::*;\n use non_fmt_panic::NonPanicFmt;\n use nonstandard_style::*;\n@@ -231,7 +229,6 @@ late_lint_methods!(\n             InvalidAtomicOrdering: InvalidAtomicOrdering,\n             NamedAsmLabels: NamedAsmLabels,\n             OpaqueHiddenInferredBound: OpaqueHiddenInferredBound,\n-            MultipleSupertraitUpcastable: MultipleSupertraitUpcastable,\n         ]\n     ]\n );"}, {"sha": "5861b826b1ca337309631b1ed4c5e0947f9adaf7", "filename": "compiler/rustc_lint/src/multiple_supertrait_upcastable.rs", "status": "removed", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/fad73392dc8659f34385f418c8f936bafa562dfb/compiler%2Frustc_lint%2Fsrc%2Fmultiple_supertrait_upcastable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fad73392dc8659f34385f418c8f936bafa562dfb/compiler%2Frustc_lint%2Fsrc%2Fmultiple_supertrait_upcastable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fmultiple_supertrait_upcastable.rs?ref=fad73392dc8659f34385f418c8f936bafa562dfb", "patch": "@@ -1,63 +0,0 @@\n-use crate::{LateContext, LateLintPass, LintContext};\n-\n-use rustc_errors::DelayDm;\n-use rustc_hir as hir;\n-use rustc_span::sym;\n-\n-declare_lint! {\n-    /// The `multiple_supertrait_upcastable` lint detects when an object-safe trait has multiple\n-    /// supertraits.\n-    ///\n-    /// ### Example\n-    ///\n-    /// ```rust\n-    /// trait A {}\n-    /// trait B {}\n-    ///\n-    /// #[warn(multiple_supertrait_upcastable)]\n-    /// trait C: A + B {}\n-    /// ```\n-    ///\n-    /// {{produces}}\n-    ///\n-    /// ### Explanation\n-    ///\n-    /// To support upcasting with multiple supertraits, we need to store multiple vtables and this\n-    /// can result in extra space overhead, even if no code actually uses upcasting.\n-    /// This lint allows users to identify when such scenarios occur and to decide whether the\n-    /// additional overhead is justified.\n-    pub MULTIPLE_SUPERTRAIT_UPCASTABLE,\n-    Allow,\n-    \"detect when an object-safe trait has multiple supertraits\",\n-    @feature_gate = sym::multiple_supertrait_upcastable;\n-}\n-\n-declare_lint_pass!(MultipleSupertraitUpcastable => [MULTIPLE_SUPERTRAIT_UPCASTABLE]);\n-\n-impl<'tcx> LateLintPass<'tcx> for MultipleSupertraitUpcastable {\n-    fn check_item(&mut self, cx: &LateContext<'tcx>, item: &'tcx hir::Item<'tcx>) {\n-        let def_id = item.owner_id.to_def_id();\n-        if let hir::ItemKind::Trait(_, _, _, _, _) = item.kind\n-            && cx.tcx.is_object_safe(def_id)\n-        {\n-            let direct_super_traits_iter = cx.tcx\n-                    .super_predicates_of(def_id)\n-                    .predicates\n-                    .into_iter()\n-                    .filter_map(|(pred, _)| pred.to_opt_poly_trait_pred());\n-            if direct_super_traits_iter.count() > 1 {\n-                cx.struct_span_lint(\n-                    MULTIPLE_SUPERTRAIT_UPCASTABLE,\n-                    cx.tcx.def_span(def_id),\n-                    DelayDm(|| {\n-                        format!(\n-                            \"`{}` is object-safe and has multiple supertraits\",\n-                            item.ident,\n-                        )\n-                    }),\n-                    |diag| diag,\n-                );\n-            }\n-        }\n-    }\n-}"}, {"sha": "85510fa2c660c53c700764823d1150eb3721927e", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b74a33b8d03da897553b42270cdab541d28b33f/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b74a33b8d03da897553b42270cdab541d28b33f/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=5b74a33b8d03da897553b42270cdab541d28b33f", "patch": "@@ -944,7 +944,6 @@ symbols! {\n         mul,\n         mul_assign,\n         mul_with_overflow,\n-        multiple_supertrait_upcastable,\n         must_not_suspend,\n         must_use,\n         naked,"}, {"sha": "9857f0516baa217f84fc0e66223c4e53bf0da7a4", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b74a33b8d03da897553b42270cdab541d28b33f/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b74a33b8d03da897553b42270cdab541d28b33f/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=5b74a33b8d03da897553b42270cdab541d28b33f", "patch": "@@ -87,7 +87,6 @@\n #![warn(missing_debug_implementations)]\n #![warn(missing_docs)]\n #![allow(explicit_outlives_requirements)]\n-#![cfg_attr(not(bootstrap), warn(multiple_supertrait_upcastable))]\n //\n // Library features:\n #![feature(alloc_layout_extra)]\n@@ -192,7 +191,6 @@\n #![feature(unsized_fn_params)]\n #![feature(c_unwind)]\n #![feature(with_negative_coherence)]\n-#![cfg_attr(not(bootstrap), feature(multiple_supertrait_upcastable))]\n //\n // Rustdoc features:\n #![feature(doc_cfg)]"}, {"sha": "7152300abcbf3a446cca031d797040d23abb2353", "filename": "library/core/src/error.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b74a33b8d03da897553b42270cdab541d28b33f/library%2Fcore%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b74a33b8d03da897553b42270cdab541d28b33f/library%2Fcore%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ferror.rs?ref=5b74a33b8d03da897553b42270cdab541d28b33f", "patch": "@@ -28,7 +28,6 @@ use crate::fmt::{Debug, Display};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[cfg_attr(not(test), rustc_diagnostic_item = \"Error\")]\n #[rustc_has_incoherent_inherent_impls]\n-#[cfg_attr(not(bootstrap), allow(multiple_supertrait_upcastable))]\n pub trait Error: Debug + Display {\n     /// The lower-level source of this error, if any.\n     ///"}, {"sha": "0e3fef4ead31aefd1703f83966fffe0ce6ecb6af", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b74a33b8d03da897553b42270cdab541d28b33f/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b74a33b8d03da897553b42270cdab541d28b33f/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=5b74a33b8d03da897553b42270cdab541d28b33f", "patch": "@@ -95,7 +95,6 @@\n #![warn(missing_docs)]\n #![allow(explicit_outlives_requirements)]\n #![allow(incomplete_features)]\n-#![cfg_attr(not(bootstrap), warn(multiple_supertrait_upcastable))]\n //\n // Library features:\n #![feature(const_align_offset)]\n@@ -232,7 +231,6 @@\n #![feature(unsized_fn_params)]\n #![feature(asm_const)]\n #![feature(const_transmute_copy)]\n-#![cfg_attr(not(bootstrap), feature(multiple_supertrait_upcastable))]\n //\n // Target features:\n #![feature(arm_target_feature)]"}, {"sha": "0467dea621b4c2a063b4de2f83ba99ac4905bfb8", "filename": "src/test/ui/feature-gates/feature-gate-multiple_supertrait_upcastable.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fad73392dc8659f34385f418c8f936bafa562dfb/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-multiple_supertrait_upcastable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fad73392dc8659f34385f418c8f936bafa562dfb/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-multiple_supertrait_upcastable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-multiple_supertrait_upcastable.rs?ref=fad73392dc8659f34385f418c8f936bafa562dfb", "patch": "@@ -1,12 +0,0 @@\n-// check-pass\n-\n-#![deny(multiple_supertrait_upcastable)]\n-//~^ WARNING unknown lint: `multiple_supertrait_upcastable`\n-//~| WARNING unknown lint: `multiple_supertrait_upcastable`\n-//~| WARNING unknown lint: `multiple_supertrait_upcastable`\n-#![warn(multiple_supertrait_upcastable)]\n-//~^ WARNING unknown lint: `multiple_supertrait_upcastable`\n-//~| WARNING unknown lint: `multiple_supertrait_upcastable`\n-//~| WARNING unknown lint: `multiple_supertrait_upcastable`\n-\n-fn main() {}"}, {"sha": "1f725f35417785e05aad434e5797fa07f181ec32", "filename": "src/test/ui/feature-gates/feature-gate-multiple_supertrait_upcastable.stderr", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/fad73392dc8659f34385f418c8f936bafa562dfb/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-multiple_supertrait_upcastable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fad73392dc8659f34385f418c8f936bafa562dfb/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-multiple_supertrait_upcastable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-multiple_supertrait_upcastable.stderr?ref=fad73392dc8659f34385f418c8f936bafa562dfb", "patch": "@@ -1,57 +0,0 @@\n-warning: unknown lint: `multiple_supertrait_upcastable`\n-  --> $DIR/feature-gate-multiple_supertrait_upcastable.rs:3:1\n-   |\n-LL | #![deny(multiple_supertrait_upcastable)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: the `multiple_supertrait_upcastable` lint is unstable\n-   = help: add `#![feature(multiple_supertrait_upcastable)]` to the crate attributes to enable\n-   = note: `#[warn(unknown_lints)]` on by default\n-\n-warning: unknown lint: `multiple_supertrait_upcastable`\n-  --> $DIR/feature-gate-multiple_supertrait_upcastable.rs:7:1\n-   |\n-LL | #![warn(multiple_supertrait_upcastable)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: the `multiple_supertrait_upcastable` lint is unstable\n-   = help: add `#![feature(multiple_supertrait_upcastable)]` to the crate attributes to enable\n-\n-warning: unknown lint: `multiple_supertrait_upcastable`\n-  --> $DIR/feature-gate-multiple_supertrait_upcastable.rs:3:1\n-   |\n-LL | #![deny(multiple_supertrait_upcastable)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: the `multiple_supertrait_upcastable` lint is unstable\n-   = help: add `#![feature(multiple_supertrait_upcastable)]` to the crate attributes to enable\n-\n-warning: unknown lint: `multiple_supertrait_upcastable`\n-  --> $DIR/feature-gate-multiple_supertrait_upcastable.rs:7:1\n-   |\n-LL | #![warn(multiple_supertrait_upcastable)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: the `multiple_supertrait_upcastable` lint is unstable\n-   = help: add `#![feature(multiple_supertrait_upcastable)]` to the crate attributes to enable\n-\n-warning: unknown lint: `multiple_supertrait_upcastable`\n-  --> $DIR/feature-gate-multiple_supertrait_upcastable.rs:3:1\n-   |\n-LL | #![deny(multiple_supertrait_upcastable)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: the `multiple_supertrait_upcastable` lint is unstable\n-   = help: add `#![feature(multiple_supertrait_upcastable)]` to the crate attributes to enable\n-\n-warning: unknown lint: `multiple_supertrait_upcastable`\n-  --> $DIR/feature-gate-multiple_supertrait_upcastable.rs:7:1\n-   |\n-LL | #![warn(multiple_supertrait_upcastable)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: the `multiple_supertrait_upcastable` lint is unstable\n-   = help: add `#![feature(multiple_supertrait_upcastable)]` to the crate attributes to enable\n-\n-warning: 6 warnings emitted\n-"}, {"sha": "64bf59e5d3aa51273644444971b0c760cea5954f", "filename": "src/test/ui/object-safety/issue-106247.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5b74a33b8d03da897553b42270cdab541d28b33f/src%2Ftest%2Fui%2Fobject-safety%2Fissue-106247.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b74a33b8d03da897553b42270cdab541d28b33f/src%2Ftest%2Fui%2Fobject-safety%2Fissue-106247.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-safety%2Fissue-106247.rs?ref=5b74a33b8d03da897553b42270cdab541d28b33f", "patch": "@@ -0,0 +1,9 @@\n+// check-pass\n+\n+#![deny(where_clauses_object_safety)]\n+\n+pub trait Trait {\n+    fn method(&self) where Self: Sync;\n+}\n+\n+fn main() {}"}, {"sha": "3c6ab86e4c65ce205360978cd76a534124bad1e0", "filename": "src/test/ui/traits/trait-upcasting/multiple_supertrait_upcastable.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fad73392dc8659f34385f418c8f936bafa562dfb/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Fmultiple_supertrait_upcastable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fad73392dc8659f34385f418c8f936bafa562dfb/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Fmultiple_supertrait_upcastable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Fmultiple_supertrait_upcastable.rs?ref=fad73392dc8659f34385f418c8f936bafa562dfb", "patch": "@@ -1,10 +0,0 @@\n-#![feature(multiple_supertrait_upcastable)]\n-#![deny(multiple_supertrait_upcastable)]\n-\n-trait A {}\n-trait B {}\n-\n-trait C: A + B {}\n-//~^ ERROR `C` is object-safe and has multiple supertraits\n-\n-fn main() {}"}, {"sha": "ad80a009ece80674a72773efc993d868bdecea2a", "filename": "src/test/ui/traits/trait-upcasting/multiple_supertrait_upcastable.stderr", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fad73392dc8659f34385f418c8f936bafa562dfb/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Fmultiple_supertrait_upcastable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fad73392dc8659f34385f418c8f936bafa562dfb/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Fmultiple_supertrait_upcastable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Fmultiple_supertrait_upcastable.stderr?ref=fad73392dc8659f34385f418c8f936bafa562dfb", "patch": "@@ -1,14 +0,0 @@\n-error: `C` is object-safe and has multiple supertraits\n-  --> $DIR/multiple_supertrait_upcastable.rs:7:1\n-   |\n-LL | trait C: A + B {}\n-   | ^^^^^^^^^^^^^^\n-   |\n-note: the lint level is defined here\n-  --> $DIR/multiple_supertrait_upcastable.rs:2:9\n-   |\n-LL | #![deny(multiple_supertrait_upcastable)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to previous error\n-"}]}