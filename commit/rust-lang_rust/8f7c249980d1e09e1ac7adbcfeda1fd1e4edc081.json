{"sha": "8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmN2MyNDk5ODBkMWUwOWUxYWM3YWRiY2ZlZGExZmQxZTRlZGMwODE=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2021-08-30T14:38:27Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2021-09-01T22:17:14Z"}, "message": "rustc_target: move `LayoutOf` to `ty::layout`.", "tree": {"sha": "224a16ac44573271c682fa08c125fa635d27df33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/224a16ac44573271c682fa08c125fa635d27df33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081", "html_url": "https://github.com/rust-lang/rust/commit/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78bf4acc3a18848e21896bae97859c5811b320d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/78bf4acc3a18848e21896bae97859c5811b320d4", "html_url": "https://github.com/rust-lang/rust/commit/78bf4acc3a18848e21896bae97859c5811b320d4"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "5dcf1824ef0b7e3d387d0507f8f987a0ccf011df", "filename": "clippy_lints/src/casts/cast_ptr_alignment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Fcasts%2Fcast_ptr_alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Fcasts%2Fcast_ptr_alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Fcast_ptr_alignment.rs?ref=8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081", "patch": "@@ -3,9 +3,9 @@ use clippy_utils::is_hir_ty_cfg_dependant;\n use if_chain::if_chain;\n use rustc_hir::{Expr, ExprKind, GenericArg};\n use rustc_lint::LateContext;\n+use rustc_middle::ty::layout::LayoutOf;\n use rustc_middle::ty::{self, Ty};\n use rustc_span::symbol::sym;\n-use rustc_target::abi::LayoutOf;\n \n use super::CAST_PTR_ALIGNMENT;\n "}, {"sha": "1ba241d37761675150a31b80e2e30cc4dc76023e", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081", "patch": "@@ -5,11 +5,11 @@ use rustc_hir::{self, AssocItemKind, Body, FnDecl, HirId, HirIdSet, Impl, ItemKi\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::mir::FakeReadCause;\n+use rustc_middle::ty::layout::LayoutOf;\n use rustc_middle::ty::{self, TraitRef, Ty};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::kw;\n-use rustc_target::abi::LayoutOf;\n use rustc_target::spec::abi::Abi;\n use rustc_typeck::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n \n@@ -171,7 +171,8 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n                 // skip if there is a `self` parameter binding to a type\n                 // that contains `Self` (i.e.: `self: Box<Self>`), see #4804\n                 if let Some(trait_self_ty) = self.trait_self_ty {\n-                    if map.name(cmt.hir_id) == kw::SelfLower && contains_ty(self.cx.tcx, cmt.place.ty(), trait_self_ty) {\n+                    if map.name(cmt.hir_id) == kw::SelfLower && contains_ty(self.cx.tcx, cmt.place.ty(), trait_self_ty)\n+                    {\n                         return;\n                     }\n                 }"}, {"sha": "b1f70b30c12cf1c1605b09ac48cf9fc9891fad3e", "filename": "clippy_lints/src/invalid_upcast_comparisons.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Finvalid_upcast_comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Finvalid_upcast_comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finvalid_upcast_comparisons.rs?ref=8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081", "patch": "@@ -2,10 +2,10 @@ use std::cmp::Ordering;\n \n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::layout::LayoutOf;\n use rustc_middle::ty::{self, IntTy, UintTy};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::Span;\n-use rustc_target::abi::LayoutOf;\n \n use clippy_utils::comparisons::Rel;\n use clippy_utils::consts::{constant, Constant};"}, {"sha": "10281496c11cbb4e65887c6ea5e17447d17a2ab3", "filename": "clippy_lints/src/large_const_arrays.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Flarge_const_arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Flarge_const_arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_const_arrays.rs?ref=8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081", "patch": "@@ -1,10 +1,10 @@\n-use crate::rustc_target::abi::LayoutOf;\n use clippy_utils::diagnostics::span_lint_and_then;\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Item, ItemKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::mir::interpret::ConstValue;\n+use rustc_middle::ty::layout::LayoutOf;\n use rustc_middle::ty::{self, ConstKind};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::{BytePos, Pos, Span};"}, {"sha": "e4b8e7546283b460f6f40da388ae8b3c51453d3c", "filename": "clippy_lints/src/large_enum_variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_enum_variant.rs?ref=8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081", "patch": "@@ -6,8 +6,8 @@ use rustc_errors::Applicability;\n use rustc_hir::{Item, ItemKind, VariantData};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::lint::in_external_macro;\n+use rustc_middle::ty::layout::LayoutOf;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n-use rustc_target::abi::LayoutOf;\n \n declare_clippy_lint! {\n     /// ### What it does"}, {"sha": "bbb6c1f902ce077e7fcfc6f168021f71fb356cde", "filename": "clippy_lints/src/large_stack_arrays.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs?ref=8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081", "patch": "@@ -4,11 +4,10 @@ use if_chain::if_chain;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::mir::interpret::ConstValue;\n+use rustc_middle::ty::layout::LayoutOf;\n use rustc_middle::ty::{self, ConstKind};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n-use crate::rustc_target::abi::LayoutOf;\n-\n declare_clippy_lint! {\n     /// ### What it does\n     /// Checks for local arrays that may be too large."}, {"sha": "7ecafa1f3ba5b90d4766902cd46f04adb729f22f", "filename": "clippy_lints/src/methods/manual_saturating_arithmetic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Fmethods%2Fmanual_saturating_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Fmethods%2Fmanual_saturating_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmanual_saturating_arithmetic.rs?ref=8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081", "patch": "@@ -6,7 +6,7 @@ use rustc_ast::ast;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n-use rustc_target::abi::LayoutOf;\n+use rustc_middle::ty::layout::LayoutOf;\n \n pub fn check(\n     cx: &LateContext<'_>,"}, {"sha": "6229b9608b3cbe5aad07d6316c374f70e30f2cff", "filename": "clippy_lints/src/pass_by_ref_or_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs?ref=8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081", "patch": "@@ -13,10 +13,10 @@ use rustc_hir::intravisit::FnKind;\n use rustc_hir::{BindingAnnotation, Body, FnDecl, HirId, Impl, ItemKind, MutTy, Mutability, Node, PatKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty;\n+use rustc_middle::ty::layout::LayoutOf;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::def_id::LocalDefId;\n use rustc_span::{sym, Span};\n-use rustc_target::abi::LayoutOf;\n use rustc_target::spec::abi::Abi;\n use rustc_target::spec::Target;\n "}, {"sha": "e7e2016d8f2f3de1eb7c9809111036b3cf5b36f8", "filename": "clippy_lints/src/types/vec_box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs?ref=8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081", "patch": "@@ -5,9 +5,9 @@ use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{self as hir, def_id::DefId, GenericArg, QPath, TyKind};\n use rustc_lint::LateContext;\n+use rustc_middle::ty::layout::LayoutOf;\n use rustc_middle::ty::TypeFoldable;\n use rustc_span::symbol::sym;\n-use rustc_target::abi::LayoutOf;\n use rustc_typeck::hir_ty_to_ty;\n \n use super::VEC_BOX;"}, {"sha": "e76d5f81c9640403a75295f93c55bdb7ba6c78fa", "filename": "clippy_lints/src/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec.rs?ref=8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081", "patch": "@@ -1,4 +1,3 @@\n-use crate::rustc_target::abi::LayoutOf;\n use clippy_utils::consts::{constant, Constant};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::higher;\n@@ -8,6 +7,7 @@ use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{BorrowKind, Expr, ExprKind, Mutability};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::layout::LayoutOf;\n use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;"}, {"sha": "8e1cd655b6111c5cb1a66d4abac0fa13deaee7b1", "filename": "clippy_lints/src/zero_sized_map_values.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs?ref=8f7c249980d1e09e1ac7adbcfeda1fd1e4edc081", "patch": "@@ -3,10 +3,10 @@ use clippy_utils::ty::{is_normalizable, is_type_diagnostic_item};\n use if_chain::if_chain;\n use rustc_hir::{self as hir, HirId, ItemKind, Node};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::layout::LayoutOf as _;\n use rustc_middle::ty::{Adt, Ty, TypeFoldable};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::sym;\n-use rustc_target::abi::LayoutOf as _;\n use rustc_typeck::hir_ty_to_ty;\n \n declare_clippy_lint! {"}]}