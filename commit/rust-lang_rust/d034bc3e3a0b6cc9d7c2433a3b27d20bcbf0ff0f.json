{"sha": "d034bc3e3a0b6cc9d7c2433a3b27d20bcbf0ff0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwMzRiYzNlM2EwYjZjYzlkN2MyNDMzYTNiMjdkMjBiY2JmMGZmMGY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-10T09:29:31Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-10T09:29:31Z"}, "message": "Rollup merge of #23125 - danburkert:master, r=brson", "tree": {"sha": "09eca60ee5ebc03adc4d0952721f71b5eea0d6d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09eca60ee5ebc03adc4d0952721f71b5eea0d6d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d034bc3e3a0b6cc9d7c2433a3b27d20bcbf0ff0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d034bc3e3a0b6cc9d7c2433a3b27d20bcbf0ff0f", "html_url": "https://github.com/rust-lang/rust/commit/d034bc3e3a0b6cc9d7c2433a3b27d20bcbf0ff0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d034bc3e3a0b6cc9d7c2433a3b27d20bcbf0ff0f/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc45572f7847f9143892065a741e41ff95ca91dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc45572f7847f9143892065a741e41ff95ca91dc", "html_url": "https://github.com/rust-lang/rust/commit/cc45572f7847f9143892065a741e41ff95ca91dc"}, {"sha": "e8ed2d41505826df2c3c53131de401f69b1df427", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8ed2d41505826df2c3c53131de401f69b1df427", "html_url": "https://github.com/rust-lang/rust/commit/e8ed2d41505826df2c3c53131de401f69b1df427"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "2ae1d4a9d50bc42f7adc9b130052740c45cbdcc6", "filename": "src/libstd/sync/mpsc/mod.rs", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/d034bc3e3a0b6cc9d7c2433a3b27d20bcbf0ff0f/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d034bc3e3a0b6cc9d7c2433a3b27d20bcbf0ff0f/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs?ref=d034bc3e3a0b6cc9d7c2433a3b27d20bcbf0ff0f", "patch": "@@ -318,6 +318,7 @@\n use prelude::v1::*;\n \n use sync::Arc;\n+use error;\n use fmt;\n use mem;\n use cell::UnsafeCell;\n@@ -975,6 +976,18 @@ impl<T> fmt::Display for SendError<T> {\n     }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<T> error::Error for SendError<T> {\n+\n+    fn description(&self) -> &str {\n+        \"sending on a closed channel\"\n+    }\n+\n+    fn cause(&self) -> Option<&error::Error> {\n+        None\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> fmt::Debug for TrySendError<T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n@@ -999,13 +1012,44 @@ impl<T> fmt::Display for TrySendError<T> {\n     }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<T> error::Error for TrySendError<T> {\n+\n+    fn description(&self) -> &str {\n+        match *self {\n+            TrySendError::Full(..) => {\n+                \"sending on a full channel\"\n+            }\n+            TrySendError::Disconnected(..) => {\n+                \"sending on a closed channel\"\n+            }\n+        }\n+    }\n+\n+    fn cause(&self) -> Option<&error::Error> {\n+        None\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl fmt::Display for RecvError {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         \"receiving on a closed channel\".fmt(f)\n     }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl error::Error for RecvError {\n+\n+    fn description(&self) -> &str {\n+        \"receiving on a closed channel\"\n+    }\n+\n+    fn cause(&self) -> Option<&error::Error> {\n+        None\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl fmt::Display for TryRecvError {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n@@ -1020,6 +1064,25 @@ impl fmt::Display for TryRecvError {\n     }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl error::Error for TryRecvError {\n+\n+    fn description(&self) -> &str {\n+        match *self {\n+            TryRecvError::Empty => {\n+                \"receiving on an empty channel\"\n+            }\n+            TryRecvError::Disconnected => {\n+                \"receiving on a closed channel\"\n+            }\n+        }\n+    }\n+\n+    fn cause(&self) -> Option<&error::Error> {\n+        None\n+    }\n+}\n+\n #[cfg(test)]\n mod test {\n     use prelude::v1::*;"}]}