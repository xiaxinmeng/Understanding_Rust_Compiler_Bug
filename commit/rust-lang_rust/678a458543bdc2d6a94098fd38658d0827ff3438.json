{"sha": "678a458543bdc2d6a94098fd38658d0827ff3438", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3OGE0NTg1NDNiZGMyZDZhOTQwOThmZDM4NjU4ZDA4MjdmZjM0Mzg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-06-01T07:24:43Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-06-01T07:24:43Z"}, "message": "move subs inside", "tree": {"sha": "c83cd99fe674b07f94197c52f911ef2381c1e627", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c83cd99fe674b07f94197c52f911ef2381c1e627"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/678a458543bdc2d6a94098fd38658d0827ff3438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/678a458543bdc2d6a94098fd38658d0827ff3438", "html_url": "https://github.com/rust-lang/rust/commit/678a458543bdc2d6a94098fd38658d0827ff3438", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/678a458543bdc2d6a94098fd38658d0827ff3438/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5023860a55328db5ef024225263ed71f46a19350", "url": "https://api.github.com/repos/rust-lang/rust/commits/5023860a55328db5ef024225263ed71f46a19350", "html_url": "https://github.com/rust-lang/rust/commit/5023860a55328db5ef024225263ed71f46a19350"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "e6a7dc64171875b78b5ceda897a8b4b7b66fd50a", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/678a458543bdc2d6a94098fd38658d0827ff3438/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/678a458543bdc2d6a94098fd38658d0827ff3438/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=678a458543bdc2d6a94098fd38658d0827ff3438", "patch": "@@ -78,7 +78,6 @@ pub fn main_loop(\n     let pool = ThreadPool::new(THREADPOOL_SIZE);\n     let (task_sender, task_receiver) = unbounded::<Task>();\n     let mut pending_requests = PendingRequests::default();\n-    let mut subs = Subscriptions::default();\n \n     log::info!(\"server initialized, serving requests\");\n     let main_res = main_loop_inner(\n@@ -90,7 +89,6 @@ pub fn main_loop(\n         task_receiver.clone(),\n         &mut state,\n         &mut pending_requests,\n-        &mut subs,\n     );\n \n     log::info!(\"waiting for tasks to finish...\");\n@@ -165,8 +163,8 @@ fn main_loop_inner(\n     task_receiver: Receiver<Task>,\n     state: &mut ServerWorldState,\n     pending_requests: &mut PendingRequests,\n-    subs: &mut Subscriptions,\n ) -> Result<()> {\n+    let mut subs = Subscriptions::default();\n     // We try not to index more than MAX_IN_FLIGHT_LIBS libraries at the same\n     // time to always have a thread ready to react to input.\n     let mut in_flight_libraries = 0;\n@@ -230,7 +228,7 @@ fn main_loop_inner(\n                     )?\n                 }\n                 RawMessage::Notification(not) => {\n-                    on_notification(msg_sender, state, pending_requests, subs, not)?;\n+                    on_notification(msg_sender, state, pending_requests, &mut subs, not)?;\n                     state_changed = true;\n                 }\n                 RawMessage::Response(resp) => log::error!(\"unexpected response: {:?}\", resp),"}]}