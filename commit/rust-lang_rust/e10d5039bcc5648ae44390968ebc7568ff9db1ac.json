{"sha": "e10d5039bcc5648ae44390968ebc7568ff9db1ac", "node_id": "C_kwDOAAsO6NoAKGUxMGQ1MDM5YmNjNTY0OGFlNDQzOTA5NjhlYmM3NTY4ZmY5ZGIxYWM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-03-28T18:41:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-28T18:41:50Z"}, "message": "Rollup merge of #95318 - rust-lang:notriddle/issue-95208, r=wesleywiser\n\ndiagnostics: correct generic bounds with doubled colon\n\nFixes #95208", "tree": {"sha": "e66e47a501a844e178529d488e93cd3bf6643a99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e66e47a501a844e178529d488e93cd3bf6643a99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e10d5039bcc5648ae44390968ebc7568ff9db1ac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiQgFuCRBK7hj4Ov3rIwAA7LIIAJ2pWGjpdJQp7EbcBVzg/qon\nq6p7v3TNhK8DjLYTkv+0SaFL6BN7pWjHnVB4RjIL+VZ00PCsjVG8juGbnVrCMfm7\nb4bp06Fop+wxUVJhReYOYEVmwFLYEULaAq7BfJQgmH5AUqhDR0BttWvD8yd+6ErT\nRq5xZtBU7/merMt1XPosZMjfYim6YMl+pOsPZ0a2Sa8I3e00dCC8AagwaKhhytwf\naE/810GlfbymluNhThg30GaY+NKfxlmu92Hkik5jWwoKc/Z3i6x+dijbAsqIBurM\nrRDEeNmVPj7FTtrmMO5NTOgtQrzkn7s7+Xak0SesNDfaVdXNoansmJiaUBN4cQE=\n=fkVW\n-----END PGP SIGNATURE-----\n", "payload": "tree e66e47a501a844e178529d488e93cd3bf6643a99\nparent 72770efcb0e04cb645911dc194d10d216e5968c1\nparent 2a7837262f67887b7e5908181000d36036dc5485\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1648492910 +0200\ncommitter GitHub <noreply@github.com> 1648492910 +0200\n\nRollup merge of #95318 - rust-lang:notriddle/issue-95208, r=wesleywiser\n\ndiagnostics: correct generic bounds with doubled colon\n\nFixes #95208\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e10d5039bcc5648ae44390968ebc7568ff9db1ac", "html_url": "https://github.com/rust-lang/rust/commit/e10d5039bcc5648ae44390968ebc7568ff9db1ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e10d5039bcc5648ae44390968ebc7568ff9db1ac/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72770efcb0e04cb645911dc194d10d216e5968c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/72770efcb0e04cb645911dc194d10d216e5968c1", "html_url": "https://github.com/rust-lang/rust/commit/72770efcb0e04cb645911dc194d10d216e5968c1"}, {"sha": "2a7837262f67887b7e5908181000d36036dc5485", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a7837262f67887b7e5908181000d36036dc5485", "html_url": "https://github.com/rust-lang/rust/commit/2a7837262f67887b7e5908181000d36036dc5485"}], "stats": {"total": 93, "additions": 93, "deletions": 0}, "files": [{"sha": "534fd0d4816dd98ea1b1911c629dc2c3cecc5c7f", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e10d5039bcc5648ae44390968ebc7568ff9db1ac/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e10d5039bcc5648ae44390968ebc7568ff9db1ac/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=e10d5039bcc5648ae44390968ebc7568ff9db1ac", "patch": "@@ -2369,6 +2369,34 @@ impl<'a> Parser<'a> {\n         Err(err)\n     }\n \n+    crate fn maybe_recover_bounds_doubled_colon(&mut self, ty: &Ty) -> PResult<'a, ()> {\n+        let TyKind::Path(qself, path) = &ty.kind else { return Ok(()) };\n+        let qself_position = qself.as_ref().map(|qself| qself.position);\n+        for (i, segments) in path.segments.windows(2).enumerate() {\n+            if qself_position.map(|pos| i < pos).unwrap_or(false) {\n+                continue;\n+            }\n+            if let [a, b] = segments {\n+                let (a_span, b_span) = (a.span(), b.span());\n+                let between_span = a_span.shrink_to_hi().to(b_span.shrink_to_lo());\n+                if self.span_to_snippet(between_span).as_ref().map(|a| &a[..]) == Ok(\":: \") {\n+                    let mut err = self.struct_span_err(\n+                        path.span.shrink_to_hi(),\n+                        \"expected `:` followed by trait or lifetime\",\n+                    );\n+                    err.span_suggestion(\n+                        between_span,\n+                        \"use single colon\",\n+                        \": \".to_owned(),\n+                        Applicability::MachineApplicable,\n+                    );\n+                    return Err(err);\n+                }\n+            }\n+        }\n+        Ok(())\n+    }\n+\n     /// Parse and throw away a parenthesized comma separated\n     /// sequence of patterns until `)` is reached.\n     fn skip_pat_list(&mut self) -> PResult<'a, ()> {"}, {"sha": "29fe2b761018e8fa40619f065e2e5bb884cb07f5", "filename": "compiler/rustc_parse/src/parser/generics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e10d5039bcc5648ae44390968ebc7568ff9db1ac/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e10d5039bcc5648ae44390968ebc7568ff9db1ac/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fgenerics.rs?ref=e10d5039bcc5648ae44390968ebc7568ff9db1ac", "patch": "@@ -312,6 +312,7 @@ impl<'a> Parser<'a> {\n                 id: ast::DUMMY_NODE_ID,\n             }))\n         } else {\n+            self.maybe_recover_bounds_doubled_colon(&ty)?;\n             self.unexpected()\n         }\n     }"}, {"sha": "608b4a20fbc867e20ed75565d51faa7d7d2b7ce8", "filename": "src/test/ui/generics/issue-95208-ignore-qself.fixed", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e10d5039bcc5648ae44390968ebc7568ff9db1ac/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208-ignore-qself.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e10d5039bcc5648ae44390968ebc7568ff9db1ac/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208-ignore-qself.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208-ignore-qself.fixed?ref=e10d5039bcc5648ae44390968ebc7568ff9db1ac", "patch": "@@ -0,0 +1,11 @@\n+// run-rustfix\n+\n+#[allow(unused)]\n+struct Struct<T>(T);\n+\n+impl<T: Iterator> Struct<T> where <T as std:: iter::Iterator>::Item: std::fmt::Display {\n+//~^ ERROR expected `:` followed by trait or lifetime\n+//~| HELP use single colon\n+}\n+\n+fn main() {}"}, {"sha": "da7efd576d1cf91a3f071f678417122c5223be2a", "filename": "src/test/ui/generics/issue-95208-ignore-qself.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e10d5039bcc5648ae44390968ebc7568ff9db1ac/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208-ignore-qself.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e10d5039bcc5648ae44390968ebc7568ff9db1ac/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208-ignore-qself.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208-ignore-qself.rs?ref=e10d5039bcc5648ae44390968ebc7568ff9db1ac", "patch": "@@ -0,0 +1,11 @@\n+// run-rustfix\n+\n+#[allow(unused)]\n+struct Struct<T>(T);\n+\n+impl<T: Iterator> Struct<T> where <T as std:: iter::Iterator>::Item:: std::fmt::Display {\n+//~^ ERROR expected `:` followed by trait or lifetime\n+//~| HELP use single colon\n+}\n+\n+fn main() {}"}, {"sha": "acbc1300d00fd5ddf3feca7e5fde8ce5f03a7e37", "filename": "src/test/ui/generics/issue-95208-ignore-qself.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e10d5039bcc5648ae44390968ebc7568ff9db1ac/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208-ignore-qself.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e10d5039bcc5648ae44390968ebc7568ff9db1ac/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208-ignore-qself.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208-ignore-qself.stderr?ref=e10d5039bcc5648ae44390968ebc7568ff9db1ac", "patch": "@@ -0,0 +1,10 @@\n+error: expected `:` followed by trait or lifetime\n+  --> $DIR/issue-95208-ignore-qself.rs:6:88\n+   |\n+LL | impl<T: Iterator> Struct<T> where <T as std:: iter::Iterator>::Item:: std::fmt::Display {\n+   |                                                                    ---                 ^\n+   |                                                                    |\n+   |                                                                    help: use single colon: `:`\n+\n+error: aborting due to previous error\n+"}, {"sha": "a0b1e886ca26887935098d9ae3cedfb72f0e5362", "filename": "src/test/ui/generics/issue-95208.fixed", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e10d5039bcc5648ae44390968ebc7568ff9db1ac/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e10d5039bcc5648ae44390968ebc7568ff9db1ac/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208.fixed?ref=e10d5039bcc5648ae44390968ebc7568ff9db1ac", "patch": "@@ -0,0 +1,11 @@\n+// run-rustfix\n+\n+#[allow(unused)]\n+struct Struct<T>(T);\n+\n+impl<T> Struct<T> where T: std::fmt::Display {\n+//~^ ERROR expected `:` followed by trait or lifetime\n+//~| HELP use single colon\n+}\n+\n+fn main() {}"}, {"sha": "0e3083484ff15bac186be3b13d3b047120ec737a", "filename": "src/test/ui/generics/issue-95208.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e10d5039bcc5648ae44390968ebc7568ff9db1ac/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e10d5039bcc5648ae44390968ebc7568ff9db1ac/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208.rs?ref=e10d5039bcc5648ae44390968ebc7568ff9db1ac", "patch": "@@ -0,0 +1,11 @@\n+// run-rustfix\n+\n+#[allow(unused)]\n+struct Struct<T>(T);\n+\n+impl<T> Struct<T> where T:: std::fmt::Display {\n+//~^ ERROR expected `:` followed by trait or lifetime\n+//~| HELP use single colon\n+}\n+\n+fn main() {}"}, {"sha": "559527663e8a8e9e8b801e529b0bf19152ae96d4", "filename": "src/test/ui/generics/issue-95208.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e10d5039bcc5648ae44390968ebc7568ff9db1ac/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e10d5039bcc5648ae44390968ebc7568ff9db1ac/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fissue-95208.stderr?ref=e10d5039bcc5648ae44390968ebc7568ff9db1ac", "patch": "@@ -0,0 +1,10 @@\n+error: expected `:` followed by trait or lifetime\n+  --> $DIR/issue-95208.rs:6:46\n+   |\n+LL | impl<T> Struct<T> where T:: std::fmt::Display {\n+   |                          ---                 ^\n+   |                          |\n+   |                          help: use single colon: `:`\n+\n+error: aborting due to previous error\n+"}]}