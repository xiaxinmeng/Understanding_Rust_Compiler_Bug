{"sha": "3cf5c36296d3f6b2203109c6b1757c83a55f09f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjZjVjMzYyOTZkM2Y2YjIyMDMxMDljNmIxNzU3YzgzYTU1ZjA5ZjA=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-08-13T15:40:45Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-08-13T16:15:50Z"}, "message": "Address review comments, move to travis", "tree": {"sha": "af331a89e9c4309ab1fd6eb094f71301ed28bb25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af331a89e9c4309ab1fd6eb094f71301ed28bb25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cf5c36296d3f6b2203109c6b1757c83a55f09f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cf5c36296d3f6b2203109c6b1757c83a55f09f0", "html_url": "https://github.com/rust-lang/rust/commit/3cf5c36296d3f6b2203109c6b1757c83a55f09f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cf5c36296d3f6b2203109c6b1757c83a55f09f0/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "485960a00cba610dd0d00d6cd1a104f0797759b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/485960a00cba610dd0d00d6cd1a104f0797759b7", "html_url": "https://github.com/rust-lang/rust/commit/485960a00cba610dd0d00d6cd1a104f0797759b7"}], "stats": {"total": 40, "additions": 15, "deletions": 25}, "files": [{"sha": "7eaa61c557212e6a1597ca1ecc9790face5c47ce", "filename": ".travis.yml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3cf5c36296d3f6b2203109c6b1757c83a55f09f0/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/3cf5c36296d3f6b2203109c6b1757c83a55f09f0/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=3cf5c36296d3f6b2203109c6b1757c83a55f09f0", "patch": "@@ -5,3 +5,4 @@ sudo: false\n script:\n  - python util/update_lints.py -c\n  - cargo test\n+ - bash util/dogfood.sh"}, {"sha": "c3c915ea777e7ef2a28259bec21fa1a26561b27e", "filename": "src/lifetimes.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3cf5c36296d3f6b2203109c6b1757c83a55f09f0/src%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cf5c36296d3f6b2203109c6b1757c83a55f09f0/src%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flifetimes.rs?ref=3cf5c36296d3f6b2203109c6b1757c83a55f09f0", "patch": "@@ -170,15 +170,15 @@ impl RefVisitor {\n \n impl<'v> Visitor<'v> for RefVisitor {\n     // for lifetimes of references\n-    fn visit_opt_lifetime_ref(&mut self, _: Span, lifetime: &Option<Lifetime>) {\n+    fn visit_opt_lifetime_ref(&mut self, _: Span, lifetime: &'v Option<Lifetime>) {\n         self.record(lifetime);\n     }\n \n     // for lifetimes as parameters of generics\n-    fn visit_lifetime_ref(&mut self, lifetime: &Lifetime) {\n+    fn visit_lifetime_ref(&mut self, lifetime: &'v Lifetime) {\n         self.record(&Some(*lifetime));\n     }\n \n     // for lifetime bounds; the default impl calls visit_lifetime_ref\n-    fn visit_lifetime_bound(&mut self, _: &Lifetime) { }\n+    fn visit_lifetime_bound(&mut self, _: &'v Lifetime) { }\n }"}, {"sha": "287a8199d2c148f31cd0359221e318135214e8b1", "filename": "tests/compile-fail/lifetimes.rs", "status": "modified", "additions": 7, "deletions": 21, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3cf5c36296d3f6b2203109c6b1757c83a55f09f0/tests%2Fcompile-fail%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cf5c36296d3f6b2203109c6b1757c83a55f09f0/tests%2Fcompile-fail%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Flifetimes.rs?ref=3cf5c36296d3f6b2203109c6b1757c83a55f09f0", "patch": "@@ -2,7 +2,7 @@\n #![plugin(clippy)]\n \n #![deny(needless_lifetimes)]\n-\n+#![allow(dead_code)]\n fn distinct_lifetimes<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: u8) { }\n //~^ERROR explicit lifetimes given\n \n@@ -54,27 +54,13 @@ impl X {\n     fn self_and_same_in<'s>(&'s self, _x: &'s u8) { } // no error, same lifetimes on two params\n }\n \n+struct Foo<'a>(&'a u8);\n+\n+impl<'a> Foo<'a> {\n+    fn self_shared_lifetime(&self, _: &'a u8) {} // no error, lifetime 'a not defined in method\n+    fn self_bound_lifetime<'b: 'a>(&self, _: &'b u8) {} // no error, bounds exist\n+}\n static STATIC: u8 = 1;\n \n fn main() {\n-    distinct_lifetimes(&1, &2, 3);\n-    distinct_and_static(&1, &2, &STATIC);\n-    same_lifetime_on_input(&1, &2);\n-    only_static_on_input(&1, &2, &STATIC);\n-    in_and_out(&1, 2);\n-    multiple_in_and_out_1(&1, &2);\n-    multiple_in_and_out_2(&1, &2);\n-    in_static_and_out(&1, &STATIC);\n-    let _ = deep_reference_1(&1, &2);\n-    let _ = deep_reference_2(Ok(&1));\n-    let _ = deep_reference_3(&1, 2);\n-    lifetime_param_1(&1, &2);\n-    lifetime_param_2(&1, &2);\n-    lifetime_param_3(&1, &2);\n-\n-    let foo = X { x: 1 };\n-    foo.self_and_out();\n-    foo.self_and_in_out(&1);\n-    foo.distinct_self_and_in(&1);\n-    foo.self_and_same_in(&1);\n }"}, {"sha": "51dd465a25d7e5aed1d80b919ad31269156b9f97", "filename": "util/dogfood.sh", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3cf5c36296d3f6b2203109c6b1757c83a55f09f0/util%2Fdogfood.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3cf5c36296d3f6b2203109c6b1757c83a55f09f0/util%2Fdogfood.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fdogfood.sh?ref=3cf5c36296d3f6b2203109c6b1757c83a55f09f0", "patch": "@@ -1 +1,4 @@\n-rm -rf target* && cargo build --lib && cp -R target target_recur && cargo rustc -- -Zextra-plugins=clippy -Ltarget_recur/debug   -Dclippy\n\\ No newline at end of file\n+rm -rf target*/*so\n+cargo build --lib && cp -R target target_recur && cargo rustc -- -Zextra-plugins=clippy -Ltarget_recur/debug   -Dclippy || exit 1\n+rm -rf target_recur\n+"}]}