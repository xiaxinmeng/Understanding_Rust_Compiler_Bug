{"sha": "fba4149bf1d8959299379a5dc351a61bdb5b8c92", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiYTQxNDliZjFkODk1OTI5OTM3OWE1ZGMzNTFhNjFiZGI1YjhjOTI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-08-31T10:20:02Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-09-01T09:02:46Z"}, "message": "Clean render_impl arguments", "tree": {"sha": "ee9d87d66a6bf92926fa8d1c150e88260d34b7d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee9d87d66a6bf92926fa8d1c150e88260d34b7d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fba4149bf1d8959299379a5dc351a61bdb5b8c92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fba4149bf1d8959299379a5dc351a61bdb5b8c92", "html_url": "https://github.com/rust-lang/rust/commit/fba4149bf1d8959299379a5dc351a61bdb5b8c92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fba4149bf1d8959299379a5dc351a61bdb5b8c92/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7159bdbad331266a4b62dd316408f54e225e53e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7159bdbad331266a4b62dd316408f54e225e53e", "html_url": "https://github.com/rust-lang/rust/commit/d7159bdbad331266a4b62dd316408f54e225e53e"}], "stats": {"total": 113, "additions": 67, "deletions": 46}, "files": [{"sha": "a0a67610481ea4a1c9daef9c7e20c01d9bebb4ef", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 52, "deletions": 36, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/fba4149bf1d8959299379a5dc351a61bdb5b8c92/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fba4149bf1d8959299379a5dc351a61bdb5b8c92/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=fba4149bf1d8959299379a5dc351a61bdb5b8c92", "patch": "@@ -711,13 +711,15 @@ fn render_impls(\n                 containing_item,\n                 assoc_link,\n                 RenderMode::Normal,\n-                true,\n                 None,\n-                false,\n-                true,\n-                true,\n                 &[],\n-                true,\n+                ImplRenderingParameters {\n+                    show_def_docs: true,\n+                    is_on_foreign_type: false,\n+                    show_default_items: true,\n+                    show_non_assoc_items: true,\n+                    toggle_open_by_default: true,\n+                },\n             );\n             buffer.into_inner()\n         })\n@@ -1052,13 +1054,15 @@ fn render_assoc_items(\n                 containing_item,\n                 AssocItemLink::Anchor(None),\n                 render_mode,\n-                true,\n                 None,\n-                false,\n-                true,\n-                true,\n                 &[],\n-                true,\n+                ImplRenderingParameters {\n+                    show_def_docs: true,\n+                    is_on_foreign_type: false,\n+                    show_default_items: true,\n+                    show_non_assoc_items: true,\n+                    toggle_open_by_default: true,\n+                },\n             );\n         }\n     }\n@@ -1248,23 +1252,26 @@ fn notable_traits_decl(decl: &clean::FnDecl, cx: &Context<'_>) -> String {\n     out.into_inner()\n }\n \n+#[derive(Clone, Copy, Debug)]\n+struct ImplRenderingParameters {\n+    show_def_docs: bool,\n+    is_on_foreign_type: bool,\n+    show_default_items: bool,\n+    /// Whether or not to show methods.\n+    show_non_assoc_items: bool,\n+    toggle_open_by_default: bool,\n+}\n+\n fn render_impl(\n     w: &mut Buffer,\n     cx: &Context<'_>,\n     i: &Impl,\n     parent: &clean::Item,\n     link: AssocItemLink<'_>,\n     render_mode: RenderMode,\n-    show_def_docs: bool,\n     use_absolute: Option<bool>,\n-    is_on_foreign_type: bool,\n-    show_default_items: bool,\n-    // It'll exclude methods.\n-    show_non_assoc_items: bool,\n-    // This argument is used to reference same type with different paths to avoid duplication\n-    // in documentation pages for trait with automatic implementations like \"Send\" and \"Sync\".\n     aliases: &[String],\n-    toggle_open_by_default: bool,\n+    rendering_params: ImplRenderingParameters,\n ) {\n     let cache = cx.cache();\n     let traits = &cache.traits;\n@@ -1287,13 +1294,12 @@ fn render_impl(\n         render_mode: RenderMode,\n         is_default_item: bool,\n         trait_: Option<&clean::Trait>,\n-        show_def_docs: bool,\n-        show_non_assoc_items: bool,\n+        rendering_params: ImplRenderingParameters,\n     ) {\n         let item_type = item.type_();\n         let name = item.name.as_ref().unwrap();\n \n-        let render_method_item = show_non_assoc_items\n+        let render_method_item = rendering_params.show_non_assoc_items\n             && match render_mode {\n                 RenderMode::Normal => true,\n                 RenderMode::ForDeref { mut_: deref_mut_ } => {\n@@ -1322,18 +1328,32 @@ fn render_impl(\n                         } else {\n                             // In case the item isn't documented,\n                             // provide short documentation from the trait.\n-                            document_short(&mut doc_buffer, it, cx, link, parent, show_def_docs);\n+                            document_short(\n+                                &mut doc_buffer,\n+                                it,\n+                                cx,\n+                                link,\n+                                parent,\n+                                rendering_params.show_def_docs,\n+                            );\n                         }\n                     }\n                 } else {\n                     document_item_info(&mut info_buffer, cx, item, Some(parent));\n-                    if show_def_docs {\n+                    if rendering_params.show_def_docs {\n                         document_full(&mut doc_buffer, item, cx);\n                         short_documented = false;\n                     }\n                 }\n             } else {\n-                document_short(&mut doc_buffer, item, cx, link, parent, show_def_docs);\n+                document_short(\n+                    &mut doc_buffer,\n+                    item,\n+                    cx,\n+                    link,\n+                    parent,\n+                    rendering_params.show_def_docs,\n+                );\n             }\n         }\n         let w = if short_documented && trait_.is_some() { interesting } else { boring };\n@@ -1465,8 +1485,7 @@ fn render_impl(\n             render_mode,\n             false,\n             trait_.map(|t| &t.trait_),\n-            show_def_docs,\n-            show_non_assoc_items,\n+            rendering_params,\n         );\n     }\n \n@@ -1479,8 +1498,7 @@ fn render_impl(\n         parent: &clean::Item,\n         containing_item: &clean::Item,\n         render_mode: RenderMode,\n-        show_def_docs: bool,\n-        show_non_assoc_items: bool,\n+        rendering_params: ImplRenderingParameters,\n     ) {\n         for trait_item in &t.items {\n             let n = trait_item.name;\n@@ -1502,8 +1520,7 @@ fn render_impl(\n                 render_mode,\n                 true,\n                 Some(t),\n-                show_def_docs,\n-                show_non_assoc_items,\n+                rendering_params,\n             );\n         }\n     }\n@@ -1512,7 +1529,7 @@ fn render_impl(\n     // default items which weren't overridden in the implementation block.\n     // We don't emit documentation for default items if they appear in the\n     // Implementations on Foreign Types or Implementors sections.\n-    if show_default_items {\n+    if rendering_params.show_default_items {\n         if let Some(t) = trait_ {\n             render_default_items(\n                 &mut default_impl_items,\n@@ -1523,8 +1540,7 @@ fn render_impl(\n                 &i.impl_item,\n                 parent,\n                 render_mode,\n-                show_def_docs,\n-                show_non_assoc_items,\n+                rendering_params,\n             );\n         }\n     }\n@@ -1535,7 +1551,7 @@ fn render_impl(\n             write!(\n                 w,\n                 \"<details class=\\\"rustdoc-toggle implementors-toggle\\\"{}>\",\n-                if toggle_open_by_default { \" open\" } else { \"\" }\n+                if rendering_params.toggle_open_by_default { \" open\" } else { \"\" }\n             );\n             write!(w, \"<summary>\")\n         }\n@@ -1545,9 +1561,9 @@ fn render_impl(\n             i,\n             parent,\n             parent,\n-            show_def_docs,\n+            rendering_params.show_def_docs,\n             use_absolute,\n-            is_on_foreign_type,\n+            rendering_params.is_on_foreign_type,\n             aliases,\n         );\n         if toggled {"}, {"sha": "dac866c276779a059f63375fa7dd170dde061366", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/fba4149bf1d8959299379a5dc351a61bdb5b8c92/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fba4149bf1d8959299379a5dc351a61bdb5b8c92/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=fba4149bf1d8959299379a5dc351a61bdb5b8c92", "patch": "@@ -17,6 +17,7 @@ use super::{\n     collect_paths_for_type, document, ensure_trailing_slash, item_ty_to_strs, notable_traits_decl,\n     render_assoc_item, render_assoc_items, render_attributes_in_code, render_attributes_in_pre,\n     render_impl, render_stability_since_raw, write_srclink, AssocItemLink, Context,\n+    ImplRenderingParameters,\n };\n use crate::clean::{self, GetDefId};\n use crate::formats::item_type::ItemType;\n@@ -735,13 +736,15 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n                     it,\n                     assoc_link,\n                     RenderMode::Normal,\n-                    false,\n                     None,\n-                    true,\n-                    false,\n-                    true,\n                     &[],\n-                    false,\n+                    ImplRenderingParameters {\n+                        show_def_docs: false,\n+                        is_on_foreign_type: true,\n+                        show_default_items: false,\n+                        show_non_assoc_items: true,\n+                        toggle_open_by_default: false,\n+                    },\n                 );\n             }\n         }\n@@ -1396,13 +1399,15 @@ fn render_implementor(\n         trait_,\n         AssocItemLink::Anchor(None),\n         RenderMode::Normal,\n-        false,\n         Some(use_absolute),\n-        false,\n-        false,\n-        false,\n         aliases,\n-        false,\n+        ImplRenderingParameters {\n+            show_def_docs: false,\n+            is_on_foreign_type: false,\n+            show_default_items: false,\n+            show_non_assoc_items: false,\n+            toggle_open_by_default: false,\n+        },\n     );\n }\n "}]}