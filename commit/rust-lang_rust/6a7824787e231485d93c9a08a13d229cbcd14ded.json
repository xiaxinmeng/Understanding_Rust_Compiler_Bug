{"sha": "6a7824787e231485d93c9a08a13d229cbcd14ded", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNzgyNDc4N2UyMzE0ODVkOTNjOWEwOGExM2QyMjljYmNkMTRkZWQ=", "commit": {"author": {"name": "hafiz", "email": "20735482+ayazhafiz@users.noreply.github.com", "date": "2020-05-20T15:39:34Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2020-10-24T16:13:00Z"}, "message": "Preserve comments in empty statements (#4180)\n\n* Preserve comments in empty statements\n\nCloses #4018\n\n* fixup! Preserve comments in empty statements", "tree": {"sha": "ae760546adeb7522892ec3b77adca38c371c3c01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae760546adeb7522892ec3b77adca38c371c3c01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a7824787e231485d93c9a08a13d229cbcd14ded", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a7824787e231485d93c9a08a13d229cbcd14ded", "html_url": "https://github.com/rust-lang/rust/commit/6a7824787e231485d93c9a08a13d229cbcd14ded", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a7824787e231485d93c9a08a13d229cbcd14ded/comments", "author": {"login": "ayazhafiz", "id": 20735482, "node_id": "MDQ6VXNlcjIwNzM1NDgy", "avatar_url": "https://avatars.githubusercontent.com/u/20735482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayazhafiz", "html_url": "https://github.com/ayazhafiz", "followers_url": "https://api.github.com/users/ayazhafiz/followers", "following_url": "https://api.github.com/users/ayazhafiz/following{/other_user}", "gists_url": "https://api.github.com/users/ayazhafiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayazhafiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayazhafiz/subscriptions", "organizations_url": "https://api.github.com/users/ayazhafiz/orgs", "repos_url": "https://api.github.com/users/ayazhafiz/repos", "events_url": "https://api.github.com/users/ayazhafiz/events{/privacy}", "received_events_url": "https://api.github.com/users/ayazhafiz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e70343a5f520c1a028336fc1ccd09479ef4084ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/e70343a5f520c1a028336fc1ccd09479ef4084ae", "html_url": "https://github.com/rust-lang/rust/commit/e70343a5f520c1a028336fc1ccd09479ef4084ae"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "0b3854425ea5fe816a1c871755c7f1a21a3029bf", "filename": "src/stmt.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6a7824787e231485d93c9a08a13d229cbcd14ded/src%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a7824787e231485d93c9a08a13d229cbcd14ded/src%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstmt.rs?ref=6a7824787e231485d93c9a08a13d229cbcd14ded", "patch": "@@ -52,6 +52,10 @@ impl<'a> Stmt<'a> {\n         result\n     }\n \n+    pub(crate) fn is_empty(&self) -> bool {\n+        matches!(self.inner.kind, ast::StmtKind::Empty)\n+    }\n+\n     fn is_last_expr(&self) -> bool {\n         if !self.is_last {\n             return false;"}, {"sha": "e7fa27aae0c2b55d2c7a1976065904c8152a2d75", "filename": "src/visitor.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6a7824787e231485d93c9a08a13d229cbcd14ded/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a7824787e231485d93c9a08a13d229cbcd14ded/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=6a7824787e231485d93c9a08a13d229cbcd14ded", "patch": "@@ -25,7 +25,7 @@ use crate::stmt::Stmt;\n use crate::syntux::session::ParseSess;\n use crate::utils::{\n     self, contains_skip, count_newlines, depr_skip_annotation, format_unsafety, inner_attributes,\n-    last_line_width, mk_sp, ptr_vec_to_ref_vec, rewrite_ident, stmt_expr,\n+    last_line_width, mk_sp, ptr_vec_to_ref_vec, rewrite_ident, starts_with_newline, stmt_expr,\n };\n use crate::{ErrorKind, FormatReport, FormattingError};\n \n@@ -117,10 +117,22 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n             self.parse_sess.span_to_debug_info(stmt.span())\n         );\n \n-        // https://github.com/rust-lang/rust/issues/63679.\n-        let is_all_semicolons =\n-            |snippet: &str| snippet.chars().all(|c| c.is_whitespace() || c == ';');\n-        if is_all_semicolons(&self.snippet(stmt.span())) {\n+        if stmt.is_empty() {\n+            // If the statement is empty, just skip over it. Before that, make sure any comment\n+            // snippet preceding the semicolon is picked up.\n+            let snippet = self.snippet(mk_sp(self.last_pos, stmt.span().lo()));\n+            let original_starts_with_newline = snippet\n+                .find(|c| c != ' ')\n+                .map_or(false, |i| starts_with_newline(&snippet[i..]));\n+            let snippet = snippet.trim();\n+            if !snippet.is_empty() {\n+                if original_starts_with_newline {\n+                    self.push_str(\"\\n\");\n+                }\n+                self.push_str(&self.block_indent.to_string(self.config));\n+                self.push_str(snippet);\n+            }\n+\n             self.last_pos = stmt.span().hi();\n             return;\n         }"}, {"sha": "9a91dd9a30669043f46139f5a40eba0f76ffcad0", "filename": "tests/source/issue-4018.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6a7824787e231485d93c9a08a13d229cbcd14ded/tests%2Fsource%2Fissue-4018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a7824787e231485d93c9a08a13d229cbcd14ded/tests%2Fsource%2Fissue-4018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-4018.rs?ref=6a7824787e231485d93c9a08a13d229cbcd14ded", "patch": "@@ -0,0 +1,13 @@\n+fn main() {\n+    ;\n+           /* extra comment */            ;\n+}\n+\n+fn main() {\n+    println!(\"\");\n+    // comment 1\n+    // comment 2\n+    // comment 3\n+    // comment 4\n+    ;\n+}"}, {"sha": "cef3be061486ff6504d21178a32b408f03f42621", "filename": "tests/target/issue-4018.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6a7824787e231485d93c9a08a13d229cbcd14ded/tests%2Ftarget%2Fissue-4018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a7824787e231485d93c9a08a13d229cbcd14ded/tests%2Ftarget%2Fissue-4018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-4018.rs?ref=6a7824787e231485d93c9a08a13d229cbcd14ded", "patch": "@@ -0,0 +1,11 @@\n+fn main() {\n+    /* extra comment */\n+}\n+\n+fn main() {\n+    println!(\"\");\n+    // comment 1\n+    // comment 2\n+    // comment 3\n+    // comment 4\n+}"}]}