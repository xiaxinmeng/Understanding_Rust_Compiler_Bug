{"sha": "25c8210c01db12fb9edfd2481ca81c91934c4bbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1YzgyMTBjMDFkYjEyZmI5ZWRmZDI0ODFjYTgxYzkxOTM0YzRiYmQ=", "commit": {"author": {"name": "memoryleak47", "email": "memoryleak47@protonmail.ch", "date": "2018-03-19T22:48:02Z"}, "committer": {"name": "memoryleak47", "email": "memoryleak47@protonmail.ch", "date": "2018-03-19T22:48:02Z"}, "message": "Put `#[macro_use] extern crate <crate>` before fn main() in doctests", "tree": {"sha": "52b83c1d194c60a8efb8493423df507103f7aaad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52b83c1d194c60a8efb8493423df507103f7aaad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25c8210c01db12fb9edfd2481ca81c91934c4bbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25c8210c01db12fb9edfd2481ca81c91934c4bbd", "html_url": "https://github.com/rust-lang/rust/commit/25c8210c01db12fb9edfd2481ca81c91934c4bbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25c8210c01db12fb9edfd2481ca81c91934c4bbd/comments", "author": {"login": "memoryleak47", "id": 5725430, "node_id": "MDQ6VXNlcjU3MjU0MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5725430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/memoryleak47", "html_url": "https://github.com/memoryleak47", "followers_url": "https://api.github.com/users/memoryleak47/followers", "following_url": "https://api.github.com/users/memoryleak47/following{/other_user}", "gists_url": "https://api.github.com/users/memoryleak47/gists{/gist_id}", "starred_url": "https://api.github.com/users/memoryleak47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/memoryleak47/subscriptions", "organizations_url": "https://api.github.com/users/memoryleak47/orgs", "repos_url": "https://api.github.com/users/memoryleak47/repos", "events_url": "https://api.github.com/users/memoryleak47/events{/privacy}", "received_events_url": "https://api.github.com/users/memoryleak47/received_events", "type": "User", "site_admin": false}, "committer": {"login": "memoryleak47", "id": 5725430, "node_id": "MDQ6VXNlcjU3MjU0MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5725430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/memoryleak47", "html_url": "https://github.com/memoryleak47", "followers_url": "https://api.github.com/users/memoryleak47/followers", "following_url": "https://api.github.com/users/memoryleak47/following{/other_user}", "gists_url": "https://api.github.com/users/memoryleak47/gists{/gist_id}", "starred_url": "https://api.github.com/users/memoryleak47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/memoryleak47/subscriptions", "organizations_url": "https://api.github.com/users/memoryleak47/orgs", "repos_url": "https://api.github.com/users/memoryleak47/repos", "events_url": "https://api.github.com/users/memoryleak47/events{/privacy}", "received_events_url": "https://api.github.com/users/memoryleak47/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a04b88d1941644df01fa5e31dd43e0f57c13d938", "url": "https://api.github.com/repos/rust-lang/rust/commits/a04b88d1941644df01fa5e31dd43e0f57c13d938", "html_url": "https://github.com/rust-lang/rust/commit/a04b88d1941644df01fa5e31dd43e0f57c13d938"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "0f27775417d8665a5ad71966dba235d63ed270b4", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/25c8210c01db12fb9edfd2481ca81c91934c4bbd/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25c8210c01db12fb9edfd2481ca81c91934c4bbd/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=25c8210c01db12fb9edfd2481ca81c91934c4bbd", "patch": "@@ -416,6 +416,7 @@ fn partition_source(s: &str) -> (String, String) {\n         let trimline = line.trim();\n         let header = trimline.is_whitespace() ||\n             trimline.starts_with(\"#![\") ||\n+            trimline.starts_with(\"#[macro_use] extern crate\") ||\n             trimline.starts_with(\"extern crate\");\n         if !header || after_header {\n             after_header = true;\n@@ -825,6 +826,24 @@ assert_eq!(2+2, 4);\n         assert_eq!(output, (expected, 2));\n     }\n \n+    #[test]\n+    fn make_test_manual_extern_crate_with_macro_use() {\n+        let opts = TestOptions::default();\n+        let input =\n+\"#[macro_use] extern crate asdf;\n+use asdf::qwop;\n+assert_eq!(2+2, 4);\";\n+        let expected =\n+\"#![allow(unused)]\n+#[macro_use] extern crate asdf;\n+fn main() {\n+use asdf::qwop;\n+assert_eq!(2+2, 4);\n+}\".to_string();\n+        let output = make_test(input, Some(\"asdf\"), false, &opts);\n+        assert_eq!(output, (expected, 2));\n+    }\n+\n     #[test]\n     fn make_test_opts_attrs() {\n         //if you supplied some doctest attributes with #![doc(test(attr(...)))], it will use those"}]}