{"sha": "49c8d58662a7fc5ac608cdc0f80a8bcc4c9ee790", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5YzhkNTg2NjJhN2ZjNWFjNjA4Y2RjMGY4MGE4YmNjNGM5ZWU3OTA=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-02-25T12:13:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-25T12:13:42Z"}, "message": "Rollup merge of #40069 - Rufflewind:master, r=steveklabnik\n\nAdd Gankro's table to nomicon/src/phantom-data.md\n\nOriginal: https://github.com/rust-lang/rust/issues/30069#issuecomment-159928136\n\nTesting confirms that:\n\n  - `PhantomData<fn() -> T>` does not actually enable drop checking.\n  - `PhantomData<fn(T) -> T>` is neither variant nor contravariant.", "tree": {"sha": "0239dc40904c85fc5354a6cb173b7a36188c30ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0239dc40904c85fc5354a6cb173b7a36188c30ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49c8d58662a7fc5ac608cdc0f80a8bcc4c9ee790", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49c8d58662a7fc5ac608cdc0f80a8bcc4c9ee790", "html_url": "https://github.com/rust-lang/rust/commit/49c8d58662a7fc5ac608cdc0f80a8bcc4c9ee790", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49c8d58662a7fc5ac608cdc0f80a8bcc4c9ee790/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecae5bf785f8f018f7dd5a991912f18d818d2317", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecae5bf785f8f018f7dd5a991912f18d818d2317", "html_url": "https://github.com/rust-lang/rust/commit/ecae5bf785f8f018f7dd5a991912f18d818d2317"}, {"sha": "1f75085ae510d0786da6200172e9b3193b0fa090", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f75085ae510d0786da6200172e9b3193b0fa090", "html_url": "https://github.com/rust-lang/rust/commit/1f75085ae510d0786da6200172e9b3193b0fa090"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "32539c2d01f6dcd9e9488cfae80f02f0be929db6", "filename": "src/doc/nomicon/src/phantom-data.md", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/49c8d58662a7fc5ac608cdc0f80a8bcc4c9ee790/src%2Fdoc%2Fnomicon%2Fsrc%2Fphantom-data.md", "raw_url": "https://github.com/rust-lang/rust/raw/49c8d58662a7fc5ac608cdc0f80a8bcc4c9ee790/src%2Fdoc%2Fnomicon%2Fsrc%2Fphantom-data.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fnomicon%2Fsrc%2Fphantom-data.md?ref=49c8d58662a7fc5ac608cdc0f80a8bcc4c9ee790", "patch": "@@ -82,5 +82,23 @@ standard library made a utility for itself called `Unique<T>` which:\n \n * wraps a `*const T` for variance\n * includes a `PhantomData<T>`\n-* auto-derives Send/Sync as if T was contained\n-* marks the pointer as NonZero for the null-pointer optimization\n+* auto-derives `Send`/`Sync` as if T was contained\n+* marks the pointer as `NonZero` for the null-pointer optimization\n+\n+## Table of `PhantomData` patterns\n+\n+Here\u2019s a table of all the wonderful ways `PhantomData` could be used:\n+\n+| Phantom type                | `'a`      | `T`                       |\n+|-----------------------------|-----------|---------------------------|\n+| `PhantomData<T>`            | -         | variant (with drop check) |\n+| `PhantomData<&'a T>`        | variant   | variant                   |\n+| `PhantomData<&'a mut T>`    | variant   | invariant                 |\n+| `PhantomData<*const T>`     | -         | variant                   |\n+| `PhantomData<*mut T>`       | -         | invariant                 |\n+| `PhantomData<fn(T)>`        | -         | contravariant (*)         |\n+| `PhantomData<fn() -> T>`    | -         | variant                   |\n+| `PhantomData<fn(T) -> T>`   | -         | invariant                 |\n+| `PhantomData<Cell<&'a ()>>` | invariant | -                         |\n+\n+(*) If contravariance gets scrapped, this would be invariant."}]}