{"sha": "c445c72eb355dfd45d1ce1dd68087f7cf7c05877", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NDVjNzJlYjM1NWRmZDQ1ZDFjZTFkZDY4MDg3ZjdjZjdjMDU4Nzc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-30T12:17:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-30T12:17:56Z"}, "message": "Simplify fixture parsing", "tree": {"sha": "299e54b269981c198ed761bb85a724738aa95ae4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/299e54b269981c198ed761bb85a724738aa95ae4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c445c72eb355dfd45d1ce1dd68087f7cf7c05877", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c445c72eb355dfd45d1ce1dd68087f7cf7c05877", "html_url": "https://github.com/rust-lang/rust/commit/c445c72eb355dfd45d1ce1dd68087f7cf7c05877", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c445c72eb355dfd45d1ce1dd68087f7cf7c05877/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dcd9fdf5e95573de9bc46f32b86d6fbc5e7c18d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dcd9fdf5e95573de9bc46f32b86d6fbc5e7c18d", "html_url": "https://github.com/rust-lang/rust/commit/5dcd9fdf5e95573de9bc46f32b86d6fbc5e7c18d"}], "stats": {"total": 29, "additions": 8, "deletions": 21}, "files": [{"sha": "336c594a638a461ea7aae6061408f09c713e7084", "filename": "crates/test_utils/src/lib.rs", "status": "modified", "additions": 8, "deletions": 21, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c445c72eb355dfd45d1ce1dd68087f7cf7c05877/crates%2Ftest_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c445c72eb355dfd45d1ce1dd68087f7cf7c05877/crates%2Ftest_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Flib.rs?ref=c445c72eb355dfd45d1ce1dd68087f7cf7c05877", "patch": "@@ -188,29 +188,16 @@ pub fn parse_fixture(fixture: &str) -> Vec<FixtureEntry> {\n             }\n         });\n \n-    let mut res = Vec::new();\n-    let mut meta = None;\n-    loop {\n-        let mut next_meta = None;\n-        let mut text = String::new();\n-        for line in lines.by_ref() {\n-            if line.starts_with(\"//-\") {\n-                next_meta = Some(line[\"//-\".len()..].trim().to_string());\n-                break;\n-            }\n-            text.push_str(line);\n-            text.push('\\n');\n-        }\n-\n-        if let Some(meta) = meta {\n-            res.push(FixtureEntry { meta, text });\n-        }\n-        meta = next_meta;\n-        if meta.is_none() {\n-            break;\n+    let mut res: Vec<FixtureEntry> = Vec::new();\n+    for line in lines.by_ref() {\n+        if line.starts_with(\"//-\") {\n+            let meta = line[\"//-\".len()..].trim().to_string();\n+            res.push(FixtureEntry { meta, text: String::new() })\n+        } else if let Some(entry) = res.last_mut() {\n+            entry.text.push_str(line);\n+            entry.text.push('\\n');\n         }\n     }\n-\n     res\n }\n "}]}