{"sha": "393f80e03657f7b66cdc0ffe7008c9deef4f63ec", "node_id": "C_kwDOAAsO6NoAKDM5M2Y4MGUwMzY1N2Y3YjY2Y2RjMGZmZTcwMDhjOWRlZWY0ZjYzZWM", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-02T10:20:45Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-02T10:20:45Z"}, "message": "minor", "tree": {"sha": "d62786ff6bb834de32b50cc68c439178c6a2dfb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d62786ff6bb834de32b50cc68c439178c6a2dfb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/393f80e03657f7b66cdc0ffe7008c9deef4f63ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/393f80e03657f7b66cdc0ffe7008c9deef4f63ec", "html_url": "https://github.com/rust-lang/rust/commit/393f80e03657f7b66cdc0ffe7008c9deef4f63ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/393f80e03657f7b66cdc0ffe7008c9deef4f63ec/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12103b16de2012988cc4ebcb025f7149a7ee6336", "url": "https://api.github.com/repos/rust-lang/rust/commits/12103b16de2012988cc4ebcb025f7149a7ee6336", "html_url": "https://github.com/rust-lang/rust/commit/12103b16de2012988cc4ebcb025f7149a7ee6336"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "bfa02aa2220d93bfe812fd50acdb398c50c8e67e", "filename": "crates/parser/src/grammar/expressions/atom.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/393f80e03657f7b66cdc0ffe7008c9deef4f63ec/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/393f80e03657f7b66cdc0ffe7008c9deef4f63ec/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=393f80e03657f7b66cdc0ffe7008c9deef4f63ec", "patch": "@@ -59,7 +59,7 @@ pub(super) const ATOM_EXPR_FIRST: TokenSet =\n         LIFETIME_IDENT,\n     ]));\n \n-const EXPR_RECOVERY_SET: TokenSet = TokenSet::new(&[LET_KW, R_DOLLAR]);\n+const EXPR_RECOVERY_SET: TokenSet = TokenSet::new(&[T![let], R_DOLLAR]);\n \n pub(super) fn atom_expr(p: &mut Parser, r: Restrictions) -> Option<(CompletedMarker, BlockLike)> {\n     if let Some(m) = literal(p) {"}]}