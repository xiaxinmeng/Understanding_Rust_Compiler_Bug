{"sha": "e564a0ad319c8fabddc3e62616be0dbfd761ecec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1NjRhMGFkMzE5YzhmYWJkZGMzZTYyNjE2YmUwZGJmZDc2MWVjZWM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-01-27T09:33:06Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-01-27T09:33:06Z"}, "message": "Rustfmt", "tree": {"sha": "d8900039a16934d925028a037ced1462c08200f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8900039a16934d925028a037ced1462c08200f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e564a0ad319c8fabddc3e62616be0dbfd761ecec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e564a0ad319c8fabddc3e62616be0dbfd761ecec", "html_url": "https://github.com/rust-lang/rust/commit/e564a0ad319c8fabddc3e62616be0dbfd761ecec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e564a0ad319c8fabddc3e62616be0dbfd761ecec/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa23f862dc020a568278dc4ad92c455a0a3ced46", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa23f862dc020a568278dc4ad92c455a0a3ced46", "html_url": "https://github.com/rust-lang/rust/commit/aa23f862dc020a568278dc4ad92c455a0a3ced46"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "3acfae3e1e52d582cbe9dc57e7e012609090f6af", "filename": "src/abi/returning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e564a0ad319c8fabddc3e62616be0dbfd761ecec/src%2Fabi%2Freturning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e564a0ad319c8fabddc3e62616be0dbfd761ecec/src%2Fabi%2Freturning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Freturning.rs?ref=e564a0ad319c8fabddc3e62616be0dbfd761ecec", "patch": "@@ -4,7 +4,7 @@ use crate::prelude::*;\n \n use rustc_middle::ty::layout::FnAbiExt;\n use rustc_target::abi::call::{ArgAbi, FnAbi, PassMode};\n-use smallvec::{SmallVec, smallvec};\n+use smallvec::{smallvec, SmallVec};\n \n /// Can the given type be returned into an ssa var or does it need to be returned on the stack.\n pub(crate) fn can_return_to_ssa_var<'tcx>("}, {"sha": "62fbcfe3f7a5df6bda3f4c7b4093b6aa4ba875e7", "filename": "src/analyze.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e564a0ad319c8fabddc3e62616be0dbfd761ecec/src%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e564a0ad319c8fabddc3e62616be0dbfd761ecec/src%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fanalyze.rs?ref=e564a0ad319c8fabddc3e62616be0dbfd761ecec", "patch": "@@ -40,7 +40,12 @@ pub(crate) fn analyze(fx: &FunctionCx<'_, '_, impl Module>) -> IndexVec<Local, S\n         }\n \n         match &bb.terminator().kind {\n-            TerminatorKind::Call { destination, func, args, .. } => {\n+            TerminatorKind::Call {\n+                destination,\n+                func,\n+                args,\n+                ..\n+            } => {\n                 if let Some((dest_place, _dest_bb)) = destination {\n                     if !crate::abi::can_return_to_ssa_var(fx, func, args) {\n                         not_ssa(&mut flag_map, dest_place.local)"}]}