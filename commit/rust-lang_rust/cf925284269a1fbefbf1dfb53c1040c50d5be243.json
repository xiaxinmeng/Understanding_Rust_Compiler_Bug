{"sha": "cf925284269a1fbefbf1dfb53c1040c50d5be243", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmOTI1Mjg0MjY5YTFmYmVmYmYxZGZiNTNjMTA0MGM1MGQ1YmUyNDM=", "commit": {"author": {"name": "Oliver Schneider", "email": "public.oliver.schneider@kit.edu", "date": "2017-09-16T11:32:38Z"}, "committer": {"name": "Oliver Schneider", "email": "public.oliver.schneider@kit.edu", "date": "2017-09-16T12:02:59Z"}, "message": "Add windows support", "tree": {"sha": "75846a2a1527f9c6f9c025dc4f65b6074829be81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75846a2a1527f9c6f9c025dc4f65b6074829be81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf925284269a1fbefbf1dfb53c1040c50d5be243", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf925284269a1fbefbf1dfb53c1040c50d5be243", "html_url": "https://github.com/rust-lang/rust/commit/cf925284269a1fbefbf1dfb53c1040c50d5be243", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf925284269a1fbefbf1dfb53c1040c50d5be243/comments", "author": null, "committer": null, "parents": [{"sha": "605c82be7a9624e9a5d4f71b6f3ae4fbad8ca001", "url": "https://api.github.com/repos/rust-lang/rust/commits/605c82be7a9624e9a5d4f71b6f3ae4fbad8ca001", "html_url": "https://github.com/rust-lang/rust/commit/605c82be7a9624e9a5d4f71b6f3ae4fbad8ca001"}], "stats": {"total": 75, "additions": 69, "deletions": 6}, "files": [{"sha": "6a497193d79a8efbbb6d8f3a51664728da32a8b1", "filename": "appveyor.yml", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -0,0 +1,35 @@\n+environment:\n+    global:\n+        PROJECT_NAME: miri\n+    matrix:\n+        - TARGET: i686-pc-windows-msvc\n+          MSYS2_BITS: 32\n+        - TARGET: x86_64-pc-windows-msvc\n+          MSYS2_BITS: 64\n+\n+install:\n+    - set PATH=C:\\Program Files\\Git\\mingw64\\bin;%PATH%\n+    - curl -sSf -o rustup-init.exe https://win.rustup.rs/\n+    - rustup-init.exe -y --default-host %TARGET% --default-toolchain nightly\n+    - set PATH=%PATH%;C:\\Users\\appveyor\\.cargo\\bin;C:\\Users\\appveyor\\.rustup\\toolchains\\nightly-%TARGET%\\bin\n+    - if defined MSYS2_BITS set PATH=%PATH%;C:\\msys64\\mingw%MSYS2_BITS%\\bin\n+    - rustc -V\n+    - cargo -V\n+    - rustup component add rust-src\n+    - cargo install --git https://github.com/japaric/xargo.git\n+    - cd xargo\n+    - set RUSTFLAGS=-Zalways-encode-mir -Zmir-emit-validate=1\n+    - xargo build\n+    - set RUSTFLAGS=\n+    - cd ..\n+\n+build: false\n+\n+test_script:\n+    - set RUST_BACKTRACE=1\n+    - cargo build\n+    - cargo test\n+\n+notifications:\n+    - provider: Email\n+      on_build_success: false"}, {"sha": "36d9c0b481f1a35652370346ba98fb120ccec69e", "filename": "miri/fn_call.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/miri%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/miri%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Ffn_call.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -634,6 +634,12 @@ impl<'a, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'tcx, super::Evaluator>\n                 let bool = self.tcx.types.bool;\n                 self.write_primval(dest, PrimVal::from_bool(false), bool)?;\n             }\n+            \"std::sys::imp::c::::AddVectoredExceptionHandler\" |\n+            \"std::sys::imp::c::::SetThreadStackGuarantee\" => {\n+                let usize = self.tcx.types.usize;\n+                // any non zero value works for the stdlib. This is just used for stackoverflows anyway\n+                self.write_primval(dest, PrimVal::Bytes(1), usize)?;\n+            },\n             _ => return err!(NoMirFor(path)),\n         }\n "}, {"sha": "82fc4968a46361f7c35d36e53fdeb3e7419c8e71", "filename": "tests/compiletest.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -50,7 +50,7 @@ fn compile_fail(sysroot: &Path, path: &str, target: &str, host: &str, fullmir: b\n             // skip fullmir on nonhost\n             return;\n         }\n-        let sysroot = Path::new(&std::env::var(\"HOME\").unwrap())\n+        let sysroot = std::env::home_dir().unwrap()\n             .join(\".xargo\")\n             .join(\"HOST\");\n         config.target_rustcflags = Some(format!(\"--sysroot {}\", sysroot.to_str().unwrap()));\n@@ -110,9 +110,10 @@ fn miri_pass(path: &str, target: &str, host: &str, fullmir: bool, opt: bool) {\n             // skip fullmir on nonhost\n             return;\n         }\n-        let sysroot = Path::new(&std::env::var(\"HOME\").unwrap())\n+        let sysroot = std::env::home_dir().unwrap()\n             .join(\".xargo\")\n             .join(\"HOST\");\n+\n         flags.push(format!(\"--sysroot {}\", sysroot.to_str().unwrap()));\n     }\n     if opt {\n@@ -192,9 +193,9 @@ fn run_pass_miri_noopt() {\n }\n \n #[test]\n+#[ignore] // FIXME: Disabled for now, as the optimizer is pretty broken and crashes...\n fn run_pass_miri_opt() {\n-    // FIXME: Disabled for now, as the optimizer is pretty broken and crashes...\n-    //run_pass_miri(true);\n+    run_pass_miri(true);\n }\n \n #[test]"}, {"sha": "490f17d4cf4f52305f3a6d24d6b38ed55e64cd68", "filename": "tests/run-pass-fullmir/catch.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fcatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fcatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fcatch.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -1,3 +1,4 @@\n+//ignore-msvc\n use std::panic::{catch_unwind, AssertUnwindSafe};\n \n fn main() {"}, {"sha": "20cb713590c951c8be62b21945fee0f3ba4900eb", "filename": "tests/run-pass-fullmir/foreign-fn-linkname.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fforeign-fn-linkname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fforeign-fn-linkname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fforeign-fn-linkname.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n+//ignore-msvc\n #![feature(libc)]\n \n extern crate libc;"}, {"sha": "a14d7054e72902011bc64282513b53065d132b6f", "filename": "tests/run-pass-fullmir/format.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fformat.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -1,3 +1,4 @@\n+//ignore-msvc\n fn main() {\n     println!(\"Hello {}\", 13);\n }"}, {"sha": "c5d4abcfdaeff8711be11c2625b27baa3e46fb04", "filename": "tests/run-pass-fullmir/from_utf8.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Ffrom_utf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Ffrom_utf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Ffrom_utf8.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -1,3 +1,4 @@\n+//ignore-msvc\n fn main() {\n     let _ = ::std::str::from_utf8(b\"a\");\n }"}, {"sha": "99f05e25985eea482580e4f1a41aaa28ca236b47", "filename": "tests/run-pass-fullmir/hashmap.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fhashmap.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -1,3 +1,4 @@\n+//ignore-msvc\n use std::collections::{self, HashMap};\n use std::hash::BuildHasherDefault;\n "}, {"sha": "917d51d0e4b654b71de324efebf5fc2dac7c9053", "filename": "tests/run-pass-fullmir/heap.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fheap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fheap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fheap.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -1,3 +1,4 @@\n+//ignore-msvc\n #![feature(box_syntax)]\n \n fn make_box() -> Box<(i16, i16)> {"}, {"sha": "986efcaf9005a830817163df554b98800274178b", "filename": "tests/run-pass-fullmir/hello.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fhello.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fhello.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fhello.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -1,3 +1,4 @@\n+//ignore-msvc\n fn main() {\n     println!(\"Hello, world!\");\n }"}, {"sha": "97c694fd5674e3baa80da620d36198e00a5930cd", "filename": "tests/run-pass-fullmir/integer-ops.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Finteger-ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Finteger-ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Finteger-ops.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -11,6 +11,7 @@\n // FIXME: remove -Zmir-opt-level once https://github.com/rust-lang/rust/issues/43359 is fixed\n // compile-flags: -Zmir-opt-level=0\n \n+//ignore-msvc\n use std::i32;\n \n pub fn main() {"}, {"sha": "4a84f2bc5d62d60fa29453dc6eeef69450ad8be1", "filename": "tests/run-pass-fullmir/issue-15080.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fissue-15080.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fissue-15080.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fissue-15080.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//ignore-msvc\n \n #![feature(slice_patterns)]\n "}, {"sha": "8d55af58eeca8c8087b58f16674eec3c9582c040", "filename": "tests/run-pass-fullmir/issue-3794.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fissue-3794.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fissue-3794.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fissue-3794.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//ignore-msvc\n #![feature(box_syntax)]\n \n trait T {"}, {"sha": "8a0ea113c5d6250ea5ebb4277a35ecb4f583a119", "filename": "tests/run-pass-fullmir/loop-break-value.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Floop-break-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Floop-break-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Floop-break-value.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//ignore-msvc\n+\n #![feature(never_type)]\n #![allow(unreachable_code)]\n "}, {"sha": "f3c656623765fedbdede95cfa23a62ad35ecffaa", "filename": "tests/run-pass-fullmir/move-arg-2-unique.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fmove-arg-2-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fmove-arg-2-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fmove-arg-2-unique.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//ignore-msvc\n+\n #![allow(unused_features, unused_variables)]\n #![feature(box_syntax)]\n "}, {"sha": "cef62e47a56c2a3756d521d2d864dfb0772c1ebf", "filename": "tests/run-pass-fullmir/regions-mock-trans.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fregions-mock-trans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fregions-mock-trans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fregions-mock-trans.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -11,6 +11,8 @@\n // FIXME: We handle uninitialzied storage here, which currently makes validation fail.\n // compile-flags: -Zmir-emit-validate=0\n \n+//ignore-msvc\n+\n #![feature(libc)]\n \n #![allow(dead_code)]"}, {"sha": "5b2efdd20517071732fda6c299716d36702ab4ed", "filename": "tests/run-pass-fullmir/u128.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fu128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fu128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fu128.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//ignore-msvc\n+\n #![feature(i128_type)]\n \n fn b<T>(t: T) -> T { t }"}, {"sha": "828e5c26927ec09ae81bb22b46a180f7f45f6ada", "filename": "tests/run-pass-fullmir/unsized-tuple-impls.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Funsized-tuple-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Funsized-tuple-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Funsized-tuple-impls.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//ignore-msvc\n+\n #![feature(unsized_tuple_coercion)]\n use std::mem;\n "}, {"sha": "9a8912a6b98897cc527c2e2c5a85aef216e5f23e", "filename": "tests/run-pass-fullmir/vecs.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fvecs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass-fullmir%2Fvecs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fvecs.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -1,3 +1,5 @@\n+//ignore-msvc\n+\n fn make_vec() -> Vec<u8> {\n     let mut v = Vec::with_capacity(4);\n     v.push(1);"}, {"sha": "b4b74b9905fbb60e14c03cfc140cced87bf43f76", "filename": "tests/run-pass/issue-17877.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass%2Fissue-17877.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf925284269a1fbefbf1dfb53c1040c50d5be243/tests%2Frun-pass%2Fissue-17877.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-17877.rs?ref=cf925284269a1fbefbf1dfb53c1040c50d5be243", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//ignore-msvc\n \n #![feature(slice_patterns)]\n "}]}