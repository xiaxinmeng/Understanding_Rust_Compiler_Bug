{"sha": "adda6dbdf86afac34dc8710965de0018501bbe84", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkZGE2ZGJkZjg2YWZhYzM0ZGM4NzEwOTY1ZGUwMDE4NTAxYmJlODQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-01-25T11:10:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-25T11:10:28Z"}, "message": "Merge #2899\n\n2899: Provide more runners for potential tests r=matklad a=SomeoneToIgnore\n\nBased on the https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Runners.20for.20custom.20test.20annotations discussion.\r\n\r\nAdds a test runner for every method that has an annotation that contains `test` word in it, allowing to run tests annotated with custom testing annotations such as `#[tokio::test]`, `#[test_case(...)]` and others at costs of potentially emitting some false-positives.\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>", "tree": {"sha": "293de5972cc82d205443fa511da534d56f0e7bda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/293de5972cc82d205443fa511da534d56f0e7bda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adda6dbdf86afac34dc8710965de0018501bbe84", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeLCIkCRBK7hj4Ov3rIwAAdHIIAFqBdFrNNKuwpOVbVy6mp1pm\nbSeYF9zCfj8hsvDH5dunVuzq6ukchfczz79VAjscPdutwCVeuFu9yJerl05clLE8\n92cXRnIg+gHhwlybL3w6FlVYG8DDUbfTZBkdSkfXmbEoknLIPDTxDskzGp9mxC3M\nweajGU+ejZl1KhfbFgyYhS3w+kkXI/alVNk0oQguPPN4rWSdW+fk3BIa6upb5B1q\n74+gYEUsO9c7bTIA2tRxkuXLHEkH3PPbqozySJpXwIwyzLSuMMzaqN8UX9g8Lz3X\nks/ma2q6kMYPDm5IQaznb5bHD92cD3+pdJyClqlJwHrW4Bb0/HsaSsMwuca1IL0=\n=BC9Z\n-----END PGP SIGNATURE-----\n", "payload": "tree 293de5972cc82d205443fa511da534d56f0e7bda\nparent fb81726ee59a8df5d86ec2a78f959a0e166b8199\nparent 3137215e8db7aafb17860d30a2d2b39178112366\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1579950628 +0000\ncommitter GitHub <noreply@github.com> 1579950628 +0000\n\nMerge #2899\n\n2899: Provide more runners for potential tests r=matklad a=SomeoneToIgnore\n\nBased on the https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0/topic/Runners.20for.20custom.20test.20annotations discussion.\r\n\r\nAdds a test runner for every method that has an annotation that contains `test` word in it, allowing to run tests annotated with custom testing annotations such as `#[tokio::test]`, `#[test_case(...)]` and others at costs of potentially emitting some false-positives.\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adda6dbdf86afac34dc8710965de0018501bbe84", "html_url": "https://github.com/rust-lang/rust/commit/adda6dbdf86afac34dc8710965de0018501bbe84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adda6dbdf86afac34dc8710965de0018501bbe84/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb81726ee59a8df5d86ec2a78f959a0e166b8199", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb81726ee59a8df5d86ec2a78f959a0e166b8199", "html_url": "https://github.com/rust-lang/rust/commit/fb81726ee59a8df5d86ec2a78f959a0e166b8199"}, {"sha": "3137215e8db7aafb17860d30a2d2b39178112366", "url": "https://api.github.com/repos/rust-lang/rust/commits/3137215e8db7aafb17860d30a2d2b39178112366", "html_url": "https://github.com/rust-lang/rust/commit/3137215e8db7aafb17860d30a2d2b39178112366"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "8622dd9560b6c54b424eb7b5912a5d80b73e709f", "filename": "crates/ra_ide/src/runnables.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/adda6dbdf86afac34dc8710965de0018501bbe84/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adda6dbdf86afac34dc8710965de0018501bbe84/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Frunnables.rs?ref=adda6dbdf86afac34dc8710965de0018501bbe84", "patch": "@@ -43,7 +43,7 @@ fn runnable_fn(fn_def: ast::FnDef) -> Option<Runnable> {\n     let name = fn_def.name()?.text().clone();\n     let kind = if name == \"main\" {\n         RunnableKind::Bin\n-    } else if fn_def.has_atom_attr(\"test\") {\n+    } else if has_test_related_attribute(&fn_def) {\n         RunnableKind::Test { name: name.to_string() }\n     } else if fn_def.has_atom_attr(\"bench\") {\n         RunnableKind::Bench { name: name.to_string() }\n@@ -53,6 +53,20 @@ fn runnable_fn(fn_def: ast::FnDef) -> Option<Runnable> {\n     Some(Runnable { range: fn_def.syntax().text_range(), kind })\n }\n \n+/// This is a method with a heuristics to support test methods annotated with custom test annotations, such as\n+/// `#[test_case(...)]`, `#[tokio::test]` and similar.\n+/// Also a regular `#[test]` annotation is supported.\n+///\n+/// It may produce false positives, for example, `#[wasm_bindgen_test]` requires a different command to run the test,\n+/// but it's better than not to have the runnables for the tests at all.\n+fn has_test_related_attribute(fn_def: &ast::FnDef) -> bool {\n+    fn_def\n+        .attrs()\n+        .filter_map(|attr| attr.path())\n+        .map(|path| path.syntax().to_string().to_lowercase())\n+        .any(|attribute_text| attribute_text.contains(\"test\"))\n+}\n+\n fn runnable_mod(db: &RootDatabase, file_id: FileId, module: ast::Module) -> Option<Runnable> {\n     let has_test_function = module\n         .item_list()?"}]}