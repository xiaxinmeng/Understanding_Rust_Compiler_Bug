{"sha": "4786a22787356b89e145ce36926d5d3c01e02140", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3ODZhMjI3ODczNTZiODllMTQ1Y2UzNjkyNmQ1ZDNjMDFlMDIxNDA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-31T12:27:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-31T12:27:27Z"}, "message": "Merge #10098\n\n10098: minor: dead code r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "b8756b602bf3a8c1e9b3e21dc5d5052aa71c4ce7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8756b602bf3a8c1e9b3e21dc5d5052aa71c4ce7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4786a22787356b89e145ce36926d5d3c01e02140", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhLiAvCRBK7hj4Ov3rIwAAMpUIAAyk5FOF6N0a41VjGLf+0Bj8\nZ0u8Gpd07mRVNKkfxCJSO+/NUZMDvgcRk82Q/0Xj4RZYqFD9wnLbVfEf/I68old8\nq5ig0W3mQh5kxIALQs5PRh2GVgdjK22yFOaFiu2cqO8eoOeqVDYq45j0zH44Kq40\n0KaZunfJafyIhs5ZOia8Kt6zcgkkK8NDVQygZ4u0gIAyF+kf8i1ACYXTdOWW9vPH\nRIfRxjqMFXGKJZOIKmga+3R9MzKBYQDtJ5sKPBrGSeQGdPwOyJIPfKiXAwxmZH/w\nuKtyJ8BOnzznLTxDPqoPuHto0jarwAS020YZoBK6QFMyd/v7+lYepeWdtcffOQw=\n=JtR5\n-----END PGP SIGNATURE-----\n", "payload": "tree b8756b602bf3a8c1e9b3e21dc5d5052aa71c4ce7\nparent bda50a1b46096d2378bea16520f35d51f42764bc\nparent f1222e80850dca050e4f9a150514aeab9b27ac08\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1630412847 +0000\ncommitter GitHub <noreply@github.com> 1630412847 +0000\n\nMerge #10098\n\n10098: minor: dead code r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4786a22787356b89e145ce36926d5d3c01e02140", "html_url": "https://github.com/rust-lang/rust/commit/4786a22787356b89e145ce36926d5d3c01e02140", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4786a22787356b89e145ce36926d5d3c01e02140/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bda50a1b46096d2378bea16520f35d51f42764bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/bda50a1b46096d2378bea16520f35d51f42764bc", "html_url": "https://github.com/rust-lang/rust/commit/bda50a1b46096d2378bea16520f35d51f42764bc"}, {"sha": "f1222e80850dca050e4f9a150514aeab9b27ac08", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1222e80850dca050e4f9a150514aeab9b27ac08", "html_url": "https://github.com/rust-lang/rust/commit/f1222e80850dca050e4f9a150514aeab9b27ac08"}], "stats": {"total": 44, "additions": 10, "deletions": 34}, "files": [{"sha": "f982679b640c7a7b12883282c20308d701bea8d0", "filename": "crates/hir_expand/src/lib.rs", "status": "modified", "additions": 10, "deletions": 30, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/4786a22787356b89e145ce36926d5d3c01e02140/crates%2Fhir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4786a22787356b89e145ce36926d5d3c01e02140/crates%2Fhir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Flib.rs?ref=4786a22787356b89e145ce36926d5d3c01e02140", "patch": "@@ -666,42 +666,22 @@ pub fn to_fragment_kind(call: &ast::MacroCall) -> FragmentKind {\n     };\n \n     match parent.kind() {\n-        MACRO_ITEMS | SOURCE_FILE => FragmentKind::Items,\n-        MACRO_STMTS => FragmentKind::Statements,\n+        MACRO_ITEMS | SOURCE_FILE | ITEM_LIST => FragmentKind::Items,\n+        MACRO_STMTS | EXPR_STMT | BLOCK_EXPR => FragmentKind::Statements,\n         MACRO_PAT => FragmentKind::Pattern,\n         MACRO_TYPE => FragmentKind::Type,\n-        ITEM_LIST => FragmentKind::Items,\n+\n+        ARG_LIST | TRY_EXPR | TUPLE_EXPR | PAREN_EXPR | ARRAY_EXPR | FOR_EXPR | PATH_EXPR\n+        | CLOSURE_EXPR | CONDITION | BREAK_EXPR | RETURN_EXPR | MATCH_EXPR | MATCH_ARM\n+        | MATCH_GUARD | RECORD_EXPR_FIELD | CALL_EXPR | INDEX_EXPR | METHOD_CALL_EXPR\n+        | FIELD_EXPR | AWAIT_EXPR | CAST_EXPR | REF_EXPR | PREFIX_EXPR | RANGE_EXPR | BIN_EXPR => {\n+            FragmentKind::Expr\n+        }\n         LET_STMT => {\n             // FIXME: Handle LHS Pattern\n             FragmentKind::Expr\n         }\n-        EXPR_STMT => FragmentKind::Statements,\n-        BLOCK_EXPR => FragmentKind::Statements,\n-        ARG_LIST => FragmentKind::Expr,\n-        TRY_EXPR => FragmentKind::Expr,\n-        TUPLE_EXPR => FragmentKind::Expr,\n-        PAREN_EXPR => FragmentKind::Expr,\n-        ARRAY_EXPR => FragmentKind::Expr,\n-        FOR_EXPR => FragmentKind::Expr,\n-        PATH_EXPR => FragmentKind::Expr,\n-        CLOSURE_EXPR => FragmentKind::Expr,\n-        CONDITION => FragmentKind::Expr,\n-        BREAK_EXPR => FragmentKind::Expr,\n-        RETURN_EXPR => FragmentKind::Expr,\n-        MATCH_EXPR => FragmentKind::Expr,\n-        MATCH_ARM => FragmentKind::Expr,\n-        MATCH_GUARD => FragmentKind::Expr,\n-        RECORD_EXPR_FIELD => FragmentKind::Expr,\n-        CALL_EXPR => FragmentKind::Expr,\n-        INDEX_EXPR => FragmentKind::Expr,\n-        METHOD_CALL_EXPR => FragmentKind::Expr,\n-        FIELD_EXPR => FragmentKind::Expr,\n-        AWAIT_EXPR => FragmentKind::Expr,\n-        CAST_EXPR => FragmentKind::Expr,\n-        REF_EXPR => FragmentKind::Expr,\n-        PREFIX_EXPR => FragmentKind::Expr,\n-        RANGE_EXPR => FragmentKind::Expr,\n-        BIN_EXPR => FragmentKind::Expr,\n+\n         _ => {\n             // Unknown , Just guess it is `Items`\n             FragmentKind::Items"}, {"sha": "b2841370ec59d9b676622959ee58010964e90f91", "filename": "crates/tt/src/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4786a22787356b89e145ce36926d5d3c01e02140/crates%2Ftt%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4786a22787356b89e145ce36926d5d3c01e02140/crates%2Ftt%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftt%2Fsrc%2Flib.rs?ref=4786a22787356b89e145ce36926d5d3c01e02140", "patch": "@@ -277,17 +277,13 @@ pub mod buffer;\n \n #[derive(Debug, PartialEq, Eq, Clone)]\n pub enum ExpansionError {\n-    IOError(String),\n-    JsonError(String),\n     Unknown(String),\n     ExpansionError(String),\n }\n \n impl fmt::Display for ExpansionError {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self {\n-            ExpansionError::IOError(e) => write!(f, \"I/O error: {}\", e),\n-            ExpansionError::JsonError(e) => write!(f, \"JSON decoding error: {}\", e),\n             ExpansionError::Unknown(e) => e.fmt(f),\n             ExpansionError::ExpansionError(e) => write!(f, \"proc macro returned error: {}\", e),\n         }"}]}