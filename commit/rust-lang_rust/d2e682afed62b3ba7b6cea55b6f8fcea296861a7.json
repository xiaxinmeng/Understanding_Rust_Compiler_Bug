{"sha": "d2e682afed62b3ba7b6cea55b6f8fcea296861a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyZTY4MmFmZWQ2MmIzYmE3YjZjZWE1NWI2ZjhmY2VhMjk2ODYxYTc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-09-20T06:06:57Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-25T14:48:15Z"}, "message": "preserve const eval error information through trait error system", "tree": {"sha": "541779e702e2e0ee4f0451e4d8054263c6b7f6a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/541779e702e2e0ee4f0451e4d8054263c6b7f6a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2e682afed62b3ba7b6cea55b6f8fcea296861a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2e682afed62b3ba7b6cea55b6f8fcea296861a7", "html_url": "https://github.com/rust-lang/rust/commit/d2e682afed62b3ba7b6cea55b6f8fcea296861a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2e682afed62b3ba7b6cea55b6f8fcea296861a7/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ed7fc881e7f4dabcdc45646257ddb979822d7f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ed7fc881e7f4dabcdc45646257ddb979822d7f4", "html_url": "https://github.com/rust-lang/rust/commit/7ed7fc881e7f4dabcdc45646257ddb979822d7f4"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "2445ce334c0e796a47b98817e75a929e189ba185", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2e682afed62b3ba7b6cea55b6f8fcea296861a7/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2e682afed62b3ba7b6cea55b6f8fcea296861a7/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=d2e682afed62b3ba7b6cea55b6f8fcea296861a7", "patch": "@@ -29,7 +29,7 @@ use syntax_pos::Span;\n use syntax::ast;\n use syntax::symbol::Symbol;\n \n-#[derive(Debug, Clone, PartialEq, Eq)]\n+#[derive(Debug, Copy, Clone, PartialEq, Eq)]\n pub enum ErrorHandled {\n     /// Already reported a lint or an error for this evaluation\n     Reported,"}, {"sha": "7d52e9438f86978a2edae2ef1c3086056fc3b3a7", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2e682afed62b3ba7b6cea55b6f8fcea296861a7/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2e682afed62b3ba7b6cea55b6f8fcea296861a7/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=d2e682afed62b3ba7b6cea55b6f8fcea296861a7", "patch": "@@ -881,7 +881,7 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n             }\n \n             // already reported in the query\n-            ConstEvalFailure => {\n+            ConstEvalFailure(_) => {\n                 self.tcx.sess.delay_span_bug(span, \"constant in type had an ignored error\");\n                 return;\n             }"}, {"sha": "cfa77b210e857769f2a3e8f58640bc11367bffab", "filename": "src/librustc/traits/fulfill.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d2e682afed62b3ba7b6cea55b6f8fcea296861a7/src%2Flibrustc%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2e682afed62b3ba7b6cea55b6f8fcea296861a7/src%2Flibrustc%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ffulfill.rs?ref=d2e682afed62b3ba7b6cea55b6f8fcea296861a7", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use infer::InferCtxt;\n-use mir::interpret::GlobalId;\n+use mir::interpret::{GlobalId, ErrorHandled};\n use ty::{self, Ty, TypeFoldable, ToPolyTraitRef, ToPredicate};\n use ty::error::ExpectedFound;\n use rustc_data_structures::obligation_forest::{Error, ForestObligation, ObligationForest};\n@@ -489,11 +489,13 @@ impl<'a, 'b, 'gcx, 'tcx> ObligationProcessor for FulfillProcessor<'a, 'b, 'gcx,\n                                     match self.selcx.tcx().at(obligation.cause.span)\n                                                           .const_eval(param_env.and(cid)) {\n                                         Ok(_) => ProcessResult::Changed(vec![]),\n-                                        Err(_) => ProcessResult::Error(\n-                                            CodeSelectionError(ConstEvalFailure))\n+                                        Err(err) => ProcessResult::Error(\n+                                            CodeSelectionError(ConstEvalFailure(err)))\n                                     }\n                                 } else {\n-                                    ProcessResult::Error(CodeSelectionError(ConstEvalFailure))\n+                                    ProcessResult::Error(CodeSelectionError(\n+                                        ConstEvalFailure(ErrorHandled::TooGeneric)\n+                                    ))\n                                 }\n                             },\n                             None => {"}, {"sha": "6b2ec64668e9bbb006e1bbce46a7392ff0e9976a", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d2e682afed62b3ba7b6cea55b6f8fcea296861a7/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2e682afed62b3ba7b6cea55b6f8fcea296861a7/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=d2e682afed62b3ba7b6cea55b6f8fcea296861a7", "patch": "@@ -23,6 +23,7 @@ use hir::def_id::DefId;\n use infer::SuppressRegionErrors;\n use infer::outlives::env::OutlivesEnvironment;\n use middle::region;\n+use mir::interpret::ErrorHandled;\n use ty::subst::Substs;\n use ty::{self, AdtKind, List, Ty, TyCtxt, GenericParamDefKind, ToPredicate};\n use ty::error::{ExpectedFound, TypeError};\n@@ -437,7 +438,7 @@ pub enum SelectionError<'tcx> {\n                                 ty::PolyTraitRef<'tcx>,\n                                 ty::error::TypeError<'tcx>),\n     TraitNotObjectSafe(DefId),\n-    ConstEvalFailure,\n+    ConstEvalFailure(ErrorHandled),\n     Overflow,\n }\n "}, {"sha": "24779a350d74bdfcf5382244a26db480dfd44560", "filename": "src/librustc/traits/structural_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2e682afed62b3ba7b6cea55b6f8fcea296861a7/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2e682afed62b3ba7b6cea55b6f8fcea296861a7/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs?ref=d2e682afed62b3ba7b6cea55b6f8fcea296861a7", "patch": "@@ -172,7 +172,7 @@ impl<'a, 'tcx> Lift<'tcx> for traits::SelectionError<'a> {\n                 )\n             }\n             super::TraitNotObjectSafe(def_id) => Some(super::TraitNotObjectSafe(def_id)),\n-            super::ConstEvalFailure(ref err) => Some(super::ConstEvalFailure),\n+            super::ConstEvalFailure(err) => Some(super::ConstEvalFailure(err)),\n             super::Overflow => Some(super::Overflow),\n         }\n     }"}]}