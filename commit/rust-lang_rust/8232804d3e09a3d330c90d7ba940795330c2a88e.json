{"sha": "8232804d3e09a3d330c90d7ba940795330c2a88e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyMzI4MDRkM2UwOWEzZDMzMGM5MGQ3YmE5NDA3OTUzMzBjMmE4OGU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-29T16:14:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-29T16:14:10Z"}, "message": "Merge #9706\n\n9706: minor: perf and grammar fixes r=lnicola a=lnicola\n\n\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "51e50f37f39434b0343ec3ccfc3aeceda9915f7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51e50f37f39434b0343ec3ccfc3aeceda9915f7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8232804d3e09a3d330c90d7ba940795330c2a88e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhAtPSCRBK7hj4Ov3rIwAAMf4IAFn5juX5Pb6z3a0JTr7kgByo\n0QksQ+Cn0yV9FgppPNkQuhJvvezwvx615W3LVazdfFynlfBOESHlzIcKIZ0dZ32m\n9k7IXPnqhnPtonlAxHCat8oObENj9Y2zkcQNjq4fd6nECTZsXbALo9Ejb25k5Cti\nmeiejteIc7LVkqv2FM2u2qRMtIc8xhxXlcZBvb6GxS+a+NpqqIUEGMsJCGaNSVI+\nruZiAqoV/j8nbIs+M9WTnmypqwHCZxntu81RF9iOblSzfisPC/+g6ZVpt2IR2g7e\npXEIqiRqbuXigK8l/Khlr1xWCcAvQSGxCgu9q6b0iu+XUOfGfuVqRqOkTtJzE+c=\n=UFNa\n-----END PGP SIGNATURE-----\n", "payload": "tree 51e50f37f39434b0343ec3ccfc3aeceda9915f7e\nparent 8a6bac3fc8e426976d4d2ff37b80e1f8f82f1240\nparent 636933153d27a202efa247c8868f501ee368ae4b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1627575250 +0000\ncommitter GitHub <noreply@github.com> 1627575250 +0000\n\nMerge #9706\n\n9706: minor: perf and grammar fixes r=lnicola a=lnicola\n\n\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8232804d3e09a3d330c90d7ba940795330c2a88e", "html_url": "https://github.com/rust-lang/rust/commit/8232804d3e09a3d330c90d7ba940795330c2a88e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8232804d3e09a3d330c90d7ba940795330c2a88e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a6bac3fc8e426976d4d2ff37b80e1f8f82f1240", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a6bac3fc8e426976d4d2ff37b80e1f8f82f1240", "html_url": "https://github.com/rust-lang/rust/commit/8a6bac3fc8e426976d4d2ff37b80e1f8f82f1240"}, {"sha": "636933153d27a202efa247c8868f501ee368ae4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/636933153d27a202efa247c8868f501ee368ae4b", "html_url": "https://github.com/rust-lang/rust/commit/636933153d27a202efa247c8868f501ee368ae4b"}], "stats": {"total": 19, "additions": 7, "deletions": 12}, "files": [{"sha": "94dcff7f2a6955179dc633d6adc9577b8f4f07c6", "filename": "crates/hir_ty/src/infer/closure.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8232804d3e09a3d330c90d7ba940795330c2a88e/crates%2Fhir_ty%2Fsrc%2Finfer%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8232804d3e09a3d330c90d7ba940795330c2a88e/crates%2Fhir_ty%2Fsrc%2Finfer%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fclosure.rs?ref=8232804d3e09a3d330c90d7ba940795330c2a88e", "patch": "@@ -75,10 +75,7 @@ impl InferenceContext<'_> {\n                                     safety: chalk_ir::Safety::Safe,\n                                     variadic: false,\n                                 },\n-                                substitution: FnSubst(Substitution::from_iter(\n-                                    &Interner,\n-                                    sig_tys.clone(),\n-                                )),\n+                                substitution: FnSubst(Substitution::from_iter(&Interner, sig_tys)),\n                             });\n                         }\n                     }"}, {"sha": "9aa33e39bae2f473723ebb92aba3205f22b53ef0", "filename": "crates/ide_assists/src/handlers/remove_unused_param.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8232804d3e09a3d330c90d7ba940795330c2a88e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fremove_unused_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8232804d3e09a3d330c90d7ba940795330c2a88e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fremove_unused_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fremove_unused_param.rs?ref=8232804d3e09a3d330c90d7ba940795330c2a88e", "patch": "@@ -53,12 +53,10 @@ pub(crate) fn remove_unused_param(acc: &mut Assists, ctx: &AssistContext) -> Opt\n     }\n \n     let mut param_position = func.param_list()?.params().position(|it| it == param)?;\n-    // param_list() does not take self param into consideration, hence this additional check is\n-    // added. There are two cases to handle in this scenario, where functions are\n-    // associative(functions not associative and not containting contain self, are not allowed), in\n-    // this case param position is rightly set. If a method call is present which has self param,\n-    // that needs to be handled and is added below in process_usage function to reduce this increment and\n-    // not consider self param.\n+    // param_list() does not take the self param into consideration, hence this additional check\n+    // is required. For associated functions, param_position is incremented here. For inherent\n+    // calls we revet the increment below, in process_usage, as those calls will not have an\n+    // explicit self parameter.\n     if is_self_present {\n         param_position += 1;\n     }"}, {"sha": "00a88116cb745c194b9b499093309c3fe89db11b", "filename": "crates/ide_db/src/path_transform.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8232804d3e09a3d330c90d7ba940795330c2a88e/crates%2Fide_db%2Fsrc%2Fpath_transform.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8232804d3e09a3d330c90d7ba940795330c2a88e/crates%2Fide_db%2Fsrc%2Fpath_transform.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fpath_transform.rs?ref=8232804d3e09a3d330c90d7ba940795330c2a88e", "patch": "@@ -105,7 +105,7 @@ impl<'a> Ctx<'a> {\n             s.param_list().is_some() || (s.self_token().is_some() && path.parent_path().is_none())\n         }) {\n             // don't try to qualify `Fn(Foo) -> Bar` paths, they are in prelude anyway\n-            // don't try to qualify sole `self` either, they are usually locals, but are returned as modules due to namespace classing\n+            // don't try to qualify sole `self` either, they are usually locals, but are returned as modules due to namespace clashing\n             return None;\n         }\n "}, {"sha": "62ff922e1ffe1221ef123a2dcdecf1f55b97a85d", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8232804d3e09a3d330c90d7ba940795330c2a88e/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8232804d3e09a3d330c90d7ba940795330c2a88e/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=8232804d3e09a3d330c90d7ba940795330c2a88e", "patch": "@@ -636,7 +636,7 @@ impl GlobalState {\n                     let mut text = String::from_utf8(vfs.file_contents(file_id).to_vec()).unwrap();\n                     apply_document_changes(&mut text, params.content_changes);\n \n-                    vfs.set_file_contents(path.clone(), Some(text.into_bytes()));\n+                    vfs.set_file_contents(path, Some(text.into_bytes()));\n                 }\n                 Ok(())\n             })?"}]}