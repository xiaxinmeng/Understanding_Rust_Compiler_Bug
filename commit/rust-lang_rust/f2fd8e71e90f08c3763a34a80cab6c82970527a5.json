{"sha": "f2fd8e71e90f08c3763a34a80cab6c82970527a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyZmQ4ZTcxZTkwZjA4YzM3NjNhMzRhODBjYWI2YzgyOTcwNTI3YTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-31T10:22:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-31T10:22:06Z"}, "message": "Auto merge of #3606 - detrumi:blacklisted_name_hashset, r=phansch\n\nUse hashset in `blacklisted_name` lint", "tree": {"sha": "0a8ac4571abb06131dd601d8c478cfb09f715919", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a8ac4571abb06131dd601d8c478cfb09f715919"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2fd8e71e90f08c3763a34a80cab6c82970527a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2fd8e71e90f08c3763a34a80cab6c82970527a5", "html_url": "https://github.com/rust-lang/rust/commit/f2fd8e71e90f08c3763a34a80cab6c82970527a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2fd8e71e90f08c3763a34a80cab6c82970527a5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f3912850ad92784434a79e0e5062f517d642201", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f3912850ad92784434a79e0e5062f517d642201", "html_url": "https://github.com/rust-lang/rust/commit/6f3912850ad92784434a79e0e5062f517d642201"}, {"sha": "d1dfd3e96f4b4ffd928501e6f253dee3c166c2c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1dfd3e96f4b4ffd928501e6f253dee3c166c2c5", "html_url": "https://github.com/rust-lang/rust/commit/d1dfd3e96f4b4ffd928501e6f253dee3c166c2c5"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "ed7437e495b9f11f64f3b814293c43186b4fd9b3", "filename": "clippy_lints/src/blacklisted_name.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f2fd8e71e90f08c3763a34a80cab6c82970527a5/clippy_lints%2Fsrc%2Fblacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2fd8e71e90f08c3763a34a80cab6c82970527a5/clippy_lints%2Fsrc%2Fblacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblacklisted_name.rs?ref=f2fd8e71e90f08c3763a34a80cab6c82970527a5", "patch": "@@ -11,6 +11,7 @@ use crate::utils::span_lint;\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};\n+use rustc_data_structures::fx::FxHashSet;\n \n /// **What it does:** Checks for usage of blacklisted names for variables, such\n /// as `foo`.\n@@ -32,11 +33,11 @@ declare_clippy_lint! {\n \n #[derive(Clone, Debug)]\n pub struct BlackListedName {\n-    blacklist: Vec<String>,\n+    blacklist: FxHashSet<String>,\n }\n \n impl BlackListedName {\n-    pub fn new(blacklist: Vec<String>) -> Self {\n+    pub fn new(blacklist: FxHashSet<String>) -> Self {\n         Self { blacklist }\n     }\n }\n@@ -50,7 +51,7 @@ impl LintPass for BlackListedName {\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BlackListedName {\n     fn check_pat(&mut self, cx: &LateContext<'a, 'tcx>, pat: &'tcx Pat) {\n         if let PatKind::Binding(_, _, ident, _) = pat.node {\n-            if self.blacklist.iter().any(|s| ident.name == *s) {\n+            if self.blacklist.contains(&ident.name.to_string()) {\n                 span_lint(\n                     cx,\n                     BLACKLISTED_NAME,"}, {"sha": "2e515cc8aea6042b180c0d33133f44165693f052", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f2fd8e71e90f08c3763a34a80cab6c82970527a5/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2fd8e71e90f08c3763a34a80cab6c82970527a5/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=f2fd8e71e90f08c3763a34a80cab6c82970527a5", "patch": "@@ -423,7 +423,9 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n     reg.register_late_lint_pass(box overflow_check_conditional::OverflowCheckConditional);\n     reg.register_late_lint_pass(box unused_label::UnusedLabel);\n     reg.register_late_lint_pass(box new_without_default::NewWithoutDefault::default());\n-    reg.register_late_lint_pass(box blacklisted_name::BlackListedName::new(conf.blacklisted_names.clone()));\n+    reg.register_late_lint_pass(box blacklisted_name::BlackListedName::new(\n+            conf.blacklisted_names.iter().cloned().collect()\n+    ));\n     reg.register_late_lint_pass(box functions::Functions::new(conf.too_many_arguments_threshold));\n     reg.register_early_lint_pass(box doc::Doc::new(conf.doc_valid_idents.iter().cloned().collect()));\n     reg.register_late_lint_pass(box neg_multiply::NegMultiply);"}]}