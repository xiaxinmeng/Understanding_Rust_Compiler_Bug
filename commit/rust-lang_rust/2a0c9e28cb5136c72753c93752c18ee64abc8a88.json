{"sha": "2a0c9e28cb5136c72753c93752c18ee64abc8a88", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhMGM5ZTI4Y2I1MTM2YzcyNzUzYzkzNzUyYzE4ZWU2NGFiYzhhODg=", "commit": {"author": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2021-01-14T20:03:17Z"}, "committer": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2021-01-15T17:50:04Z"}, "message": "Address nit", "tree": {"sha": "54b098022f17db12b33372983d412e2a3d8a6664", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54b098022f17db12b33372983d412e2a3d8a6664"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a0c9e28cb5136c72753c93752c18ee64abc8a88", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEETdpCnQmiF6hBYUqdfsyTL4sscx4FAmAB1cwACgkQfsyTL4ss\ncx5auRAAperaUO3Hj5EWTURDfWcUbKPbIpmdps9hjTBfKIQK6YIvvUdcnUUCu7cu\nwGh7f14np+SuQh7zHvwkrdIp0J1N8j0EJW7en5ayplOlsfkEKfWqKRan2vAw9FAf\nAeST3Z7YVYrmkeLWHjxd2BVUf3dSLF53rDhqI6VKy6C7fwtkmIPVilPesR4QmfL9\nHnd9mfJijtV490QlqQgCIb08C3PaiNG8xpw1S7FPF5YTznP1VMMLjoNBO/36TAKN\n0Zux6+5XMVvYIlVoI2Y9G0dNpBZlmEO5rlzNv7Z4u/BZR04QqhhjxeavD2mr6dul\nKZnWTehKbqF4+FTev+OA0i8jzcimInxvccA3YwIropsIuEGkpqBPs+EaVcuQ7/Eu\nWWLIlA2J0jQvkAtme04s1JUGQxgFGvPLaH47lVNrU6R05G5B7G2Xz5pYEoiWMjFc\n/bU+thMwnkDoftCJ5spYAzC91zEA0C9NLqdgbo4Wjyl/IIqn0ccw3soJhuGF2ol1\nXVCxTN2M3vmScVDRJpHIwkRVF4nqXuokxsDyNx3Y9Iq7A4PSt99hwLJKixv40Iax\nKmbhihN4QV0FtXdYh6pltRDa5BxH3IC3B4S/YGaWagxAAVrzIOHRC3uje9bw3v7c\nEvVyi0RqgtH8kFk3765QuYtnp5ILf33gB15FaIf5uiuoaTNGc4I=\n=P4Un\n-----END PGP SIGNATURE-----", "payload": "tree 54b098022f17db12b33372983d412e2a3d8a6664\nparent e3274fd148273796e93c142d8cef28acc3af0b60\nauthor Rune Tynan <runetynan@gmail.com> 1610654597 -0500\ncommitter Rune Tynan <runetynan@gmail.com> 1610733004 -0500\n\nAddress nit\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a0c9e28cb5136c72753c93752c18ee64abc8a88", "html_url": "https://github.com/rust-lang/rust/commit/2a0c9e28cb5136c72753c93752c18ee64abc8a88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a0c9e28cb5136c72753c93752c18ee64abc8a88/comments", "author": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3274fd148273796e93c142d8cef28acc3af0b60", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3274fd148273796e93c142d8cef28acc3af0b60", "html_url": "https://github.com/rust-lang/rust/commit/e3274fd148273796e93c142d8cef28acc3af0b60"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "e2cc7547781d593a866d8bd1a22008715d1b65cf", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2a0c9e28cb5136c72753c93752c18ee64abc8a88/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a0c9e28cb5136c72753c93752c18ee64abc8a88/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=2a0c9e28cb5136c72753c93752c18ee64abc8a88", "patch": "@@ -2208,6 +2208,7 @@ fn clean_use_statement(\n \n     // Also check whether imports were asked to be inlined, in case we're trying to re-export a\n     // crate in Rust 2018+\n+    let def_id = cx.tcx.hir().local_def_id(import.hir_id).to_def_id();\n     let path = path.clean(cx);\n     let inner = if kind == hir::UseKind::Glob {\n         if !denied {\n@@ -2239,7 +2240,7 @@ fn clean_use_statement(\n                 &mut visited,\n             ) {\n                 items.push(Item::from_def_id_and_parts(\n-                    cx.tcx.hir().local_def_id(import.hir_id).to_def_id(),\n+                    def_id,\n                     None,\n                     ImportItem(Import::new_simple(name, resolve_use_source(cx, path), false)),\n                     cx,\n@@ -2250,12 +2251,7 @@ fn clean_use_statement(\n         Import::new_simple(name, resolve_use_source(cx, path), true)\n     };\n \n-    vec![Item::from_def_id_and_parts(\n-        cx.tcx.hir().local_def_id(import.hir_id).to_def_id(),\n-        None,\n-        ImportItem(inner),\n-        cx,\n-    )]\n+    vec![Item::from_def_id_and_parts(def_id, None, ImportItem(inner), cx)]\n }\n \n impl Clean<Item> for (&hir::ForeignItem<'_>, Option<Symbol>) {"}]}