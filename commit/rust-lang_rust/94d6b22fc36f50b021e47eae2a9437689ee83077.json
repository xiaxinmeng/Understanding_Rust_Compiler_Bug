{"sha": "94d6b22fc36f50b021e47eae2a9437689ee83077", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ZDZiMjJmYzM2ZjUwYjAyMWU0N2VhZTJhOTQzNzY4OWVlODMwNzc=", "commit": {"author": {"name": "Beno\u00eet du Garreau", "email": "bdgdlm@outlook.com", "date": "2021-08-12T08:48:04Z"}, "committer": {"name": "Beno\u00eet du Garreau", "email": "bdgdlm@outlook.com", "date": "2021-08-12T08:48:04Z"}, "message": "Add missing cfg attribute", "tree": {"sha": "ede356f572f980c0447b199463fe2719a36942e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ede356f572f980c0447b199463fe2719a36942e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94d6b22fc36f50b021e47eae2a9437689ee83077", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94d6b22fc36f50b021e47eae2a9437689ee83077", "html_url": "https://github.com/rust-lang/rust/commit/94d6b22fc36f50b021e47eae2a9437689ee83077", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94d6b22fc36f50b021e47eae2a9437689ee83077/comments", "author": {"login": "a1phyr", "id": 47725341, "node_id": "MDQ6VXNlcjQ3NzI1MzQx", "avatar_url": "https://avatars.githubusercontent.com/u/47725341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a1phyr", "html_url": "https://github.com/a1phyr", "followers_url": "https://api.github.com/users/a1phyr/followers", "following_url": "https://api.github.com/users/a1phyr/following{/other_user}", "gists_url": "https://api.github.com/users/a1phyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/a1phyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a1phyr/subscriptions", "organizations_url": "https://api.github.com/users/a1phyr/orgs", "repos_url": "https://api.github.com/users/a1phyr/repos", "events_url": "https://api.github.com/users/a1phyr/events{/privacy}", "received_events_url": "https://api.github.com/users/a1phyr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "a1phyr", "id": 47725341, "node_id": "MDQ6VXNlcjQ3NzI1MzQx", "avatar_url": "https://avatars.githubusercontent.com/u/47725341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a1phyr", "html_url": "https://github.com/a1phyr", "followers_url": "https://api.github.com/users/a1phyr/followers", "following_url": "https://api.github.com/users/a1phyr/following{/other_user}", "gists_url": "https://api.github.com/users/a1phyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/a1phyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a1phyr/subscriptions", "organizations_url": "https://api.github.com/users/a1phyr/orgs", "repos_url": "https://api.github.com/users/a1phyr/repos", "events_url": "https://api.github.com/users/a1phyr/events{/privacy}", "received_events_url": "https://api.github.com/users/a1phyr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "361398009be65f9aa6ae539c2ea37fbd943cc789", "url": "https://api.github.com/repos/rust-lang/rust/commits/361398009be65f9aa6ae539c2ea37fbd943cc789", "html_url": "https://github.com/rust-lang/rust/commit/361398009be65f9aa6ae539c2ea37fbd943cc789"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "933361d812cb0284a18dd243ecb7f41772893c57", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/94d6b22fc36f50b021e47eae2a9437689ee83077/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94d6b22fc36f50b021e47eae2a9437689ee83077/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=94d6b22fc36f50b021e47eae2a9437689ee83077", "patch": "@@ -2378,10 +2378,12 @@ impl<T, A: Allocator> ops::DerefMut for Vec<T, A> {\n     }\n }\n \n+#[cfg(not(no_global_oom_handling))]\n trait SpecCloneFrom {\n     fn clone_from(this: &mut Self, other: &Self);\n }\n \n+#[cfg(not(no_global_oom_handling))]\n impl<T: Clone, A: Allocator> SpecCloneFrom for Vec<T, A> {\n     default fn clone_from(this: &mut Self, other: &Self) {\n         // drop anything that will not be overwritten\n@@ -2397,6 +2399,7 @@ impl<T: Clone, A: Allocator> SpecCloneFrom for Vec<T, A> {\n     }\n }\n \n+#[cfg(not(no_global_oom_handling))]\n impl<T: Copy, A: Allocator> SpecCloneFrom for Vec<T, A> {\n     fn clone_from(this: &mut Self, other: &Self) {\n         this.clear();"}]}