{"sha": "cb55d10eb2b11ea6aee96c111b0996519af1fdf5", "node_id": "C_kwDOAAsO6NoAKGNiNTVkMTBlYjJiMTFlYTZhZWU5NmMxMTFiMDk5NjUxOWFmMWZkZjU", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-10-29T13:14:02Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-02-03T16:27:03Z"}, "message": "Fix #103320, add explanatory message for [#must_use]", "tree": {"sha": "3b108cd3c6cc8e63ef95cdcec406533f18fbb060", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b108cd3c6cc8e63ef95cdcec406533f18fbb060"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb55d10eb2b11ea6aee96c111b0996519af1fdf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb55d10eb2b11ea6aee96c111b0996519af1fdf5", "html_url": "https://github.com/rust-lang/rust/commit/cb55d10eb2b11ea6aee96c111b0996519af1fdf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb55d10eb2b11ea6aee96c111b0996519af1fdf5/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a94b9fd0ace1336a3dd93f51f1c0db6ca0fd7f92", "url": "https://api.github.com/repos/rust-lang/rust/commits/a94b9fd0ace1336a3dd93f51f1c0db6ca0fd7f92", "html_url": "https://github.com/rust-lang/rust/commit/a94b9fd0ace1336a3dd93f51f1c0db6ca0fd7f92"}], "stats": {"total": 151, "additions": 142, "deletions": 9}, "files": [{"sha": "fe77cf23e8f942fee238c71e3ca30ce2b85e7d66", "filename": "compiler/rustc_error_messages/locales/en-US/borrowck.ftl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb55d10eb2b11ea6aee96c111b0996519af1fdf5/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/cb55d10eb2b11ea6aee96c111b0996519af1fdf5/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl?ref=cb55d10eb2b11ea6aee96c111b0996519af1fdf5", "patch": "@@ -33,7 +33,7 @@ borrowck_var_here_defined = variable defined here\n \n borrowck_var_here_captured = variable captured here\n \n-borrowck_closure_inferred_mut =  inferred to be a `FnMut` closure\n+borrowck_closure_inferred_mut = inferred to be a `FnMut` closure\n \n borrowck_returned_closure_escaped =\n     returns a closure that contains a reference to a captured variable, which then escapes the closure body"}, {"sha": "b1e7cc69a809b269ca9a5608656736490b1225bf", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cb55d10eb2b11ea6aee96c111b0996519af1fdf5/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/cb55d10eb2b11ea6aee96c111b0996519af1fdf5/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=cb55d10eb2b11ea6aee96c111b0996519af1fdf5", "patch": "@@ -309,6 +309,7 @@ lint_unused_generator =\n     .note = generators are lazy and do nothing unless resumed\n \n lint_unused_def = unused {$pre}`{$def}`{$post} that must be used\n+    .suggestion = use `let _ = ...` to ignore the resulting value\n \n lint_path_statement_drop = path statement drops value\n     .suggestion = use `drop` to clarify the intent"}, {"sha": "2e447b900e1174b79ed142bb3c1cbf0d664e34ba", "filename": "compiler/rustc_lint/src/lints.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/cb55d10eb2b11ea6aee96c111b0996519af1fdf5/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb55d10eb2b11ea6aee96c111b0996519af1fdf5/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flints.rs?ref=cb55d10eb2b11ea6aee96c111b0996519af1fdf5", "patch": "@@ -1402,6 +1402,21 @@ pub struct UnusedDef<'a, 'b> {\n     pub cx: &'a LateContext<'b>,\n     pub def_id: DefId,\n     pub note: Option<Symbol>,\n+    pub suggestion: Option<UnusedDefSuggestion>,\n+}\n+\n+#[derive(Subdiagnostic)]\n+pub enum UnusedDefSuggestion {\n+    #[suggestion(\n+        suggestion,\n+        style = \"verbose\",\n+        code = \"let _ = \",\n+        applicability = \"machine-applicable\"\n+    )]\n+    Default {\n+        #[primary_span]\n+        span: Span,\n+    },\n }\n \n // Needed because of def_path_str\n@@ -1417,6 +1432,9 @@ impl<'a> DecorateLint<'a, ()> for UnusedDef<'_, '_> {\n         if let Some(note) = self.note {\n             diag.note(note.as_str());\n         }\n+        if let Some(sugg) = self.suggestion {\n+            diag.subdiagnostic(sugg);\n+        }\n         diag\n     }\n "}, {"sha": "622601224ff922a95d350ec5add92143794f170f", "filename": "compiler/rustc_lint/src/unused.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/cb55d10eb2b11ea6aee96c111b0996519af1fdf5/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb55d10eb2b11ea6aee96c111b0996519af1fdf5/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Funused.rs?ref=cb55d10eb2b11ea6aee96c111b0996519af1fdf5", "patch": "@@ -1,7 +1,7 @@\n use crate::lints::{\n     PathStatementDrop, PathStatementDropSub, PathStatementNoEffect, UnusedAllocationDiag,\n-    UnusedAllocationMutDiag, UnusedClosure, UnusedDef, UnusedDelim, UnusedDelimSuggestion,\n-    UnusedGenerator, UnusedImportBracesDiag, UnusedOp, UnusedResult,\n+    UnusedAllocationMutDiag, UnusedClosure, UnusedDef, UnusedDefSuggestion, UnusedDelim,\n+    UnusedDelimSuggestion, UnusedGenerator, UnusedImportBracesDiag, UnusedOp, UnusedResult,\n };\n use crate::Lint;\n use crate::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n@@ -418,6 +418,19 @@ impl<'tcx> LateLintPass<'tcx> for UnusedResults {\n                     );\n                 }\n                 MustUsePath::Def(span, def_id, reason) => {\n+                    let suggestion = if matches!(\n+                        cx.tcx.get_diagnostic_name(*def_id),\n+                        Some(sym::add)\n+                            | Some(sym::sub)\n+                            | Some(sym::mul)\n+                            | Some(sym::div)\n+                            | Some(sym::rem)\n+                            | Some(sym::neg),\n+                    ) {\n+                        Some(UnusedDefSuggestion::Default { span: span.shrink_to_lo() })\n+                    } else {\n+                        None\n+                    };\n                     cx.emit_spanned_lint(\n                         UNUSED_MUST_USE,\n                         *span,\n@@ -427,6 +440,7 @@ impl<'tcx> LateLintPass<'tcx> for UnusedResults {\n                             cx,\n                             def_id: *def_id,\n                             note: *reason,\n+                            suggestion,\n                         },\n                     );\n                 }"}, {"sha": "0c7ee9630c6ee560127731249ef633dd2823578f", "filename": "library/core/src/ops/arith.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/cb55d10eb2b11ea6aee96c111b0996519af1fdf5/library%2Fcore%2Fsrc%2Fops%2Farith.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb55d10eb2b11ea6aee96c111b0996519af1fdf5/library%2Fcore%2Fsrc%2Fops%2Farith.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Farith.rs?ref=cb55d10eb2b11ea6aee96c111b0996519af1fdf5", "patch": "@@ -86,7 +86,8 @@ pub trait Add<Rhs = Self> {\n     /// ```\n     /// assert_eq!(12 + 1, 13);\n     /// ```\n-    #[must_use]\n+    #[must_use = \"this returns the result of the operation, without modifying the original\"]\n+    #[rustc_diagnostic_item = \"add\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn add(self, rhs: Rhs) -> Self::Output;\n }\n@@ -195,7 +196,8 @@ pub trait Sub<Rhs = Self> {\n     /// ```\n     /// assert_eq!(12 - 1, 11);\n     /// ```\n-    #[must_use]\n+    #[must_use = \"this returns the result of the operation, without modifying the original\"]\n+    #[rustc_diagnostic_item = \"sub\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn sub(self, rhs: Rhs) -> Self::Output;\n }\n@@ -325,7 +327,8 @@ pub trait Mul<Rhs = Self> {\n     /// ```\n     /// assert_eq!(12 * 2, 24);\n     /// ```\n-    #[must_use]\n+    #[must_use = \"this returns the result of the operation, without modifying the original\"]\n+    #[rustc_diagnostic_item = \"mul\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn mul(self, rhs: Rhs) -> Self::Output;\n }\n@@ -459,7 +462,8 @@ pub trait Div<Rhs = Self> {\n     /// ```\n     /// assert_eq!(12 / 2, 6);\n     /// ```\n-    #[must_use]\n+    #[must_use = \"this returns the result of the operation, without modifying the original\"]\n+    #[rustc_diagnostic_item = \"div\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn div(self, rhs: Rhs) -> Self::Output;\n }\n@@ -562,7 +566,8 @@ pub trait Rem<Rhs = Self> {\n     /// ```\n     /// assert_eq!(12 % 10, 2);\n     /// ```\n-    #[must_use]\n+    #[must_use = \"this returns the result of the operation, without modifying the original\"]\n+    #[rustc_diagnostic_item = \"rem\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn rem(self, rhs: Rhs) -> Self::Output;\n }\n@@ -678,7 +683,8 @@ pub trait Neg {\n     /// let x: i32 = 12;\n     /// assert_eq!(-x, -12);\n     /// ```\n-    #[must_use]\n+    #[must_use = \"this returns the result of the operation, without modifying the original\"]\n+    #[rustc_diagnostic_item = \"neg\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn neg(self) -> Self::Output;\n }"}, {"sha": "597d312fa5ecb439589d1b86097267fcfe2da192", "filename": "tests/ui/lint/unused/issue-103320-must-use-ops.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/cb55d10eb2b11ea6aee96c111b0996519af1fdf5/tests%2Fui%2Flint%2Funused%2Fissue-103320-must-use-ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb55d10eb2b11ea6aee96c111b0996519af1fdf5/tests%2Fui%2Flint%2Funused%2Fissue-103320-must-use-ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Funused%2Fissue-103320-must-use-ops.rs?ref=cb55d10eb2b11ea6aee96c111b0996519af1fdf5", "patch": "@@ -0,0 +1,27 @@\n+// check-pass\n+\n+#![warn(unused_must_use)]\n+#![feature(never_type)]\n+\n+use std::ops::Add;\n+use std::ops::Sub;\n+use std::ops::Mul;\n+use std::ops::Div;\n+use std::ops::Rem;\n+\n+fn main() {\n+    let x = 2_u32;\n+    (x.add(4), x.sub(4), x.mul(4), x.div(4), x.rem(4));\n+\n+    x.add(4); //~ WARN unused return value of `add` that must be used\n+\n+    x.sub(4); //~ WARN unused return value of `sub` that must be used\n+\n+    x.mul(4); //~ WARN unused return value of `mul` that must be used\n+\n+    x.div(4); //~ WARN unused return value of `div` that must be used\n+\n+    x.rem(4); //~ WARN unused return value of `rem` that must be used\n+\n+    println!(\"{}\", x);\n+}"}, {"sha": "57439ec6a8fdb1804e83846cd751d6254ec0496a", "filename": "tests/ui/lint/unused/issue-103320-must-use-ops.stderr", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/cb55d10eb2b11ea6aee96c111b0996519af1fdf5/tests%2Fui%2Flint%2Funused%2Fissue-103320-must-use-ops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cb55d10eb2b11ea6aee96c111b0996519af1fdf5/tests%2Fui%2Flint%2Funused%2Fissue-103320-must-use-ops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Funused%2Fissue-103320-must-use-ops.stderr?ref=cb55d10eb2b11ea6aee96c111b0996519af1fdf5", "patch": "@@ -0,0 +1,67 @@\n+warning: unused return value of `add` that must be used\n+  --> $DIR/issue-103320-must-use-ops.rs:16:5\n+   |\n+LL |     x.add(4);\n+   |     ^^^^^^^^\n+   |\n+   = note: this returns the result of the operation, without modifying the original\n+note: the lint level is defined here\n+  --> $DIR/issue-103320-must-use-ops.rs:3:9\n+   |\n+LL | #![warn(unused_must_use)]\n+   |         ^^^^^^^^^^^^^^^\n+help: use `let _ = ...` to ignore the resulting value\n+   |\n+LL |     let _ = x.add(4);\n+   |     +++++++\n+\n+warning: unused return value of `sub` that must be used\n+  --> $DIR/issue-103320-must-use-ops.rs:18:5\n+   |\n+LL |     x.sub(4);\n+   |     ^^^^^^^^\n+   |\n+   = note: this returns the result of the operation, without modifying the original\n+help: use `let _ = ...` to ignore the resulting value\n+   |\n+LL |     let _ = x.sub(4);\n+   |     +++++++\n+\n+warning: unused return value of `mul` that must be used\n+  --> $DIR/issue-103320-must-use-ops.rs:20:5\n+   |\n+LL |     x.mul(4);\n+   |     ^^^^^^^^\n+   |\n+   = note: this returns the result of the operation, without modifying the original\n+help: use `let _ = ...` to ignore the resulting value\n+   |\n+LL |     let _ = x.mul(4);\n+   |     +++++++\n+\n+warning: unused return value of `div` that must be used\n+  --> $DIR/issue-103320-must-use-ops.rs:22:5\n+   |\n+LL |     x.div(4);\n+   |     ^^^^^^^^\n+   |\n+   = note: this returns the result of the operation, without modifying the original\n+help: use `let _ = ...` to ignore the resulting value\n+   |\n+LL |     let _ = x.div(4);\n+   |     +++++++\n+\n+warning: unused return value of `rem` that must be used\n+  --> $DIR/issue-103320-must-use-ops.rs:24:5\n+   |\n+LL |     x.rem(4);\n+   |     ^^^^^^^^\n+   |\n+   = note: this returns the result of the operation, without modifying the original\n+help: use `let _ = ...` to ignore the resulting value\n+   |\n+LL |     let _ = x.rem(4);\n+   |     +++++++\n+\n+warning: 5 warnings emitted\n+"}]}