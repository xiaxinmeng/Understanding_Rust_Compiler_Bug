{"sha": "888c18d3f3f7d9356ba6c86917d5af6a4395d8f4", "node_id": "C_kwDOAAsO6NoAKDg4OGMxOGQzZjNmN2Q5MzU2YmE2Yzg2OTE3ZDVhZjZhNDM5NWQ4ZjQ", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-02-17T03:33:08Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-02-23T20:32:24Z"}, "message": "Rename many interner functions.\n\n(This is a large commit. The changes to\n`compiler/rustc_middle/src/ty/context.rs` are the most important ones.)\n\nThe current naming scheme is a mess, with a mix of `_intern_`, `intern_`\nand `mk_` prefixes, with little consistency. In particular, in many\ncases it's easy to use an iterator interner when a (preferable) slice\ninterner is available.\n\nThe guiding principles of the new naming system:\n- No `_intern_` prefixes.\n- The `intern_` prefix is for internal operations.\n- The `mk_` prefix is for external operations.\n- For cases where there is a slice interner and an iterator interner,\n  the former is `mk_foo` and the latter is `mk_foo_from_iter`.\n\nAlso, `slice_interners!` and `direct_interners!` can now be `pub` or\nnon-`pub`, which helps enforce the internal/external operations\ndivision.\n\nIt's not perfect, but I think it's a clear improvement.\n\nThe following lists show everything that was renamed.\n\nslice_interners\n- const_list\n  - mk_const_list -> mk_const_list_from_iter\n  - intern_const_list -> mk_const_list\n- substs\n  - mk_substs -> mk_substs_from_iter\n  - intern_substs -> mk_substs\n  - check_substs -> check_and_mk_substs (this is a weird one)\n- canonical_var_infos\n  - intern_canonical_var_infos -> mk_canonical_var_infos\n- poly_existential_predicates\n  - mk_poly_existential_predicates -> mk_poly_existential_predicates_from_iter\n  - intern_poly_existential_predicates -> mk_poly_existential_predicates\n  - _intern_poly_existential_predicates -> intern_poly_existential_predicates\n- predicates\n  - mk_predicates -> mk_predicates_from_iter\n  - intern_predicates -> mk_predicates\n  - _intern_predicates -> intern_predicates\n- projs\n  - intern_projs -> mk_projs\n- place_elems\n  - mk_place_elems -> mk_place_elems_from_iter\n  - intern_place_elems -> mk_place_elems\n- bound_variable_kinds\n  - mk_bound_variable_kinds -> mk_bound_variable_kinds_from_iter\n  - intern_bound_variable_kinds -> mk_bound_variable_kinds\n\ndirect_interners\n- region\n  - intern_region (unchanged)\n- const\n  - mk_const_internal -> intern_const\n- const_allocation\n  - intern_const_alloc -> mk_const_alloc\n- layout\n  - intern_layout -> mk_layout\n- adt_def\n  - intern_adt_def -> mk_adt_def_from_data (unusual case, hard to avoid)\n  - alloc_adt_def(!) -> mk_adt_def\n- external_constraints\n  - intern_external_constraints -> mk_external_constraints\n\nOther\n- type_list\n  - mk_type_list -> mk_type_list_from_iter\n  - intern_type_list -> mk_type_list\n- tup\n  - mk_tup -> mk_tup_from_iter\n  - intern_tup -> mk_tup", "tree": {"sha": "3c07cfb16ca5904fde3354858c83676eb1dc86a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c07cfb16ca5904fde3354858c83676eb1dc86a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/888c18d3f3f7d9356ba6c86917d5af6a4395d8f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/888c18d3f3f7d9356ba6c86917d5af6a4395d8f4", "html_url": "https://github.com/rust-lang/rust/commit/888c18d3f3f7d9356ba6c86917d5af6a4395d8f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/888c18d3f3f7d9356ba6c86917d5af6a4395d8f4/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e711da2f07778d62f6411de5da520f1e260d761", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e711da2f07778d62f6411de5da520f1e260d761", "html_url": "https://github.com/rust-lang/rust/commit/7e711da2f07778d62f6411de5da520f1e260d761"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f21b4f84c4cd5cb90fa2068ab21ca2140c552041", "filename": "crates/hir-ty/src/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/888c18d3f3f7d9356ba6c86917d5af6a4395d8f4/crates%2Fhir-ty%2Fsrc%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/888c18d3f3f7d9356ba6c86917d5af6a4395d8f4/crates%2Fhir-ty%2Fsrc%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Flayout.rs?ref=888c18d3f3f7d9356ba6c86917d5af6a4395d8f4", "patch": "@@ -173,7 +173,7 @@ pub fn layout_of_ty(db: &dyn HirDatabase, ty: &Ty, krate: CrateId) -> Result<Lay\n \n             // let pointee = tcx.normalize_erasing_regions(param_env, pointee);\n             // if pointee.is_sized(tcx.at(DUMMY_SP), param_env) {\n-            //     return Ok(tcx.intern_layout(LayoutS::scalar(cx, data_ptr)));\n+            //     return Ok(tcx.mk_layout(LayoutS::scalar(cx, data_ptr)));\n             // }\n \n             let unsized_part = struct_tail_erasing_lifetimes(db, pointee.clone());"}]}