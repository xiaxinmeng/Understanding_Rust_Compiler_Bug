{"sha": "43e8ace76b01820032679f276f3e298b92288ad6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzZThhY2U3NmIwMTgyMDAzMjY3OWYyNzZmM2UyOThiOTIyODhhZDY=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2014-03-27T12:43:01Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-10T22:21:57Z"}, "message": "debuginfo: Improve source code position assignment for inlined functions.\n\nThis commit makes sure that code inlined from other functions isn't assigned the source position of the call site, since this leads to undesired behavior when setting line breakpoints (issue #12886)", "tree": {"sha": "7d3c546623875625ce60f54f6e34cc1f8c7ef900", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d3c546623875625ce60f54f6e34cc1f8c7ef900"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43e8ace76b01820032679f276f3e298b92288ad6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43e8ace76b01820032679f276f3e298b92288ad6", "html_url": "https://github.com/rust-lang/rust/commit/43e8ace76b01820032679f276f3e298b92288ad6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43e8ace76b01820032679f276f3e298b92288ad6/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bcb76181a3b0df2df5ade348af3a1d29fca795e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bcb76181a3b0df2df5ade348af3a1d29fca795e", "html_url": "https://github.com/rust-lang/rust/commit/5bcb76181a3b0df2df5ade348af3a1d29fca795e"}], "stats": {"total": 36, "additions": 21, "deletions": 15}, "files": [{"sha": "6f6484ae1a596c61d358f28416bc2c036d8064ab", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/43e8ace76b01820032679f276f3e298b92288ad6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43e8ace76b01820032679f276f3e298b92288ad6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=43e8ace76b01820032679f276f3e298b92288ad6", "patch": "@@ -533,21 +533,26 @@ pub fn create_argument_metadata(bcx: &Block, arg: &ast::Arg) {\n pub fn set_source_location(fcx: &FunctionContext,\n                            node_id: ast::NodeId,\n                            span: Span) {\n-    if fn_should_be_ignored(fcx) {\n-        return;\n-    }\n-\n-    let cx = fcx.ccx;\n+    match fcx.debug_context {\n+        DebugInfoDisabled => return,\n+        FunctionWithoutDebugInfo => {\n+            set_debug_location(fcx.ccx, UnknownLocation);\n+            return;\n+        }\n+        FunctionDebugContext(~ref function_debug_context) => {\n+            let cx = fcx.ccx;\n \n-    debug!(\"set_source_location: {}\", cx.sess().codemap().span_to_str(span));\n+            debug!(\"set_source_location: {}\", cx.sess().codemap().span_to_str(span));\n \n-    if fcx.debug_context.get_ref(cx, span).source_locations_enabled.get() {\n-        let loc = span_start(cx, span);\n-        let scope = scope_metadata(fcx, node_id, span);\n+            if function_debug_context.source_locations_enabled.get() {\n+                let loc = span_start(cx, span);\n+                let scope = scope_metadata(fcx, node_id, span);\n \n-        set_debug_location(cx, DebugLocation::new(scope, loc.line, loc.col.to_uint()));\n-    } else {\n-        set_debug_location(cx, UnknownLocation);\n+                set_debug_location(cx, DebugLocation::new(scope, loc.line, loc.col.to_uint()));\n+            } else {\n+                set_debug_location(cx, UnknownLocation);\n+            }\n+        }\n     }\n }\n \n@@ -590,6 +595,10 @@ pub fn create_function_debug_context(cx: &CrateContext,\n         return DebugInfoDisabled;\n     }\n \n+    // Clear the debug location so we don't assign them in the function prelude. Do this here\n+    // already, in case we do an early exit from this function.\n+    set_debug_location(cx, UnknownLocation);\n+\n     if fn_ast_id == -1 {\n         return FunctionWithoutDebugInfo;\n     }\n@@ -740,9 +749,6 @@ pub fn create_function_debug_context(cx: &CrateContext,\n                        fn_metadata,\n                        &mut *fn_debug_context.scope_map.borrow_mut());\n \n-    // Clear the debug location so we don't assign them in the function prelude\n-    set_debug_location(cx, UnknownLocation);\n-\n     return FunctionDebugContext(fn_debug_context);\n \n     fn get_function_signature(cx: &CrateContext,"}]}