{"sha": "6af17e69ff5a69892aff4d82b293de2ec7f5050a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhZjE3ZTY5ZmY1YTY5ODkyYWZmNGQ4MmIyOTNkZTJlYzdmNTA1MGE=", "commit": {"author": {"name": "Sean McArthur", "email": "sean.monstar@gmail.com", "date": "2016-05-26T18:23:42Z"}, "committer": {"name": "Sean McArthur", "email": "sean.monstar@gmail.com", "date": "2016-05-26T18:23:42Z"}, "message": "core: check pointer equality when comparing byte slices", "tree": {"sha": "266e389dd17e7888058865577076479b2465f514", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/266e389dd17e7888058865577076479b2465f514"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6af17e69ff5a69892aff4d82b293de2ec7f5050a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6af17e69ff5a69892aff4d82b293de2ec7f5050a", "html_url": "https://github.com/rust-lang/rust/commit/6af17e69ff5a69892aff4d82b293de2ec7f5050a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6af17e69ff5a69892aff4d82b293de2ec7f5050a/comments", "author": {"login": "seanmonstar", "id": 51479, "node_id": "MDQ6VXNlcjUxNDc5", "avatar_url": "https://avatars.githubusercontent.com/u/51479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seanmonstar", "html_url": "https://github.com/seanmonstar", "followers_url": "https://api.github.com/users/seanmonstar/followers", "following_url": "https://api.github.com/users/seanmonstar/following{/other_user}", "gists_url": "https://api.github.com/users/seanmonstar/gists{/gist_id}", "starred_url": "https://api.github.com/users/seanmonstar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seanmonstar/subscriptions", "organizations_url": "https://api.github.com/users/seanmonstar/orgs", "repos_url": "https://api.github.com/users/seanmonstar/repos", "events_url": "https://api.github.com/users/seanmonstar/events{/privacy}", "received_events_url": "https://api.github.com/users/seanmonstar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "seanmonstar", "id": 51479, "node_id": "MDQ6VXNlcjUxNDc5", "avatar_url": "https://avatars.githubusercontent.com/u/51479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seanmonstar", "html_url": "https://github.com/seanmonstar", "followers_url": "https://api.github.com/users/seanmonstar/followers", "following_url": "https://api.github.com/users/seanmonstar/following{/other_user}", "gists_url": "https://api.github.com/users/seanmonstar/gists{/gist_id}", "starred_url": "https://api.github.com/users/seanmonstar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seanmonstar/subscriptions", "organizations_url": "https://api.github.com/users/seanmonstar/orgs", "repos_url": "https://api.github.com/users/seanmonstar/repos", "events_url": "https://api.github.com/users/seanmonstar/events{/privacy}", "received_events_url": "https://api.github.com/users/seanmonstar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c795e08d6f4a532f12f3f8e1837db5e0647f8b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c795e08d6f4a532f12f3f8e1837db5e0647f8b0", "html_url": "https://github.com/rust-lang/rust/commit/3c795e08d6f4a532f12f3f8e1837db5e0647f8b0"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "299444e756a76db16cdb3ed48a5b07ae7319dc81", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6af17e69ff5a69892aff4d82b293de2ec7f5050a/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6af17e69ff5a69892aff4d82b293de2ec7f5050a/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=6af17e69ff5a69892aff4d82b293de2ec7f5050a", "patch": "@@ -1831,6 +1831,9 @@ impl<A> SlicePartialEq<A> for [A]\n         if self.len() != other.len() {\n             return false;\n         }\n+        if self.as_ptr() == other.as_ptr() {\n+            return true;\n+        }\n         unsafe {\n             let size = mem::size_of_val(self);\n             memcmp(self.as_ptr() as *const u8,"}]}