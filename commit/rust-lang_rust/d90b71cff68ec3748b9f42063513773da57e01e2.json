{"sha": "d90b71cff68ec3748b9f42063513773da57e01e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MGI3MWNmZjY4ZWMzNzQ4YjlmNDIwNjM1MTM3NzNkYTU3ZTAxZTI=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2014-07-01T14:29:16Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2014-07-01T14:29:16Z"}, "message": "std: move the hash docstring over to std::hash.", "tree": {"sha": "399201b3bd70291ad0b38a2865e1a5e6070c3cb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/399201b3bd70291ad0b38a2865e1a5e6070c3cb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d90b71cff68ec3748b9f42063513773da57e01e2", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d90b71cff68ec3748b9f42063513773da57e01e2", "html_url": "https://github.com/rust-lang/rust/commit/d90b71cff68ec3748b9f42063513773da57e01e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d90b71cff68ec3748b9f42063513773da57e01e2/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1ff089c275592044057841673256ec78d6c400c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1ff089c275592044057841673256ec78d6c400c", "html_url": "https://github.com/rust-lang/rust/commit/c1ff089c275592044057841673256ec78d6c400c"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "2cc7e70747a794403675e44d28ea6a4b0b8d829d", "filename": "src/libstd/hash.rs", "status": "modified", "additions": 52, "deletions": 1, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/d90b71cff68ec3748b9f42063513773da57e01e2/src%2Flibstd%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d90b71cff68ec3748b9f42063513773da57e01e2/src%2Flibstd%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fhash.rs?ref=d90b71cff68ec3748b9f42063513773da57e01e2", "patch": "@@ -8,7 +8,58 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Generic hashing support.\n+/*!\n+ * Generic hashing support.\n+ *\n+ * This module provides a generic way to compute the hash of a value. The\n+ * simplest way to make a type hashable is to use `#[deriving(Hash)]`:\n+ *\n+ * # Example\n+ *\n+ * ```rust\n+ * use std::hash;\n+ * use std::hash::Hash;\n+ *\n+ * #[deriving(Hash)]\n+ * struct Person {\n+ *     id: uint,\n+ *     name: String,\n+ *     phone: u64,\n+ * }\n+ *\n+ * let person1 = Person { id: 5, name: \"Janet\".to_string(), phone: 555_666_7777 };\n+ * let person2 = Person { id: 5, name: \"Bob\".to_string(), phone: 555_666_7777 };\n+ *\n+ * assert!(hash::hash(&person1) != hash::hash(&person2));\n+ * ```\n+ *\n+ * If you need more control over how a value is hashed, you need to implement\n+ * the trait `Hash`:\n+ *\n+ * ```rust\n+ * use std::hash;\n+ * use std::hash::Hash;\n+ * use std::hash::sip::SipState;\n+ *\n+ * struct Person {\n+ *     id: uint,\n+ *     name: String,\n+ *     phone: u64,\n+ * }\n+ *\n+ * impl Hash for Person {\n+ *     fn hash(&self, state: &mut SipState) {\n+ *         self.id.hash(state);\n+ *         self.phone.hash(state);\n+ *     }\n+ * }\n+ *\n+ * let person1 = Person { id: 5, name: \"Janet\".to_string(), phone: 555_666_7777 };\n+ * let person2 = Person { id: 5, name: \"Bob\".to_string(), phone: 555_666_7777 };\n+ *\n+ * assert!(hash::hash(&person1) == hash::hash(&person2));\n+ * ```\n+ */\n \n pub use core_collections::hash::{Hash, Hasher, Writer, hash, sip};\n "}]}