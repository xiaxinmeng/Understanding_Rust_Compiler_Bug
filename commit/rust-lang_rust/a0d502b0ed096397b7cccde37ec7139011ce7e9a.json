{"sha": "a0d502b0ed096397b7cccde37ec7139011ce7e9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwZDUwMmIwZWQwOTYzOTdiN2NjY2RlMzdlYzcxMzkwMTFjZTdlOWE=", "commit": {"author": {"name": "Jonas Hietala", "email": "tradet.h@gmail.com", "date": "2014-09-17T13:12:58Z"}, "committer": {"name": "Jonas Hietala", "email": "tradet.h@gmail.com", "date": "2014-09-17T13:12:58Z"}, "message": "doc: Remove \"see above\".", "tree": {"sha": "3f62743759b80f286aeec3281db08aa6e3a39068", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f62743759b80f286aeec3281db08aa6e3a39068"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0d502b0ed096397b7cccde37ec7139011ce7e9a", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0d502b0ed096397b7cccde37ec7139011ce7e9a", "html_url": "https://github.com/rust-lang/rust/commit/a0d502b0ed096397b7cccde37ec7139011ce7e9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0d502b0ed096397b7cccde37ec7139011ce7e9a/comments", "author": {"login": "treeman", "id": 162027, "node_id": "MDQ6VXNlcjE2MjAyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treeman", "html_url": "https://github.com/treeman", "followers_url": "https://api.github.com/users/treeman/followers", "following_url": "https://api.github.com/users/treeman/following{/other_user}", "gists_url": "https://api.github.com/users/treeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/treeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treeman/subscriptions", "organizations_url": "https://api.github.com/users/treeman/orgs", "repos_url": "https://api.github.com/users/treeman/repos", "events_url": "https://api.github.com/users/treeman/events{/privacy}", "received_events_url": "https://api.github.com/users/treeman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "treeman", "id": 162027, "node_id": "MDQ6VXNlcjE2MjAyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treeman", "html_url": "https://github.com/treeman", "followers_url": "https://api.github.com/users/treeman/followers", "following_url": "https://api.github.com/users/treeman/following{/other_user}", "gists_url": "https://api.github.com/users/treeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/treeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treeman/subscriptions", "organizations_url": "https://api.github.com/users/treeman/orgs", "repos_url": "https://api.github.com/users/treeman/repos", "events_url": "https://api.github.com/users/treeman/events{/privacy}", "received_events_url": "https://api.github.com/users/treeman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f38f0b2e1af79766d13a18b506158ac32b16ce04", "url": "https://api.github.com/repos/rust-lang/rust/commits/f38f0b2e1af79766d13a18b506158ac32b16ce04", "html_url": "https://github.com/rust-lang/rust/commit/f38f0b2e1af79766d13a18b506158ac32b16ce04"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "10fd515dee99c3eb63cb2eb1514138e56aec8cf8", "filename": "src/libsyntax/ext/deriving/generic/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a0d502b0ed096397b7cccde37ec7139011ce7e9a/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d502b0ed096397b7cccde37ec7139011ce7e9a/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs?ref=a0d502b0ed096397b7cccde37ec7139011ce7e9a", "patch": "@@ -276,14 +276,13 @@ pub struct FieldInfo {\n \n /// Fields for a static method\n pub enum StaticFields {\n-    /// Tuple structs/enum variants like this\n+    /// Tuple structs/enum variants like this.\n     Unnamed(Vec<Span>),\n     /// Normal structs/struct variants.\n     Named(Vec<(Ident, Span)>),\n }\n \n-/// A summary of the possible sets of fields. See above for details\n-/// and examples\n+/// A summary of the possible sets of fields.\n pub enum SubstructureFields<'a> {\n     Struct(Vec<FieldInfo>),\n     /// Matching variants of the enum: variant index, ast::Variant,\n@@ -308,7 +307,7 @@ pub enum SubstructureFields<'a> {\n \n \n /// Combine the values of all the fields together. The last argument is\n-/// all the fields of all the structures, see above for details.\n+/// all the fields of all the structures.\n pub type CombineSubstructureFunc<'a> =\n     |&mut ExtCtxt, Span, &Substructure|: 'a -> P<Expr>;\n "}]}