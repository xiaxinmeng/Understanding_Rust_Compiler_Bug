{"sha": "a50c82bc3bde5988a8f32ef2b593f0b051545e8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1MGM4MmJjM2JkZTU5ODhhOGYzMmVmMmI1OTNmMGIwNTE1NDVlOGE=", "commit": {"author": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2016-05-18T18:09:25Z"}, "committer": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2016-05-18T18:09:25Z"}, "message": "Simplify report_elision_failure a little bit.", "tree": {"sha": "7cb217fb50f278da5dcdfeb95474bfeedd92ab68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7cb217fb50f278da5dcdfeb95474bfeedd92ab68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a50c82bc3bde5988a8f32ef2b593f0b051545e8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a50c82bc3bde5988a8f32ef2b593f0b051545e8a", "html_url": "https://github.com/rust-lang/rust/commit/a50c82bc3bde5988a8f32ef2b593f0b051545e8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a50c82bc3bde5988a8f32ef2b593f0b051545e8a/comments", "author": null, "committer": null, "parents": [{"sha": "7fef1628735622ad005245ea2294449720ba7c5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fef1628735622ad005245ea2294449720ba7c5c", "html_url": "https://github.com/rust-lang/rust/commit/7fef1628735622ad005245ea2294449720ba7c5c"}], "stats": {"total": 8, "additions": 1, "deletions": 7}, "files": [{"sha": "8fc6b552e146261bee9ffd03021fa7a970d9bf19", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a50c82bc3bde5988a8f32ef2b593f0b051545e8a/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a50c82bc3bde5988a8f32ef2b593f0b051545e8a/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=a50c82bc3bde5988a8f32ef2b593f0b051545e8a", "patch": "@@ -222,12 +222,6 @@ fn report_elision_failure(\n \n     let elided_len = elided_params.len();\n \n-    let any_lifetimes = if elided_len > 0 {\n-        true\n-    } else {\n-        false\n-    };\n-\n     for (i, info) in elided_params.into_iter().enumerate() {\n         let ElisionFailureInfo {\n             name, lifetime_count: n, have_bound_regions\n@@ -262,7 +256,7 @@ fn report_elision_failure(\n                     there is no value for it to be borrowed from\");\n         help!(db,\n                    \"consider giving it a 'static lifetime\");\n-    } else if !any_lifetimes {\n+    } else if elided_len == 0 {\n         help!(db,\n                    \"this function's return type contains a borrowed value with \\\n                     an elided lifetime, but the lifetime cannot be derived from \\"}]}