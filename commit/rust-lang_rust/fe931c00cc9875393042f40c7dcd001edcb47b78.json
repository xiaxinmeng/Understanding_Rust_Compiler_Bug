{"sha": "fe931c00cc9875393042f40c7dcd001edcb47b78", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlOTMxYzAwY2M5ODc1MzkzMDQyZjQwYzdkY2QwMDFlZGNiNDdiNzg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-18T10:46:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-18T10:46:41Z"}, "message": "auto merge of #15000 : alexcrichton/rust/fix-rustdoc-tests, r=huonw\n\nCommits have the descriptions.", "tree": {"sha": "705491d9abe089a14b508ff21eb5ddb66cff7aae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/705491d9abe089a14b508ff21eb5ddb66cff7aae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe931c00cc9875393042f40c7dcd001edcb47b78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe931c00cc9875393042f40c7dcd001edcb47b78", "html_url": "https://github.com/rust-lang/rust/commit/fe931c00cc9875393042f40c7dcd001edcb47b78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe931c00cc9875393042f40c7dcd001edcb47b78/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af622a491a18c27764199608f927a408af2f317c", "url": "https://api.github.com/repos/rust-lang/rust/commits/af622a491a18c27764199608f927a408af2f317c", "html_url": "https://github.com/rust-lang/rust/commit/af622a491a18c27764199608f927a408af2f317c"}, {"sha": "e710653a3b2f0c9f7555c0a4fc01d083c7a4ce91", "url": "https://api.github.com/repos/rust-lang/rust/commits/e710653a3b2f0c9f7555c0a4fc01d083c7a4ce91", "html_url": "https://github.com/rust-lang/rust/commit/e710653a3b2f0c9f7555c0a4fc01d083c7a4ce91"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "fa7a8df5035f4b45be500a28450243e0e0d832e9", "filename": "src/liballoc/owned.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fe931c00cc9875393042f40c7dcd001edcb47b78/src%2Fliballoc%2Fowned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe931c00cc9875393042f40c7dcd001edcb47b78/src%2Fliballoc%2Fowned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fowned.rs?ref=fe931c00cc9875393042f40c7dcd001edcb47b78", "patch": "@@ -25,8 +25,12 @@ use core::result::{Ok, Err, Result};\n ///\n /// The following two examples are equivalent:\n ///\n-///     let foo = box(HEAP) Bar::new(...);\n-///     let foo = box Bar::new(...);\n+///     use std::owned::HEAP;\n+///\n+///     # struct Bar;\n+///     # impl Bar { fn new(_a: int) { } }\n+///     let foo = box(HEAP) Bar::new(2);\n+///     let foo = box Bar::new(2);\n #[lang=\"exchange_heap\"]\n pub static HEAP: () = ();\n "}, {"sha": "c64bd6201faf356fcb15b043bab6c0d3d00d5df7", "filename": "src/libcore/failure.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fe931c00cc9875393042f40c7dcd001edcb47b78/src%2Flibcore%2Ffailure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe931c00cc9875393042f40c7dcd001edcb47b78/src%2Flibcore%2Ffailure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffailure.rs?ref=fe931c00cc9875393042f40c7dcd001edcb47b78", "patch": "@@ -15,7 +15,9 @@\n //! useful an upstream crate must define failure for libcore to use. The current\n //! interface for failure is:\n //!\n-//!     fn begin_unwind(fmt: &fmt::Arguments, file: &str, line: uint) -> !;\n+//! ```ignore\n+//! fn begin_unwind(fmt: &fmt::Arguments, file: &str, line: uint) -> !;\n+//! ```\n //!\n //! This definition allows for failing with any general message, but it does not\n //! allow for failing with a `~Any` value. The reason for this is that libcore"}, {"sha": "02890cb6d78410629a3831eba3da14c34625a9a8", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe931c00cc9875393042f40c7dcd001edcb47b78/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe931c00cc9875393042f40c7dcd001edcb47b78/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=fe931c00cc9875393042f40c7dcd001edcb47b78", "patch": "@@ -86,8 +86,8 @@ pub fn run(input: &str,\n     let mut v = RustdocVisitor::new(&*ctx, None);\n     v.visit(&ctx.krate);\n     let krate = v.clean();\n-    let (krate, _) = passes::unindent_comments(krate);\n     let (krate, _) = passes::collapse_docs(krate);\n+    let (krate, _) = passes::unindent_comments(krate);\n \n     let mut collector = Collector::new(krate.name.to_string(),\n                                        libs,\n@@ -209,7 +209,9 @@ pub fn maketest(s: &str, cratename: Option<&str>, lints: bool) -> String {\n \");\n     }\n \n-    if !s.contains(\"extern crate\") {\n+    // Don't inject `extern crate std` because it's already injected by the\n+    // compiler.\n+    if !s.contains(\"extern crate\") && cratename != Some(\"std\") {\n         match cratename {\n             Some(cratename) => {\n                 if s.contains(cratename) {"}, {"sha": "7236b52783106f393f6b6bbb749f924633c155e4", "filename": "src/libstd/fmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe931c00cc9875393042f40c7dcd001edcb47b78/src%2Flibstd%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe931c00cc9875393042f40c7dcd001edcb47b78/src%2Flibstd%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffmt.rs?ref=fe931c00cc9875393042f40c7dcd001edcb47b78", "patch": "@@ -420,7 +420,7 @@ use str;\n use string;\n use slice::Vector;\n \n-pub use core::fmt::{Formatter, Result, FormatWriter, Show, rt};\n+pub use core::fmt::{Formatter, Result, FormatWriter, rt};\n pub use core::fmt::{Show, Bool, Char, Signed, Unsigned, Octal, Binary};\n pub use core::fmt::{LowerHex, UpperHex, String, Pointer};\n pub use core::fmt::{Float, LowerExp, UpperExp};"}, {"sha": "f0184dc8164172077537c7d621f4eb5436ba521a", "filename": "src/libsync/deque.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe931c00cc9875393042f40c7dcd001edcb47b78/src%2Flibsync%2Fdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe931c00cc9875393042f40c7dcd001edcb47b78/src%2Flibsync%2Fdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsync%2Fdeque.rs?ref=fe931c00cc9875393042f40c7dcd001edcb47b78", "patch": "@@ -24,7 +24,7 @@\n //!\n //! # Example\n //!\n-//!     use std::rt::deque::BufferPool;\n+//!     use std::sync::deque::BufferPool;\n //!\n //!     let mut pool = BufferPool::new();\n //!     let (mut worker, mut stealer) = pool.deque();"}]}