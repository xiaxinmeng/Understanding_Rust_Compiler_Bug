{"sha": "75985ab75ed216cd8c873c9ef08cd88708f8354f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1OTg1YWI3NWVkMjE2Y2Q4Yzg3M2M5ZWYwOGNkODg3MDhmODM1NGY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-27T19:33:22Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-28T19:23:00Z"}, "message": "Remove color-related code from rust_log\n\nThis is all dead. If someone decides they want color it will be easy to redo.", "tree": {"sha": "b5702491c282373990bb13751d33d867dd5aabce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5702491c282373990bb13751d33d867dd5aabce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75985ab75ed216cd8c873c9ef08cd88708f8354f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75985ab75ed216cd8c873c9ef08cd88708f8354f", "html_url": "https://github.com/rust-lang/rust/commit/75985ab75ed216cd8c873c9ef08cd88708f8354f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75985ab75ed216cd8c873c9ef08cd88708f8354f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86f337484eeabb5e74060d3549974b3bd85e7f3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/86f337484eeabb5e74060d3549974b3bd85e7f3b", "html_url": "https://github.com/rust-lang/rust/commit/86f337484eeabb5e74060d3549974b3bd85e7f3b"}], "stats": {"total": 50, "additions": 2, "deletions": 48}, "files": [{"sha": "c23a38bc1da2aff95444ea7bfbd16600531ebb97", "filename": "src/rt/rust_log.cpp", "status": "modified", "additions": 2, "deletions": 31, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/75985ab75ed216cd8c873c9ef08cd88708f8354f/src%2Frt%2Frust_log.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/75985ab75ed216cd8c873c9ef08cd88708f8354f/src%2Frt%2Frust_log.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_log.cpp?ref=75985ab75ed216cd8c873c9ef08cd88708f8354f", "patch": "@@ -1,6 +1,5 @@\n /*\n- * Logging infrastructure that aims to support multi-threading,\n- * and ansi colors.\n+ * Logging infrastructure that aims to support multi-threading\n  */\n \n #include \"rust_internal.h\"\n@@ -9,13 +8,6 @@\n #include <stdlib.h>\n #include <string.h>\n \n-static const char * _foreground_colors[] = { \"[37m\",\n-                                             \"[31m\", \"[1;31m\",\n-                                             \"[32m\", \"[1;32m\",\n-                                             \"[33m\", \"[1;33m\",\n-                                             \"[31m\", \"[1;31m\",\n-                                             \"[35m\", \"[1;35m\",\n-                                             \"[36m\", \"[1;36m\" };\n \n /**\n  * Synchronizes access to the underlying logging mechanism.\n@@ -25,8 +17,7 @@ static uint32_t _last_thread_id;\n \n rust_log::rust_log(rust_srv *srv, rust_scheduler *sched) :\n     _srv(srv),\n-    _sched(sched),\n-    _use_colors(getenv(\"RUST_COLOR_LOG\")) {\n+    _sched(sched) {\n }\n \n rust_log::~rust_log() {\n@@ -45,11 +36,6 @@ hash(uintptr_t ptr) {\n     return (uint16_t) ptr;\n }\n \n-const char *\n-get_color(uintptr_t ptr) {\n-    return _foreground_colors[hash(ptr) % rust_log::LIGHTTEAL];\n-}\n-\n char *\n copy_string(char *dst, const char *src, size_t length) {\n     return strncpy(dst, src, length) + length;\n@@ -67,21 +53,6 @@ append_string(char *buffer, const char *format, ...) {\n     return buffer;\n }\n \n-char *\n-append_string(char *buffer, rust_log::ansi_color color,\n-              const char *format, ...) {\n-    if (buffer != NULL && format) {\n-        append_string(buffer, \"\\x1b%s\", _foreground_colors[color]);\n-        va_list args;\n-        va_start(args, format);\n-        size_t off = strlen(buffer);\n-        vsnprintf(buffer + off, BUF_BYTES - off, format, args);\n-        va_end(args);\n-        append_string(buffer, \"\\x1b[0m\");\n-    }\n-    return buffer;\n-}\n-\n void\n rust_log::trace_ln(uint32_t thread_id, char *prefix, char *message) {\n     char buffer[BUF_BYTES] = \"\";"}, {"sha": "6021125705b2fd30b2768e773249adef9a6c9d69", "filename": "src/rt/rust_log.h", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/75985ab75ed216cd8c873c9ef08cd88708f8354f/src%2Frt%2Frust_log.h", "raw_url": "https://github.com/rust-lang/rust/raw/75985ab75ed216cd8c873c9ef08cd88708f8354f/src%2Frt%2Frust_log.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_log.h?ref=75985ab75ed216cd8c873c9ef08cd88708f8354f", "patch": "@@ -41,22 +41,6 @@ class rust_log {\n     rust_log(rust_srv *srv, rust_scheduler *sched);\n     virtual ~rust_log();\n \n-    enum ansi_color {\n-        WHITE,\n-        RED,\n-        LIGHTRED,\n-        GREEN,\n-        LIGHTGREEN,\n-        YELLOW,\n-        LIGHTYELLOW,\n-        BLUE,\n-        LIGHTBLUE,\n-        MAGENTA,\n-        LIGHTMAGENTA,\n-        TEAL,\n-        LIGHTTEAL\n-    };\n-\n     void trace_ln(rust_task *task, uint32_t level, char *message);\n     void trace_ln(uint32_t thread_id, char *prefix, char *message);\n     bool is_tracing(uint32_t type_bits);\n@@ -65,7 +49,6 @@ class rust_log {\n     rust_srv *_srv;\n     rust_scheduler *_sched;\n     bool _use_labels;\n-    bool _use_colors;\n     void trace_ln(rust_task *task, char *message);\n };\n "}]}