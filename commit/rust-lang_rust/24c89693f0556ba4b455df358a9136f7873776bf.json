{"sha": "24c89693f0556ba4b455df358a9136f7873776bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0Yzg5NjkzZjA1NTZiYTRiNDU1ZGYzNThhOTEzNmY3ODczNzc2YmY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-14T23:58:23Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-14T23:58:23Z"}, "message": "libcore: Remove the annihilation tests; there's no easy way to make them work.\n\nThis should hopefully put out the burning tree.", "tree": {"sha": "0770bd622d4a98ae03636baa06d29b529db8008a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0770bd622d4a98ae03636baa06d29b529db8008a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24c89693f0556ba4b455df358a9136f7873776bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24c89693f0556ba4b455df358a9136f7873776bf", "html_url": "https://github.com/rust-lang/rust/commit/24c89693f0556ba4b455df358a9136f7873776bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24c89693f0556ba4b455df358a9136f7873776bf/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce773352d06f490fb1bfb5057035e93effcf5781", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce773352d06f490fb1bfb5057035e93effcf5781", "html_url": "https://github.com/rust-lang/rust/commit/ce773352d06f490fb1bfb5057035e93effcf5781"}], "stats": {"total": 60, "additions": 6, "deletions": 54}, "files": [{"sha": "4fdd6ae815070099a493634e2a737b1da301380c", "filename": "src/libcore/cleanup.rs", "status": "modified", "additions": 6, "deletions": 54, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/24c89693f0556ba4b455df358a9136f7873776bf/src%2Flibcore%2Fcleanup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24c89693f0556ba4b455df358a9136f7873776bf/src%2Flibcore%2Fcleanup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcleanup.rs?ref=24c89693f0556ba4b455df358a9136f7873776bf", "patch": "@@ -1,7 +1,6 @@\n use libc::{c_char, c_void, intptr_t, uintptr_t};\n use ptr::{mut_null, null, to_unsafe_ptr};\n use repr::BoxRepr;\n-use rt::rt_free;\n use sys::TypeDesc;\n use unsafe::transmute;\n \n@@ -67,7 +66,12 @@ struct Task {\n  * This runs at task death to free all boxes.\n  */\n \n-unsafe fn do_annihilate() {\n+/// Destroys all managed memory (i.e. @ boxes) held by the current task.\n+#[cfg(notest)]\n+#[lang=\"annihilate\"]\n+pub unsafe fn annihilate() {\n+    use rt::rt_free;\n+\n     let task: *Task = transmute(rustrt::rust_get_task());\n \n     // Pass 1: Make all boxes immortal.\n@@ -105,61 +109,9 @@ unsafe fn do_annihilate() {\n     }\n }\n \n-/// Destroys all managed memory (i.e. @ boxes) held by the current task.\n-#[cfg(notest)]\n-#[lang=\"annihilate\"]\n-pub unsafe fn annihilate() {\n-    do_annihilate();\n-}\n-\n-#[cfg(test)]\n-pub unsafe fn annihilate() {\n-    do_annihilate();\n-}\n-\n /// Bindings to the runtime\n extern mod rustrt {\n     #[rust_stack]\n     /*priv*/ fn rust_get_task() -> *c_void;\n }\n \n-/*\n- * Tests\n- */\n-\n-#[cfg(test)]\n-mod tests {\n-    struct Knot {\n-        mut a: Option<@Knot>\n-    }\n-\n-    struct Blah {\n-        x: int,\n-        drop { io::println(\"Blah!\"); }\n-    }\n-\n-    #[test]\n-    fn test_box_annihilation() {\n-        let knot = @Knot { a: None };\n-        knot.a = Some(knot);\n-\n-        let x = @~\"foo\";\n-\n-        let blah = @Blah { x: 3 };\n-\n-        let f_ref = @mut None;\n-        let f = || { util::ignore(f_ref); };\n-        *f_ref = Some(f);\n-\n-        unsafe { annihilate(); }\n-\n-        unsafe {\n-            unsafe::forget(knot);\n-            unsafe::forget(x);\n-            unsafe::forget(blah);\n-            unsafe::forget(f_ref);\n-            unsafe::forget(f);\n-        }\n-    }\n-}\n-"}]}