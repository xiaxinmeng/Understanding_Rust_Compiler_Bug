{"sha": "b2270e1f459cbeb1b6f4281d230990a40fe993d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyMjcwZTFmNDU5Y2JlYjFiNmY0MjgxZDIzMDk5MGE0MGZlOTkzZDg=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-05-16T22:40:29Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-05-17T18:54:25Z"}, "message": "Simplify manual_unwrap_or", "tree": {"sha": "ceac3e7544ecf20435152bd11855ed2dfa5f8817", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ceac3e7544ecf20435152bd11855ed2dfa5f8817"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2270e1f459cbeb1b6f4281d230990a40fe993d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2270e1f459cbeb1b6f4281d230990a40fe993d8", "html_url": "https://github.com/rust-lang/rust/commit/b2270e1f459cbeb1b6f4281d230990a40fe993d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2270e1f459cbeb1b6f4281d230990a40fe993d8/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1aad7541db90a4d70b01a0e4c9d41f9e683f8e9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1aad7541db90a4d70b01a0e4c9d41f9e683f8e9b", "html_url": "https://github.com/rust-lang/rust/commit/1aad7541db90a4d70b01a0e4c9d41f9e683f8e9b"}], "stats": {"total": 23, "additions": 4, "deletions": 19}, "files": [{"sha": "d7e8d180f7eb4c98c8dfcd5e8c7446b4473a30e9", "filename": "clippy_lints/src/manual_unwrap_or.rs", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b2270e1f459cbeb1b6f4281d230990a40fe993d8/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2270e1f459cbeb1b6f4281d230990a40fe993d8/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs?ref=b2270e1f459cbeb1b6f4281d230990a40fe993d8", "patch": "@@ -54,21 +54,6 @@ impl LateLintPass<'_> for ManualUnwrapOr {\n     }\n }\n \n-#[derive(Copy, Clone)]\n-enum Case {\n-    Option,\n-    Result,\n-}\n-\n-impl Case {\n-    fn unwrap_fn_path(&self) -> &str {\n-        match self {\n-            Case::Option => \"Option::unwrap_or\",\n-            Case::Result => \"Result::unwrap_or\",\n-        }\n-    }\n-}\n-\n fn lint_manual_unwrap_or<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n     fn applicable_or_arm<'a>(cx: &LateContext<'_>, arms: &'a [Arm<'a>]) -> Option<&'a Arm<'a>> {\n         if_chain! {\n@@ -101,10 +86,10 @@ fn lint_manual_unwrap_or<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n     if_chain! {\n         if let ExprKind::Match(scrutinee, match_arms, _) = expr.kind;\n         let ty = cx.typeck_results().expr_ty(scrutinee);\n-        if let Some(case) = if is_type_diagnostic_item(cx, ty, sym::option_type) {\n-            Some(Case::Option)\n+        if let Some(ty_name) = if is_type_diagnostic_item(cx, ty, sym::option_type) {\n+            Some(\"Option\")\n         } else if is_type_diagnostic_item(cx, ty, sym::result_type) {\n-            Some(Case::Result)\n+            Some(\"Result\")\n         } else {\n             None\n         };\n@@ -127,7 +112,7 @@ fn lint_manual_unwrap_or<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n             span_lint_and_sugg(\n                 cx,\n                 MANUAL_UNWRAP_OR, expr.span,\n-                &format!(\"this pattern reimplements `{}`\", case.unwrap_fn_path()),\n+                &format!(\"this pattern reimplements `{}::unwrap_or`\", ty_name),\n                 \"replace with\",\n                 format!(\n                     \"{}.unwrap_or({})\","}]}