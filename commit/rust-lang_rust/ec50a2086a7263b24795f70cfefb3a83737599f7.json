{"sha": "ec50a2086a7263b24795f70cfefb3a83737599f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjNTBhMjA4NmE3MjYzYjI0Nzk1ZjcwY2ZlZmIzYTgzNzM3NTk5Zjc=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-17T19:37:09Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-17T19:37:09Z"}, "message": "avoid converting types into themselves (clippy::useless_conversion)", "tree": {"sha": "05fbbae802d337bd6d97dee1f3224ee07fc8729b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05fbbae802d337bd6d97dee1f3224ee07fc8729b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec50a2086a7263b24795f70cfefb3a83737599f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec50a2086a7263b24795f70cfefb3a83737599f7", "html_url": "https://github.com/rust-lang/rust/commit/ec50a2086a7263b24795f70cfefb3a83737599f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec50a2086a7263b24795f70cfefb3a83737599f7/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee88f46bb5e27c4d9f30326e69ff2298dcbeecb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee88f46bb5e27c4d9f30326e69ff2298dcbeecb1", "html_url": "https://github.com/rust-lang/rust/commit/ee88f46bb5e27c4d9f30326e69ff2298dcbeecb1"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "20398d3321db00436ede4343b581551e25408f9d", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec50a2086a7263b24795f70cfefb3a83737599f7/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec50a2086a7263b24795f70cfefb3a83737599f7/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=ec50a2086a7263b24795f70cfefb3a83737599f7", "patch": "@@ -513,7 +513,7 @@ impl<'a> Parser<'a> {\n             token::Ident(..) if this.is_mistaken_not_ident_negation() => {\n                 make_it!(this, attrs, |this, _| this.recover_not_expr(lo))\n             }\n-            _ => return this.parse_dot_or_call_expr(Some(attrs.into())),\n+            _ => return this.parse_dot_or_call_expr(Some(attrs)),\n         }\n     }\n "}, {"sha": "9a236925eff4302856be1796d76ab210b66c6711", "filename": "compiler/rustc_parse/src/parser/stmt.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ec50a2086a7263b24795f70cfefb3a83737599f7/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec50a2086a7263b24795f70cfefb3a83737599f7/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs?ref=ec50a2086a7263b24795f70cfefb3a83737599f7", "patch": "@@ -97,7 +97,7 @@ impl<'a> Parser<'a> {\n             self.mk_stmt(lo, StmtKind::Empty)\n         } else if self.token != token::CloseDelim(token::Brace) {\n             // Remainder are line-expr stmts.\n-            let e = self.parse_expr_res(Restrictions::STMT_EXPR, Some(attrs.into()))?;\n+            let e = self.parse_expr_res(Restrictions::STMT_EXPR, Some(attrs))?;\n             self.mk_stmt(lo.to(e.span), StmtKind::Expr(e))\n         } else {\n             self.error_outer_attrs(&attrs.take_for_recovery());\n@@ -131,7 +131,7 @@ impl<'a> Parser<'a> {\n             };\n \n             let expr = this.with_res(Restrictions::STMT_EXPR, |this| {\n-                let expr = this.parse_dot_or_call_expr_with(expr, lo, attrs.into())?;\n+                let expr = this.parse_dot_or_call_expr_with(expr, lo, attrs)?;\n                 this.parse_assoc_expr_with(0, LhsExpr::AlreadyParsed(expr))\n             })?;\n             Ok((\n@@ -213,7 +213,7 @@ impl<'a> Parser<'a> {\n     }\n \n     fn recover_local_after_let(&mut self, lo: Span, attrs: AttrVec) -> PResult<'a, Stmt> {\n-        let local = self.parse_local(attrs.into())?;\n+        let local = self.parse_local(attrs)?;\n         Ok(self.mk_stmt(lo.to(self.prev_token.span), StmtKind::Local(local)))\n     }\n "}, {"sha": "a132cda6fefe999e19c8141e2c80d12c68bf63bb", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ec50a2086a7263b24795f70cfefb3a83737599f7/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec50a2086a7263b24795f70cfefb3a83737599f7/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=ec50a2086a7263b24795f70cfefb3a83737599f7", "patch": "@@ -1473,7 +1473,6 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                     }),\n                     assoc_name,\n                 )\n-                .into_iter()\n             },\n             || param_name.to_string(),\n             assoc_name,"}, {"sha": "b427420d577959f9e80cec4e5dc3d119c8df24c3", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec50a2086a7263b24795f70cfefb3a83737599f7/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec50a2086a7263b24795f70cfefb3a83737599f7/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=ec50a2086a7263b24795f70cfefb3a83737599f7", "patch": "@@ -53,7 +53,7 @@ fn install_sh(\n }\n \n fn default_path(config: &Option<PathBuf>, default: &str) -> PathBuf {\n-    PathBuf::from(config.as_ref().cloned().unwrap_or_else(|| PathBuf::from(default)))\n+    config.as_ref().cloned().unwrap_or_else(|| PathBuf::from(default))\n }\n \n fn prepare_dir(mut path: PathBuf) -> String {"}, {"sha": "e20c84ba053f6efac8fdd74b2905d3cd4d96c85e", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec50a2086a7263b24795f70cfefb3a83737599f7/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec50a2086a7263b24795f70cfefb3a83737599f7/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=ec50a2086a7263b24795f70cfefb3a83737599f7", "patch": "@@ -161,7 +161,7 @@ impl<'tcx> DocContext<'tcx> {\n             }\n             Entry::Occupied(e) => e.into_mut(),\n         };\n-        *def_index = DefIndex::from(*def_index + 1);\n+        *def_index = *def_index + 1;\n \n         DefId { krate: crate_num, index: *def_index }\n     }"}, {"sha": "b248fcdefbe7f337c9ee8bf78f84e54e31a55565", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec50a2086a7263b24795f70cfefb3a83737599f7/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec50a2086a7263b24795f70cfefb3a83737599f7/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=ec50a2086a7263b24795f70cfefb3a83737599f7", "patch": "@@ -182,7 +182,7 @@ fn from_clean_item_kind(item: clean::ItemKind, tcx: TyCtxt<'_>) -> ItemEnum {\n             bounds: g.into_iter().map(Into::into).collect(),\n             default: t.map(Into::into),\n         },\n-        StrippedItem(inner) => from_clean_item_kind(*inner, tcx).into(),\n+        StrippedItem(inner) => from_clean_item_kind(*inner, tcx),\n         PrimitiveItem(_) | KeywordItem(_) => {\n             panic!(\"{:?} is not supported for JSON output\", item)\n         }"}]}