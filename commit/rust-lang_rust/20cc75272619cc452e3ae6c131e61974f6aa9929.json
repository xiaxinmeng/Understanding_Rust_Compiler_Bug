{"sha": "20cc75272619cc452e3ae6c131e61974f6aa9929", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwY2M3NTI3MjYxOWNjNDUyZTNhZTZjMTMxZTYxOTc0ZjZhYTk5Mjk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-10-09T16:31:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-10-09T16:31:49Z"}, "message": "Auto merge of #65228 - Wind-River:real_master, r=dtolnay\n\nvxworks: add checking (r == 0)", "tree": {"sha": "69a00ba7a499ed34f5f591110f4956d9d9491111", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69a00ba7a499ed34f5f591110f4956d9d9491111"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20cc75272619cc452e3ae6c131e61974f6aa9929", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20cc75272619cc452e3ae6c131e61974f6aa9929", "html_url": "https://github.com/rust-lang/rust/commit/20cc75272619cc452e3ae6c131e61974f6aa9929", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20cc75272619cc452e3ae6c131e61974f6aa9929/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "321ccbe1dbc655faeb20bf78c5463ebb12640d78", "url": "https://api.github.com/repos/rust-lang/rust/commits/321ccbe1dbc655faeb20bf78c5463ebb12640d78", "html_url": "https://github.com/rust-lang/rust/commit/321ccbe1dbc655faeb20bf78c5463ebb12640d78"}, {"sha": "175db95b3d98b1874b9d49a5e79a0755aed3e8fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/175db95b3d98b1874b9d49a5e79a0755aed3e8fa", "html_url": "https://github.com/rust-lang/rust/commit/175db95b3d98b1874b9d49a5e79a0755aed3e8fa"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "19b123f2b6131aab14c9ee14b2f0a7ec780d2c72", "filename": "src/libstd/sys/vxworks/rwlock.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20cc75272619cc452e3ae6c131e61974f6aa9929/src%2Flibstd%2Fsys%2Fvxworks%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20cc75272619cc452e3ae6c131e61974f6aa9929/src%2Flibstd%2Fsys%2Fvxworks%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Frwlock.rs?ref=20cc75272619cc452e3ae6c131e61974f6aa9929", "patch": "@@ -25,7 +25,7 @@ impl RWLock {\n         let r = libc::pthread_rwlock_rdlock(self.inner.get());\n         if r == libc::EAGAIN {\n             panic!(\"rwlock maximum reader count exceeded\");\n-        } else if r == libc::EDEADLK || *self.write_locked.get() {\n+        } else if r == libc::EDEADLK || (r == 0 && *self.write_locked.get()) {\n             if r == 0 {\n                 self.raw_unlock();\n             }"}]}