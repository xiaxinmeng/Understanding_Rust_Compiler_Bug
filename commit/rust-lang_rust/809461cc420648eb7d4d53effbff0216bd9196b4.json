{"sha": "809461cc420648eb7d4d53effbff0216bd9196b4", "node_id": "C_kwDOAAsO6NoAKDgwOTQ2MWNjNDIwNjQ4ZWI3ZDRkNTNlZmZiZmYwMjE2YmQ5MTk2YjQ", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-01-01T21:20:03Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-01-01T21:20:03Z"}, "message": "fix: Enable completions for `<_>::$0`", "tree": {"sha": "099d8823c990efab2fe389d52c2b43186a2a1ea6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/099d8823c990efab2fe389d52c2b43186a2a1ea6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/809461cc420648eb7d4d53effbff0216bd9196b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/809461cc420648eb7d4d53effbff0216bd9196b4", "html_url": "https://github.com/rust-lang/rust/commit/809461cc420648eb7d4d53effbff0216bd9196b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/809461cc420648eb7d4d53effbff0216bd9196b4/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55f3297e7820f7f4bdbbd30dc62c589e5f93225b", "url": "https://api.github.com/repos/rust-lang/rust/commits/55f3297e7820f7f4bdbbd30dc62c589e5f93225b", "html_url": "https://github.com/rust-lang/rust/commit/55f3297e7820f7f4bdbbd30dc62c589e5f93225b"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "2a89bd29faddeffeed07eca1ff785edca2c7e37c", "filename": "crates/ide_completion/src/completions/qualified_path.rs", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/809461cc420648eb7d4d53effbff0216bd9196b4/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809461cc420648eb7d4d53effbff0216bd9196b4/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs?ref=809461cc420648eb7d4d53effbff0216bd9196b4", "patch": "@@ -2,7 +2,7 @@\n \n use std::iter;\n \n-use hir::ScopeDef;\n+use hir::{ScopeDef, Trait};\n use rustc_hash::FxHashSet;\n use syntax::{ast, AstNode};\n \n@@ -27,6 +27,25 @@ pub(crate) fn complete_qualified_path(acc: &mut Completions, ctx: &CompletionCon\n         _ => return,\n     };\n \n+    // special case `<_>::$0` as this doesn't resolve to anything.\n+    if path.qualifier().is_none() {\n+        if matches!(\n+            path.segment().and_then(|it| it.kind()),\n+            Some(ast::PathSegmentKind::Type {\n+                type_ref: Some(ast::Type::InferType(_)),\n+                trait_ref: None,\n+            })\n+        ) {\n+            cov_mark::hit!(completion_type_anchor_empty);\n+            ctx.scope\n+                .visible_traits()\n+                .into_iter()\n+                .flat_map(|it| Trait::from(it).items(ctx.sema.db))\n+                .for_each(|item| add_assoc_item(acc, ctx, item));\n+            return;\n+        }\n+    }\n+\n     let resolution = match ctx.sema.resolve_path(path) {\n         Some(res) => res,\n         None => return,\n@@ -707,4 +726,28 @@ pub mod m {}\n             expect![[r#\"\"#]],\n         )\n     }\n+\n+    #[test]\n+    fn type_anchor_empty() {\n+        cov_mark::check!(completion_type_anchor_empty);\n+        check(\n+            r#\"\n+trait Foo {\n+    fn foo() -> Self;\n+}\n+struct Bar;\n+impl Foo for Bar {\n+    fn foo() -> {\n+        Bar\n+    }\n+}\n+fn bar() -> Bar {\n+    <_>::$0\n+}\n+\"#,\n+            expect![[r#\"\n+                fn foo() (as Foo) fn() -> Self\n+            \"#]],\n+        )\n+    }\n }"}]}