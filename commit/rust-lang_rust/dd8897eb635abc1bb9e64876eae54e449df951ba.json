{"sha": "dd8897eb635abc1bb9e64876eae54e449df951ba", "node_id": "C_kwDOAAsO6NoAKGRkODg5N2ViNjM1YWJjMWJiOWU2NDg3NmVhZTU0ZTQ0OWRmOTUxYmE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-18T21:41:08Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-18T21:41:29Z"}, "message": "Don't ICE in closure arg borrow suggestion", "tree": {"sha": "4bff89394ddd5003d6aba94b7390b9d043edc440", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bff89394ddd5003d6aba94b7390b9d043edc440"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd8897eb635abc1bb9e64876eae54e449df951ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd8897eb635abc1bb9e64876eae54e449df951ba", "html_url": "https://github.com/rust-lang/rust/commit/dd8897eb635abc1bb9e64876eae54e449df951ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd8897eb635abc1bb9e64876eae54e449df951ba/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65c53c3bb6190319e210c94164b05a17997073f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/65c53c3bb6190319e210c94164b05a17997073f2", "html_url": "https://github.com/rust-lang/rust/commit/65c53c3bb6190319e210c94164b05a17997073f2"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "6cab2db3e80e7535caaf4bcd33f4fcc1a9ab6214", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dd8897eb635abc1bb9e64876eae54e449df951ba/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd8897eb635abc1bb9e64876eae54e449df951ba/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=dd8897eb635abc1bb9e64876eae54e449df951ba", "patch": "@@ -1789,7 +1789,7 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n         self.note_conflicting_closure_bounds(cause, &mut err);\n \n         if let Some(found_node) = found_node {\n-            hint_missing_borrow(span, found_span, found, expected, found_node, &mut err);\n+            hint_missing_borrow(span, found, expected, found_node, &mut err);\n         }\n \n         err\n@@ -3455,7 +3455,6 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n /// Add a hint to add a missing borrow or remove an unnecessary one.\n fn hint_missing_borrow<'tcx>(\n     span: Span,\n-    found_span: Span,\n     found: Ty<'tcx>,\n     expected: Ty<'tcx>,\n     found_node: Node<'_>,\n@@ -3474,9 +3473,8 @@ fn hint_missing_borrow<'tcx>(\n         }\n     };\n \n-    let fn_decl = found_node\n-        .fn_decl()\n-        .unwrap_or_else(|| span_bug!(found_span, \"found node must be a function\"));\n+    // This could be a variant constructor, for example.\n+    let Some(fn_decl) = found_node.fn_decl() else { return; };\n \n     let arg_spans = fn_decl.inputs.iter().map(|ty| ty.span);\n "}, {"sha": "8de5bae92fc2ceb826871cd0acb020e5106c08b5", "filename": "src/test/ui/suggestions/enum-variant-arg-mismatch.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd8897eb635abc1bb9e64876eae54e449df951ba/src%2Ftest%2Fui%2Fsuggestions%2Fenum-variant-arg-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd8897eb635abc1bb9e64876eae54e449df951ba/src%2Ftest%2Fui%2Fsuggestions%2Fenum-variant-arg-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fenum-variant-arg-mismatch.rs?ref=dd8897eb635abc1bb9e64876eae54e449df951ba", "patch": "@@ -0,0 +1,10 @@\n+pub enum Sexpr<'a> {\n+    Ident(&'a str),\n+}\n+\n+fn map<'a, F: Fn(String) -> Sexpr<'a>>(f: F) {}\n+\n+fn main() {\n+    map(Sexpr::Ident);\n+    //~^ ERROR type mismatch in function arguments\n+}"}, {"sha": "f76019b700011273ab07542b4b7f4523d5b870d2", "filename": "src/test/ui/suggestions/enum-variant-arg-mismatch.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/dd8897eb635abc1bb9e64876eae54e449df951ba/src%2Ftest%2Fui%2Fsuggestions%2Fenum-variant-arg-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dd8897eb635abc1bb9e64876eae54e449df951ba/src%2Ftest%2Fui%2Fsuggestions%2Fenum-variant-arg-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fenum-variant-arg-mismatch.stderr?ref=dd8897eb635abc1bb9e64876eae54e449df951ba", "patch": "@@ -0,0 +1,22 @@\n+error[E0631]: type mismatch in function arguments\n+  --> $DIR/enum-variant-arg-mismatch.rs:8:9\n+   |\n+LL |     Ident(&'a str),\n+   |     ----- found signature defined here\n+...\n+LL |     map(Sexpr::Ident);\n+   |     --- ^^^^^^^^^^^^ expected due to this\n+   |     |\n+   |     required by a bound introduced by this call\n+   |\n+   = note: expected function signature `fn(String) -> _`\n+              found function signature `fn(&str) -> _`\n+note: required by a bound in `map`\n+  --> $DIR/enum-variant-arg-mismatch.rs:5:15\n+   |\n+LL | fn map<'a, F: Fn(String) -> Sexpr<'a>>(f: F) {}\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `map`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0631`."}]}