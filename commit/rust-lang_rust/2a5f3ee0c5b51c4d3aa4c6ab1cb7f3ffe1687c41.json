{"sha": "2a5f3ee0c5b51c4d3aa4c6ab1cb7f3ffe1687c41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhNWYzZWUwYzViNTFjNGQzYWE0YzZhYjFjYjdmM2ZmZTE2ODdjNDE=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-03-22T23:58:36Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-03-22T23:58:36Z"}, "message": "Make --emit=metadata output metadata regardless of link", "tree": {"sha": "48a388fac853cd0da14c303f06165b5bea731b5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48a388fac853cd0da14c303f06165b5bea731b5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a5f3ee0c5b51c4d3aa4c6ab1cb7f3ffe1687c41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a5f3ee0c5b51c4d3aa4c6ab1cb7f3ffe1687c41", "html_url": "https://github.com/rust-lang/rust/commit/2a5f3ee0c5b51c4d3aa4c6ab1cb7f3ffe1687c41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a5f3ee0c5b51c4d3aa4c6ab1cb7f3ffe1687c41/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5092c6b01acbff60935a5e6d84f83b6c73c1ca5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5092c6b01acbff60935a5e6d84f83b6c73c1ca5e", "html_url": "https://github.com/rust-lang/rust/commit/5092c6b01acbff60935a5e6d84f83b6c73c1ca5e"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "168570df464e4a27f0acc5e5f69df76c3cd24502", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2a5f3ee0c5b51c4d3aa4c6ab1cb7f3ffe1687c41/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a5f3ee0c5b51c4d3aa4c6ab1cb7f3ffe1687c41/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=2a5f3ee0c5b51c4d3aa4c6ab1cb7f3ffe1687c41", "patch": "@@ -146,9 +146,7 @@ pub(crate) fn link_binary(sess: &Session,\n     let mut out_filenames = Vec::new();\n     for &crate_type in sess.crate_types.borrow().iter() {\n         // Ignore executable crates if we have -Z no-trans, as they will error.\n-        if (sess.opts.debugging_opts.no_trans ||\n-            !sess.opts.output_types.should_trans()) &&\n-           crate_type == config::CrateTypeExecutable {\n+        if sess.opts.debugging_opts.no_trans && crate_type == config::CrateTypeExecutable {\n             continue;\n         }\n "}]}