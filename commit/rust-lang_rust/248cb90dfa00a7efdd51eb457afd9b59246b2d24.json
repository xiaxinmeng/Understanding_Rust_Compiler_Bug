{"sha": "248cb90dfa00a7efdd51eb457afd9b59246b2d24", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0OGNiOTBkZmEwMGE3ZWZkZDUxZWI0NTdhZmQ5YjU5MjQ2YjJkMjQ=", "commit": {"author": {"name": "Ziad Hatahet", "email": "hatahet@gmail.com", "date": "2013-11-21T19:31:58Z"}, "committer": {"name": "Ziad Hatahet", "email": "hatahet@gmail.com", "date": "2013-11-21T19:31:58Z"}, "message": "`std::ptr::read_ptr` now takes `*T` instead of `*mut T`\n\nCloses #10579", "tree": {"sha": "823114ae018b9861b763da1900090ce7028c1caf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/823114ae018b9861b763da1900090ce7028c1caf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/248cb90dfa00a7efdd51eb457afd9b59246b2d24", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/248cb90dfa00a7efdd51eb457afd9b59246b2d24", "html_url": "https://github.com/rust-lang/rust/commit/248cb90dfa00a7efdd51eb457afd9b59246b2d24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/248cb90dfa00a7efdd51eb457afd9b59246b2d24/comments", "author": {"login": "hatahet", "id": 877713, "node_id": "MDQ6VXNlcjg3NzcxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/877713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hatahet", "html_url": "https://github.com/hatahet", "followers_url": "https://api.github.com/users/hatahet/followers", "following_url": "https://api.github.com/users/hatahet/following{/other_user}", "gists_url": "https://api.github.com/users/hatahet/gists{/gist_id}", "starred_url": "https://api.github.com/users/hatahet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hatahet/subscriptions", "organizations_url": "https://api.github.com/users/hatahet/orgs", "repos_url": "https://api.github.com/users/hatahet/repos", "events_url": "https://api.github.com/users/hatahet/events{/privacy}", "received_events_url": "https://api.github.com/users/hatahet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hatahet", "id": 877713, "node_id": "MDQ6VXNlcjg3NzcxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/877713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hatahet", "html_url": "https://github.com/hatahet", "followers_url": "https://api.github.com/users/hatahet/followers", "following_url": "https://api.github.com/users/hatahet/following{/other_user}", "gists_url": "https://api.github.com/users/hatahet/gists{/gist_id}", "starred_url": "https://api.github.com/users/hatahet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hatahet/subscriptions", "organizations_url": "https://api.github.com/users/hatahet/orgs", "repos_url": "https://api.github.com/users/hatahet/repos", "events_url": "https://api.github.com/users/hatahet/events{/privacy}", "received_events_url": "https://api.github.com/users/hatahet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "760942d7d2a0701f526a5bc634419df7a1e941fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/760942d7d2a0701f526a5bc634419df7a1e941fe", "html_url": "https://github.com/rust-lang/rust/commit/760942d7d2a0701f526a5bc634419df7a1e941fe"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "9f60c3a32b266717b6c0162643c974a44fe8efb2", "filename": "src/libstd/ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/248cb90dfa00a7efdd51eb457afd9b59246b2d24/src%2Flibstd%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/248cb90dfa00a7efdd51eb457afd9b59246b2d24/src%2Flibstd%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fptr.rs?ref=248cb90dfa00a7efdd51eb457afd9b59246b2d24", "patch": "@@ -155,7 +155,7 @@ pub unsafe fn replace_ptr<T>(dest: *mut T, mut src: T) -> T {\n  * Reads the value from `*src` and returns it. Does not copy `*src`.\n  */\n #[inline(always)]\n-pub unsafe fn read_ptr<T>(src: *mut T) -> T {\n+pub unsafe fn read_ptr<T>(src: *T) -> T {\n     let mut tmp: T = intrinsics::uninit();\n     copy_nonoverlapping_memory(&mut tmp, src, 1);\n     tmp\n@@ -168,7 +168,7 @@ pub unsafe fn read_ptr<T>(src: *mut T) -> T {\n #[inline(always)]\n pub unsafe fn read_and_zero_ptr<T>(dest: *mut T) -> T {\n     // Copy the data out from `dest`:\n-    let tmp = read_ptr(dest);\n+    let tmp = read_ptr(&*dest);\n \n     // Now zero out `dest`:\n     zero_memory(dest, 1);"}, {"sha": "079d8adae58e2161a9535464558861d6d14bf70c", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/248cb90dfa00a7efdd51eb457afd9b59246b2d24/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/248cb90dfa00a7efdd51eb457afd9b59246b2d24/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=248cb90dfa00a7efdd51eb457afd9b59246b2d24", "patch": "@@ -1527,7 +1527,7 @@ impl<T> OwnedVector<T> for ~[T] {\n                 let valptr = ptr::to_mut_unsafe_ptr(&mut self[ln - 1u]);\n                 unsafe {\n                     raw::set_len(self, ln - 1u);\n-                    Some(ptr::read_ptr(valptr))\n+                    Some(ptr::read_ptr(&*valptr))\n                 }\n             }\n         }"}]}